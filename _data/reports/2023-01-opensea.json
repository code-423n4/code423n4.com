{
  "circa": {
    "title": "OpenSea Seaport 1.2 contest",
    "sponsor": "OpenSea",
    "slug": "2023-01-opensea",
    "date": "2023-03-21",
    "findings": "https://github.com/code-423n4/2023-01-opensea-findings/issues",
    "contest": 201
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the OpenSea Seaport 1.2 smart contract system written in Solidity. The audit contest took place between January 13—January 23 2023.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>23 Wardens contributed reports to the OpenSea Seaport 1.2 contest:</p>\n<ol>\n<li><a href=\"https://github.com/alex-ppg\">0xsomeone</a></li>\n<li><a href=\"https://twitter.com/0xSmartContract\">0xSmartContract</a></li>\n<li>ABA</li>\n<li><a href=\"https://chom.dev\">Chom</a></li>\n<li><a href=\"https://twitter.com/BowTiedDravee\">Dravee</a></li>\n<li>IllIllI</li>\n<li>Josiah</li>\n<li>RaymondFam</li>\n<li><a href=\"https://rickardlarsson22.github.io/\">Rickard</a></li>\n<li>Rolezn</li>\n<li>atharvasama</li>\n<li>brgltd</li>\n<li>btk</li>\n<li><a href=\"https://twitter.com/c3ph_\">c3phas</a></li>\n<li>chaduke</li>\n<li>charlesjhongc</li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li>delfin454000</li>\n<li>horsefacts</li>\n<li>karanctf</li>\n<li><a href=\"https://twitter.com/nadin20678790\">nadin</a></li>\n<li><a href=\"https://twitter.com/andyfeili\">oyc_109</a></li>\n<li><a href=\"https://medium.com/@saneryee-studio\">saneryee</a></li>\n</ol>\n<p>This contest was judged by <a href=\"https://github.com/HickupHH3\">hickuphh3</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/liveactionllama\">liveactionllama</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 1 unique vulnerabilities. Of these vulnerabilities, 0 received a risk rating in the category of HIGH severity and 1 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 17 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 9 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2023-01-opensea\">C4 OpenSea Seaport 1.2 contest repository</a>, and is composed of 54 smart contracts written in the Solidity programming language and includes 10,087 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities based on three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>For more information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>, specifically our section on <a href=\"https://docs.code4rena.com/awarding/judging-criteria/severity-categorization\">Severity Categorization</a>.</p>\n<h1 id=\"medium-risk-findings-1\" style=\"position:relative;\"><a href=\"#medium-risk-findings-1\" aria-label=\"medium risk findings 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (1)</h1>\n<h2 id=\"m-01-incorrect-encoding-of-order-hashes\" style=\"position:relative;\"><a href=\"#m-01-incorrect-encoding-of-order-hashes\" aria-label=\"m 01 incorrect encoding of order hashes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/61\">[M-01] Incorrect Encoding of Order Hashes</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/61\">0xsomeone</a></em></p>\n<p><a href=\"https://github.com/ProjectOpenSea/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/ConsiderationEncoder.sol#L569-L574\">contracts/lib/ConsiderationEncoder.sol#L569-L574</a></p>\n<p>The order hashes are incorrectly encoded during the <code>_encodeOrderHashes</code> mechanism, causing functions such as <code>_encodeRatifyOrder</code> and <code>_encodeValidateOrder</code> to misbehave.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The order hashes encoding mechanism appears to be incorrect as the instructions <code>srcLength.next().offset(headAndTailSize)</code> will cause the pointer to move to the end of the array (i.e. <code>next()</code> skips the array’s <code>length</code> bitwise entry and <code>offset(headAndTailSize)</code> causes the pointer to point right after the last element). In turn, this will cause the <code>0x04</code> precompile within <code>MemoryPointerLib::copy</code> to handle the data incorrectly and attempt to copy data from the <code>srcLength.next().offset(headAndTailSize)</code> pointer onwards which will be un-allocated space and thus lead to incorrect bytes being copied.</p>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Manual inspection of the codebase, documentation of the ETH precompiles, and the Solidity compiler documentation.</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We advise the <code>offset</code> instruction to be omitted as the current implementation will copy from unsafe memory space, causing data corruption in the worst-case scenario and incorrect order hashes being specified in the encoded payload. As an additional point, the <code>_encodeOrderHashes</code> will fail execution if the array of order hashes is empty as a <code>headAndTailSize</code> of <code>0</code> will cause the <code>MemoryPointerLib::copy</code> function to fail as the precompile would yield a <code>returndatasize()</code> of <code>0</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/61#issuecomment-1402842707\">0age (OpenSea) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>This is a confirmed issue (though categorizing it as high-risk seems unfair. At worst, it just means that zones and contract offerers wouldn’t be able to rely on the orderHashes array) and has been fixed here: <a href=\"https://github.com/ProjectOpenSea/seaport/pull/918\">https://github.com/ProjectOpenSea/seaport/pull/918</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/61#issuecomment-1403148862\">hickuphh3 (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Agree that high severity is overstated. Given that it would affect upstream functions (<code>_encodeRatifyOrder</code> and <code>_encodeValidateOrder</code> is called by a few other functions like <code>_assertRestrictedAdvancedOrderValidity()</code>), medium severity would be more appropriate.</p>\n<blockquote>\n<p>2 — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.</p>\n</blockquote>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 17 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/78\">report highlighted below</a> by <strong>horsefacts</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/97\">delfin454000</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/95\">Josiah</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/94\">Chom</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/93\">charlesjhongc</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/92\">nadin</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/86\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/68\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/66\">csanuragjain</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/65\">brgltd</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/63\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/54\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/36\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/25\">Rickard</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/21\">ABA</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/18\">btk</a>, and <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/6\">oyc_109</a>.</em></p>\n<h2 id=\"n-01-replace-eth-with-native-token\" style=\"position:relative;\"><a href=\"#n-01-replace-eth-with-native-token\" aria-label=\"n 01 replace eth with native token permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-01] Replace “ETH” with “Native token”</h2>\n<p>Seaport 1.2. has mostly replaced references to “ETH” in comments and function names with “native token,” but there are a few exceptions. Consider replacing the following usages of “ETH” with “native token” or similar.</p>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/Seaport.sol#L77-L83\"><code>Seaport.sol</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> * @</span><span class=\"mtk12\">notice</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Seaport</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\"> </span><span class=\"mtk12\">generalized</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ETH</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC1155</span><span class=\"mtk1\"> </span><span class=\"mtk12\">marketplace</span><span class=\"mtk1\"> </span><span class=\"mtk15\">with</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *         </span><span class=\"mtk12\">lightweight</span><span class=\"mtk1\"> </span><span class=\"mtk12\">methods</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">common</span><span class=\"mtk1\"> </span><span class=\"mtk12\">routes</span><span class=\"mtk1\"> </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">well</span><span class=\"mtk1\"> </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">more</span><span class=\"mtk1\"> </span><span class=\"mtk10\">flexible</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *         </span><span class=\"mtk12\">methods</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">composing</span><span class=\"mtk1\"> </span><span class=\"mtk12\">advanced</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orders</span><span class=\"mtk1\"> </span><span class=\"mtk12\">or</span><span class=\"mtk1\"> </span><span class=\"mtk12\">groups</span><span class=\"mtk1\"> </span><span class=\"mtk4\">of</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orders</span><span class=\"mtk1\">. </span><span class=\"mtk12\">Each</span><span class=\"mtk1\"> </span><span class=\"mtk12\">order</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *         </span><span class=\"mtk12\">contains</span><span class=\"mtk1\"> </span><span class=\"mtk12\">an</span><span class=\"mtk1\"> </span><span class=\"mtk12\">arbitrary</span><span class=\"mtk1\"> </span><span class=\"mtk12\">number</span><span class=\"mtk1\"> </span><span class=\"mtk4\">of</span><span class=\"mtk1\"> </span><span class=\"mtk12\">items</span><span class=\"mtk1\"> </span><span class=\"mtk12\">that</span><span class=\"mtk1\"> </span><span class=\"mtk12\">may</span><span class=\"mtk1\"> </span><span class=\"mtk12\">be</span><span class=\"mtk1\"> </span><span class=\"mtk11\">spent</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;offer&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *         </span><span class=\"mtk12\">along</span><span class=\"mtk1\"> </span><span class=\"mtk15\">with</span><span class=\"mtk1\"> </span><span class=\"mtk12\">an</span><span class=\"mtk1\"> </span><span class=\"mtk12\">arbitrary</span><span class=\"mtk1\"> </span><span class=\"mtk12\">number</span><span class=\"mtk1\"> </span><span class=\"mtk4\">of</span><span class=\"mtk1\"> </span><span class=\"mtk12\">items</span><span class=\"mtk1\"> </span><span class=\"mtk12\">that</span><span class=\"mtk1\"> </span><span class=\"mtk12\">must</span><span class=\"mtk1\"> </span><span class=\"mtk12\">be</span><span class=\"mtk1\"> </span><span class=\"mtk12\">received</span><span class=\"mtk1\"> </span><span class=\"mtk12\">back</span><span class=\"mtk1\"> </span><span class=\"mtk12\">by</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *         </span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indicated</span><span class=\"mtk1\"> </span><span class=\"mtk11\">recipients</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;consideration&quot;</span><span class=\"mtk1\">).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> */</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/interfaces/SeaportInterface.sol#L19-L23\"><code>SeaportInterface.sol</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> * @</span><span class=\"mtk12\">notice</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Seaport</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\"> </span><span class=\"mtk12\">generalized</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ETH</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC1155</span><span class=\"mtk1\"> </span><span class=\"mtk12\">marketplace</span><span class=\"mtk1\">. </span><span class=\"mtk12\">It</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *         </span><span class=\"mtk12\">minimizes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">external</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calls</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\"> </span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk12\">greatest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">extent</span><span class=\"mtk1\"> </span><span class=\"mtk12\">possible</span><span class=\"mtk1\"> </span><span class=\"mtk12\">and</span><span class=\"mtk1\"> </span><span class=\"mtk12\">provides</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *         </span><span class=\"mtk12\">lightweight</span><span class=\"mtk1\"> </span><span class=\"mtk12\">methods</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">common</span><span class=\"mtk1\"> </span><span class=\"mtk12\">routes</span><span class=\"mtk1\"> </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">well</span><span class=\"mtk1\"> </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">more</span><span class=\"mtk1\"> </span><span class=\"mtk10\">flexible</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *         </span><span class=\"mtk12\">methods</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">composing</span><span class=\"mtk1\"> </span><span class=\"mtk12\">advanced</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orders</span><span class=\"mtk1\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/Consideration.sol#L34-L40\"><code>Consideration.sol</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> * @</span><span class=\"mtk12\">notice</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Consideration</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\"> </span><span class=\"mtk12\">generalized</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ETH</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC1155</span><span class=\"mtk1\"> </span><span class=\"mtk12\">marketplace</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *         </span><span class=\"mtk12\">that</span><span class=\"mtk1\"> </span><span class=\"mtk12\">provides</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lightweight</span><span class=\"mtk1\"> </span><span class=\"mtk12\">methods</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">common</span><span class=\"mtk1\"> </span><span class=\"mtk12\">routes</span><span class=\"mtk1\"> </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">well</span><span class=\"mtk1\"> </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">more</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *         </span><span class=\"mtk12\">flexible</span><span class=\"mtk1\"> </span><span class=\"mtk12\">methods</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">composing</span><span class=\"mtk1\"> </span><span class=\"mtk12\">advanced</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orders</span><span class=\"mtk1\"> </span><span class=\"mtk12\">or</span><span class=\"mtk1\"> </span><span class=\"mtk12\">groups</span><span class=\"mtk1\"> </span><span class=\"mtk4\">of</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orders</span><span class=\"mtk1\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *         </span><span class=\"mtk12\">Each</span><span class=\"mtk1\"> </span><span class=\"mtk12\">order</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contains</span><span class=\"mtk1\"> </span><span class=\"mtk12\">an</span><span class=\"mtk1\"> </span><span class=\"mtk12\">arbitrary</span><span class=\"mtk1\"> </span><span class=\"mtk12\">number</span><span class=\"mtk1\"> </span><span class=\"mtk4\">of</span><span class=\"mtk1\"> </span><span class=\"mtk12\">items</span><span class=\"mtk1\"> </span><span class=\"mtk12\">that</span><span class=\"mtk1\"> </span><span class=\"mtk12\">may</span><span class=\"mtk1\"> </span><span class=\"mtk12\">be</span><span class=\"mtk1\"> </span><span class=\"mtk12\">spent</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *         (</span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;offer&quot;</span><span class=\"mtk1\">) </span><span class=\"mtk12\">along</span><span class=\"mtk1\"> </span><span class=\"mtk15\">with</span><span class=\"mtk1\"> </span><span class=\"mtk12\">an</span><span class=\"mtk1\"> </span><span class=\"mtk12\">arbitrary</span><span class=\"mtk1\"> </span><span class=\"mtk12\">number</span><span class=\"mtk1\"> </span><span class=\"mtk4\">of</span><span class=\"mtk1\"> </span><span class=\"mtk12\">items</span><span class=\"mtk1\"> </span><span class=\"mtk12\">that</span><span class=\"mtk1\"> </span><span class=\"mtk12\">must</span><span class=\"mtk1\"> </span><span class=\"mtk12\">be</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *         </span><span class=\"mtk12\">received</span><span class=\"mtk1\"> </span><span class=\"mtk12\">back</span><span class=\"mtk1\"> </span><span class=\"mtk12\">by</span><span class=\"mtk1\"> </span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indicated</span><span class=\"mtk1\"> </span><span class=\"mtk11\">recipients</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;consideration&quot;</span><span class=\"mtk1\">).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> */</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/interfaces/ConsiderationInterface.sol#L19-L23\"><code>ConsiderationInterface.sol</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> * @</span><span class=\"mtk12\">notice</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Consideration</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\"> </span><span class=\"mtk12\">generalized</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ETH</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC1155</span><span class=\"mtk1\"> </span><span class=\"mtk12\">marketplace</span><span class=\"mtk1\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *         </span><span class=\"mtk12\">It</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minimizes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">external</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calls</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\"> </span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk12\">greatest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">extent</span><span class=\"mtk1\"> </span><span class=\"mtk12\">possible</span><span class=\"mtk1\"> </span><span class=\"mtk12\">and</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *         </span><span class=\"mtk12\">provides</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lightweight</span><span class=\"mtk1\"> </span><span class=\"mtk12\">methods</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">common</span><span class=\"mtk1\"> </span><span class=\"mtk12\">routes</span><span class=\"mtk1\"> </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">well</span><span class=\"mtk1\"> </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">more</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *         </span><span class=\"mtk12\">flexible</span><span class=\"mtk1\"> </span><span class=\"mtk12\">methods</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">composing</span><span class=\"mtk1\"> </span><span class=\"mtk12\">advanced</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orders</span><span class=\"mtk1\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> *</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/interfaces/ConsiderationEventsAndErrors.sol#L205-L210\"><code>ConsiderationEventsAndErrors.sol</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Revert with an error when attempting to fulfill an order with an</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     *      offer for ETH outside of matching orders.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">error</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidNativeOfferItem</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/BasicOrderFulfiller.sol#L90-L92\"><code>BasicOrderFulfiller#_validateAndFulfillBasicOrder</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// If route &gt; 1 additionalRecipient items are ERC20 (1) else Eth (0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            additionalRecipientsItemType := </span><span class=\"mtk11\">gt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">route</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/BasicOrderFulfiller.sol#L140-L142\"><code>BasicOrderFulfiller#_validateAndFulfillBasicOrder</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// If route &gt; 2, receivedItemType is route - 2. If route is 2,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// the receivedItemType is ERC20 (1). Otherwise, it is Eth (0).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                receivedItemType := </span><span class=\"mtk11\">byte</span><span class=\"mtk1\">(</span><span class=\"mtk12\">route</span><span class=\"mtk1\">, </span><span class=\"mtk12\">BasicOrder_receivedItemByteMap</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/Executor.sol#L239-L242\"><code>Executor#_transferNativeTokens</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// Transfer the ETH and store if it succeeded or not.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            success := </span><span class=\"mtk11\">call</span><span class=\"mtk1\">(</span><span class=\"mtk11\">gas</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/interfaces/ConsiderationEventsAndErrors.sol#L138-L143\"><code>ConsiderationEventsAndErrors#InsufficientEtherSupplied</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Revert with an error when insufficient ether is supplied as part of</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     *      msg.value when fulfilling orders.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">error</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InsufficientEtherSupplied</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/ConsiderationConstants.sol#L833-L841\"><code>ConsiderationConstants.sol</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/*</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> *  error InsufficientEtherSupplied()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> *    - Defined in ConsiderationEventsAndErrors.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> *  Memory layout:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> *    - 0x00: Left-padded selector (data begins at 0x1c)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * Revert buffer is memory[0x1c:0x20]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">InsufficientEtherSupplied_error_selector</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0x1a783b8d</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">InsufficientEtherSupplied_error_length</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0x04</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/ConsiderationErrors.sol#L77-L90\"><code>ConsiderationErrors.sol</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Reverts the current transaction with an &quot;InsufficientEtherSupplied&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> *      error message.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_revertInsufficientEtherSupplied</span><span class=\"mtk1\">() </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Store left-padded selector with push4 (reduces bytecode),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// mem[28:32] = selector</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">mstore</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">InsufficientEtherSupplied_error_selector</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// revert(abi.encodeWithSignature(&quot;InsufficientEtherSupplied()&quot;))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Error_selector_offset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">InsufficientEtherSupplied_error_length</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/interfaces/ConsiderationEventsAndErrors.sol#L145-L148\"><code>ConsiderationEventsAndErrors.sol</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Revert with an error when an ether transfer reverts.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">error</span><span class=\"mtk1\"> </span><span class=\"mtk11\">EtherTransferGenericFailure</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/ConsiderationConstants.sol#L843-L855\"><code>ConsiderationConstants.sol</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/*</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> *  error EtherTransferGenericFailure(address account, uint256 amount)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> *    - Defined in ConsiderationEventsAndErrors.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> *  Memory layout:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> *    - 0x00: Left-padded selector (data begins at 0x1c)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> *    - 0x20: account</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> *    - 0x40: amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * Revert buffer is memory[0x1c:0x60]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">EtherTransferGenericFailure_error_selector</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0x470c7c1d</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">EtherTransferGenericFailure_error_account_ptr</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0x20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">EtherTransferGenericFailure_error_amount_ptr</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0x40</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">EtherTransferGenericFailure_error_length</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0x44</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/Executor.sol#L249-L263\"><code>Executor.sol</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// Otherwise, revert with a generic error message.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// Store left-padded selector with push4, mem[28:32] = selector</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">mstore</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">EtherTransferGenericFailure_error_selector</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">mstore</span><span class=\"mtk1\">(</span><span class=\"mtk12\">EtherTransferGenericFailure_error_account_ptr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">mstore</span><span class=\"mtk1\">(</span><span class=\"mtk12\">EtherTransferGenericFailure_error_amount_ptr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// revert(abi.encodeWithSignature(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">//   &quot;EtherTransferGenericFailure(address,uint256)&quot;, to, amount)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">Error_selector_offset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">EtherTransferGenericFailure_error_length</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span></code></pre>\n<h2 id=\"n-02-extract-or-use-named-constants\" style=\"position:relative;\"><a href=\"#n-02-extract-or-use-named-constants\" aria-label=\"n 02 extract or use named constants permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-02] Extract or use named constants</h2>\n<p>The Seaport codebase has done an impressive job avoiding “magic numbers” and using named constants, which makes inline assembly much easier to read, understand, and verify. However, there are a few remaining numbers that could be replaced with more readable named constants.</p>\n<p>The <code>malloc</code> free function in <code>PointerLibraries.sol</code> can use <code>FreeMemoryPointerSlot</code> in place of <code>0x40</code>:</p>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/helpers/PointerLibraries.sol#L24-L33\"><code>PointerLibraries#malloc</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @dev Allocates `size` bytes in memory by increasing the free memory pointer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">///    and returns the memory pointer to the first byte of the allocated region.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// (Free functions cannot have visibility.)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// solhint-disable-next-line func-visibility</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">malloc</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">size</span><span class=\"mtk1\">) </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">MemoryPointer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mPtr</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        mPtr := </span><span class=\"mtk11\">mload</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0x40</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">mstore</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0x40</span><span class=\"mtk1\">, </span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mPtr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">size</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Calldata readers in <code>PointerLibraries.sol</code> can use <code>OneWord</code> in place of <code>0x20</code>:</p>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/helpers/PointerLibraries.sol#L1196-L1204\"><code>CallDataReaders#readBool</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev Reads the bool at `rdPtr` in returndata.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">readBool</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ReturndataPointer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rdPtr</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">returndatacopy</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rdPtr</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0x20</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            value := </span><span class=\"mtk11\">mload</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>(Note that <code>returndatacopy(0, rdPtr, 0x20)</code> is repeated in every <code>CallDataReaders#readType</code> function.)</p>\n<p><code>CalldataPointerLib#next</code> can use <code>OneWord</code> in place of <code>32</code>:</p>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/helpers/PointerLibraries.sol#L96-L103\"><code>CalldataPointerLib#next</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev Returns the calldata pointer one word after `cdPtr`.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">next</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">CalldataPointer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">cdPtr</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">CalldataPointer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">cdPtrNext</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            cdPtrNext := </span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cdPtr</span><span class=\"mtk1\">, </span><span class=\"mtk7\">32</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Similar usages:</p>\n<ul>\n<li><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/helpers/PointerLibraries.sol#L257-L264\"><code>MemoryPointerLib#next</code></a></li>\n<li><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/helpers/PointerLibraries.sol#L177-L184\"><code>ReturnDataPointerLib#next</code></a></li>\n</ul>\n<p><code>OrderCombiner</code> iterates in increments of 32, which could be replaced with <code>OneWord</code>:</p>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/OrderCombiner.sol#L219-L220\"><code>OrderCombiner</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// Determine the memory offset to terminate on during loops.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">terminalMemoryOffset</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalOrders</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) * </span><span class=\"mtk7\">32</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/OrderCombiner.sol#L229-L234\"><code>OrderCombiner</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// Iterate over each order.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">32</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">terminalMemoryOffset</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">32</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// Retrieve order using assembly to bypass out-of-range check.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    advancedOrder := </span><span class=\"mtk11\">mload</span><span class=\"mtk1\">(</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">advancedOrders</span><span class=\"mtk1\">, </span><span class=\"mtk12\">i</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span></code></pre>\n<h2 id=\"n-03-fragile-check-for-contract-order-type\" style=\"position:relative;\"><a href=\"#n-03-fragile-check-for-contract-order-type\" aria-label=\"n 03 fragile check for contract order type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-03] Fragile check for contract order type</h2>\n<p>The <code>OrderType</code> enum defines five order types. Only one of these represents contract orders:</p>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/ConsiderationEnums.sol#L5-L20\"><code>ConsiderationEnums.sol</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">enum</span><span class=\"mtk1\"> </span><span class=\"mtk10\">OrderType</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 0: no partial fills, anyone can execute</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">FULL_OPEN</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 1: partial fills supported, anyone can execute</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">PARTIAL_OPEN</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 2: no partial fills, only offerer or zone can execute</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">FULL_RESTRICTED</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 3: partial fills supported, only offerer or zone can execute</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">PARTIAL_RESTRICTED</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 4: contract order type</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">CONTRACT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/OrderCombiner.sol#L286-L295\"><code>OrderCombiner#_validateOrdersAndPrepareToFulfill</code></a> defines non-contract orders as any order with a type less than 4:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Create a variable indicating if the order is not a</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// contract order. Cache in scratch space to avoid stack</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// depth errors.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">OrderType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orderType</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">advancedOrder</span><span class=\"mtk1\">.</span><span class=\"mtk12\">parameters</span><span class=\"mtk1\">.</span><span class=\"mtk12\">orderType</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isNonContract</span><span class=\"mtk1\"> := </span><span class=\"mtk10\">lt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">orderType</span><span class=\"mtk1\">, 4)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk11\">mstore</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">isNonContract</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span></code></pre>\n<p>This is fine for now, but could be fragile: if an additional type is added in the future, it may break this implicit assumption. Consider checking for an exact match against order type 4, which is more robust:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// Create a variable indicating if the order is not a</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// contract order. Cache in scratch space to avoid stack</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk3\">// depth errors.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">OrderType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orderType</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">advancedOrder</span><span class=\"mtk1\">.</span><span class=\"mtk12\">parameters</span><span class=\"mtk1\">.</span><span class=\"mtk12\">orderType</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isNonContract</span><span class=\"mtk1\"> := </span><span class=\"mtk10\">iszero</span><span class=\"mtk1\">(</span><span class=\"mtk10\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">orderType</span><span class=\"mtk1\">, 4))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk11\">mstore</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">isNonContract</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/OrderFulfiller.sol#L258-L271\"><code>OrderFulfiller#_applyFractionsAndTransferEach</code></a> performs a similar check using <code>lt(orderType, 4)</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// If non-contract order has native offer items, throw InvalidNativeOfferItem.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">OrderType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orderType</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">orderParameters</span><span class=\"mtk1\">.</span><span class=\"mtk12\">orderType</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">invalidNativeOfferItem</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    invalidNativeOfferItem := </span><span class=\"mtk11\">and</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk11\">lt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">orderType</span><span class=\"mtk1\">, </span><span class=\"mtk7\">4</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk12\">anyNativeItems</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">invalidNativeOfferItem</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">_revertInvalidNativeOfferItem</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span></code></pre>\n<h2 id=\"n-04-inconsistent-use-of-hex-vs-decimal-values\" style=\"position:relative;\"><a href=\"#n-04-inconsistent-use-of-hex-vs-decimal-values\" aria-label=\"n 04 inconsistent use of hex vs decimal values permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-04] Inconsistent use of hex vs. decimal values</h2>\n<p>Almost all values except for bit shifts are defined in hex, with the following few exceptions:</p>\n<p><code>CalldataPointerLib</code> uses <code>32</code> rather than <code>0x20</code> in a few places:</p>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/helpers/PointerLibraries.sol#L96-L103\"><code>CalldataPointerLib#next</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev Returns the calldata pointer one word after `cdPtr`.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">next</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">CalldataPointer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">cdPtr</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">CalldataPointer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">cdPtrNext</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            cdPtrNext := </span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cdPtr</span><span class=\"mtk1\">, </span><span class=\"mtk7\">32</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Similar usages:</p>\n<ul>\n<li><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/helpers/PointerLibraries.sol#L257-L264\"><code>MemoryPointerLib#next</code></a></li>\n<li><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/helpers/PointerLibraries.sol#L177-L184\"><code>ReturnDataPointerLib#next</code></a></li>\n</ul>\n<p>Two lengths in <code>ConsiderationConstants</code>:</p>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/ConsiderationConstants.sol#L41-L42\"><code>NameLengthPtr</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">NameLengthPtr</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">77</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/ConsiderationConstants.sol#L76-L77\"><code>Selector_length</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Selector_length</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>Precompile addresses:</p>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/helpers/PointerLibraries.sol#L21-L22\"><code>PointerLibraries#IdentityPrecompileAddress</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">IdentityPrecompileAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/ConsiderationConstants.sol#L244-L245\"><code>ConsiderationConstants.sol</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">IdentityPrecompile</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">4</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/ConsiderationConstants.sol#L439-L440\"><code>ConsiderationConstants.sol</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Ecrecover_precompile</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>Consider converting all of these to hex to enhance readability.</p>\n<h2 id=\"n-05-custom-comment-typos\" style=\"position:relative;\"><a href=\"#n-05-custom-comment-typos\" aria-label=\"n 05 custom comment typos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-05] Custom comment typos</h2>\n<p>There are two <code>@custom:name</code> comments on functions in <code>Consideration.sol</code> that are meant to annotate unnamed input arguments, but are incorrectly annotating the function’s return type:</p>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/Consideration.sol#L615-L629\"><code>Consideration#validate</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">validate</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Order</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">             * @custom:name orders</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">             */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk3\">/* validated */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_validate</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_toOrdersReturnType</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_decodeOrders</span><span class=\"mtk1\">)(</span><span class=\"mtk12\">CalldataStart</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pptr</span><span class=\"mtk1\">()));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/Consideration.sol#L651-L674\"><code>Consideration#getOrderHash</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getOrderHash</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">OrderComponents</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">             * @custom:name order</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">             */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orderHash</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">CalldataPointer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orderPointer</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">CalldataStart</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pptr</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Derive order hash by supplying order parameters along with counter.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">orderHash</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_deriveOrderHash</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_toOrderParametersReturnType</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_decodeOrderComponentsAsOrderParameters</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            )(</span><span class=\"mtk12\">orderPointer</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// Read order counter</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">orderPointer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">offset</span><span class=\"mtk1\">(</span><span class=\"mtk12\">OrderParameters_counter_offset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">readUint256</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"n-06-almostoneword-is-confusing\" style=\"position:relative;\"><a href=\"#n-06-almostoneword-is-confusing\" aria-label=\"n 06 almostoneword is confusing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-06] <code>AlmostOneWord</code> is confusing</h2>\n<p>I find the <code>AlmostOneWord</code> constant, which is equal to 31 bytes, pretty confusing in context, since it’s not clear from the name what it means to be equal to “almost one word.” Consider whether <code>ThirtyOneBytes</code> or similar might be a clearer name.</p>\n<h2 id=\"n-07-typos-in-comments\" style=\"position:relative;\"><a href=\"#n-07-typos-in-comments\" aria-label=\"n 07 typos in comments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-07] Typos in comments</h2>\n<p>The default order numerator + denominator values are <em>always</em> 1 and 1, so this <code>e.g.</code> in <a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/ConsiderationDecoder.sol#L351-L353\"><code>ConsiderationDecoder.sol</code></a> should be an <code>i.e.</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Write default Order numerator and denominator values (e.g. 1/1).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mPtr</span><span class=\"mtk1\">.</span><span class=\"mtk11\">offset</span><span class=\"mtk1\">(</span><span class=\"mtk12\">AdvancedOrder_numerator_offset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">write</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mPtr</span><span class=\"mtk1\">.</span><span class=\"mtk11\">offset</span><span class=\"mtk1\">(</span><span class=\"mtk12\">AdvancedOrder_denominator_offset</span><span class=\"mtk1\">).</span><span class=\"mtk11\">write</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"n-08-duplicated-constants\" style=\"position:relative;\"><a href=\"#n-08-duplicated-constants\" aria-label=\"n 08 duplicated constants permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-08] Duplicated constants</h2>\n<p><a href=\"https://github.com/horsefacts/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/TypehashDirectory.sol#L20-L24\"><code>TypeHashDirectory</code></a> defines several constants, like <code>OneWord</code>, <code>OneWordShift</code>, <code>AlmostOneWord</code>, and <code>FreeMemoryPointerSlot</code> that are defined elsewhere in the codebase. Consider extracting these to a shared constants file:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">OneWord</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0x20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">OneWordShift</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">5</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">AlmostOneWord</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0x1f</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">FreeMemoryPointerSlot</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0x40</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/78#issuecomment-1401115226\">0age (OpenSea) commented</a>:</strong></p>\n<blockquote>\n<p>This is a high-quality QA report 👍 </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/78#issuecomment-1403815190\">hickuphh3 (judge) commented</a>:</strong></p>\n<blockquote>\n<p>8 non-criticals, but I think they provide more value than the other QA reports I’ve come across thus far. Hence, it’s worthy of an A grade (+bonus from sponsor for flagging it as high-quality).</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/78#issuecomment-1446881163\">0age (OpenSea) resolved</a>:</strong></p>\n<blockquote>\n<p><strong>[N-01] Replace “ETH” with “Native token”:</strong> <a href=\"https://github.com/ProjectOpenSea/seaport/pull/921\">https://github.com/ProjectOpenSea/seaport/pull/921</a></p>\n<p><strong>[N-02] Extract or use named constants:</strong> <a href=\"https://github.com/ProjectOpenSea/seaport/pull/922\">https://github.com/ProjectOpenSea/seaport/pull/922</a></p>\n<p><strong>[N-03] Fragile check for contract order type:</strong> <a href=\"https://github.com/ProjectOpenSea/seaport/pull/922\">https://github.com/ProjectOpenSea/seaport/pull/922</a></p>\n<p><strong>[N-04] Inconsistent use of hex vs. decimal values:</strong> <a href=\"https://github.com/ProjectOpenSea/seaport/pull/922\">https://github.com/ProjectOpenSea/seaport/pull/922</a></p>\n<p><strong>[N-05] Custom comment typos:</strong> <a href=\"https://github.com/ProjectOpenSea/seaport/pull/924\">https://github.com/ProjectOpenSea/seaport/pull/924</a></p>\n<p><strong>[N-06] AlmostOneWord is confusing:</strong> <a href=\"https://github.com/ProjectOpenSea/seaport/pull/923\">https://github.com/ProjectOpenSea/seaport/pull/923</a></p>\n<p><strong>[N-07] Typos in comments:</strong> <a href=\"https://github.com/ProjectOpenSea/seaport/pull/924\">https://github.com/ProjectOpenSea/seaport/pull/924</a></p>\n<p><strong>[N-08] Duplicated constants:</strong> <a href=\"https://github.com/ProjectOpenSea/seaport/pull/922\">https://github.com/ProjectOpenSea/seaport/pull/922</a></p>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this contest, 9 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/14\">report highlighted below</a> by <strong>Dravee</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/111\">atharvasama</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/102\">c3phas</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/101\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/85\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/82\">karanctf</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/56\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/37\">Rolezn</a>, and <a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/16\">saneryee</a>.</em></p>\n<h2 id=\"overview-1\" style=\"position:relative;\"><a href=\"#overview-1\" aria-label=\"overview 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h2>\n<table>\n<thead>\n<tr>\n<th>Risk Rating</th>\n<th>Number of issues</th>\n<th>Estimated savings</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Gas Issues</td>\n<td>6</td>\n<td>Around 650</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"codebase-impressions\" style=\"position:relative;\"><a href=\"#codebase-impressions\" aria-label=\"codebase impressions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Codebase Impressions</h2>\n<p>The codebase is amazingly optimized, as expected from OpenSea. All storage operations are well done and even take into account the SLOT packings (like <a href=\"https://github.com/ProjectOpenSea/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/OrderValidator.sol#L82-L87\">here where it isn’t obvious and the regular dev would’ve moved the SSTORE into the condition</a> or <a href=\"https://github.com/ProjectOpenSea/seaport/blob/5de7302bc773d9821ba4759e47fc981680911ea0/contracts/lib/OrderValidator.sol#L841\">here where <code>memory</code> would’ve cost more</a>).</p>\n<p>The suggestions down below took some research: everything has been justified with POCs, code and even the opcodes on the stack when necessary.</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<ul>\n<li>[G-01] Using XOR (<code>^</code>) and OR (<code>|</code>) bitwise equivalents</li>\n<li>[G-02] Shift left by 5 instead of multiplying by 32</li>\n<li>[G-03] Using a positive conditional flow to save a NOT opcode</li>\n<li>[G-04] Swap conditions for a better happy path</li>\n<li>[G-05] Optimized operations</li>\n<li>[G-06] Pre-decrements cost less than post-decrements</li>\n</ul>\n<h2 id=\"g-01-using-xor--and-or--bitwise-equivalents\" style=\"position:relative;\"><a href=\"#g-01-using-xor--and-or--bitwise-equivalents\" aria-label=\"g 01 using xor  and or  bitwise equivalents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Using XOR (<code>^</code>) and OR (<code>|</code>) bitwise equivalents</h2>\n<p><em>Estimated savings: 73 gas</em><br>\n<em>Max savings according to <code>yarn profile</code>: 282 gas</em></p>\n<p>On Remix, given only <code>uint256</code> types, the following are logical equivalents, but don’t cost the same amount of gas:</p>\n<ul>\n<li><code>(a != b || c != d || e != f)</code> costs 571</li>\n<li><code>((a ^ b) | (c ^ d) | (e ^ f)) != 0</code> costs 498 (saving 73 gas)</li>\n</ul>\n<p>Consider rewriting as following to save gas:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: FulfillmentApplier.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">93:         if (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 94:             execution.item.itemType != considerationItem.itemType ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 95:             execution.item.token != considerationItem.token ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 96:             execution.item.identifier != considerationItem.identifier</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 94:             ((uint8(execution.item.itemType) ^ uint8(considerationItem.itemType)) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 95:             (uint160(execution.item.token) ^ uint160(considerationItem.token)) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 96:             (execution.item.identifier ^ considerationItem.identifier)) != 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">97:         ) {</span></span></span></code></pre>\n<h3 id=\"logic-poc\" style=\"position:relative;\"><a href=\"#logic-poc\" aria-label=\"logic poc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Logic POC</h3>\n<p>Given 4 variables <code>a</code>, <code>b</code>, <code>c</code> and <code>d</code> represented as such:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &lt;- </span><span class=\"mtk12\">a</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &lt;- </span><span class=\"mtk12\">b</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &lt;- </span><span class=\"mtk12\">c</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &lt;- </span><span class=\"mtk12\">d</span></span></span></code></pre>\n<p>To have <code>a == b</code> means that every <code>0</code> and <code>1</code> match on both variables. Meaning that a XOR (operator <code>^</code>) would evaluate to 0 (<code>(a ^ b) == 0</code>), as it excludes by definition any equalities.<br>\nNow, if <code>a != b</code>, this means that there’s at least somewhere a <code>1</code> and a <code>0</code> not matching between <code>a</code> and <code>b</code>, making <code>(a ^ b) != 0</code>.</p>\n<p>Both formulas are logically equivalent and using the XOR bitwise operator costs actually the same amount of gas:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">xOrEquivalence</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//return a != b; //370</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//return a ^ b != 0; //370</span></span></span></code></pre>\n<p>However, it is much cheaper to use the bitwise OR operator (<code>|</code>) than comparing the truthy or falsy values:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">xOrOrEquivalence</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">c</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">d</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//return (a != b || c != d); // 495</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//return (a ^ b | c ^ d) != 0; // 442</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>These are logically equivalent too, as the OR bitwise operator (<code>|</code>) would result in a <code>1</code> somewhere if any value is not <code>0</code> between the XOR (<code>^</code>) statements, meaning if any XOR (<code>^</code>) statement verifies that its arguments are different.</p>\n<h3 id=\"coded-proof-of-concept\" style=\"position:relative;\"><a href=\"#coded-proof-of-concept\" aria-label=\"coded proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Coded Proof of Concept</h3>\n<p>This little POC (use <code>forge test -m test_XorEq</code>) also proves that the formulas are equivalent:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_XorEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">c</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">d</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">e</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">f</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assert</span><span class=\"mtk1\">((</span><span class=\"mtk12\">a</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">b</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">c</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">d</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">e</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">f</span><span class=\"mtk1\">) == (((</span><span class=\"mtk12\">a</span><span class=\"mtk1\"> ^ </span><span class=\"mtk12\">b</span><span class=\"mtk1\">) | (</span><span class=\"mtk11\">uint160</span><span class=\"mtk1\">(</span><span class=\"mtk12\">c</span><span class=\"mtk1\">) ^ </span><span class=\"mtk11\">uint160</span><span class=\"mtk1\">(</span><span class=\"mtk12\">d</span><span class=\"mtk1\">)) | (</span><span class=\"mtk12\">e</span><span class=\"mtk1\"> ^ </span><span class=\"mtk12\">f</span><span class=\"mtk1\">)) != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Please keep in mind that Foundry cannot currently fuzz <code>Enum</code> types, which is why we’re using <code>uint8</code> types above, which is <a href=\"https://docs.soliditylang.org/en/v0.8.17/types.html#enums\">treated the same according to the Solidity documentation</a>. However, you can try the following test on Remix to make sure, as it will always pass the asserts:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_enum</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assert</span><span class=\"mtk1\">((</span><span class=\"mtk12\">a</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">b</span><span class=\"mtk1\">) == (</span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">a</span><span class=\"mtk1\">) != </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">b</span><span class=\"mtk1\">)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assert</span><span class=\"mtk1\">((</span><span class=\"mtk12\">a</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">b</span><span class=\"mtk1\">) == ((</span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">a</span><span class=\"mtk1\">) ^ </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">b</span><span class=\"mtk1\">)) != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"yarn-profile\" style=\"position:relative;\"><a href=\"#yarn-profile\" aria-label=\"yarn profile permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>yarn profile</h3>\n<p>This is the diff between the contest repo’s <code>yarn profile</code> and the added suggestion’s <code>yarn profile</code>, as <code>yarn profile</code> never changes the “Previous Report” it compares the “Current Report” to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">===============================================================================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| method                         |          min |           max |           avg |       calls |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">===============================================================================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | matchAdvancedOrders            | +12 (+0.01%) |     -12 (0%) | -471 (-0.19%) | +2 (+2.67%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | matchAdvancedOrders            | -40 (-0.02%) |  -92 (-0.03%)| -546 (-0.22%) | +2 (+2.67%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | matchOrders                    | -12 (-0.01%) | -24 (-0.01%) | -234 (-0.09%) | +2 (+1.34%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | matchOrders                    | -20 (-0.01%) | -176 (-0.05%)| -323 (-0.12%) | +2 (+1.34%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | validate                       |        53206 |        83915 |       -1 (0%) |          27 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | validate                       |        53206 |  -24 (-0.03%)|   -7 (-0.01%) |          27 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">===============================================================================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | runtime size                   |        23583 |              |               |             |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | runtime size                   | -13 (-0.06%) |              |               |             |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | init code size                 | +78 (+0.29%) |              |               |             |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | init code size                 | +65 (+0.24%) |              |               |             |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">===============================================================================================</span></span></span></code></pre>\n<p>Added together, the max gas saving counted here is 282.</p>\n<p>Consider applying the suggested equivalence and <strong>add a comment mentioning what this is equivalent to</strong>, as this is less human-readable, but still understandable once it’s been taught.</p>\n<h2 id=\"g-02-shift-left-by-5-instead-of-multiplying-by-32\" style=\"position:relative;\"><a href=\"#g-02-shift-left-by-5-instead-of-multiplying-by-32\" aria-label=\"g 02 shift left by 5 instead of multiplying by 32 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] Shift left by 5 instead of multiplying by 32</h2>\n<p><em>Estimated savings: 22 gas</em><br>\n<em>Max savings according to <code>yarn profile</code>: 98 gas</em></p>\n<p>The equivalent of multiplying by 32 is shifting left by 5. On Remix, a simple POC shows some by replacing one with the other (Optimizer at 10k runs):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">shiftLeft5</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//unchecked { return a * 32; } //346</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//unchecked { return a &lt;&lt; 5; } //344</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>This is due to the fact that the MUL opcode costs 5 gas and the SHL opcode costs 3 gas. Therefore, saving those 2 units of gas is expected.</p>\n<p>Places where this optimization can be applied are as such:</p>\n<ul>\n<li>A simple multiplication by 32:</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: OrderCombiner.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 220:             terminalMemoryOffset = (totalOrders + 1) * 32; //@audit-issue &lt;&lt; 5</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 220:             terminalMemoryOffset = (totalOrders + 1) &lt;&lt; 5;</span></span></span></code></pre>\n<ul>\n<li>Multiplying by the constant <code>OneWord == 0x20</code>, as <code>0x20</code> in hex is actually <code>32</code> in decimals:</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">seaport/contracts/lib/ConsiderationDecoder.sol:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  386:             uint256 tailOffset = arrLength * OneWord;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  386:             uint256 tailOffset = arrLength &lt;&lt; 5;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  427:             uint256 arrSize = (arrLength + 1) * OneWord;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  427:             uint256 arrSize = (arrLength + 1) &lt;&lt; 5;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  485:             uint256 tailOffset = arrLength * OneWord;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  485:             uint256 tailOffset = arrLength &lt;&lt; 5;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  525:             uint256 tailOffset = arrLength * OneWord;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  525:             uint256 tailOffset = arrLength &lt;&lt; 5;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  617:             uint256 tailOffset = arrLength * OneWord;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  617:             uint256 tailOffset = arrLength &lt;&lt; 5;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  660:             uint256 tailOffset = arrLength * OneWord;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  660:             uint256 tailOffset = arrLength &lt;&lt; 5;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  731:             uint256 tailOffset = arrLength * OneWord;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  731:             uint256 tailOffset = arrLength &lt;&lt; 5;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">seaport/contracts/lib/ConsiderationEncoder.sol:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  567:             uint256 headAndTailSize = length * OneWord;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  567:             uint256 headAndTailSize = length &lt;&lt; 5;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  678:             MemoryPointer srcHeadEnd = srcHead.offset(length * OneWord);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  678:             MemoryPointer srcHeadEnd = srcHead.offset(length &lt;&lt; 5);</span></span></span></code></pre>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li>Run <code>forge test -m test_shl5</code>:</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_shl5</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">assume</span><span class=\"mtk1\">(</span><span class=\"mtk12\">a</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">32</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// This is to avoid an overflow</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assert</span><span class=\"mtk1\">((</span><span class=\"mtk12\">a</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">32</span><span class=\"mtk1\">) == (</span><span class=\"mtk12\">a</span><span class=\"mtk1\"> &lt;&lt; </span><span class=\"mtk7\">5</span><span class=\"mtk1\">)); </span><span class=\"mtk3\">// always true </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Consider also adding a constant so that the code can be maintainable (<code>OneWordShiftLength</code>?)</p>\n<h3 id=\"yarn-profile-1\" style=\"position:relative;\"><a href=\"#yarn-profile-1\" aria-label=\"yarn profile 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>yarn profile</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">===============================================================================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| method                         |          min |           max |           avg |       calls |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">===============================================================================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | matchAdvancedOrders            | +12 (+0.01%) |     -12 (0%) | -471 (-0.19%) | +2 (+2.67%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | matchAdvancedOrders            | -84 (-0.05%) |     -12 (0%) | -472 (-0.19%) | +2 (+2.67%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | matchOrders                    | -12 (-0.01%) | -24 (-0.01%) | -234 (-0.09%) | +2 (+1.34%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | matchOrders                    | -12 (-0.01%) | -24 (-0.01%) | -236 (-0.09%) | +2 (+1.34%) |</span></span></span></code></pre>\n<p>Added together, the max gas saving counted here is 98.</p>\n<h2 id=\"g-03-using-a-positive-conditional-flow-to-save-a-not-opcode\" style=\"position:relative;\"><a href=\"#g-03-using-a-positive-conditional-flow-to-save-a-not-opcode\" aria-label=\"g 03 using a positive conditional flow to save a not opcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] Using a positive conditional flow to save a NOT opcode</h2>\n<p><em>Estimated savings: 3 gas</em><br>\n<em>Max savings according to <code>yarn profile</code>: 150 gas</em></p>\n<p>The following function either revert or returns some value. To save some gas (NOT opcode costing 3 gas), switch to a positive statement:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: OrderValidator.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">863:     function _revertOrReturnEmpty(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">864:         bool revertOnInvalid,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">865:         bytes32 contractOrderHash</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">866:     )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">867:         internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">868:         pure</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">869:         returns (bytes32 orderHash, uint256 numerator, uint256 denominator)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">870:     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 871:         if (!revertOnInvalid) { //@audit-issue save the NOT opcode</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 871:         if (revertOnInvalid) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 872:             return (contractOrderHash, 0, 0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 872:             _revertInvalidContractOrder(contractOrderHash);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">873:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">874: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 875:         _revertInvalidContractOrder(contractOrderHash);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 875:         return (contractOrderHash, 0, 0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">876:     }</span></span></span></code></pre>\n<h3 id=\"yarn-profile-2\" style=\"position:relative;\"><a href=\"#yarn-profile-2\" aria-label=\"yarn profile 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>yarn profile</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">==============================================================================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| method                         |          min |          max |           avg |       calls |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">==============================================================================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | cancel                         |        41219 |        58403 |         54019 |          16 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | cancel                         | -12 (-0.03%) |        58403 |  -17 (-0.03%) |          16 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | fulfillAdvancedOrder           | +12 (+0.01%) |       225187 |       -7 (0%) |         182 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | fulfillAdvancedOrder           | +12 (+0.01%) |       225187 |  -11 (-0.01%) |         182 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | fulfillAvailableAdvancedOrders |       149965 |       217284 |       +3 (0%) |          22 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | fulfillAvailableAdvancedOrders |       149965 |       217284 |       -5 (0%) |          22 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | fulfillOrder                   | -12 (-0.01%) |       225067 |       -1 (0%) |         105 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | fulfillOrder                   | -24 (-0.02%) |       225067 |       -3 (0%) |         105 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | matchOrders                    | -12 (-0.01%) | -24 (-0.01%) | -234 (-0.09%) | +2 (+1.34%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | matchOrders                    |       158290 | -24 (-0.01%) | -241 (-0.09%) | +2 (+1.34%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | validate                       |        53206 |        83915 |       -1 (0%) |          27 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | validate                       | -72 (-0.14%) | -48 (-0.06%) |  -18 (-0.02%) |          27 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- ==============================================================================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | runtime size                   |        23583 |              |               |             |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | runtime size                   | -15 (-0.06%) |              |               |             |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | init code size                 | +78 (+0.29%) |              |               |             |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | init code size                 | +63 (+0.24%) |              |               |             |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">==============================================================================================</span></span></span></code></pre>\n<p>Added together, the max gas saving counted here is 150.</p>\n<h2 id=\"g-04-swap-conditions-for-a-better-happy-path\" style=\"position:relative;\"><a href=\"#g-04-swap-conditions-for-a-better-happy-path\" aria-label=\"g 04 swap conditions for a better happy path permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] Swap conditions for a better happy path</h2>\n<p><em>Estimated savings: 6 gas</em><br>\n<em>Max savings according to <code>yarn profile</code>: 38 gas</em></p>\n<p>When a staticcall ends in failure, there will rarely, if ever, be a case of <code>returndatasize()</code> being non-zero. However, most often with a staticcall, <code>success</code> will be true, while the <code>returndatasize()</code> has a higher probability of being 0. The consequence is that, in the current order of conditions, both conditions are more likely to be evaluated. Furthermore, the RETURNDATASIZE opcode costs 2 gas while a MLOAD costs 3 gas. Consider swapping both conditions here for a better happy path:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: PointerLibraries.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">215:         assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">216:             let success := staticcall(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">217:                 gas(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">218:                 IdentityPrecompileAddress,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">219:                 src,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">220:                 size,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">221:                 dst,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">222:                 size</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">223:             )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 224:             if or(iszero(success), iszero(returndatasize())) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 224:             if or(iszero(returndatasize()), iszero(success)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">225:                 revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">226:             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">227:         }</span></span></span></code></pre>\n<h3 id=\"yarn-profile-3\" style=\"position:relative;\"><a href=\"#yarn-profile-3\" aria-label=\"yarn profile 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>yarn profile</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">==============================================================================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| method                         |          min |          max |           avg |       calls |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">==============================================================================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | fulfillAdvancedOrder           | +12 (+0.01%) |       225187 |       -7 (0%) |         182 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | fulfillAdvancedOrder           | +12 (+0.01%) |       225187 |  -31 (-0.02%) |         182 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | fulfillAvailableAdvancedOrders |       149965 |       217284 |       +3 (0%) |          22 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | fulfillAvailableAdvancedOrders |       149965 |       217284 |       +2 (0%) |          22 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | matchOrders                    | -12 (-0.01%) | -24 (-0.01%) | -234 (-0.09%) | +2 (+1.34%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | matchOrders                    | -12 (-0.01%) | -24 (-0.01%) | -235 (-0.09%) | +2 (+1.34%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | validate                       |        53206 |        83915 |       -1 (0%) |          27 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | validate                       |        53206 | -12 (-0.01%) |       -1 (0%) |          27 |</span></span></span></code></pre>\n<p>Added together, the max gas saving counted here is 38.</p>\n<h2 id=\"g-05-optimized-operations\" style=\"position:relative;\"><a href=\"#g-05-optimized-operations\" aria-label=\"g 05 optimized operations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Optimized operations</h2>\n<p><em>Estimated savings: 3 gas</em><br>\n<em>Max savings according to <code>yarn profile</code>: 58 gas</em></p>\n<p>Tested on Remix: The optimized equivalent of <code>or(eq(a, 2), eq(a, 3))</code> is <code>and(lt(a, 4),gt(a, 1))</code> (saving 3 gas)</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The following opcodes happen for <code>and(lt(a, 4),gt(a, 1))</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">      PUSH 4   4</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      DUP2    lt(a, 4)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      LT    lt(a, 4)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      PUSH 1   1</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      SWAP1    gt(a, 1)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      SWAP2    gt(a, 1)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      GT    gt(a, 1)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      AND    and(lt(a, 4), gt(a, 1))</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      SWAP1    and(lt(a, 4), gt(a, 1))</span></span></code></pre>\n<p>The following opcodes happen for <code>or(eq(a, 2), eq(a, 3))</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">      PUSH 2   2</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      DUP2    eq(a, 2)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      EQ    eq(a, 2)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      PUSH 3   3</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      SWAP2    eq(a, 3)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      SWAP1    eq(a, 3)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      SWAP2    eq(a, 3)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      EQ    eq(a, 3)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      OR    or(eq(a, 2), eq(a, 3))</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      SWAP1    or(eq(a, 2), eq(a, 3))</span></span></code></pre>\n<p>As we can see here, an extra SWAP is costing an extra 3 gas compared to the optimized version.<br>\nConsider replacing with the following:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: ZoneInteraction.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">140:     function _isRestrictedAndCallerNotZone(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">141:         OrderType orderType,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">142:         address zone</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">143:     ) internal view returns (bool mustValidate) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">144:         assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">145:             mustValidate := and(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 146:                 or(eq(orderType, 2), eq(orderType, 3)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 146:                 and(lt(orderType, 4),gt(orderType, 1)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">147:                 iszero(eq(caller(), zone))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">148:             )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">149:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">150:     }</span></span></span></code></pre>\n<h3 id=\"yarn-profile-4\" style=\"position:relative;\"><a href=\"#yarn-profile-4\" aria-label=\"yarn profile 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>yarn profile</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">==============================================================================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| method                         |          min |          max |           avg |       calls |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">==============================================================================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | cancel                         |        41219 |        58403 |         54019 |          16 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | cancel                         | +12 (+0.03%) | -12 (-0.02%) |   -3 (-0.01%) |          16 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | fulfillAdvancedOrder           | +12 (+0.01%) |       225187 |       -7 (0%) |         182 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | fulfillAdvancedOrder           |        96287 |       225187 |       +2 (0%) |         182 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | fulfillBasicOrder              |        91377 |     -12 (0%) |       -5 (0%) |         187 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | fulfillBasicOrder              | -24 (-0.03%) |      1621539 |       -1 (0%) |         187 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | matchOrders                    | -12 (-0.01%) | -24 (-0.01%) | -234 (-0.09%) | +2 (+1.34%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | matchOrders                    | -12 (-0.01%) | -24 (-0.01%) | -241 (-0.09%) | +2 (+1.34%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | validate                       |        53206 |        83915 |       -1 (0%) |          27 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | validate                       |        53206 |        83915 |   -4 (-0.01%) |          27 |</span></span></span></code></pre>\n<p>Added together, the max gas saving counted here is 58.</p>\n<h2 id=\"g-06-pre-decrements-cost-less-than-post-decrements\" style=\"position:relative;\"><a href=\"#g-06-pre-decrements-cost-less-than-post-decrements\" aria-label=\"g 06 pre decrements cost less than post decrements permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] Pre-decrements cost less than post-decrements</h2>\n<p><em>Estimated savings: 5 gas per iteration</em><br>\n<em>Max savings according to <code>yarn profile</code>: 61 gas</em></p>\n<p>For a <code>uint256 maximumFulfilled</code> variable, the following is true with the Optimizer enabled at 10k:</p>\n<ul>\n<li><code>--maximumFulfilled</code> costs 5 gas less than <code>maximumFulfilled--</code></li>\n</ul>\n<p>Affected code:  </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: OrderCombiner.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 272:                 maximumFulfilled--;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 272:                 --maximumFulfilled;</span></span></span></code></pre>\n<h3 id=\"yarn-profile-5\" style=\"position:relative;\"><a href=\"#yarn-profile-5\" aria-label=\"yarn profile 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>yarn profile</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">==============================================================================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| method                         |          min |          max |           avg |       calls |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">==============================================================================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | matchAdvancedOrders            | +12 (+0.01%) |     -12 (0%) | -471 (-0.19%) | +2 (+2.67%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | matchAdvancedOrders            | -36 (-0.02%) |     -12 (0%) | -472 (-0.19%) | +2 (+2.67%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | matchOrders                    | -12 (-0.01%) | -24 (-0.01%) | -234 (-0.09%) | +2 (+1.34%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | matchOrders                    | -12 (-0.01%) | -24 (-0.01%) | -235 (-0.09%) | +2 (+1.34%) |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- | validate                       |        53206 |        83915 |       -1 (0%) |          27 |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ | validate                       |        53206 | -12 (-0.01%) |   -4 (-0.01%) |          27 |</span></span></span></code></pre>\n<p>Added together, the max gas saving counted here is 61.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/14#issuecomment-1401115651\">0age (OpenSea) commented</a>:</strong></p>\n<blockquote>\n<p>Lovely optimizations 🥇 </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/14#issuecomment-1404518314\">hickuphh3 (judge) commented</a>:</strong></p>\n<blockquote>\n<p>NGL the detail and analysis for number 5 is pretty sick!</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-opensea-findings/issues/14#issuecomment-1446882374\">0age (OpenSea) resolved</a>:</strong></p>\n<blockquote>\n<p><strong>[G-01] Using XOR (^) and OR (|) bitwise equivalents:</strong> <a href=\"https://github.com/ProjectOpenSea/seaport/pull/908\">https://github.com/ProjectOpenSea/seaport/pull/908</a></p>\n<p><strong>[G-02] Shift left by 5 instead of multiplying by 32:</strong> <a href=\"https://github.com/ProjectOpenSea/seaport/pull/909\">https://github.com/ProjectOpenSea/seaport/pull/909</a></p>\n<p><strong>[G-03] Using a positive conditional flow to save a NOT opcode:</strong> <a href=\"https://github.com/ProjectOpenSea/seaport/pull/910\">https://github.com/ProjectOpenSea/seaport/pull/910</a></p>\n<p><strong>[G-04] Swap conditions for a better happy path:</strong> <a href=\"https://github.com/ProjectOpenSea/seaport/pull/912\">https://github.com/ProjectOpenSea/seaport/pull/912</a></p>\n<p><strong>[G-05] Optimized operations:</strong> <a href=\"https://github.com/ProjectOpenSea/seaport/pull/911\">https://github.com/ProjectOpenSea/seaport/pull/911</a></p>\n<p><strong>[G-06] Pre-decrements cost less than post-decrements:</strong> <a href=\"https://github.com/ProjectOpenSea/seaport/pull/913\">https://github.com/ProjectOpenSea/seaport/pull/913</a></p>\n</blockquote>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#medium-risk-findings-1\">Medium Risk Findings (1)</a></p>\n<ul>\n<li><a href=\"#m-01-incorrect-encoding-of-order-hashes\">[M-01] Incorrect Encoding of Order Hashes</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#n-01-replace-eth-with-native-token\">N-01 Replace “ETH” with “Native token”</a></li>\n<li><a href=\"#n-02-extract-or-use-named-constants\">N-02 Extract or use named constants</a></li>\n<li><a href=\"#n-03-fragile-check-for-contract-order-type\">N-03 Fragile check for contract order type</a></li>\n<li><a href=\"#n-04-inconsistent-use-of-hex-vs-decimal-values\">N-04 Inconsistent use of hex vs. decimal values</a></li>\n<li><a href=\"#n-05-custom-comment-typos\">N-05 Custom comment typos</a></li>\n<li><a href=\"#n-06-almostoneword-is-confusing\">N-06 <code>AlmostOneWord</code> is confusing</a></li>\n<li><a href=\"#n-07-typos-in-comments\">N-07 Typos in comments</a></li>\n<li><a href=\"#n-08-duplicated-constants\">N-08 Duplicated constants</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#overview-1\">Overview</a></li>\n<li><a href=\"#codebase-impressions\">Codebase Impressions</a></li>\n<li><a href=\"#table-of-contents\">Table of Contents</a></li>\n<li><a href=\"#g-01-using-xor--and-or--bitwise-equivalents\">G-01 Using XOR (<code>^</code>) and OR (<code>|</code>) bitwise equivalents</a></li>\n<li><a href=\"#g-02-shift-left-by-5-instead-of-multiplying-by-32\">G-02 Shift left by 5 instead of multiplying by 32</a></li>\n<li><a href=\"#g-03-using-a-positive-conditional-flow-to-save-a-not-opcode\">G-03 Using a positive conditional flow to save a NOT opcode</a></li>\n<li><a href=\"#g-04-swap-conditions-for-a-better-happy-path\">G-04 Swap conditions for a better happy path</a></li>\n<li><a href=\"#g-05-optimized-operations\">G-05 Optimized operations</a></li>\n<li><a href=\"#g-06-pre-decrements-cost-less-than-post-decrements\">G-06 Pre-decrements cost less than post-decrements</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}