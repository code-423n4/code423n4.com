{
  "circa": {
    "title": "ElasticSwap contest",
    "sponsor": "ElasticSwap",
    "slug": "2022-01-elasticswap",
    "date": "2022-03-02",
    "findings": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues",
    "contest": 77
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 code contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the code contest outlined in this document, C4 conducted an analysis of ElasticSwap contest smart contract system written in Solidity. The code contest took place between January 20—January 26 2022.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>39 Wardens contributed reports to the ElasticSwap contest:</p>\n<ol>\n<li>WatchPug (<a href=\"https://github.com/jack-the-pug\">jtp</a> and <a href=\"https://github.com/mingwatch\">ming</a>)</li>\n<li><a href=\"https://twitter.com/gzeon\">gzeon</a></li>\n<li>0x0x0x</li>\n<li><a href=\"https://twitter.com/Meta0xNull\">Meta0xNull</a></li>\n<li><a href=\"https://twitter.com/danbinnun\">danb</a></li>\n<li><a href=\"https://camden.codes\">camden</a></li>\n<li>hyh</li>\n<li><a href=\"https://twitter.com/JustDravee\">Dravee</a></li>\n<li><a href=\"https://twitter.com/SolidityDev\">pauliax</a></li>\n<li>0x1f8b</li>\n<li>harleythedog</li>\n<li><a href=\"https://twitter.com/ori_dabush\">OriDabush</a></li>\n<li>Jujic</li>\n<li><a href=\"https://twitter.com/cmichelio\">cmichel</a></li>\n<li><a href=\"https://www.instagram.com/riyan_rfa/\">rfa</a></li>\n<li>UncleGrandpa925</li>\n<li><a href=\"https://twitter.com/_ye0lde\">ye0lde</a></li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li>p4st13r4 (<a href=\"https://github.com/0x69e8\">0x69e8</a> and 0xb4bb4)</li>\n<li>byterocket (<a href=\"https://binbash.sh\">pseudorandom</a> and <a href=\"https://twitter.com/merkleplant_eth\">pmerkleplant</a>)</li>\n<li>robee</li>\n<li><a href=\"https://twitter.com/BouSalman\">BouSalman</a></li>\n<li><a href=\"https://twitter.com/defsec_\">defsec</a></li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li><a href=\"https://twitter.com/wuwe19\">wuwe1</a></li>\n<li><a href=\"https://twitter.com/SirH4shalot\">sirhashalot</a></li>\n<li><a href=\"https://twitter.com/meidhiwirara\">Tomio</a></li>\n<li><a href=\"https://twitter.com/_0v3rf10w\">0v3rf10w</a></li>\n<li>sorrynotsorry</li>\n<li><a href=\"https://twitter.com/VladToie/\">bobi</a></li>\n<li><a href=\"https://twitter.com/ssolgryn\">solgryn</a></li>\n<li>cccz</li>\n<li>SolidityScan (<a href=\"https://twitter.com/cyberboyIndia\">cyberboy</a> and <a href=\"https://blog.dixitaditya.com/\">zombie</a>)</li>\n<li><a href=\"https://twitter.com/ckksec\">ckksec</a></li>\n<li>egjlmn1</li>\n</ol>\n<p>This contest was judged by <a href=\"https://twitter.com/GalloDaSballo\">Alex the Entreprenerd</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/liveactionllama\">liveactionllama</a> and <a href=\"https://twitter.com/CloudEllie1\">CloudEllie</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 9 unique vulnerabilities and 49 total findings. All of the issues presented here are linked back to their original finding.</p>\n<p>Of these vulnerabilities, 2 received a risk rating in the category of HIGH severity, 1 received a risk rating in the category of MEDIUM severity, and 6 received a risk rating in the category of LOW severity.</p>\n<p>C4 analysis also identified 13 non-critical recommendations and 27 gas optimizations.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2022-01-elasticswap\">C4 ElasticSwap contest repository</a>, and is composed of 3 smart contracts written in the Solidity programming language and includes 1120 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code423n4.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-2\" style=\"position:relative;\"><a href=\"#high-risk-findings-2\" aria-label=\"high risk findings 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (2)</h1>\n<h2 id=\"h-01-in-the-case-of-single-asset-entry-new-liquidity-providers-will-suffer-fund-loss-due-to-wrong-formula-of-δro\" style=\"position:relative;\"><a href=\"#h-01-in-the-case-of-single-asset-entry-new-liquidity-providers-will-suffer-fund-loss-due-to-wrong-formula-of-%CE%B4ro\" aria-label=\"h 01 in the case of single asset entry new liquidity providers will suffer fund loss due to wrong formula of δro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/144\">[H-01] In the case of Single Asset Entry, new liquidity providers will suffer fund loss due to wrong formula of ΔRo</a></h2>\n<p><em>Submitted by WatchPug</em></p>\n<h3 id=\"current-implementation\" style=\"position:relative;\"><a href=\"#current-implementation\" aria-label=\"current implementation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Current Implementation</h3>\n<h4 id=\"when-basetoken-rebase-up\" style=\"position:relative;\"><a href=\"#when-basetoken-rebase-up\" aria-label=\"when basetoken rebase up permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>When <code>baseToken</code> rebase up</h4>\n<p>Per the document: <a href=\"https://github.com/ElasticSwap/elasticswap/blob/a90bb67e2817d892b517da6c1ba6fae5303e9867/ElasticSwapMath.md#:~:text=When%20there%20is%20alphaDecay\">https://github.com/ElasticSwap/elasticswap/blob/a90bb67e2817d892b517da6c1ba6fae5303e9867/ElasticSwapMath.md#:~:text=When%20there%20is%20alphaDecay</a></p>\n<p>and related code: <a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L227-L283\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L227-L283</a></p>\n<p><code>Gamma</code> is the ratio of shares received by the new liquidity provider when <code>addLiquidity()</code> (ΔRo) to the new totalSupply (total shares = Ro’ = Ro + ΔRo).</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">ΔRo = (Ro/(1 - γ)) * γ</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Ro * Gamma</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    = --------------</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         1 - Gamma</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">⟺</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">ΔRo * ( 1 - Gamma ) = Gamma * Ro</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">ΔRo - Gamma * ΔRo = Gamma * Ro</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">ΔRo = Gamma * Ro + Gamma * ΔRo</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">           ΔRo    </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Gamma = ---------</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         Ro + ΔRo </span></span></code></pre>\n<p>In the current implementation:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">γ = ΔY / Y&#39; / 2 * ( ΔX / α^ )</span></span></code></pre>\n<p>ΔY is the <code>quoteToken</code> added by the new liquidity provider. See:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L277\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L277</a></li>\n</ul>\n<p>Y’ is the new Y after <code>addLiquidity()</code>, <code>Y' = Y + ΔY</code>. See:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L272\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L272</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L278\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L278</a></li>\n</ul>\n<p>ΔX is <code>ΔY * Omega</code>. See:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L259-L263\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L259-L263</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L279\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L279</a></li>\n</ul>\n<p>α^ is <code>Alpha - X</code>. See:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L234-L235\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L234-L235</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L280\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L280</a></li>\n</ul>\n<p>For instance:</p>\n<p>Given:</p>\n<ul>\n<li>Original State: X = Alpha = 1, Y = Beta = 1, Omega = X/Y = 1</li>\n<li>When <code>baseToken</code> rebase up: Alpha becomes 10</li>\n<li>Current State: Alpha = 10, X = 1, Y = Beta = 1, Omega = 1</li>\n</ul>\n<p>When: new liquidity provider <code>addLiquidity()</code> with 4 quoteToken:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">             4          4 * Omega      16</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Gamma = ------------ * ------------ = ----</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         (1+4) * 2       10 - 1        90</span></span></code></pre>\n<p>After <code>addLiquidity()</code>:</p>\n<ul>\n<li>baseToken belongs to the newLP: 10 * 16 / 90 = 160 / 90 = 1.7777777777777777</li>\n<li>quoteToken belongs to the newLP: (1+4) * 16 / 90 = 80 / 90 = 0.8888888888888888</li>\n<li>In the terms of <code>quoteToken</code>, the total value is: 160 / 90 / Omega + 80 / 90 = 240 / 90 = 2.6666666666666665</li>\n</ul>\n<p>As a result, the new liquidity provider suffers a fund loss of <code>4 - 240 / 90 = 1.3333333333333333 in the terms of quoteToken</code></p>\n<p>The case above can be reproduced by changing the numbers in <a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/test/exchangeTest.js#L1804\">this test unit</a>.</p>\n<h4 id=\"when-basetoken-rebase-down\" style=\"position:relative;\"><a href=\"#when-basetoken-rebase-down\" aria-label=\"when basetoken rebase down permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>When <code>baseToken</code> rebase down</h4>\n<p>Per the document: <a href=\"https://github.com/ElasticSwap/elasticswap/blob/a90bb67e2817d892b517da6c1ba6fae5303e9867/ElasticSwapMath.md#:~:text=When%20there%20is%20betaDecay\">https://github.com/ElasticSwap/elasticswap/blob/a90bb67e2817d892b517da6c1ba6fae5303e9867/ElasticSwapMath.md#:~:text=When%20there%20is%20betaDecay</a></p>\n<p>and related code: <a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L297-L363\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L297-L363</a></p>\n<p><code>Gamma</code> is the ratio of shares received by the new liquidity provider when <code>addLiquidity()</code> (ΔRo) to the new totalSupply (total shares = Ro’ = Ro + ΔRo).</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">ΔRo = (Ro/(1 - γ)) * γ</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Ro * Gamma</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    = --------------</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         1 - Gamma</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">⟺</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">ΔRo * ( 1 - Gamma ) = Gamma * Ro</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">ΔRo - Gamma * ΔRo = Gamma * Ro</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">ΔRo = Gamma * Ro + Gamma * ΔRo</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">           ΔRo    </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Gamma = ---------</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         Ro + ΔRo </span></span></code></pre>\n<p>In the current implementation:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">γ = ΔX / X / 2 * ( ΔXByQuoteTokenAmount / β^ )</span></span></code></pre>\n<p>ΔX is the amount of <code>baseToken</code> added by the new liquidity provider. See:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L357\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L357</a></li>\n</ul>\n<p>X is the balanceOf <code>baseToken</code>. See:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L358\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L358</a></li>\n</ul>\n<p>ΔXByQuoteTokenAmount is ΔX / Omega, the value of ΔX in the terms of <code>quoteToken</code>. See:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L318-L322\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L318-L322</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L329-L333\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L329-L333</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L359\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L359</a></li>\n</ul>\n<p>β^ is maxΔX / Omega, the value of maxΔX in the terms of <code>quoteToken</code>. <code>maxΔX = X - Alpha</code>. See:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L304-L305\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L304-L305</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L318-L322\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L318-L322</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L341-L342\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L341-L342</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L360\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L360</a></li>\n</ul>\n<p>For instance:</p>\n<p>Given:</p>\n<ul>\n<li>Original State: X = Alpha = 10, Y = Beta = 10, Omega = X/Y = 1</li>\n<li>When <code>baseToken</code> rebase down, Alpha becomes 1</li>\n<li>Current State: Alpha = 1, X = 10, Y = Beta = 10, Omega = 1</li>\n</ul>\n<p>When: new liquidity provider <code>addLiquidity()</code> with <code>4 baseToken</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">            4          4 / Omega       8</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Gamma = -------- * ---------------- = ----</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          10 * 2    (10-1) / Omega     90</span></span></code></pre>\n<p>After <code>addLiquidity()</code>:</p>\n<ul>\n<li>baseToken belongs to the newLP: (1 + 4) * 8 / 90 = 40 / 90 = 0.4444444444444444</li>\n<li>quoteToken belongs to the newLP: 10 * 8 / 90 = 80 / 90 = 0.8888888888888888</li>\n<li>In the terms of quoteToken, the total value is: 40 / 90 + 80 / 90 * Omega = 120 / 90 = 1.3333333333333333 &#x3C; 4</li>\n</ul>\n<p>As a result, the new liquidity provider suffers a fund loss of <code>4 - 120 / 90 = 2.6666666666666665 in the terms of quoteToken</code></p>\n<p>The case above can be reproduced by changing the numbers in <a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/test/exchangeTest.js#L2146\">this test unit</a>.</p>\n<h3 id=\"the-correct-formula-for-δro\" style=\"position:relative;\"><a href=\"#the-correct-formula-for-%CE%B4ro\" aria-label=\"the correct formula for δro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The correct formula for ΔRo</h3>\n<p><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/144\">See issue page for details.</a></p>\n<h3 id=\"recommendation\" style=\"position:relative;\"><a href=\"#recommendation\" aria-label=\"recommendation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Update code and document using the correct formula for ΔRo.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/144#issuecomment-1030633292\">0xean (ElasticSwap) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Finding is valid - solution seems to be partially correct and we are working on the fully correct version.</p>\n<p>It seems that the suggested formula doesn’t cover a rebase down correctly and this is where our efforts are focused now.  </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/144#issuecomment-1038297316\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The warden has identified an issue with the math that reliably will provide a less-than-expected value to single-sided liquidity providers.\nThe warden showed a consistent way for this to occur and while the recommended fix may not be completely correct, I believe the finding to be valid.</p>\n<p>Because the warden found a set of cases that reliably make the protocol return less value than expected when compared to the goals of the protocol, I believe High Severity to be appropriate.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/144#event-6163747395\">0xean (ElasticSwap) resolved</a></strong></p>\n<hr>\n<h2 id=\"h-02-transferring-quotetoken-to-the-exchange-pool-contract-will-cause-future-liquidity-providers-to-lose-funds\" style=\"position:relative;\"><a href=\"#h-02-transferring-quotetoken-to-the-exchange-pool-contract-will-cause-future-liquidity-providers-to-lose-funds\" aria-label=\"h 02 transferring quotetoken to the exchange pool contract will cause future liquidity providers to lose funds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/146\">[H-02] Transferring <code>quoteToken</code> to the exchange pool contract will cause future liquidity providers to lose funds</a></h2>\n<p><em>Submitted by WatchPug</em></p>\n<p>In the current implementation, the amount of LP tokens to be minted when <code>addLiquidity()</code> is calculated based on the ratio between the amount of newly added <code>quoteToken</code> and the current wallet balance of <code>quoteToken</code> in the <code>Exchange</code> contract.</p>\n<p>However, since anyone can transfer <code>quoteToken</code> to the contract, and make the balance of <code>quoteToken</code> to be larger than <code>_internalBalances.quoteTokenReserveQty</code>, existing liquidity providers can take advantage of this by donating <code>quoteToken</code> and make future liquidity providers receive fewer LP tokens than expected and lose funds.</p>\n<p><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L578-L582\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L578-L582</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">liquidityTokenQty</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">calculateLiquidityTokenQtyForDoubleAssetEntry</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_totalSupplyOfLiquidityTokens</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">quoteTokenQty</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_quoteTokenReserveQty</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// IERC20(quoteToken).balanceOf(address(this))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<h3 id=\"poc\" style=\"position:relative;\"><a href=\"#poc\" aria-label=\"poc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PoC</h3>\n<p>Given:</p>\n<ul>\n<li>The <code>Exchange</code> pool is new;</li>\n<li>Alice <code>addLiquidity()</code> with <code>1e18 baseToken</code> and <code>1e18 quoteToken</code>, recived <code>1e18</code> LP token;</li>\n<li>Alice transfer <code>99e18 quoteToken</code> to the <code>Exchange</code> pool contract;</li>\n<li>Bob <code>addLiquidity()</code> with <code>1e18 baseToken</code> and <code>1e18 quoteToken</code>;</li>\n<li>Bob <code>removeLiquidity()</code> with all the LP token in balance.</li>\n</ul>\n<p><strong>Expected Results</strong>: Bob recived <code>1e18 baseToken</code> and >= <code>1e18 quoteToken</code>.</p>\n<p><strong>Actual Results</strong>: Bob recived ~<code>0.02e18 baseToken</code> and ~<code>1e18 quoteToken</code>.</p>\n<p>Alice can now <code>removeLiquidity()</code> and recive ~<code>1.98e18 baseToken</code> and ~<code>100e18 quoteToken</code>.</p>\n<p>As a result, Bob suffers a fund loss of <code>0.98e18 baseToken</code>.</p>\n<h3 id=\"recommendation-1\" style=\"position:relative;\"><a href=\"#recommendation-1\" aria-label=\"recommendation 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Change to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">liquidityTokenQty</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">calculateLiquidityTokenQtyForDoubleAssetEntry</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_totalSupplyOfLiquidityTokens</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">quoteTokenQty</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_internalBalances</span><span class=\"mtk1\">.</span><span class=\"mtk12\">quoteTokenReserveQty</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/146#issuecomment-1023217456\">0xean (ElasticSwap) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>This does appear to be correct after attempting a POC. Thank you WatchPug! </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/146#issuecomment-1038288670\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The warden identified a way to exploit the protocol math to devalue future liquidity provision at the advantage of early liquidity providers.</p>\n<p>The exploit is extractive in nature, however, because this is reliably performable and effectively breaks the protocol’s goals and mechanics, I believe High Severity to be appropriate.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/146#event-6163742328\">0xean (ElasticSwap) resolved</a></strong></p>\n<hr>\n<h1 id=\"medium-risk-findings-1\" style=\"position:relative;\"><a href=\"#medium-risk-findings-1\" aria-label=\"medium risk findings 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (1)</h1>\n<h2 id=\"m-01-the-value-of-lp-token-can-be-manipulated-by-the-first-minister-which-allows-the-attacker-to-dilute-future-liquidity-providers-shares\" style=\"position:relative;\"><a href=\"#m-01-the-value-of-lp-token-can-be-manipulated-by-the-first-minister-which-allows-the-attacker-to-dilute-future-liquidity-providers-shares\" aria-label=\"m 01 the value of lp token can be manipulated by the first minister which allows the attacker to dilute future liquidity providers shares permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/145\">[M-01] The value of LP token can be manipulated by the first minister, which allows the attacker to dilute future liquidity providers’ shares</a></h2>\n<p><em>Submitted by WatchPug, also found by camden, danb, and hyh</em></p>\n<p>For the first minter of an Exchange pool, the ratio of <code>X/Y</code> and the <code>totalSupply</code> of the LP token can be manipulated.</p>\n<p>A sophisticated attacker can mint and burn all of the LP tokens but <code>1 Wei</code>, and then artificially create a situation of rebasing up by transferring baseToken to the pool contract. Then <code>addLiquidity()</code> in <code>singleAssetEntry</code> mode.</p>\n<p>Due to the special design of <code>singleAssetEntry</code> mode, the value of LP token can be inflated very quickly.</p>\n<p>As a result, <code>1 Wei</code> of LP token can be worthing a significate amount of baseToken and quoteToken.</p>\n<p>Combine this with the precision loss when calculating the amount of LP tokens to be minted to the new liquidity provider, the attacker can turn the pool into a trap which will take a certain amount of cut for all future liquidity providers by minting fewer LP tokens to them.</p>\n<p><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L493-L512\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L493-L512</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// this user will set the initial pricing curve</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_baseTokenQtyDesired</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;MathLib: INSUFFICIENT_BASE_QTY_DESIRED&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_quoteTokenQtyDesired</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;MathLib: INSUFFICIENT_QUOTE_QTY_DESIRED&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">tokenQtys</span><span class=\"mtk1\">.</span><span class=\"mtk12\">baseTokenQty</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_baseTokenQtyDesired</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">tokenQtys</span><span class=\"mtk1\">.</span><span class=\"mtk12\">quoteTokenQty</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_quoteTokenQtyDesired</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">tokenQtys</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidityTokenQty</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">sqrt</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_baseTokenQtyDesired</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_quoteTokenQtyDesired</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_internalBalances</span><span class=\"mtk1\">.</span><span class=\"mtk12\">baseTokenReserveQty</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">tokenQtys</span><span class=\"mtk1\">.</span><span class=\"mtk12\">baseTokenQty</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_internalBalances</span><span class=\"mtk1\">.</span><span class=\"mtk12\">quoteTokenReserveQty</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">tokenQtys</span><span class=\"mtk1\">.</span><span class=\"mtk12\">quoteTokenQty</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L204-L212\">https://github.com/code-423n4/2022-01-elasticswap/blob/d107a198c0d10fbe254d69ffe5be3e40894ff078/elasticswap/src/libraries/MathLib.sol#L204-L212</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">calculateLiquidityTokenQtyForDoubleAssetEntry</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_totalSupplyOfLiquidityTokens</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_quoteTokenQty</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_quoteTokenReserveBalance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidityTokenQty</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">liquidityTokenQty</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">_quoteTokenQty</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_totalSupplyOfLiquidityTokens</span><span class=\"mtk1\">) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_quoteTokenReserveBalance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"poc-1\" style=\"position:relative;\"><a href=\"#poc-1\" aria-label=\"poc 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PoC</h3>\n<p>Given:</p>\n<ul>\n<li>The <code>Pool</code> is newly created;</li>\n<li>The market price of <code>baseToken</code> in terms of <code>quoteToken</code> is <code>1</code>.</li>\n</ul>\n<p>The attacker can do the following steps in one tx:</p>\n<ol>\n<li><code>addLiquidity()</code> with <code>2 Wei of baseToken</code> and <code>100e18 quoteToken</code>, received <code>14142135623</code> LP tokens;</li>\n<li><code>removeLiquidity()</code> with <code>14142135622</code> LP tokens, the Pool state becomes:</li>\n<li>totalSupply of LP tokens: 1 Wei</li>\n<li>baseTokenReserveQty: 1 Wei</li>\n<li>quoteTokenReserveQty: 7071067813 Wei</li>\n<li><code>baseToken.transfer()</code> 7071067812 Wei to the Pool contract;</li>\n<li><code>addLiquidity()</code> with no baseToken and <code>50e18 quoteToken</code>;</li>\n<li><code>swapBaseTokenForQuoteToken()</code> with <code>600000000000000 baseToken</code>, the Pool state becomes:</li>\n<li>totalSupply of LP tokens: 1 Wei</li>\n<li>quoteTokenReserveQty 591021750159032</li>\n<li>baseTokenReserveQty 600007071067801</li>\n<li><code>baseToken.transfer()</code> 999399992928932200 Wei to the Pool contract;</li>\n<li><code>addLiquidity()</code> with no baseToken and <code>1e18 quoteToken</code>, the Pool state becomes:</li>\n<li>totalSupply of LP tokens: 1 Wei</li>\n<li>quoteTokenReserveQty: 1000000000000000013</li>\n<li>quoteTokenReserveQty: 985024641638342212</li>\n<li>baseTokenDecay: 0</li>\n</ol>\n<p>From now on, <code>addLiquidity()</code> with less than <code>1e18</code> of <code>baseToken</code> and <code>quoteToken</code> will receive <code>0</code> LP token due to precision loss.</p>\n<p>The amounts can be manipulated to higher numbers and cause most future liquidity providers to receive fewer LP tokens than expected, and the attacker will be able to profit from it as the attacker will take a larger share of the pool than expected.</p>\n<h3 id=\"recommendation-2\" style=\"position:relative;\"><a href=\"#recommendation-2\" aria-label=\"recommendation 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Consider requiring a certain amount of minimal LP token amount (eg, 1e8) for the first minter and lock some of the first minter’s LP tokens by minting ~1% of the initial amount to the factory address.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/145#issuecomment-1023222249\">0xean (ElasticSwap) confirmed, but disagreed with High severity and commented</a>:</strong></p>\n<blockquote>\n<p>Thanks for the report, I don’t agree with the severity based on this</p>\n<p><code>From now on, addLiquidity() with less than 1e18 of baseToken and quoteToken will receive 0 LP token due to precision loss.</code></p>\n<p>which in your example represents a user trying to add dust to the contract after the attack.</p>\n<p>I think we will implement the minimum locked liquidity to avoid rounding errors, but this attack assumes users are adding dust to the contract and that they are totally unaware of the contract state which is incorrect.  Users specific a min and a max token qty’s when adding liquidity. </p>\n<p>Would recommend med. risk on this one if not low risk given the attack is on “dust” amounts of tokens. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/145#issuecomment-1030966153\">Alex the Entreprenerd (judge) changed severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>I agree with the finding and remember coming across it when reading the <a href=\"https://docs.yearn.finance/security/index#third-party-audits\">Yearn V0.4.2 Audit by Trails of Bits.</a></p>\n<p>Ultimately this is contingent on a donation, that will make each share more valuable, so it’s effectively a way to use rounding against making dust donations.</p>\n<p>Technically this same idea can be extended to huge donations, however there are very dubious economic reasons as to why you’d do that (perhaps frontrunning a moderate deposit with the goal of using this method to earn that MEV).</p>\n<p>Ultimately this is something that can happen anytime you have X shares and Y totalSupply\nIf the total supply reaches greater units than the shares, then integer division will inevitably eat out some of those shares.</p>\n<p>Have yet to see a long term solution to this rounding problem, however, a simple initial addition that mints 1e18 shares will require some economic commitment by the potential exploiters.</p>\n<p>Agree with medium severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/145#event-6163749549\">0xean (ElasticSwap) resolved</a></strong></p>\n<hr>\n<h1 id=\"low-risk-findings-6\" style=\"position:relative;\"><a href=\"#low-risk-findings-6\" aria-label=\"low risk findings 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk Findings (6)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/175\">[L-01] Inclusive conditions</a> <em>Submitted by pauliax, also found by 0x1f8b, danb, harleythedog, and Jujic</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/87\">[L-02] removeLiquidity() _tokenRecipient Lack of Zero Address Check May Cause User Lose Fund Permanently</a> <em>Submitted by Meta0xNull</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/172\">[L-03] Revert when K >= 2^256</a> <em>Submitted by gzeon</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/119\">[L-04] Fee-on-transfer check can be avoided</a> <em>Submitted by harleythedog, also found by 0x1f8b, cmichel, danb, and pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/93\">[L-05] Description of <code>_expirationTimestamp</code> is not exact</a> <em>Submitted by 0x0x0x</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/153\">[L-06] Incorrect implementation of <code>_quoteTokenQtyMin</code>, <code>_baseTokenQtyMin</code></a> <em>Submitted by WatchPug</em></li>\n</ul>\n<h1 id=\"non-critical-findings-13\" style=\"position:relative;\"><a href=\"#non-critical-findings-13\" aria-label=\"non critical findings 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Non-Critical Findings (13)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/107\">[N-01] Math base functions can be made internal</a> <em>Submitted by hyh</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/134\">[N-02] 10 ** 18 can be changed to 1e18 </a> <em>Submitted by Jujic</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/35\">[N-03] Gas: <code>MathLib.sol</code> is importing <code>Exchange.sol</code></a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/124\">[N-04] Exchange.sol is not Pausable</a> <em>Submitted by ye0lde, also found by hyh</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/114\">[N-05] Comment missing function parameter</a> <em>Submitted by sirhashalot</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/136\">[N-06] Leftover tokens will be stuck in the contract with no ways to recover</a> <em>Submitted by hyh</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/81\">[N-07] <code>ExchangeFactory.sol</code>’s <code>transferOwnership</code> should be a two-step process</a> <em>Submitted by Dravee, also found by cccz and defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/84\">[N-08] createNewExchange() Possible to Add Elastic Token as Quote Token Due to No Validation</a> <em>Submitted by Meta0xNull</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/20\">[N-09] Use of Similar variable names</a> <em>Submitted by SolidityScan</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/110\">[N-10] Users can grief name and symbol for a market, DAO unable to change</a> <em>Submitted by camden, also found by 0x1f8b, ckksec, cmichel, danb, defsec, egjlmn1, hyh, and UncleGrandpa925</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/111\">[N-11] Base token properties not verified</a> <em>Submitted by sirhashalot, also found by danb and sirhashalot</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/26\">[N-12] Gas: <code>ExchangeFactory.feeAddress()</code> should be declared external</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/160\">[N-13] swapBaseTokenForQuoteToken and swapQuoteTokenForBaseToken do not check output quantities to be achievable</a> <em>Submitted by hyh</em></li>\n</ul>\n<h1 id=\"gas-optimizations-27\" style=\"position:relative;\"><a href=\"#gas-optimizations-27\" aria-label=\"gas optimizations 27 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations (27)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/159\">[G-01] Custom Errors</a> <em>Submitted by sorrynotsorry, also found by 0v3rf10w, byterocket, defsec, Dravee, Jujic, Meta0xNull, robee, sirhashalot, WatchPug, and ye0lde</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/151\">[G-02] Redundant <code>return</code> for named returns</a> <em>Submitted by WatchPug, also found by Dravee, robee, and ye0lde</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/177\">[G-03] Unchecked maths</a> <em>Submitted by pauliax, also found by defsec, Dravee, gzeon, Jujic, OriDabush, Tomio, WatchPug, and ye0lde</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/158\">[G-04] Initialize to default state is redundant</a> <em>Submitted by WatchPug, also found by ye0lde</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/173\">[G-05] Redundant code</a> <em>Submitted by wuwe1, also found by csanuragjain, gzeon, Ruhum, and WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/178\">[G-06] Repeated calls</a> <em>Submitted by pauliax, also found by defsec, Dravee, OriDabush, Ruhum, and sirhashalot</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/147\">[G-07] Simplify <code>MathLib#sqrt()</code> can save gas</a> <em>Submitted by WatchPug, also found by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/167\">[G-08] Gas Optimization: float multiplication optimization</a> <em>Submitted by gzeon</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/161\">[G-09] Gas Optimization: <code>> 0</code> is less efficient than <code>!= 0</code> for uint in require condition</a> <em>Submitted by gzeon, also found by 0x0x0x, bobi, BouSalman, byterocket, defsec, Dravee, Jujic, Meta0xNull, robee, Ruhum, solgryn, and WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/77\">[G-10] using modifier instead of function can save gas</a> <em>Submitted by rfa</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/176\">[G-11] quoteTokenQtyToReturn = internalBalances.quoteTokenReserveQty</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/163\">[G-12] Gas Optimization: Use deterministic contract address</a> <em>Submitted by gzeon</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/100\">[G-13] Shift Right instead of Dividing by 2</a> <em>Submitted by byterocket, also found by 0x0x0x, BouSalman, and Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/157\">[G-14] Remove unused code can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/156\">[G-15] Cache and read storage variables from the stack can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/155\">[G-16]  Outdated versions of OpenZeppelin library</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/28\">[G-17] Gas: Conditional flow optimization in <code>Exchange.sol:removeLiquidity()</code></a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/141\">[G-18] Making the MathLib internal</a> <em>Submitted by UncleGrandpa925</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/55\">[G-19] <code>internalBalance</code> state variable is read and written multiple times within a single transaction</a> <em>Submitted by Ruhum, also found by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/171\">[G-20] saving gas by not returning the variables that was declared to be returned</a> <em>Submitted by OriDabush</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/169\">[G-21] inlining a function to save gas</a> <em>Submitted by OriDabush</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/94\">[G-22] <code>removeLiquidity.sol#baseTokenQtyToRemoveFromInternalAccounting</code> should not be cached</a> <em>Submitted by 0x0x0x</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/63\">[G-23] Gas in <code>MathLib.sol:calculateQuoteTokenQty()</code>: SLOADs minimization</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/48\">[G-24] Gas in <code>MathLib.sol:calculateQtyToReturnAfterFees()</code>: Avoid expensive calculation by checking if <code>_tokenASwapQty == 0 || _tokenBReserveQty == 0</code></a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/41\">[G-25] Gas: Mark <code>ExchangeFactory.sol:setFeeAddress()</code> as payable</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/34\">[G-26] Gas: Reorder require statements <code>MathLib.sol:calculateAddLiquidityQuantities()</code> to save gas on revert</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-elasticswap-findings/issues/33\">[G-27] Gas: Reorder require statements <code>Exchange.sol:removeLiquidity()</code> to save gas on revert</a> <em>Submitted by Dravee</em></li>\n</ul>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-2\">High Risk Findings (2)</a></p>\n<ul>\n<li><a href=\"#h-01-in-the-case-of-single-asset-entry-new-liquidity-providers-will-suffer-fund-loss-due-to-wrong-formula-of-%CE%B4ro\">[H-01] In the case of Single Asset Entry, new liquidity providers will suffer fund loss due to wrong formula of ΔRo</a></li>\n<li><a href=\"#h-02-transferring-quotetoken-to-the-exchange-pool-contract-will-cause-future-liquidity-providers-to-lose-funds\">[H-02] Transferring <code>quoteToken</code> to the exchange pool contract will cause future liquidity providers to lose funds</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-1\">Medium Risk Findings (1)</a></p>\n<ul>\n<li><a href=\"#m-01-the-value-of-lp-token-can-be-manipulated-by-the-first-minister-which-allows-the-attacker-to-dilute-future-liquidity-providers-shares\">[M-01] The value of LP token can be manipulated by the first minister, which allows the attacker to dilute future liquidity providers’ shares</a></li>\n</ul>\n</li>\n<li><a href=\"#low-risk-findings-6\">Low Risk Findings (6)</a></li>\n<li><a href=\"#non-critical-findings-13\">Non-Critical Findings (13)</a></li>\n<li><a href=\"#gas-optimizations-27\">Gas Optimizations (27)</a></li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}