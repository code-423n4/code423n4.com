{
  "circa": {
    "title": "Foundation Drop contest",
    "sponsor": "Foundation",
    "slug": "2022-08-foundation",
    "date": "2022-09-29",
    "findings": "https://github.com/code-423n4/2022-08-foundation-findings/issues",
    "contest": 152
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the Foundation Drop smart contract system written in Solidity. The audit contest took place between August 11—August 15 2022.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>114 Wardens contributed reports to the Foundation Drop contest:</p>\n<ol>\n<li>Lambda</li>\n<li><a href=\"https://twitter.com/JoeStakey\">joestakey</a></li>\n<li>KIntern_NA (TrungOre and duc)</li>\n<li>byndooa</li>\n<li><a href=\"https://twitter.com/shenwilly_\">shenwilly</a></li>\n<li><a href=\"https://twitter.com/bin2chen\">bin2chen</a></li>\n<li><a href=\"https://twitter.com/berndartmueller\">berndartmueller</a></li>\n<li>0x52</li>\n<li>0xHarry</li>\n<li>peritoflores</li>\n<li><a href=\"https://twitter.com/BowTiedDravee\">Dravee</a></li>\n<li><a href=\"https://www.sawmon-and-natalie.com/\">Saw-mon_and_Natalie</a></li>\n<li>0x1f8b</li>\n<li>IllIllI</li>\n<li><a href=\"https://twitter.com/c3ph_\">c3phas</a></li>\n<li>zkhorse (<a href=\"twitter.com/0xkarmacoma\">karmacoma</a> and horsefacts)</li>\n<li><a href=\"https://chom.dev\">Chom</a></li>\n<li>rbserver</li>\n<li><a href=\"https://twitter.com/Deivitto\">Deivitto</a></li>\n<li>0xDjango</li>\n<li>ladboy233</li>\n<li>wagmi</li>\n<li><a href=\"https://twitter.com/treasuresETH\">Treasure-Seeker</a></li>\n<li>cccz</li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li>ReyAdmirado</li>\n<li>auditor0517</li>\n<li>PwnedNoMore (<a href=\"https://www.cs.purdue.edu/homes/zhan3299/index.html\">izhuer</a>, ItsNio, and papr1ka2)</li>\n<li>thank_you</li>\n<li><a href=\"https://twitter.com/andyfeili\">oyc_109</a></li>\n<li>Bnke0x0</li>\n<li>erictee</li>\n<li>Rolezn</li>\n<li><a href=\"https://github.com/lyciumlee\">durianSausage</a></li>\n<li>LeoS</li>\n<li><a href=\"https://twitter.com/ROHANJH56009256\">Rohan16</a></li>\n<li><a href=\"https://twitter.com/Sm4rty_\">Sm4rty</a></li>\n<li>zeesaw</li>\n<li>brgltd</li>\n<li><a href=\"https://twitter.com/CAA1994\">carlitox477</a></li>\n<li><a href=\"https://twitter.com/0xSmartContract\">0xSmartContract</a></li>\n<li>simon135</li>\n<li><a href=\"https://milotruck.github.io/\">MiloTruck</a></li>\n<li><a href=\"https://www.linkedin.com/in/georgi-nikolaev-georgiev-978253219\">gogo</a></li>\n<li><a href=\"https://twitter.com/sm4rtcontr4ct\">JC</a></li>\n<li><a href=\"https://twitter.com/0xNazgul\">0xNazgul</a></li>\n<li>d3e4</li>\n<li><a href=\"https://mobile.twitter.com/tomj_bb\">TomJ</a></li>\n<li>_141345_</li>\n<li>robee</li>\n<li>rvierdiiev</li>\n<li>DevABDee</li>\n<li><a href=\"https://github.com/Aymen1001\">Aymen0909</a></li>\n<li>Waze</li>\n<li><a href=\"https://twitter.com/father0fBl0cks\">fatherOfBlocks</a></li>\n<li>mics</li>\n<li>bobirichman</li>\n<li>ElKu</li>\n<li>bulej93</li>\n<li>apostle0x01</li>\n<li>sikorico</li>\n<li>Yiko</li>\n<li>0xsolstars (<a href=\"twitter.com/versatile_crypt\">Varun_Verma</a> and masterchief)</li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li><a href=\"https://twitter.com/0xch301\">Ch_301</a></li>\n<li>nine9</li>\n<li>yixxas</li>\n<li><a href=\"https://twitter.com/itsmeSTYJ\">itsmeSTYJ</a></li>\n<li>yash90</li>\n<li><a href=\"https://twitter.com/0xSolus\">0xSolus</a></li>\n<li><a href=\"https://twitter.com/danbinnun\">danb</a></li>\n<li>delfin454000</li>\n<li>Kumpa</li>\n<li><a href=\"https://twitter.com/ret2basic\">ret2basic</a></li>\n<li><a href=\"twitter.com/rokinot\">rokinot</a></li>\n<li><a href=\"https://twitter.com/jonataspvt\">jonatascm</a></li>\n<li>Vexjon</li>\n<li>cryptphi</li>\n<li>0xackermann</li>\n<li>0xmatt</li>\n<li><a href=\"https://twitter.com/iamwhitelights\">iamwhitelights</a></li>\n<li>0xkatana</li>\n<li>Noah3o6</li>\n<li>CodingNameKiki</li>\n<li>Diraco</li>\n<li><a href=\"https://twitter.com/0xheynacho\">ignacio</a></li>\n<li>ajtra</li>\n<li>jag</li>\n<li>saian</li>\n<li><a href=\"https://twitter.com/meidhiwirara\">Tomio</a></li>\n<li>Trabajo_de_mates (Saintcode_ and tay054)</li>\n<li>Amithuddar</li>\n<li><a href=\"https://t.me/pfahard\">pfapostol</a></li>\n<li>0x040</li>\n<li>0xbepresent</li>\n<li>cRat1st0s</li>\n<li><a href=\"https://twitter.com/fitraldys\">Fitraldys</a></li>\n<li><a href=\"https://instagram.com/vanensurya\">Funen</a></li>\n<li><a href=\"https://twitter.com/GerdusM\">gerdusx</a></li>\n<li>Metatron</li>\n<li>samruna</li>\n<li>SpaceCake</li>\n<li>zuhaibmohd</li>\n<li><a href=\"https://www.twitter.com/hakerbaya\">hakerbaya</a></li>\n<li><a href=\"https://twitter.com/mehmeddukov\">medikko</a></li>\n<li>newfork01</li>\n<li>sach1r0</li>\n<li>0xc0ffEE</li>\n</ol>\n<p>This contest was judged by <a href=\"https://github.com/HickupHH3\">hickuphh3</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/itsmetechjay\">itsmetechjay</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 8 unique vulnerabilities. Of these vulnerabilities, 0 received a risk rating in the category of HIGH severity and 8 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 73 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 73 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2022-08-foundation\">C4 Foundation Drop contest repository</a>, and is composed of 20 smart contracts written in the Solidity programming language and includes 1,218 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>.</p>\n<h1 id=\"medium-risk-findings-8\" style=\"position:relative;\"><a href=\"#medium-risk-findings-8\" aria-label=\"medium risk findings 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (8)</h1>\n<h2 id=\"m-01-creator-fees-may-be-burned\" style=\"position:relative;\"><a href=\"#m-01-creator-fees-may-be-burned\" aria-label=\"m 01 creator fees may be burned permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/31\">[M-01] Creator fees may be burned</a></h2>\n<p><em>Submitted by Lambda</em></p>\n<p><code>royaltyInfo</code>, <code>getRoyalties</code>, or <code>getFeeRecipients</code> may return <code>address(0)</code> as the recipient address. While the value 0 is correctly handled for the royalties itself, it is not for the address. In such a case, the ETH amount will be sent to <code>address(0)</code>, i.e. it is burned and lost.</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>In your logic for determining the recipients, treat <code>address(0)</code> as if no recipient was returned such that the other priorities / methods take over.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/31#issuecomment-1220570897\">HardlyDifficult (Foundation) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>We are looking into options here to improve.</p>\n<p>We believe this is Medium risk, burning a percent of the sale revenue is a form of leaking value. Otherwise the sale works as expected and the collector does get the NFT they purchased.</p>\n<p>The royalty APIs we use are meant to specific which addresses should receive payments and how much they each should receive. As the warden noted, we try to ignore entries which specify a 0 amount… but did not filter out address(0) recipients with >0 requested. Originally we were thinking this was a way of requesting that a portion of the sale be burned since that seems to be what the data is proposing.</p>\n<p>However we agree that this is more likely a configuration error. Since our market uses ETH and not ERC20 tokens, it’s unlikely that creators would actually want a portion of the proceeds burned. We are exploring a change to send the additional revenue to the seller instead of burning the funds in this scenario.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/31#issuecomment-1226890842\">HickupHH3 (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Case of protocol leaked value: Medium severity is appropriate.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-nft-creator-sales-revenue-recipients-can-steal-gas\" style=\"position:relative;\"><a href=\"#m-02-nft-creator-sales-revenue-recipients-can-steal-gas\" aria-label=\"m 02 nft creator sales revenue recipients can steal gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/165\">[M-02] NFT creator sales revenue recipients can steal gas</a></h2>\n<p><em>Submitted by berndartmueller, also found by 0xHarry, peritoflores, and shenwilly</em></p>\n<p>Selling a NFT with <code>NFTDropMarketFixedPriceSale.mintFromFixedPriceSale</code> distributes the revenue from the sale to various recipients with the <code>MarketFees._distributeFunds</code> function.</p>\n<p>Recipients:</p>\n<ul>\n<li>NFT creator(s)</li>\n<li>NFT seller</li>\n<li>Protocol</li>\n<li>Buy referrer (optional)</li>\n</ul>\n<p>It is possible to have multiple NFT creators. Sale revenue will be distributed to each NFT creator address. Revenue distribution is done by calling <code>SendValueWithFallbackWithdraw._sendValueWithFallbackWithdraw</code> and providing an appropriate gas limit to prevent consuming too much gas. For the revenue distribution to the seller, protocol and the buy referrer, a gas limit of <code>SEND_VALUE_GAS_LIMIT_SINGLE_RECIPIENT = 20_000</code> is used. However, for the creators, a limit of <code>SEND_VALUE_GAS_LIMIT_MULTIPLE_RECIPIENTS = 210_000</code> is used. This higher amount of gas is used if <code>PercentSplitETH</code> is used as a recipient.</p>\n<p>A maximum of <code>MAX_ROYALTY_RECIPIENTS = 5</code> NFT creator recipients are allowed.</p>\n<p>For example, a once honest NFT collection and its 5 royalty creator recipients could turn “malicious” and could “steal” gas from NFT buyers on each NFT sale and therefore grief NFT sales. On each NFT sell, the 5 creator recipients (smart contracts) could consume the full amount of <code>SEND_VALUE_GAS_LIMIT_MULTIPLE_RECIPIENTS = 210_000</code> forwarded gas. Totalling <code>5 * 210_000 = 1_050_000</code> gas. With a gas price of e.g. <code>20 gwei</code>, this equals to additional gas costs of <code>21_000_000 gwei = 0.028156 eth</code>, with a <code>ETH</code> price of <code>2000</code>, this would total to ~<code>56.31 $</code> additional costs.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/mixins/shared/MarketFees.sol#L130\">mixins/shared/MarketFees.sol#L130</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">  * </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Distributes funds to foundation, creator recipients, and NFT owner after a sale.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">  */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_distributeFunds</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">seller</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">price</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">buyReferrer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalFees</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">creatorRev</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sellerRev</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">creatorRecipients</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">creatorShares</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">buyReferrerFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  (</span><span class=\"mtk12\">totalFees</span><span class=\"mtk1\">, </span><span class=\"mtk12\">creatorRecipients</span><span class=\"mtk1\">, </span><span class=\"mtk12\">creatorShares</span><span class=\"mtk1\">, </span><span class=\"mtk12\">sellerRev</span><span class=\"mtk1\">, </span><span class=\"mtk12\">buyReferrerFee</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_getFees</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">nftContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">seller</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">price</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">buyReferrer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Pay the creator(s)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">creatorRecipients</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">_sendValueWithFallbackWithdraw</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">creatorRecipients</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">creatorShares</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">SEND_VALUE_GAS_LIMIT_MULTIPLE_RECIPIENTS</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// @audit-info A higher amount of gas is forwarded to creator recipients</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Sum the total creator rev from shares</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// creatorShares is in ETH so creatorRev will not overflow here.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">creatorRev</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">creatorShares</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Pay the seller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">_sendValueWithFallbackWithdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">seller</span><span class=\"mtk1\">, </span><span class=\"mtk12\">sellerRev</span><span class=\"mtk1\">, </span><span class=\"mtk12\">SEND_VALUE_GAS_LIMIT_SINGLE_RECIPIENT</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Pay the protocol fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">_sendValueWithFallbackWithdraw</span><span class=\"mtk1\">(</span><span class=\"mtk11\">getFoundationTreasury</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">totalFees</span><span class=\"mtk1\">, </span><span class=\"mtk12\">SEND_VALUE_GAS_LIMIT_SINGLE_RECIPIENT</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Pay the buy referrer fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">buyReferrerFee</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_sendValueWithFallbackWithdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">buyReferrer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">buyReferrerFee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">SEND_VALUE_GAS_LIMIT_SINGLE_RECIPIENT</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">BuyReferralPaid</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nftContract</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">buyReferrer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">buyReferrerFee</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Add the referrer fee back into the total fees so that all 3 return fields sum to the total price for events</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">totalFees</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">buyReferrerFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider only providing a higher amount of gas (<code>SEND_VALUE_GAS_LIMIT_MULTIPLE_RECIPIENTS</code>) for the first creator recipient. For all following creator recipients, only forward the reduced amount of gas <code>SEND_VALUE_GAS_LIMIT_SINGLE_RECIPIENT</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/165#issuecomment-1220553946\">HardlyDifficult (Foundation) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>We will be making changes here.</p>\n<p>This seems like a Low risk issue since only gas is at risk, but protecting our collectors is an important goal so we are comfortable with Medium here.</p>\n<p>As the warden has noted, we use gas caps consistently when interacting with external addresses/contracts. This is important to ensure that the cost to collectors does not become unwieldy.. and that the calls cannot revert (e.g. if the receiver gets stuck in a loop).</p>\n<p>The gas limits we set are high enough to allow some custom logic to be performed, and to support smart contract wallets such as Gnosis Safe. For the scenario highlighted here, we have used a very high limit in order to work with contracts such as PercentSplitETH (which will push payments to up to 5 different recipients, and those recipients may be smart contract wallets themselves).</p>\n<p>However we were too flexible here. And in total, the max potential gas costs are higher than they should be. We have changed the logic to only use <code>SEND_VALUE_GAS_LIMIT_MULTIPLE_RECIPIENTS</code> when 1 recipient is defined, otherwise use <code>SEND_VALUE_GAS_LIMIT_SINGLE_RECIPIENT</code>. This will support our PercentSplitETH scenario and use cases like it, while restricting the worst case scenario to something much more reasonable.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/165#issuecomment-1228026327\">HickupHH3 (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Keeping the Medium severity because users are potentially paying more than necessary.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-forget-to-check-some-manifolds-contracts-of-erc-2981-return-addressthis-0-when-royalties-are-not-defined-in-3rd-priority---marketfeessol\" style=\"position:relative;\"><a href=\"#m-03-forget-to-check-some-manifolds-contracts-of-erc-2981-return-addressthis-0-when-royalties-are-not-defined-in-3rd-priority---marketfeessol\" aria-label=\"m 03 forget to check some manifolds contracts of erc 2981 return addressthis 0 when royalties are not defined in 3rd priority   marketfeessol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/147\">[M-03] Forget to check “Some manifolds contracts of ERC-2981 return (address(this), 0) when royalties are not defined” in 3rd priority - MarketFees.sol</a></h2>\n<p><em>Submitted by KIntern_NA, also found by bin2chen and Lambda</em></p>\n<p>Wrong return of <code>cretorShares</code> and <code>creatorRecipients</code> can make real royalties party can’t gain the revenue of sale.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of concept</h3>\n<p>Function <code>getFees()</code> firstly <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/mixins/shared/MarketFees.sol#L422-L430\">call</a> to function <code>internalGetImmutableRoyalties</code> to get the list of <code>creatorRecipients</code> and <code>creatorShares</code> if the <code>nftContract</code> define ERC2981 royalties.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">try</span><span class=\"mtk1\"> </span><span class=\"mtk12\">implementationAddress</span><span class=\"mtk1\">.</span><span class=\"mtk11\">internalGetImmutableRoyalties</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nftContract</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_recipients</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_splitPerRecipientInBasisPoints</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  (</span><span class=\"mtk12\">creatorRecipients</span><span class=\"mtk1\">, </span><span class=\"mtk12\">creatorShares</span><span class=\"mtk1\">) = (</span><span class=\"mtk12\">_recipients</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_splitPerRecipientInBasisPoints</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">catch</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// solhint-disable-next-line no-empty-blocks</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Fall through</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<hr>\n<p>In the <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/mixins/shared/MarketFees.sol#L236-L255\">1st priority</a> it check the <code>nftContract</code> define the function <code>royaltyInfo</code> or not. If yes, it get the return value <code>receiver</code> and <code>royaltyAmount</code>. In some manifold contracts of erc2981, it <code>return (address(this), 0)</code> when royalties are not defined. So we ignore it when the <code>royaltyAmount = 0</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">try</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IRoyaltyInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nftContract</span><span class=\"mtk1\">).</span><span class=\"mtk12\">royaltyInfo</span><span class=\"mtk1\">{ gas: </span><span class=\"mtk12\">READ_ONLY_GAS_LIMIT</span><span class=\"mtk1\"> }(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">BASIS_POINTS</span><span class=\"mtk1\">) </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Manifold contracts return (address(this), 0) when royalties are not defined</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// - so ignore results when the amount is 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">royaltyAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">recipients</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">payable</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">recipients</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">splitPerRecipientInBasisPoints</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// The split amount is assumed to be 100% when only 1 recipient is returned</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">recipients</span><span class=\"mtk1\">, </span><span class=\"mtk12\">splitPerRecipientInBasisPoints</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<hr>\n<p>In the same sense, the <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/mixins/shared/MarketFees.sol#L297-L312\">3rd priority</a> (it can reach to 3rd priority when function <code>internalGetImmutableRoyalies</code> fail to return some royalties) should check same as the 1st priority with the <code>royaltyRegistry.getRoyaltyLookupAddress</code>. But the 3rd priority forget to check the case when <code>royaltyAmount == 0</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">try</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IRoyaltyInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nftContract</span><span class=\"mtk1\">).</span><span class=\"mtk12\">royaltyInfo</span><span class=\"mtk1\">{ gas: </span><span class=\"mtk12\">READ_ONLY_GAS_LIMIT</span><span class=\"mtk1\"> }(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">BASIS_POINTS</span><span class=\"mtk1\">) </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk3\">/* royaltyAmount */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">recipients</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">payable</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">recipients</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">splitPerRecipientInBasisPoints</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// The split amount is assumed to be 100% when only 1 recipient is returned</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">recipients</span><span class=\"mtk1\">, </span><span class=\"mtk12\">splitPerRecipientInBasisPoints</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  } </span></span></span></code></pre>\n<p>It will make <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/mixins/shared/MarketFees.sol#L98\">function</a> <code>_distributeFunds()</code> transfer to the wrong <code>creatorRecipients</code> (for example erc2981 return <code>(address(this), 0)</code>, market will transfer creator revenue to <code>address(this)</code> - market contract, and make the fund freeze in contract forever).</p>\n<p>This case just happen when</p>\n<ul>\n<li><code>nftContract</code> doesn’t have any support for royalties info</li>\n<li><code>overrideContract</code> which was fetched from<code>royaltyRegistry.getRoyaltyLookupAddress(nftContract)</code> implements both function <code>getRoyalties</code> and <code>royaltyInfo</code> but doesn’t support <code>royaltyInfo</code> by returning <code>(address(this), 0)</code>.</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add check if <code>royaltyAmount > 0</code> or not in 3rd priority.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/147#issuecomment-1220593088\">HardlyDifficult (Foundation) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>This was a great catch. We will be making the recommended change.</p>\n<p>Medium risk seems correct as this is a form of potentially leaking value.</p>\n<p>We agree that any contract returning <code>(address(this), 0)</code> should be treated as no royalties defined instead of paying to <code>address(this)</code>. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/147#issuecomment-1228039151\">HickupHH3 (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Yes, agree that zero royalty amount check is missing for 3rd priority.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-possible-to-bypass-saleconfiglimitperaccount\" style=\"position:relative;\"><a href=\"#m-04-possible-to-bypass-saleconfiglimitperaccount\" aria-label=\"m 04 possible to bypass saleconfiglimitperaccount permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/59\">[M-04] Possible to bypass saleConfig.limitPerAccount</a></h2>\n<p><em>Submitted by itsmeSTYJ, also found by 0x1f8b, 0x52, 0xDjango, auditor0517, byndooa, cccz, Ch_301, Chom, csanuragjain, KIntern_NA, ladboy233, nine9, PwnedNoMore, shenwilly, thank_you, Treasure-Seeker, wagmi, yixxas, and zkhorse</em></p>\n<p>It is possible to bypass the <code>saleConfig.limitPerAccount</code> set by the creator by transferring the NFTs out. For highly sought after NFT drops, a single smart contract can buy out the entire drop simply by calling <code>mintFromFixedPriceSale</code> then transferring the NFTs out and repeating the process multiple times.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Modify the <code>FixedPriceDrop.sol</code> Foundry test with the following changes.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/FixedPriceDrop.sol.orig b/FixedPriceDrop.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 0a6d698..56808f8 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/FixedPriceDrop.sol.orig</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/FixedPriceDrop.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -71,14 +71,26 @@ contract TestFixedPriceDrop is Test {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /** List for sale **/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint80 price = 0.5 ether;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    uint16 limitPerAccount = 10;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint16 limitPerAccount = 3;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     vm.prank(creator);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     nftDropMarket.createFixedPriceSale(address(nftDropCollection), price, limitPerAccount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /** Mint from sale **/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint16 count = 3;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     vm.deal(collector, 999 ether);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    vm.prank(collector);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    vm.startPrank(collector);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    nftDropMarket.mintFromFixedPriceSale{ value: price * count }(address(nftDropCollection), count, payable(0));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    // Check that available count for collector is 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint256 remaining = nftDropMarket.getAvailableCountFromFixedPriceSale(address(nftDropCollection), collector);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    assertEq(remaining, 0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    // Transfer all bought NFTs out</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    nftDropCollection.transferFrom(collector, address(5), 1);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    nftDropCollection.transferFrom(collector, address(5), 2);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    nftDropCollection.transferFrom(collector, address(5), 3);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    // Buy 3 more NFT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     nftDropMarket.mintFromFixedPriceSale{ value: price * count }(address(nftDropCollection), count, payable(0));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> }</span></span></span></code></pre>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Foundry</p>\n<h4 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Use a mapping to track how many NFTs an address has bought instead of relying on <code>balanceOf</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/59#issuecomment-1218494243\">HardlyDifficult (Foundation) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>This is accurate! We had several meetings about this concern while building the contract, ultimately deciding to move forward with this approach knowing that it has limitations. The trouble is every limit solution suggested and used in the wild today can be gamed, it’s just varying levels of friction for an attacker to work around it. Once someone has coded up a workaround, it could easily be used on any of the collections being sold by our marketplace. So we decided to KISS.</p>\n<p>But if it can be gamed, why include a limit at all? Creators want one. It sets expectations with the community and makes the sale feel more fair. Many users will respect the limit as communicated - we suspect more often than not, this simple limit check will be sufficient.</p>\n<p>What if it’s not sufficient? If someone were to clearly abuse the system it may degrade the value of the collection for all. There are options available to the creator at that point. For example, the creator could create a new collection to replace the original - airdropping NFTs to their legit holders, or allowing them to do an NFT swap (so the original collection can slowly be removed from circulation) — this swap could also have a deny list so that the abused sales cannot be used to redeem from the new collection, and presumably the original collection will quickly lose value so long as the creator’s community is on board with this process. Or the creator and their community could choose to simply accept that the sale went down this way and wait for things to balance out again on the secondary market.</p>\n<p>I selected this instance as the primary submission for having a simple &#x26; clear coded POC.</p>\n<p>We agree Medium risk is appropriate for this since it could “leak value with a hypothetical attack path with stated assumptions”.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-05-user-may-get-all-of-the-creator-fees-by-specifying-high-number-for-himself\" style=\"position:relative;\"><a href=\"#m-05-user-may-get-all-of-the-creator-fees-by-specifying-high-number-for-himself\" aria-label=\"m 05 user may get all of the creator fees by specifying high number for himself permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/34\">[M-05] User may get all of the creator fees by specifying high number for himself</a></h2>\n<p><em>Submitted by Lambda, also found by 0x52, KIntern_NA, and shenwilly</em></p>\n<p>If one creator specified a share that is larger than <code>BASIS_POINTS</code>, the first creator gets all of the royalties. Depending on how these are set (which is not in the control of the project), this can be exploited by the first creator.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<p>A collective of artists have implemented a process where everyone can set its own share of the fees to the value that he thinks is fair and these values are returned by <code>getRoyalties</code>. Bob, the first entry in the list of <code>_recipients</code> sets its value to a value that is slightly larger than <code>BASIS_POINTS</code> such that he gets all of the royalties.</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>There is no need for this check / logic, as the whole sum (<code>totalShares</code>) is used anyway to normalize the values.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/34#issuecomment-1218477008\">HardlyDifficult (Foundation) acknowledged, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>We believe this is Low risk. For the Foundation collections, the royalty rate is hard coded to 10% or via <code>PercentSplitETH</code> which is not subject to this issue. For 3rd party collections, there are more direct ways to change the distribution if the creator was attempting to be malicious towards their partners — esp via the Royalty Registry.</p>\n<p>This report is true. And the recommendation seems reasonable. However we will not be making this change. We are currently investigating changing our royalty logic in order to use the values returned by collections directly, instead of normalizing it to 10% like we do now. Most of the royalty APIs used here are not official standards, but are becoming industry standards based on growing adoption — and they are expecting the percent amounts to be defined in Basis Points.</p>\n<p>We do not want to mislead the community too much to ease the pain of the potential upcoming change I mentioned above. If they are returning values > 10,000 we don’t want that pattern to be adopted by more collections.</p>\n<p>Another option may be to ignore the results if <code>totalShares</code> sums to > 10,000 - that’s tempting but we are going to defer making a change like that until a future workstream which will be more dedicated to rethinking royalties.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/34#issuecomment-1229082114\">HickupHH3 (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Am siding with the warden here, because for 3rd party collections, it may be the case that they use a larger denomination than basis points. As mentioned in a different issue, royalty standards are still in its infancy.</p>\n<blockquote>\n<p>Most of the royalty APIs used here are not official standards, but are becoming industry standards based on growing adoption — and they are expecting the percent amounts to be defined in Basis Points.</p>\n</blockquote>\n<p>Hopeful for this to be the case so there is less ambiguity, and non-compliance can be ignored as suggested by the sponsor.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-malicious-creator-can-steal-from-collectors-upon-minting-with-a-custom-nft-contract\" style=\"position:relative;\"><a href=\"#m-06-malicious-creator-can-steal-from-collectors-upon-minting-with-a-custom-nft-contract\" aria-label=\"m 06 malicious creator can steal from collectors upon minting with a custom nft contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/211\">[M-06] Malicious Creator can steal from collectors upon minting with a custom NFT contract</a></h2>\n<p><em>Submitted by joestakey, also found by byndooa</em></p>\n<p>In the case of a fixed price sale where <code>nftContract</code> is a custom NFT contract that adheres to <code>INFTDropCollectionMint</code>, a malicious creator can set a malicious implementation of <code>INFTDropCollectionMint.mintCountTo()</code> that would result in collectors calling this function losing funds without receiving the expected amount of NFTs.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<p>Here is a <a href=\"https://gist.github.com/joestakey/4b13c7ae6029332da6eaf63b9d2a38bd\">Foundry test</a> that shows a fixed price sale with a malicious NFT contract, where a collector pays for 10 NFTs while only receiving one. It can be described as follow:</p>\n<ul>\n<li>A creator creates a malicious <code>nftContract</code> with <code>mintCountTo</code> minting only one NFT per call, regardless of the value of <code>count</code></li>\n<li>The creator calls <code>NFTDropMarketFixedPriceSale.createFixedPriceSale()</code> to create a sale for <code>nftContract</code>, with <code>limit</code> set to <code>15</code>.</li>\n<li>Bob is monitoring the <code>CreateFixedPriceSale</code> event. Upon noticing <code>CreateFixedPriceSale(customERC721, Alice, price, limit)</code>, he calls <code>NFTDropMarketFixedPriceSale.mintFromFixedPriceSale(customERC721, count == 10,)</code>. He pays the price of <code>count = 10</code> NFTs, but because of the logic in <code>mintCountTo</code>, only receives one NFT.</li>\n</ul>\n<p>Note that <code>mintCountTo</code> can be implemented in many malicious ways, this is only one example. Another implementation could simply return <code>firstTokenId</code> without performing any minting.</p>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Foundry</p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The problem here lies in the implementation of <code>INFTDropCollectionMint(nftContract).mintCountTo()</code>. You could add an additional check in <code>NFTDropMarketFixedPriceSale.mintCountTo()</code> using <code>ERC721(nftContract).balanceOf()</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ uint256 balanceBefore = IERC721(nftContract).balanceOf(msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">207:     firstTokenId = INFTDropCollectionMint(nftContract).mintCountTo(count, msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ uint256 balanceAfter = IERC721(nftContract).balanceOf(msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ require(balanceAfter == balanceBefore + count, &quot;minting failed&quot;)</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/211#issuecomment-1217433818\">itsmeSTYJ (warden) commented</a>:</strong></p>\n<blockquote>\n<p>This assumes a custom NFT contract with a bad implementation of <code>mintCountTo</code> which <em>may</em> be a stretch but I agree that your mitigation steps should be added as a sanity check.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/211#issuecomment-1220577342\">HardlyDifficult (Foundation) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>We will be making the recommended change.</p>\n<p>There’s not really anything we can do to completely stop malicious contracts - this is an inherit risk with NFT marketplaces. Even the recommended solution here is something a malicious contract could fake in order to bypass that requirement.</p>\n<p>What sold us on making a change here was not malicious creators / contracts but instead potential errors in the implementation or misunderstanding of the interface requirements our marketplace expects. To prevent these errors, we are introducing the recommended change (and it only added 1,300 gas to the mint costs!)</p>\n</blockquote>\n<hr>\n<h2 id=\"m-07-nft-of-nft-collection-or-nft-drop-collection-can-be-locked-when-calling-_mint-or-mintcountto-function-to-mint-it-to-a-contract-that-does-not-support-erc721-protocol\" style=\"position:relative;\"><a href=\"#m-07-nft-of-nft-collection-or-nft-drop-collection-can-be-locked-when-calling-_mint-or-mintcountto-function-to-mint-it-to-a-contract-that-does-not-support-erc721-protocol\" aria-label=\"m 07 nft of nft collection or nft drop collection can be locked when calling _mint or mintcountto function to mint it to a contract that does not support erc721 protocol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/183\">[M-07] NFT of NFT collection or NFT drop collection can be locked when calling _mint or mintCountTo function to mint it to a contract that does not support ERC721 protocol</a></h2>\n<p><em>Submitted by rbserver, also found by 0xc0ffEE, 0xsolstars, berndartmueller, Bnke0x0, brgltd, cccz, CodingNameKiki, Deivitto, Diraco, Dravee, durianSausage, erictee, ignacio, IllIllI, joestakey, KIntern_NA, Lambda, LeoS, Noah3o6, oyc_109, ReyAdmirado, Rohan16, Rolezn, Sm4rty, Treasure-Seeker, zeesaw, and zkhorse</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTCollection.sol#L262-L274\">https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTCollection.sol#L262-L274</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTDropCollection.sol#L171-L187\">https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTDropCollection.sol#L171-L187</a></p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>When calling the following <code>_mint</code> or <code>mintCountTo</code> function for minting an NFT of a NFT collection or NFT drop collection, the OpenZeppelin’s <code>ERC721Upgradeable</code> contract’s <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/master/contracts/token/ERC721/ERC721Upgradeable.sol#L284-L296\"><code>_mint</code></a> function is used to mint the NFT to a receiver. If such receiver is a contract that does not support the ERC721 protocol, the NFT will be locked and cannot be retrieved.</p>\n<p><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTCollection.sol#L262-L274\">https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTCollection.sol#L262-L274</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  function _mint(string calldata tokenCID) private onlyCreator returns (uint256 tokenId) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    require(bytes(tokenCID).length != 0, &quot;NFTCollection: tokenCID is required&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    require(!cidToMinted[tokenCID], &quot;NFTCollection: NFT was already minted&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // Number of tokens cannot overflow 256 bits.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      tokenId = ++latestTokenId;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      require(maxTokenId == 0 || tokenId &lt;= maxTokenId, &quot;NFTCollection: Max token count has already been minted&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      cidToMinted[tokenCID] = true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      _tokenCIDs[tokenId] = tokenCID;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      _mint(msg.sender, tokenId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      emit Minted(msg.sender, tokenId, tokenCID, tokenCID);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTDropCollection.sol#L171-L187\">https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTDropCollection.sol#L171-L187</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  function mintCountTo(uint16 count, address to) external onlyMinterOrAdmin returns (uint256 firstTokenId) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    require(count != 0, &quot;NFTDropCollection: `count` must be greater than 0&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // If +1 overflows then +count would also overflow, unless count==0 in which case the loop would exceed gas limits</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      firstTokenId = latestTokenId + 1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    latestTokenId = latestTokenId + count;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    require(latestTokenId &lt;= maxTokenId, &quot;NFTDropCollection: Exceeds max tokenId&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    for (uint256 i = firstTokenId; i &lt;= latestTokenId; ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      _mint(to, i);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ++i;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p>For reference, <a href=\"https://docs.openzeppelin.com/contracts/4.x/api/token/erc721#ERC721-_mint-address-uint256-\">OpenZeppelin’s documentation for <code>_mint</code></a> states: “Usage of this method is discouraged, use _safeMint whenever possible”.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The following steps can occur when minting an NFT of a NFT collection or NFT drop collection.</p>\n<ol>\n<li>The <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTCollection.sol#L262-L274\"><code>_mint</code></a> or <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTDropCollection.sol#L171-L187\"><code>mintCountTo</code></a> function is called with <code>msg.sender</code> or the <code>to</code> input corresponding to a contract.</li>\n<li>The OpenZeppelin’s <code>ERC721Upgradeable</code> contract’s <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/master/contracts/token/ERC721/ERC721Upgradeable.sol#L284-L296\"><code>_mint</code></a> function is called with <code>msg.sender</code> or <code>to</code> used in Step 1 as the receiver address.</li>\n<li>Since calling the OpenZeppelin’s <code>ERC721Upgradeable</code> contract’s <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/master/contracts/token/ERC721/ERC721Upgradeable.sol#L284-L296\"><code>_mint</code></a> function does not execute the same contract’s <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/master/contracts/token/ERC721/ERC721Upgradeable.sol#L400-L422\"><code>_checkOnERC721Received</code></a> function, it is unknown if the receiving contract inherits from the <code>IERC721ReceiverUpgradeable</code> interface and implements the <code>onERC721Received</code> function or not. It is possible that the receiving contract does not support the ERC721 protocol, which causes the minted NFT to be locked.</li>\n</ol>\n<h3 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTCollection.sol#L271\">https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTCollection.sol#L271</a> can be changed to the following code.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">_safeMint(msg.sender, tokenId);</span></span></code></pre>\n<p>Also, <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTDropCollection.sol#L182\">https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTDropCollection.sol#L182</a> can be changed to the following code.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">_safeMint(to, i);</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/183#issuecomment-1219513491\">HardlyDifficult (Foundation) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Agree will fix.</p>\n<p>Generally we are inclined to skip “safe” by default - it can introduce reentrancy &#x26; reverting risk and increase gas costs. When a user is making an action to buy or mint an NFT for themselves, it’s very clear that they are trying to acquire an NFT - so using safe to ensure that they support NFTs seems like a Low risk concern and we are inclined to avoid potential reentrancy/reverts and save costs for the common user paths.</p>\n<p>However in this scenario the part that stood out as different is instead of minting for yourself (the msg.sender) we support minting to an arbitrary <code>to</code> address, e.g. for an airdrop type use case. Here specifically it does seem that sending to a list of addresses could be error prone, where a contract address without 721 support was incorrectly captured. To guard against that scenario specifically we are moving forward with this change.</p>\n<p>Then for consistency we have decided to use safeMint for both collection types because the difference is nuanced.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-08-mintfromfixedpricesale-for-a-custom-contract-can-lead-to-users-losing-funds\" style=\"position:relative;\"><a href=\"#m-08-mintfromfixedpricesale-for-a-custom-contract-can-lead-to-users-losing-funds\" aria-label=\"m 08 mintfromfixedpricesale for a custom contract can lead to users losing funds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/279\">[M-08] <code>mintFromFixedPriceSale</code> for a custom contract can lead to users losing funds</a></h2>\n<p><em>Submitted by joestakey</em></p>\n<p><code>NFTDropMarketFixedPriceSale.createFixedPriceSale</code> allows creators to create a sale drop.\nA creator can create a drop sale for their custom NFT Contract that adheres to <code>INFTDropCollectionMint</code>.</p>\n<p><code>INFTDropCollectionMint.mintCountTo</code> must return the <code>firstTokenId</code> being minted, but it is not clear as to what should be returned upon all tokens being minted. A valid implementation could for instance return <code>0</code> if called after the last token has been minted.</p>\n<p>But the drop market <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/mixins/nftDropMarket/NFTDropMarketFixedPriceSale.sol#L207\">expects the call to mintCountTo</a> to revert upon the last token being minted, meaning a user calling it afterwards would lose the ETH they sent.</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<ul>\n<li>Alice creates a <code>customERC721</code> contract adhering to <code>INFTDropCollectionMint</code>. She writes <code>mintCountTo()</code> so that it returns <code>0</code> if called when all the tokens have been minted.</li>\n<li>The sale happens and collectors call <code>mintFromFixedPriceSale</code> until all the tokens have been minted.</li>\n<li>Bob now calls <code>mintFromFixedPriceSale</code>. Because all the tokens have been minted, the <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/mixins/nftDropMarket/NFTDropMarketFixedPriceSale.sol#L207\">call to mintCountTo</a> does not revert but returns <code>0</code>.</li>\n<li>The function call then proceeds to distribute the funds.</li>\n<li>Bob have lost <code>mintCost</code> ETH, while not receiving any NFT.</li>\n</ul>\n<p>You can find this <a href=\"https://gist.github.com/joestakey/5dc8839c7622bdb9467d743924f072b6\">Foundry test</a> reproducing the issue.</p>\n<p>Note that this is not an issue of a malicious creator rugging collectors with a malicious implementation: they have implemented their contract to adhere to <code>INFTDropCollectionMint</code>, and the sale went as expected.</p>\n<p>It is not unrealistic to imagine collectors monitoring <code>CreateFixedPriceSale</code> and calling <code>mintFromFixedPriceSale</code> based on it. In this case, all the <code>mintFromFixedPriceSale</code> processed after the last token being minted would lead to loss of funds.</p>\n<h3 id=\"tools-used-3\" style=\"position:relative;\"><a href=\"#tools-used-3\" aria-label=\"tools used 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Foundry</p>\n<h3 id=\"recommend-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommend-mitigation-steps\" aria-label=\"recommend mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommend Mitigation Steps</h3>\n<p>You can add an additional check in <code>NFTDropMarketFixedPriceSale.mintCountTo()</code> using <code>ERC721(nftContract).balanceOf()</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ uint256 balanceBefore = IERC721(nftContract).balanceOf(msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">207:     firstTokenId = INFTDropCollectionMint(nftContract).mintCountTo(count, msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ uint256 balanceAfter = IERC721(nftContract).balanceOf(msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ require(balanceAfter == balanceBefore + count, &quot;minting failed&quot;)</span></span></span></code></pre>\n<p>You can also specify in <code>INFTDropCollectionMint</code> that <code>mintCountTo</code> must revert if called after all tokens have been minted.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/279#issuecomment-1220574136\">HardlyDifficult (Foundation) marked as duplicate and commented</a>:</strong></p>\n<blockquote>\n<p>Although this submission uses a different POC, we believe it’s the same issue &#x26; root cause as <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/211\">#211</a>.</p>\n<p>Dupe of <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/211\">#211</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/279#issuecomment-1229461934\">joestakey (warden) commented</a>:</strong></p>\n<blockquote>\n<p>I will argue this issue is actually different than <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/211\">#211</a>, although they both come from the same function call:</p>\n<ul>\n<li>In <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/211\">#211</a>, the issue lies in the logic performed in <code>INFTDropCollectionMint.mintCountTo()</code>, more precisely the fact that a malicious implementation can perform incorrect state logic, which results in any collector calling <code>NFTDropMarketFixedPriceSale.mintFromFixedPriceSale</code> losing funds without receiving the expected amount of NFTs.</li>\n<li>Here, the issue lies in the return value of <code>INFTDropCollectionMint.mintCountTo()</code> in an edge case - when all the tokens have been minted. There is no malicious implementation or wrong state logic: users calling <code>NFTDropMarketFixedPriceSale.mintFromFixedPriceSale</code> will receive the expected amount of NFTs. The problem is when the minting is done: the <code>DropMarket</code> expect subsequent calls to <code>mintCountTo()</code> to fail. While you can argue not reverting after the final token has been minted is breaking a semantic requirement, it still complies with the interface <code>INFTDropCollectionMint</code>. Not reverting on failure is a behavior that exists in other standards, such as some ERC20 tokens for instance, like <a href=\"https://etherscan.io/address/0xe41d2489571d322189246dafa5ebde1f4699f498#code\">ZRX</a>.</li>\n</ul>\n<p>To illustrate the difference between the two issues, take the NFT contract used in the PoC for this issue: users calling <code>NFTDropMarketFixedPriceSale.mintFromFixedPriceSale</code> will receive the expected amount of NFTs - i.e. it is not affected by the issue #211. The problem arises only upon the final token being minted.</p>\n<p>In summary, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/211\">#211</a> is about malicious implementations that users should be made aware of (docs or UI warnings) while this issue has to do with the fact <code>INFTDropCollectionMint.mintCountTo()</code> should define a stricter behavior when the last token has been minted, perhaps by adding a comment such as:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">/// if the minting fails it MUST result in the transaction being reverted.</span></span></code></pre>\n<p>@HickupHH3 thoughts?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/279#issuecomment-1240810016\">HickupHH3 (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The root cause for both issues is about the “potential errors in the implementation or misunderstanding of the interface requirements”. Simply put, the ambiguity regarding the specification of <code>mintCountTo()</code> allows for it to be exploited. As you pointed out, #211 is exploited by malicious implementations while this issue happens even if the implementation is seemingly compliant to the interface because of the ambiguity.</p>\n<p>It’s a tough decision because while the methods are different, the root cause and consequence (users losing funds) are the same.</p>\n<p>I’ll side with you on this one, because the attack vectors are quite distinct. It’s similar to how I separated the strategist rug vectors for the Rubicon contest.</p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 73 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/184\">report highlighted below</a> by <strong>Saw-mon_and_Natalie</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/127\">Dravee</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/25\">Lambda</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/207\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/289\">rbserver</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/41\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/161\">berndartmueller</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/51\">Chom</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/208\">zkhorse</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/148\">carlitox477</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/115\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/112\">csanuragjain</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/249\">joestakey</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/239\">0xsolstars</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/144\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/62\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/167\">shenwilly</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/274\">Deivitto</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/234\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/262\">d3e4</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/224\">yash90</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/139\">0xDjango</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/130\">0xSolus</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/251\">c3phas</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/37\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/188\">simon135</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/69\">Bnke0x0</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/156\">robee</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/196\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/85\">0x52</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/194\">auditor0517</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/21\">danb</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/212\">delfin454000</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/44\">durianSausage</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/14\">erictee</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/247\">ladboy233</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/57\">oyc_109</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/232\">PwnedNoMore</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/174\">TomJ</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/49\">gogo</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/86\">Kumpa</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/73\">mics</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/222\">ret2basic</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/117\">rokinot</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/179\">thank_you</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/93\">Treasure-Seeker</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/272\">wagmi</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/199\">Waze</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/101\">_141345_</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/253\">brgltd</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/149\">bulej93</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/285\">JC</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/47\">zeesaw</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/83\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/71\">sikorico</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/257\">apostle0x01</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/214\">jonatascm</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/6\">Vexjon</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/219\">cryptphi</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/98\">0xackermann</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/153\">0xmatt</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/74\">bobirichman</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/173\">DevABDee</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/170\">ElKu</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/42\">iamwhitelights</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/76\">LeoS</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/225\">Rohan16</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/202\">Sm4rty</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/105\">MiloTruck</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/61\">ReyAdmirado</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/273\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/97\">cccz</a>, and <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/18\">Yiko</a>.</em></p>\n<h2 id=\"1-contractsmixinscollectionscollectionroyaltiessol\" style=\"position:relative;\"><a href=\"#1-contractsmixinscollectionscollectionroyaltiessol\" aria-label=\"1 contractsmixinscollectionscollectionroyaltiessol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[1] contracts/mixins/collections/CollectionRoyalties.sol</h2>\n<p>On line <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/mixins/collections/CollectionRoyalties.sol#L80\">80</a>, <code>supportsInterface</code> can be rewritten to avoid the <code>if/esle</code> branching:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">supportsInterface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interfaceSupported</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IRoyaltyInfo</span><span class=\"mtk1\">).</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ITokenCreator</span><span class=\"mtk1\">).</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IGetRoyalties</span><span class=\"mtk1\">).</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IGetFees</span><span class=\"mtk1\">).</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">supportsInterface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2 id=\"2-contractsinterfacesicollectionfactorysol\" style=\"position:relative;\"><a href=\"#2-contractsinterfacesicollectionfactorysol\" aria-label=\"2 contractsinterfacesicollectionfactorysol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[2] contracts/interfaces/ICollectionFactory.sol</h2>\n<p>In <code>ICollectionFactory</code> on line <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/interfaces/ICollectionFactory.sol#L6\">6</a>, <code>IProxyCall</code> is never used and can safely be removed. Unless there is a plan to use it in the future. Maybe a comment explaining why it was imported here would be helpful.</p>\n<h2 id=\"3-contractsmixinssharedcontractfactorysol\" style=\"position:relative;\"><a href=\"#3-contractsmixinssharedcontractfactorysol\" aria-label=\"3 contractsmixinssharedcontractfactorysol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[3] contracts/mixins/shared/ContractFactory.sol</h2>\n<p>On line <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/mixins/shared/ContractFactory.sol#L31\">31</a>, there is a check for <code>_contractFactory</code> to see if it already has a code. I guess this is an extra check that can be removed. Since if <code>_contractFactory</code> calls the constructor here in its own constructor by then <code>_contractFactory.isContract() = _contractFactory.code.length == 0</code>. Also, it is possible that a wrong contract address is passed here, so the check would not really do anything. This will only check against accidental EOA addresses used for <code>_contractFactory</code>. So we could possibly remove the following lines:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">5</span><span class=\"mtk1\">\t</span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">13</span><span class=\"mtk1\"> \t</span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">AddressUpgradeable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">address</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">31</span><span class=\"mtk1\">\t</span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_contractFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;ContractFactory: Factory is not a contract&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>If there is a stricter condition for the allowed <code>contractFactory</code> addresses, maybe we could use that instead. One possible idea is an array of implementation contract code hashes that we could check. Or maybe contracts that have a function similar to <code>supportsInterface</code> that returns a magic number which we could check here.</p>\n<h2 id=\"4-contractsnftcollectionsol\" style=\"position:relative;\"><a href=\"#4-contractsnftcollectionsol\" aria-label=\"4 contractsnftcollectionsol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[4] contracts/NFTCollection.sol</h2>\n<h3 id=\"41-shorter-inheritance-list\" style=\"position:relative;\"><a href=\"#41-shorter-inheritance-list\" aria-label=\"41 shorter inheritance list permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.1 Shorter inheritance list</h3>\n<p>The inheritance contracts on line <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTCollection.sol#L29-L40\">29-40</a> can be consolidated into a shorter list:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">NFTCollection</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">INFTCollectionInitializer</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">ContractFactory</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">SequentialMintCollection</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">CollectionRoyalties</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span></code></pre>\n<p>Then you would need to adjust the overrides on lines <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTCollection.sol#L255\">255</a> and <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTCollection.sol#L316\">316</a></p>\n<h3 id=\"42-cid-need-to-be-unique-per-tokenid\" style=\"position:relative;\"><a href=\"#42-cid-need-to-be-unique-per-tokenid\" aria-label=\"42 cid need to be unique per tokenid permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.2 <code>CID</code> need to be unique per <code>tokenID</code></h3>\n<p>Different <code>tokenID</code>s can not share the same <code>CID</code> by design. Although it is possible to design the contract so that some tokens share the same <code>CID</code> to save storage and also server space for off-chain contents.</p>\n<h2 id=\"5-contractsnftcollectionfactorysol\" style=\"position:relative;\"><a href=\"#5-contractsnftcollectionfactorysol\" aria-label=\"5 contractsnftcollectionfactorysol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[5] contracts/NFTCollectionFactory.sol</h2>\n<h3 id=\"51-iscontract\" style=\"position:relative;\"><a href=\"#51-iscontract\" aria-label=\"51 iscontract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.1 <code>.isContract()</code></h3>\n<p>On lines <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTCollectionFactory.sol#L182\">182</a>, and <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTCollectionFactory.sol#L203\">203</a> instead of checking if <code>addr.isContract()</code> to avoid setting the addresses to EOA by mistake it would be best to pass the code hash instead and check the code hash at those addresses. So for example:</p>\n<p>Before:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">constructor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_rolesContract</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rolesContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;NFTCollectionFactory: RolesContract is not a contract&quot;</span><span class=\"mtk1\">); </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">rolesContract</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IRoles</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rolesContract</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>After:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">constructor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_rolesContract</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">codehash</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rolesContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">codehash</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">codehash</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTCollectionFactory: RolesContract is not a contract&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">rolesContract</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IRoles</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rolesContract</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This is a stronger requirement since it would guarantee that the addresses are contracts and also they have the required code hash. For the functions to pass the <code>require</code> statements you would need to make 2 mistakes, one for the address and the other for the code hash. The probability of making this mistake should be theoretically lower than just passing a wrong address.</p>\n<h3 id=\"52-versionnftdropcollection\" style=\"position:relative;\"><a href=\"#52-versionnftdropcollection\" aria-label=\"52 versionnftdropcollection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.2 <code>versionNFTDropCollection</code></h3>\n<p>Doesn’t have an initializer like <code>versionNFTCollection</code>.</p>\n<h3 id=\"53-a-better-name--can-be-chosen-for-rolescontract\" style=\"position:relative;\"><a href=\"#53-a-better-name--can-be-chosen-for-rolescontract\" aria-label=\"53 a better name  can be chosen for rolescontract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.3 a better name  can be chosen for <code>rolesContract</code></h3>\n<p><code>rolerManager</code> might be a better name for this immutable variable and would make it easier to remember what it does (ref. line <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTCollectionFactory.sol#L104\">104</a>).</p>\n<h2 id=\"6-contractsnftdropcollectionsol\" style=\"position:relative;\"><a href=\"#6-contractsnftdropcollectionsol\" aria-label=\"6 contractsnftdropcollectionsol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[6] contracts/NFTDropCollection.sol</h2>\n<h3 id=\"61-supportsinterface-function\" style=\"position:relative;\"><a href=\"#61-supportsinterface-function\" aria-label=\"61 supportsinterface function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.1 <code>supportsInterface</code> function</h3>\n<p>We can rewrite <code>supportsInterface</code> function (Lines <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTDropCollection.sol#L284-L294\">284-294</a>) like the following block which would make it easier to read and possibly would save some gas.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">supportsInterface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">override</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ERC165Upgradeable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">AccessControlUpgradeable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ERC721Upgradeable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">CollectionRoyalties</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">INFTDropCollectionMint</span><span class=\"mtk1\">).</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">supportsInterface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"62-the-comment-on-line-175-needs-a-bit-of-correction\" style=\"position:relative;\"><a href=\"#62-the-comment-on-line-175-needs-a-bit-of-correction\" aria-label=\"62 the comment on line 175 needs a bit of correction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.2 The comment on line <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTDropCollection.sol#L175\">175</a> needs a bit of correction</h3>\n<p>So the current comment says:</p>\n<blockquote>\n<p>If +1 overflows then +count would also overflow, <strong>unless count==0 in which case the loop would exceed gas limits</strong></p>\n</blockquote>\n<p>But <code>count</code> can not be zero if we have reached this line. Since we have already checked for a non-zero <code>count</code> on line <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTDropCollection.sol#L172\">172</a></p>\n<p>So we can change the comment to</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// If +1 overflows then +count would also overflow, since count &gt; 0.</span></span></span></code></pre>\n<h3 id=\"63-shorter-inheritance-list\" style=\"position:relative;\"><a href=\"#63-shorter-inheritance-list\" aria-label=\"63 shorter inheritance list permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.3 Shorter inheritance list</h3>\n<p>Like <code>NFTCollection</code>, the inheritence list for <code>NFTDropCollection</code> contract on lines <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTDropCollection.sol#L28-L46\">28-46</a> can be consolidated more.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">NFTDropCollection</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">INFTDropCollectionInitializer</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">INFTDropCollectionMint</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">ContractFactory</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">MinterRole</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">SequentialMintCollection</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">CollectionRoyalties</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span></code></pre>\n<p>The <code>overrides</code> on lines <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTDropCollection.sol#L245\">245</a> and <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTDropCollection.sol#L287\">287</a> would also need to be modified accordingly.</p>\n<h2 id=\"7-contractsmixinsnftdropmarketnftdropmarketfixedpricesalesol\" style=\"position:relative;\"><a href=\"#7-contractsmixinsnftdropmarketnftdropmarketfixedpricesalesol\" aria-label=\"7 contractsmixinsnftdropmarketnftdropmarketfixedpricesalesol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[7] contracts/mixins/nftDropMarket/NFTDropMarketFixedPriceSale.sol</h2>\n<p>In <code>mintFromFixedPriceSale</code> we can avoid the nested <code>if</code> blocks on lines <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/mixins/nftDropMarket/NFTDropMarketFixedPriceSale.sol#L182-L189\">182-189</a>. This would improve readability and analyze and it would have the same effect. On the plus side, it will also save gas for a reverting call where <code>saleConfig.limitPerAccount</code> is zero by avoiding the outer <code>if</code> block in the original code.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Confirm that the collection has a sale in progress.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">saleConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">limitPerAccount</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NFTDropMarketFixedPriceSale_Must_Have_Sale_In_Progress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Confirm that the buyer will not exceed the limit specified after minting.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nftContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">) + </span><span class=\"mtk12\">count</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">saleConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">limitPerAccount</span><span class=\"mtk1\">) {\t</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NFTDropMarketFixedPriceSale_Cannot_Buy_More_Than_Limit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">saleConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">limitPerAccount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2 id=\"8-contractsfethsol-out-of-scope\" style=\"position:relative;\"><a href=\"#8-contractsfethsol-out-of-scope\" aria-label=\"8 contractsfethsol out of scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[8] contracts/FETH.sol (Out of Scope)</h2>\n<p>In <code>constructor</code> instead of passing <code>_lockupDuration</code> pass <code>_lockupInterval</code> to save on the exact division check.</p>\n<p>So taking that into consideration the <code>constructor</code> would look like this:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">constructor</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_foundationMarket</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_foundationDropMarket</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_lockupInterval</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">_foundationMarket</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FETH_Market_Must_Be_A_Contract</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">_foundationDropMarket</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FETH_Market_Must_Be_A_Contract</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_lockupInterval</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FETH_Invalid_Lockup_Duration</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">foundationMarket</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_foundationMarket</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">foundationDropMarket</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_foundationDropMarket</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">lockupInterval</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_lockupInterval</span><span class=\"mtk1\">; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">lockupDuration</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_lockupInterval</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">24</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Also, the <code>_lockupInterval</code>  check is moved up before the assignments to save gas in case of a revert. If there will be no revert, moving up the <code>if</code> block would not introduce any gas changes, since the check will be performed eventually.</p>\n<h2 id=\"9-line-width\" style=\"position:relative;\"><a href=\"#9-line-width\" aria-label=\"9 line width permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[9] Line Width</h2>\n<p>Keep line width to max 120 characters for better readability.</p>\n<h2 id=\"10-hard-coded-gas-limits\" style=\"position:relative;\"><a href=\"#10-hard-coded-gas-limits\" aria-label=\"10 hard coded gas limits permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[10] Hard-coded gas limits</h2>\n<p>In <code>contracts/mixins/shared/Constants.sol</code> we have 3 gas limit constants:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">READ_ONLY_GAS_LIMIT</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">40000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SEND_VALUE_GAS_LIMIT_MULTIPLE_RECIPIENTS</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">210000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SEND_VALUE_GAS_LIMIT_SINGLE_RECIPIENT</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">20000</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>These numbers are not future-proof as some hardforks introduce changes to gas costs. These potential future changes to gas costs might break some of the functionalities of the smart contracts that use these constants. This is something to keep in mind. If some hardfork, would break a smart contract using these numbers you would need to deploy new contracts with adjusted gas limit constants. Or you can also have these gas limits be mutable by admins on-chain. For example, all 3 of these values can be stored on-chain in 1 storage slot.</p>\n<h2 id=\"11-addressiscontract-check\" style=\"position:relative;\"><a href=\"#11-addressiscontract-check\" aria-label=\"11 addressiscontract check permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[11] <code>address.isContract</code> check</h2>\n<p>Lots of the contracts in this project import <code>import \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\"</code> and use <code>address.isContract()</code> to check if an address is a contract and not a EOA. I guess this is only a check if the deployer by mistake provides the wrong address. I think this should be double-checked off-chain. If an on-chain check is needed, there are other checks that can be done that are even more strict than just checking against EOA mistakes. For example, we can provide the contract as the second input to the constructor and check the address’s codehash against that. Here is a template as an example:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">constructor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">c</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">h</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">if</span><span class=\"mtk1\">( </span><span class=\"mtk12\">c</span><span class=\"mtk1\">.</span><span class=\"mtk12\">codehash</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">h</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CustomError</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Not only does this check for address with code, but also pinpoints the contract hash to a specific hash. Another type of check that can be used is to check if the provided contract address supports a specific <code>interfaceSupport</code> or call an endpoint of the contract expecting it to return a specific magic number.</p>\n<p>Here is a list of places <code>isContract</code> has been used:</p>\n<ol>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/FETH.sol#L201\">FETH.sol - L201</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/FETH.sol#L204\">FETH.sol - L204</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTCollectionFactory.sol#L182\">NFTCollectionFactory.sol - L182</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTCollectionFactory.sol#L203\">NFTCollectionFactory.sol - L203</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTCollectionFactory.sol#L227\">NFTCollectionFactory.sol - L227</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/PercentSplitETH.sol#L171\">PercentSplitETH.sol - L171</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/libraries/AddressLibrary.sol#L31\">AddressLibrary.sol - L31</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/mixins/shared/ContractFactory.sol#L31\">ContractFactory.sol - L31</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/mixins/shared/FETHNode.sol#L23\">FETHNode.sol - L23</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/mixins/shared/FoundationTreasuryNode.sol#L48\">FoundationTreasuryNode.sol - L48</a></li>\n</ol>\n<h2 id=\"12-simplify-supportsinterface-check\" style=\"position:relative;\"><a href=\"#12-simplify-supportsinterface-check\" aria-label=\"12 simplify supportsinterface check permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[12] Simplify <code>supportsInterface</code> check</h2>\n<h3 id=\"121-nftdropcollectionsol\" style=\"position:relative;\"><a href=\"#121-nftdropcollectionsol\" aria-label=\"121 nftdropcollectionsol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>12.1 NFTDropCollection.sol</h3>\n<p><code>NFTDropCollection.supportsInterface</code> (lines <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTDropCollection.sol#L284-L295\">284-295</a>) can be changed to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">supportsInterface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">override</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ERC165Upgradeable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">AccessControlUpgradeable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ERC721Upgradeable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">CollectionRoyalties</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">INFTDropCollectionMint</span><span class=\"mtk1\">).</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> || </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">supportsInterface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"122-collectionroyaltiessol\" style=\"position:relative;\"><a href=\"#122-collectionroyaltiessol\" aria-label=\"122 collectionroyaltiessol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>12.2 CollectionRoyalties.sol</h3>\n<p><code>CollectionRoyalties.supportsInterface</code> (lines <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/mixins/collections/CollectionRoyalties.sol#L80-L91\">80-91</a>) can be changed to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">supportsInterface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IRoyaltyInfo</span><span class=\"mtk1\">).</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ITokenCreator</span><span class=\"mtk1\">).</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IGetRoyalties</span><span class=\"mtk1\">).</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IGetFees</span><span class=\"mtk1\">).</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">interfaceSupported</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">supportsInterface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2 id=\"13-floating-solidity-pragma-version\" style=\"position:relative;\"><a href=\"#13-floating-solidity-pragma-version\" aria-label=\"13 floating solidity pragma version permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[13] Floating Solidity Pragma Version</h2>\n<p>It’s best to use the same compiler version across all project files/team members. So having a fixed version pragma is a good practice. Most contracts use a floating pragma which would allow the patch number to be equal or higher than the specified patch number.</p>\n<h2 id=\"14-avoid-nested-if-blocks\" style=\"position:relative;\"><a href=\"#14-avoid-nested-if-blocks\" aria-label=\"14 avoid nested if blocks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[14] Avoid Nested <code>if</code> Blocks</h2>\n<p>For better readability and analysis it is better to avoid nested <code>if</code> blocks. Here is an example:</p>\n<h3 id=\"141-fethsol-lines-482-492\" style=\"position:relative;\"><a href=\"#141-fethsol-lines-482-492\" aria-label=\"141 fethsol lines 482 492 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>14.1 FETH.sol (lines <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/FETH.sol#L482-L492\">482-492</a>)</h3>\n<p>After edit:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">spenderAllowance</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">return</span><span class=\"mtk1\"> ;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">spenderAllowance</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FETH_Insufficient_Allowance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">spenderAllowance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// The check above ensures allowance cannot underflow.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">spenderAllowance</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">accountInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">allowance</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">spenderAllowance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Approval</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">spenderAllowance</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/184#issuecomment-1219792087\">HardlyDifficult (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Very detailed and thoughtful feedback — thank you!</p>\n<p>[1] supportsInterface can be rewritten to avoid the if/else branching:</p>\n<blockquote>\n<p>I think I do like this style more, will consider the change.</p>\n</blockquote>\n<p>[2] contracts/interfaces/ICollectionFactory.sol</p>\n<blockquote>\n<p>Agree, fixed.</p>\n</blockquote>\n<p>[3] contracts/mixins/shared/ContractFactory.sol</p>\n<blockquote>\n<p>Not sure I’m following this suggestion. There does not appear to be another .code.length type check included at the moment. Considering a stricter check is compelling but since this is an admin function call I think that may be overkill here.</p>\n</blockquote>\n<p>[4.1] Shorter inheritance list</p>\n<blockquote>\n<p>True but for top-level contracts I like to expand all inherited contracts to make it clear what all the dependencies are and the lineriazation order they are included in.</p>\n</blockquote>\n<p>[4.2] CID need to be unique per tokenID</p>\n<blockquote>\n<p>Agree. This is a primary goal of the NFTDropCollection. As you note there are other more flexible ways we could run with this type of approach and we may consider those in the future.</p>\n</blockquote>\n<p>[5.1] .isContract()</p>\n<blockquote>\n<p>Fair feedback. Considering a stricter check is compelling but since this is an admin function call I think that may be overkill here.</p>\n</blockquote>\n<p>[5.2] versionNFTDropCollection</p>\n<blockquote>\n<p>By design - the default value of 0 is correct there. NFTCollections were previously created by a different factory contract, we wanted the new factory to pick up version where that left off. But drops are new so starting at 0 is correct.</p>\n</blockquote>\n<p>[5.3] a better name can be chosen for rolesContract</p>\n<blockquote>\n<p>Agree, I like that name more and will update.</p>\n</blockquote>\n<p>[6.2] The comment on line <a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df42/contracts/NFTDropCollection.sol#L175\">175</a> needs a bit of correction</p>\n<blockquote>\n<p>Good catch — this was missed after adding a require against count == 0. Will fix.</p>\n</blockquote>\n<p>[7] contracts/mixins/nftDropMarket/NFTDropMarketFixedPriceSale.sol</p>\n<blockquote>\n<p>Although minor, this approach was used to save gas for the happy case scenario since it avoids a second if condition.</p>\n</blockquote>\n<p>[8] contracts/FETH.sol (Out of Scope)</p>\n<blockquote>\n<p>Fair feedback, but I think the current approach is easier to reason about. And saving admin-only gas is not a goal for us.</p>\n</blockquote>\n<p>[9] Line Width</p>\n<blockquote>\n<p>Our linter is configured to require 120… although maybe you mean we are adding new lines too early in some instances (?)</p>\n</blockquote>\n<p>[10] Hard-coded gas limits</p>\n<blockquote>\n<p>Fair feedback. However the use case requires some gas limit to be defined and it’s not clear there is a viable alternative here.</p>\n</blockquote>\n<p>[11] address.isContract check</p>\n<blockquote>\n<p>This is good feedback. ATM these checks are there to help avoid simple errors by the admin. I’m not sure that the stricter check is worth the complexity to maintain.</p>\n</blockquote>\n<p>[12] Use fixed pragma</p>\n<blockquote>\n<p>Disagree. We intentionally use a floating pragma in order to make integrating with contracts easier. Other contract developers are looking to interact with our contracts and they may be on a different version than we use. The pragma selected for our contracts is the minimum required in order to correctly compile and function. This way integration is easier if they lag a few versions behind, or if they use the latest but we don’t bump our packages frequently enough, and when we do upgrade versions unless there was a breaking solidity change — it should just swap in by incrementing our npm package version.</p>\n</blockquote>\n<p>[14] Avoid Nested if Blocks</p>\n<blockquote>\n<p>(out of scope) I agree that style is better, will fix.</p>\n</blockquote>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/184#issuecomment-1255770289\">HickupHH3 (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Slightly disagree with #3. Agree with sponsor that the suggestion isn’t clear.</p>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this contest, 73 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/122\">report highlighted below</a> by <strong>Dravee</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/277\">c3phas</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/35\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/261\">Deivitto</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/206\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/123\">0xkatana</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/187\">Saw-mon_and_Natalie</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/60\">ReyAdmirado</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/56\">oyc_109</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/52\">Bnke0x0</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/106\">MiloTruck</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/192\">simon135</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/48\">gogo</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/284\">JC</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/65\">ajtra</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/13\">erictee</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/128\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/80\">jag</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/151\">saian</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/171\">TomJ</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/210\">zkhorse</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/100\">_141345_</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/38\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/271\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/175\">DevABDee</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/66\">joestakey</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/256\">d3e4</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/82\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/102\">Noah3o6</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/181\">Tomio</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/205\">Trabajo_de_mates</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/197\">Waze</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/43\">durianSausage</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/246\">Amithuddar</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/77\">LeoS</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/155\">robee</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/226\">Rohan16</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/201\">Sm4rty</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/233\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/75\">bobirichman</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/145\">carlitox477</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/11\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/168\">ElKu</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/104\">pfapostol</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/287\">0x040</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/55\">0xbepresent</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/140\">0xDjango</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/72\">mics</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/250\">apostle0x01</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/107\">cRat1st0s</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/53\">Diraco</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/245\">Fitraldys</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/281\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/276\">gerdusx</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/5\">ignacio</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/209\">Metatron</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/4\">samruna</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/120\">SpaceCake</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/45\">zeesaw</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/109\">zuhaibmohd</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/67\">0xHarry</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/255\">brgltd</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/150\">bulej93</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/242\">Chom</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/180\">hakerbaya</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/264\">ladboy233</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/282\">medikko</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/172\">newfork01</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/198\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/185\">sach1r0</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/70\">sikorico</a>, <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/278\">wagmi</a>, and <a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/19\">Yiko</a>.</em></p>\n<h2 id=\"code-impressions\" style=\"position:relative;\"><a href=\"#code-impressions\" aria-label=\"code impressions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Code Impressions</h2>\n<p>Overall, the code is pretty optimized:</p>\n<ul>\n<li>Using clones to deploy contracts is an excellent call</li>\n<li>The <code>unchecked</code> statements are well used</li>\n<li>Storage variables are tightly packed</li>\n</ul>\n<p>Just one particular finding was present across the whole project:</p>\n<ul>\n<li>The revert strings are too long. Please try to make them fit in 32 bytes (use the first letters of the contract as a prefix, as an example, like <code>NFTCF</code> instead of <code>NFTCollectionFactory</code>), or use Custom Errors consistently</li>\n</ul>\n<p>Due to some inconsistencies with the <code>gas-stories.txt</code> file, I unfortunately did not attach it.</p>\n<h2 id=\"g-01-check-for-bytes_symbollength--0-before-calling-nftdropcollectioninitialize-like-its-done-for-nftcollectioninitialize\" style=\"position:relative;\"><a href=\"#g-01-check-for-bytes_symbollength--0-before-calling-nftdropcollectioninitialize-like-its-done-for-nftcollectioninitialize\" aria-label=\"g 01 check for bytes_symbollength  0 before calling nftdropcollectioninitialize like its done for nftcollectioninitialize permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Check for <code>bytes(_symbol).length > 0</code> before calling <code>NFTDropCollection.initialize()</code>, like it’s done for <code>NFTCollection.initialize()</code></h2>\n<p>This could save a lot of gas if the revert condition is met.</p>\n<p>For <code>NFTCollection</code>, the check is made in <code>NFTCollectionFactory.createNFTCollection()</code>.</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTCollectionFactory.sol#L262\">NFTCollectionFactory.sol#L262</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">NFTCollectionFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">257</span><span class=\"mtk1\">:   </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createNFTCollection</span><span class=\"mtk1\">( </span><span class=\"mtk3\">//@audit-ok OK function</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">258:     </span><span class=\"mtk10\">string</span><span class=\"mtk1\"> </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">name</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">259:     </span><span class=\"mtk10\">string</span><span class=\"mtk1\"> </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">symbol</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">260:     </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">nonce</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">261</span><span class=\"mtk1\">:   ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collection</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">262</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">symbol</span><span class=\"mtk1\">).</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTCollectionFactory: Symbol is required&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit why is the check inconsistently done ? Here it&#39;s in this function but for drop it&#39;s in the initialize() function. Chose 1, I&#39;d advise this one style to save gas.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">263</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">264</span><span class=\"mtk1\">:     </span><span class=\"mtk3\">// This reverts if the NFT was previously created using this implementation version + msg.sender + nonce</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">265</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">collection</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">implementationNFTCollection</span><span class=\"mtk1\">.</span><span class=\"mtk11\">cloneDeterministic</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_getSalt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">nonce</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">266</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">267</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">INFTCollectionInitializer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collection</span><span class=\"mtk1\">).</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">), </span><span class=\"mtk12\">name</span><span class=\"mtk1\">, </span><span class=\"mtk12\">symbol</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">268</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">269</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NFTCollectionCreated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collection</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">versionNFTCollection</span><span class=\"mtk1\">, </span><span class=\"mtk12\">name</span><span class=\"mtk1\">, </span><span class=\"mtk12\">symbol</span><span class=\"mtk1\">, </span><span class=\"mtk12\">nonce</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">270</span><span class=\"mtk1\">:   }</span></span></span></code></pre>\n<p>However, for <code>NFTDropCollection</code>, the check is made way further, after even the contract’s creation (during the initialization):</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTDropCollection.sol#L130\">NFTDropCollection.sol#L130</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">NFTDropCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">120</span><span class=\"mtk1\">:   </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">121:     </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_creator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">122:     </span><span class=\"mtk10\">string</span><span class=\"mtk1\"> </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_name</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">123:     </span><span class=\"mtk10\">string</span><span class=\"mtk1\"> </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_symbol</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">124:     </span><span class=\"mtk10\">string</span><span class=\"mtk1\"> </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_baseURI</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">125:     </span><span class=\"mtk10\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_postRevealBaseURIHash</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">126:     </span><span class=\"mtk10\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_maxTokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">127:     </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_approvedMinter</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">128:     </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_paymentAddress</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">129</span><span class=\"mtk1\">:   ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initializer</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyContractFactory</span><span class=\"mtk1\"> </span><span class=\"mtk11\">validBaseURI</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_baseURI</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">130</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_symbol</span><span class=\"mtk1\">).</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTDropCollection: `_symbol` must be set&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_maxTokenId</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTDropCollection: `_maxTokenId` must be set&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Consider moving the check in <code>NFTCollectionFactory._createNFTDropCollection()</code>:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/main/contracts/NFTCollectionFactory.sol#L396\">NFTCollectionFactory.sol#L396</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: NFTCollectionFactory.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">386:   function _createNFTDropCollection(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">387:     string calldata name,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">388:     string calldata symbol,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">389:     string calldata baseURI,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">390:     bytes32 postRevealBaseURIHash,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">391:     uint32 maxTokenId,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">392:     address approvedMinter,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">393:     address payable paymentAddress,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">394:     uint256 nonce</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">395:   ) private returns (address collection) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">396:     // This reverts if the NFT was previously created using this implementation version + msg.sender + nonce</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 396:     require(bytes(symbol).length ! 0, &quot;NFTDropCollection: `symbol` must be set&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">397:     collection = implementationNFTDropCollection.cloneDeterministic(_getSalt(msg.sender, nonce));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">398: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">399:     INFTDropCollectionInitializer(collection).initialize(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">400:       payable(msg.sender),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">401:       name,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">402:       symbol,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">403:       baseURI,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">404:       postRevealBaseURIHash,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">405:       maxTokenId,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">406:       approvedMinter,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">407:       paymentAddress</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">408:     );</span></span></span></code></pre>\n<p>This would save the deployment cost of an impossible to initialize contract (which would further need to be destroyed before being redeployed).</p>\n<h2 id=\"g-02-caching-storage-values-in-memory\" style=\"position:relative;\"><a href=\"#g-02-caching-storage-values-in-memory\" aria-label=\"g 02 caching storage values in memory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] Caching storage values in memory</h2>\n<p>The code can be optimized by minimizing the number of SLOADs.</p>\n<p>SLOADs are expensive (100 gas after the 1st one) compared to MLOADs/MSTOREs (3 gas each). Storage values read multiple times should instead be cached in memory the first time (costing 1 SLOAD) and then read from this cache to avoid multiple SLOADs.</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/NFTDropCollection.sol#L171-L187\">Saving many SLOADs (including in a for-loop)</a>:</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: NFTDropCollection.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">171:   function mintCountTo(uint16 count, address to) external onlyMinterOrAdmin returns (uint256 firstTokenId) { //@audit-ok</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">172:     require(count != 0, &quot;NFTDropCollection: `count` must be greater than 0&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">173: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 173:      uint32 _latestTokenId = latestTokenId;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">174:     unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">175:       // If +1 overflows then +count would also overflow, unless count==0 in which case the loop would exceed gas limits</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 176:       firstTokenId = latestTokenId + 1; //@audit gas: SLOAD 1 (latestTokenId)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 176:       firstTokenId = _latestTokenId + 1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">177:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 178:     latestTokenId = latestTokenId + count; //@audit gas: SLOAD 2 (latestTokenId)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 178:     _latestTokenId = _latestTokenId + count;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 178:     latestTokenId = _latestTokenId;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 179:     require(latestTokenId &lt;= maxTokenId, &quot;NFTDropCollection: Exceeds max tokenId&quot;); //@audit gas: SLOAD 3 (latestTokenId)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 179:     require(_latestTokenId &lt;= maxTokenId, &quot;NFTDropCollection: Exceeds max tokenId&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">180: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 181:     for (uint256 i = firstTokenId; i &lt;= latestTokenId; ) {  //@audit gas: SLOAD &quot;latestTokenId - firstTokenId + 1&quot; (latestTokenId)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 181:     for (uint256 i = firstTokenId; i &lt;= _latestTokenId; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">182:       _mint(to, i);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">183:       unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">184:         ++i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">185:       }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">186:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">187:   }</span></span></span></code></pre>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/NFTCollectionFactory.sol#L202-L218\">Saving 3 SLOADs (+ a pre-increment is cheaper, but this is counter-balanced with the memory variable)</a>:</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: NFTCollectionFactory.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">202:   function adminUpdateNFTCollectionImplementation(address _implementation) external onlyAdmin {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">203:     require(_implementation.isContract(), &quot;NFTCollectionFactory: Implementation is not a contract&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">204:     implementationNFTCollection = _implementation;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 204:     uint32 _versionNFTCollection;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">205:     unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">206:       // Version cannot overflow 256 bits.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 207:       versionNFTCollection++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 207:       _versionNFTCollection = ++versionNFTCollection;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">208:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">209: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">210:     // The implementation is initialized when assigned so that others may not claim it as their own.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">211:     INFTCollectionInitializer(_implementation).initialize(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">212:       payable(address(rolesContract)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 213:       string.concat(&quot;NFT Collection Implementation v&quot;, versionNFTCollection.toString()),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 213:       string.concat(&quot;NFT Collection Implementation v&quot;, _versionNFTCollection.toString()),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 214:       string.concat(&quot;NFTv&quot;, versionNFTCollection.toString())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 214:       string.concat(&quot;NFTv&quot;, _versionNFTCollection.toString())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">215:     );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">216: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 217:     emit ImplementationNFTCollectionUpdated(_implementation, versionNFTCollection);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 217:     emit ImplementationNFTCollectionUpdated(_implementation, _versionNFTCollection);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">218:   }</span></span></span></code></pre>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/NFTCollectionFactory.sol#L226-L247\">Saving 3 SLOADs (+ a pre-increment is cheaper, but this is counter-balanced with the memory variable)</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: NFTCollectionFactory.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">226:   function adminUpdateNFTDropCollectionImplementation(address _implementation) external onlyAdmin {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">227:     require(_implementation.isContract(), &quot;NFTCollectionFactory: Implementation is not a contract&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">228:     implementationNFTDropCollection = _implementation;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 228:         uint32 _versionNFTDropCollection;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">229:     unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">230:       // Version cannot overflow 256 bits.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 231:       versionNFTDropCollection++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 231:       _versionNFTDropCollection = ++versionNFTDropCollection;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">232:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">233: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 234:     emit ImplementationNFTDropCollectionUpdated(_implementation, versionNFTDropCollection);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 234:     emit ImplementationNFTDropCollectionUpdated(_implementation, _versionNFTDropCollection);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">235: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">236:     // The implementation is initialized when assigned so that others may not claim it as their own.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">237:     INFTDropCollectionInitializer(_implementation).initialize(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">238:       payable(address(this)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 239:       string.concat(&quot;NFT Drop Collection Implementation v&quot;, versionNFTDropCollection.toString()),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 240:       string.concat(&quot;NFTDropV&quot;, versionNFTDropCollection.toString()),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 239:       string.concat(&quot;NFT Drop Collection Implementation v&quot;, _versionNFTDropCollection.toString()),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 240:       string.concat(&quot;NFTDropV&quot;, _versionNFTDropCollection.toString()),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">241:       &quot;ipfs://bafybeibvxnuaqtvaxu26gdgly2rm4g2piu7b2tqlx2dsz6wwhqbey2gddy/&quot;,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">242:       0x1337000000000000000000000000000000000000000000000000000000001337,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">243:       1,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">244:       address(0),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">245:       payable(0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">246:     );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">247:   }</span></span></span></code></pre>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/NFTCollection.sol#L332-L337\">Saving 1 SLOAD. If we’re optimistic towards the presence of a <code>baseURI_</code> string here, this should be cached</a>:</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: NFTCollection.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">332:   function _baseURI() internal view override returns (string memory) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 333:     if (bytes(baseURI_).length != 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 333:     string memory memBaseURI = baseURI_;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 333:     if (bytes(memBaseURI).length != 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 334:       return baseURI_;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 334:       return memBaseURI;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">335:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">336:     return &quot;ipfs://&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">337:   }</span></span></span></code></pre>\n<h2 id=\"g-03-avoid-emitting-a-storage-variable-when-a-memory-value-is-available\" style=\"position:relative;\"><a href=\"#g-03-avoid-emitting-a-storage-variable-when-a-memory-value-is-available\" aria-label=\"g 03 avoid emitting a storage variable when a memory value is available permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] Avoid emitting a storage variable when a memory value is available</h2>\n<p>When they are the same, consider emitting the memory value instead of the storage value:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/NFTDropCollection.sol#L242\">NFTDropCollection.sol#L242</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: NFTDropCollection.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">232:   function updatePreRevealContent(string calldata _baseURI, bytes32 _postRevealBaseURIHash)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">233:     external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">234:     validBaseURI(_baseURI)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">235:     onlyWhileUnrevealed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">236:     onlyAdmin</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">237:   {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">238:     require(_postRevealBaseURIHash != bytes32(0), &quot;NFTDropCollection: use `reveal` instead&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">239: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">240:     postRevealBaseURIHash = _postRevealBaseURIHash;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">241:     baseURI = _baseURI;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 242:     emit URIUpdated(baseURI, postRevealBaseURIHash);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 242:     emit URIUpdated(_baseURI, _postRevealBaseURIHash);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">243:   }</span></span></span></code></pre>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/mixins/nftDropMarket/NFTDropMarketFixedPriceSale.sol#L156\">NFTDropMarketFixedPriceSale.sol#L156</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: NFTDropMarketFixedPriceSale.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">152:     // Save the sale details.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">153:     saleConfig.seller = payable(msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">154:     saleConfig.price = price;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">155:     saleConfig.limitPerAccount = limitPerAccount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 156:     emit CreateFixedPriceSale(nftContract, saleConfig.seller, saleConfig.price, saleConfig.limitPerAccount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 156:     emit CreateFixedPriceSale(nftContract, payable(msg.sender), price, limitPerAccount);</span></span></span></code></pre>\n<h2 id=\"g-04-unchecking-arithmetics-operations-that-cant-underflowoverflow\" style=\"position:relative;\"><a href=\"#g-04-unchecking-arithmetics-operations-that-cant-underflowoverflow\" aria-label=\"g 04 unchecking arithmetics operations that cant underflowoverflow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] Unchecking arithmetics operations that can’t underflow/overflow</h2>\n<p>While this is inside an <code>external view</code> function, consider wrapping this in an <code>unchecked</code> statement so that external contracts calling this might save some gas:</p>\n<ul>\n<li><a href=\"https://github.com/JustDravee/dravee-2022-08-foundation/blob/61ca1242cbfa69f45097286837def0f49558087c/contracts/mixins/nftDropMarket/NFTDropMarketFixedPriceSale.sol#L240-L245\">L245 can be unchecked due to L240</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: NFTDropMarketFixedPriceSale.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">240:     if (currentBalance &gt;= limitPerAccount) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">241:       // User has exhausted their limit.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">242:       return 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">243:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">244: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 245:     uint256 availableToMint = limitPerAccount - currentBalance;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 245:     uint256 availableToMint;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 245:     unchecked { availableToMint = limitPerAccount - currentBalance; }</span></span></span></code></pre>\n<h2 id=\"g-05-use-calldata-instead-of-memory\" style=\"position:relative;\"><a href=\"#g-05-use-calldata-instead-of-memory\" aria-label=\"g 05 use calldata instead of memory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Use <code>calldata</code> instead of <code>memory</code></h2>\n<p>When a function with a <code>memory</code> array is called externally, the <code>abi.decode()</code> step has to use a for-loop to copy each index of the <code>calldata</code> to the <code>memory</code> index. Each iteration of this for-loop costs at least 60 gas (i.e. <code>60 * &#x3C;mem_array>.length</code>). Using <code>calldata</code> directly bypasses this loop.</p>\n<p>If the array is passed to an <code>internal</code> function which passes the array to another internal function where the array is modified and therefore <code>memory</code> is used in the <code>external</code> call, it’s still more gas-efficient to use <code>calldata</code> when the <code>external</code> function uses modifiers, since the modifiers may prevent the internal functions from being called. Structs have the same overhead as an array of length one</p>\n<p>Affected code (around <strong>60 gas</strong> to be saved):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">NFTCollectionFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">363</span><span class=\"mtk1\">:   </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createNFTDropCollectionWithPaymentFactory</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">364:     </span><span class=\"mtk10\">string</span><span class=\"mtk1\"> </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">name</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">365:     </span><span class=\"mtk10\">string</span><span class=\"mtk1\"> </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">symbol</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">366:     </span><span class=\"mtk10\">string</span><span class=\"mtk1\"> </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">baseURI</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">367:     </span><span class=\"mtk10\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk10\">postRevealBaseURIHash</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">368:     </span><span class=\"mtk10\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk10\">maxTokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">369:     </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">approvedMinter</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">370:     </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">nonce</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">- 371:     </span><span class=\"mtk10\">CallWithoutValue</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">paymentAddressFactoryCall</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+ </span><span class=\"mtk7\">371</span><span class=\"mtk1\">:     </span><span class=\"mtk10\">CallWithoutValue</span><span class=\"mtk1\"> </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">paymentAddressFactoryCall</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">372</span><span class=\"mtk1\">:   ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collection</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<h2 id=\"g-06-reduce-the-size-of-error-messages-long-revert-strings\" style=\"position:relative;\"><a href=\"#g-06-reduce-the-size-of-error-messages-long-revert-strings\" aria-label=\"g 06 reduce the size of error messages long revert strings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] Reduce the size of error messages (Long revert Strings)</h2>\n<p>Shortening revert strings to fit in 32 bytes will decrease deployment time gas and will decrease runtime gas when the revert condition is met.</p>\n<p>Revert strings that are longer than 32 bytes require at least one additional mstore, along with additional overhead for computing memory offset, etc.</p>\n<p>Revert strings > 32 bytes:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">libraries</span><span class=\"mtk1\">/</span><span class=\"mtk12\">AddressLibrary</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">31</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractAddress</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;InternalProxyCall: did not return a contract&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">mixins</span><span class=\"mtk1\">/</span><span class=\"mtk12\">collections</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SequentialMintCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">58</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;SequentialMintCollection: Caller is not creator&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">mixins</span><span class=\"mtk1\">/</span><span class=\"mtk12\">collections</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SequentialMintCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">63</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_creator</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;SequentialMintCollection: Creator cannot be the zero address&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">mixins</span><span class=\"mtk1\">/</span><span class=\"mtk12\">collections</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SequentialMintCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">74</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">() == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;SequentialMintCollection: Any NFTs minted must be burned first&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">mixins</span><span class=\"mtk1\">/</span><span class=\"mtk12\">collections</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SequentialMintCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">87</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_maxTokenId</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;SequentialMintCollection: Max token ID may not be cleared&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">mixins</span><span class=\"mtk1\">/</span><span class=\"mtk12\">collections</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SequentialMintCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">88</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">maxTokenId</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">_maxTokenId</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">maxTokenId</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;SequentialMintCollection: Max token ID may not increase&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">mixins</span><span class=\"mtk1\">/</span><span class=\"mtk12\">collections</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SequentialMintCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">89</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">latestTokenId</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">_maxTokenId</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;SequentialMintCollection: Max token ID must be &gt;= last mint&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">mixins</span><span class=\"mtk1\">/</span><span class=\"mtk12\">roles</span><span class=\"mtk1\">/</span><span class=\"mtk12\">AdminRole</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">19</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">hasRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DEFAULT_ADMIN_ROLE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;AdminRole: caller does not have the Admin role&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">mixins</span><span class=\"mtk1\">/</span><span class=\"mtk12\">roles</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MinterRole</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">22</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">isMinter</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">) || </span><span class=\"mtk11\">isAdmin</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;MinterRole: Must have the minter or admin role&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">mixins</span><span class=\"mtk1\">/</span><span class=\"mtk12\">shared</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ContractFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">22</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">contractFactory</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ContractFactory: Caller is not the factory&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">mixins</span><span class=\"mtk1\">/</span><span class=\"mtk12\">shared</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ContractFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">31</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_contractFactory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;ContractFactory: Factory is not a contract&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">158</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenCreatorPaymentAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;NFTCollection: tokenCreatorPaymentAddress is required&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">263</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenCID</span><span class=\"mtk1\">).</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTCollection: tokenCID is required&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">264</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">cidToMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenCID</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;NFTCollection: NFT was already minted&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">268</span><span class=\"mtk1\">:      </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">maxTokenId</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">maxTokenId</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTCollection: Max token count has already been minted&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">327</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_exists</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;NFTCollection: URI query for nonexistent token&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTCollectionFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">173</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rolesContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isAdmin</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;NFTCollectionFactory: Caller does not have the Admin role&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTCollectionFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">182</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rolesContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;NFTCollectionFactory: RolesContract is not a contract&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTCollectionFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">203</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_implementation</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;NFTCollectionFactory: Implementation is not a contract&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTCollectionFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">227</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_implementation</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;NFTCollectionFactory: Implementation is not a contract&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTCollectionFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">262</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">symbol</span><span class=\"mtk1\">).</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTCollectionFactory: Symbol is required&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTDropCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">88</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_baseURI</span><span class=\"mtk1\">).</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTDropCollection: `_baseURI` must be set&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTDropCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">93</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">postRevealBaseURIHash</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;NFTDropCollection: Already revealed&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTDropCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">130</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_symbol</span><span class=\"mtk1\">).</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTDropCollection: `_symbol` must be set&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTDropCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">131</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_maxTokenId</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTDropCollection: `_maxTokenId` must be set&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTDropCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">172</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">count</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTDropCollection: `count` must be greater than 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTDropCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">179</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">latestTokenId</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">maxTokenId</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTDropCollection: Exceeds max tokenId&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTDropCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">238</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_postRevealBaseURIHash</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;NFTDropCollection: use `reveal` instead&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Consider shortening the revert strings to fit in 32 bytes.</p>\n<h2 id=\"g-07-duplicated-conditions-should-be-refactored-to-a-modifier-or-function-to-save-deployment-costs\" style=\"position:relative;\"><a href=\"#g-07-duplicated-conditions-should-be-refactored-to-a-modifier-or-function-to-save-deployment-costs\" aria-label=\"g 07 duplicated conditions should be refactored to a modifier or function to save deployment costs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] Duplicated conditions should be refactored to a modifier or function to save deployment costs</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTCollectionFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">203</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_implementation</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;NFTCollectionFactory: Implementation is not a contract&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTCollectionFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">227</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_implementation</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;NFTCollectionFactory: Implementation is not a contract&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"g-08-redundant-check\" style=\"position:relative;\"><a href=\"#g-08-redundant-check\" aria-label=\"g 08 redundant check permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-08] Redundant check</h2>\n<p>The following require statement is redundant:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-08-foundation/blob/792e00df429b0df9ee5d909a0a5a6e72bd07cf79/contracts/mixins/collections/SequentialMintCollection.sol#L63\">SequentialMintCollection.sol#L63</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: SequentialMintCollection.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">62:   function _initializeSequentialMintCollection(address payable _creator, uint32 _maxTokenId) internal onlyInitializing {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 63:     require(_creator != address(0), &quot;SequentialMintCollection: Creator cannot be the zero address&quot;); //@audit gas: this is redundant as only factory can init and always pass good result</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">64: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">65:     owner = _creator;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">66:     maxTokenId = _maxTokenId;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">67:   }</span></span></span></code></pre>\n<p>This is due to the fact that the <code>initialize()</code> methods have the <code>onlyContractFactory</code> modifier already, and that calls to <code>initialize</code> from the factory are not using <code>address(0)</code> (and hardly ever will in the future of the solution). See these initializations where the first argument is <code>creator</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTCollectionFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">211</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">INFTCollectionInitializer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_implementation</span><span class=\"mtk1\">).</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">212</span><span class=\"mtk1\">        </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rolesContract</span><span class=\"mtk1\">)),</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">237</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">INFTDropCollectionInitializer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_implementation</span><span class=\"mtk1\">).</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">238</span><span class=\"mtk1\">        </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)),</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">267</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">INFTCollectionInitializer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collection</span><span class=\"mtk1\">).</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">), </span><span class=\"mtk12\">name</span><span class=\"mtk1\">, </span><span class=\"mtk12\">symbol</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">399</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">INFTDropCollectionInitializer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collection</span><span class=\"mtk1\">).</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">400</span><span class=\"mtk1\">        </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">),</span></span></span></code></pre>\n<p>Consider removing this check.</p>\n<h2 id=\"g-09-pre-solidity-0813--0-is-less-efficient-than--0-for-unsigned-integers\" style=\"position:relative;\"><a href=\"#g-09-pre-solidity-0813--0-is-less-efficient-than--0-for-unsigned-integers\" aria-label=\"g 09 pre solidity 0813  0 is less efficient than  0 for unsigned integers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-09] Pre-Solidity <code>0.8.13</code>: <code>> 0</code> is less efficient than <code>!= 0</code> for unsigned integers</h2>\n<p>Up until Solidity <code>0.8.13</code>: <code>!= 0</code> costs less gas compared to <code>> 0</code> for unsigned integers in <code>require</code> statements with the optimizer enabled (6 gas)</p>\n<p>Proof: While it may seem that <code>> 0</code> is cheaper than <code>!=</code>, this is only true without the optimizer enabled and outside a require statement. If you enable the optimizer AND you’re in a <code>require</code> statement, this will save gas. You can see this tweet for more proofs: <a href=\"https://twitter.com/gzeon/status/1485428085885640706\">https://twitter.com/gzeon/status/1485428085885640706</a></p>\n<p>As the Solidity version used here is <code>0.8.12</code>, consider changing <code>> 0</code> with <code>!= 0</code> here:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTDropCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">88</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_baseURI</span><span class=\"mtk1\">).</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTDropCollection: `_baseURI` must be set&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTDropCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">130</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_symbol</span><span class=\"mtk1\">).</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTDropCollection: `_symbol` must be set&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTDropCollection</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">131</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_maxTokenId</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTDropCollection: `_maxTokenId` must be set&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Also, please enable the Optimizer.</p>\n<h2 id=\"g-10-arraylength-should-not-be-looked-up-in-every-loop-of-a-for-loop\" style=\"position:relative;\"><a href=\"#g-10-arraylength-should-not-be-looked-up-in-every-loop-of-a-for-loop\" aria-label=\"g 10 arraylength should not be looked up in every loop of a for loop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-10] <code>&#x3C;array>.length</code> should not be looked up in every loop of a <code>for-loop</code></h2>\n<p>Reading array length at each iteration of the loop consumes more gas than necessary.</p>\n<p>In the best case scenario (length read on a memory variable), caching the array length in the stack saves around <strong>3 gas</strong> per iteration.\nIn the worst case scenario (external calls at each iteration), the amount of gas wasted can be massive.</p>\n<p>Here, consider storing the array’s length in a variable before the for-loop, and use this new variable instead:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">mixins</span><span class=\"mtk1\">/</span><span class=\"mtk12\">shared</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MarketFees</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">126</span><span class=\"mtk1\">:      </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">creatorRecipients</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">mixins</span><span class=\"mtk1\">/</span><span class=\"mtk12\">shared</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MarketFees</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">198</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">creatorShares</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">mixins</span><span class=\"mtk1\">/</span><span class=\"mtk12\">shared</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MarketFees</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">484</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">creatorRecipients</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">mixins</span><span class=\"mtk1\">/</span><span class=\"mtk12\">shared</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MarketFees</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">503</span><span class=\"mtk1\">:      </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">creatorRecipients</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ) {</span></span></span></code></pre>\n<h2 id=\"g-11-i-costs-less-gas-compared-to-i-or-i--1-same-for---i-vs-i---or-i---1\" style=\"position:relative;\"><a href=\"#g-11-i-costs-less-gas-compared-to-i-or-i--1-same-for---i-vs-i---or-i---1\" aria-label=\"g 11 i costs less gas compared to i or i  1 same for   i vs i   or i   1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-11] <code>++i</code> costs less gas compared to <code>i++</code> or <code>i += 1</code> (same for <code>--i</code> vs <code>i--</code> or <code>i -= 1</code>)</h2>\n<p>Pre-increments and pre-decrements are cheaper.</p>\n<p>For a <code>uint256 i</code> variable, the following is true with the Optimizer enabled at 10k:</p>\n<p><strong>Increment:</strong></p>\n<ul>\n<li><code>i += 1</code> is the most expensive form</li>\n<li><code>i++</code> costs 6 gas less than <code>i += 1</code></li>\n<li><code>++i</code> costs 5 gas less than <code>i++</code> (11 gas less than <code>i += 1</code>)</li>\n</ul>\n<p><strong>Decrement:</strong></p>\n<ul>\n<li><code>i -= 1</code> is the most expensive form</li>\n<li><code>i--</code> costs 11 gas less than <code>i -= 1</code></li>\n<li><code>--i</code> costs 5 gas less than <code>i--</code> (16 gas less than <code>i -= 1</code>)</li>\n</ul>\n<p>Note that post-increments (or post-decrements) return the old value before incrementing or decrementing, hence the name <em>post-increment</em>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">j</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++, </span><span class=\"mtk8\">&quot;This will be false as i is incremented after the comparison&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>However, pre-increments (or pre-decrements) return the new value:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">j</span><span class=\"mtk1\"> == ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;This will be true as i is incremented before the comparison&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>In the pre-increment case, the compiler has to create a temporary variable (when used) for returning <code>1</code> instead of <code>2</code>.</p>\n<p>Affected code:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTCollectionFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">207</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">versionNFTCollection</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTCollectionFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">231</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">versionNFTDropCollection</span><span class=\"mtk1\">++;</span></span></span></code></pre>\n<p>Consider using pre-increments and pre-decrements where they are relevant (meaning: not where post-increments/decrements logic are relevant).</p>\n<h2 id=\"g-12-incrementsdecrements-can-be-unchecked-in-for-loops\" style=\"position:relative;\"><a href=\"#g-12-incrementsdecrements-can-be-unchecked-in-for-loops\" aria-label=\"g 12 incrementsdecrements can be unchecked in for loops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-12] Increments/decrements can be unchecked in for-loops</h2>\n<p>In Solidity 0.8+, there’s a default overflow check on unsigned integers. It’s possible to uncheck this in for-loops and save some gas at each iteration, but at the cost of some code readability, as this uncheck cannot be made inline.</p>\n<p><a href=\"https://github.com/ethereum/solidity/issues/10695\">ethereum/solidity#10695</a></p>\n<p>Consider wrapping with an <code>unchecked</code> block here (around <strong>25 gas saved</strong> per instance):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">mixins</span><span class=\"mtk1\">/</span><span class=\"mtk12\">shared</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MarketFees</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">198</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">creatorShares</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">mixins</span><span class=\"mtk1\">/</span><span class=\"mtk12\">shared</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MarketFees</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">484</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">creatorRecipients</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p>The change would be:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- for (uint256 i; i &lt; numIterations; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ for (uint256 i; i &lt; numIterations;) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> // ...  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   unchecked { ++i; }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}  </span></span></span></code></pre>\n<p>The same can be applied with decrements (which should use <code>break</code> when <code>i == 0</code>).</p>\n<p>The risk of overflow is non-existent for <code>uint256</code> here.</p>\n<h2 id=\"g-13-use-custom-errors-instead-of-revert-strings-to-save-gas\" style=\"position:relative;\"><a href=\"#g-13-use-custom-errors-instead-of-revert-strings-to-save-gas\" aria-label=\"g 13 use custom errors instead of revert strings to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-13] Use Custom Errors instead of Revert Strings to save Gas</h2>\n<p>Custom errors are available from solidity version 0.8.4. Custom errors save <a href=\"https://gist.github.com/IllIllI000/ad1bd0d29a0101b25e57c293b4b0c746\"><strong>~50 gas</strong></a> each time they’re hit by <a href=\"https://blog.soliditylang.org/2021/04/21/custom-errors/#errors-in-depth\">avoiding having to allocate and store the revert string</a>. Not defining the strings also save deployment gas</p>\n<p>Additionally, custom errors can be used inside and outside of contracts (including interfaces and libraries).</p>\n<p>Source: <a href=\"https://blog.soliditylang.org/2021/04/21/custom-errors/\">https://blog.soliditylang.org/2021/04/21/custom-errors/</a>:</p>\n<blockquote>\n<p>Starting from <a href=\"https://github.com/ethereum/solidity/releases/tag/v0.8.4\">Solidity v0.8.4</a>, there is a convenient and gas-efficient way to explain to users why an operation failed through the use of custom errors. Until now, you could already use strings to give more information about failures (e.g., <code>revert(\"Insufficient funds.\");</code>), but they are rather expensive, especially when it comes to deploy cost, and it is difficult to use dynamic information in them.</p>\n</blockquote>\n<p>Consider replacing <strong>all revert strings</strong> with custom errors in the solution, and particularly those that have multiple occurrences:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTCollectionFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">203</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_implementation</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;NFTCollectionFactory: Implementation is not a contract&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTCollectionFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">227</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_implementation</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;NFTCollectionFactory: Implementation is not a contract&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-08-foundation-findings/issues/122#issuecomment-1220091166\">HardlyDifficult (Foundation) commented</a>:</strong></p>\n<blockquote>\n<p>Great report, the code diffs really help to understand your points. And the statements like <code>Saving 3 SLOADs</code> makes the impact clear. Thanks!</p>\n<p>[G-01] Check for bytes(_symbol).length > 0 </p>\n<blockquote>\n<p>Agree, and it’s good for consistency. Fixed.</p>\n</blockquote>\n<p>[G=02] Caching storage values in memory</p>\n<blockquote>\n<p>Agree, will fix this up. Except for the admin update functions since we are not trying to optimize for the admin and I think the code is a little cleaner as is.</p>\n</blockquote>\n<p>[G-03] Avoid emitting a storage variable when a memory value is available</p>\n<blockquote>\n<p>Agree, fixed.</p>\n</blockquote>\n<p>[G-04] Unchecking arithmetics operations that can’t underflow/overflow</p>\n<blockquote>\n<p>Agree, changed.</p>\n</blockquote>\n<p>[G-05] calldata</p>\n<blockquote>\n<p>Valid &#x26; will fix. This saves ~60 gas on <code>createNFTDropCollectionWithPaymentFactory</code></p>\n</blockquote>\n<p>[G-06] Use short error messages</p>\n<blockquote>\n<p>Agree but won’t fix. We use up to 64 bytes, aiming to respect the incremental cost but 32 bytes is a bit too short to provide descriptive error messages for our users.</p>\n</blockquote>\n<p>[G-07] Duplicated conditions should be refactored to a modifier</p>\n<blockquote>\n<p>Agree, will consider a change here.</p>\n</blockquote>\n<p>[G-08] Redundant check</p>\n<blockquote>\n<p>Good catch! Agree, will fix</p>\n</blockquote>\n<p>[G-09] Pre-Solidity 0.8.13: > 0 is less efficient than != 0 for unsigned integers</p>\n<blockquote>\n<p>Ahh that’s where it got fixed. I’ve been calling this invalid after testing — good to know where that had changed. We are compiling with 0.8.16 even though we have a floating 0.8.12.</p>\n</blockquote>\n<p>[G-10] Cache Array Length Outside of Loop</p>\n<blockquote>\n<p>May be theoretically valid, but won’t fix. I tested this: gas-reporter and our gas-stories suite is reporting a small regression using this technique. It also hurts readability a bit so we wouldn’t want to include it unless it was a clear win.</p>\n</blockquote>\n<p>[G-11] ++i costs less than i++</p>\n<blockquote>\n<p>Agree and will fix.</p>\n</blockquote>\n<p>[G-12] unchecked loop in <code>getFeesAndRecipients</code></p>\n<blockquote>\n<p><code>getFeesAndRecipients</code> is a read only function not intended to be used on-chain, but as a best practice we will add unchecked there as well.</p>\n</blockquote>\n<p>The other example provided was already unchecked — invalid.</p>\n<p>[G-13] Custom errors</p>\n<blockquote>\n<p>Agree but won’t fix at this time. We use these in the market but not in collections. Unfortunately custom errors are still not as good of an experience for users (e.g. on etherscan). We used them in the market originally because we were nearing the max contract size limit and this was a good way to reduce the bytecode. We’ll consider this in the future as tooling continues to improve.</p>\n</blockquote>\n</blockquote>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#medium-risk-findings-8\">Medium Risk Findings (8)</a></p>\n<ul>\n<li><a href=\"#m-01-creator-fees-may-be-burned\">[M-01] Creator fees may be burned</a></li>\n<li><a href=\"#m-02-nft-creator-sales-revenue-recipients-can-steal-gas\">[M-02] NFT creator sales revenue recipients can steal gas</a></li>\n<li><a href=\"#m-03-forget-to-check-some-manifolds-contracts-of-erc-2981-return-addressthis-0-when-royalties-are-not-defined-in-3rd-priority---marketfeessol\">[M-03] Forget to check “Some manifolds contracts of ERC-2981 return (address(this), 0) when royalties are not defined” in 3rd priority - MarketFees.sol</a></li>\n<li><a href=\"#m-04-possible-to-bypass-saleconfiglimitperaccount\">[M-04] Possible to bypass saleConfig.limitPerAccount</a></li>\n<li><a href=\"#m-05-user-may-get-all-of-the-creator-fees-by-specifying-high-number-for-himself\">[M-05] User may get all of the creator fees by specifying high number for himself</a></li>\n<li><a href=\"#m-06-malicious-creator-can-steal-from-collectors-upon-minting-with-a-custom-nft-contract\">[M-06] Malicious Creator can steal from collectors upon minting with a custom NFT contract</a></li>\n<li><a href=\"#m-07-nft-of-nft-collection-or-nft-drop-collection-can-be-locked-when-calling-_mint-or-mintcountto-function-to-mint-it-to-a-contract-that-does-not-support-erc721-protocol\">[M-07] NFT of NFT collection or NFT drop collection can be locked when calling _mint or mintCountTo function to mint it to a contract that does not support ERC721 protocol</a></li>\n<li><a href=\"#m-08-mintfromfixedpricesale-for-a-custom-contract-can-lead-to-users-losing-funds\">[M-08] <code>mintFromFixedPriceSale</code> for a custom contract can lead to users losing funds</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#1-contractsmixinscollectionscollectionroyaltiessol\">1 contracts/mixins/collections/CollectionRoyalties.sol</a></li>\n<li><a href=\"#2-contractsinterfacesicollectionfactorysol\">2 contracts/interfaces/ICollectionFactory.sol</a></li>\n<li><a href=\"#3-contractsmixinssharedcontractfactorysol\">3 contracts/mixins/shared/ContractFactory.sol</a></li>\n<li><a href=\"#4-contractsnftcollectionsol\">4 contracts/NFTCollection.sol</a></li>\n<li><a href=\"#5-contractsnftcollectionfactorysol\">5 contracts/NFTCollectionFactory.sol</a></li>\n<li><a href=\"#6-contractsnftdropcollectionsol\">6 contracts/NFTDropCollection.sol</a></li>\n<li><a href=\"#7-contractsmixinsnftdropmarketnftdropmarketfixedpricesalesol\">7 contracts/mixins/nftDropMarket/NFTDropMarketFixedPriceSale.sol</a></li>\n<li><a href=\"#8-contractsfethsol-out-of-scope\">8 contracts/FETH.sol (Out of Scope)</a></li>\n<li><a href=\"#9-line-width\">9 Line Width</a></li>\n<li><a href=\"#10-hard-coded-gas-limits\">10 Hard-coded gas limits</a></li>\n<li><a href=\"#11-addressiscontract-check\">11 <code>address.isContract</code> check</a></li>\n<li><a href=\"#12-simplify-supportsinterface-check\">12 Simplify <code>supportsInterface</code> check</a></li>\n<li><a href=\"#13-floating-solidity-pragma-version\">13 Floating Solidity Pragma Version</a></li>\n<li><a href=\"#14-avoid-nested-if-blocks\">14 Avoid Nested <code>if</code> Blocks</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#code-impressions\">Code Impressions</a></li>\n<li><a href=\"#g-01-check-for-bytes_symbollength--0-before-calling-nftdropcollectioninitialize-like-its-done-for-nftcollectioninitialize\">G-01 Check for <code>bytes(_symbol).length > 0</code> before calling <code>NFTDropCollection.initialize()</code>, like it’s done for <code>NFTCollection.initialize()</code></a></li>\n<li><a href=\"#g-02-caching-storage-values-in-memory\">G-02 Caching storage values in memory</a></li>\n<li><a href=\"#g-03-avoid-emitting-a-storage-variable-when-a-memory-value-is-available\">G-03 Avoid emitting a storage variable when a memory value is available</a></li>\n<li><a href=\"#g-04-unchecking-arithmetics-operations-that-cant-underflowoverflow\">G-04 Unchecking arithmetics operations that can’t underflow/overflow</a></li>\n<li><a href=\"#g-05-use-calldata-instead-of-memory\">G-05 Use <code>calldata</code> instead of <code>memory</code></a></li>\n<li><a href=\"#g-06-reduce-the-size-of-error-messages-long-revert-strings\">G-06 Reduce the size of error messages (Long revert Strings)</a></li>\n<li><a href=\"#g-07-duplicated-conditions-should-be-refactored-to-a-modifier-or-function-to-save-deployment-costs\">G-07 Duplicated conditions should be refactored to a modifier or function to save deployment costs</a></li>\n<li><a href=\"#g-08-redundant-check\">G-08 Redundant check</a></li>\n<li><a href=\"#g-09-pre-solidity-0813--0-is-less-efficient-than--0-for-unsigned-integers\">G-09 Pre-Solidity <code>0.8.13</code>: <code>> 0</code> is less efficient than <code>!= 0</code> for unsigned integers</a></li>\n<li><a href=\"#g-10-arraylength-should-not-be-looked-up-in-every-loop-of-a-for-loop\">G-10 <code>&#x3C;array>.length</code> should not be looked up in every loop of a <code>for-loop</code></a></li>\n<li><a href=\"#g-11-i-costs-less-gas-compared-to-i-or-i--1-same-for---i-vs-i---or-i---1\">G-11 <code>++i</code> costs less gas compared to <code>i++</code> or <code>i += 1</code> (same for <code>--i</code> vs <code>i--</code> or <code>i -= 1</code>)</a></li>\n<li><a href=\"#g-12-incrementsdecrements-can-be-unchecked-in-for-loops\">G-12 Increments/decrements can be unchecked in for-loops</a></li>\n<li><a href=\"#g-13-use-custom-errors-instead-of-revert-strings-to-save-gas\">G-13 Use Custom Errors instead of Revert Strings to save Gas</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}