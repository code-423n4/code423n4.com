{
  "circa": {
    "title": "Frax Ether Liquid Staking contest",
    "sponsor": "Frax Finance",
    "slug": "2022-09-frax",
    "date": "2022-11-29",
    "findings": "https://github.com/code-423n4/2022-09-frax-findings/issues",
    "contest": 165
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the Frax Ether Liquid Staking smart contract system written in Solidity. The audit contest took place between September 22—September 25 2022.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>139 Wardens contributed reports to the Frax Ether Liquid Staking contest:</p>\n<ol>\n<li><a href=\"https://twitter.com/ankitparashar\">parashar</a></li>\n<li>__141345__</li>\n<li>Lambda</li>\n<li><a href=\"https://twitter.com/bin2chen\">bin2chen</a></li>\n<li>Critical</li>\n<li><a href=\"https://chom.dev\">Chom</a></li>\n<li>ladboy233</li>\n<li><a href=\"https://twitter.com/JoeStakey\">joestakey</a></li>\n<li>ronnyx2017</li>\n<li>rotcivegaf</li>\n<li>ayeslick</li>\n<li>rvierdiiev</li>\n<li><a href=\"https://twitter.com/trust__90\">Trust</a></li>\n<li>cccz</li>\n<li>wagmi</li>\n<li><a href=\"https://twitter.com/RespxR\">Respx</a></li>\n<li>Bahurum</li>\n<li>0x1f8b</li>\n<li>lukris02</li>\n<li>V_B (Barichek and vlad_bochok)</li>\n<li>datapunk</li>\n<li><a href=\"https://twitter.com/0xch301\">Ch_301</a></li>\n<li><a href=\"https://twitter.com/andyfeili\">oyc_109</a></li>\n<li>IllIllI</li>\n<li>0x4non</li>\n<li>pashov</li>\n<li><a href=\"https://t.me/pfahard\">pfapostol</a></li>\n<li><a href=\"https://twitter.com/_bytera\">bytera</a></li>\n<li><a href=\"https://mobile.twitter.com/tomj_bb\">TomJ</a></li>\n<li>rbserver</li>\n<li><a href=\"https://twitter.com/0xNazgul\">0xNazgul</a></li>\n<li><a href=\"https://twitter.com/0xSmartContract\">0xSmartContract</a></li>\n<li>Bnke0x0</li>\n<li>Rolezn</li>\n<li>neko_nyaa</li>\n<li><a href=\"https://www.linkedin.com/in/georgi-nikolaev-georgiev-978253219\">gogo</a></li>\n<li>leosathya</li>\n<li>ajtra</li>\n<li>Soosh</li>\n<li>KIntern_NA (TrungOre and duc)</li>\n<li>brgltd</li>\n<li><a href=\"https://github.com/Aymen1001\">Aymen0909</a></li>\n<li>PaludoX0</li>\n<li><a href=\"https://twitter.com/8olidity\">8olidity</a></li>\n<li>peritoflores</li>\n<li>CodingNameKiki</li>\n<li><a href=\"https://twitter.com/Sm4rty_\">Sm4rty</a></li>\n<li><a href=\"https://twitter.com/sm4rtcontr4ct\">JC</a></li>\n<li><a href=\"twitter.com/rokinot\">rokinot</a></li>\n<li><a href=\"https://twitter.com/seynixyz\">seyni</a></li>\n<li><a href=\"https://twitter.com/c3ph_\">c3phas</a></li>\n<li>ReyAdmirado</li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li>OptimismSec (<a href=\"http://seanseefried.org/blog\">sseefried</a> and <a href=\"https://twitter.com/dediranTofunmi\">tofunmi</a>)</li>\n<li>bobirichman</li>\n<li><a href=\"https://twitter.com/Deivitto\">Deivitto</a></li>\n<li>cryptostellar5</li>\n<li>Diana</li>\n<li>B2</li>\n<li><a href=\"https://twitter.com/ret2basic\">ret2basic</a></li>\n<li>delfin454000</li>\n<li>RockingMiles (robee and pants)</li>\n<li>Waze</li>\n<li>tnevler</li>\n<li>aysha</li>\n<li>cryptphi</li>\n<li>mics</li>\n<li><a href=\"https://github.com/lyciumlee\">durianSausage</a></li>\n<li>Triangle (caventa and DeviantArt)</li>\n<li><a href=\"https://instagram.com/vanensurya\">Funen</a></li>\n<li>karanctf</li>\n<li><a href=\"https://twitter.com/natzuu33\">natzuu</a></li>\n<li>0x040</li>\n<li>got_targ</li>\n<li>slowmoses</li>\n<li>sach1r0</li>\n<li>asutorufos</li>\n<li>millersplanet</li>\n<li>jag</li>\n<li>Tagir2003</li>\n<li>0x52</li>\n<li>yixxas</li>\n<li>0xf15ers (remora and twojoy)</li>\n<li><a href=\"https://twitter.com/a12jmx\">a12jmx</a></li>\n<li>sikorico</li>\n<li>JLevick</li>\n<li>bbuddha</li>\n<li><a href=\"https://www.linkedin.com/in/yasir-ansari/\">yasir</a></li>\n<li>yongskiws</li>\n<li><a href=\"https://twitter.com/zachobront\">obront</a></li>\n<li>Yiko</li>\n<li>Tointer</li>\n<li><a href=\"https://github.com/exd0tpy\">exd0tpy</a></li>\n<li><a href=\"https://twitter.com/Bharg4v\">bharg4v</a></li>\n<li><a href=\"https://twitter.com/prasantgupta52\">prasantgupta52</a></li>\n<li>0x5rings</li>\n<li>SnowMan</li>\n<li>ch0bu</li>\n<li>peanuts</li>\n<li><a href=\"https://twitter.com/mehmeddukov\">medikko</a></li>\n<li><a href=\"https://zishansami102.github.io/\">zishansami</a></li>\n<li><a href=\"https://twitter.com/ROHANJH56009256\">Rohan16</a></li>\n<li>erictee</li>\n<li>d3e4</li>\n<li>RaymondFam</li>\n<li>0xA5DF</li>\n<li><a href=\"https://twitter.com/meidhiwirara\">Tomio</a></li>\n<li>Amithuddar</li>\n<li>Metatron</li>\n<li>samruna</li>\n<li>drdr</li>\n<li>bulej93</li>\n<li><a href=\"https://twitter/@Satyam33sharma\">Satyam_Sharma</a></li>\n<li><a href=\"https://twitter.com/bluenights004\">Ocean_Sky</a></li>\n<li>imare</li>\n<li>JAGADESH</li>\n<li>SooYa</li>\n<li>Pheonix</li>\n<li><a href=\"https://twitter.com/fitraldys\">Fitraldys</a></li>\n<li>0xsam</li>\n<li><a href=\"https://twitter.com/father0fBl0cks\">fatherOfBlocks</a></li>\n<li><a href=\"https://twitter.com/albincsergo\">albincsergo</a></li>\n<li>beardofginger</li>\n<li>Ben</li>\n<li>emrekocak</li>\n<li><a href=\"https://twitter.com/im_Dharma09\">dharma09</a></li>\n<li>0xmatt</li>\n<li>0xSky</li>\n<li><a href=\"https://twitter.com/hansfriese\">hansfriese</a></li>\n<li>m9800</li>\n<li><a href=\"https://twitter.com/magugumagu\">magu</a></li>\n<li><a href=\"https://twitter.com/Pedroais2/\">pedroais</a></li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n</ol>\n<p>This contest was judged by <a href=\"https://github.com/0xean\">0xean</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/itsmetechjay\">itsmetechjay</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 12 unique vulnerabilities. Of these vulnerabilities, 2 received a risk rating in the category of HIGH severity and 10 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 83 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 93 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2022-09-frax\">C4 Frax Ether Liquid Staking contest repository</a>, and is composed of 6 smart contracts written in the Solidity programming language and includes 413 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-2\" style=\"position:relative;\"><a href=\"#high-risk-findings-2\" aria-label=\"high risk findings 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (2)</h1>\n<h2 id=\"h-01-wrong-accounting-logic-when-syncrewards-is-called-within-beforewithdraw-makes-withdrawals-impossible\" style=\"position:relative;\"><a href=\"#h-01-wrong-accounting-logic-when-syncrewards-is-called-within-beforewithdraw-makes-withdrawals-impossible\" aria-label=\"h 01 wrong accounting logic when syncrewards is called within beforewithdraw makes withdrawals impossible permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/15\">[H-01] Wrong accounting logic when syncRewards() is called within beforeWithdraw makes withdrawals impossible</a></h2>\n<p><em>Submitted by Lambda, also found by bin2chen and Critical</em></p>\n<p><code>sfrxETH.beforeWithdraw</code> first calls the <code>beforeWithdraw</code> of <code>xERC4626</code>, which decrements <code>storedTotalAssets</code> by the given amount. If the timestamp is greater than the <code>rewardsCycleEnd</code>, <code>syncRewards</code> is called. However, the problem is that the assets have not been transferred out yet, meaning <code>asset.balanceOf(address(this))</code> still has the old value. On the other hand, <code>storedTotalAssets</code> was already updated. Therefore, the following calculation will be inflated by the amount for which the withdrawal was requested:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 nextRewards = asset.balanceOf(address(this)) - storedTotalAssets_ - lastRewardAmount_;</span></span></code></pre>\n<p>This has severe consequences:</p>\n<ol>\n<li>During the following reward period, <code>lastRewardAmount</code> is too high, which means that too many rewards are paid out to users who want to withdraw. A user could exploit this to steal the assets of other users.</li>\n<li>When <code>syncRewards()</code> is called the next time, it is possible that the <code>nextRewards</code> calculation underflows because <code>lastRewardAmount > asset.balanceOf(address(this))</code>. This is very bad because <code>syncRewards()</code> will be called in every withdrawal (after the <code>rewardsCycleEnd</code>) and none of them will succeed because of the underflow. Depositing more also does not help here, it just increases <code>asset.balanceOf(address(this))</code> and <code>storedTotalAssets</code> by the same amount, which does not eliminate the underflow.</li>\n</ol>\n<p>Note that this bug does not require a malicious user or a targeted attack to surface. It can (and probably will) happen in practice just by normal user interactions with the vault (which is for instance shown in the PoC).</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<p>Consider the following test:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function testTotalAssetsAfterWithdraw() public {        </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint128 deposit = 1 ether;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint128 withdraw = 1 ether;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Mint frxETH to this testing contract from nothing, for testing</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        mintTo(address(this), deposit);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Generate some sfrxETH to this testing contract using frxETH</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        frxETHtoken.approve(address(sfrxETHtoken), deposit);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        sfrxETHtoken.deposit(deposit, address(this));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(sfrxETHtoken.totalAssets() == deposit);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        vm.warp(block.timestamp + 1000);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Withdraw frxETH (from sfrxETH) to this testing contract</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        sfrxETHtoken.withdraw(withdraw, address(this), address(this));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        vm.warp(block.timestamp + 1000);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        sfrxETHtoken.syncRewards();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(sfrxETHtoken.totalAssets() == deposit - withdraw);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>This is a normal user interaction where a user deposits into the vault, and makes a withdrawal some time later. However, at this point the <code>syncRewards()</code> within the <code>beforeWithdraw</code> is executed. Because of that, the documented accounting mistake happens and the next call (in fact every call that will be done in the future) to <code>syncRewards()</code> reverts with an underflow.</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Call <code>syncRewards()</code> before decrementing <code>storedTotalAssets</code>, i.e.:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function beforeWithdraw(uint256 assets, uint256 shares) internal override {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tif (block.timestamp &gt;= rewardsCycleEnd) { syncRewards(); }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tsuper.beforeWithdraw(assets, shares); // call xERC4626&#39;s beforeWithdraw AFTER</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>Then, <code>asset.balanceOf(address(this))</code> and <code>storedTotalAssets</code> are still in sync within <code>syncRewards()</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/15#issuecomment-1258266526\">FortisFortuna (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>Does this only occur if all users try to withdraw at the exact same time? If so, this is a known bug by us and the risk would be low in a real-life deployment scenario. We can also let the users know about the ramping of the rewards.</p>\n</blockquote>\n<p> <strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/15\">FortisFortuna (Frax) marked as duplicate</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/15#issuecomment-1259916036\">Lambda (warden) commented</a>:</strong></p>\n<blockquote>\n<p>I do not think that this is a duplicate of <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/311\">#311</a>. #311 (and the other issues that are linked there) describe a recoverable issue where the withdrawal for the last user fails (which was listed as a known issue of xERC4626) until the cycle ends.</p>\n<p>The issue here that is described here and demonstrated in the PoC is a non-recoverable sfrxETH-specific issue (because sfrxETH potentially calls <code>syncRewards()</code> in the <code>beforeWithdraw</code> function) where withdrawals even fail after the cycle has ended. It also does not require all users to withdraw at the same time.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/15#issuecomment-1260012652\">FortisFortuna (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>@Lambda What about <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/24\">24</a> ?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/15#issuecomment-1260015183\">Lambda (warden) commented</a>:</strong></p>\n<blockquote>\n<p>@FortisFortuna Good catch did not see that, yes <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/24\">24</a> addresses the same issue</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/15#issuecomment-1260016194\">FortisFortuna (Frax) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>@Lambda I will mark yours as primary because it is better documented.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/15#issuecomment-1262851746\">corddry (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>Here’s the proposed fix, which instead moves the syncRewards call to a modifier, so that it actually occurs _before the _withdraw__ instead of in beforeWithdraw. It also adds it to the other 4626 withdraw/redeem functions. Would appreciate feedback if you have any</p>\n<p><a href=\"https://github.com/FraxFinance/frxETH-public/pull/2/commits/1ec457c7f5faed618971fb29b9bcc6d54453b093\">https://github.com/FraxFinance/frxETH-public/pull/2/commits/1ec457c7f5faed618971fb29b9bcc6d54453b093</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/15#issuecomment-1262858801\">Lambda (warden) commented</a>:</strong></p>\n<blockquote>\n<p>The modifier is currently missing for <code>mint</code> and <code>redeem</code>, is that on purpose? Otherwise, it looks good to me</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/15#issuecomment-1262872809\">corddry (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>Whoops— nice catch,\nadded here <a href=\"https://github.com/FraxFinance/frxETH-public/commit/996d528b46d1b2a0ac2e5b8f6d2138ccab8e03f5\">https://github.com/FraxFinance/frxETH-public/commit/996d528b46d1b2a0ac2e5b8f6d2138ccab8e03f5</a></p>\n</blockquote>\n<hr>\n<h2 id=\"h-02-frontrunning-by-malicious-validator\" style=\"position:relative;\"><a href=\"#h-02-frontrunning-by-malicious-validator\" aria-label=\"h 02 frontrunning by malicious validator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81\">[H-02] Frontrunning by malicious validator</a></h2>\n<p><em>Submitted by parashar</em></p>\n<p>Frontrunning by malicious validator changing withdrawal credentials.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>A malicious validator can frontrun depositEther transaction for its pubKey and deposit 1 ether for different withdrawal credential, thereby setting withdrawal credit before deposit of 32 ether by contract and thereby when 32 deposit ether are deposited, the withdrawal credential is also what was set before rather than the one being sent in depositEther transaction.</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Set withdrawal credentials for validator by depositing 1 ether with desired withdrawal credentials, before adding it in Operator Registry.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1257288417\">FortisFortuna (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>Interesting point, but at the beginning, the only validators we will have will be Frax controlled.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1276523610\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function deposit(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bytes calldata pubkey,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bytes calldata withdrawal_credentials,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bytes calldata signature,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bytes32 deposit_data_root</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) override external payable {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Extended ABI length checks since dynamic types are used.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(pubkey.length == 48, &quot;DepositContract: invalid pubkey length&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(withdrawal_credentials.length == 32, &quot;DepositContract: invalid withdrawal_credentials length&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(signature.length == 96, &quot;DepositContract: invalid signature length&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Check deposit amount</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(msg.value &gt;= 1 ether, &quot;DepositContract: deposit value too low&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(msg.value % 1 gwei == 0, &quot;DepositContract: deposit value not multiple of gwei&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint deposit_amount = msg.value / 1 gwei;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(deposit_amount &lt;= type(uint64).max, &quot;DepositContract: deposit value too high&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Emit `DepositEvent` log</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bytes memory amount = to_little_endian_64(uint64(deposit_amount));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        emit DepositEvent(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            pubkey,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            withdrawal_credentials,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            amount,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            signature,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            to_little_endian_64(uint64(deposit_count))</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Compute deposit data root (`DepositData` hash tree root)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bytes32 pubkey_root = sha256(abi.encodePacked(pubkey, bytes16(0)));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bytes32 signature_root = sha256(abi.encodePacked(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            sha256(abi.encodePacked(signature[:64])),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            sha256(abi.encodePacked(signature[64:], bytes32(0)))</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bytes32 node = sha256(abi.encodePacked(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            sha256(abi.encodePacked(pubkey_root, withdrawal_credentials)),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            sha256(abi.encodePacked(amount, bytes24(0), signature_root))</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Verify computed and expected deposit data roots match</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(node == deposit_data_root, &quot;DepositContract: reconstructed DepositData does not match supplied deposit_data_root&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Avoid overflowing the Merkle tree (and prevent edge case in computing `branch`)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(deposit_count &lt; MAX_DEPOSIT_COUNT, &quot;DepositContract: merkle tree full&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Add deposit data root to Merkle tree (update a single `branch` node)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        deposit_count += 1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint size = deposit_count;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        for (uint height = 0; height &lt; DEPOSIT_CONTRACT_TREE_DEPTH; height++) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if ((size &amp; 1) == 1) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                branch[height] = node;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                return;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            node = sha256(abi.encodePacked(branch[height], node));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            size /= 2;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // As the loop should always end prematurely with the `return` statement,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // this code should be unreachable. We assert `false` just to be safe.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        assert(false);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1276529987\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>It is unclear both in the code above for the deposit contract as well as the documentation on keys </p>\n<p><a href=\"https://kb.beaconcha.in/ethereum-2.0-depositing\">https://kb.beaconcha.in/ethereum-2.0-depositing</a><br>\n<a href=\"https://kb.beaconcha.in/ethereum-2-keys\">https://kb.beaconcha.in/ethereum-2-keys</a><br></p>\n<p>How exactly multiple deposits two the same validator using different withdrawal keys would work.  While it would make sense that they would allow a one to many mapping, I am unable to confirm or deny this and therefore will leave the risk currently as High on the side of caution.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1279846360\">Trust (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Strong find. Indeed in ETH <a href=\"https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#deposits\">specs</a> we can see that in <code>process_deposit()</code>, if the pubkey is already registered, we just increase its balance, not touching the withdrawal_credentials. However the recommended mitigation does not really address the issue IMO, and the detail is quite lacking.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280004724\">FortisFortuna (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>I think it is technically a non-issue because we will be controlling the addition/removal of validators. Should that eventually become open, we will have to look at the entire code from a different perspective to close security holes.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280006325\">Trust (warden) commented</a>:</strong></p>\n<blockquote>\n<p>I think it is relevant, because the idea is to make the protocol controlled validators work for the attacker, because they inserted their own withdrawal credentials directly on the deposit contract.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280006573\">FortisFortuna (Frax) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Ohh I see it now. Good point.</p>\n<p>More info<br>\n<a href=\"https://research.lido.fi/t/mitigations-for-deposit-front-running-vulnerability/1239\">https://research.lido.fi/t/mitigations-for-deposit-front-running-vulnerability/1239</a></p>\n<p>Since all of the validators are ours and we have the mnemonic, would it still be an issue though? Lido’s setup is different: <a href=\"https://medium.com/immunefi/rocketpool-lido-frontrunning-bug-fix-postmortem-e701f26d7971\">https://medium.com/immunefi/rocketpool-lido-frontrunning-bug-fix-postmortem-e701f26d7971</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280063425\">FortisFortuna (Frax) commented</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#deposits\">https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#deposits</a><br>\nFrom @0xJM<br>\nIn the scenario that someone frontruns us with a 1 ETH deposit at the same time we do a 32 ETH deposit, their 1 ETH deposit would fail on beaconchain because it would fail bls.Verify. The result would be them losing their 1 ETH.</p>\n<p>Our 32 ETH would go through normally and the validator would activate</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280771801\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@FortisFortuna - can you elaborate on why you believe that bls.Verify would fail?</p>\n<p><code>if not bls.Verify(pubkey, signing_root, deposit.data.signature):</code></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280885731\">FortisFortuna (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>From @0xJM</p>\n<p><a href=\"https://github.com/ethereum/staking-deposit-cli/blob/e2a7c942408f7fc446b889097f176238e4a10a76/staking_deposit/credentials.py#L127\">https://github.com/ethereum/staking-deposit-cli/blob/e2a7c942408f7fc446b889097f176238e4a10a76/staking_deposit/credentials.py#L127</a> </p>\n<p>the signing root includes the deposit message which has the withdrawal credentials </p>\n<p><a href=\"https://github.com/ethereum/staking-deposit-cli/blob/e2a7c942408f7fc446b889097f176238e4a10a76/staking_deposit/credentials.py#L112\">https://github.com/ethereum/staking-deposit-cli/blob/e2a7c942408f7fc446b889097f176238e4a10a76/staking_deposit/credentials.py#L112</a></p>\n<p>hence bls.Verify would fail on Beaconchain as I mentioned</p>\n<p>the consensus spec has that signing<em>root = compute</em>signing<em>root(deposit</em>message, domain) which is verified against the signature.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280900859\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The signature would be valid.  The validator would still sign the message containing the credentials that they are front running with. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280909443\">FortisFortuna (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>From @denett<br>\n“The signature would be valid. The validator would still sign the message containing the credentials that they are front running with.”\nOnly the validator can create a valid signature and we own the key to the validator.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280915906\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Yea, so this is the root of it, the contest does not specify that Frax is the owner of all validators that are meant to be used with this protocol. Without stating that ahead of time for the Wardens to understand, I believe this to be a valid finding and the warden should be awarded.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280932310\">FortisFortuna (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>Ok. So in our current setup, assuming Frax owns all validators, we are safe?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280947388\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>:) I cannot guarantee anything in DeFi is safe.  My understanding of this particular vulnerability is that it would require a validator to act maliciously by using a smaller than 32 ETH deposit to front run your deposit and enable them to control the withdrawal in the future. If the validator is owned by your team and the keys are never exploited, then I don’t see how the front ran signature could be generated. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280949422\">FortisFortuna (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>Ya, I hear you lol. At least for this particular scenario we are ok then, according to the known bug. We can pay out for the bug because none of our team were aware of it and it is good to know for the future.</p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-10\" style=\"position:relative;\"><a href=\"#medium-risk-findings-10\" aria-label=\"medium risk findings 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (10)</h1>\n<h2 id=\"m-01-centralization-risk-admin-have-privileges-admin-can-set-address-to-mint-any-amount-of-frxeth-can-set-any-address-as-validator-and-change-important-state-in-frxethminter-and-withdraw-fund-from-frcethminter-\" style=\"position:relative;\"><a href=\"#m-01-centralization-risk-admin-have-privileges-admin-can-set-address-to-mint-any-amount-of-frxeth-can-set-any-address-as-validator-and-change-important-state-in-frxethminter-and-withdraw-fund-from-frcethminter-\" aria-label=\"m 01 centralization risk admin have privileges admin can set address to mint any amount of frxeth can set any address as validator and change important state in frxethminter and withdraw fund from frcethminter  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/107\">[M-01] Centralization risk: admin have privileges: admin can set address to mint any amount of frxETH, can set any address as validator, and change important state in frxETHMinter and withdraw fund from frcETHMinter </a></h2>\n<p><em>Submitted by ladboy233, also found by 0xSmartContract, 8olidity, ayeslick, Aymen0909, cccz, Chom, csanuragjain, IllIllI, joestakey, neko_nyaa, OptimismSec, PaludoX0, pashov, peritoflores, rbserver, rvierdiiev, and TomJ</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L41\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L41</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L53\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L53</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L65\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L65</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L76\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L76</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L94\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L94</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L159\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L159</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L166\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L166</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L177\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L177</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L184\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L184</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L191\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L191</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L199\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L199</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L53\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L53</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L61\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L61</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L69\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L69</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L82\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L82</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L93\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L93</a></p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Admin have privileges: admin can set address to mint any amount of frxETH, can set any address as validator, and change important state in frxETHMinter and withdraw fund from frcETHMinter.</p>\n<p>Note the modifier below, either the timelock governance contract or the contract owner can access to all the high privilege function.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    modifier onlyByOwnGov() {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(msg.sender == timelock_address || msg.sender == owner, &quot;Not owner or timelock&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>There are numerous methods that the admin could apply to rug pull the protocol and take all user funds.</p>\n<p>The admin can</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">add or remove validator from OperatorRegistry.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">set minter address or remove minter address in frxETH.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">minter set by admin can mint or burn any amount of frxETH token.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">set ETE deduction ratio, withdraw any amount of ETH or ERC20 token in frcETHMinter.sol</span></span></code></pre>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Foundry</p>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Without significant redesign it is not possible to avoid the admin being able to rug pull the protocol.</p>\n<p>As a result the recommendation is to set all admin functions behind either a timelocked DAO or at least a timelocked multisig contract.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/107#issuecomment-1257281609\">FortisFortuna (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>We are well aware of the permission structure. The owner will most likely be a large multisig. We mentioned the Frax Multisig in the scope too.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/107#issuecomment-1276220502\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Going to use this issue as the canonical issue for all “malicious owner” type reports.  The protocol does have some serious “trust” in the administrator and the highlighted issues are important for end users to understand and should be part of the report. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-rewards-delay-release-could-cause-yields-steal-and-loss\" style=\"position:relative;\"><a href=\"#m-02-rewards-delay-release-could-cause-yields-steal-and-loss\" aria-label=\"m 02 rewards delay release could cause yields steal and loss permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/110\">[M-02] Rewards delay release could cause yields steal and loss</a></h2>\n<p><em>Submitted by __141345__, also found by Bahurum, Ch_301, Chom, datapunk, Respx, ronnyx2017, and Trust</em></p>\n<p>In the current rewards accounting, vault shares in <code>deposit()</code> and <code>redeem()</code> can not correctly record the spot yields generated by the staked asset. Yields are released over the next rewards cycle. As a result, malicious users can steal yields from innocent users by picking special timing to <code>deposit()</code> and <code>redeem()</code>.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In <code>syncRewards()</code>, the current asset balance is broken into 2 parts: <code>storedTotalAssets</code> and <code>lastRewardAmount/nextRewards</code>. The <code>lastRewardAmount</code> is the surplus balance of the asset, or the most recent yields.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// lib/ERC4626/src/xERC4626.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">syncRewards</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nextRewards</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) - </span><span class=\"mtk12\">storedTotalAssets_</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">lastRewardAmount_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">storedTotalAssets</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">storedTotalAssets_</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">lastRewardAmount_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">end</span><span class=\"mtk1\"> = ((</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">rewardsCycleLength</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">rewardsCycleLength</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">rewardsCycleLength</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">lastRewardAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">nextRewards</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo192</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">rewardsCycleEnd</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">end</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>And in the next rewards cycle, <code>lastRewardAmount</code> will be linearly added to <code>storedTotalAssets</code>, their sum is the return value of <code>totalAssets()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">rewardsCycleEnd_</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// no rewards or rewards fully unlocked</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// entire reward amount is available</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storedTotalAssets_</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">lastRewardAmount_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// rewards not fully unlocked</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// add unlocked rewards to stored total</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unlockedRewards</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">lastRewardAmount_</span><span class=\"mtk1\"> * (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">lastSync_</span><span class=\"mtk1\">)) / (</span><span class=\"mtk12\">rewardsCycleEnd_</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">lastSync_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storedTotalAssets_</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">unlockedRewards</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><code>totalAssets()</code> will be referred when <code>deposit()</code> and <code>redeem()</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// lib/solmate/src/mixins/ERC4626.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">((</span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">previewDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">)) != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ZERO_SHARES&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">redeem</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">((</span><span class=\"mtk12\">assets</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">previewRedeem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shares</span><span class=\"mtk1\">)) != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ZERO_ASSETS&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">beforeWithdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">previewDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToShares</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">previewRedeem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToAssets</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToShares</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\">; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">assets</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDivDown</span><span class=\"mtk1\">(</span><span class=\"mtk12\">supply</span><span class=\"mtk1\">, </span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToAssets</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\">; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDivDown</span><span class=\"mtk1\">(</span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">supply</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Based on the above rules, there are 2 potential abuse cases:</p>\n<ol>\n<li>If withdraw just after the <code>rewardsCycleEnd</code> timestamp, a user can not get the yields from last rewards cycle. Since the <code>totalAssets()</code> only contain <code>storedTotalAssets</code> but not the yields part. It takes 1 rewards cycle to linearly add to the <code>storedTotalAssets</code>.</li>\n</ol>\n<p>   Assume per 10,000 asset staking generate yields of 70 for 7 days, and the reward cycle is 1 day. A malicious user Alice can do the following:</p>\n<ul>\n<li>Watch the mempool for  <code>withdraw(10,000)</code> from account Bob, front run it with <code>syncRewards()</code>, so that the most recent yields of amount 70 from Bob will stay in the vault.</li>\n<li>Alice will also deposit a 10,000 to take as much shares as possible.</li>\n<li>After 1 rewards cycle of 1 day, <code>redeem()</code> to take the yields of 70.</li>\n</ul>\n<p>   Effectively steal the yields from Bob. The profit for Alice is not 70, because after 1 day, her own deposit also generates some yield, in this example this portion is 1. At the end, Alice steal yield of amount 60.</p>\n<ol start=\"2\">\n<li>When the Multisig Treasury transfers new yields into the vault, the new yields will accumulate until <code>syncRewards()</code> is called. It is possible that yields from multiple rewards cycles accumulates, and being released in the next cycle.</li>\n</ol>\n<p>   Knowing that the yields has been accumulated for 3 rewards cycles, a malicious user can <code>deposit()</code> and call <code>syncRewards()</code> to trigger the release of the rewards. <code>redeem()</code> after 1 cycle.</p>\n<p>   Here the malicious user gets yields of 3 cycles, lose 1 in the waiting cycle. The net profit is 2 cycle yields, and the gained yields should belong to the other users in the vault.</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ul>\n<li>For the <code>lastRewardAmount</code> not released, allow the users to redeem as it is linearly released later.</li>\n<li>For the accumulated yields, only allow users to redeem the yields received after 1 rewards cycle after the deposit.</li>\n</ul>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/110#issuecomment-1258364911\">FortisFortuna (Frax) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>From @denett<br>\nsyncRewards should be called by us at the beginning of each period, or we need to automatically call it before deposits/withdrawals.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/110#issuecomment-1278226997\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>All of the duplicated issues reference a scenario where syncRewards isn’t called at the appropriate time leading to the ability for users to steal yield from other users in some fashion.  So while they are slightly different I do think grouping them together makes sense as the underlying root cause is the same.  </p>\n<p>Medium seems like the appropriate severity for this, as its requires some external factors and doesn’t result in principal being lost, only yield. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-frxeth-can-be-depegged-due-to-eth-staking-balance-slashing-\" style=\"position:relative;\"><a href=\"#m-03-frxeth-can-be-depegged-due-to-eth-staking-balance-slashing-\" aria-label=\"m 03 frxeth can be depegged due to eth staking balance slashing  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/113\">[M-03] frxETH can be depegged due to ETH staking balance slashing </a></h2>\n<p><em>Submitted by ladboy233, also found by __141345__</em></p>\n<p>The main risk in ETH 2.0 POS staking is the slashing penalty, in that case the frxETH will not be pegged and the validator cannot maintain a minimum 32 ETH staking balance.</p>\n<p><a href=\"https://cryptobriefing.com/ethereum-2-0-validators-slashed-staking-pool-error/\">https://cryptobriefing.com/ethereum-2-0-validators-slashed-staking-pool-error/</a></p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol to add mechanism to ensure the frxETH is pegged via burning if case the ETH got slashed.</p>\n<p>And consider when the node does not maintain a minimum 32 ETH staking balance, who is in charge of adding the ETH balance to increase the staking balance or withdraw the ETH and distribute the fund.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/113#issuecomment-1257364420\">FortisFortuna (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>We as the team can either choose to subsidize this, or let it float. ETH 2.0 does not allow unstaking yet. When it eventually does, we will redeploy this minting contract with updated logic that may be helpful.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/113#issuecomment-1278289553\">0xean (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>I think this is valid but should be downgraded to Medium.  Users should be aware that there is no mechanism built in to deal with slashing and that the asset backed guarantee isn’t without some (perhaps negligible) risk of slashing. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-removevalidator-and-removeminter-may-fail-due-to-exceeding-gas-limit\" style=\"position:relative;\"><a href=\"#m-04-removevalidator-and-removeminter-may-fail-due-to-exceeding-gas-limit\" aria-label=\"m 04 removevalidator and removeminter may fail due to exceeding gas limit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/12\">[M-04] removeValidator() and removeMinter() may fail due to exceeding gas limit</a></h2>\n<p><em>Submitted by oyc_109, also found by 0x4non, Chom, ladboy233, Lambda, lukris02, pashov, Respx, and V_B</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L113-L118\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L113-L118</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L84-L89\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L84-L89</a></p>\n<h3 id=\"vulnerability-details\" style=\"position:relative;\"><a href=\"#vulnerability-details\" aria-label=\"vulnerability details permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerability Details</h3>\n<h4 id=\"removevalidator-and-removeminter-may-fail-due-to-exceeding-gas-limit\" style=\"position:relative;\"><a href=\"#removevalidator-and-removeminter-may-fail-due-to-exceeding-gas-limit\" aria-label=\"removevalidator and removeminter may fail due to exceeding gas limit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>removeValidator() and removeMinter() may fail due to exceeding gas limit</h4>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L113-L118\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L113-L118</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">            for (uint256 i = 0; i &lt; original_validators.length; ++i) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                if (i != remove_idx) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    validators.push(original_validators[i]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L84-L89\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L84-L89</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        for (uint i = 0; i &lt; minters_array.length; i++){ </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (minters_array[i] == minter_address) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                minters_array[i] = address(0); // This will leave a null in the array and keep the indices the same</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                break;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span></code></pre>\n<p>The <code>removeValidator()</code> is used to remove a validator from the array <code>validators</code>.</p>\n<p>There is an unbounded loop in <code>removeValidator()</code> such that if the <code>validators</code> array gets sufficiently large, this function call will fail due to exceeding the gas limit.</p>\n<p>The same issue exists in the <code>removeMinter()</code> function. If <code>minters_array</code> gets large, the function call will fail.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/12#issuecomment-1257294786\">FortisFortuna (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>Technically correct, but in practice, the number of minters will always remain low. If it becomes an issue, we can designate one minter as a “pre-minter” that has a batch of tokens minted to it beforehand, then auxiliary contracts can connect to that instead of ERC20PermitPermissionedMint.sol instead.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/12#issuecomment-1278206459\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I think Medium is appropriate here, given this could impact the functionality of the protocol. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/12#issuecomment-1279848072\">Trust (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Wouldn’t call this a risk to the functionality of the protocol, because sender can always send enough gas, and validator array gets truncated every time on is popped for use.</p>\n<p>Unbounded for-loops should be handled with care but not sure a realistic impact can be demonstrated here to qualify for Medium.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-05-frxethminterdepositether-may-run-out-of-gas-leading-to-lost-eth\" style=\"position:relative;\"><a href=\"#m-05-frxethminterdepositether-may-run-out-of-gas-leading-to-lost-eth\" aria-label=\"m 05 frxethminterdepositether may run out of gas leading to lost eth permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/17\">[M-05] frxETHMinter.depositEther may run out of gas, leading to lost ETH</a></h2>\n<p><em>Submitted by Lambda, also found by 0x52, Bahurum, Bnke0x0, KIntern_NA, lukris02, rbserver, Respx, rotcivegaf, Soosh, TomJ, Trust, V_B, and yixxas</em></p>\n<p><code>frxETHMinter.depositEther</code> always iterates over all deposits that are possible with the current balance (<code>(address(this).balance - currentWithheldETH) / DEPOSIT_SIZE</code>). However, when a lot of ETH was deposited into the contract / it was not called in a long time, this loop can reach the gas limit. When this happens, no more calls to <code>depositEther</code> are possible, as it will always run out of gas.</p>\n<p>Of course, the probability that such a situation arises depends on the price of ETH. For >1,000 USD it would require someone to deposit a large amount of money (which can also happen, there are whales with thousands of ETH, so if one of them would decide to use frxETH, the problem can arise). For lower prices, it can happen even for small (in dollar terms) deposits. And in general, the correct functionality of a protocol should not depend on the price of ETH.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<p>Jerome Powell continues to raise interest rates, he just announced the next rate hike to 450%. The crypto market crashes, ETH is at 1 USD. Bob buys 100,000 ETH for 100,000 USD and deposits them into <code>frxETHMinter</code>. Because of this deposit, <code>numDeposit</code> within <code>depositEther</code> is equal to 3125. Therefore, every call to the function runs out of gas and it is not possible to deposit this ETH into the deposit contract.</p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>It should be possible to specify an upper limit for the number of deposits such that progress is possible, even when a lot of ETH was deposited into the contract.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/17#issuecomment-1258316249\">FortisFortuna (Frax) confirmed, but decreased severity to Low and commented</a>:</strong></p>\n<blockquote>\n<p>Adding a maxLoops parameter or similar can help mitigate this for sure.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/17#issuecomment-1275294964\">0xean (judge) increased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Warden(s) fail to demonstrate how this leads to a loss of funds which would be required for High Severity. This does however lead directly to emergency failover’s having to be called to remove the now stuck ETH, and ultimately impairs the functionality and availability of the protocol, so Medium severity is appropriate.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-frxethminter-non-conforming-erc20-tokens-not-recoverable-\" style=\"position:relative;\"><a href=\"#m-06-frxethminter-non-conforming-erc20-tokens-not-recoverable-\" aria-label=\"m 06 frxethminter non conforming erc20 tokens not recoverable  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/18\">[M-06] frxETHMinter: Non-conforming ERC20 tokens not recoverable </a></h2>\n<p><em>Submitted by Lambda, also found by 0x1f8b, 0x5rings, 0xSky, 0xSmartContract, 8olidity, brgltd, Chom, CodingNameKiki, hansfriese, IllIllI, m9800, magu, pashov, pedroais, peritoflores, prasantgupta52, rokinot, Ruhum, seyni, and Sm4rty</em></p>\n<p>There is a function <code>recoverERC20</code> to rescue any ERC20 tokens that were accidentally sent to the contract. However, there are tokens that do not return a value on success, which will cause the call to revert, even when the transfer would have been successful. This means that those tokens will be stuck forever and not be recoverable.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<p>Someone accidentally transfers USDT, one of the most commonly used ERC20 tokens, to the contract. Because USDT’s transfer <a href=\"https://etherscan.io/token/0xdac17f958d2ee523a2206206994597c13d831ec7#code\">does not return a boolean</a>, it will not be possible to recover those tokens and they will be stuck forever.</p>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use OpenZeppelin’s <code>safeTransfer</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/18#issuecomment-1257283698\">FortisFortuna (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>Not really medium risk. Technically you could use safeTransfer, but if someone were to accidentally send something to this contract, it would most likely be either ETH, FRAX, frxETH, or sfrxETH, all of which are transfer compliant.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/18#issuecomment-1275309622\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I think this qualifies as a Medium risk.  Sponsor has created functionality to recover ERC20 tokens.  Wardens have shown a path to which this functionality does not work correctly. </p>\n<blockquote>\n<p>2 — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.</p>\n</blockquote>\n</blockquote>\n<hr>\n<h2 id=\"m-07-getnextvalidator-error-could-temporarily-make-depositether-inoperable-\" style=\"position:relative;\"><a href=\"#m-07-getnextvalidator-error-could-temporarily-make-depositether-inoperable-\" aria-label=\"m 07 getnextvalidator error could temporarily make depositether inoperable  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/219\">[M-07] <code>getNextValidator()</code> error could temporarily make <code>depositEther()</code> inoperable </a></h2>\n<p><em>Submitted by __141345__</em></p>\n<p>When <code>depositEther()</code>, if 1 <code>validators</code> is used before, the whole deposit function will revert, causing DoS. <code>depositEther()</code> function will be inoperable until the gov manually removes the mistaken validator.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In <code>depositEther()</code>, if the <code>pubKey</code> is already used, the whole loop will revert, and the deposit operation cannot move on.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">depositEther</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numDeposits</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// Get validator information</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pubKey</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawalCredential</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signature</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositDataRoot</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ) = </span><span class=\"mtk11\">getNextValidator</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// Will revert if there are not enough free validators</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// Make sure the validator hasn&#39;t been deposited into already, to prevent stranding an extra 32 eth</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// until withdrawals are allowed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">activeValidators</span><span class=\"mtk1\">[</span><span class=\"mtk12\">pubKey</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;Validator already has 32 ETH&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>And in the next rewards cycle, <code>lastRewardAmount</code> will be linearly added to <code>storedTotalAssets</code>, their sum is the return value of <code>totalAssets()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">rewardsCycleEnd_</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// no rewards or rewards fully unlocked</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// entire reward amount is available</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storedTotalAssets_</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">lastRewardAmount_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// rewards not fully unlocked</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// add unlocked rewards to stored total</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unlockedRewards</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">lastRewardAmount_</span><span class=\"mtk1\"> * (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">lastSync_</span><span class=\"mtk1\">)) / (</span><span class=\"mtk12\">rewardsCycleEnd_</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">lastSync_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storedTotalAssets_</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">unlockedRewards</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Temporarily the <code>depositEther()</code> function will be inaccessible. Until the governance calls the registry to pop the wrong validator.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/OperatorRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">popValidators</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">times</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyByOwnGov</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Loop through and remove validator entries at the end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">times</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">validators</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pop</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ValidatorsPopped</span><span class=\"mtk1\">(</span><span class=\"mtk12\">times</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use <code>try/catch</code> to skip the wrong validator, then the deposit function will be more robust to unexpected situations.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/219#issuecomment-1257301152\">FortisFortuna (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>We plan to keep an eye on the number of free validators and have a decent sized buffer of them.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/219#issuecomment-1278241225\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Awarding as Medium, given that this can disable deposits, the registry should check against the mapping. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-08-withheld-eth-shoud-not-be-sent-back-to-the-frxethminter-contract-itself\" style=\"position:relative;\"><a href=\"#m-08-withheld-eth-shoud-not-be-sent-back-to-the-frxethminter-contract-itself\" aria-label=\"m 08 withheld eth shoud not be sent back to the frxethminter contract itself permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/221\">[M-08] Withheld ETH shoud not be sent back to the frxETHMinter contract itself</a></h2>\n<p><em>Submitted by ronnyx2017, also found by ayeslick and rvierdiiev</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/main/src/frxETHMinter.sol#L166-L174\">https://github.com/code-423n4/2022-09-frax/blob/main/src/frxETHMinter.sol#L166-L174</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/main/src/frxETHMinter.sol#L191-L196\">https://github.com/code-423n4/2022-09-frax/blob/main/src/frxETHMinter.sol#L191-L196</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/main/src/frxETHMinter.sol#L114-L116\">https://github.com/code-423n4/2022-09-frax/blob/main/src/frxETHMinter.sol#L114-L116</a></p>\n<h3 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>It will lead to duplicating accounting for the Eths which have been already converted to the frxETH tokens. It means Eth:frxEth will not be 1:1, and eventually leads to decoupling.</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The function <code>moveWithheldETH</code> will send the <code>amount</code> of the Withheld ETH in the contract to the address <code>to</code>. It doesnt check if the <code>to</code> address is the frxETHMinter contract itself.</p>\n<p>And the frxETHMinter has the receive function which will submit any eth received to the frxETH.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">/// @notice Fallback to minting frxETH to the sender</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    receive() external payable {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _submit(msg.sender);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>But these parts of Eths (WithheldETH) also have been converted to the frxETH normally when they were sent to the contract at the first time.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function _submit(address recipient) internal nonReentrant {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Initial pause and value checks</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Give the sender frxETH</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        frxETHToken.minter_mint(recipient, msg.value);</span></span></code></pre>\n<p>So these Eths will be accounted, Twice, even more. It means Eth:frxEth will not be 1:1 anymore.</p>\n<p>The function <code>recoverEther</code> has the same problem. Although these two functions can only be called by owner or DAO gov. It seriously affects financial stability.</p>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Furthermore, due to the logic <code>receive() -> submit()</code>, any kind of transaction that withdraws ETH from the contract and then sends it back will cause the same problem.</p>\n<p>A non-feedback paybale empty function that does not use <code>_submit()</code> should be added to receive special ETH without increasing the frxeth supply.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/221#issuecomment-1257282940\">FortisFortuna (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>We are well aware of the permission structure. The owner will most likely be a large multisig. We mentioned the Frax Multisig in the scope too. If moving funds, it is assumed someone in the multisig would catch an invalid or malicious address.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/221#issuecomment-1275330530\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Wardens have demonstrated a mechanism which breaks core assumptions of the contract’s accounting.  While I am usually very apprehensive to call input sanitization a M issue, a simple require statement here mitigates a risk of accidentally breaking a core tenet of the asset backed token.  </p>\n<p>Going to award this as Medium for now, may come back to it to revise later.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-09-recoverether-not-updating-currentwithheldeth-breaks-calculation-of-withheld-amount-for-further-deposits\" style=\"position:relative;\"><a href=\"#m-09-recoverether-not-updating-currentwithheldeth-breaks-calculation-of-withheld-amount-for-further-deposits\" aria-label=\"m 09 recoverether not updating currentwithheldeth breaks calculation of withheld amount for further deposits permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/346\">[M-09] <code>recoverEther</code> not updating <code>currentWithheldETH</code> breaks calculation of withheld amount for further deposits</a></h2>\n<p><em>Submitted by joestakey, also found by Chom</em></p>\n<p>The emergency exit function <code>recoverEther</code> allows the owner to retrieve the ETH in case an issue were to happen.</p>\n<p>The problem is that this function does not update <code>currentWithheldETH</code>.</p>\n<p>This means upon deposit starting again after the emergency recovery, <code>currentWithheldETH</code> will have an offset and will not match the <code>withholdRatio</code>.</p>\n<p>Direct consequences:</p>\n<ul>\n<li><code>depositEther</code> may not deposit the expected amount of ETH into the ETH 2.0 staking contract.</li>\n<li>The amount of ETH moved to an external yield protocol using <code>moveWithheldETH()</code> will be higher than what it should be.</li>\n</ul>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<ul>\n<li>frxETHMinter has a <code>withholdRatio</code> set to <code>2 * 1e5</code> - ie the contract is meant to hold <code>20%</code> of the ETH deposited.</li>\n<li>Users deposit ETH into the contract.</li>\n<li>An issue happens and the owner calls <code>recoverEther(address(this).balance)</code>. Before the call, the total balance was <code>1e20</code> (100 ETH), and <code>currentWithheldETH == 2 * 1e19</code> - for simplicity we assume no calls to <code>moveWithheldETH</code> or <code>depositEther</code> have been done yet.</li>\n<li>The ETH balance of the minter is now <code>0</code>, but <code>currentWithheldETH</code> is still <code>2 * 1e19</code></li>\n<li>Users start depositing again.</li>\n<li>At this point, the total balance is now <code>1e20</code> (100 ETH), and <code>currentWithheldETH == 4 * e19</code></li>\n<li>The owner calling <code>depositEther</code> deposits <code>32 ether</code> instead of <code>64 ether</code>, because <code>currentWithheldETH == 40 ether</code> instead of <code>20 ether</code>. The owner can also call <code>moveWithheldETH</code> with <code>amount == 4 * 1e19</code> instead of <code>amount == 2 * 1e19</code>.</li>\n</ul>\n<p>You can add the following Foundry test in <code>frxETHMinter.t.sol</code> to reproduce the issue:</p>\n<ul>\n<li>First declare <code>address Alice = address(1);</code> before the <code>setUp()</code></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">testIssueRecoverEther</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">FRAX_COMPTROLLER</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Note the starting ETH balance of the comptroller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">starting_eth</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">FRAX_COMPTROLLER</span><span class=\"mtk1\">.</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Give Alice 200 eth</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Alice</span><span class=\"mtk1\">, </span><span class=\"mtk7\">200</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Set the withhold ratio to 20% (2 * 1e5)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">minter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setWithholdRatio</span><span class=\"mtk1\">(</span><span class=\"mtk7\">200000</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Alice</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//deposit 100 ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">minter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">submit</span><span class=\"mtk1\">{ value: </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\"> }();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">FRAX_COMPTROLLER</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Recover all</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">minter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">recoverEther</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Make sure the FRAX_COMPTROLLER got 100 ether back</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">FRAX_COMPTROLLER</span><span class=\"mtk1\">.</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk12\">starting_eth</span><span class=\"mtk1\"> + (</span><span class=\"mtk7\">100</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//check `currentWithheldETH`: it has not been reset and is still 20 ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">minter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">currentWithheldETH</span><span class=\"mtk1\">(), </span><span class=\"mtk7\">20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Alice</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//deposit 100 ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">minter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">submit</span><span class=\"mtk1\">{ value: </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\"> }();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//check `currentWithheldETH`: because of the offset, it is now 40 ETH, ie 40% of the total ETH in the minter</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">minter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">currentWithheldETH</span><span class=\"mtk1\">(), </span><span class=\"mtk7\">40</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">minter</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">FRAX_COMPTROLLER</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//Owner can call moveWithheldETH, transferring more than 40% of the balance, while the withheld amount should be 20%</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">minter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">moveWithheldETH</span><span class=\"mtk1\">(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Alice</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">40</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">minter</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk7\">60</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Foundry</p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Update <code>currentWithheldETH</code> in <code>recoverEther</code> :</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            currentWithheldETH = currentWithheldETH &gt;= amount ? currentWithheldETH - amount : 0 ;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">192:         (bool success,) = address(owner).call{ value: amount }(&quot;&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">193:         require(success, &quot;Invalid transfer&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">194: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">195:         emit EmergencyEtherRecovered(amount);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/346#issuecomment-1258347198\">FortisFortuna (Frax) commented</a>:</strong></p>\n<blockquote>\n<p>@denett<br>\nwithholdRatio is is not an iron rule and can be updated by the owner at will. recoverEther will likely only be used when we are migrating to a new minting contract, so the accounting in that case is no longer important.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/346#issuecomment-1278281505\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Issue 346 has some great suggestions in it on ensuring user safety in an emergency scenario and think that both of these issues do highlight a valid concern that ultimately could affect the protocol in an emergency scenario. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-10-sfrxeth-the-volatile-result-of-previewmint-may-prevent-mintwithsignature-from-working\" style=\"position:relative;\"><a href=\"#m-10-sfrxeth-the-volatile-result-of-previewmint-may-prevent-mintwithsignature-from-working\" aria-label=\"m 10 sfrxeth the volatile result of previewmint may prevent mintwithsignature from working permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/35\">[M-10] sfrxETH: The volatile result of previewMint() may prevent mintWithSignature from working</a></h2>\n<p><em>Submitted by cccz, also found by rotcivegaf, Trust, and wagmi</em></p>\n<p>In sfrxETH contracts, the result of <code>previewMint()</code> changes with the state of the contract, which causes the value of amount to be volatile in the mintWithSignature function when approveMax is false.</p>\n<p>And when using the mintWithSignature function, which requires the user to sign for an accurate amount value, when the amount used differs from the result of previewMint(), mintWithSignature will not work.</p>\n<p>Consider the following scenarios.</p>\n<p>User A signs using amount = 1000 and calls the mintWithSignature function.</p>\n<p>During execution, the previous transaction in the same block changes the state of the contract so that previewMint(shares) == 1001, so the transaction is reverted due to a signature check failure.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/sfrxETH.sol#L75-L87\">https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/sfrxETH.sol#L75-L87</a></p>\n<p><a href=\"https://github.com/transmissions11/solmate/blob/bff24e835192470ed38bf15dbed6084c2d723ace/src/mixins/ERC4626.sol#L140-L144\">https://github.com/transmissions11/solmate/blob/bff24e835192470ed38bf15dbed6084c2d723ace/src/mixins/ERC4626.sol#L140-L144</a></p>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider that in the mintWithSignature function, the user provides a maxAmount, and then requires maxAmount >= previewMint(shares) and uses maxAmount to verify the signature.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/35#issuecomment-1257310689\">FortisFortuna (Frax) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>Technically correct, though in practice, we will allow user-defined slippage on the UI.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/35#issuecomment-1276247147\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I don’t believe the UI will be able to assist with this issue unless modifications are made to the smart contracts. The signature will become invalidated due to the return value of <code>previewMint()</code> changing while the transaction is waiting to be included in a block.  </p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 83 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/155\">report highlighted below</a> by <strong>rotcivegaf</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/30\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/179\">bytera</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/307\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/49\">leosathya</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/55\">gogo</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/120\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/97\">neko_nyaa</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/176\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/227\">brgltd</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/169\">bobirichman</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/358\">c3phas</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/363\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/200\">ajtra</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/237\">0x4non</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/382\">Deivitto</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/229\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/220\">B2</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/281\">delfin454000</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/319\">lukris02</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/328\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/337\">cryptostellar5</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/144\">rbserver</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/37\">Bnke0x0</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/42\">RockingMiles</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/340\">Diana</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/75\">Waze</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/11\">oyc_109</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/186\">cryptphi</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/112\">__141345__</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/167\">mics</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/259\">tnevler</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/344\">V_B</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/387\">aysha</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/391\">0xf15ers</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/396\">a12jmx</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/202\">Triangle</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/240\">ayeslick</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/51\">csanuragjain</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/353\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/102\">Trust</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/218\">datapunk</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/302\">Bahurum</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/338\">joestakey</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/36\">8olidity</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/96\">ladboy233</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/164\">sikorico</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/172\">slowmoses</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/175\">asutorufos</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/199\">sach1r0</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/258\">TomJ</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/188\">Soosh</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/213\">JLevick</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/324\">durianSausage</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/347\">rokinot</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/385\">JC</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/136\">bbuddha</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/195\">yasir</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/294\">PaludoX0</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/360\">peritoflores</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/56\">yongskiws</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/6\">obront</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/5\">millersplanet</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/14\">Lambda</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/398\">OptimismSec</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/47\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/70\">seyni</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/80\">parashar</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/127\">Yiko</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/129\">Tointer</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/151\">KIntern_NA</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/161\">Tagir2003</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/181\">jag</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/183\">karanctf</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/191\">exd0tpy</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/210\">ronnyx2017</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/235\">natzuu</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/242\">0x040</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/252\">Sm4rty</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/257\">ret2basic</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/263\">got_targ</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/266\">Ch_301</a>, and <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/376\">bharg4v</a>.</em></p>\n<h2 id=\"low-risk-issues\" style=\"position:relative;\"><a href=\"#low-risk-issues\" aria-label=\"low risk issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk Issues</h2>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Instances</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">L‑01</td>\n<td align=\"left\">Draft OpenZeppelin Dependencies</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">L‑02</td>\n<td align=\"left\">Don’t use <code>owner</code> and <code>timelock</code></td>\n<td align=\"center\">2</td>\n</tr>\n</tbody>\n</table>\n<p>Total: 3 instances over 2 issues</p>\n<h2 id=\"l-01-draft-openzeppelin-dependencies\" style=\"position:relative;\"><a href=\"#l-01-draft-openzeppelin-dependencies\" aria-label=\"l 01 draft openzeppelin dependencies permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-01] Draft OpenZeppelin Dependencies</h2>\n<p>The <code>ERC20PermitPermissionedMint.sol</code> contract heredit from an OpenZeppelin contract who is still a draft and is not considered ready for mainnet use. OpenZeppelin contracts may be considered draft contracts if they have not received adequate security auditing or are liable to change with future development.</p>\n<h3 id=\"recommendation\" style=\"position:relative;\"><a href=\"#recommendation\" aria-label=\"recommendation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Ensure the development team is aware of the risks of using a draft contract or consider waiting until the contract is finalised.</p>\n<p>Otherwise, make sure that development team are aware of the risks of using a draft OpenZeppelin contract and accept the risk-benefit trade-off.</p>\n<p>Also could evaluate changing to the <a href=\"https://github.com/transmissions11/solmate\">solmate contracts</a> since his <a href=\"https://github.com/transmissions11/solmate/blob/bff24e835192470ed38bf15dbed6084c2d723ace/src/tokens/ERC20.sol#L8\">ERC20 implementation</a> already has the <a href=\"https://github.com/transmissions11/solmate/blob/bff24e835192470ed38bf15dbed6084c2d723ace/src/tokens/ERC20.sol#L116-L157\">EIP-2612 permit</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20PermitPermissionedMint</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">6</span><span class=\"mtk1\"> </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol&quot;</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"l-02-dont-use-owner-and-timelock\" style=\"position:relative;\"><a href=\"#l-02-dont-use-owner-and-timelock\" aria-label=\"l 02 dont use owner and timelock permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-02] Don’t use <code>owner</code> and <code>timelock</code></h2>\n<p>Using a <code>timelock</code> contract gives confidence to the user, but when check <code>onlyByOwnGov</code> allow the <code>owner</code> and the <code>timelock</code>\nThe <code>owner</code> manipulates the contract without a lock time period.</p>\n<h3 id=\"recommendation-1\" style=\"position:relative;\"><a href=\"#recommendation-1\" aria-label=\"recommendation 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<ul>\n<li>Use only <code>Owned</code> permission</li>\n<li>Remove the <code>timelock_address</code></li>\n<li>The owner should be the <code>timelock</code> contract</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">frxETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">      </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">40</span><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20PermitPermissionedMint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_creator_address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Frax Ether&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;frxETH&quot;</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20PermitPermissionedMint</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">16</span><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timelock_address</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">26</span><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">34</span><span class=\"mtk1\">      </span><span class=\"mtk12\">timelock_address</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">41</span><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">timelock_address</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Not owner or timelock&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">94</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setTimelock</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyByOwnGov</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">95</span><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Zero address detected&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">96</span><span class=\"mtk1\">        </span><span class=\"mtk12\">timelock_address</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">97</span><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TimelockChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">98</span><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TimelockChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timelock_address</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">frxETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">      </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">40</span><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20PermitPermissionedMint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_creator_address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Frax Ether&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;frxETH&quot;</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">OperatorRegistry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">38</span><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timelock_address</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">40</span><span class=\"mtk1\">    </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_withdrawal_pubkey</span><span class=\"mtk1\">) </span><span class=\"mtk11\">Owned</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">41</span><span class=\"mtk1\">        </span><span class=\"mtk12\">timelock_address</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">46</span><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">timelock_address</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Not owner or timelock&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">202</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setTimelock</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyByOwnGov</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">203</span><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Zero address detected&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">204</span><span class=\"mtk1\">        </span><span class=\"mtk12\">timelock_address</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">205</span><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TimelockChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">206</span><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">208</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TimelockChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timelock_address</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">frxETHMinter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">57</span><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">59</span><span class=\"mtk1\">    ) </span><span class=\"mtk11\">OperatorRegistry</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_withdrawalCredential</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<h2 id=\"non-critical-issues\" style=\"position:relative;\"><a href=\"#non-critical-issues\" aria-label=\"non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Non-Critical Issues</h2>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Instances</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">N‑01</td>\n<td align=\"left\">Unused imports</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td align=\"center\">N‑02</td>\n<td align=\"left\">Non-library/interface files should use fixed compiler versions, not floating ones</td>\n<td align=\"center\">6</td>\n</tr>\n<tr>\n<td align=\"center\">N‑03</td>\n<td align=\"left\">Lint</td>\n<td align=\"center\">11</td>\n</tr>\n<tr>\n<td align=\"center\">N‑04</td>\n<td align=\"left\">Event is missing <code>indexed</code> fields</td>\n<td align=\"center\">19</td>\n</tr>\n<tr>\n<td align=\"center\">N‑05</td>\n<td align=\"left\">Functions, parameters and variables in snake case</td>\n<td align=\"center\">31</td>\n</tr>\n<tr>\n<td align=\"center\">N‑06</td>\n<td align=\"left\">Wrong <code>event</code> parameter name</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td align=\"center\">N‑07</td>\n<td align=\"left\">Simplify <code>depositWithSignature</code> function</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">N‑08</td>\n<td align=\"left\">Missing zero address checks</td>\n<td align=\"center\">9</td>\n</tr>\n</tbody>\n</table>\n<p>Total: 81 instances over 8 issues</p>\n<h2 id=\"n-01-unused-imports\" style=\"position:relative;\"><a href=\"#n-01-unused-imports\" aria-label=\"n 01 unused imports permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-01] Unused imports</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20PermitPermissionedMint</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">4</span><span class=\"mtk1\"> </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;openzeppelin-contracts/contracts/token/ERC20/ERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">5</span><span class=\"mtk1\"> </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;openzeppelin-contracts/contracts/token/ERC20/IERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"n02-non-libraryinterface-files-should-use-fixed-compiler-versions-not-floating-ones\" style=\"position:relative;\"><a href=\"#n02-non-libraryinterface-files-should-use-fixed-compiler-versions-not-floating-ones\" aria-label=\"n02 non libraryinterface files should use fixed compiler versions not floating ones permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N‑02] Non-library/interface files should use fixed compiler versions, not floating ones</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20PermitPermissionedMint</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">frxETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">sfrxETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">frxETHMinter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">OperatorRegistry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">xERC4626</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">4</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"n03-lint\" style=\"position:relative;\"><a href=\"#n03-lint\" aria-label=\"n03 lint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N‑03] Lint</h2>\n<p>Wrong indentation:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20PermitPermissionedMint</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">From:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_name</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_symbol</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">31</span><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20Permit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_name</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">    </span><span class=\"mtk11\">Owned</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_creator_address</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">To:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">        </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_name</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_symbol</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">31</span><span class=\"mtk1\">        </span><span class=\"mtk11\">ERC20Permit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_name</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">        </span><span class=\"mtk11\">Owned</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_creator_address</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">frxETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">From:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">37</span><span class=\"mtk1\">      </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_creator_address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">      </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">To:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">37</span><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_creator_address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">From:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">40</span><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20PermitPermissionedMint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_creator_address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Frax Ether&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;frxETH&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">To:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">40</span><span class=\"mtk1\">        </span><span class=\"mtk11\">ERC20PermitPermissionedMint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_creator_address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Frax Ether&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;frxETH&quot;</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<p>Don’t use extra parenthesis:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">sfrxETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">, </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">86</span><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shares</span><span class=\"mtk1\">, </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p>Missed space:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20PermitPermissionedMint</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">84</span><span class=\"mtk1\">:</span><span class=\"mtk7\">56</span><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">minters_array</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++){</span></span></span></code></pre>\n<p>Remove space:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20PermitPermissionedMint</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\"> \\</span><span class=\"mtk12\">n</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">frxETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">34</span><span class=\"mtk1\"> \\</span><span class=\"mtk12\">n</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">42</span><span class=\"mtk1\"> \\</span><span class=\"mtk12\">n</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">sfrxETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">88</span><span class=\"mtk1\"> \\</span><span class=\"mtk12\">n</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">OperatorRegistry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\"> \\</span><span class=\"mtk12\">n</span></span></span></code></pre>\n<h2 id=\"n04-event-is-missing-indexed-fields\" style=\"position:relative;\"><a href=\"#n04-event-is-missing-indexed-fields\" aria-label=\"n04 event is missing indexed fields permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N‑04] Event is missing <code>indexed</code> fields</h2>\n<p>Index event fields make the field more quickly accessible to off-chain tools that parse events. However, note that each index field costs extra gas during emission, so it’s not necessarily best to index the maximum allowed per event (three fields). Each <code>event</code> should use three <code>indexed</code> fields if there are three or more fields, and gas usage is not particularly of concern for the events in question. If there are fewer than three fields, all of the fields should be indexed.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">frxETHMinter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">205</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">EmergencyEtherRecovered</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">206</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">EmergencyERC20Recovered</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">207</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ETHSubmitted</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sent_amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withheld_amt</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">208</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">DepositEtherPaused</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">new_status</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">209</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">DepositSent</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pubKey</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawalCredential</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">210</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SubmitPaused</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">new_status</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">211</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">WithheldETHMoved</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">212</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">WithholdRatioSet</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newRatio</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">OperatorRegistry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">208</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TimelockChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timelock_address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">209</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">WithdrawalCredentialSet</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_withdrawalCredential</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">210</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ValidatorAdded</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pubKey</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawalCredential</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">212</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ValidatorRemoved</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pubKey</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">remove_idx</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dont_care_about_ordering</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">213</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ValidatorsPopped</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">times</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">214</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ValidatorsSwapped</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from_pubKey</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_pubKey</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from_idx</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_idx</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20PermitPermissionedMint</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">102</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TokenMinterBurned</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">103</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TokenMinterMinted</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MinterAdded</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minter_address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MinterRemoved</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minter_address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TimelockChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timelock_address</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"n-05-functions-parameters-and-variables-in-snake-case\" style=\"position:relative;\"><a href=\"#n-05-functions-parameters-and-variables-in-snake-case\" aria-label=\"n 05 functions parameters and variables in snake case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-05] Functions, parameters and variables in snake case</h2>\n<p>Use camel case for all functions, parameters and variables and snake case for constants</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20PermitPermissionedMint</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">16</span><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timelock_address</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">19</span><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minters_array</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Allowed to mint</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">25</span><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_creator_address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">26</span><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">53</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">minter_burn_from</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b_address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinters</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">59</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">minter_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">m_address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">m_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinters</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">65</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addMinter</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minter_address</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyByOwnGov</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">76</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">removeMinter</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minter_address</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyByOwnGov</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">94</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setTimelock</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyByOwnGov</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MinterAdded</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minter_address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MinterRemoved</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minter_address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TimelockChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timelock_address</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">frxETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">37</span><span class=\"mtk1\">      </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_creator_address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">      </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">frxETHMinter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">57</span><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">78</span><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sfrxeth_recieved</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">sfrxETHToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">, </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">94</span><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withheld_amt</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">208</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">DepositEtherPaused</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">new_status</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">210</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SubmitPaused</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">new_status</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">OperatorRegistry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">37</span><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">curr_withdrawal_pubkey</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Pubkey for ETH 2.0 withdrawal creds. If you change it, you must empty the validators array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">38</span><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timelock_address</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">40</span><span class=\"mtk1\">    </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_withdrawal_pubkey</span><span class=\"mtk1\">) </span><span class=\"mtk11\">Owned</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">69</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">swapValidator</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from_idx</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_idx</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyByOwnGov</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">93</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">removeValidator</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">remove_idx</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dont_care_about_ordering</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyByOwnGov</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">95</span><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">removed_pubkey</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">validators</span><span class=\"mtk1\">[</span><span class=\"mtk12\">remove_idx</span><span class=\"mtk1\">].</span><span class=\"mtk12\">pubKey</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">108</span><span class=\"mtk1\">            </span><span class=\"mtk12\">Validator</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">original_validators</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">validators</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setWithdrawalCredential</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_new_withdrawal_pubkey</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyByOwnGov</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">202</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setTimelock</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyByOwnGov</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">208</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TimelockChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timelock_address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">212</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ValidatorRemoved</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pubKey</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">remove_idx</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dont_care_about_ordering</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">214</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ValidatorsSwapped</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from_pubKey</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_pubKey</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from_idx</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_idx</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"n-06-wrong-event-parameter-name\" style=\"position:relative;\"><a href=\"#n-06-wrong-event-parameter-name\" aria-label=\"n 06 wrong event parameter name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-06] Wrong <code>event</code> parameter name</h2>\n<p>Replace <code>to</code> parameter of <code>TokenMinterBurned</code> event to <code>minter</code>\nReplace <code>from</code> parameter of <code>TokenMinterMinted</code> event to <code>minter</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20PermitPermissionedMint</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">102</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TokenMinterBurned</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">103</span><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TokenMinterMinted</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"n-07-simplify-depositwithsignature-function\" style=\"position:relative;\"><a href=\"#n-07-simplify-depositwithsignature-function\" aria-label=\"n 07 simplify depositwithsignature function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-07] Simplify <code>depositWithSignature</code> function</h2>\n<p>The parameter <code>approveMax</code> of <code>depositWithSignature</code> function could be removedready, the permit <code>assets</code> should be always equal to deposit <code>assets</code></p>\n<p>File: /src/sfrxETH.sol</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Approve and deposit() in one transaction</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">depositWithSignature</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deadline</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">v</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">r</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">.</span><span class=\"mtk11\">permit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">, </span><span class=\"mtk12\">deadline</span><span class=\"mtk1\">, </span><span class=\"mtk12\">v</span><span class=\"mtk1\">, </span><span class=\"mtk12\">r</span><span class=\"mtk1\">, </span><span class=\"mtk12\">s</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">, </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"n-08-missing-zero-address-checks\" style=\"position:relative;\"><a href=\"#n-08-missing-zero-address-checks\" aria-label=\"n 08 missing zero address checks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-08] Missing zero address checks</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20PermitPermissionedMint</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">26</span><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">,</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">sfrxETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">42</span><span class=\"mtk1\">    </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_underlying</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_rewardsCycleLength</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">frxETHMinter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">53</span><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositContractAddress</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">54</span><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">frxETHAddress</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">55</span><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sfrxETHAddress</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">57</span><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk7\">70</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">submitAndDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">166</span><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">moveWithheldETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyByOwnGov</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">OperatorRegistry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/*_timelock_address parameter*/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">40</span><span class=\"mtk1\">     </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timelock_address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_withdrawal_pubkey</span><span class=\"mtk1\">) </span><span class=\"mtk11\">Owned</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this contest, 93 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/157\">report highlighted below</a> by <strong>pfapostol</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/177\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/86\">ReyAdmirado</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/118\">ajtra</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/232\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/383\">JC</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/121\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/154\">rotcivegaf</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/359\">c3phas</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/10\">oyc_109</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/31\">Bnke0x0</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/111\">__141345__</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/238\">TomJ</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/251\">ret2basic</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/253\">Sm4rty</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/309\">prasantgupta52</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/322\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/331\">Diana</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/335\">cryptostellar5</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/345\">SnowMan</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/45\">ch0bu</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/54\">gogo</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/159\">B2</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/332\">peanuts</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/379\">Deivitto</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/397\">medikko</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/29\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/64\">zishansami</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/143\">rbserver</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/368\">Rohan16</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/8\">erictee</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/323\">durianSausage</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/392\">d3e4</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/305\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/43\">RockingMiles</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/91\">karanctf</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/140\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/193\">0xA5DF</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/228\">brgltd</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/234\">natzuu</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/236\">0x040</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/248\">lukris02</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/261\">tnevler</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/262\">got_targ</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/295\">Tomio</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/304\">Amithuddar</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/243\">Metatron</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/2\">samruna</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/4\">millersplanet</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/38\">drdr</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/50\">leosathya</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/72\">Waze</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/82\">bulej93</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/85\">jag</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/115\">Satyam_Sharma</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/170\">slowmoses</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/207\">ronnyx2017</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/241\">Ocean_Sky</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/250\">imare</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/320\">JAGADESH</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/330\">SooYa</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/342\">V_B</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/26\">Pheonix</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/98\">neko_nyaa</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/198\">sach1r0</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/272\">delfin454000</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/301\">0x4non</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/348\">Fitraldys</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/389\">aysha</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/7\">0xsam</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/95\">ladboy233</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/290\">0x5rings</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/20\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/182\">Triangle</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/69\">seyni</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/106\">albincsergo</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/160\">Tagir2003</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/178\">bytera</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/184\">beardofginger</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/276\">PaludoX0</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/288\">Ben</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/315\">Chom</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/351\">rokinot</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/354\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/356\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/374\">asutorufos</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/3\">emrekocak</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/366\">wagmi</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/71\">dharma09</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/104\">0xmatt</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/166\">mics</a>, <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/168\">bobirichman</a>, and <a href=\"https://github.com/code-423n4/2022-09-frax-findings/issues/187\">cryptphi</a>.</em></p>\n<h2 id=\"gas-optimizations-summary\" style=\"position:relative;\"><a href=\"#gas-optimizations-summary\" aria-label=\"gas optimizations summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations Summary</h2>\n<p>Gas savings are estimated using the gas report of existing <code>FORGE_GAS_REPORT=true forge test --fork-url https://eth-mainnet.g.alchemy.com/v2/&#x3C;API></code> tests (the sum of all deployment costs and the sum of the costs of calling methods) and may vary depending on the implementation of the fix.<br>\n<strong>Note</strong>: method call evaluations are volatile: <code>≈ ±500</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Instances</th>\n<th align=\"center\">Estimated gas(deployments)</th>\n<th align=\"center\">Estimated gas(avg method call)</th>\n<th align=\"center\">Estimated gas(min method call)</th>\n<th align=\"center\">Estimated gas(max method call)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><strong>G‑01</strong></td>\n<td align=\"left\">Deleting an array element can use a more efficient algorithm</td>\n<td align=\"center\">1</td>\n<td align=\"center\">23 830</td>\n<td align=\"center\">271 820</td>\n<td align=\"center\">5 298</td>\n<td align=\"center\">538 343</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G‑02</strong></td>\n<td align=\"left\">Use function instead of modifiers</td>\n<td align=\"center\">4</td>\n<td align=\"center\">177 805</td>\n<td align=\"center\">-990</td>\n<td align=\"center\">-389</td>\n<td align=\"center\">1 902</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G‑03</strong></td>\n<td align=\"left\">Use custom errors rather than revert()/require() strings to save gas</td>\n<td align=\"center\">21</td>\n<td align=\"center\">150 574</td>\n<td align=\"center\">-123</td>\n<td align=\"center\">-25</td>\n<td align=\"center\">-184</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G‑04</strong></td>\n<td align=\"left\">Using bools for storage incurs overhead</td>\n<td align=\"center\">3</td>\n<td align=\"center\">20 221</td>\n<td align=\"center\">-990</td>\n<td align=\"center\">266</td>\n<td align=\"center\">-5 979</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G‑05</strong></td>\n<td align=\"left\">Unchecking arithmetics operations that can’t underflow/overflow</td>\n<td align=\"center\">7</td>\n<td align=\"center\">18 621</td>\n<td align=\"center\">503</td>\n<td align=\"center\">227</td>\n<td align=\"center\">829</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G‑06</strong></td>\n<td align=\"left\"><code>storage</code> pointer to a structure is cheaper than copying each value of the structure into <code>memory</code>, same for <code>array</code> and <code>mapping</code></td>\n<td align=\"center\">1</td>\n<td align=\"center\">8 208</td>\n<td align=\"center\">-970</td>\n<td align=\"center\">106</td>\n<td align=\"center\">2 487</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G‑07</strong></td>\n<td align=\"left\"><code>x = x + y</code> is more efficient, than <code>x += y</code></td>\n<td align=\"center\">4</td>\n<td align=\"center\">5 007</td>\n<td align=\"center\">87</td>\n<td align=\"center\">82</td>\n<td align=\"center\">101</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G‑08</strong></td>\n<td align=\"left\">It costs more gas to initialize non-constant/non-immutable variables to zero than to let the default of zero be applied</td>\n<td align=\"center\">2</td>\n<td align=\"center\">4 415</td>\n<td align=\"center\">0</td>\n<td align=\"center\">0</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G‑09</strong></td>\n<td align=\"left\">Don’t compare boolean expressions to boolean literals</td>\n<td align=\"center\">3</td>\n<td align=\"center\">3 006</td>\n<td align=\"center\">-477</td>\n<td align=\"center\">43</td>\n<td align=\"center\">55</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>G‑10</strong></td>\n<td align=\"left\">State variables should be cached in stack variables rather than re-reading them from storage</td>\n<td align=\"center\">1</td>\n<td align=\"center\">400</td>\n<td align=\"center\">511</td>\n<td align=\"center\">-21</td>\n<td align=\"center\">4 839</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"left\"><strong>Overall Gas Savings</strong></td>\n<td align=\"center\"><strong>47</strong></td>\n<td align=\"center\"><strong>419 688</strong>(7,43%)</td>\n<td align=\"center\"><strong>270 705</strong>(12,18%)</td>\n<td align=\"center\"><strong>5 474</strong>(0,42%)</td>\n<td align=\"center\"><strong>539 594</strong>(18,02%)</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Total: 47 instances over 10 issues</strong></p>\n<hr>\n<h2 id=\"g-01-deleting-an-array-element-can-use-a-more-efficient-algorithm-1-instance\" style=\"position:relative;\"><a href=\"#g-01-deleting-an-array-element-can-use-a-more-efficient-algorithm-1-instance\" aria-label=\"g 01 deleting an array element can use a more efficient algorithm 1 instance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Deleting an array element can use a more efficient algorithm (1 instance)</h2>\n<ul>\n<li>Deployment. Gas Saved: <strong>23 830</strong></li>\n<li>Minumal Method Call. Gas Saved: <strong>5 298</strong></li>\n<li>Average Method Call. Gas Saved: <strong>271 820</strong></li>\n<li>Maximum Method Call. Gas Saved: <strong>538 343</strong></li>\n</ul>\n<h3 id=\"srcoperatorregistrysol107-116\" style=\"position:relative;\"><a href=\"#srcoperatorregistrysol107-116\" aria-label=\"srcoperatorregistrysol107 116 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/OperatorRegistry.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L107-L116\">107-116</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/OperatorRegistry.sol b/src/OperatorRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index f81094c..6732da9 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/OperatorRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/OperatorRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -104,18 +104,13 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  104, 104:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  105, 105:         // More gassy, loop</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  106, 106:         else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 107     :-            // Save the original validators</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 108     :-            Validator[] memory original_validators = validators;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 109     :-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 110     :-            // Clear the original validators list</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 111     :-            delete validators;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 112     :-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 113     :-            // Fill the new validators array with all except the value to remove</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 114     :-            for (uint256 i = 0; i &lt; original_validators.length; ++i) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 115     :-                if (i != remove_idx) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 116     :-                    validators.push(original_validators[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      107:+            uint256 length = validators.length - 1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      108:+            unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      109:+                for (uint256 i = remove_idx; i &lt; length;++i) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      110:+                    validators[i] = validators[i + 1];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  117, 111:                 }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  118, 112:             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      113:+            validators.pop();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  119, 114:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  120, 115:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  121, 116:         emit ValidatorRemoved(removed_pubkey, remove_idx, dont_care_about_ordering);</span></span></span></code></pre>\n<hr>\n<h2 id=\"g-02-use-function-instead-of-modifiers-4-instances\" style=\"position:relative;\"><a href=\"#g-02-use-function-instead-of-modifiers-4-instances\" aria-label=\"g 02 use function instead of modifiers 4 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] Use function instead of modifiers (4 instances)</h2>\n<ul>\n<li>Deployment. Gas Saved: <strong>177 805</strong></li>\n<li>Minumal Method Call. Gas Saved: <strong>-389</strong></li>\n<li>Average Method Call. Gas Saved: <strong>-990</strong></li>\n<li>Maximum Method Call. Gas Saved: <strong>1 902</strong></li>\n</ul>\n<h3 id=\"srcerc20erc20permitpermissionedmintsol40-45\" style=\"position:relative;\"><a href=\"#srcerc20erc20permitpermissionedmintsol40-45\" aria-label=\"srcerc20erc20permitpermissionedmintsol40 45 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/ERC20/ERC20PermitPermissionedMint.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L40\">40</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L45\">45</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/ERC20/ERC20PermitPermissionedMint.sol b/src/ERC20/ERC20PermitPermissionedMint.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 3bed26d..78da7f1 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/ERC20/ERC20PermitPermissionedMint.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/ERC20/ERC20PermitPermissionedMint.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -37,32 +37,33 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   37,  37:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   38,  38:     /* ========== MODIFIERS ========== */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   39,  39:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  40     :-    modifier onlyByOwnGov() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       40:+    function onlyByOwnGov() private {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   41,  41:         require(msg.sender == timelock_address || msg.sender == owner, &quot;Not owner or timelock&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  42     :-        _;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   43,  42:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   44,  43:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  45     :-    modifier onlyMinters() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       44:+    function onlyMinters() private {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   46,  45:        require(minters[msg.sender] == true, &quot;Only minters&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  47     :-        _;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   48,  46:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   49,  47:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   50,  48:     /* ========== RESTRICTED FUNCTIONS ========== */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   51,  49:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   52,  50:     // Used by minters when user redeems</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  53     :-    function minter_burn_from(address b_address, uint256 b_amount) public onlyMinters {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       51:+    function minter_burn_from(address b_address, uint256 b_amount) public {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       52:+        onlyMinters();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   54,  53:         super.burnFrom(b_address, b_amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   55,  54:         emit TokenMinterBurned(b_address, msg.sender, b_amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   56,  55:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   57,  56:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   58,  57:     // This function is what other minters will call to mint new tokens</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  59     :-    function minter_mint(address m_address, uint256 m_amount) public onlyMinters {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       58:+    function minter_mint(address m_address, uint256 m_amount) public {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       59:+        onlyMinters();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   60,  60:         super._mint(m_address, m_amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   61,  61:         emit TokenMinterMinted(msg.sender, m_address, m_amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   62,  62:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   63,  63:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   64,  64:     // Adds whitelisted minters</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  65     :-    function addMinter(address minter_address) public onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       65:+    function addMinter(address minter_address) public {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       66:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   66,  67:         require(minter_address != address(0), &quot;Zero address detected&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   67,  68:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   68,  69:         require(minters[minter_address] == false, &quot;Address already exists&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -73,7 +74,8 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   73,  74:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   74,  75:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   75,  76:     // Remove a minter</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  76     :-    function removeMinter(address minter_address) public onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       77:+    function removeMinter(address minter_address) public {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       78:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   77,  79:         require(minter_address != address(0), &quot;Zero address detected&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   78,  80:         require(minters[minter_address] == true, &quot;Address nonexistant&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   79,  81:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -91,7 +93,8 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   91,  93:         emit MinterRemoved(minter_address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   92,  94:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   93,  95:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  94     :-    function setTimelock(address _timelock_address) public onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       96:+    function setTimelock(address _timelock_address) public {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       97:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   95,  98:         require(_timelock_address != address(0), &quot;Zero address detected&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   96,  99:         timelock_address = _timelock_address;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   97, 100:         emit TimelockChanged(_timelock_address);</span></span></span></code></pre>\n<h3 id=\"srcoperatorregistrysol45\" style=\"position:relative;\"><a href=\"#srcoperatorregistrysol45\" aria-label=\"srcoperatorregistrysol45 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/OperatorRegistry.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L45\">45</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/OperatorRegistry.sol b/src/OperatorRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index f81094c..fc5d16d 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/OperatorRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/OperatorRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -42,15 +42,15 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   42,  42:         curr_withdrawal_pubkey = _withdrawal_pubkey;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   43,  43:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   44,  44:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  45     :-    modifier onlyByOwnGov() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       45:+    function onlyByOwnGov() internal {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   46,  46:         require(msg.sender == timelock_address || msg.sender == owner, &quot;Not owner or timelock&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  47     :-        _;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   48,  47:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   49,  48:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   50,  49:     /// @notice Add a new validator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   51,  50:     /** @dev You should verify offchain that the validator is indeed valid before adding it</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   52,  51:         Reason we don&#39;t do that here is for gas */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  53     :-    function addValidator(Validator calldata validator) public onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       52:+    function addValidator(Validator calldata validator) public {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       53:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   54,  54:         validators.push(validator);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   55,  55:         emit ValidatorAdded(validator.pubKey, curr_withdrawal_pubkey);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   56,  56:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -58,7 +58,8 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   58,  58:     /// @notice Add multiple new validators in one function call</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   59,  59:     /** @dev You should verify offchain that the validators are indeed valid before adding them</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   60,  60:         Reason we don&#39;t do that here is for gas */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  61     :-    function addValidators(Validator[] calldata validatorArray) external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       61:+    function addValidators(Validator[] calldata validatorArray) external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       62:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   62,  63:         uint arrayLength = validatorArray.length;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   63,  64:         for (uint256 i = 0; i &lt; arrayLength; ++i) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   64,  65:             addValidator(validatorArray[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -66,7 +67,8 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   66,  67:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   67,  68:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   68,  69:     /// @notice Swap the location of one validator with another</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  69     :-    function swapValidator(uint256 from_idx, uint256 to_idx) public onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       70:+    function swapValidator(uint256 from_idx, uint256 to_idx) public {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       71:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   70,  72:         // Get the original values</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   71,  73:         Validator memory fromVal = validators[from_idx];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   72,  74:         Validator memory toVal = validators[to_idx];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -79,7 +81,8 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   79,  81:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   80,  82:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   81,  83:     /// @notice Remove validators from the end of the validators array, in case they were added in error</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  82     :-    function popValidators(uint256 times) public onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       84:+    function popValidators(uint256 times) public {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       85:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   83,  86:         // Loop through and remove validator entries at the end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   84,  87:         for (uint256 i = 0; i &lt; times; ++i) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   85,  88:             validators.pop();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -90,7 +93,8 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   90,  93:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   91,  94:     /** @notice Remove a validator from the array. If dont_care_about_ordering is true,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   92,  95:         a swap and pop will occur instead of a more gassy loop */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  93     :-    function removeValidator(uint256 remove_idx, bool dont_care_about_ordering) public onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       96:+    function removeValidator(uint256 remove_idx, bool dont_care_about_ordering) public {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       97:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   94,  98:         // Get the pubkey for the validator to remove (for informational purposes)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   95,  99:         bytes memory removed_pubkey = validators[remove_idx].pubKey;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   96, 100:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -178,7 +182,8 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  178, 182:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  179, 183:     /// @notice Requires empty validator stack as changing withdrawal creds invalidates signature</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  180, 184:     /// @dev May need to call clearValidatorArray() first</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 181     :-    function setWithdrawalCredential(bytes memory _new_withdrawal_pubkey) external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      185:+    function setWithdrawalCredential(bytes memory _new_withdrawal_pubkey) external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      186:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  182, 187:         require(numValidators() == 0, &quot;Clear validator array first&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  183, 188:         curr_withdrawal_pubkey = _new_withdrawal_pubkey;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  184, 189:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -187,7 +192,8 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  187, 192:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  188, 193:     /// @notice Empties the validator array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  189, 194:     /// @dev Need to do this before setWithdrawalCredential()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 190     :-    function clearValidatorArray() external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      195:+    function clearValidatorArray() external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      196:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  191, 197:         delete validators;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  192, 198:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  193, 199:         emit ValidatorArrayCleared();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -199,7 +205,8 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  199, 205:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  200, 206:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  201, 207:     /// @notice Set the timelock contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 202     :-    function setTimelock(address _timelock_address) external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      208:+    function setTimelock(address _timelock_address) external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      209:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  203, 210:         require(_timelock_address != address(0), &quot;Zero address detected&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  204, 211:         timelock_address = _timelock_address;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  205, 212:         emit TimelockChanged(_timelock_address);</span></span></span></code></pre>\n<h3 id=\"srcfrxethmintersollink\" style=\"position:relative;\"><a href=\"#srcfrxethmintersollink\" aria-label=\"srcfrxethmintersollink permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/frxETHMinter.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/main/src/frxETHMinter.sol\">link</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/frxETHMinter.sol b/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 4565883..2690157 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -156,14 +156,16 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  156, 156:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  157, 157:     /// @param newRatio of ETH that is sent to deposit contract vs withheld, 1e6 precision</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  158, 158:     /// @notice An input of 1e6 results in 100% of Eth deposited, 0% withheld</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 159     :-    function setWithholdRatio(uint256 newRatio) external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      159:+    function setWithholdRatio(uint256 newRatio) external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      160:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  160, 161:         require (newRatio &lt;= RATIO_PRECISION, &quot;Ratio cannot surpass 100%&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  161, 162:         withholdRatio = newRatio;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  162, 163:         emit WithholdRatioSet(newRatio);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  163, 164:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  164, 165:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  165, 166:     /// @notice Give the withheld ETH to the &quot;to&quot; address</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 166     :-    function moveWithheldETH(address payable to, uint256 amount) external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      167:+    function moveWithheldETH(address payable to, uint256 amount) external  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      168:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  167, 169:         require(amount &lt;= currentWithheldETH, &quot;Not enough withheld ETH in contract&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  168, 170:         currentWithheldETH -= amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  169, 171:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -174,21 +176,24 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  174, 176:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  175, 177:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  176, 178:     /// @notice Toggle allowing submites</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 177     :-    function togglePauseSubmits() external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      179:+    function togglePauseSubmits() external  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      180:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  178, 181:         submitPaused = !submitPaused;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  179, 182:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  180, 183:         emit SubmitPaused(submitPaused);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  181, 184:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  182, 185:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  183, 186:     /// @notice Toggle allowing depositing ETH to validators</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 184     :-    function togglePauseDepositEther() external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      187:+    function togglePauseDepositEther() external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      188:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  185, 189:         depositEtherPaused = !depositEtherPaused;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  186, 190:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  187, 191:         emit DepositEtherPaused(depositEtherPaused);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  188, 192:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  189, 193:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  190, 194:     /// @notice For emergencies if something gets stuck</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 191     :-    function recoverEther(uint256 amount) external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      195:+    function recoverEther(uint256 amount) external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      196:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  192, 197:         (bool success,) = address(owner).call{ value: amount }(&quot;&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  193, 198:         require(success, &quot;Invalid transfer&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  194, 199:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -196,7 +201,8 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  196, 201:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  197, 202:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  198, 203:     /// @notice For emergencies if someone accidentally sent some ERC20 tokens here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 199     :-    function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      204:+    function recoverERC20(address tokenAddress, uint256 tokenAmount) external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      205:+        onlyByOwnGov();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  200, 206:         require(IERC20(tokenAddress).transfer(owner, tokenAmount), &quot;recoverERC20: Transfer failed&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  201, 207:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  202, 208:         emit EmergencyERC20Recovered(tokenAddress, tokenAmount);</span></span></span></code></pre>\n<hr>\n<h2 id=\"g-03-use-custom-errors-rather-than-revertrequire-strings-to-save-gas-21-instances\" style=\"position:relative;\"><a href=\"#g-03-use-custom-errors-rather-than-revertrequire-strings-to-save-gas-21-instances\" aria-label=\"g 03 use custom errors rather than revertrequire strings to save gas 21 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] Use custom errors rather than revert()/require() strings to save gas (21 instances)</h2>\n<ul>\n<li>Deployment. Gas Saved: <strong>150 574</strong></li>\n<li>Minumal Method Call. Gas Saved: <strong>-25</strong></li>\n<li>Average Method Call. Gas Saved: <strong>-123</strong></li>\n<li>Maximum Method Call. Gas Saved: <strong>-184</strong></li>\n</ul>\n<p>Custom errors are available from solidity version 0.8.4. Custom errors save ~50 gas each time they’re hitby <a href=\"https://blog.soliditylang.org/2021/04/21/custom-errors/#errors-in-depth\">avoiding having to allocate and store the revert string</a>. Not defining the strings also save deployment gas</p>\n<h3 id=\"srcerc20erc20permitpermissionedmintsol41-46-66-68-77-78-95\" style=\"position:relative;\"><a href=\"#srcerc20erc20permitpermissionedmintsol41-46-66-68-77-78-95\" aria-label=\"srcerc20erc20permitpermissionedmintsol41 46 66 68 77 78 95 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/ERC20/ERC20PermitPermissionedMint.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/main/src/ERC20/ERC20PermitPermissionedMint.sol#L41\">41</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/main/src/ERC20/ERC20PermitPermissionedMint.sol#L46\">46</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/main/src/ERC20/ERC20PermitPermissionedMint.sol#L66\">66</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/main/src/ERC20/ERC20PermitPermissionedMint.sol#L68\">68</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/main/src/ERC20/ERC20PermitPermissionedMint.sol#L77-L78\">77-78</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/main/src/ERC20/ERC20PermitPermissionedMint.sol#L95\">95</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/ERC20/ERC20PermitPermissionedMint.sol b/src/ERC20/ERC20PermitPermissionedMint.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 3bed26d..758ca2a 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/ERC20/ERC20PermitPermissionedMint.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/ERC20/ERC20PermitPermissionedMint.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -7,6 +7,13 @@ import &quot;openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permi</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    7,   7: import &quot;openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    8,   8: import &quot;../Utils/Owned.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    9,   9:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       10:+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       11:+error ZeroAddressDectected();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       12:+error AddresssNonExists();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       13:+error AddressAlreadyExists();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       14:+error OnlyMinters();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       15:+error NotOwnerOrTimelock();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       16:+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   10,  17: /// @title Parent contract for frxETH.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   11,  18: /** @notice Combines Openzeppelin&#39;s ERC20Permit and ERC20Burnable with Synthetix&#39;s Owned.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   12,  19:     Also includes a list of authorized minters */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -38,12 +45,12 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   38,  45:     /* ========== MODIFIERS ========== */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   39,  46:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   40,  47:     modifier onlyByOwnGov() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  41     :-        require(msg.sender == timelock_address || msg.sender == owner, &quot;Not owner or timelock&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       48:+        if(msg.sender != timelock_address &amp;&amp; msg.sender != owner) revert NotOwnerOrTimelock();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   42,  49:         _;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   43,  50:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   44,  51:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   45,  52:     modifier onlyMinters() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  46     :-       require(minters[msg.sender] == true, &quot;Only minters&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       53:+       if(minters[msg.sender] != true) revert OnlyMinters();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   47,  54:         _;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   48,  55:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   49,  56:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -63,9 +70,10 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   63,  70:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   64,  71:     // Adds whitelisted minters</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   65,  72:     function addMinter(address minter_address) public onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  66     :-        require(minter_address != address(0), &quot;Zero address detected&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       73:+        if(minter_address == address(0)) revert ZeroAddressDectected();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   67,  74:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  68     :-        require(minters[minter_address] == false, &quot;Address already exists&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       75:+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       76:+        if(minters[minter_address] != false) revert AddressAlreadyExists();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   69,  77:         minters[minter_address] = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   70,  78:         minters_array.push(minter_address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   71,  79:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -74,8 +82,8 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   74,  82:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   75,  83:     // Remove a minter</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   76,  84:     function removeMinter(address minter_address) public onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  77     :-        require(minter_address != address(0), &quot;Zero address detected&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  78     :-        require(minters[minter_address] == true, &quot;Address nonexistant&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       85:+        if(minter_address == address(0)) revert ZeroAddressDectected();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       86:+        if(minters[minter_address] != true) revert AddresssNonExists();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   79,  87:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   80,  88:         // Delete from the mapping</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   81,  89:         delete minters[minter_address];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -92,7 +100,7 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   92, 100:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   93, 101:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   94, 102:     function setTimelock(address _timelock_address) public onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  95     :-        require(_timelock_address != address(0), &quot;Zero address detected&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      103:+        if(_timelock_address == address(0)) revert ZeroAddressDectected();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   96, 104:         timelock_address = _timelock_address;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   97, 105:         emit TimelockChanged(_timelock_address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   98, 106:     }</span></span></span></code></pre>\n<h3 id=\"srcoperatorregistrysol46-137-182-203\" style=\"position:relative;\"><a href=\"#srcoperatorregistrysol46-137-182-203\" aria-label=\"srcoperatorregistrysol46 137 182 203 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/OperatorRegistry.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L46\">46</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L137\">137</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L182\">182</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L203\">203</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/OperatorRegistry.sol b/src/OperatorRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index f81094c..ac3b7a1 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/OperatorRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/OperatorRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -23,6 +23,12 @@ pragma solidity ^0.8.0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   23,  23:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   24,  24: import &quot;./Utils/Owned.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   25,  25:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       26:+error NotOwnerOrTimelock();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       27:+error ClearValidatorArrayFirst();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       28:+error ZeroAddressDectected();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       29:+error ValidatorStackEmpty();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       30:+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       31:+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   26,  32: /// @title Keeps track of validators used for ETH 2.0 staking</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   27,  33: /// @notice A permissioned owner can add and removed them at will</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   28,  34: contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -43,7 +49,7 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   43,  49:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   44,  50:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   45,  51:     modifier onlyByOwnGov() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  46     :-        require(msg.sender == timelock_address || msg.sender == owner, &quot;Not owner or timelock&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       52:+        if(msg.sender != timelock_address &amp;&amp; msg.sender != owner) revert NotOwnerOrTimelock();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   47,  53:         _;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   48,  54:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   49,  55:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -134,7 +140,7 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  134, 140:     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  135, 141:         // Make sure there are free validators available</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  136, 142:         uint numVals = numValidators();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 137     :-        require(numVals != 0, &quot;Validator stack is empty&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      143:+        if(numVals == 0) revert ValidatorStackEmpty();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  138, 144:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  139, 145:         // Pop the last validator off the array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  140, 146:         Validator memory popped = validators[numVals - 1];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -179,7 +185,7 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  179, 185:     /// @notice Requires empty validator stack as changing withdrawal creds invalidates signature</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  180, 186:     /// @dev May need to call clearValidatorArray() first</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  181, 187:     function setWithdrawalCredential(bytes memory _new_withdrawal_pubkey) external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 182     :-        require(numValidators() == 0, &quot;Clear validator array first&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      188:+        if(numValidators() != 0) revert ClearValidatorArrayFirst();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  183, 189:         curr_withdrawal_pubkey = _new_withdrawal_pubkey;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  184, 190:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  185, 191:         emit WithdrawalCredentialSet(_new_withdrawal_pubkey);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -200,7 +206,7 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  200, 206:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  201, 207:     /// @notice Set the timelock contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  202, 208:     function setTimelock(address _timelock_address) external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 203     :-        require(_timelock_address != address(0), &quot;Zero address detected&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      209:+        if(_timelock_address == address(0)) revert ZeroAddressDectected();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  204, 210:         timelock_address = _timelock_address;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  205, 211:         emit TimelockChanged(_timelock_address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  206, 212:     }</span></span></span></code></pre>\n<h3 id=\"srcfrxethmintersol79-87-88-122-126-140-167-171-193-200\" style=\"position:relative;\"><a href=\"#srcfrxethmintersol79-87-88-122-126-140-167-171-193-200\" aria-label=\"srcfrxethmintersol79 87 88 122 126 140 167 171 193 200 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/frxETHMinter.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L79\">79</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L87-L88\">87-88</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L122\">122</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L126\">126</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L140\">140</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L167\">167</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L171\">171</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L193\">193</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L200\">200</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/frxETHMinter.sol b/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 4565883..f3b5abe 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -29,6 +29,17 @@ import &quot;openzeppelin-contracts/contracts/token/ERC20/IERC20.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   29,  29: import { IDepositContract } from &quot;./DepositContract.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   30,  30: import &quot;./OperatorRegistry.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   31,  31:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       32:+error InvalidTransferERC20();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       33:+error InvalidTransfer();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       34:+error NotEnoughWithgeld();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       35:+error AlreadyDeposited();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       36:+error NotEnoughETH();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       37:+error DepositPaused();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       38:+error CannotSubmitZero();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       39:+error NoSfrxETHReturned();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       40:+error SubmitIsPaused();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       41:+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       42:+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   32,  43: /// @title Authorized minter contract for frxETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   33,  44: /// @notice Accepts user-supplied ETH and converts it to frxETH (submit()), and also optionally inline stakes it for sfrxETH (submitAndDeposit())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   34,  45: /** @dev Has permission to mint frxETH.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -76,7 +87,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   76,  87:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   77,  88:         // Deposit the frxETH and give the generated sfrxETH to the final recipient</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   78,  89:         uint256 sfrxeth_recieved = sfrxETHToken.deposit(msg.value, recipient);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  79     :-        require(sfrxeth_recieved &gt; 0, &#39;No sfrxETH was returned&#39;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       90:+        if(sfrxeth_recieved == 0) revert NoSfrxETHReturned();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   80,  91:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   81,  92:         return sfrxeth_recieved;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   82,  93:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -84,8 +95,8 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   84,  95:     /// @notice Mint frxETH to the recipient using sender&#39;s funds. Internal portion</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   85,  96:     function _submit(address recipient) internal nonReentrant {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   86,  97:         // Initial pause and value checks</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  87     :-        require(!submitPaused, &quot;Submit is paused&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  88     :-        require(msg.value != 0, &quot;Cannot submit 0&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       98:+        if(submitPaused) revert SubmitIsPaused();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       99:+        if(msg.value == 0) revert CannotSubmitZero();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   89, 100:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   90, 101:         // Give the sender frxETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   91, 102:         frxETHToken.minter_mint(recipient, msg.value);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -119,11 +130,11 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  119, 130:     /// @dev Usually a bot will call this periodically</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  120, 131:     function depositEther() external nonReentrant {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  121, 132:         // Initial pause check</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 122     :-        require(!depositEtherPaused, &quot;Depositing ETH is paused&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      133:+        if(depositEtherPaused) revert DepositPaused();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  123, 134:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  124, 135:         // See how many deposits can be made. Truncation desired.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  125, 136:         uint256 numDeposits = (address(this).balance - currentWithheldETH) / DEPOSIT_SIZE;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 126     :-        require(numDeposits &gt; 0, &quot;Not enough ETH in contract&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      137:+        if(numDeposits == 0) revert NotEnoughETH();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  127, 138:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  128, 139:         // Give each deposit chunk to an empty validator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  129, 140:         for (uint256 i = 0; i &lt; numDeposits; ++i) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -137,7 +148,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  137, 148:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  138, 149:             // Make sure the validator hasn&#39;t been deposited into already, to prevent stranding an extra 32 eth</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  139, 150:             // until withdrawals are allowed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 140     :-            require(!activeValidators[pubKey], &quot;Validator already has 32 ETH&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      151:+            if(activeValidators[pubKey]) revert AlreadyDeposited();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  141, 152:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  142, 153:             // Deposit the ether in the ETH 2.0 deposit contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  143, 154:             depositContract.deposit{value: DEPOSIT_SIZE}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -164,11 +175,11 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  164, 175:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  165, 176:     /// @notice Give the withheld ETH to the &quot;to&quot; address</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  166, 177:     function moveWithheldETH(address payable to, uint256 amount) external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 167     :-        require(amount &lt;= currentWithheldETH, &quot;Not enough withheld ETH in contract&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      178:+        if(amount &gt; currentWithheldETH) revert NotEnoughWithgeld();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  168, 179:         currentWithheldETH -= amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  169, 180:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  170, 181:         (bool success,) = payable(to).call{ value: amount }(&quot;&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 171     :-        require(success, &quot;Invalid transfer&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      182:+        if(!success) revert InvalidTransfer();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  172, 183:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  173, 184:         emit WithheldETHMoved(to, amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  174, 185:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -190,14 +201,14 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  190, 201:     /// @notice For emergencies if something gets stuck</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  191, 202:     function recoverEther(uint256 amount) external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  192, 203:         (bool success,) = address(owner).call{ value: amount }(&quot;&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 193     :-        require(success, &quot;Invalid transfer&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      204:+        if(!success) revert InvalidTransfer();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  194, 205:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  195, 206:         emit EmergencyEtherRecovered(amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  196, 207:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  197, 208:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  198, 209:     /// @notice For emergencies if someone accidentally sent some ERC20 tokens here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  199, 210:     function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 200     :-        require(IERC20(tokenAddress).transfer(owner, tokenAmount), &quot;recoverERC20: Transfer failed&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      211:+        if(!IERC20(tokenAddress).transfer(owner, tokenAmount)) revert InvalidTransferERC20();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  201, 212:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  202, 213:         emit EmergencyERC20Recovered(tokenAddress, tokenAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  203, 214:     }</span></span></span></code></pre>\n<h3 id=\"testfrxethmintertsol\" style=\"position:relative;\"><a href=\"#testfrxethmintertsol\" aria-label=\"testfrxethmintertsol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>test/frxETHMinter.t.sol</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/test/frxETHMinter.t.sol b/test/frxETHMinter.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index f4d6265..9529428 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/test/frxETHMinter.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/test/frxETHMinter.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -3,7 +3,7 @@ pragma solidity ^0.8.0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    3,   3:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    4,   4: import { Test } from &quot;forge-std/Test.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    5,   5: import { DepositContract } from &quot;../src/DepositContract.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-   6     :-import { frxETHMinter, OperatorRegistry } from &quot;../src/frxETHMinter.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        6:+import { frxETHMinter, OperatorRegistry, NotEnoughETH, SubmitIsPaused, DepositPaused, ValidatorStackEmpty } from &quot;../src/frxETHMinter.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    7,   7: import { frxETH } from &quot;../src/frxETH.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    8,   8: import { sfrxETH, ERC20 } from &quot;../src/sfrxETH.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    9,   9:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -223,7 +223,7 @@ contract frxETHMinterTest is Test {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  223, 223:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  224, 224:         // Try having the validator deposit.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  225, 225:         // Should fail due to lack of ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 226     :-        vm.expectRevert(&quot;Not enough ETH in contract&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      226:+        vm.expectRevert(NotEnoughETH.selector);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  227, 227:         minter.depositEther();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  228, 228:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  229, 229:         // Deposit last 1 ETH for frxETH, making the total 32.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -239,7 +239,7 @@ contract frxETHMinterTest is Test {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  239, 239:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  240, 240:         // Try having the validator deposit another 32 ETH.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  241, 241:         // Should fail due to lack of ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 242     :-        vm.expectRevert(&quot;Not enough ETH in contract&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      242:+        vm.expectRevert(NotEnoughETH.selector);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  243, 243:         minter.depositEther();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  244, 244:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  245, 245:         // Deposit 32 ETH for frxETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -247,14 +247,14 @@ contract frxETHMinterTest is Test {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  247, 247:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  248, 248:         // Try having the validator deposit another 32 ETH.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  249, 249:         // Should fail due to lack of a free validator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 250     :-        vm.expectRevert(&quot;Validator stack is empty&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      250:+        vm.expectRevert(ValidatorStackEmpty.selector);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  251, 251:         minter.depositEther();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  252, 252:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  253, 253:         // Pause submits</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  254, 254:         minter.togglePauseSubmits();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  255, 255:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  256, 256:         // Try submitting while paused (should fail)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 257     :-        vm.expectRevert(&quot;Submit is paused&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      257:+        vm.expectRevert(SubmitIsPaused.selector);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  258, 258:         minter.submit{ value: 1 ether }();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  259, 259:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  260, 260:         // Unpause submits</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -264,7 +264,7 @@ contract frxETHMinterTest is Test {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  264, 264:         minter.togglePauseDepositEther();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  265, 265:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  266, 266:         // Try submitting while paused (should fail)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 267     :-        vm.expectRevert(&quot;Depositing ETH is paused&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      267:+        vm.expectRevert(DepositPaused.selector);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  268, 268:         minter.depositEther();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  269, 269:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  270, 270:         // Unpause validator ETH deposits</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -303,7 +303,7 @@ contract frxETHMinterTest is Test {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  303, 303:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  304, 304:         // Try having the validator deposit.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  305, 305:         // Should fail due to lack of ETH because half of it was withheld</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 306     :-        vm.expectRevert(&quot;Not enough ETH in contract&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      306:+        vm.expectRevert(NotEnoughETH.selector);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  307, 307:         minter.depositEther();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  308, 308:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  309, 309:         // Deposit another 32 ETH for frxETH.</span></span></span></code></pre>\n<h3 id=\"testfrxethsfrxethcombotsol\" style=\"position:relative;\"><a href=\"#testfrxethsfrxethcombotsol\" aria-label=\"testfrxethsfrxethcombotsol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>test/frxETH<em>sfrxETH</em>combo.t.sol</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/test/frxETH_sfrxETH_combo.t.sol b/test/frxETH_sfrxETH_combo.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 5fd1612..be1236c 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/test/frxETH_sfrxETH_combo.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/test/frxETH_sfrxETH_combo.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -5,7 +5,7 @@ pragma solidity ^0.8.0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    5,   5: import { Test } from &quot;forge-std/Test.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    6,   6: import { frxETH } from &quot;../src/frxETH.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    7,   7: import { sfrxETH, ERC20 } from &quot;../src/sfrxETH.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-   8     :-import { frxETHMinter } from &quot;../src/frxETHMinter.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        8:+import { frxETHMinter, NotEnoughETH, CannotSubmitZero } from &quot;../src/frxETHMinter.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    9,   9: import { SigUtils } from &quot;../src/Utils/SigUtils.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   10,  10:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   11,  11: contract xERC4626Test is Test {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -822,7 +822,7 @@ contract xERC4626Test is Test {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  822, 822:         if (transfer_amount &gt; 0) require(owner.balance &gt; 0, &quot;No ether. Fork mainnet or get some.&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  823, 823:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  824, 824:         vm.prank(owner);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 825     :-        if (transfer_amount == 0) vm.expectRevert(&quot;Cannot submit 0&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      825:+        if (transfer_amount == 0) vm.expectRevert(CannotSubmitZero.selector);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  826, 826:         frxETHMinterContract.submitAndDeposit{ value: transfer_amount }(owner);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  827, 827:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  828, 828:         assertEq(frxETHtoken.balanceOf(owner), 0); // From original mint</span></span></span></code></pre>\n<hr>\n<h2 id=\"g-04-using-bools-for-storage-incurs-overhead-3-instances\" style=\"position:relative;\"><a href=\"#g-04-using-bools-for-storage-incurs-overhead-3-instances\" aria-label=\"g 04 using bools for storage incurs overhead 3 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] Using bools for storage incurs overhead (3 instances)</h2>\n<ul>\n<li>Deployment. Gas Saved: <strong>20 221</strong></li>\n<li>Minumal Method Call. Gas Saved: <strong>266</strong></li>\n<li>Average Method Call. Gas Saved: <strong>-990</strong></li>\n<li>Maximum Method Call. Gas Saved: <strong>-5 979</strong></li>\n</ul>\n<!---->\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">// Booleans are more expensive than uint256 or any type that takes up a full</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// word because each write operation emits an extra SLOAD to first read the</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// slot&#39;s contents, replace the bits taken up by the boolean, and then write</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// back. This is the compiler&#39;s defense against contract upgrades and</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// pointer aliasing, and it cannot be disabled.</span></span></code></pre>\n<p>Use uint256(1) and uint256(2) for true/false to avoid a Gwarmaccess (100 gas) for the extra SLOAD, and to avoid Gsset (20000 gas) when changing from ‘false’ to ‘true’, after having been ‘true’ in the past</p>\n<h3 id=\"srcerc20erc20permitpermissionedmintsol20\" style=\"position:relative;\"><a href=\"#srcerc20erc20permitpermissionedmintsol20\" aria-label=\"srcerc20erc20permitpermissionedmintsol20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/ERC20/ERC20PermitPermissionedMint.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L20\">20</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/ERC20/ERC20PermitPermissionedMint.sol b/src/ERC20/ERC20PermitPermissionedMint.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 3bed26d..a5d0aab 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/ERC20/ERC20PermitPermissionedMint.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/ERC20/ERC20PermitPermissionedMint.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -17,7 +17,7 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   17,  17:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   18,  18:     // Minters</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   19,  19:     address[] public minters_array; // Allowed to mint</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  20     :-    mapping(address =&gt; bool) public minters; // Mapping is also used for faster verification</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       20:+    mapping(address =&gt; uint256) public minters; // Mapping is also used for faster verification</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   21,  21:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   22,  22:     /* ========== CONSTRUCTOR ========== */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   23,  23:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -43,7 +43,7 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   43,  43:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   44,  44:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   45,  45:     modifier onlyMinters() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  46     :-       require(minters[msg.sender] == true, &quot;Only minters&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       46:+       require(minters[msg.sender] == 1, &quot;Only minters&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   47,  47:         _;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   48,  48:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   49,  49:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -65,8 +65,8 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   65,  65:     function addMinter(address minter_address) public onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   66,  66:         require(minter_address != address(0), &quot;Zero address detected&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   67,  67:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  68     :-        require(minters[minter_address] == false, &quot;Address already exists&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  69     :-        minters[minter_address] = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       68:+        require(minters[minter_address] == 0, &quot;Address already exists&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       69:+        minters[minter_address] = 1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   70,  70:         minters_array.push(minter_address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   71,  71:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   72,  72:         emit MinterAdded(minter_address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -75,7 +75,7 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   75,  75:     // Remove a minter</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   76,  76:     function removeMinter(address minter_address) public onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   77,  77:         require(minter_address != address(0), &quot;Zero address detected&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  78     :-        require(minters[minter_address] == true, &quot;Address nonexistant&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       78:+        require(minters[minter_address] == 1, &quot;Address nonexistant&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   79,  79:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   80,  80:         // Delete from the mapping</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   81,  81:         delete minters[minter_address];</span></span></span></code></pre>\n<h3 id=\"srcfrxethmintersol43-49-50\" style=\"position:relative;\"><a href=\"#srcfrxethmintersol43-49-50\" aria-label=\"srcfrxethmintersol43 49 50 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/frxETHMinter.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L43\">43</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L49-L50\">49-50</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/frxETHMinter.sol b/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 4565883..3036cea 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -40,14 +40,14 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   40,  40:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   41,  41:     uint256 public withholdRatio; // What we keep and don&#39;t deposit whenever someone submit()&#39;s ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   42,  42:     uint256 public currentWithheldETH; // Needed for internal tracking</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  43     :-    mapping(bytes =&gt; bool) public activeValidators; // Tracks validators (via their pubkeys) that already have 32 ETH in them</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       43:+    mapping(bytes =&gt; uint256) public activeValidators; // Tracks validators (via their pubkeys) that already have 32 ETH in them</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   44,  44:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   45,  45:     IDepositContract public immutable depositContract; // ETH 2.0 deposit contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   46,  46:     frxETH public immutable frxETHToken;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   47,  47:     IsfrxETH public immutable sfrxETHToken;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   48,  48:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  49     :-    bool public submitPaused;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  50     :-    bool public depositEtherPaused;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       49:+    uint256 public submitPaused;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       50:+    uint256 public depositEtherPaused;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   51,  51:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   52,  52:     constructor(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   53,  53:         address depositContractAddress,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -84,7 +84,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   84,  84:     /// @notice Mint frxETH to the recipient using sender&#39;s funds. Internal portion</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   85,  85:     function _submit(address recipient) internal nonReentrant {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   86,  86:         // Initial pause and value checks</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  87     :-        require(!submitPaused, &quot;Submit is paused&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       87:+        require(0==submitPaused, &quot;Submit is paused&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   88,  88:         require(msg.value != 0, &quot;Cannot submit 0&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   89,  89:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   90,  90:         // Give the sender frxETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -119,7 +119,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  119, 119:     /// @dev Usually a bot will call this periodically</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  120, 120:     function depositEther() external nonReentrant {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  121, 121:         // Initial pause check</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 122     :-        require(!depositEtherPaused, &quot;Depositing ETH is paused&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      122:+        require(0==depositEtherPaused, &quot;Depositing ETH is paused&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  123, 123:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  124, 124:         // See how many deposits can be made. Truncation desired.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  125, 125:         uint256 numDeposits = (address(this).balance - currentWithheldETH) / DEPOSIT_SIZE;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -137,7 +137,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  137, 137:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  138, 138:             // Make sure the validator hasn&#39;t been deposited into already, to prevent stranding an extra 32 eth</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  139, 139:             // until withdrawals are allowed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 140     :-            require(!activeValidators[pubKey], &quot;Validator already has 32 ETH&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      140:+            require(0==activeValidators[pubKey], &quot;Validator already has 32 ETH&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  141, 141:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  142, 142:             // Deposit the ether in the ETH 2.0 deposit contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  143, 143:             depositContract.deposit{value: DEPOSIT_SIZE}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -148,7 +148,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  148, 148:             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  149, 149:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  150, 150:             // Set the validator as used so it won&#39;t get an extra 32 ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 151     :-            activeValidators[pubKey] = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      151:+            activeValidators[pubKey] = 1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  152, 152:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  153, 153:             emit DepositSent(pubKey, withdrawalCredential);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  154, 154:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -175,14 +175,14 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  175, 175:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  176, 176:     /// @notice Toggle allowing submites</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  177, 177:     function togglePauseSubmits() external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 178     :-        submitPaused = !submitPaused;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      178:+        submitPaused = submitPaused==1?0:1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  179, 179:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  180, 180:         emit SubmitPaused(submitPaused);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  181, 181:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  182, 182:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  183, 183:     /// @notice Toggle allowing depositing ETH to validators</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  184, 184:     function togglePauseDepositEther() external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 185     :-        depositEtherPaused = !depositEtherPaused;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      185:+        depositEtherPaused = depositEtherPaused==1?0:1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  186, 186:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  187, 187:         emit DepositEtherPaused(depositEtherPaused);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  188, 188:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -205,9 +205,9 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  205, 205:     event EmergencyEtherRecovered(uint256 amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  206, 206:     event EmergencyERC20Recovered(address tokenAddress, uint256 tokenAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  207, 207:     event ETHSubmitted(address indexed sender, address indexed recipient, uint256 sent_amount, uint256 withheld_amt);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 208     :-    event DepositEtherPaused(bool new_status);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      208:+    event DepositEtherPaused(uint256 new_status);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  209, 209:     event DepositSent(bytes indexed pubKey, bytes withdrawalCredential);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 210     :-    event SubmitPaused(bool new_status);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      210:+    event SubmitPaused(uint256 new_status);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  211, 211:     event WithheldETHMoved(address indexed to, uint256 amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  212, 212:     event WithholdRatioSet(uint256 newRatio);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  213, 213: }</span></span></span></code></pre>\n<hr>\n<h2 id=\"g-05-unchecking-arithmetics-operations-that-cant-underflowoverflow-7-instances\" style=\"position:relative;\"><a href=\"#g-05-unchecking-arithmetics-operations-that-cant-underflowoverflow-7-instances\" aria-label=\"g 05 unchecking arithmetics operations that cant underflowoverflow 7 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Unchecking arithmetics operations that can’t underflow/overflow (7 instances)</h2>\n<ul>\n<li>Deployment. Gas Saved: <strong>18 621</strong></li>\n<li>Minumal Method Call. Gas Saved: <strong>227</strong></li>\n<li>Average Method Call. Gas Saved: <strong>503</strong></li>\n<li>Maximum Method Call. Gas Saved: <strong>829</strong></li>\n</ul>\n<p>Solidity version 0.8+ comes with implicit overflow and underflow checks on unsigned integers. When an overflow or an underflow isn’t possible (as an example, when a comparison is made before the arithmetic operation), some gas can be saved by using an unchecked block: <a href=\"https://docs.soliditylang.org/en/v0.8.10/control-structures.html#checked-or-unchecked-arithmetic\">https://docs.soliditylang.org/en/v0.8.10/control-structures.html#checked-or-unchecked-arithmetic</a></p>\n<h3 id=\"srcerc20erc20permitpermissionedmintsol84\" style=\"position:relative;\"><a href=\"#srcerc20erc20permitpermissionedmintsol84\" aria-label=\"srcerc20erc20permitpermissionedmintsol84 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/ERC20/ERC20PermitPermissionedMint.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L84\">84</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/ERC20/ERC20PermitPermissionedMint.sol b/src/ERC20/ERC20PermitPermissionedMint.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 3bed26d..25010cb 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/ERC20/ERC20PermitPermissionedMint.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/ERC20/ERC20PermitPermissionedMint.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -81,11 +81,14 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   81,  81:         delete minters[minter_address];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   82,  82:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   83,  83:         // &#39;Delete&#39; from the array by setting the address to 0x0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  84     :-        for (uint i = 0; i &lt; minters_array.length; i++){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       84:+        for (uint i = 0; i &lt; minters_array.length;){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   85,  85:             if (minters_array[i] == minter_address) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   86,  86:                 minters_array[i] = address(0); // This will leave a null in the array and keep the indices the same</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   87,  87:                 break;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   88,  88:             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       89:+            unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       90:+                ++i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       91:+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   89,  92:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   90,  93:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   91,  94:         emit MinterRemoved(minter_address);</span></span></span></code></pre>\n<h3 id=\"srcoperatorregistrysol63-84-114\" style=\"position:relative;\"><a href=\"#srcoperatorregistrysol63-84-114\" aria-label=\"srcoperatorregistrysol63 84 114 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/OperatorRegistry.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L63\">63</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L84\">84</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L114\">114</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/OperatorRegistry.sol b/src/OperatorRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index f81094c..aef4e17 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/OperatorRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/OperatorRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -60,8 +60,11 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   60,  60:         Reason we don&#39;t do that here is for gas */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   61,  61:     function addValidators(Validator[] calldata validatorArray) external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   62,  62:         uint arrayLength = validatorArray.length;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  63     :-        for (uint256 i = 0; i &lt; arrayLength; ++i) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       63:+        for (uint256 i = 0; i &lt; arrayLength;) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   64,  64:             addValidator(validatorArray[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       65:+            unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       66:+                 ++i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       67:+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   65,  68:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   66,  69:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   67,  70:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -81,8 +84,11 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   81,  84:     /// @notice Remove validators from the end of the validators array, in case they were added in error</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   82,  85:     function popValidators(uint256 times) public onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   83,  86:         // Loop through and remove validator entries at the end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  84     :-        for (uint256 i = 0; i &lt; times; ++i) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       87:+        for (uint256 i = 0; i &lt; times;) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   85,  88:             validators.pop();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       89:+            unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       90:+                 ++i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       91:+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   86,  92:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   87,  93:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   88,  94:         emit ValidatorsPopped(times);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -111,10 +117,13 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  111, 117:             delete validators;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  112, 118:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  113, 119:             // Fill the new validators array with all except the value to remove</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 114     :-            for (uint256 i = 0; i &lt; original_validators.length; ++i) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      120:+            for (uint256 i = 0; i &lt; original_validators.length;) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  115, 121:                 if (i != remove_idx) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  116, 122:                     validators.push(original_validators[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  117, 123:                 }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      124:+                unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      125:+                     ++i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      126:+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  118, 127:             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  119, 128:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  120, 129:</span></span></span></code></pre>\n<h3 id=\"srcfrxethmintersol96-129\" style=\"position:relative;\"><a href=\"#srcfrxethmintersol96-129\" aria-label=\"srcfrxethmintersol96 129 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/frxETHMinter.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L96\">96</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L129\">129</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/frxETHMinter.sol b/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 4565883..4cee757 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -93,7 +93,9 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   93,  93:         // Track the amount of ETH that we are keeping</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   94,  94:         uint256 withheld_amt = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   95,  95:         if (withholdRatio != 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  96     :-            withheld_amt = (msg.value * withholdRatio) / RATIO_PRECISION;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       96:+            unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       97:+                withheld_amt = (msg.value * withholdRatio) / RATIO_PRECISION;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       98:+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   97,  99:             currentWithheldETH += withheld_amt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   98, 100:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   99, 101:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -126,7 +128,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  126, 128:         require(numDeposits &gt; 0, &quot;Not enough ETH in contract&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  127, 129:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  128, 130:         // Give each deposit chunk to an empty validator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 129     :-        for (uint256 i = 0; i &lt; numDeposits; ++i) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      131:+        for (uint256 i = 0; i &lt; numDeposits;) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  130, 132:             // Get validator information</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  131, 133:             (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  132, 134:                 bytes memory pubKey,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -151,6 +153,9 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  151, 153:             activeValidators[pubKey] = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  152, 154:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  153, 155:             emit DepositSent(pubKey, withdrawalCredential);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      156:+            unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      157:+                 ++i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      158:+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  154, 159:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  155, 160:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  156, 161:</span></span></span></code></pre>\n<hr>\n<h2 id=\"g-06-storage-pointer-to-a-structure-is-cheaper-than-copying-each-value-of-the-structure-into-memory-same-for-array-and-mapping-1-instance\" style=\"position:relative;\"><a href=\"#g-06-storage-pointer-to-a-structure-is-cheaper-than-copying-each-value-of-the-structure-into-memory-same-for-array-and-mapping-1-instance\" aria-label=\"g 06 storage pointer to a structure is cheaper than copying each value of the structure into memory same for array and mapping 1 instance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] <code>storage</code> pointer to a structure is cheaper than copying each value of the structure into <code>memory</code>, same for <code>array</code> and <code>mapping</code> (1 instance)</h2>\n<ul>\n<li>Deployment. Gas Saved: <strong>8 208</strong></li>\n<li>Minumal Method Call. Gas Saved: <strong>106</strong></li>\n<li>Average Method Call. Gas Saved: <strong>-970</strong></li>\n<li>Maximum Method Call. Gas Saved: <strong>2 487</strong></li>\n</ul>\n<h3 id=\"srcoperatorregistrysol161\" style=\"position:relative;\"><a href=\"#srcoperatorregistrysol161\" aria-label=\"srcoperatorregistrysol161 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/OperatorRegistry.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L161\">161</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/OperatorRegistry.sol b/src/OperatorRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index f81094c..b7b094d 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/OperatorRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/OperatorRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -158,7 +158,7 @@ contract OperatorRegistry is Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  158, 158:             bytes32 depositDataRoot</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  159, 159:         )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  160, 160:     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 161     :-        Validator memory v = validators[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      161:+        Validator storage v = validators[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  162, 162:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  163, 163:         // Return the validator&#39;s information</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  164, 164:         pubKey = v.pubKey;</span></span></span></code></pre>\n<hr>\n<h2 id=\"g-07-x--x--y-is-more-efficient-than-x--y-4-instances\" style=\"position:relative;\"><a href=\"#g-07-x--x--y-is-more-efficient-than-x--y-4-instances\" aria-label=\"g 07 x  x  y is more efficient than x  y 4 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] <code>x = x + y</code> is more efficient, than <code>x += y</code> (4 instances)</h2>\n<ul>\n<li>Deployment. Gas Saved: <strong>5 007</strong></li>\n<li>Minumal Method Call. Gas Saved: <strong>82</strong></li>\n<li>Average Method Call. Gas Saved: <strong>87</strong></li>\n<li>Maximum Method Call. Gas Saved: <strong>101</strong></li>\n</ul>\n<h3 id=\"srcfrxethmintersol97-168\" style=\"position:relative;\"><a href=\"#srcfrxethmintersol97-168\" aria-label=\"srcfrxethmintersol97 168 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/frxETHMinter.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L97\">97</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L168\">168</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/frxETHMinter.sol b/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 4565883..a591be9 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -94,7 +94,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   94,  94:         uint256 withheld_amt = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   95,  95:         if (withholdRatio != 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   96,  96:             withheld_amt = (msg.value * withholdRatio) / RATIO_PRECISION;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  97     :-            currentWithheldETH += withheld_amt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       97:+            currentWithheldETH = currentWithheldETH + withheld_amt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   98,  98:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   99,  99:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  100, 100:         emit ETHSubmitted(msg.sender, recipient, msg.value, withheld_amt);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -165,7 +165,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  165, 165:     /// @notice Give the withheld ETH to the &quot;to&quot; address</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  166, 166:     function moveWithheldETH(address payable to, uint256 amount) external onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  167, 167:         require(amount &lt;= currentWithheldETH, &quot;Not enough withheld ETH in contract&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 168     :-        currentWithheldETH -= amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      168:+        currentWithheldETH = currentWithheldETH - amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  169, 169:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  170, 170:         (bool success,) = payable(to).call{ value: amount }(&quot;&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  171, 171:         require(success, &quot;Invalid transfer&quot;);</span></span></span></code></pre>\n<h3 id=\"srcxerc4626sol67-72\" style=\"position:relative;\"><a href=\"#srcxerc4626sol67-72\" aria-label=\"srcxerc4626sol67 72 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/xERC4626.sol:<a href=\"https://github.com/corddry/ERC4626/blob/643cd044fac34bcbf64e1c3790a5126fec0dbec1/src/xERC4626.sol#L67\">67</a>, <a href=\"https://github.com/corddry/ERC4626/blob/643cd044fac34bcbf64e1c3790a5126fec0dbec1/src/xERC4626.sol#L72\">72</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/xERC4626.sol b/src/xERC4626.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index a8a4726..dea5982 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/xERC4626.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/xERC4626.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -64,12 +64,12 @@ abstract contract xERC4626 is IxERC4626, ERC4626 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   64,  64:     // Update storedTotalAssets on withdraw/redeem</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   65,  65:     function beforeWithdraw(uint256 amount, uint256 shares) internal virtual override {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   66,  66:         super.beforeWithdraw(amount, shares);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  67     :-        storedTotalAssets -= amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       67:+        storedTotalAssets = storedTotalAssets - amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   68,  68:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   69,  69:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   70,  70:     // Update storedTotalAssets on deposit/mint</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   71,  71:     function afterDeposit(uint256 amount, uint256 shares) internal virtual override {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  72     :-        storedTotalAssets += amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       72:+        storedTotalAssets = storedTotalAssets + amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   73,  73:         super.afterDeposit(amount, shares);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   74,  74:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   75,  75:</span></span></span></code></pre>\n<hr>\n<h2 id=\"g-08-it-costs-more-gas-to-initialize-non-constantnon-immutable-variables-to-zero-than-to-let-the-default-of-zero-be-applied-2-instances\" style=\"position:relative;\"><a href=\"#g-08-it-costs-more-gas-to-initialize-non-constantnon-immutable-variables-to-zero-than-to-let-the-default-of-zero-be-applied-2-instances\" aria-label=\"g 08 it costs more gas to initialize non constantnon immutable variables to zero than to let the default of zero be applied 2 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-08] It costs more gas to initialize non-constant/non-immutable variables to zero than to let the default of zero be applied (2 instances)</h2>\n<ul>\n<li>Deployment. Gas Saved: <strong>4 415</strong></li>\n<li>Minumal Method Call. Gas Saved: <strong>0</strong></li>\n<li>Average Method Call. Gas Saved: <strong>0</strong></li>\n<li>Maximum Method Call. Gas Saved: <strong>0</strong></li>\n</ul>\n<p>If a variable is not set/initialized, it is assumed to have the default value (0 for uint, false for bool, address(0) for address…). Explicitly initializing it with its default value is an anti-pattern and wastes gas.</p>\n<h3 id=\"srcfrxethmintersol63-64\" style=\"position:relative;\"><a href=\"#srcfrxethmintersol63-64\" aria-label=\"srcfrxethmintersol63 64 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/frxETHMinter.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L63-L64\">63-64</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/frxETHMinter.sol b/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 4565883..b0f66a8 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -60,8 +60,6 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   60,  60:         depositContract = IDepositContract(depositContractAddress);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   61,  61:         frxETHToken = frxETH(frxETHAddress);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   62,  62:         sfrxETHToken = IsfrxETH(sfrxETHAddress);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  63     :-        withholdRatio = 0; // No ETH is withheld initially</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  64     :-        currentWithheldETH = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   65,  63:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   66,  64:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   67,  65:     /// @notice Mint frxETH and deposit it to receive sfrxETH in one transaction</span></span></span></code></pre>\n<hr>\n<h2 id=\"g-09-dont-compare-boolean-expressions-to-boolean-literals-3-instances\" style=\"position:relative;\"><a href=\"#g-09-dont-compare-boolean-expressions-to-boolean-literals-3-instances\" aria-label=\"g 09 dont compare boolean expressions to boolean literals 3 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-09] Don’t compare boolean expressions to boolean literals (3 instances)</h2>\n<ul>\n<li>Deployment. Gas Saved: <strong>3 006</strong></li>\n<li>Minumal Method Call. Gas Saved: <strong>43</strong></li>\n<li>Average Method Call. Gas Saved: <strong>-477</strong></li>\n<li>Maximum Method Call. Gas Saved: <strong>55</strong></li>\n</ul>\n<h3 id=\"srcerc20erc20permitpermissionedmintsol46-68-78\" style=\"position:relative;\"><a href=\"#srcerc20erc20permitpermissionedmintsol46-68-78\" aria-label=\"srcerc20erc20permitpermissionedmintsol46 68 78 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/ERC20/ERC20PermitPermissionedMint.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L46\">46</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L68\">68</a>, <a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L78\">78</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/ERC20/ERC20PermitPermissionedMint.sol b/src/ERC20/ERC20PermitPermissionedMint.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 3bed26d..860d2c4 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/ERC20/ERC20PermitPermissionedMint.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/ERC20/ERC20PermitPermissionedMint.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -43,7 +43,7 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   43,  43:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   44,  44:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   45,  45:     modifier onlyMinters() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  46     :-       require(minters[msg.sender] == true, &quot;Only minters&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       46:+       require(minters[msg.sender], &quot;Only minters&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   47,  47:         _;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   48,  48:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   49,  49:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -65,7 +65,7 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   65,  65:     function addMinter(address minter_address) public onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   66,  66:         require(minter_address != address(0), &quot;Zero address detected&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   67,  67:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  68     :-        require(minters[minter_address] == false, &quot;Address already exists&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       68:+        require(!minters[minter_address], &quot;Address already exists&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   69,  69:         minters[minter_address] = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   70,  70:         minters_array.push(minter_address);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   71,  71:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -75,7 +75,7 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   75,  75:     // Remove a minter</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   76,  76:     function removeMinter(address minter_address) public onlyByOwnGov {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   77,  77:         require(minter_address != address(0), &quot;Zero address detected&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  78     :-        require(minters[minter_address] == true, &quot;Address nonexistant&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       78:+        require(minters[minter_address], &quot;Address nonexistant&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   79,  79:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   80,  80:         // Delete from the mapping</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   81,  81:         delete minters[minter_address];</span></span></span></code></pre>\n<hr>\n<h2 id=\"g-10-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage-1-instances\" style=\"position:relative;\"><a href=\"#g-10-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage-1-instances\" aria-label=\"g 10 state variables should be cached in stack variables rather than re reading them from storage 1 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-10] State variables should be cached in stack variables rather than re-reading them from storage (1 instances)</h2>\n<ul>\n<li>Deployment. Gas Saved: <strong>400</strong></li>\n<li>Minumal Method Call. Gas Saved: <strong>-21</strong></li>\n<li>Average Method Call. Gas Saved: <strong>511</strong></li>\n<li>Maximum Method Call. Gas Saved: <strong>4 839</strong></li>\n</ul>\n<h3 id=\"srcfrxethmintersol95-96\" style=\"position:relative;\"><a href=\"#srcfrxethmintersol95-96\" aria-label=\"srcfrxethmintersol95 96 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src/frxETHMinter.sol:<a href=\"https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L95-L96\">95-96</a></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/frxETHMinter.sol b/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 4565883..802e94b 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/frxETHMinter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -92,8 +92,9 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   92,  92:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   93,  93:         // Track the amount of ETH that we are keeping</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   94,  94:         uint256 withheld_amt = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  95     :-        if (withholdRatio != 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  96     :-            withheld_amt = (msg.value * withholdRatio) / RATIO_PRECISION;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       95:+        uint256 _withholdRatio;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       96:+        if ((_withholdRatio = withholdRatio) != 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       97:+            withheld_amt = (msg.value * _withholdRatio) / RATIO_PRECISION;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   97,  98:             currentWithheldETH += withheld_amt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   98,  99:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   99, 100:</span></span></span></code></pre>\n<hr>\n<h2 id=\"overall-gas-savings\" style=\"position:relative;\"><a href=\"#overall-gas-savings\" aria-label=\"overall gas savings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overall gas savings</h2>\n<ul>\n<li>Deployment. Gas Saved: <strong>419 688</strong></li>\n<li>Minumal Method Call. Gas Saved: <strong>5 474</strong></li>\n<li>Average Method Call. Gas Saved: <strong>270 705</strong></li>\n<li>Maximum Method Call. Gas Saved: <strong>539 594</strong></li>\n</ul>\n<p>The result of merging all optimizations</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/original.txt b/foundry.txt</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 83cd313..4a4aaa0 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/original.txt</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/foundry.txt</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -3,13 +3,13 @@</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ╞════════════════════════════════╪═════════════════╪═══════╪════════╪═══════╪═════════╡</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ Deployment Cost                ┆ Deployment Size ┆       ┆        ┆       ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ 1439975                        ┆ 7889            ┆       ┆        ┆       ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ 1353480                        ┆ 7457            ┆       ┆        ┆       ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ Function Name                  ┆ min             ┆ avg   ┆ median ┆ max   ┆ # calls │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ DOMAIN_SEPARATOR               ┆ 365             ┆ 365   ┆ 365    ┆ 365   ┆ 30      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ addMinter                      ┆ 46593           ┆ 59107 ┆ 68493  ┆ 68493 ┆ 70      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ addMinter                      ┆ 46508           ┆ 59022 ┆ 68408  ┆ 68408 ┆ 70      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ allowance                      ┆ 826             ┆ 1048  ┆ 826    ┆ 2826  ┆ 9       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -19,7 +19,7 @@</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ decimals                       ┆ 289             ┆ 289   ┆ 289    ┆ 289   ┆ 40      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ minter_mint                    ┆ 4906            ┆ 37627 ┆ 50706  ┆ 50706 ┆ 37      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ minter_mint                    ┆ 4918            ┆ 37639 ┆ 50718  ┆ 50718 ┆ 37      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ nonces                         ┆ 661             ┆ 1751  ┆ 2661   ┆ 2661  ┆ 11      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -45,45 +45,45 @@</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ╞════════════════════════════════════════════╪═════════════════╪════════╪════════╪════════╪═════════╡</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ Deployment Cost                            ┆ Deployment Size ┆        ┆        ┆        ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ 2575261                                    ┆ 13642           ┆        ┆        ┆        ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ 2242068                                    ┆ 11990           ┆        ┆        ┆        ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌</span></span></span></code></pre>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-2\">High Risk Findings (2)</a></p>\n<ul>\n<li><a href=\"#h-01-wrong-accounting-logic-when-syncrewards-is-called-within-beforewithdraw-makes-withdrawals-impossible\">[H-01] Wrong accounting logic when syncRewards() is called within beforeWithdraw makes withdrawals impossible</a></li>\n<li><a href=\"#h-02-frontrunning-by-malicious-validator\">[H-02] Frontrunning by malicious validator</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-10\">Medium Risk Findings (10)</a></p>\n<ul>\n<li><a href=\"#m-01-centralization-risk-admin-have-privileges-admin-can-set-address-to-mint-any-amount-of-frxeth-can-set-any-address-as-validator-and-change-important-state-in-frxethminter-and-withdraw-fund-from-frcethminter-\">[M-01] Centralization risk: admin have privileges: admin can set address to mint any amount of frxETH, can set any address as validator, and change important state in frxETHMinter and withdraw fund from frcETHMinter </a></li>\n<li><a href=\"#m-02-rewards-delay-release-could-cause-yields-steal-and-loss\">[M-02] Rewards delay release could cause yields steal and loss</a></li>\n<li><a href=\"#m-03-frxeth-can-be-depegged-due-to-eth-staking-balance-slashing-\">[M-03] frxETH can be depegged due to ETH staking balance slashing </a></li>\n<li><a href=\"#m-04-removevalidator-and-removeminter-may-fail-due-to-exceeding-gas-limit\">[M-04] removeValidator() and removeMinter() may fail due to exceeding gas limit</a></li>\n<li><a href=\"#m-05-frxethminterdepositether-may-run-out-of-gas-leading-to-lost-eth\">[M-05] frxETHMinter.depositEther may run out of gas, leading to lost ETH</a></li>\n<li><a href=\"#m-06-frxethminter-non-conforming-erc20-tokens-not-recoverable-\">[M-06] frxETHMinter: Non-conforming ERC20 tokens not recoverable </a></li>\n<li><a href=\"#m-07-getnextvalidator-error-could-temporarily-make-depositether-inoperable-\">[M-07] <code>getNextValidator()</code> error could temporarily make <code>depositEther()</code> inoperable </a></li>\n<li><a href=\"#m-08-withheld-eth-shoud-not-be-sent-back-to-the-frxethminter-contract-itself\">[M-08] Withheld ETH shoud not be sent back to the frxETHMinter contract itself</a></li>\n<li><a href=\"#m-09-recoverether-not-updating-currentwithheldeth-breaks-calculation-of-withheld-amount-for-further-deposits\">[M-09] <code>recoverEther</code> not updating <code>currentWithheldETH</code> breaks calculation of withheld amount for further deposits</a></li>\n<li><a href=\"#m-10-sfrxeth-the-volatile-result-of-previewmint-may-prevent-mintwithsignature-from-working\">[M-10] sfrxETH: The volatile result of previewMint() may prevent mintWithSignature from working</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#low-risk-issues\">Low Risk Issues</a></li>\n<li><a href=\"#l-01-draft-openzeppelin-dependencies\">L-01 Draft OpenZeppelin Dependencies</a></li>\n<li><a href=\"#l-02-dont-use-owner-and-timelock\">L-02 Don’t use <code>owner</code> and <code>timelock</code></a></li>\n<li><a href=\"#non-critical-issues\">Non-Critical Issues</a></li>\n<li><a href=\"#n-01-unused-imports\">N-01 Unused imports</a></li>\n<li><a href=\"#n02-non-libraryinterface-files-should-use-fixed-compiler-versions-not-floating-ones\">N‑02 Non-library/interface files should use fixed compiler versions, not floating ones</a></li>\n<li><a href=\"#n03-lint\">N‑03 Lint</a></li>\n<li><a href=\"#n04-event-is-missing-indexed-fields\">N‑04 Event is missing <code>indexed</code> fields</a></li>\n<li><a href=\"#n-05-functions-parameters-and-variables-in-snake-case\">N-05 Functions, parameters and variables in snake case</a></li>\n<li><a href=\"#n-06-wrong-event-parameter-name\">N-06 Wrong <code>event</code> parameter name</a></li>\n<li><a href=\"#n-07-simplify-depositwithsignature-function\">N-07 Simplify <code>depositWithSignature</code> function</a></li>\n<li><a href=\"#n-08-missing-zero-address-checks\">N-08 Missing zero address checks</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#gas-optimizations-summary\">Gas Optimizations Summary</a></li>\n<li><a href=\"#g-01-deleting-an-array-element-can-use-a-more-efficient-algorithm-1-instance\">G-01 Deleting an array element can use a more efficient algorithm (1 instance)</a></li>\n<li><a href=\"#g-02-use-function-instead-of-modifiers-4-instances\">G-02 Use function instead of modifiers (4 instances)</a></li>\n<li><a href=\"#g-03-use-custom-errors-rather-than-revertrequire-strings-to-save-gas-21-instances\">G-03 Use custom errors rather than revert()/require() strings to save gas (21 instances)</a></li>\n<li><a href=\"#g-04-using-bools-for-storage-incurs-overhead-3-instances\">G-04 Using bools for storage incurs overhead (3 instances)</a></li>\n<li><a href=\"#g-05-unchecking-arithmetics-operations-that-cant-underflowoverflow-7-instances\">G-05 Unchecking arithmetics operations that can’t underflow/overflow (7 instances)</a></li>\n<li><a href=\"#g-06-storage-pointer-to-a-structure-is-cheaper-than-copying-each-value-of-the-structure-into-memory-same-for-array-and-mapping-1-instance\">G-06 <code>storage</code> pointer to a structure is cheaper than copying each value of the structure into <code>memory</code>, same for <code>array</code> and <code>mapping</code> (1 instance)</a></li>\n<li><a href=\"#g-07-x--x--y-is-more-efficient-than-x--y-4-instances\">G-07 <code>x = x + y</code> is more efficient, than <code>x += y</code> (4 instances)</a></li>\n<li><a href=\"#g-08-it-costs-more-gas-to-initialize-non-constantnon-immutable-variables-to-zero-than-to-let-the-default-of-zero-be-applied-2-instances\">G-08 It costs more gas to initialize non-constant/non-immutable variables to zero than to let the default of zero be applied (2 instances)</a></li>\n<li><a href=\"#g-09-dont-compare-boolean-expressions-to-boolean-literals-3-instances\">G-09 Don’t compare boolean expressions to boolean literals (3 instances)</a></li>\n<li><a href=\"#g-10-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage-1-instances\">G-10 State variables should be cached in stack variables rather than re-reading them from storage (1 instances)</a></li>\n<li><a href=\"#overall-gas-savings\">Overall gas savings</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>",
  "md": "\n# Overview\n\n## About C4\n\nCode4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.\n\nA C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.\n\nDuring the audit contest outlined in this document, C4 conducted an analysis of the Frax Ether Liquid Staking smart contract system written in Solidity. The audit contest took place between September 22—September 25 2022.\n\n## Wardens\n\n139 Wardens contributed reports to the Frax Ether Liquid Staking contest:\n\n  1. [parashar](https://twitter.com/ankitparashar)\n  1. \\_\\_141345\\_\\_\n  1. Lambda\n  1. [bin2chen](https://twitter.com/bin2chen)\n  1. Critical\n  1. [Chom](https://chom.dev)\n  1. ladboy233\n  1. [joestakey](https://twitter.com/JoeStakey)\n  1. ronnyx2017\n  1. rotcivegaf\n  1. ayeslick\n  1. rvierdiiev\n  1. [Trust](https://twitter.com/trust__90)\n  1. cccz\n  1. wagmi\n  1. [Respx](https://twitter.com/RespxR)\n  1. Bahurum\n  1. 0x1f8b\n  1. lukris02\n  1. V\\_B (Barichek and vlad\\_bochok)\n  1. datapunk\n  1. [Ch\\_301](https://twitter.com/0xch301)\n  1. [oyc\\_109](https://twitter.com/andyfeili)\n  1. IllIllI\n  1. 0x4non\n  1. pashov\n  1. [pfapostol](https://t.me/pfahard)\n  1. [bytera](https://twitter.com/_bytera)\n  1. [TomJ](https://mobile.twitter.com/tomj_bb)\n  1. rbserver\n  1. [0xNazgul](https://twitter.com/0xNazgul)\n  1. [0xSmartContract](https://twitter.com/0xSmartContract)\n  1. Bnke0x0\n  1. Rolezn\n  1. neko\\_nyaa\n  1. [gogo](https://www.linkedin.com/in/georgi-nikolaev-georgiev-978253219)\n  1. leosathya\n  1. ajtra\n  1. Soosh\n  1. KIntern\\_NA (TrungOre and duc)\n  1. brgltd\n  1. [Aymen0909](https://github.com/Aymen1001)\n  1. PaludoX0\n  1. [8olidity](https://twitter.com/8olidity)\n  1. peritoflores\n  1. CodingNameKiki\n  1. [Sm4rty](https://twitter.com/Sm4rty_)\n  1. [JC](https://twitter.com/sm4rtcontr4ct)\n  1. [rokinot](twitter.com/rokinot)\n  1. [seyni](https://twitter.com/seynixyz)\n  1. [c3phas](https://twitter.com/c3ph_)\n  1. ReyAdmirado\n  1. [csanuragjain](https://twitter.com/csanuragjain)\n  1. OptimismSec ([sseefried](http://seanseefried.org/blog) and [tofunmi](https://twitter.com/dediranTofunmi))\n  1. bobirichman\n  1. [Deivitto](https://twitter.com/Deivitto)\n  1. cryptostellar5\n  1. Diana\n  1. B2\n  1. [ret2basic](https://twitter.com/ret2basic)\n  1. delfin454000\n  1. RockingMiles (robee and pants)\n  1. Waze\n  1. tnevler\n  1. aysha\n  1. cryptphi\n  1. mics\n  1. [durianSausage](https://github.com/lyciumlee)\n  1. Triangle (caventa and DeviantArt)\n  1. [Funen](https://instagram.com/vanensurya)\n  1. karanctf\n  1. [natzuu](https://twitter.com/natzuu33)\n  1. 0x040\n  1. got\\_targ\n  1. slowmoses\n  1. sach1r0\n  1. asutorufos\n  1. millersplanet\n  1. jag\n  1. Tagir2003\n  1. 0x52\n  1. yixxas\n  1. 0xf15ers (remora and twojoy)\n  1. [a12jmx](https://twitter.com/a12jmx)\n  1. sikorico\n  1. JLevick\n  1. bbuddha\n  1. [yasir](https://www.linkedin.com/in/yasir-ansari/)\n  1. yongskiws\n  1. [obront](https://twitter.com/zachobront)\n  1. Yiko\n  1. Tointer\n  1. [exd0tpy](https://github.com/exd0tpy)\n  1. [bharg4v](https://twitter.com/Bharg4v)\n  1. [prasantgupta52](https://twitter.com/prasantgupta52)\n  1. 0x5rings\n  1. SnowMan\n  1. ch0bu\n  1. peanuts\n  1. [medikko](https://twitter.com/mehmeddukov)\n  1. [zishansami](https://zishansami102.github.io/)\n  1. [Rohan16](https://twitter.com/ROHANJH56009256)\n  1. erictee\n  1. d3e4\n  1. RaymondFam\n  1. 0xA5DF\n  1. [Tomio](https://twitter.com/meidhiwirara)\n  1. Amithuddar\n  1. Metatron\n  1. samruna\n  1. drdr\n  1. bulej93\n  1. [Satyam\\_Sharma](https://twitter/@Satyam33sharma)\n  1. [Ocean\\_Sky](https://twitter.com/bluenights004)\n  1. imare\n  1. JAGADESH\n  1. SooYa\n  1. Pheonix\n  1. [Fitraldys](https://twitter.com/fitraldys)\n  1. 0xsam\n  1. [fatherOfBlocks](https://twitter.com/father0fBl0cks)\n  1. [albincsergo](https://twitter.com/albincsergo)\n  1. beardofginger\n  1. Ben\n  1. emrekocak\n  1. [dharma09](https://twitter.com/im_Dharma09)\n  1. 0xmatt\n  1. 0xSky\n  1. [hansfriese](https://twitter.com/hansfriese)\n  1. m9800\n  1. [magu](https://twitter.com/magugumagu)\n  1. [pedroais](https://twitter.com/Pedroais2/)\n  1. [Ruhum](https://twitter.com/0xruhum)\n\nThis contest was judged by [0xean](https://github.com/0xean).\n\nFinal report assembled by [itsmetechjay](https://twitter.com/itsmetechjay).\n\n# Summary\n\nThe C4 analysis yielded an aggregated total of 12 unique vulnerabilities. Of these vulnerabilities, 2 received a risk rating in the category of HIGH severity and 10 received a risk rating in the category of MEDIUM severity.\n\nAdditionally, C4 analysis included 83 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 93 reports recommending gas optimizations.\n\nAll of the issues presented here are linked back to their original finding.\n\n# Scope\n\nThe code under review can be found within the [C4 Frax Ether Liquid Staking contest repository](https://github.com/code-423n4/2022-09-frax), and is composed of 6 smart contracts written in the Solidity programming language and includes 413 lines of Solidity code.\n\n# Severity Criteria\n\nC4 assesses the severity of disclosed vulnerabilities according to a methodology based on [OWASP standards](https://owasp.org/www-community/OWASP_Risk_Rating_Methodology).\n\nVulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.\n\nHigh-level considerations for vulnerabilities span the following key areas when conducting assessments:\n\n- Malicious Input Handling\n- Escalation of privileges\n- Arithmetic\n- Gas use\n\nFurther information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on [the C4 website](https://code4rena.com).\n\n# High Risk Findings (2)\n## [[H-01] Wrong accounting logic when syncRewards() is called within beforeWithdraw makes withdrawals impossible](https://github.com/code-423n4/2022-09-frax-findings/issues/15)\n_Submitted by Lambda, also found by bin2chen and Critical_\n\n`sfrxETH.beforeWithdraw` first calls the `beforeWithdraw` of `xERC4626`, which decrements `storedTotalAssets` by the given amount. If the timestamp is greater than the `rewardsCycleEnd`, `syncRewards` is called. However, the problem is that the assets have not been transferred out yet, meaning `asset.balanceOf(address(this))` still has the old value. On the other hand, `storedTotalAssets` was already updated. Therefore, the following calculation will be inflated by the amount for which the withdrawal was requested:\n\n    uint256 nextRewards = asset.balanceOf(address(this)) - storedTotalAssets_ - lastRewardAmount_;\n\nThis has severe consequences:\n1. During the following reward period, `lastRewardAmount` is too high, which means that too many rewards are paid out to users who want to withdraw. A user could exploit this to steal the assets of other users.\n2. When `syncRewards()` is called the next time, it is possible that the `nextRewards` calculation underflows because `lastRewardAmount > asset.balanceOf(address(this))`. This is very bad because `syncRewards()` will be called in every withdrawal (after the `rewardsCycleEnd`) and none of them will succeed because of the underflow. Depositing more also does not help here, it just increases `asset.balanceOf(address(this))` and `storedTotalAssets` by the same amount, which does not eliminate the underflow.\n\nNote that this bug does not require a malicious user or a targeted attack to surface. It can (and probably will) happen in practice just by normal user interactions with the vault (which is for instance shown in the PoC).\n\n### Proof Of Concept\n\nConsider the following test:\n\n    function testTotalAssetsAfterWithdraw() public {        \n            uint128 deposit = 1 ether;\n            uint128 withdraw = 1 ether;\n            // Mint frxETH to this testing contract from nothing, for testing\n            mintTo(address(this), deposit);\n\n            // Generate some sfrxETH to this testing contract using frxETH\n            frxETHtoken.approve(address(sfrxETHtoken), deposit);\n            sfrxETHtoken.deposit(deposit, address(this));\n            require(sfrxETHtoken.totalAssets() == deposit);\n\n            vm.warp(block.timestamp + 1000);\n            // Withdraw frxETH (from sfrxETH) to this testing contract\n            sfrxETHtoken.withdraw(withdraw, address(this), address(this));\n            vm.warp(block.timestamp + 1000);\n            sfrxETHtoken.syncRewards();\n            require(sfrxETHtoken.totalAssets() == deposit - withdraw);\n        }\n\nThis is a normal user interaction where a user deposits into the vault, and makes a withdrawal some time later. However, at this point the `syncRewards()` within the `beforeWithdraw` is executed. Because of that, the documented accounting mistake happens and the next call (in fact every call that will be done in the future) to `syncRewards()` reverts with an underflow.\n\n### Recommended Mitigation Steps\n\nCall `syncRewards()` before decrementing `storedTotalAssets`, i.e.:\n\n    function beforeWithdraw(uint256 assets, uint256 shares) internal override {\n    \tif (block.timestamp >= rewardsCycleEnd) { syncRewards(); }\n    \tsuper.beforeWithdraw(assets, shares); // call xERC4626's beforeWithdraw AFTER\n    }\n\nThen, `asset.balanceOf(address(this))` and `storedTotalAssets` are still in sync within `syncRewards()`.\n\n**[FortisFortuna (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/15#issuecomment-1258266526):**\n > Does this only occur if all users try to withdraw at the exact same time? If so, this is a known bug by us and the risk would be low in a real-life deployment scenario. We can also let the users know about the ramping of the rewards.\n\n **[FortisFortuna (Frax) marked as duplicate](https://github.com/code-423n4/2022-09-frax-findings/issues/15)**\n\n**[Lambda (warden) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/15#issuecomment-1259916036):**\n > I do not think that this is a duplicate of [#311](https://github.com/code-423n4/2022-09-frax-findings/issues/311). #311 (and the other issues that are linked there) describe a recoverable issue where the withdrawal for the last user fails (which was listed as a known issue of xERC4626) until the cycle ends.\n> \n> The issue here that is described here and demonstrated in the PoC is a non-recoverable sfrxETH-specific issue (because sfrxETH potentially calls `syncRewards()` in the `beforeWithdraw` function) where withdrawals even fail after the cycle has ended. It also does not require all users to withdraw at the same time.\n\n**[FortisFortuna (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/15#issuecomment-1260012652):**\n > @Lambda What about [24](https://github.com/code-423n4/2022-09-frax-findings/issues/24) ?\n\n**[Lambda (warden) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/15#issuecomment-1260015183):**\n > @FortisFortuna Good catch did not see that, yes [24](https://github.com/code-423n4/2022-09-frax-findings/issues/24) addresses the same issue\n\n**[FortisFortuna (Frax) confirmed and commented](https://github.com/code-423n4/2022-09-frax-findings/issues/15#issuecomment-1260016194):**\n > @Lambda I will mark yours as primary because it is better documented.\n\n**[corddry (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/15#issuecomment-1262851746):**\n > Here's the proposed fix, which instead moves the syncRewards call to a modifier, so that it actually occurs _before the _withdraw__ instead of in beforeWithdraw. It also adds it to the other 4626 withdraw/redeem functions. Would appreciate feedback if you have any\n> \n> https://github.com/FraxFinance/frxETH-public/pull/2/commits/1ec457c7f5faed618971fb29b9bcc6d54453b093\n\n**[Lambda (warden) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/15#issuecomment-1262858801):**\n > The modifier is currently missing for `mint` and `redeem`, is that on purpose? Otherwise, it looks good to me\n\n**[corddry (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/15#issuecomment-1262872809):**\n > Whoops-- nice catch,\n> added here https://github.com/FraxFinance/frxETH-public/commit/996d528b46d1b2a0ac2e5b8f6d2138ccab8e03f5\n\n\n\n***\n\n## [[H-02] Frontrunning by malicious validator](https://github.com/code-423n4/2022-09-frax-findings/issues/81)\n_Submitted by parashar_\n\nFrontrunning by malicious validator changing withdrawal credentials.\n\n### Proof of Concept\n\nA malicious validator can frontrun depositEther transaction for its pubKey and deposit 1 ether for different withdrawal credential, thereby setting withdrawal credit before deposit of 32 ether by contract and thereby when 32 deposit ether are deposited, the withdrawal credential is also what was set before rather than the one being sent in depositEther transaction.\n\n### Recommended Mitigation Steps\n\nSet withdrawal credentials for validator by depositing 1 ether with desired withdrawal credentials, before adding it in Operator Registry.\n\n**[FortisFortuna (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1257288417):**\n > Interesting point, but at the beginning, the only validators we will have will be Frax controlled.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1276523610):**\n > ```\n> \n>     function deposit(\n>         bytes calldata pubkey,\n>         bytes calldata withdrawal_credentials,\n>         bytes calldata signature,\n>         bytes32 deposit_data_root\n>     ) override external payable {\n>         // Extended ABI length checks since dynamic types are used.\n>         require(pubkey.length == 48, \"DepositContract: invalid pubkey length\");\n>         require(withdrawal_credentials.length == 32, \"DepositContract: invalid withdrawal_credentials length\");\n>         require(signature.length == 96, \"DepositContract: invalid signature length\");\n> \n>         // Check deposit amount\n>         require(msg.value >= 1 ether, \"DepositContract: deposit value too low\");\n>         require(msg.value % 1 gwei == 0, \"DepositContract: deposit value not multiple of gwei\");\n>         uint deposit_amount = msg.value / 1 gwei;\n>         require(deposit_amount <= type(uint64).max, \"DepositContract: deposit value too high\");\n> \n>         // Emit `DepositEvent` log\n>         bytes memory amount = to_little_endian_64(uint64(deposit_amount));\n>         emit DepositEvent(\n>             pubkey,\n>             withdrawal_credentials,\n>             amount,\n>             signature,\n>             to_little_endian_64(uint64(deposit_count))\n>         );\n> \n>         // Compute deposit data root (`DepositData` hash tree root)\n>         bytes32 pubkey_root = sha256(abi.encodePacked(pubkey, bytes16(0)));\n>         bytes32 signature_root = sha256(abi.encodePacked(\n>             sha256(abi.encodePacked(signature[:64])),\n>             sha256(abi.encodePacked(signature[64:], bytes32(0)))\n>         ));\n>         bytes32 node = sha256(abi.encodePacked(\n>             sha256(abi.encodePacked(pubkey_root, withdrawal_credentials)),\n>             sha256(abi.encodePacked(amount, bytes24(0), signature_root))\n>         ));\n> \n>         // Verify computed and expected deposit data roots match\n>         require(node == deposit_data_root, \"DepositContract: reconstructed DepositData does not match supplied deposit_data_root\");\n> \n>         // Avoid overflowing the Merkle tree (and prevent edge case in computing `branch`)\n>         require(deposit_count < MAX_DEPOSIT_COUNT, \"DepositContract: merkle tree full\");\n> \n>         // Add deposit data root to Merkle tree (update a single `branch` node)\n>         deposit_count += 1;\n>         uint size = deposit_count;\n>         for (uint height = 0; height < DEPOSIT_CONTRACT_TREE_DEPTH; height++) {\n>             if ((size & 1) == 1) {\n>                 branch[height] = node;\n>                 return;\n>             }\n>             node = sha256(abi.encodePacked(branch[height], node));\n>             size /= 2;\n>         }\n>         // As the loop should always end prematurely with the `return` statement,\n>         // this code should be unreachable. We assert `false` just to be safe.\n>         assert(false);\n>     }\n> \n> ```\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1276529987):**\n > It is unclear both in the code above for the deposit contract as well as the documentation on keys \n> \n> https://kb.beaconcha.in/ethereum-2.0-depositing<br>\n> https://kb.beaconcha.in/ethereum-2-keys<br>\n> \n> How exactly multiple deposits two the same validator using different withdrawal keys would work.  While it would make sense that they would allow a one to many mapping, I am unable to confirm or deny this and therefore will leave the risk currently as High on the side of caution.\n\n**[Trust (warden) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1279846360):**\n > Strong find. Indeed in ETH [specs](https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#deposits) we can see that in `process_deposit()`, if the pubkey is already registered, we just increase its balance, not touching the withdrawal_credentials. However the recommended mitigation does not really address the issue IMO, and the detail is quite lacking.\n\n**[FortisFortuna (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280004724):**\n > I think it is technically a non-issue because we will be controlling the addition/removal of validators. Should that eventually become open, we will have to look at the entire code from a different perspective to close security holes.\n\n**[Trust (warden) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280006325):**\n > I think it is relevant, because the idea is to make the protocol controlled validators work for the attacker, because they inserted their own withdrawal credentials directly on the deposit contract.\n\n**[FortisFortuna (Frax) confirmed and commented](https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280006573):**\n > Ohh I see it now. Good point.\n >\n > More info<br>\n> https://research.lido.fi/t/mitigations-for-deposit-front-running-vulnerability/1239\n>\n > Since all of the validators are ours and we have the mnemonic, would it still be an issue though? Lido's setup is different: https://medium.com/immunefi/rocketpool-lido-frontrunning-bug-fix-postmortem-e701f26d7971\n\n**[FortisFortuna (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280063425):**\n > https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#deposits<br>\n> From @0xJM<br>\n> In the scenario that someone frontruns us with a 1 ETH deposit at the same time we do a 32 ETH deposit, their 1 ETH deposit would fail on beaconchain because it would fail bls.Verify. The result would be them losing their 1 ETH.\n> \n> Our 32 ETH would go through normally and the validator would activate\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280771801):**\n > @FortisFortuna - can you elaborate on why you believe that bls.Verify would fail?\n> \n> ` if not bls.Verify(pubkey, signing_root, deposit.data.signature):`\n\n**[FortisFortuna (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280885731):**\n > From @0xJM\n> \n> https://github.com/ethereum/staking-deposit-cli/blob/e2a7c942408f7fc446b889097f176238e4a10a76/staking_deposit/credentials.py#L127 \n> \n> the signing root includes the deposit message which has the withdrawal credentials \n> \n> https://github.com/ethereum/staking-deposit-cli/blob/e2a7c942408f7fc446b889097f176238e4a10a76/staking_deposit/credentials.py#L112\n> \n> hence bls.Verify would fail on Beaconchain as I mentioned\n> \n> the consensus spec has that signing_root = compute_signing_root(deposit_message, domain) which is verified against the signature.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280900859):**\n > The signature would be valid.  The validator would still sign the message containing the credentials that they are front running with. \n\n**[FortisFortuna (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280909443):**\n > From @denett<br>\n> \"The signature would be valid. The validator would still sign the message containing the credentials that they are front running with.\"\n> Only the validator can create a valid signature and we own the key to the validator.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280915906):**\n > Yea, so this is the root of it, the contest does not specify that Frax is the owner of all validators that are meant to be used with this protocol. Without stating that ahead of time for the Wardens to understand, I believe this to be a valid finding and the warden should be awarded.\n\n**[FortisFortuna (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280932310):**\n > Ok. So in our current setup, assuming Frax owns all validators, we are safe?\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280947388):**\n > :) I cannot guarantee anything in DeFi is safe.  My understanding of this particular vulnerability is that it would require a validator to act maliciously by using a smaller than 32 ETH deposit to front run your deposit and enable them to control the withdrawal in the future. If the validator is owned by your team and the keys are never exploited, then I don't see how the front ran signature could be generated. \n\n**[FortisFortuna (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/81#issuecomment-1280949422):**\n > Ya, I hear you lol. At least for this particular scenario we are ok then, according to the known bug. We can pay out for the bug because none of our team were aware of it and it is good to know for the future.\n\n\n\n***\n \n# Medium Risk Findings (10)\n## [[M-01] Centralization risk: admin have privileges: admin can set address to mint any amount of frxETH, can set any address as validator, and change important state in frxETHMinter and withdraw fund from frcETHMinter ](https://github.com/code-423n4/2022-09-frax-findings/issues/107)\n*Submitted by ladboy233, also found by 0xSmartContract, 8olidity, ayeslick, Aymen0909, cccz, Chom, csanuragjain, IllIllI, joestakey, neko\\_nyaa, OptimismSec, PaludoX0, pashov, peritoflores, rbserver, rvierdiiev, and TomJ*\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L41>\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L53>\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L65>\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L76>\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L94>\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L159>\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L166>\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L177>\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L184>\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L191>\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L199>\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L53>\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L61>\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L69>\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L82>\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L93>\n\n### Impact\n\nAdmin have privileges: admin can set address to mint any amount of frxETH, can set any address as validator, and change important state in frxETHMinter and withdraw fund from frcETHMinter.\n\nNote the modifier below, either the timelock governance contract or the contract owner can access to all the high privilege function.\n\n        modifier onlyByOwnGov() {\n            require(msg.sender == timelock_address || msg.sender == owner, \"Not owner or timelock\");\n            _;\n        }\n\nThere are numerous methods that the admin could apply to rug pull the protocol and take all user funds.\n\nThe admin can\n\n    add or remove validator from OperatorRegistry.sol\n\n    set minter address or remove minter address in frxETH.sol\n\n    minter set by admin can mint or burn any amount of frxETH token.\n\n    set ETE deduction ratio, withdraw any amount of ETH or ERC20 token in frcETHMinter.sol\n\n### Tools Used\n\nFoundry\n\n### Recommended Mitigation Steps\n\nWithout significant redesign it is not possible to avoid the admin being able to rug pull the protocol.\n\nAs a result the recommendation is to set all admin functions behind either a timelocked DAO or at least a timelocked multisig contract.\n\n**[FortisFortuna (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/107#issuecomment-1257281609):**\n > We are well aware of the permission structure. The owner will most likely be a large multisig. We mentioned the Frax Multisig in the scope too.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/107#issuecomment-1276220502):**\n > Going to use this issue as the canonical issue for all \"malicious owner\" type reports.  The protocol does have some serious \"trust\" in the administrator and the highlighted issues are important for end users to understand and should be part of the report. \n\n\n\n***\n\n## [[M-02] Rewards delay release could cause yields steal and loss](https://github.com/code-423n4/2022-09-frax-findings/issues/110)\n*Submitted by \\_\\_141345\\_\\_, also found by Bahurum, Ch\\_301, Chom, datapunk, Respx, ronnyx2017, and Trust*\n\nIn the current rewards accounting, vault shares in `deposit()` and `redeem()` can not correctly record the spot yields generated by the staked asset. Yields are released over the next rewards cycle. As a result, malicious users can steal yields from innocent users by picking special timing to `deposit()` and `redeem()`.\n\n### Proof of Concept\n\nIn `syncRewards()`, the current asset balance is broken into 2 parts: `storedTotalAssets` and `lastRewardAmount/nextRewards`. The `lastRewardAmount` is the surplus balance of the asset, or the most recent yields.\n\n```solidity\n// lib/ERC4626/src/xERC4626.sol\n    function syncRewards() public virtual {\n        // ...\n\n        uint256 nextRewards = asset.balanceOf(address(this)) - storedTotalAssets_ - lastRewardAmount_;\n\n        storedTotalAssets = storedTotalAssets_ + lastRewardAmount_;\n\n        uint32 end = ((timestamp + rewardsCycleLength) / rewardsCycleLength) * rewardsCycleLength;\n\n        lastRewardAmount = nextRewards.safeCastTo192();\n        // ...        \n        rewardsCycleEnd = end;\n    }\n```\n\nAnd in the next rewards cycle, `lastRewardAmount` will be linearly added to `storedTotalAssets`, their sum is the return value of `totalAssets()`:\n\n```solidity\n    function totalAssets() public view override returns (uint256) {\n        // ...\n\n        if (block.timestamp >= rewardsCycleEnd_) {\n            // no rewards or rewards fully unlocked\n            // entire reward amount is available\n            return storedTotalAssets_ + lastRewardAmount_;\n        }\n\n        // rewards not fully unlocked\n        // add unlocked rewards to stored total\n        uint256 unlockedRewards = (lastRewardAmount_ * (block.timestamp - lastSync_)) / (rewardsCycleEnd_ - lastSync_);\n        return storedTotalAssets_ + unlockedRewards;\n    }\n```\n\n`totalAssets()` will be referred when `deposit()` and `redeem()`.\n\n```solidity\n// lib/solmate/src/mixins/ERC4626.sol\n\n    function deposit(uint256 assets, address receiver) public virtual returns (uint256 shares) {\n        require((shares = previewDeposit(assets)) != 0, \"ZERO_SHARES\");\n        // ...\n        _mint(receiver, shares);\n        // ...\n    }\n\n    function redeem() public virtual returns (uint256 assets) {\n        // ...\n        require((assets = previewRedeem(shares)) != 0, \"ZERO_ASSETS\");\n\n        beforeWithdraw(assets, shares);\n\n        _burn(owner, shares);\n\n        // ...\n\n        asset.safeTransfer(receiver, assets);\n    }\n\n    function previewDeposit(uint256 assets) public view virtual returns (uint256) {\n        return convertToShares(assets);\n    }\n\n    function previewRedeem(uint256 shares) public view virtual returns (uint256) {\n        return convertToAssets(shares);\n    }\n\n    function convertToShares(uint256 assets) public view virtual returns (uint256) {\n        uint256 supply = totalSupply; \n\n        return supply == 0 ? assets : assets.mulDivDown(supply, totalAssets());\n    }\n\n    function convertToAssets(uint256 shares) public view virtual returns (uint256) {\n        uint256 supply = totalSupply; \n\n        return supply == 0 ? shares : shares.mulDivDown(totalAssets(), supply);\n    }\n```\n\nBased on the above rules, there are 2 potential abuse cases:\n\n1.  If withdraw just after the `rewardsCycleEnd` timestamp, a user can not get the yields from last rewards cycle. Since the `totalAssets()` only contain `storedTotalAssets` but not the yields part. It takes 1 rewards cycle to linearly add to the `storedTotalAssets`.\n\n   Assume per 10,000 asset staking generate yields of 70 for 7 days, and the reward cycle is 1 day. A malicious user Alice can do the following:\n\n   *   Watch the mempool for  `withdraw(10,000)` from account Bob, front run it with `syncRewards()`, so that the most recent yields of amount 70 from Bob will stay in the vault.\n   *   Alice will also deposit a 10,000 to take as much shares as possible.\n   *   After 1 rewards cycle of 1 day, `redeem()` to take the yields of 70.\n\n   Effectively steal the yields from Bob. The profit for Alice is not 70, because after 1 day, her own deposit also generates some yield, in this example this portion is 1. At the end, Alice steal yield of amount 60.\n\n2.  When the Multisig Treasury transfers new yields into the vault, the new yields will accumulate until `syncRewards()` is called. It is possible that yields from multiple rewards cycles accumulates, and being released in the next cycle.\n\n   Knowing that the yields has been accumulated for 3 rewards cycles, a malicious user can `deposit()` and call `syncRewards()` to trigger the release of the rewards. `redeem()` after 1 cycle.\n\n   Here the malicious user gets yields of 3 cycles, lose 1 in the waiting cycle. The net profit is 2 cycle yields, and the gained yields should belong to the other users in the vault.\n\n### Recommended Mitigation Steps\n\n*   For the `lastRewardAmount` not released, allow the users to redeem as it is linearly released later.\n*   For the accumulated yields, only allow users to redeem the yields received after 1 rewards cycle after the deposit.\n\n**[FortisFortuna (Frax) confirmed, but disagreed with severity and commented](https://github.com/code-423n4/2022-09-frax-findings/issues/110#issuecomment-1258364911):**\n > From @denett<br>\n> syncRewards should be called by us at the beginning of each period, or we need to automatically call it before deposits/withdrawals.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/110#issuecomment-1278226997):**\n > All of the duplicated issues reference a scenario where syncRewards isn't called at the appropriate time leading to the ability for users to steal yield from other users in some fashion.  So while they are slightly different I do think grouping them together makes sense as the underlying root cause is the same.  \n> \n> Medium seems like the appropriate severity for this, as its requires some external factors and doesn't result in principal being lost, only yield. \n> \n> \n\n\n\n***\n\n## [[M-03] frxETH can be depegged due to ETH staking balance slashing ](https://github.com/code-423n4/2022-09-frax-findings/issues/113)\n*Submitted by ladboy233, also found by \\_\\_141345\\_\\_*\n\nThe main risk in ETH 2.0 POS staking is the slashing penalty, in that case the frxETH will not be pegged and the validator cannot maintain a minimum 32 ETH staking balance.\n\n<https://cryptobriefing.com/ethereum-2-0-validators-slashed-staking-pool-error/>\n\n### Recommended Mitigation Steps\n\nWe recommend the protocol to add mechanism to ensure the frxETH is pegged via burning if case the ETH got slashed.\n\nAnd consider when the node does not maintain a minimum 32 ETH staking balance, who is in charge of adding the ETH balance to increase the staking balance or withdraw the ETH and distribute the fund.\n\n**[FortisFortuna (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/113#issuecomment-1257364420):**\n > We as the team can either choose to subsidize this, or let it float. ETH 2.0 does not allow unstaking yet. When it eventually does, we will redeploy this minting contract with updated logic that may be helpful.\n\n**[0xean (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-09-frax-findings/issues/113#issuecomment-1278289553):**\n > I think this is valid but should be downgraded to Medium.  Users should be aware that there is no mechanism built in to deal with slashing and that the asset backed guarantee isn't without some (perhaps negligible) risk of slashing. \n\n\n\n***\n\n## [[M-04] removeValidator() and removeMinter() may fail due to exceeding gas limit](https://github.com/code-423n4/2022-09-frax-findings/issues/12)\n*Submitted by oyc\\_109, also found by 0x4non, Chom, ladboy233, Lambda, lukris02, pashov, Respx, and V\\_B*\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L113-L118>\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L84-L89>\n\n### Vulnerability Details\n\n#### removeValidator() and removeMinter() may fail due to exceeding gas limit\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L113-L118>\n\n                for (uint256 i = 0; i < original_validators.length; ++i) {\n                    if (i != remove_idx) {\n                        validators.push(original_validators[i]);\n                    }\n                }\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L84-L89>\n\n            for (uint i = 0; i < minters_array.length; i++){ \n                if (minters_array[i] == minter_address) {\n                    minters_array[i] = address(0); // This will leave a null in the array and keep the indices the same\n                    break;\n                }\n            }\n\nThe `removeValidator()` is used to remove a validator from the array `validators`.\n\nThere is an unbounded loop in `removeValidator()` such that if the `validators` array gets sufficiently large, this function call will fail due to exceeding the gas limit.\n\nThe same issue exists in the `removeMinter()` function. If `minters_array` gets large, the function call will fail.\n\n**[FortisFortuna (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/12#issuecomment-1257294786):**\n > Technically correct, but in practice, the number of minters will always remain low. If it becomes an issue, we can designate one minter as a \"pre-minter\" that has a batch of tokens minted to it beforehand, then auxiliary contracts can connect to that instead of ERC20PermitPermissionedMint.sol instead.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/12#issuecomment-1278206459):**\n > I think Medium is appropriate here, given this could impact the functionality of the protocol. \n\n**[Trust (warden) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/12#issuecomment-1279848072):**\n > Wouldn't call this a risk to the functionality of the protocol, because sender can always send enough gas, and validator array gets truncated every time on is popped for use.\n >\n> Unbounded for-loops should be handled with care but not sure a realistic impact can be demonstrated here to qualify for Medium.\n\n\n\n***\n\n## [[M-05] frxETHMinter.depositEther may run out of gas, leading to lost ETH](https://github.com/code-423n4/2022-09-frax-findings/issues/17)\n*Submitted by Lambda, also found by 0x52, Bahurum, Bnke0x0, KIntern\\_NA, lukris02, rbserver, Respx, rotcivegaf, Soosh, TomJ, Trust, V\\_B, and yixxas*\n\n`frxETHMinter.depositEther` always iterates over all deposits that are possible with the current balance (`(address(this).balance - currentWithheldETH) / DEPOSIT_SIZE`). However, when a lot of ETH was deposited into the contract / it was not called in a long time, this loop can reach the gas limit. When this happens, no more calls to `depositEther` are possible, as it will always run out of gas.\n\nOf course, the probability that such a situation arises depends on the price of ETH. For >1,000 USD it would require someone to deposit a large amount of money (which can also happen, there are whales with thousands of ETH, so if one of them would decide to use frxETH, the problem can arise). For lower prices, it can happen even for small (in dollar terms) deposits. And in general, the correct functionality of a protocol should not depend on the price of ETH.\n\n### Proof Of Concept\n\nJerome Powell continues to raise interest rates, he just announced the next rate hike to 450%. The crypto market crashes, ETH is at 1 USD. Bob buys 100,000 ETH for 100,000 USD and deposits them into `frxETHMinter`. Because of this deposit, `numDeposit` within `depositEther` is equal to 3125. Therefore, every call to the function runs out of gas and it is not possible to deposit this ETH into the deposit contract.\n\n### Recommended Mitigation Steps\n\nIt should be possible to specify an upper limit for the number of deposits such that progress is possible, even when a lot of ETH was deposited into the contract.\n\n**[FortisFortuna (Frax) confirmed, but decreased severity to Low and commented](https://github.com/code-423n4/2022-09-frax-findings/issues/17#issuecomment-1258316249):**\n > Adding a maxLoops parameter or similar can help mitigate this for sure.\n\n**[0xean (judge) increased severity to Medium and commented](https://github.com/code-423n4/2022-09-frax-findings/issues/17#issuecomment-1275294964):**\n > Warden(s) fail to demonstrate how this leads to a loss of funds which would be required for High Severity. This does however lead directly to emergency failover's having to be called to remove the now stuck ETH, and ultimately impairs the functionality and availability of the protocol, so Medium severity is appropriate.\n\n\n\n***\n\n## [[M-06] frxETHMinter: Non-conforming ERC20 tokens not recoverable ](https://github.com/code-423n4/2022-09-frax-findings/issues/18)\n_Submitted by Lambda, also found by 0x1f8b, 0x5rings, 0xSky, 0xSmartContract, 8olidity, brgltd, Chom, CodingNameKiki, hansfriese, IllIllI, m9800, magu, pashov, pedroais, peritoflores, prasantgupta52, rokinot, Ruhum, seyni, and Sm4rty_\n\nThere is a function `recoverERC20` to rescue any ERC20 tokens that were accidentally sent to the contract. However, there are tokens that do not return a value on success, which will cause the call to revert, even when the transfer would have been successful. This means that those tokens will be stuck forever and not be recoverable.\n\n### Proof Of Concept\n\nSomeone accidentally transfers USDT, one of the most commonly used ERC20 tokens, to the contract. Because USDT's transfer [does not return a boolean](https://etherscan.io/token/0xdac17f958d2ee523a2206206994597c13d831ec7#code), it will not be possible to recover those tokens and they will be stuck forever.\n\n### Recommended Mitigation Steps\n\nUse OpenZeppelin's `safeTransfer`.\n\n**[FortisFortuna (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/18#issuecomment-1257283698):**\n > Not really medium risk. Technically you could use safeTransfer, but if someone were to accidentally send something to this contract, it would most likely be either ETH, FRAX, frxETH, or sfrxETH, all of which are transfer compliant.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/18#issuecomment-1275309622):**\n > I think this qualifies as a Medium risk.  Sponsor has created functionality to recover ERC20 tokens.  Wardens have shown a path to which this functionality does not work correctly. \n> \n> > 2 — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.\n\n\n\n***\n\n## [[M-07] `getNextValidator()` error could temporarily make `depositEther()` inoperable ](https://github.com/code-423n4/2022-09-frax-findings/issues/219)\n*Submitted by \\_\\_141345\\_\\_*\n\nWhen `depositEther()`, if 1 `validators` is used before, the whole deposit function will revert, causing DoS. `depositEther()` function will be inoperable until the gov manually removes the mistaken validator.\n\n### Proof of Concept\n\nIn `depositEther()`, if the `pubKey` is already used, the whole loop will revert, and the deposit operation cannot move on.\n\n```solidity\n// src/frxETHMinter.sol\n    function depositEther() external nonReentrant {\n        // ...\n\n        for (uint256 i = 0; i < numDeposits; ++i) {\n            // Get validator information\n            (\n                bytes memory pubKey,\n                bytes memory withdrawalCredential,\n                bytes memory signature,\n                bytes32 depositDataRoot\n            ) = getNextValidator(); // Will revert if there are not enough free validators\n\n            // Make sure the validator hasn't been deposited into already, to prevent stranding an extra 32 eth\n            // until withdrawals are allowed\n            require(!activeValidators[pubKey], \"Validator already has 32 ETH\");\n        // ...        \n    }\n```\n\nAnd in the next rewards cycle, `lastRewardAmount` will be linearly added to `storedTotalAssets`, their sum is the return value of `totalAssets()`:\n\n```solidity\n    function totalAssets() public view override returns (uint256) {\n        // ...\n\n        if (block.timestamp >= rewardsCycleEnd_) {\n            // no rewards or rewards fully unlocked\n            // entire reward amount is available\n            return storedTotalAssets_ + lastRewardAmount_;\n        }\n\n        // rewards not fully unlocked\n        // add unlocked rewards to stored total\n        uint256 unlockedRewards = (lastRewardAmount_ * (block.timestamp - lastSync_)) / (rewardsCycleEnd_ - lastSync_);\n        return storedTotalAssets_ + unlockedRewards;\n    }\n```\n\nTemporarily the `depositEther()` function will be inaccessible. Until the governance calls the registry to pop the wrong validator.\n\n```solidity\n// src/OperatorRegistry.sol\n    function popValidators(uint256 times) public onlyByOwnGov {\n        // Loop through and remove validator entries at the end\n        for (uint256 i = 0; i < times; ++i) {\n            validators.pop();\n        }\n\n        emit ValidatorsPopped(times);\n    }\n```\n\n### Recommended Mitigation Steps\n\nUse `try/catch` to skip the wrong validator, then the deposit function will be more robust to unexpected situations.\n\n**[FortisFortuna (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/219#issuecomment-1257301152):**\n > We plan to keep an eye on the number of free validators and have a decent sized buffer of them.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/219#issuecomment-1278241225):**\n > Awarding as Medium, given that this can disable deposits, the registry should check against the mapping. \n\n\n\n***\n\n## [[M-08] Withheld ETH shoud not be sent back to the frxETHMinter contract itself](https://github.com/code-423n4/2022-09-frax-findings/issues/221)\n_Submitted by ronnyx2017, also found by ayeslick and rvierdiiev_\n\n<https://github.com/code-423n4/2022-09-frax/blob/main/src/frxETHMinter.sol#L166-L174>\n\n<https://github.com/code-423n4/2022-09-frax/blob/main/src/frxETHMinter.sol#L191-L196>\n\n<https://github.com/code-423n4/2022-09-frax/blob/main/src/frxETHMinter.sol#L114-L116>\n\n### Impact\n\nIt will lead to duplicating accounting for the Eths which have been already converted to the frxETH tokens. It means Eth:frxEth will not be 1:1, and eventually leads to decoupling.\n\n### Proof of Concept\n\nThe function `moveWithheldETH` will send the `amount` of the Withheld ETH in the contract to the address `to`. It doesnt check if the `to` address is the frxETHMinter contract itself.\n\nAnd the frxETHMinter has the receive function which will submit any eth received to the frxETH.\n\n    /// @notice Fallback to minting frxETH to the sender\n        receive() external payable {\n            _submit(msg.sender);\n        }\n\nBut these parts of Eths (WithheldETH) also have been converted to the frxETH normally when they were sent to the contract at the first time.\n\n        function _submit(address recipient) internal nonReentrant {\n            // Initial pause and value checks\n            ...\n            // Give the sender frxETH\n            frxETHToken.minter_mint(recipient, msg.value);\n\nSo these Eths will be accounted, Twice, even more. It means Eth:frxEth will not be 1:1 anymore.\n\nThe function `recoverEther` has the same problem. Although these two functions can only be called by owner or DAO gov. It seriously affects financial stability.\n\n### Recommended Mitigation Steps\n\nFurthermore, due to the logic `receive() -> submit()`, any kind of transaction that withdraws ETH from the contract and then sends it back will cause the same problem.\n\nA non-feedback paybale empty function that does not use `_submit()` should be added to receive special ETH without increasing the frxeth supply.\n\n**[FortisFortuna (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/221#issuecomment-1257282940):**\n > We are well aware of the permission structure. The owner will most likely be a large multisig. We mentioned the Frax Multisig in the scope too. If moving funds, it is assumed someone in the multisig would catch an invalid or malicious address.\n> \n> \n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/221#issuecomment-1275330530):**\n > Wardens have demonstrated a mechanism which breaks core assumptions of the contract's accounting.  While I am usually very apprehensive to call input sanitization a M issue, a simple require statement here mitigates a risk of accidentally breaking a core tenet of the asset backed token.  \n> \n> Going to award this as Medium for now, may come back to it to revise later.\n\n\n\n***\n\n## [[M-09] `recoverEther` not updating `currentWithheldETH` breaks calculation of withheld amount for further deposits](https://github.com/code-423n4/2022-09-frax-findings/issues/346)\n_Submitted by joestakey, also found by Chom_\n\nThe emergency exit function `recoverEther` allows the owner to retrieve the ETH in case an issue were to happen.\n\nThe problem is that this function does not update `currentWithheldETH`.\n\nThis means upon deposit starting again after the emergency recovery, `currentWithheldETH` will have an offset and will not match the `withholdRatio`.\n\nDirect consequences:\n\n*   `depositEther` may not deposit the expected amount of ETH into the ETH 2.0 staking contract.\n*   The amount of ETH moved to an external yield protocol using `moveWithheldETH()` will be higher than what it should be.\n\n### Proof Of Concept\n\n*   frxETHMinter has a `withholdRatio` set to `2 * 1e5` - ie the contract is meant to hold `20%` of the ETH deposited.\n*   Users deposit ETH into the contract.\n*   An issue happens and the owner calls `recoverEther(address(this).balance)`. Before the call, the total balance was `1e20` (100 ETH), and `currentWithheldETH == 2 * 1e19` - for simplicity we assume no calls to `moveWithheldETH` or `depositEther` have been done yet.\n*   The ETH balance of the minter is now `0`, but `currentWithheldETH` is still `2 * 1e19`\n*   Users start depositing again.\n*   At this point, the total balance is now `1e20` (100 ETH), and `currentWithheldETH == 4 * e19`\n*   The owner calling `depositEther` deposits `32 ether` instead of `64 ether`, because `currentWithheldETH == 40 ether` instead of `20 ether`. The owner can also call `moveWithheldETH` with `amount == 4 * 1e19` instead of `amount == 2 * 1e19`.\n\nYou can add the following Foundry test in `frxETHMinter.t.sol` to reproduce the issue:\n\n*   First declare `address Alice = address(1);` before the `setUp()`\n\n```solidity\nfunction testIssueRecoverEther() public {\n        vm.startPrank(FRAX_COMPTROLLER);\n\n        // Note the starting ETH balance of the comptroller\n        uint256 starting_eth = FRAX_COMPTROLLER.balance;\n\n        // Give Alice 200 eth\n        vm.deal(Alice, 200 ether);\n        // Set the withhold ratio to 20% (2 * 1e5)\n        minter.setWithholdRatio(200000);\n        vm.stopPrank();\n\n        vm.startPrank(Alice);\n\n        //deposit 100 ETH\n        minter.submit{ value: 100 ether }();\n        vm.stopPrank();\n\n        vm.startPrank(FRAX_COMPTROLLER);\n        // Recover all\n        minter.recoverEther(100 ether);\n\n        // Make sure the FRAX_COMPTROLLER got 100 ether back\n        assertEq(FRAX_COMPTROLLER.balance, starting_eth + (100 ether));\n\n        //check `currentWithheldETH`: it has not been reset and is still 20 ETH\n        assertEq(minter.currentWithheldETH(), 20 ether);\n        vm.stopPrank();\n\n        vm.startPrank(Alice);\n        //deposit 100 ETH\n        minter.submit{ value: 100 ether }();\n        //check `currentWithheldETH`: because of the offset, it is now 40 ETH, ie 40% of the total ETH in the minter\n        assertEq(minter.currentWithheldETH(), 40 ether);\n        assertEq(address(minter).balance, 100 ether);\n        vm.stopPrank();\n\n        vm.startPrank(FRAX_COMPTROLLER);\n        //Owner can call moveWithheldETH, transferring more than 40% of the balance, while the withheld amount should be 20%\n        minter.moveWithheldETH(payable(address(Alice)), 40 ether);\n        assertEq(address(minter).balance, 60 ether);\n        vm.stopPrank();\n    }\n```\n\n### Tools Used\n\nFoundry\n\n### Recommended Mitigation Steps\n\nUpdate `currentWithheldETH` in `recoverEther` :\n\n```diff\n+            currentWithheldETH = currentWithheldETH >= amount ? currentWithheldETH - amount : 0 ;\n192:         (bool success,) = address(owner).call{ value: amount }(\"\");\n193:         require(success, \"Invalid transfer\");\n194: \n195:         emit EmergencyEtherRecovered(amount);\n```\n\n**[FortisFortuna (Frax) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/346#issuecomment-1258347198):**\n > @denett<br>\n> withholdRatio is is not an iron rule and can be updated by the owner at will. recoverEther will likely only be used when we are migrating to a new minting contract, so the accounting in that case is no longer important.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/346#issuecomment-1278281505):**\n > Issue 346 has some great suggestions in it on ensuring user safety in an emergency scenario and think that both of these issues do highlight a valid concern that ultimately could affect the protocol in an emergency scenario. \n\n\n\n***\n\n## [[M-10] sfrxETH: The volatile result of previewMint() may prevent mintWithSignature from working](https://github.com/code-423n4/2022-09-frax-findings/issues/35)\n_Submitted by cccz, also found by rotcivegaf, Trust, and wagmi_\n\nIn sfrxETH contracts, the result of `previewMint()` changes with the state of the contract, which causes the value of amount to be volatile in the mintWithSignature function when approveMax is false.\n\nAnd when using the mintWithSignature function, which requires the user to sign for an accurate amount value, when the amount used differs from the result of previewMint(), mintWithSignature will not work.\n\nConsider the following scenarios.\n\nUser A signs using amount = 1000 and calls the mintWithSignature function.\n\nDuring execution, the previous transaction in the same block changes the state of the contract so that previewMint(shares) == 1001, so the transaction is reverted due to a signature check failure.\n\n### Proof of Concept\n\n<https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/sfrxETH.sol#L75-L87>\n\n<https://github.com/transmissions11/solmate/blob/bff24e835192470ed38bf15dbed6084c2d723ace/src/mixins/ERC4626.sol#L140-L144>\n\n### Recommended Mitigation Steps\n\nConsider that in the mintWithSignature function, the user provides a maxAmount, and then requires maxAmount >= previewMint(shares) and uses maxAmount to verify the signature.\n\n**[FortisFortuna (Frax) acknowledged and commented](https://github.com/code-423n4/2022-09-frax-findings/issues/35#issuecomment-1257310689):**\n > Technically correct, though in practice, we will allow user-defined slippage on the UI.\n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-09-frax-findings/issues/35#issuecomment-1276247147):**\n > I don't believe the UI will be able to assist with this issue unless modifications are made to the smart contracts. The signature will become invalidated due to the return value of `previewMint()` changing while the transaction is waiting to be included in a block.  \n\n\n\n***\n\n\n\n# Low Risk and Non-Critical Issues\n\nFor this contest, 83 reports were submitted by wardens detailing low risk and non-critical issues. The [report highlighted below](https://github.com/code-423n4/2022-09-frax-findings/issues/155) by **rotcivegaf** received the top score from the judge.\n\n*The following wardens also submitted reports: [0x1f8b](https://github.com/code-423n4/2022-09-frax-findings/issues/30), [bytera](https://github.com/code-423n4/2022-09-frax-findings/issues/179), [0xNazgul](https://github.com/code-423n4/2022-09-frax-findings/issues/307), [leosathya](https://github.com/code-423n4/2022-09-frax-findings/issues/49), [gogo](https://github.com/code-423n4/2022-09-frax-findings/issues/55), [Rolezn](https://github.com/code-423n4/2022-09-frax-findings/issues/120), [neko\\_nyaa](https://github.com/code-423n4/2022-09-frax-findings/issues/97), [IllIllI](https://github.com/code-423n4/2022-09-frax-findings/issues/176), [brgltd](https://github.com/code-423n4/2022-09-frax-findings/issues/227), [bobirichman](https://github.com/code-423n4/2022-09-frax-findings/issues/169), [c3phas](https://github.com/code-423n4/2022-09-frax-findings/issues/358), [CodingNameKiki](https://github.com/code-423n4/2022-09-frax-findings/issues/363), [ajtra](https://github.com/code-423n4/2022-09-frax-findings/issues/200), [0x4non](https://github.com/code-423n4/2022-09-frax-findings/issues/237), [Deivitto](https://github.com/code-423n4/2022-09-frax-findings/issues/382), [0xSmartContract](https://github.com/code-423n4/2022-09-frax-findings/issues/229), [B2](https://github.com/code-423n4/2022-09-frax-findings/issues/220), [delfin454000](https://github.com/code-423n4/2022-09-frax-findings/issues/281), [lukris02](https://github.com/code-423n4/2022-09-frax-findings/issues/319), [Aymen0909](https://github.com/code-423n4/2022-09-frax-findings/issues/328), [cryptostellar5](https://github.com/code-423n4/2022-09-frax-findings/issues/337), [rbserver](https://github.com/code-423n4/2022-09-frax-findings/issues/144), [Bnke0x0](https://github.com/code-423n4/2022-09-frax-findings/issues/37), [RockingMiles](https://github.com/code-423n4/2022-09-frax-findings/issues/42), [Diana](https://github.com/code-423n4/2022-09-frax-findings/issues/340), [Waze](https://github.com/code-423n4/2022-09-frax-findings/issues/75), [oyc\\_109](https://github.com/code-423n4/2022-09-frax-findings/issues/11), [cryptphi](https://github.com/code-423n4/2022-09-frax-findings/issues/186), [\\_\\_141345\\_\\_](https://github.com/code-423n4/2022-09-frax-findings/issues/112), [mics](https://github.com/code-423n4/2022-09-frax-findings/issues/167), [tnevler](https://github.com/code-423n4/2022-09-frax-findings/issues/259), [V\\_B](https://github.com/code-423n4/2022-09-frax-findings/issues/344), [aysha](https://github.com/code-423n4/2022-09-frax-findings/issues/387), [0xf15ers](https://github.com/code-423n4/2022-09-frax-findings/issues/391), [a12jmx](https://github.com/code-423n4/2022-09-frax-findings/issues/396), [Triangle](https://github.com/code-423n4/2022-09-frax-findings/issues/202), [ayeslick](https://github.com/code-423n4/2022-09-frax-findings/issues/240), [csanuragjain](https://github.com/code-423n4/2022-09-frax-findings/issues/51), [Funen](https://github.com/code-423n4/2022-09-frax-findings/issues/353), [Trust](https://github.com/code-423n4/2022-09-frax-findings/issues/102), [datapunk](https://github.com/code-423n4/2022-09-frax-findings/issues/218), [Bahurum](https://github.com/code-423n4/2022-09-frax-findings/issues/302), [joestakey](https://github.com/code-423n4/2022-09-frax-findings/issues/338), [8olidity](https://github.com/code-423n4/2022-09-frax-findings/issues/36), [ladboy233](https://github.com/code-423n4/2022-09-frax-findings/issues/96), [sikorico](https://github.com/code-423n4/2022-09-frax-findings/issues/164), [slowmoses](https://github.com/code-423n4/2022-09-frax-findings/issues/172), [asutorufos](https://github.com/code-423n4/2022-09-frax-findings/issues/175), [sach1r0](https://github.com/code-423n4/2022-09-frax-findings/issues/199), [TomJ](https://github.com/code-423n4/2022-09-frax-findings/issues/258), [Soosh](https://github.com/code-423n4/2022-09-frax-findings/issues/188), [JLevick](https://github.com/code-423n4/2022-09-frax-findings/issues/213), [durianSausage](https://github.com/code-423n4/2022-09-frax-findings/issues/324), [rokinot](https://github.com/code-423n4/2022-09-frax-findings/issues/347), [JC](https://github.com/code-423n4/2022-09-frax-findings/issues/385), [bbuddha](https://github.com/code-423n4/2022-09-frax-findings/issues/136), [yasir](https://github.com/code-423n4/2022-09-frax-findings/issues/195), [PaludoX0](https://github.com/code-423n4/2022-09-frax-findings/issues/294), [peritoflores](https://github.com/code-423n4/2022-09-frax-findings/issues/360), [yongskiws](https://github.com/code-423n4/2022-09-frax-findings/issues/56), [obront](https://github.com/code-423n4/2022-09-frax-findings/issues/6), [millersplanet](https://github.com/code-423n4/2022-09-frax-findings/issues/5), [Lambda](https://github.com/code-423n4/2022-09-frax-findings/issues/14), [OptimismSec](https://github.com/code-423n4/2022-09-frax-findings/issues/398), [rvierdiiev](https://github.com/code-423n4/2022-09-frax-findings/issues/47), [seyni](https://github.com/code-423n4/2022-09-frax-findings/issues/70), [parashar](https://github.com/code-423n4/2022-09-frax-findings/issues/80), [Yiko](https://github.com/code-423n4/2022-09-frax-findings/issues/127), [Tointer](https://github.com/code-423n4/2022-09-frax-findings/issues/129), [KIntern\\_NA](https://github.com/code-423n4/2022-09-frax-findings/issues/151), [Tagir2003](https://github.com/code-423n4/2022-09-frax-findings/issues/161), [jag](https://github.com/code-423n4/2022-09-frax-findings/issues/181), [karanctf](https://github.com/code-423n4/2022-09-frax-findings/issues/183), [exd0tpy](https://github.com/code-423n4/2022-09-frax-findings/issues/191), [ronnyx2017](https://github.com/code-423n4/2022-09-frax-findings/issues/210), [natzuu](https://github.com/code-423n4/2022-09-frax-findings/issues/235), [0x040](https://github.com/code-423n4/2022-09-frax-findings/issues/242), [Sm4rty](https://github.com/code-423n4/2022-09-frax-findings/issues/252), [ret2basic](https://github.com/code-423n4/2022-09-frax-findings/issues/257), [got\\_targ](https://github.com/code-423n4/2022-09-frax-findings/issues/263), [Ch\\_301](https://github.com/code-423n4/2022-09-frax-findings/issues/266), and [bharg4v](https://github.com/code-423n4/2022-09-frax-findings/issues/376).*\n\n## Low Risk Issues\n\n|    | Issue                            | Instances |\n| :----: | :------------------------------- | :-------: |\n| L‑01 | Draft OpenZeppelin Dependencies  |     1     |\n| L‑02 | Don't use `owner` and `timelock` |     2     |\n\nTotal: 3 instances over 2 issues\n\n## [L-01] Draft OpenZeppelin Dependencies\n\nThe `ERC20PermitPermissionedMint.sol` contract heredit from an OpenZeppelin contract who is still a draft and is not considered ready for mainnet use. OpenZeppelin contracts may be considered draft contracts if they have not received adequate security auditing or are liable to change with future development.\n\n### Recommendation\n\nEnsure the development team is aware of the risks of using a draft contract or consider waiting until the contract is finalised.\n\nOtherwise, make sure that development team are aware of the risks of using a draft OpenZeppelin contract and accept the risk-benefit trade-off.\n\nAlso could evaluate changing to the [solmate contracts](https://github.com/transmissions11/solmate) since his [ERC20 implementation](https://github.com/transmissions11/solmate/blob/bff24e835192470ed38bf15dbed6084c2d723ace/src/tokens/ERC20.sol#L8) already has the [EIP-2612 permit](https://github.com/transmissions11/solmate/blob/bff24e835192470ed38bf15dbed6084c2d723ace/src/tokens/ERC20.sol#L116-L157)\n\n```solidity\nFile: /src/ERC20/ERC20PermitPermissionedMint.sol\n\n6 import \"openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\";\n```\n\n## [L-02] Don't use `owner` and `timelock`\n\nUsing a `timelock` contract gives confidence to the user, but when check `onlyByOwnGov` allow the `owner` and the `timelock`\nThe `owner` manipulates the contract without a lock time period.\n\n### Recommendation\n\n*   Use only `Owned` permission\n*   Remove the `timelock_address`\n*   The owner should be the `timelock` contract\n\n```solidity\nFile: /src/frxETH.sol\n\n38      address _timelock_address\n\n40    ERC20PermitPermissionedMint(_creator_address, _timelock_address, \"Frax Ether\", \"frxETH\")\n```\n\n```solidity\nFile: /src/ERC20/ERC20PermitPermissionedMint.sol\n\n 16    address public timelock_address;\n\n 26        address _timelock_address,\n\n 34      timelock_address = _timelock_address;\n\n 41        require(msg.sender == timelock_address || msg.sender == owner, \"Not owner or timelock\");\n\n 94    function setTimelock(address _timelock_address) public onlyByOwnGov {\n 95        require(_timelock_address != address(0), \"Zero address detected\");\n 96        timelock_address = _timelock_address;\n 97        emit TimelockChanged(_timelock_address);\n 98    }\n\n106    event TimelockChanged(address timelock_address);\n```\n\n```solidity\nFile: /src/frxETH.sol\n\n38      address _timelock_address\n\n40    ERC20PermitPermissionedMint(_creator_address, _timelock_address, \"Frax Ether\", \"frxETH\")\n```\n\n```solidity\nFile: /src/OperatorRegistry.sol\n\n 38    address public timelock_address;\n\n 40    constructor(address _owner, address _timelock_address, bytes memory _withdrawal_pubkey) Owned(_owner) {\n 41        timelock_address = _timelock_address;\n\n 46        require(msg.sender == timelock_address || msg.sender == owner, \"Not owner or timelock\");\n\n202    function setTimelock(address _timelock_address) external onlyByOwnGov {\n203        require(_timelock_address != address(0), \"Zero address detected\");\n204        timelock_address = _timelock_address;\n205        emit TimelockChanged(_timelock_address);\n206    }\n\n208    event TimelockChanged(address timelock_address);\n```\n\n```solidity\nFile: /src/frxETHMinter.sol\n\n57        address _timelock_address,\n\n59    ) OperatorRegistry(_owner, _timelock_address, _withdrawalCredential) {\n```\n\n## Non-Critical Issues\n\n|     | Issue                                                                             | Instances |\n| :----: | :-------------------------------------------------------------------------------- | :-------: |\n| N‑01 | Unused imports                                                                    |     2     |\n| N‑02 | Non-library/interface files should use fixed compiler versions, not floating ones |     6     |\n| N‑03 | Lint                                                                              |     11    |\n| N‑04 | Event is missing `indexed` fields                                                 |     19    |\n| N‑05 | Functions, parameters and variables in snake case                                 |     31    |\n| N‑06 | Wrong `event` parameter name                                                      |     2     |\n| N‑07 | Simplify `depositWithSignature` function                                          |     1     |\n| N‑08 | Missing zero address checks                                                       |     9     |\n\nTotal: 81 instances over 8 issues\n\n## [N-01] Unused imports\n\n```solidity\nFile: /src/ERC20/ERC20PermitPermissionedMint.sol\n\n4 import \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\";\n\n5 import \"openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\";\n```\n\n## [N‑02] Non-library/interface files should use fixed compiler versions, not floating ones\n\n```solidity\nFile: /src/ERC20/ERC20PermitPermissionedMint.sol\n\n2 pragma solidity ^0.8.0;\n```\n\n```solidity\nFile: /src/frxETH.sol\n\n2 pragma solidity ^0.8.0;\n```\n\n```solidity\nFile: /src/sfrxETH.sol\n\n2 pragma solidity ^0.8.0;\n```\n\n```solidity\nFile: /src/frxETHMinter.sol\n\n2 pragma solidity ^0.8.0;\n```\n\n```solidity\nFile: /src/OperatorRegistry.sol\n\n2 pragma solidity ^0.8.0;\n```\n\n```solidity\nFile: /src/xERC4626.sol\n\n4 pragma solidity ^0.8.0;\n```\n\n## [N‑03] Lint\n\nWrong indentation:\n\n```solidity\nFile: /src/ERC20/ERC20PermitPermissionedMint.sol\n\nFrom:\n30    ERC20(_name, _symbol)\n31    ERC20Permit(_name)\n32    Owned(_creator_address)\nTo:\n30        ERC20(_name, _symbol)\n31        ERC20Permit(_name)\n32        Owned(_creator_address)\n```\n\n```solidity\nFile: /src/frxETH.sol\n\nFrom:\n37      address _creator_address,\n38      address _timelock_address\nTo:\n37        address _creator_address,\n38        address _timelock_address\n\nFrom:\n40    ERC20PermitPermissionedMint(_creator_address, _timelock_address, \"Frax Ether\", \"frxETH\")\nTo:\n40        ERC20PermitPermissionedMint(_creator_address, _timelock_address, \"Frax Ether\", \"frxETH\")\n```\n\nDon't use extra parenthesis:\n\n```solidity\nFile: /src/sfrxETH.sol\n\n70        return (deposit(assets, receiver));\n\n86        return (mint(shares, receiver));\n```\n\nMissed space:\n\n```solidity\nFile: /src/ERC20/ERC20PermitPermissionedMint.sol\n\n84:56        for (uint i = 0; i < minters_array.length; i++){\n```\n\nRemove space:\n\n```solidity\nFile: /src/ERC20/ERC20PermitPermissionedMint.sol\n\n63 \\n\n```\n\n```solidity\nFile: /src/frxETH.sol\n\n34 \\n\n\n42 \\n\n```\n\n```solidity\nFile: /src/sfrxETH.sol\n\n88 \\n\n```\n\n```solidity\nFile: /src/OperatorRegistry.sol\n\n29 \\n\n```\n\n## [N‑04] Event is missing `indexed` fields\n\nIndex event fields make the field more quickly accessible to off-chain tools that parse events. However, note that each index field costs extra gas during emission, so it's not necessarily best to index the maximum allowed per event (three fields). Each `event` should use three `indexed` fields if there are three or more fields, and gas usage is not particularly of concern for the events in question. If there are fewer than three fields, all of the fields should be indexed.\n\n```solidity\nFile: /src/frxETHMinter.sol\n\n205    event EmergencyEtherRecovered(uint256 amount);\n\n206    event EmergencyERC20Recovered(address tokenAddress, uint256 tokenAmount);\n\n207    event ETHSubmitted(address indexed sender, address indexed recipient, uint256 sent_amount, uint256 withheld_amt);\n\n208    event DepositEtherPaused(bool new_status);\n\n209    event DepositSent(bytes indexed pubKey, bytes withdrawalCredential);\n\n210    event SubmitPaused(bool new_status);\n\n211    event WithheldETHMoved(address indexed to, uint256 amount);\n\n212    event WithholdRatioSet(uint256 newRatio);\n```\n\n```solidity\nFile: /src/OperatorRegistry.sol\n\n208    event TimelockChanged(address timelock_address);\n\n209    event WithdrawalCredentialSet(bytes _withdrawalCredential);\n\n210    event ValidatorAdded(bytes pubKey, bytes withdrawalCredential);\n\n212    event ValidatorRemoved(bytes pubKey, uint256 remove_idx, bool dont_care_about_ordering);\n\n213    event ValidatorsPopped(uint256 times);\n\n214    event ValidatorsSwapped(bytes from_pubKey, bytes to_pubKey, uint256 from_idx, uint256 to_idx);\n```\n\n```solidity\nFile: /src/ERC20/ERC20PermitPermissionedMint.sol\n\n102    event TokenMinterBurned(address indexed from, address indexed to, uint256 amount);\n\n103    event TokenMinterMinted(address indexed from, address indexed to, uint256 amount);\n\n104    event MinterAdded(address minter_address);\n\n105    event MinterRemoved(address minter_address);\n\n106    event TimelockChanged(address timelock_address);\n```\n\n## [N-05] Functions, parameters and variables in snake case\n\nUse camel case for all functions, parameters and variables and snake case for constants\n\n```solidity\nFile: /src/ERC20/ERC20PermitPermissionedMint.sol\n\n 16    address public timelock_address;\n\n 19    address[] public minters_array; // Allowed to mint\n\n 25        address _creator_address,\n\n 26        address _timelock_address,\n\n 53    function minter_burn_from(address b_address, uint256 b_amount) public onlyMinters {\n\n 59    function minter_mint(address m_address, uint256 m_amount) public onlyMinters {\n\n 65    function addMinter(address minter_address) public onlyByOwnGov {\n\n 76    function removeMinter(address minter_address) public onlyByOwnGov {\n\n 94    function setTimelock(address _timelock_address) public onlyByOwnGov {\n\n104    event MinterAdded(address minter_address);\n\n105    event MinterRemoved(address minter_address);\n\n106    event TimelockChanged(address timelock_address);\n```\n\n```solidity\nFile: /src/frxETH.sol\n\n37      address _creator_address,\n\n38      address _timelock_address\n```\n\n```solidity\nFile: /src/frxETHMinter.sol\n\n 57        address _timelock_address,\n\n 78        uint256 sfrxeth_recieved = sfrxETHToken.deposit(msg.value, recipient);\n\n 94        uint256 withheld_amt = 0;\n\n208    event DepositEtherPaused(bool new_status);\n\n210    event SubmitPaused(bool new_status);\n```\n\n```solidity\nFile: /src/OperatorRegistry.sol\n\n 37    bytes curr_withdrawal_pubkey; // Pubkey for ETH 2.0 withdrawal creds. If you change it, you must empty the validators array\n\n 38    address public timelock_address;\n\n 40    constructor(address _owner, address _timelock_address, bytes memory _withdrawal_pubkey) Owned(_owner) {\n\n 69    function swapValidator(uint256 from_idx, uint256 to_idx) public onlyByOwnGov {\n\n 93    function removeValidator(uint256 remove_idx, bool dont_care_about_ordering) public onlyByOwnGov {\n\n 95        bytes memory removed_pubkey = validators[remove_idx].pubKey;\n\n108            Validator[] memory original_validators = validators;\n\n181    function setWithdrawalCredential(bytes memory _new_withdrawal_pubkey) external onlyByOwnGov {\n\n202    function setTimelock(address _timelock_address) external onlyByOwnGov {\n\n208    event TimelockChanged(address timelock_address);\n\n212    event ValidatorRemoved(bytes pubKey, uint256 remove_idx, bool dont_care_about_ordering);\n\n214    event ValidatorsSwapped(bytes from_pubKey, bytes to_pubKey, uint256 from_idx, uint256 to_idx);\n```\n\n## [N-06] Wrong `event` parameter name\n\nReplace `to` parameter of `TokenMinterBurned` event to `minter`\nReplace `from` parameter of `TokenMinterMinted` event to `minter`\n\n```solidity\nFile: /src/ERC20/ERC20PermitPermissionedMint.sol\n\n102    event TokenMinterBurned(address indexed from, address indexed to, uint256 amount);\n103    event TokenMinterMinted(address indexed from, address indexed to, uint256 amount);\n```\n\n## [N-07] Simplify `depositWithSignature` function\n\nThe parameter `approveMax` of `depositWithSignature` function could be removedready, the permit `assets` should be always equal to deposit `assets`\n\nFile: /src/sfrxETH.sol\n\n```solidity\n    /// @notice Approve and deposit() in one transaction\n    function depositWithSignature(\n        uint256 assets,\n        address receiver,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external nonReentrant returns (uint256 shares) {\n        asset.permit(msg.sender, address(this), assets, deadline, v, r, s);\n        return (deposit(assets, receiver));\n    }\n```\n## [N-08] Missing zero address checks\n\n```solidity\nFile: /src/ERC20/ERC20PermitPermissionedMint.sol\n\n26        address _timelock_address,\n```\n\n```solidity\nFile: /src/sfrxETH.sol\n\n42    constructor(ERC20 _underlying, uint32 _rewardsCycleLength)\n```\n\n```solidity\nFile: /src/frxETHMinter.sol\n\n 53        address depositContractAddress,\n\n 54        address frxETHAddress,\n\n 55        address sfrxETHAddress,\n\n 57        address _timelock_address,\n\n 70    function submitAndDeposit(address recipient) external payable returns (uint256 shares) {\n\n166    function moveWithheldETH(address payable to, uint256 amount) external onlyByOwnGov {\n```\n\n```solidity\nFile: /src/OperatorRegistry.sol\n\n/*_timelock_address parameter*/\n40     constructor(address _owner, address _timelock_address, bytes memory _withdrawal_pubkey) Owned(_owner) {\n```\n\n\n***\n\n# Gas Optimizations\n\nFor this contest, 93 reports were submitted by wardens detailing gas optimizations. The [report highlighted below](https://github.com/code-423n4/2022-09-frax-findings/issues/157) by **pfapostol** received the top score from the judge.\n\n*The following wardens also submitted reports: [IllIllI](https://github.com/code-423n4/2022-09-frax-findings/issues/177), [ReyAdmirado](https://github.com/code-423n4/2022-09-frax-findings/issues/86), [ajtra](https://github.com/code-423n4/2022-09-frax-findings/issues/118), [0xSmartContract](https://github.com/code-423n4/2022-09-frax-findings/issues/232), [JC](https://github.com/code-423n4/2022-09-frax-findings/issues/383), [Rolezn](https://github.com/code-423n4/2022-09-frax-findings/issues/121), [rotcivegaf](https://github.com/code-423n4/2022-09-frax-findings/issues/154), [c3phas](https://github.com/code-423n4/2022-09-frax-findings/issues/359), [oyc\\_109](https://github.com/code-423n4/2022-09-frax-findings/issues/10), [Bnke0x0](https://github.com/code-423n4/2022-09-frax-findings/issues/31), [\\_\\_141345\\_\\_](https://github.com/code-423n4/2022-09-frax-findings/issues/111), [TomJ](https://github.com/code-423n4/2022-09-frax-findings/issues/238), [ret2basic](https://github.com/code-423n4/2022-09-frax-findings/issues/251), [Sm4rty](https://github.com/code-423n4/2022-09-frax-findings/issues/253), [prasantgupta52](https://github.com/code-423n4/2022-09-frax-findings/issues/309), [Aymen0909](https://github.com/code-423n4/2022-09-frax-findings/issues/322), [Diana](https://github.com/code-423n4/2022-09-frax-findings/issues/331), [cryptostellar5](https://github.com/code-423n4/2022-09-frax-findings/issues/335), [SnowMan](https://github.com/code-423n4/2022-09-frax-findings/issues/345), [ch0bu](https://github.com/code-423n4/2022-09-frax-findings/issues/45), [gogo](https://github.com/code-423n4/2022-09-frax-findings/issues/54), [B2](https://github.com/code-423n4/2022-09-frax-findings/issues/159), [peanuts](https://github.com/code-423n4/2022-09-frax-findings/issues/332), [Deivitto](https://github.com/code-423n4/2022-09-frax-findings/issues/379), [medikko](https://github.com/code-423n4/2022-09-frax-findings/issues/397), [0x1f8b](https://github.com/code-423n4/2022-09-frax-findings/issues/29), [zishansami](https://github.com/code-423n4/2022-09-frax-findings/issues/64), [rbserver](https://github.com/code-423n4/2022-09-frax-findings/issues/143), [Rohan16](https://github.com/code-423n4/2022-09-frax-findings/issues/368), [erictee](https://github.com/code-423n4/2022-09-frax-findings/issues/8), [durianSausage](https://github.com/code-423n4/2022-09-frax-findings/issues/323), [d3e4](https://github.com/code-423n4/2022-09-frax-findings/issues/392), [0xNazgul](https://github.com/code-423n4/2022-09-frax-findings/issues/305), [RockingMiles](https://github.com/code-423n4/2022-09-frax-findings/issues/43), [karanctf](https://github.com/code-423n4/2022-09-frax-findings/issues/91), [RaymondFam](https://github.com/code-423n4/2022-09-frax-findings/issues/140), [0xA5DF](https://github.com/code-423n4/2022-09-frax-findings/issues/193), [brgltd](https://github.com/code-423n4/2022-09-frax-findings/issues/228), [natzuu](https://github.com/code-423n4/2022-09-frax-findings/issues/234), [0x040](https://github.com/code-423n4/2022-09-frax-findings/issues/236), [lukris02](https://github.com/code-423n4/2022-09-frax-findings/issues/248), [tnevler](https://github.com/code-423n4/2022-09-frax-findings/issues/261), [got\\_targ](https://github.com/code-423n4/2022-09-frax-findings/issues/262), [Tomio](https://github.com/code-423n4/2022-09-frax-findings/issues/295), [Amithuddar](https://github.com/code-423n4/2022-09-frax-findings/issues/304), [Metatron](https://github.com/code-423n4/2022-09-frax-findings/issues/243), [samruna](https://github.com/code-423n4/2022-09-frax-findings/issues/2), [millersplanet](https://github.com/code-423n4/2022-09-frax-findings/issues/4), [drdr](https://github.com/code-423n4/2022-09-frax-findings/issues/38), [leosathya](https://github.com/code-423n4/2022-09-frax-findings/issues/50), [Waze](https://github.com/code-423n4/2022-09-frax-findings/issues/72), [bulej93](https://github.com/code-423n4/2022-09-frax-findings/issues/82), [jag](https://github.com/code-423n4/2022-09-frax-findings/issues/85), [Satyam\\_Sharma](https://github.com/code-423n4/2022-09-frax-findings/issues/115), [slowmoses](https://github.com/code-423n4/2022-09-frax-findings/issues/170), [ronnyx2017](https://github.com/code-423n4/2022-09-frax-findings/issues/207), [Ocean\\_Sky](https://github.com/code-423n4/2022-09-frax-findings/issues/241), [imare](https://github.com/code-423n4/2022-09-frax-findings/issues/250), [JAGADESH](https://github.com/code-423n4/2022-09-frax-findings/issues/320), [SooYa](https://github.com/code-423n4/2022-09-frax-findings/issues/330), [V\\_B](https://github.com/code-423n4/2022-09-frax-findings/issues/342), [Pheonix](https://github.com/code-423n4/2022-09-frax-findings/issues/26), [neko\\_nyaa](https://github.com/code-423n4/2022-09-frax-findings/issues/98), [sach1r0](https://github.com/code-423n4/2022-09-frax-findings/issues/198), [delfin454000](https://github.com/code-423n4/2022-09-frax-findings/issues/272), [0x4non](https://github.com/code-423n4/2022-09-frax-findings/issues/301), [Fitraldys](https://github.com/code-423n4/2022-09-frax-findings/issues/348), [aysha](https://github.com/code-423n4/2022-09-frax-findings/issues/389), [0xsam](https://github.com/code-423n4/2022-09-frax-findings/issues/7), [ladboy233](https://github.com/code-423n4/2022-09-frax-findings/issues/95), [0x5rings](https://github.com/code-423n4/2022-09-frax-findings/issues/290), [fatherOfBlocks](https://github.com/code-423n4/2022-09-frax-findings/issues/20), [Triangle](https://github.com/code-423n4/2022-09-frax-findings/issues/182), [seyni](https://github.com/code-423n4/2022-09-frax-findings/issues/69), [albincsergo](https://github.com/code-423n4/2022-09-frax-findings/issues/106), [Tagir2003](https://github.com/code-423n4/2022-09-frax-findings/issues/160), [bytera](https://github.com/code-423n4/2022-09-frax-findings/issues/178), [beardofginger](https://github.com/code-423n4/2022-09-frax-findings/issues/184), [PaludoX0](https://github.com/code-423n4/2022-09-frax-findings/issues/276), [Ben](https://github.com/code-423n4/2022-09-frax-findings/issues/288), [Chom](https://github.com/code-423n4/2022-09-frax-findings/issues/315), [rokinot](https://github.com/code-423n4/2022-09-frax-findings/issues/351), [Funen](https://github.com/code-423n4/2022-09-frax-findings/issues/354), [CodingNameKiki](https://github.com/code-423n4/2022-09-frax-findings/issues/356), [asutorufos](https://github.com/code-423n4/2022-09-frax-findings/issues/374), [emrekocak](https://github.com/code-423n4/2022-09-frax-findings/issues/3), [wagmi](https://github.com/code-423n4/2022-09-frax-findings/issues/366), [dharma09](https://github.com/code-423n4/2022-09-frax-findings/issues/71), [0xmatt](https://github.com/code-423n4/2022-09-frax-findings/issues/104), [mics](https://github.com/code-423n4/2022-09-frax-findings/issues/166), [bobirichman](https://github.com/code-423n4/2022-09-frax-findings/issues/168), and [cryptphi](https://github.com/code-423n4/2022-09-frax-findings/issues/187).*\n\n## Gas Optimizations Summary\n\nGas savings are estimated using the gas report of existing `FORGE_GAS_REPORT=true forge test --fork-url https://eth-mainnet.g.alchemy.com/v2/<API>` tests (the sum of all deployment costs and the sum of the costs of calling methods) and may vary depending on the implementation of the fix.<br>\n**Note**: method call evaluations are volatile: `≈ ±500`\n\n|        | Issue                                                                                                                              | Instances | Estimated gas(deployments) | Estimated gas(avg method call) | Estimated gas(min method call) | Estimated gas(max method call) |\n| :----: | :--------------------------------------------------------------------------------------------------------------------------------- | :-------: | :------------------------: | :----------------------------: | :----------------------------: | :----------------------------: |\n|  **G&#8209;01** | Deleting an array element can use a more efficient algorithm                                                                       |     1     |           23 830           |             271 820            |              5 298             |             538 343            |\n|  **G&#8209;02** | Use function instead of modifiers                                                                                                  |     4     |           177 805          |              -990              |              -389              |              1 902             |\n|  **G&#8209;03** | Use custom errors rather than revert()/require() strings to save gas                                                               |     21    |           150 574          |              -123              |               -25              |              -184              |\n|  **G&#8209;04** | Using bools for storage incurs overhead                                                                                            |     3     |           20 221           |              -990              |               266              |             -5 979             |\n|  **G&#8209;05** | Unchecking arithmetics operations that can't underflow/overflow                                                                    |     7     |           18 621           |               503              |               227              |               829              |\n|  **G&#8209;06** | `storage` pointer to a structure is cheaper than copying each value of the structure into `memory`, same for `array` and `mapping` |     1     |            8 208           |              -970              |               106              |              2 487             |\n|  **G&#8209;07** | `x = x + y` is more efficient, than `x += y`                                                                                       |     4     |            5 007           |               87               |               82               |               101              |\n|  **G&#8209;08** | It costs more gas to initialize non-constant/non-immutable variables to zero than to let the default of zero be applied            |     2     |            4 415           |                0               |                0               |                0               |\n|  **G&#8209;09** | Don't compare boolean expressions to boolean literals                                                                              |     3     |            3 006           |              -477              |               43               |               55               |\n| **G&#8209;10** | State variables should be cached in stack variables rather than re-reading them from storage                                       |     1     |             400            |               511              |               -21              |              4 839             |\n|        | **Overall Gas Savings**                                                                                                            |   **47**  |     **419 688**(7,43%)     |       **270 705**(12,18%)      |        **5 474**(0,42%)        |       **539 594**(18,02%)      |\n\n**Total: 47 instances over 10 issues**\n\n***\n\n## [G-01] Deleting an array element can use a more efficient algorithm (1 instance)\n\n*   Deployment. Gas Saved: **23 830**\n\n*   Minumal Method Call. Gas Saved: **5 298**\n\n*   Average Method Call. Gas Saved: **271 820**\n\n*   Maximum Method Call. Gas Saved: **538 343**\n\n### src/OperatorRegistry.sol:[107-116](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L107-L116)\n\n```diff\ndiff --git a/src/OperatorRegistry.sol b/src/OperatorRegistry.sol\nindex f81094c..6732da9 100644\n--- a/src/OperatorRegistry.sol\n+++ b/src/OperatorRegistry.sol\n@@ -104,18 +104,13 @@ contract OperatorRegistry is Owned {\n  104, 104:         }\n  105, 105:         // More gassy, loop\n  106, 106:         else {\n- 107     :-            // Save the original validators\n- 108     :-            Validator[] memory original_validators = validators;\n- 109     :-\n- 110     :-            // Clear the original validators list\n- 111     :-            delete validators;\n- 112     :-\n- 113     :-            // Fill the new validators array with all except the value to remove\n- 114     :-            for (uint256 i = 0; i < original_validators.length; ++i) {\n- 115     :-                if (i != remove_idx) {\n- 116     :-                    validators.push(original_validators[i]);\n+      107:+            uint256 length = validators.length - 1;\n+      108:+            unchecked {\n+      109:+                for (uint256 i = remove_idx; i < length;++i) {\n+      110:+                    validators[i] = validators[i + 1];\n  117, 111:                 }\n  118, 112:             }\n+      113:+            validators.pop();\n  119, 114:         }\n  120, 115:\n  121, 116:         emit ValidatorRemoved(removed_pubkey, remove_idx, dont_care_about_ordering);\n```\n\n***\n\n## [G-02] Use function instead of modifiers (4 instances)\n\n*   Deployment. Gas Saved: **177 805**\n\n*   Minumal Method Call. Gas Saved: **-389**\n\n*   Average Method Call. Gas Saved: **-990**\n\n*   Maximum Method Call. Gas Saved: **1 902**\n\n### src/ERC20/ERC20PermitPermissionedMint.sol:[40](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L40), [45](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L45)\n\n```diff\ndiff --git a/src/ERC20/ERC20PermitPermissionedMint.sol b/src/ERC20/ERC20PermitPermissionedMint.sol\nindex 3bed26d..78da7f1 100644\n--- a/src/ERC20/ERC20PermitPermissionedMint.sol\n+++ b/src/ERC20/ERC20PermitPermissionedMint.sol\n@@ -37,32 +37,33 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {\n   37,  37:\n   38,  38:     /* ========== MODIFIERS ========== */\n   39,  39:\n-  40     :-    modifier onlyByOwnGov() {\n+       40:+    function onlyByOwnGov() private {\n   41,  41:         require(msg.sender == timelock_address || msg.sender == owner, \"Not owner or timelock\");\n-  42     :-        _;\n   43,  42:     }\n   44,  43:\n-  45     :-    modifier onlyMinters() {\n+       44:+    function onlyMinters() private {\n   46,  45:        require(minters[msg.sender] == true, \"Only minters\");\n-  47     :-        _;\n   48,  46:     }\n   49,  47:\n   50,  48:     /* ========== RESTRICTED FUNCTIONS ========== */\n   51,  49:\n   52,  50:     // Used by minters when user redeems\n-  53     :-    function minter_burn_from(address b_address, uint256 b_amount) public onlyMinters {\n+       51:+    function minter_burn_from(address b_address, uint256 b_amount) public {\n+       52:+        onlyMinters();\n   54,  53:         super.burnFrom(b_address, b_amount);\n   55,  54:         emit TokenMinterBurned(b_address, msg.sender, b_amount);\n   56,  55:     }\n   57,  56:\n   58,  57:     // This function is what other minters will call to mint new tokens\n-  59     :-    function minter_mint(address m_address, uint256 m_amount) public onlyMinters {\n+       58:+    function minter_mint(address m_address, uint256 m_amount) public {\n+       59:+        onlyMinters();\n   60,  60:         super._mint(m_address, m_amount);\n   61,  61:         emit TokenMinterMinted(msg.sender, m_address, m_amount);\n   62,  62:     }\n   63,  63:\n   64,  64:     // Adds whitelisted minters\n-  65     :-    function addMinter(address minter_address) public onlyByOwnGov {\n+       65:+    function addMinter(address minter_address) public {\n+       66:+        onlyByOwnGov();\n   66,  67:         require(minter_address != address(0), \"Zero address detected\");\n   67,  68:\n   68,  69:         require(minters[minter_address] == false, \"Address already exists\");\n@@ -73,7 +74,8 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {\n   73,  74:     }\n   74,  75:\n   75,  76:     // Remove a minter\n-  76     :-    function removeMinter(address minter_address) public onlyByOwnGov {\n+       77:+    function removeMinter(address minter_address) public {\n+       78:+        onlyByOwnGov();\n   77,  79:         require(minter_address != address(0), \"Zero address detected\");\n   78,  80:         require(minters[minter_address] == true, \"Address nonexistant\");\n   79,  81:\n@@ -91,7 +93,8 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {\n   91,  93:         emit MinterRemoved(minter_address);\n   92,  94:     }\n   93,  95:\n-  94     :-    function setTimelock(address _timelock_address) public onlyByOwnGov {\n+       96:+    function setTimelock(address _timelock_address) public {\n+       97:+        onlyByOwnGov();\n   95,  98:         require(_timelock_address != address(0), \"Zero address detected\");\n   96,  99:         timelock_address = _timelock_address;\n   97, 100:         emit TimelockChanged(_timelock_address);\n```\n\n### src/OperatorRegistry.sol:[45](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L45)\n\n```diff\ndiff --git a/src/OperatorRegistry.sol b/src/OperatorRegistry.sol\nindex f81094c..fc5d16d 100644\n--- a/src/OperatorRegistry.sol\n+++ b/src/OperatorRegistry.sol\n@@ -42,15 +42,15 @@ contract OperatorRegistry is Owned {\n   42,  42:         curr_withdrawal_pubkey = _withdrawal_pubkey;\n   43,  43:     }\n   44,  44:\n-  45     :-    modifier onlyByOwnGov() {\n+       45:+    function onlyByOwnGov() internal {\n   46,  46:         require(msg.sender == timelock_address || msg.sender == owner, \"Not owner or timelock\");\n-  47     :-        _;\n   48,  47:     }\n   49,  48:\n   50,  49:     /// @notice Add a new validator\n   51,  50:     /** @dev You should verify offchain that the validator is indeed valid before adding it\n   52,  51:         Reason we don't do that here is for gas */\n-  53     :-    function addValidator(Validator calldata validator) public onlyByOwnGov {\n+       52:+    function addValidator(Validator calldata validator) public {\n+       53:+        onlyByOwnGov();\n   54,  54:         validators.push(validator);\n   55,  55:         emit ValidatorAdded(validator.pubKey, curr_withdrawal_pubkey);\n   56,  56:     }\n@@ -58,7 +58,8 @@ contract OperatorRegistry is Owned {\n   58,  58:     /// @notice Add multiple new validators in one function call\n   59,  59:     /** @dev You should verify offchain that the validators are indeed valid before adding them\n   60,  60:         Reason we don't do that here is for gas */\n-  61     :-    function addValidators(Validator[] calldata validatorArray) external onlyByOwnGov {\n+       61:+    function addValidators(Validator[] calldata validatorArray) external {\n+       62:+        onlyByOwnGov();\n   62,  63:         uint arrayLength = validatorArray.length;\n   63,  64:         for (uint256 i = 0; i < arrayLength; ++i) {\n   64,  65:             addValidator(validatorArray[i]);\n@@ -66,7 +67,8 @@ contract OperatorRegistry is Owned {\n   66,  67:     }\n   67,  68:\n   68,  69:     /// @notice Swap the location of one validator with another\n-  69     :-    function swapValidator(uint256 from_idx, uint256 to_idx) public onlyByOwnGov {\n+       70:+    function swapValidator(uint256 from_idx, uint256 to_idx) public {\n+       71:+        onlyByOwnGov();\n   70,  72:         // Get the original values\n   71,  73:         Validator memory fromVal = validators[from_idx];\n   72,  74:         Validator memory toVal = validators[to_idx];\n@@ -79,7 +81,8 @@ contract OperatorRegistry is Owned {\n   79,  81:     }\n   80,  82:\n   81,  83:     /// @notice Remove validators from the end of the validators array, in case they were added in error\n-  82     :-    function popValidators(uint256 times) public onlyByOwnGov {\n+       84:+    function popValidators(uint256 times) public {\n+       85:+        onlyByOwnGov();\n   83,  86:         // Loop through and remove validator entries at the end\n   84,  87:         for (uint256 i = 0; i < times; ++i) {\n   85,  88:             validators.pop();\n@@ -90,7 +93,8 @@ contract OperatorRegistry is Owned {\n   90,  93:\n   91,  94:     /** @notice Remove a validator from the array. If dont_care_about_ordering is true,\n   92,  95:         a swap and pop will occur instead of a more gassy loop */\n-  93     :-    function removeValidator(uint256 remove_idx, bool dont_care_about_ordering) public onlyByOwnGov {\n+       96:+    function removeValidator(uint256 remove_idx, bool dont_care_about_ordering) public {\n+       97:+        onlyByOwnGov();\n   94,  98:         // Get the pubkey for the validator to remove (for informational purposes)\n   95,  99:         bytes memory removed_pubkey = validators[remove_idx].pubKey;\n   96, 100:\n@@ -178,7 +182,8 @@ contract OperatorRegistry is Owned {\n  178, 182:\n  179, 183:     /// @notice Requires empty validator stack as changing withdrawal creds invalidates signature\n  180, 184:     /// @dev May need to call clearValidatorArray() first\n- 181     :-    function setWithdrawalCredential(bytes memory _new_withdrawal_pubkey) external onlyByOwnGov {\n+      185:+    function setWithdrawalCredential(bytes memory _new_withdrawal_pubkey) external {\n+      186:+        onlyByOwnGov();\n  182, 187:         require(numValidators() == 0, \"Clear validator array first\");\n  183, 188:         curr_withdrawal_pubkey = _new_withdrawal_pubkey;\n  184, 189:\n@@ -187,7 +192,8 @@ contract OperatorRegistry is Owned {\n  187, 192:\n  188, 193:     /// @notice Empties the validator array\n  189, 194:     /// @dev Need to do this before setWithdrawalCredential()\n- 190     :-    function clearValidatorArray() external onlyByOwnGov {\n+      195:+    function clearValidatorArray() external {\n+      196:+        onlyByOwnGov();\n  191, 197:         delete validators;\n  192, 198:\n  193, 199:         emit ValidatorArrayCleared();\n@@ -199,7 +205,8 @@ contract OperatorRegistry is Owned {\n  199, 205:     }\n  200, 206:\n  201, 207:     /// @notice Set the timelock contract\n- 202     :-    function setTimelock(address _timelock_address) external onlyByOwnGov {\n+      208:+    function setTimelock(address _timelock_address) external {\n+      209:+        onlyByOwnGov();\n  203, 210:         require(_timelock_address != address(0), \"Zero address detected\");\n  204, 211:         timelock_address = _timelock_address;\n  205, 212:         emit TimelockChanged(_timelock_address);\n```\n\n### src/frxETHMinter.sol:[link](https://github.com/code-423n4/2022-09-frax/blob/main/src/frxETHMinter.sol)\n\n```diff\ndiff --git a/src/frxETHMinter.sol b/src/frxETHMinter.sol\nindex 4565883..2690157 100644\n--- a/src/frxETHMinter.sol\n+++ b/src/frxETHMinter.sol\n@@ -156,14 +156,16 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n  156, 156:\n  157, 157:     /// @param newRatio of ETH that is sent to deposit contract vs withheld, 1e6 precision\n  158, 158:     /// @notice An input of 1e6 results in 100% of Eth deposited, 0% withheld\n- 159     :-    function setWithholdRatio(uint256 newRatio) external onlyByOwnGov {\n+      159:+    function setWithholdRatio(uint256 newRatio) external {\n+      160:+        onlyByOwnGov();\n  160, 161:         require (newRatio <= RATIO_PRECISION, \"Ratio cannot surpass 100%\");\n  161, 162:         withholdRatio = newRatio;\n  162, 163:         emit WithholdRatioSet(newRatio);\n  163, 164:     }\n  164, 165:\n  165, 166:     /// @notice Give the withheld ETH to the \"to\" address\n- 166     :-    function moveWithheldETH(address payable to, uint256 amount) external onlyByOwnGov {\n+      167:+    function moveWithheldETH(address payable to, uint256 amount) external  {\n+      168:+        onlyByOwnGov();\n  167, 169:         require(amount <= currentWithheldETH, \"Not enough withheld ETH in contract\");\n  168, 170:         currentWithheldETH -= amount;\n  169, 171:\n@@ -174,21 +176,24 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n  174, 176:     }\n  175, 177:\n  176, 178:     /// @notice Toggle allowing submites\n- 177     :-    function togglePauseSubmits() external onlyByOwnGov {\n+      179:+    function togglePauseSubmits() external  {\n+      180:+        onlyByOwnGov();\n  178, 181:         submitPaused = !submitPaused;\n  179, 182:\n  180, 183:         emit SubmitPaused(submitPaused);\n  181, 184:     }\n  182, 185:\n  183, 186:     /// @notice Toggle allowing depositing ETH to validators\n- 184     :-    function togglePauseDepositEther() external onlyByOwnGov {\n+      187:+    function togglePauseDepositEther() external {\n+      188:+        onlyByOwnGov();\n  185, 189:         depositEtherPaused = !depositEtherPaused;\n  186, 190:\n  187, 191:         emit DepositEtherPaused(depositEtherPaused);\n  188, 192:     }\n  189, 193:\n  190, 194:     /// @notice For emergencies if something gets stuck\n- 191     :-    function recoverEther(uint256 amount) external onlyByOwnGov {\n+      195:+    function recoverEther(uint256 amount) external {\n+      196:+        onlyByOwnGov();\n  192, 197:         (bool success,) = address(owner).call{ value: amount }(\"\");\n  193, 198:         require(success, \"Invalid transfer\");\n  194, 199:\n@@ -196,7 +201,8 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n  196, 201:     }\n  197, 202:\n  198, 203:     /// @notice For emergencies if someone accidentally sent some ERC20 tokens here\n- 199     :-    function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyByOwnGov {\n+      204:+    function recoverERC20(address tokenAddress, uint256 tokenAmount) external {\n+      205:+        onlyByOwnGov();\n  200, 206:         require(IERC20(tokenAddress).transfer(owner, tokenAmount), \"recoverERC20: Transfer failed\");\n  201, 207:\n  202, 208:         emit EmergencyERC20Recovered(tokenAddress, tokenAmount);\n```\n\n***\n\n## [G-03] Use custom errors rather than revert()/require() strings to save gas (21 instances)\n\n*   Deployment. Gas Saved: **150 574**\n\n*   Minumal Method Call. Gas Saved: **-25**\n\n*   Average Method Call. Gas Saved: **-123**\n\n*   Maximum Method Call. Gas Saved: **-184**\n\nCustom errors are available from solidity version 0.8.4. Custom errors save \\~50 gas each time they're hitby [avoiding having to allocate and store the revert string](https://blog.soliditylang.org/2021/04/21/custom-errors/#errors-in-depth). Not defining the strings also save deployment gas\n\n### src/ERC20/ERC20PermitPermissionedMint.sol:[41](https://github.com/code-423n4/2022-09-frax/blob/main/src/ERC20/ERC20PermitPermissionedMint.sol#L41), [46](https://github.com/code-423n4/2022-09-frax/blob/main/src/ERC20/ERC20PermitPermissionedMint.sol#L46), [66](https://github.com/code-423n4/2022-09-frax/blob/main/src/ERC20/ERC20PermitPermissionedMint.sol#L66), [68](https://github.com/code-423n4/2022-09-frax/blob/main/src/ERC20/ERC20PermitPermissionedMint.sol#L68), [77-78](https://github.com/code-423n4/2022-09-frax/blob/main/src/ERC20/ERC20PermitPermissionedMint.sol#L77-L78), [95](https://github.com/code-423n4/2022-09-frax/blob/main/src/ERC20/ERC20PermitPermissionedMint.sol#L95)\n\n```diff\ndiff --git a/src/ERC20/ERC20PermitPermissionedMint.sol b/src/ERC20/ERC20PermitPermissionedMint.sol\nindex 3bed26d..758ca2a 100644\n--- a/src/ERC20/ERC20PermitPermissionedMint.sol\n+++ b/src/ERC20/ERC20PermitPermissionedMint.sol\n@@ -7,6 +7,13 @@ import \"openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permi\n    7,   7: import \"openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\n    8,   8: import \"../Utils/Owned.sol\";\n    9,   9:\n+       10:+\n+       11:+error ZeroAddressDectected();\n+       12:+error AddresssNonExists();\n+       13:+error AddressAlreadyExists();\n+       14:+error OnlyMinters();\n+       15:+error NotOwnerOrTimelock();\n+       16:+\n   10,  17: /// @title Parent contract for frxETH.sol\n   11,  18: /** @notice Combines Openzeppelin's ERC20Permit and ERC20Burnable with Synthetix's Owned.\n   12,  19:     Also includes a list of authorized minters */\n@@ -38,12 +45,12 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {\n   38,  45:     /* ========== MODIFIERS ========== */\n   39,  46:\n   40,  47:     modifier onlyByOwnGov() {\n-  41     :-        require(msg.sender == timelock_address || msg.sender == owner, \"Not owner or timelock\");\n+       48:+        if(msg.sender != timelock_address && msg.sender != owner) revert NotOwnerOrTimelock();\n   42,  49:         _;\n   43,  50:     }\n   44,  51:\n   45,  52:     modifier onlyMinters() {\n-  46     :-       require(minters[msg.sender] == true, \"Only minters\");\n+       53:+       if(minters[msg.sender] != true) revert OnlyMinters();\n   47,  54:         _;\n   48,  55:     }\n   49,  56:\n@@ -63,9 +70,10 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {\n   63,  70:\n   64,  71:     // Adds whitelisted minters\n   65,  72:     function addMinter(address minter_address) public onlyByOwnGov {\n-  66     :-        require(minter_address != address(0), \"Zero address detected\");\n+       73:+        if(minter_address == address(0)) revert ZeroAddressDectected();\n   67,  74:\n-  68     :-        require(minters[minter_address] == false, \"Address already exists\");\n+       75:+\n+       76:+        if(minters[minter_address] != false) revert AddressAlreadyExists();\n   69,  77:         minters[minter_address] = true;\n   70,  78:         minters_array.push(minter_address);\n   71,  79:\n@@ -74,8 +82,8 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {\n   74,  82:\n   75,  83:     // Remove a minter\n   76,  84:     function removeMinter(address minter_address) public onlyByOwnGov {\n-  77     :-        require(minter_address != address(0), \"Zero address detected\");\n-  78     :-        require(minters[minter_address] == true, \"Address nonexistant\");\n+       85:+        if(minter_address == address(0)) revert ZeroAddressDectected();\n+       86:+        if(minters[minter_address] != true) revert AddresssNonExists();\n   79,  87:\n   80,  88:         // Delete from the mapping\n   81,  89:         delete minters[minter_address];\n@@ -92,7 +100,7 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {\n   92, 100:     }\n   93, 101:\n   94, 102:     function setTimelock(address _timelock_address) public onlyByOwnGov {\n-  95     :-        require(_timelock_address != address(0), \"Zero address detected\");\n+      103:+        if(_timelock_address == address(0)) revert ZeroAddressDectected();\n   96, 104:         timelock_address = _timelock_address;\n   97, 105:         emit TimelockChanged(_timelock_address);\n   98, 106:     }\n```\n\n### src/OperatorRegistry.sol:[46](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L46), [137](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L137), [182](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L182), [203](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L203)\n\n```diff\ndiff --git a/src/OperatorRegistry.sol b/src/OperatorRegistry.sol\nindex f81094c..ac3b7a1 100644\n--- a/src/OperatorRegistry.sol\n+++ b/src/OperatorRegistry.sol\n@@ -23,6 +23,12 @@ pragma solidity ^0.8.0;\n   23,  23:\n   24,  24: import \"./Utils/Owned.sol\";\n   25,  25:\n+       26:+error NotOwnerOrTimelock();\n+       27:+error ClearValidatorArrayFirst();\n+       28:+error ZeroAddressDectected();\n+       29:+error ValidatorStackEmpty();\n+       30:+\n+       31:+\n   26,  32: /// @title Keeps track of validators used for ETH 2.0 staking\n   27,  33: /// @notice A permissioned owner can add and removed them at will\n   28,  34: contract OperatorRegistry is Owned {\n@@ -43,7 +49,7 @@ contract OperatorRegistry is Owned {\n   43,  49:     }\n   44,  50:\n   45,  51:     modifier onlyByOwnGov() {\n-  46     :-        require(msg.sender == timelock_address || msg.sender == owner, \"Not owner or timelock\");\n+       52:+        if(msg.sender != timelock_address && msg.sender != owner) revert NotOwnerOrTimelock();\n   47,  53:         _;\n   48,  54:     }\n   49,  55:\n@@ -134,7 +140,7 @@ contract OperatorRegistry is Owned {\n  134, 140:     {\n  135, 141:         // Make sure there are free validators available\n  136, 142:         uint numVals = numValidators();\n- 137     :-        require(numVals != 0, \"Validator stack is empty\");\n+      143:+        if(numVals == 0) revert ValidatorStackEmpty();\n  138, 144:\n  139, 145:         // Pop the last validator off the array\n  140, 146:         Validator memory popped = validators[numVals - 1];\n@@ -179,7 +185,7 @@ contract OperatorRegistry is Owned {\n  179, 185:     /// @notice Requires empty validator stack as changing withdrawal creds invalidates signature\n  180, 186:     /// @dev May need to call clearValidatorArray() first\n  181, 187:     function setWithdrawalCredential(bytes memory _new_withdrawal_pubkey) external onlyByOwnGov {\n- 182     :-        require(numValidators() == 0, \"Clear validator array first\");\n+      188:+        if(numValidators() != 0) revert ClearValidatorArrayFirst();\n  183, 189:         curr_withdrawal_pubkey = _new_withdrawal_pubkey;\n  184, 190:\n  185, 191:         emit WithdrawalCredentialSet(_new_withdrawal_pubkey);\n@@ -200,7 +206,7 @@ contract OperatorRegistry is Owned {\n  200, 206:\n  201, 207:     /// @notice Set the timelock contract\n  202, 208:     function setTimelock(address _timelock_address) external onlyByOwnGov {\n- 203     :-        require(_timelock_address != address(0), \"Zero address detected\");\n+      209:+        if(_timelock_address == address(0)) revert ZeroAddressDectected();\n  204, 210:         timelock_address = _timelock_address;\n  205, 211:         emit TimelockChanged(_timelock_address);\n  206, 212:     }\n```\n\n### src/frxETHMinter.sol:[79](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L79), [87-88](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L87-L88), [122](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L122), [126](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L126), [140](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L140), [167](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L167), [171](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L171), [193](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L193), [200](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L200)\n\n```diff\ndiff --git a/src/frxETHMinter.sol b/src/frxETHMinter.sol\nindex 4565883..f3b5abe 100644\n--- a/src/frxETHMinter.sol\n+++ b/src/frxETHMinter.sol\n@@ -29,6 +29,17 @@ import \"openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\";\n   29,  29: import { IDepositContract } from \"./DepositContract.sol\";\n   30,  30: import \"./OperatorRegistry.sol\";\n   31,  31:\n+       32:+error InvalidTransferERC20();\n+       33:+error InvalidTransfer();\n+       34:+error NotEnoughWithgeld();\n+       35:+error AlreadyDeposited();\n+       36:+error NotEnoughETH();\n+       37:+error DepositPaused();\n+       38:+error CannotSubmitZero();\n+       39:+error NoSfrxETHReturned();\n+       40:+error SubmitIsPaused();\n+       41:+\n+       42:+\n   32,  43: /// @title Authorized minter contract for frxETH\n   33,  44: /// @notice Accepts user-supplied ETH and converts it to frxETH (submit()), and also optionally inline stakes it for sfrxETH (submitAndDeposit())\n   34,  45: /** @dev Has permission to mint frxETH.\n@@ -76,7 +87,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n   76,  87:\n   77,  88:         // Deposit the frxETH and give the generated sfrxETH to the final recipient\n   78,  89:         uint256 sfrxeth_recieved = sfrxETHToken.deposit(msg.value, recipient);\n-  79     :-        require(sfrxeth_recieved > 0, 'No sfrxETH was returned');\n+       90:+        if(sfrxeth_recieved == 0) revert NoSfrxETHReturned();\n   80,  91:\n   81,  92:         return sfrxeth_recieved;\n   82,  93:     }\n@@ -84,8 +95,8 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n   84,  95:     /// @notice Mint frxETH to the recipient using sender's funds. Internal portion\n   85,  96:     function _submit(address recipient) internal nonReentrant {\n   86,  97:         // Initial pause and value checks\n-  87     :-        require(!submitPaused, \"Submit is paused\");\n-  88     :-        require(msg.value != 0, \"Cannot submit 0\");\n+       98:+        if(submitPaused) revert SubmitIsPaused();\n+       99:+        if(msg.value == 0) revert CannotSubmitZero();\n   89, 100:\n   90, 101:         // Give the sender frxETH\n   91, 102:         frxETHToken.minter_mint(recipient, msg.value);\n@@ -119,11 +130,11 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n  119, 130:     /// @dev Usually a bot will call this periodically\n  120, 131:     function depositEther() external nonReentrant {\n  121, 132:         // Initial pause check\n- 122     :-        require(!depositEtherPaused, \"Depositing ETH is paused\");\n+      133:+        if(depositEtherPaused) revert DepositPaused();\n  123, 134:\n  124, 135:         // See how many deposits can be made. Truncation desired.\n  125, 136:         uint256 numDeposits = (address(this).balance - currentWithheldETH) / DEPOSIT_SIZE;\n- 126     :-        require(numDeposits > 0, \"Not enough ETH in contract\");\n+      137:+        if(numDeposits == 0) revert NotEnoughETH();\n  127, 138:\n  128, 139:         // Give each deposit chunk to an empty validator\n  129, 140:         for (uint256 i = 0; i < numDeposits; ++i) {\n@@ -137,7 +148,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n  137, 148:\n  138, 149:             // Make sure the validator hasn't been deposited into already, to prevent stranding an extra 32 eth\n  139, 150:             // until withdrawals are allowed\n- 140     :-            require(!activeValidators[pubKey], \"Validator already has 32 ETH\");\n+      151:+            if(activeValidators[pubKey]) revert AlreadyDeposited();\n  141, 152:\n  142, 153:             // Deposit the ether in the ETH 2.0 deposit contract\n  143, 154:             depositContract.deposit{value: DEPOSIT_SIZE}(\n@@ -164,11 +175,11 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n  164, 175:\n  165, 176:     /// @notice Give the withheld ETH to the \"to\" address\n  166, 177:     function moveWithheldETH(address payable to, uint256 amount) external onlyByOwnGov {\n- 167     :-        require(amount <= currentWithheldETH, \"Not enough withheld ETH in contract\");\n+      178:+        if(amount > currentWithheldETH) revert NotEnoughWithgeld();\n  168, 179:         currentWithheldETH -= amount;\n  169, 180:\n  170, 181:         (bool success,) = payable(to).call{ value: amount }(\"\");\n- 171     :-        require(success, \"Invalid transfer\");\n+      182:+        if(!success) revert InvalidTransfer();\n  172, 183:\n  173, 184:         emit WithheldETHMoved(to, amount);\n  174, 185:     }\n@@ -190,14 +201,14 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n  190, 201:     /// @notice For emergencies if something gets stuck\n  191, 202:     function recoverEther(uint256 amount) external onlyByOwnGov {\n  192, 203:         (bool success,) = address(owner).call{ value: amount }(\"\");\n- 193     :-        require(success, \"Invalid transfer\");\n+      204:+        if(!success) revert InvalidTransfer();\n  194, 205:\n  195, 206:         emit EmergencyEtherRecovered(amount);\n  196, 207:     }\n  197, 208:\n  198, 209:     /// @notice For emergencies if someone accidentally sent some ERC20 tokens here\n  199, 210:     function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyByOwnGov {\n- 200     :-        require(IERC20(tokenAddress).transfer(owner, tokenAmount), \"recoverERC20: Transfer failed\");\n+      211:+        if(!IERC20(tokenAddress).transfer(owner, tokenAmount)) revert InvalidTransferERC20();\n  201, 212:\n  202, 213:         emit EmergencyERC20Recovered(tokenAddress, tokenAmount);\n  203, 214:     }\n```\n\n### test/frxETHMinter.t.sol\n\n```diff\ndiff --git a/test/frxETHMinter.t.sol b/test/frxETHMinter.t.sol\nindex f4d6265..9529428 100644\n--- a/test/frxETHMinter.t.sol\n+++ b/test/frxETHMinter.t.sol\n@@ -3,7 +3,7 @@ pragma solidity ^0.8.0;\n    3,   3:\n    4,   4: import { Test } from \"forge-std/Test.sol\";\n    5,   5: import { DepositContract } from \"../src/DepositContract.sol\";\n-   6     :-import { frxETHMinter, OperatorRegistry } from \"../src/frxETHMinter.sol\";\n+        6:+import { frxETHMinter, OperatorRegistry, NotEnoughETH, SubmitIsPaused, DepositPaused, ValidatorStackEmpty } from \"../src/frxETHMinter.sol\";\n    7,   7: import { frxETH } from \"../src/frxETH.sol\";\n    8,   8: import { sfrxETH, ERC20 } from \"../src/sfrxETH.sol\";\n    9,   9:\n@@ -223,7 +223,7 @@ contract frxETHMinterTest is Test {\n  223, 223:\n  224, 224:         // Try having the validator deposit.\n  225, 225:         // Should fail due to lack of ETH\n- 226     :-        vm.expectRevert(\"Not enough ETH in contract\");\n+      226:+        vm.expectRevert(NotEnoughETH.selector);\n  227, 227:         minter.depositEther();\n  228, 228:\n  229, 229:         // Deposit last 1 ETH for frxETH, making the total 32.\n@@ -239,7 +239,7 @@ contract frxETHMinterTest is Test {\n  239, 239:\n  240, 240:         // Try having the validator deposit another 32 ETH.\n  241, 241:         // Should fail due to lack of ETH\n- 242     :-        vm.expectRevert(\"Not enough ETH in contract\");\n+      242:+        vm.expectRevert(NotEnoughETH.selector);\n  243, 243:         minter.depositEther();\n  244, 244:\n  245, 245:         // Deposit 32 ETH for frxETH\n@@ -247,14 +247,14 @@ contract frxETHMinterTest is Test {\n  247, 247:\n  248, 248:         // Try having the validator deposit another 32 ETH.\n  249, 249:         // Should fail due to lack of a free validator\n- 250     :-        vm.expectRevert(\"Validator stack is empty\");\n+      250:+        vm.expectRevert(ValidatorStackEmpty.selector);\n  251, 251:         minter.depositEther();\n  252, 252:\n  253, 253:         // Pause submits\n  254, 254:         minter.togglePauseSubmits();\n  255, 255:\n  256, 256:         // Try submitting while paused (should fail)\n- 257     :-        vm.expectRevert(\"Submit is paused\");\n+      257:+        vm.expectRevert(SubmitIsPaused.selector);\n  258, 258:         minter.submit{ value: 1 ether }();\n  259, 259:\n  260, 260:         // Unpause submits\n@@ -264,7 +264,7 @@ contract frxETHMinterTest is Test {\n  264, 264:         minter.togglePauseDepositEther();\n  265, 265:\n  266, 266:         // Try submitting while paused (should fail)\n- 267     :-        vm.expectRevert(\"Depositing ETH is paused\");\n+      267:+        vm.expectRevert(DepositPaused.selector);\n  268, 268:         minter.depositEther();\n  269, 269:\n  270, 270:         // Unpause validator ETH deposits\n@@ -303,7 +303,7 @@ contract frxETHMinterTest is Test {\n  303, 303:\n  304, 304:         // Try having the validator deposit.\n  305, 305:         // Should fail due to lack of ETH because half of it was withheld\n- 306     :-        vm.expectRevert(\"Not enough ETH in contract\");\n+      306:+        vm.expectRevert(NotEnoughETH.selector);\n  307, 307:         minter.depositEther();\n  308, 308:\n  309, 309:         // Deposit another 32 ETH for frxETH.\n```\n\n### test/frxETH_sfrxETH_combo.t.sol\n\n```diff\ndiff --git a/test/frxETH_sfrxETH_combo.t.sol b/test/frxETH_sfrxETH_combo.t.sol\nindex 5fd1612..be1236c 100644\n--- a/test/frxETH_sfrxETH_combo.t.sol\n+++ b/test/frxETH_sfrxETH_combo.t.sol\n@@ -5,7 +5,7 @@ pragma solidity ^0.8.0;\n    5,   5: import { Test } from \"forge-std/Test.sol\";\n    6,   6: import { frxETH } from \"../src/frxETH.sol\";\n    7,   7: import { sfrxETH, ERC20 } from \"../src/sfrxETH.sol\";\n-   8     :-import { frxETHMinter } from \"../src/frxETHMinter.sol\";\n+        8:+import { frxETHMinter, NotEnoughETH, CannotSubmitZero } from \"../src/frxETHMinter.sol\";\n    9,   9: import { SigUtils } from \"../src/Utils/SigUtils.sol\";\n   10,  10:\n   11,  11: contract xERC4626Test is Test {\n@@ -822,7 +822,7 @@ contract xERC4626Test is Test {\n  822, 822:         if (transfer_amount > 0) require(owner.balance > 0, \"No ether. Fork mainnet or get some.\");\n  823, 823:\n  824, 824:         vm.prank(owner);\n- 825     :-        if (transfer_amount == 0) vm.expectRevert(\"Cannot submit 0\");\n+      825:+        if (transfer_amount == 0) vm.expectRevert(CannotSubmitZero.selector);\n  826, 826:         frxETHMinterContract.submitAndDeposit{ value: transfer_amount }(owner);\n  827, 827:\n  828, 828:         assertEq(frxETHtoken.balanceOf(owner), 0); // From original mint\n```\n\n***\n\n## [G-04] Using bools for storage incurs overhead (3 instances)\n\n*   Deployment. Gas Saved: **20 221**\n\n*   Minumal Method Call. Gas Saved: **266**\n\n*   Average Method Call. Gas Saved: **-990**\n\n*   Maximum Method Call. Gas Saved: **-5 979**\n\n<!---->\n\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\nUse uint256(1) and uint256(2) for true/false to avoid a Gwarmaccess (100 gas) for the extra SLOAD, and to avoid Gsset (20000 gas) when changing from 'false' to 'true', after having been 'true' in the past\n\n### src/ERC20/ERC20PermitPermissionedMint.sol:[20](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L20)\n\n```diff\ndiff --git a/src/ERC20/ERC20PermitPermissionedMint.sol b/src/ERC20/ERC20PermitPermissionedMint.sol\nindex 3bed26d..a5d0aab 100644\n--- a/src/ERC20/ERC20PermitPermissionedMint.sol\n+++ b/src/ERC20/ERC20PermitPermissionedMint.sol\n@@ -17,7 +17,7 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {\n   17,  17:\n   18,  18:     // Minters\n   19,  19:     address[] public minters_array; // Allowed to mint\n-  20     :-    mapping(address => bool) public minters; // Mapping is also used for faster verification\n+       20:+    mapping(address => uint256) public minters; // Mapping is also used for faster verification\n   21,  21:\n   22,  22:     /* ========== CONSTRUCTOR ========== */\n   23,  23:\n@@ -43,7 +43,7 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {\n   43,  43:     }\n   44,  44:\n   45,  45:     modifier onlyMinters() {\n-  46     :-       require(minters[msg.sender] == true, \"Only minters\");\n+       46:+       require(minters[msg.sender] == 1, \"Only minters\");\n   47,  47:         _;\n   48,  48:     }\n   49,  49:\n@@ -65,8 +65,8 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {\n   65,  65:     function addMinter(address minter_address) public onlyByOwnGov {\n   66,  66:         require(minter_address != address(0), \"Zero address detected\");\n   67,  67:\n-  68     :-        require(minters[minter_address] == false, \"Address already exists\");\n-  69     :-        minters[minter_address] = true;\n+       68:+        require(minters[minter_address] == 0, \"Address already exists\");\n+       69:+        minters[minter_address] = 1;\n   70,  70:         minters_array.push(minter_address);\n   71,  71:\n   72,  72:         emit MinterAdded(minter_address);\n@@ -75,7 +75,7 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {\n   75,  75:     // Remove a minter\n   76,  76:     function removeMinter(address minter_address) public onlyByOwnGov {\n   77,  77:         require(minter_address != address(0), \"Zero address detected\");\n-  78     :-        require(minters[minter_address] == true, \"Address nonexistant\");\n+       78:+        require(minters[minter_address] == 1, \"Address nonexistant\");\n   79,  79:\n   80,  80:         // Delete from the mapping\n   81,  81:         delete minters[minter_address];\n```\n\n### src/frxETHMinter.sol:[43](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L43), [49-50](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L49-L50)\n\n```diff\ndiff --git a/src/frxETHMinter.sol b/src/frxETHMinter.sol\nindex 4565883..3036cea 100644\n--- a/src/frxETHMinter.sol\n+++ b/src/frxETHMinter.sol\n@@ -40,14 +40,14 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n   40,  40:\n   41,  41:     uint256 public withholdRatio; // What we keep and don't deposit whenever someone submit()'s ETH\n   42,  42:     uint256 public currentWithheldETH; // Needed for internal tracking\n-  43     :-    mapping(bytes => bool) public activeValidators; // Tracks validators (via their pubkeys) that already have 32 ETH in them\n+       43:+    mapping(bytes => uint256) public activeValidators; // Tracks validators (via their pubkeys) that already have 32 ETH in them\n   44,  44:\n   45,  45:     IDepositContract public immutable depositContract; // ETH 2.0 deposit contract\n   46,  46:     frxETH public immutable frxETHToken;\n   47,  47:     IsfrxETH public immutable sfrxETHToken;\n   48,  48:\n-  49     :-    bool public submitPaused;\n-  50     :-    bool public depositEtherPaused;\n+       49:+    uint256 public submitPaused;\n+       50:+    uint256 public depositEtherPaused;\n   51,  51:\n   52,  52:     constructor(\n   53,  53:         address depositContractAddress,\n@@ -84,7 +84,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n   84,  84:     /// @notice Mint frxETH to the recipient using sender's funds. Internal portion\n   85,  85:     function _submit(address recipient) internal nonReentrant {\n   86,  86:         // Initial pause and value checks\n-  87     :-        require(!submitPaused, \"Submit is paused\");\n+       87:+        require(0==submitPaused, \"Submit is paused\");\n   88,  88:         require(msg.value != 0, \"Cannot submit 0\");\n   89,  89:\n   90,  90:         // Give the sender frxETH\n@@ -119,7 +119,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n  119, 119:     /// @dev Usually a bot will call this periodically\n  120, 120:     function depositEther() external nonReentrant {\n  121, 121:         // Initial pause check\n- 122     :-        require(!depositEtherPaused, \"Depositing ETH is paused\");\n+      122:+        require(0==depositEtherPaused, \"Depositing ETH is paused\");\n  123, 123:\n  124, 124:         // See how many deposits can be made. Truncation desired.\n  125, 125:         uint256 numDeposits = (address(this).balance - currentWithheldETH) / DEPOSIT_SIZE;\n@@ -137,7 +137,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n  137, 137:\n  138, 138:             // Make sure the validator hasn't been deposited into already, to prevent stranding an extra 32 eth\n  139, 139:             // until withdrawals are allowed\n- 140     :-            require(!activeValidators[pubKey], \"Validator already has 32 ETH\");\n+      140:+            require(0==activeValidators[pubKey], \"Validator already has 32 ETH\");\n  141, 141:\n  142, 142:             // Deposit the ether in the ETH 2.0 deposit contract\n  143, 143:             depositContract.deposit{value: DEPOSIT_SIZE}(\n@@ -148,7 +148,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n  148, 148:             );\n  149, 149:\n  150, 150:             // Set the validator as used so it won't get an extra 32 ETH\n- 151     :-            activeValidators[pubKey] = true;\n+      151:+            activeValidators[pubKey] = 1;\n  152, 152:\n  153, 153:             emit DepositSent(pubKey, withdrawalCredential);\n  154, 154:         }\n@@ -175,14 +175,14 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n  175, 175:\n  176, 176:     /// @notice Toggle allowing submites\n  177, 177:     function togglePauseSubmits() external onlyByOwnGov {\n- 178     :-        submitPaused = !submitPaused;\n+      178:+        submitPaused = submitPaused==1?0:1;\n  179, 179:\n  180, 180:         emit SubmitPaused(submitPaused);\n  181, 181:     }\n  182, 182:\n  183, 183:     /// @notice Toggle allowing depositing ETH to validators\n  184, 184:     function togglePauseDepositEther() external onlyByOwnGov {\n- 185     :-        depositEtherPaused = !depositEtherPaused;\n+      185:+        depositEtherPaused = depositEtherPaused==1?0:1;\n  186, 186:\n  187, 187:         emit DepositEtherPaused(depositEtherPaused);\n  188, 188:     }\n@@ -205,9 +205,9 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n  205, 205:     event EmergencyEtherRecovered(uint256 amount);\n  206, 206:     event EmergencyERC20Recovered(address tokenAddress, uint256 tokenAmount);\n  207, 207:     event ETHSubmitted(address indexed sender, address indexed recipient, uint256 sent_amount, uint256 withheld_amt);\n- 208     :-    event DepositEtherPaused(bool new_status);\n+      208:+    event DepositEtherPaused(uint256 new_status);\n  209, 209:     event DepositSent(bytes indexed pubKey, bytes withdrawalCredential);\n- 210     :-    event SubmitPaused(bool new_status);\n+      210:+    event SubmitPaused(uint256 new_status);\n  211, 211:     event WithheldETHMoved(address indexed to, uint256 amount);\n  212, 212:     event WithholdRatioSet(uint256 newRatio);\n  213, 213: }\n```\n\n***\n\n## [G-05] Unchecking arithmetics operations that can't underflow/overflow (7 instances)\n\n*   Deployment. Gas Saved: **18 621**\n\n*   Minumal Method Call. Gas Saved: **227**\n\n*   Average Method Call. Gas Saved: **503**\n\n*   Maximum Method Call. Gas Saved: **829**\n\nSolidity version 0.8+ comes with implicit overflow and underflow checks on unsigned integers. When an overflow or an underflow isn't possible (as an example, when a comparison is made before the arithmetic operation), some gas can be saved by using an unchecked block: <https://docs.soliditylang.org/en/v0.8.10/control-structures.html#checked-or-unchecked-arithmetic>\n\n### src/ERC20/ERC20PermitPermissionedMint.sol:[84](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L84)\n\n```diff\ndiff --git a/src/ERC20/ERC20PermitPermissionedMint.sol b/src/ERC20/ERC20PermitPermissionedMint.sol\nindex 3bed26d..25010cb 100644\n--- a/src/ERC20/ERC20PermitPermissionedMint.sol\n+++ b/src/ERC20/ERC20PermitPermissionedMint.sol\n@@ -81,11 +81,14 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {\n   81,  81:         delete minters[minter_address];\n   82,  82:\n   83,  83:         // 'Delete' from the array by setting the address to 0x0\n-  84     :-        for (uint i = 0; i < minters_array.length; i++){\n+       84:+        for (uint i = 0; i < minters_array.length;){\n   85,  85:             if (minters_array[i] == minter_address) {\n   86,  86:                 minters_array[i] = address(0); // This will leave a null in the array and keep the indices the same\n   87,  87:                 break;\n   88,  88:             }\n+       89:+            unchecked {\n+       90:+                ++i;\n+       91:+            }\n   89,  92:         }\n   90,  93:\n   91,  94:         emit MinterRemoved(minter_address);\n```\n\n### src/OperatorRegistry.sol:[63](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L63), [84](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L84), [114](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L114)\n\n```diff\ndiff --git a/src/OperatorRegistry.sol b/src/OperatorRegistry.sol\nindex f81094c..aef4e17 100644\n--- a/src/OperatorRegistry.sol\n+++ b/src/OperatorRegistry.sol\n@@ -60,8 +60,11 @@ contract OperatorRegistry is Owned {\n   60,  60:         Reason we don't do that here is for gas */\n   61,  61:     function addValidators(Validator[] calldata validatorArray) external onlyByOwnGov {\n   62,  62:         uint arrayLength = validatorArray.length;\n-  63     :-        for (uint256 i = 0; i < arrayLength; ++i) {\n+       63:+        for (uint256 i = 0; i < arrayLength;) {\n   64,  64:             addValidator(validatorArray[i]);\n+       65:+            unchecked {\n+       66:+                 ++i;\n+       67:+            }\n   65,  68:         }\n   66,  69:     }\n   67,  70:\n@@ -81,8 +84,11 @@ contract OperatorRegistry is Owned {\n   81,  84:     /// @notice Remove validators from the end of the validators array, in case they were added in error\n   82,  85:     function popValidators(uint256 times) public onlyByOwnGov {\n   83,  86:         // Loop through and remove validator entries at the end\n-  84     :-        for (uint256 i = 0; i < times; ++i) {\n+       87:+        for (uint256 i = 0; i < times;) {\n   85,  88:             validators.pop();\n+       89:+            unchecked {\n+       90:+                 ++i;\n+       91:+            }\n   86,  92:         }\n   87,  93:\n   88,  94:         emit ValidatorsPopped(times);\n@@ -111,10 +117,13 @@ contract OperatorRegistry is Owned {\n  111, 117:             delete validators;\n  112, 118:\n  113, 119:             // Fill the new validators array with all except the value to remove\n- 114     :-            for (uint256 i = 0; i < original_validators.length; ++i) {\n+      120:+            for (uint256 i = 0; i < original_validators.length;) {\n  115, 121:                 if (i != remove_idx) {\n  116, 122:                     validators.push(original_validators[i]);\n  117, 123:                 }\n+      124:+                unchecked {\n+      125:+                     ++i;\n+      126:+                }\n  118, 127:             }\n  119, 128:         }\n  120, 129:\n```\n\n### src/frxETHMinter.sol:[96](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L96), [129](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L129)\n\n```diff\ndiff --git a/src/frxETHMinter.sol b/src/frxETHMinter.sol\nindex 4565883..4cee757 100644\n--- a/src/frxETHMinter.sol\n+++ b/src/frxETHMinter.sol\n@@ -93,7 +93,9 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n   93,  93:         // Track the amount of ETH that we are keeping\n   94,  94:         uint256 withheld_amt = 0;\n   95,  95:         if (withholdRatio != 0) {\n-  96     :-            withheld_amt = (msg.value * withholdRatio) / RATIO_PRECISION;\n+       96:+            unchecked {\n+       97:+                withheld_amt = (msg.value * withholdRatio) / RATIO_PRECISION;\n+       98:+            }\n   97,  99:             currentWithheldETH += withheld_amt;\n   98, 100:         }\n   99, 101:\n@@ -126,7 +128,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n  126, 128:         require(numDeposits > 0, \"Not enough ETH in contract\");\n  127, 129:\n  128, 130:         // Give each deposit chunk to an empty validator\n- 129     :-        for (uint256 i = 0; i < numDeposits; ++i) {\n+      131:+        for (uint256 i = 0; i < numDeposits;) {\n  130, 132:             // Get validator information\n  131, 133:             (\n  132, 134:                 bytes memory pubKey,\n@@ -151,6 +153,9 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n  151, 153:             activeValidators[pubKey] = true;\n  152, 154:\n  153, 155:             emit DepositSent(pubKey, withdrawalCredential);\n+      156:+            unchecked {\n+      157:+                 ++i;\n+      158:+            }\n  154, 159:         }\n  155, 160:     }\n  156, 161:\n```\n\n***\n\n## [G-06] `storage` pointer to a structure is cheaper than copying each value of the structure into `memory`, same for `array` and `mapping` (1 instance)\n\n*   Deployment. Gas Saved: **8 208**\n\n*   Minumal Method Call. Gas Saved: **106**\n\n*   Average Method Call. Gas Saved: **-970**\n\n*   Maximum Method Call. Gas Saved: **2 487**\n\n### src/OperatorRegistry.sol:[161](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/OperatorRegistry.sol#L161)\n\n```diff\ndiff --git a/src/OperatorRegistry.sol b/src/OperatorRegistry.sol\nindex f81094c..b7b094d 100644\n--- a/src/OperatorRegistry.sol\n+++ b/src/OperatorRegistry.sol\n@@ -158,7 +158,7 @@ contract OperatorRegistry is Owned {\n  158, 158:             bytes32 depositDataRoot\n  159, 159:         )\n  160, 160:     {\n- 161     :-        Validator memory v = validators[i];\n+      161:+        Validator storage v = validators[i];\n  162, 162:\n  163, 163:         // Return the validator's information\n  164, 164:         pubKey = v.pubKey;\n```\n\n***\n\n## [G-07] `x = x + y` is more efficient, than `x += y` (4 instances)\n\n*   Deployment. Gas Saved: **5 007**\n\n*   Minumal Method Call. Gas Saved: **82**\n\n*   Average Method Call. Gas Saved: **87**\n\n*   Maximum Method Call. Gas Saved: **101**\n\n### src/frxETHMinter.sol:[97](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L97), [168](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L168)\n\n```diff\ndiff --git a/src/frxETHMinter.sol b/src/frxETHMinter.sol\nindex 4565883..a591be9 100644\n--- a/src/frxETHMinter.sol\n+++ b/src/frxETHMinter.sol\n@@ -94,7 +94,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n   94,  94:         uint256 withheld_amt = 0;\n   95,  95:         if (withholdRatio != 0) {\n   96,  96:             withheld_amt = (msg.value * withholdRatio) / RATIO_PRECISION;\n-  97     :-            currentWithheldETH += withheld_amt;\n+       97:+            currentWithheldETH = currentWithheldETH + withheld_amt;\n   98,  98:         }\n   99,  99:\n  100, 100:         emit ETHSubmitted(msg.sender, recipient, msg.value, withheld_amt);\n@@ -165,7 +165,7 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n  165, 165:     /// @notice Give the withheld ETH to the \"to\" address\n  166, 166:     function moveWithheldETH(address payable to, uint256 amount) external onlyByOwnGov {\n  167, 167:         require(amount <= currentWithheldETH, \"Not enough withheld ETH in contract\");\n- 168     :-        currentWithheldETH -= amount;\n+      168:+        currentWithheldETH = currentWithheldETH - amount;\n  169, 169:\n  170, 170:         (bool success,) = payable(to).call{ value: amount }(\"\");\n  171, 171:         require(success, \"Invalid transfer\");\n```\n\n### src/xERC4626.sol:[67](https://github.com/corddry/ERC4626/blob/643cd044fac34bcbf64e1c3790a5126fec0dbec1/src/xERC4626.sol#L67), [72](https://github.com/corddry/ERC4626/blob/643cd044fac34bcbf64e1c3790a5126fec0dbec1/src/xERC4626.sol#L72)\n\n```diff\ndiff --git a/src/xERC4626.sol b/src/xERC4626.sol\nindex a8a4726..dea5982 100644\n--- a/src/xERC4626.sol\n+++ b/src/xERC4626.sol\n@@ -64,12 +64,12 @@ abstract contract xERC4626 is IxERC4626, ERC4626 {\n   64,  64:     // Update storedTotalAssets on withdraw/redeem\n   65,  65:     function beforeWithdraw(uint256 amount, uint256 shares) internal virtual override {\n   66,  66:         super.beforeWithdraw(amount, shares);\n-  67     :-        storedTotalAssets -= amount;\n+       67:+        storedTotalAssets = storedTotalAssets - amount;\n   68,  68:     }\n   69,  69:\n   70,  70:     // Update storedTotalAssets on deposit/mint\n   71,  71:     function afterDeposit(uint256 amount, uint256 shares) internal virtual override {\n-  72     :-        storedTotalAssets += amount;\n+       72:+        storedTotalAssets = storedTotalAssets + amount;\n   73,  73:         super.afterDeposit(amount, shares);\n   74,  74:     }\n   75,  75:\n```\n\n***\n\n## [G-08] It costs more gas to initialize non-constant/non-immutable variables to zero than to let the default of zero be applied (2 instances)\n\n*   Deployment. Gas Saved: **4 415**\n\n*   Minumal Method Call. Gas Saved: **0**\n\n*   Average Method Call. Gas Saved: **0**\n\n*   Maximum Method Call. Gas Saved: **0**\n\nIf a variable is not set/initialized, it is assumed to have the default value (0 for uint, false for bool, address(0) for address...). Explicitly initializing it with its default value is an anti-pattern and wastes gas.\n\n### src/frxETHMinter.sol:[63-64](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L63-L64)\n\n```diff\ndiff --git a/src/frxETHMinter.sol b/src/frxETHMinter.sol\nindex 4565883..b0f66a8 100644\n--- a/src/frxETHMinter.sol\n+++ b/src/frxETHMinter.sol\n@@ -60,8 +60,6 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n   60,  60:         depositContract = IDepositContract(depositContractAddress);\n   61,  61:         frxETHToken = frxETH(frxETHAddress);\n   62,  62:         sfrxETHToken = IsfrxETH(sfrxETHAddress);\n-  63     :-        withholdRatio = 0; // No ETH is withheld initially\n-  64     :-        currentWithheldETH = 0;\n   65,  63:     }\n   66,  64:\n   67,  65:     /// @notice Mint frxETH and deposit it to receive sfrxETH in one transaction\n```\n\n***\n\n## [G-09] Don't compare boolean expressions to boolean literals (3 instances)\n\n*   Deployment. Gas Saved: **3 006**\n\n*   Minumal Method Call. Gas Saved: **43**\n\n*   Average Method Call. Gas Saved: **-477**\n\n*   Maximum Method Call. Gas Saved: **55**\n\n### src/ERC20/ERC20PermitPermissionedMint.sol:[46](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L46), [68](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L68), [78](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/ERC20/ERC20PermitPermissionedMint.sol#L78)\n\n```diff\ndiff --git a/src/ERC20/ERC20PermitPermissionedMint.sol b/src/ERC20/ERC20PermitPermissionedMint.sol\nindex 3bed26d..860d2c4 100644\n--- a/src/ERC20/ERC20PermitPermissionedMint.sol\n+++ b/src/ERC20/ERC20PermitPermissionedMint.sol\n@@ -43,7 +43,7 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {\n   43,  43:     }\n   44,  44:\n   45,  45:     modifier onlyMinters() {\n-  46     :-       require(minters[msg.sender] == true, \"Only minters\");\n+       46:+       require(minters[msg.sender], \"Only minters\");\n   47,  47:         _;\n   48,  48:     }\n   49,  49:\n@@ -65,7 +65,7 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {\n   65,  65:     function addMinter(address minter_address) public onlyByOwnGov {\n   66,  66:         require(minter_address != address(0), \"Zero address detected\");\n   67,  67:\n-  68     :-        require(minters[minter_address] == false, \"Address already exists\");\n+       68:+        require(!minters[minter_address], \"Address already exists\");\n   69,  69:         minters[minter_address] = true;\n   70,  70:         minters_array.push(minter_address);\n   71,  71:\n@@ -75,7 +75,7 @@ contract ERC20PermitPermissionedMint is ERC20Permit, ERC20Burnable, Owned {\n   75,  75:     // Remove a minter\n   76,  76:     function removeMinter(address minter_address) public onlyByOwnGov {\n   77,  77:         require(minter_address != address(0), \"Zero address detected\");\n-  78     :-        require(minters[minter_address] == true, \"Address nonexistant\");\n+       78:+        require(minters[minter_address], \"Address nonexistant\");\n   79,  79:\n   80,  80:         // Delete from the mapping\n   81,  81:         delete minters[minter_address];\n```\n\n***\n\n## [G-10] State variables should be cached in stack variables rather than re-reading them from storage (1 instances)\n\n*   Deployment. Gas Saved: **400**\n\n*   Minumal Method Call. Gas Saved: **-21**\n\n*   Average Method Call. Gas Saved: **511**\n\n*   Maximum Method Call. Gas Saved: **4 839**\n\n### src/frxETHMinter.sol:[95-96](https://github.com/code-423n4/2022-09-frax/blob/55ea6b1ef3857a277e2f47d42029bc0f3d6f9173/src/frxETHMinter.sol#L95-L96)\n\n```diff\ndiff --git a/src/frxETHMinter.sol b/src/frxETHMinter.sol\nindex 4565883..802e94b 100644\n--- a/src/frxETHMinter.sol\n+++ b/src/frxETHMinter.sol\n@@ -92,8 +92,9 @@ contract frxETHMinter is OperatorRegistry, ReentrancyGuard {\n   92,  92:\n   93,  93:         // Track the amount of ETH that we are keeping\n   94,  94:         uint256 withheld_amt = 0;\n-  95     :-        if (withholdRatio != 0) {\n-  96     :-            withheld_amt = (msg.value * withholdRatio) / RATIO_PRECISION;\n+       95:+        uint256 _withholdRatio;\n+       96:+        if ((_withholdRatio = withholdRatio) != 0) {\n+       97:+            withheld_amt = (msg.value * _withholdRatio) / RATIO_PRECISION;\n   97,  98:             currentWithheldETH += withheld_amt;\n   98,  99:         }\n   99, 100:\n```\n\n***\n\n## Overall gas savings\n\n*   Deployment. Gas Saved: **419 688**\n\n*   Minumal Method Call. Gas Saved: **5 474**\n\n*   Average Method Call. Gas Saved: **270 705**\n\n*   Maximum Method Call. Gas Saved: **539 594**\n\nThe result of merging all optimizations\n\n```diff\ndiff --git a/original.txt b/foundry.txt\nindex 83cd313..4a4aaa0 100644\n--- a/original.txt\n+++ b/foundry.txt\n@@ -3,13 +3,13 @@\n ╞════════════════════════════════╪═════════════════╪═══════╪════════╪═══════╪═════════╡\n │ Deployment Cost                ┆ Deployment Size ┆       ┆        ┆       ┆         │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ 1439975                        ┆ 7889            ┆       ┆        ┆       ┆         │\n+│ 1353480                        ┆ 7457            ┆       ┆        ┆       ┆         │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n │ Function Name                  ┆ min             ┆ avg   ┆ median ┆ max   ┆ # calls │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n │ DOMAIN_SEPARATOR               ┆ 365             ┆ 365   ┆ 365    ┆ 365   ┆ 30      │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ addMinter                      ┆ 46593           ┆ 59107 ┆ 68493  ┆ 68493 ┆ 70      │\n+│ addMinter                      ┆ 46508           ┆ 59022 ┆ 68408  ┆ 68408 ┆ 70      │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n │ allowance                      ┆ 826             ┆ 1048  ┆ 826    ┆ 2826  ┆ 9       │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n@@ -19,7 +19,7 @@\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n │ decimals                       ┆ 289             ┆ 289   ┆ 289    ┆ 289   ┆ 40      │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ minter_mint                    ┆ 4906            ┆ 37627 ┆ 50706  ┆ 50706 ┆ 37      │\n+│ minter_mint                    ┆ 4918            ┆ 37639 ┆ 50718  ┆ 50718 ┆ 37      │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n │ nonces                         ┆ 661             ┆ 1751  ┆ 2661   ┆ 2661  ┆ 11      │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n@@ -45,45 +45,45 @@\n ╞════════════════════════════════════════════╪═════════════════╪════════╪════════╪════════╪═════════╡\n │ Deployment Cost                            ┆ Deployment Size ┆        ┆        ┆        ┆         │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ 2575261                                    ┆ 13642           ┆        ┆        ┆        ┆         │\n+│ 2242068                                    ┆ 11990           ┆        ┆        ┆        ┆         │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌\n```\n\n\n\n***\n\n# Disclosures\n\nC4 is an open organization governed by participants in the community.\n\nC4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.\n\nC4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.\n"
}