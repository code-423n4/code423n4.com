{
  "circa": {
    "title": "InsureDAO contest",
    "sponsor": "InsureDAO",
    "slug": "2022-01-insure",
    "date": "2022-03-15",
    "findings": "https://github.com/code-423n4/2022-01-insure-findings/issues",
    "contest": 71
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 code contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the code contest outlined in this document, C4 conducted an analysis of the InsureDAO smart contract system written in Solidity. The code contest took place between January 7—13, 2022.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>40 Wardens contributed reports to the InsureDAO contest:</p>\n<ol>\n<li>WatchPug (<a href=\"https://github.com/jack-the-pug\">jtp</a> and <a href=\"https://github.com/mingwatch\">ming</a>)</li>\n<li><a href=\"https://twitter.com/liam_eastwood13\">leastwood</a></li>\n<li><a href=\"https://twitter.com/cmichelio\">cmichel</a></li>\n<li><a href=\"https://twitter.com/danbinnun\">danb</a></li>\n<li><a href=\"https://twitter.com/SirH4shalot\">sirhashalot</a></li>\n<li><a href=\"https://twitter.com/JustDravee\">Dravee</a></li>\n<li>p4st13r4 (0xb4bb4 and <a href=\"https://github.com/0x69e8\">0x69e8</a>)</li>\n<li><a href=\"https://twitter.com/SolidityDev\">pauliax</a></li>\n<li><a href=\"https://camden.codes\">camden</a></li>\n<li>robee</li>\n<li>hyh</li>\n<li><a href=\"https://twitter.com/defsec_\">defsec</a></li>\n<li>Jujic</li>\n<li>0x1f8b</li>\n<li><a href=\"https://twitter.com/gzeon\">gzeon</a></li>\n<li><a href=\"https://twitter.com/ngndev\">0xngndev</a></li>\n<li><a href=\"https://twitter.com/loop_225\">loop</a></li>\n<li><a href=\"https://twitter.com/_ye0lde\">ye0lde</a></li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li><a href=\"https://github.com/TomAFrench\">TomFrenchBlockchain</a></li>\n<li><a href=\"https://twitter.com/fitraldys\">Fitraldys</a></li>\n<li>cccz</li>\n<li>hubble (ksk2345 and shri4net)</li>\n<li><a href=\"https://twitter.com/meidhiwirara\">Tomio</a></li>\n<li><a href=\"https://tqts.ar/\">tqts</a></li>\n<li><a href=\"https://twitter.com/merkleplant_eth\">pmerkleplant</a></li>\n<li><a href=\"https://twitter.com/onuralanbel\">ospwner</a></li>\n<li>egjlmn1</li>\n<li><a href=\"https://twitter.com/Meta0xNull\">Meta0xNull</a></li>\n<li><a href=\"https://twitter.com/ori_dabush\">OriDabush</a></li>\n<li>0x0x0x</li>\n<li>saian</li>\n<li><a href=\"https://twitter.com/ssolgryn\">solgryn</a></li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li><a href=\"https://twitter.com/KumpirMafyas\">Kumpirmafyas</a></li>\n<li>jayjonah8</li>\n<li>bugwriter001</li>\n</ol>\n<p>This contest was judged by <a href=\"https://github.com/0xean\">0xean (judge)</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/CloudEllie1\">CloudEllie</a> and <a href=\"https://twitter.com/itsmetechjay\">itsmetechjay</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 65 unique vulnerabilities and 178 total findings. All of the issues presented here are linked back to their original finding.</p>\n<p>Of these vulnerabilities, 14 received a risk rating in the category of HIGH severity, 9 received a risk rating in the category of MEDIUM severity, and 42 received a risk rating in the category of LOW severity.</p>\n<p>C4 analysis also identified 15 non-critical recommendations and 98 gas optimizations.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2022-01-insure\">C4 InsureDAO contest repository</a>, and is composed of 10 smart contracts written in the Solidity programming language and includes 2445 source lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code423n4.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-14\" style=\"position:relative;\"><a href=\"#high-risk-findings-14\" aria-label=\"high risk findings 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (14)</h1>\n<h2 id=\"h-01-tokens-can-be-burned-with-no-access-control\" style=\"position:relative;\"><a href=\"#h-01-tokens-can-be-burned-with-no-access-control\" aria-label=\"h 01 tokens can be burned with no access control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/158\">[H-01] Tokens can be burned with no access control</a></h2>\n<p><em>Submitted by sirhashalot</em></p>\n<p>The Vault.sol contract has two address state variables, the <code>keeper</code> variable and the <code>controller</code> variable, which are both permitted to be the zero address. If both variables are zero simultaneously, any address can burn the available funds (available funds = balance - totalDebt) by sending these tokens to the zero address with the unprotected <code>utilitize()</code> function. If a user has no totalDebt, the user can lose their entire underlying token balance because of this.</p>\n<h4 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p>The problematic <code>utilize()</code> function is <a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L342-L352\">found here</a>. To see how the two preconditions can occur:</p>\n<ol>\n<li>The keeper state variable is only changed by the <code>setKeeper()</code> function <a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L502\">found here</a>. If this function is not called, the keeper variable will retain the default value of address(0), which bypasses <a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L344\">the only access control for the utilize function</a>.</li>\n<li>There is a comment <a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L502https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L502\">here on line 69</a> stating the controller state variable can be zero. There is no zero address check for the controller state variable in the Vault constructor.</li>\n</ol>\n<p>If both address variables are left at their defaults of <code>address(0)</code>, then the <code>safeTransfer()</code> call <a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L348\">on line 348</a> would send the tokens to address(0).</p>\n<h4 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Add the following line to the very beginning of the <code>utilize()</code> function:\n<code>require(address(controller) != address(0))</code></p>\n<p>This check is already found in many other functions in Vault.sol, including the <code>_unutilize()</code> function.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/158\">oishun1112 (Insure) confirmed and resolved</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/InsureDAO/pool-contracts/blob/audit/code4rena/contracts/Vault.sol#L382\">https://github.com/InsureDAO/pool-contracts/blob/audit/code4rena/contracts/Vault.sol#L382</a></p>\n</blockquote>\n<h2 id=\"h-02-typo-in-pooltemplate-unlock-function-results-in-user-being-able-to-unlock-multiple-times\" style=\"position:relative;\"><a href=\"#h-02-typo-in-pooltemplate-unlock-function-results-in-user-being-able-to-unlock-multiple-times\" aria-label=\"h 02 typo in pooltemplate unlock function results in user being able to unlock multiple times permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/192\">[H-02] Typo in PoolTemplate unlock function results in user being able to unlock multiple times</a></h2>\n<p><em>Submitted by loop, also found by p4st13r4 and ye0lde</em></p>\n<p>The function <code>unlock()</code> in PoolTemplate has a typo where it compares <code>insurances[_id].status</code> to <code>false</code> rather than setting it to <code>false</code>. If the conditions are met to unlock the funds for an id, the user should be able to call the <code>unlock()</code> function once for that id as <code>insurances[_id].amount</code> is subtracted from <code>lockedAmount</code>. However, since <code>insurances[_id].status</code> does not get set to <code>false</code>, a user can call <code>unlock()</code> multiple times for the same id, resulting in <code>lockedAmount</code> being way smaller than it should be since <code>insurances[_id].amount</code> is subtracted multiple times.</p>\n<h4 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p><code>lockedAmount</code> is used to calculate the amount of underlying tokens available for withdrawals. If <code>lockedAmount</code> is lower than it should be users are able to withdraw more underlying tokens than available for withdrawals.</p>\n<h4 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p>Typo in <code>unlock()</code>:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure/blob/main/contracts/PoolTemplate.sol#L360-L362\">https://github.com/code-423n4/2022-01-insure/blob/main/contracts/PoolTemplate.sol#L360-L362</a></li>\n</ul>\n<p>Calculation of underlying tokens available for withdrawal:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure/blob/main/contracts/PoolTemplate.sol#L836\">https://github.com/code-423n4/2022-01-insure/blob/main/contracts/PoolTemplate.sol#L836</a></li>\n</ul>\n<h4 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Change <code>insurances[_id].status == false;</code> to <code>insurances[_id].status = false;</code></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/192\">oishun1112 (Insure) confirmed and resolved</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/InsureDAO/pool-contracts/blob/audit/code4rena/contracts/PoolTemplate.sol#L375\">https://github.com/InsureDAO/pool-contracts/blob/audit/code4rena/contracts/PoolTemplate.sol#L375</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/192#issuecomment-1023658102\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>upgrading to sev-3 based on assets being compromised. </p>\n</blockquote>\n<h2 id=\"h-03-malicious-market-creators-can-steal-tokens-from-unsuspecting-approved-reference-accounts\" style=\"position:relative;\"><a href=\"#h-03-malicious-market-creators-can-steal-tokens-from-unsuspecting-approved-reference-accounts\" aria-label=\"h 03 malicious market creators can steal tokens from unsuspecting approved reference accounts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/224\">[H-03] Malicious Market Creators Can Steal Tokens From Unsuspecting Approved Reference Accounts</a></h2>\n<p><em>Submitted by leastwood</em></p>\n<p>The current method of market creation involves calling <code>Factory.createMarket()</code> with a list of approved <code>_conditions</code> and <code>_references</code> accounts. If a registered template address has <code>templates[address(_template)].isOpen == true</code>, then any user is able to call <code>createMarket()</code> using this template. If the template points to <code>PoolTemplate.sol</code>, then a malicious market creator can abuse <code>PoolTemplate.initialize()</code> as it makes a vault deposit from an account that they control. The vulnerable internal function, <code>_depositFrom()</code>, makes a vault deposit from the <code>_references[4]</code> address (arbitrarily set to an approved reference address upon market creation).</p>\n<p>Hence, if approved <code>_references</code> accounts have set an unlimited approval amount for <code>Vault.sol</code> before deploying their market, a malicious user can frontrun market creation and cause these tokens to be transferred to the incorrect market.</p>\n<p>This issue can cause honest market creators to have their tokens transferred to an incorrectly configured market, leading to unrecoverable funds. If their approval to <code>Vault.sol</code> was set to the unlimited amount, malicious users will also be able to force honest market creators to transfer more tokens than they would normally want to allow.</p>\n<h4 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/main/contracts/Factory.sol#L158-L231\">https://github.com/code-423n4/2022-01-insure/blob/main/contracts/Factory.sol#L158-L231</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createMarket</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IUniversalMarket</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_template</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_metaData</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_conditions</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_references</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//check eligibility</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">templates</span><span class=\"mtk1\">[</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_template</span><span class=\"mtk1\">)].</span><span class=\"mtk12\">approval</span><span class=\"mtk1\"> == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;ERROR: UNAUTHORIZED_TEMPLATE&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">templates</span><span class=\"mtk1\">[</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_template</span><span class=\"mtk1\">)].</span><span class=\"mtk12\">isOpen</span><span class=\"mtk1\"> == </span><span class=\"mtk4\">false</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">ownership</span><span class=\"mtk1\">.</span><span class=\"mtk11\">owner</span><span class=\"mtk1\">() == </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;ERROR: UNAUTHORIZED_SENDER&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_references</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_references</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">reflist</span><span class=\"mtk1\">[</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_template</span><span class=\"mtk1\">)][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_references</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">reflist</span><span class=\"mtk1\">[</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_template</span><span class=\"mtk1\">)][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">][</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk8\">&quot;ERROR: UNAUTHORIZED_REFERENCE&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_conditions</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_conditions</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">conditionlist</span><span class=\"mtk1\">[</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_template</span><span class=\"mtk1\">)][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_conditions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">conditionlist</span><span class=\"mtk1\">[</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_template</span><span class=\"mtk1\">)][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IRegistry</span><span class=\"mtk1\">(</span><span class=\"mtk12\">registry</span><span class=\"mtk1\">).</span><span class=\"mtk11\">confirmExistence</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_template</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_references</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ) == </span><span class=\"mtk4\">false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IRegistry</span><span class=\"mtk1\">(</span><span class=\"mtk12\">registry</span><span class=\"mtk1\">).</span><span class=\"mtk11\">setExistence</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_template</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_references</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">templates</span><span class=\"mtk1\">[</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_template</span><span class=\"mtk1\">)].</span><span class=\"mtk12\">allowDuplicate</span><span class=\"mtk1\"> == </span><span class=\"mtk4\">false</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;ERROR: DUPLICATE_MARKET&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//create market</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IUniversalMarket</span><span class=\"mtk1\"> </span><span class=\"mtk12\">market</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IUniversalMarket</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_createClone</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_template</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IRegistry</span><span class=\"mtk1\">(</span><span class=\"mtk12\">registry</span><span class=\"mtk1\">).</span><span class=\"mtk11\">supportMarket</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">market</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">markets</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">market</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//initialize</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">market</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_metaData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_conditions</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_references</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MarketCreated</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">market</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_template</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_metaData</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_conditions</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_references</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">market</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/main/contracts/PoolTemplate.sol#L178-L221\">https://github.com/code-423n4/2022-01-insure/blob/main/contracts/PoolTemplate.sol#L178-L221</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_metaData</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_conditions</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_references</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">initialized</span><span class=\"mtk1\"> == </span><span class=\"mtk4\">false</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_metaData</span><span class=\"mtk1\">).</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_references</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_references</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_references</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">] != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_references</span><span class=\"mtk1\">[</span><span class=\"mtk7\">3</span><span class=\"mtk1\">] != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_references</span><span class=\"mtk1\">[</span><span class=\"mtk7\">4</span><span class=\"mtk1\">] != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_conditions</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] &lt;= </span><span class=\"mtk12\">_conditions</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;ERROR: INITIALIZATION_BAD_CONDITIONS&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">initialized</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_name</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">string</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;InsureDAO-&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">IERC20Metadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_references</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">name</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;-PoolInsurance&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_symbol</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">string</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;i-&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">IERC20Metadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_references</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">symbol</span><span class=\"mtk1\">())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_decimals</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20Metadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_references</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">initializeToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_name</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_symbol</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_decimals</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">registry</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IRegistry</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_references</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">parameters</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IParameters</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_references</span><span class=\"mtk1\">[</span><span class=\"mtk7\">3</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vault</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">parameters</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_references</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">]));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">metadata</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_metaData</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">marketStatus</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">MarketStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_conditions</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_depositFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_conditions</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_references</span><span class=\"mtk1\">[</span><span class=\"mtk7\">4</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h4 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h4>\n<p>Manual code review.\nDiscussions with kohshiba.</p>\n<h4 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>After discussions with the sponsor, they have opted to parse a <code>_creator</code> address to <code>PoolTemplate.sol</code> which will act as the depositor and be set to <code>msg.sender</code> in <code>Factory.createMarket()</code>. This will prevent malicious market creators from forcing vault deposits from unsuspecting users who are approved in <code>Factory.sol</code> and have also approved <code>Vault.sol</code> to make transfers on their behalf.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/224\">oishun1112 (Insure) confirmed</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/250\">https://github.com/code-423n4/2022-01-insure-findings/issues/250</a></p>\n</blockquote>\n<h2 id=\"h-04-initial-pool-deposit-can-be-stolen\" style=\"position:relative;\"><a href=\"#h-04-initial-pool-deposit-can-be-stolen\" aria-label=\"h 04 initial pool deposit can be stolen permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/250\">[H-04] Initial pool deposit can be stolen</a></h2>\n<p><em>Submitted by cmichel, also found by WatchPug</em></p>\n<p>Note that the <code>PoolTemplate.initialize</code> function, called when creating a market with <code>Factory.createMarket</code>, calls a vault function to transfer an initial deposit amount (<code>conditions[1]</code>) <em>from</em> the initial depositor (<code>_references[4]</code>):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// PoolTemplate</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_metaData</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_conditions</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_references</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_conditions</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk3\">// @audit vault calls asset.transferFrom(_references[4], vault, _conditions[1])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">_depositFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_conditions</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_references</span><span class=\"mtk1\">[</span><span class=\"mtk7\">4</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_depositFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_from</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_mintAmount</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">marketStatus</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">MarketStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">paused</span><span class=\"mtk1\"> == </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk8\">&quot;ERROR: DEPOSIT_DISABLED&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERROR: DEPOSIT_ZERO&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk12\">_mintAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">worth</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk3\">// @audit vault calls asset.transferFrom(_from, vault, _amount)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addValue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_from</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_mintAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk3\">//mint iToken</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_mintAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The initial depositor needs to first approve the vault contract for the <code>transferFrom</code> to succeed.</p>\n<p>An attacker can then frontrun the <code>Factory.createMarket</code> transaction with their own market creation (it does not have access restrictions) and create a market <em>with different parameters</em> but still passing in <code>_conditions[1]=amount</code> and <code>_references[4]=victim</code>.</p>\n<p>A market with parameters that the initial depositor did not want (different underlying, old whitelisted registry/parameter contract, etc.) can be created with their tokens and these tokens are essentially lost.</p>\n<h4 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Can the initial depositor be set to <code>Factory.createMarket</code>’s <code>msg.sender</code>, instead of being able to pick a whitelisted one as <code>_references[4]</code>?</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/250\">oishun1112 (Insure) confirmed</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/224\">https://github.com/code-423n4/2022-01-insure-findings/issues/224</a></p>\n</blockquote>\n<h2 id=\"h-05-backdoor-in-withdrawredundant\" style=\"position:relative;\"><a href=\"#h-05-backdoor-in-withdrawredundant\" aria-label=\"h 05 backdoor in withdrawredundant permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/252\">[H-05] backdoor in <code>withdrawRedundant</code></a></h2>\n<p><em>Submitted by cmichel, also found by camden, WatchPug, and Ruhum</em></p>\n<p>The <code>Vault.withdrawRedundant</code> has wrong logic that allows the admins to steal the underlying vault token.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawRedundant</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk11\">onlyOwner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">_token</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">) &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_redundant</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">               </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_redundant</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk3\">// @audit they can rug users. let&#39;s say balance == IERC20(token).balanceOf(address(this)) =&gt; first if false =&gt; transfers out everything</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">               </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">               </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h6 id=\"poc\" style=\"position:relative;\"><a href=\"#poc\" aria-label=\"poc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>POC</h6>\n<ul>\n<li>Vault deposits increase as <code>Vault.addValue</code> is called and the <code>balance</code> increases by <code>_amount</code> as well as the actual <code>IERC20(token).balanceOf(this)</code>. Note that <code>balance == IERC20(token).balanceOf(this)</code></li>\n<li>Admins call <code>vault.withdrawRedundant(vault.token(), attacker)</code> which goes into the <code>else if</code> branch due to the balance inequality condition being <code>false</code>. It will transfer out all <code>vault.token()</code> amounts to the attacker.</li>\n</ul>\n<h4 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>There’s a backdoor in the <code>withdrawRedundant</code> that allows admins to steal all user deposits.</p>\n<h4 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>I think the devs wanted this logic from the code instead:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawRedundant</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk11\">onlyOwner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">_token</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">               </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_redundant</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">               </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_redundant</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">               </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">               </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/252\">oishun1112 (Insure) confirmed</a>:</strong></p>\n<blockquote>\n<p>similar to PVE03 (Peckshield audit)\nWe will create a PR and merge after we merge both audit/code4rena and audit/peckshield branches in the InsureDAO repository.</p>\n</blockquote>\n<h2 id=\"h-06-the-first-depositor-to-a-pool-can-drain-all-users\" style=\"position:relative;\"><a href=\"#h-06-the-first-depositor-to-a-pool-can-drain-all-users\" aria-label=\"h 06 the first depositor to a pool can drain all users permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/263\">[H-06] the first depositor to a pool can drain all users</a></h2>\n<p><em>Submitted by danb</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/main/contracts/PoolTemplate.sol#L807\">https://github.com/code-423n4/2022-01-insure/blob/main/contracts/PoolTemplate.sol#L807</a>\nif there is no liquidity in the pool, the first deposit determines the total liquidity, if the amount is too small the minted liquidity for the next liquidity providers will round down to zero.</p>\n<h4 id=\"impact-2\" style=\"position:relative;\"><a href=\"#impact-2\" aria-label=\"impact 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>An attacker can steal all money from liquidity providers.</p>\n<h4 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p>consider the following scenario:\na pool is created.\nthe attacker is the first one to deposit, they deposit with _amount == 1, the smallest amount possible. meaning the total liquidity is 1.\nthen they join another pool in order to get attributions in the vault.\nthey transfer the attributions to the pool using <code>transferAttribution</code>.\nfor example, they transferred 1M dollar worth of attributions.\nthe next person deposits in the index, for example, 500,000 dollars.\n<a href=\"https://github.com/code-423n4/2022-01-insure/blob/main/contracts/PoolTemplate.sol#L803\">https://github.com/code-423n4/2022-01-insure/blob/main/contracts/PoolTemplate.sol#L803</a>\nthe amount they will get is:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">_amount = (_value * _supply) / _originalLiquidity;</span></span></code></pre>\n<p>as we know:\n_amount = 500,000 dollar\n_supply = 1\n_totalLiquidity = 1,000,000 dollar (the attacker transferred directly)\nthe investor will get (500,000 dollar * 1) / (1,000,000 dollar) = 0\nand they will pay 500,000\nthis money will go to the index, and the attacker holds all of the shares, so they can withdraw it and get 1,500,000 stealing 500,000 dollars from the second investor.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/263\">oishun1112 (Insure) acknowledged and disagreed with severity</a>:</strong></p>\n<blockquote>\n<p>yes. Every address that has attributions can call transferAttribution(), however, the address has to call addValue() to earn attributions. addValue() has onlyMarket modifier.\nTo pass onlyMarket modifier, ownership has to be stolen, in short.\nSince we assume ownership control is driven safely, we don’t take this as an issue.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/263#issuecomment-1023330012\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Agree with warden that the privilege addresses should not be able to use approvals in a way that rugs users funds.</p>\n<p>Based on the fact that we have seen many rug pulls in the space based on compromised “owner” keys, this is a valid attack path.</p>\n<p><code>3 — High: Assets can be stolen/lost/compromised directly (or indirectly if there is a valid attack path that does not have hand-wavy hypotheticals).</code></p>\n</blockquote>\n<h2 id=\"h-07-wrong-designimplementation-of-permission-control-allows-maliciouscompromised-registry-or-factory-admin-to-steal-funds-from-users-wallet-balances\" style=\"position:relative;\"><a href=\"#h-07-wrong-designimplementation-of-permission-control-allows-maliciouscompromised-registry-or-factory-admin-to-steal-funds-from-users-wallet-balances\" aria-label=\"h 07 wrong designimplementation of permission control allows maliciouscompromised registry or factory admin to steal funds from users wallet balances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/266\">[H-07] Wrong design/implementation of permission control allows malicious/compromised Registry or Factory admin to steal funds from users’ wallet balances</a></h2>\n<p><em>Submitted by WatchPug</em></p>\n<p>The current design/implementation allows a <code>market</code> address (registered on <code>registry</code>) to call <code>Vault#addValue()</code> and transfer tokens from an arbitrary address to a specified <code>_beneficiary</code> up the approved amount at any time, and the <code>_beneficiary</code> can withdraw the funds by calling <code>Vault#withdrawAllAttribution()</code> immediately.</p>\n<p>This poses a very dangerous risk to all the users that approved their tokens to the Vault contracts (each one holds all users’ allowances for that token).</p>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L52-L58\">https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L52-L58</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMarket</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IRegistry</span><span class=\"mtk1\">(</span><span class=\"mtk12\">registry</span><span class=\"mtk1\">).</span><span class=\"mtk11\">isListed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;ERROR_ONLY_MARKET&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L124-L140\">https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L124-L140</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addValue</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_beneficiary</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMarket</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_attributions</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalAttributions</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_attributions</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_pool</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">valueAll</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_attributions</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">totalAttributions</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">_pool</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_from</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">totalAttributions</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_attributions</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">attributions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_beneficiary</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">_attributions</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Registry owner can call <code>Registry#supportMarket()</code> and mark an arbitrary address as a <code>market</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Registry.sol#L49-L60\">https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Registry.sol#L49-L60</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">supportMarket</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_market</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">markets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_market</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;ERROR: ALREADY_REGISTERED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">factory</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">ownership</span><span class=\"mtk1\">.</span><span class=\"mtk11\">owner</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;ERROR: UNAUTHORIZED_CALLER&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_market</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERROR: ZERO_ADDRESS&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">allMarkets</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_market</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">markets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_market</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NewMarketRegistered</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_market</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Or, the owner of the Factory can call <code>createMarket()</code> to add a malicous market contract via a custom template contract to the <code>markets</code> list.</p>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Factory.sol#L214-L216\">https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Factory.sol#L214-L216</a></p>\n<h4 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p>A malicious/compromised Registry owner can:</p>\n<ol>\n<li>Call <code>Registry#supportMarket()</code> and set <code>markets[attackerAddress]</code> to <code>true</code>;</li>\n<li>Call <code>Vault#addValue(token.balanceOf(victimAddress), victimAddress, attackerAddress)</code> and transferring all the balanceOf victim’s wallet to the vault, owned by <code>attackerAddress</code>.</li>\n<li>Call <code>Vault#withdrawAllAttribution(attackerAddress)</code> and retrive the funds.</li>\n</ol>\n<p>The malicious/compromised Registry owner can repeat the steps above for all the users who approved the Vault contract for all the Vault contracts.</p>\n<p>As a result, the attacker can steal all the wallet balances of the tokens approved to the protocol.</p>\n<h4 id=\"root-cause\" style=\"position:relative;\"><a href=\"#root-cause\" aria-label=\"root cause permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Root Cause</h4>\n<p>Improper access control for using users’ allowances.</p>\n<h4 id=\"recommendation\" style=\"position:relative;\"><a href=\"#recommendation\" aria-label=\"recommendation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h4>\n<p>Consider changing the design/implementation to make sure that the allowances approved by the users can only be used by themselves.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/266\">oishun1112 (Insure) acknowledged and disagreed with severity</a>:</strong></p>\n<blockquote>\n<p>this is an issue only when ownership control has fail. This architecture is necessary to achieve simplicity of the code.\nWe assume ownership control works fine.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/266#issuecomment-1023323992\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Agree with warden that the privilege addresses should not be able to use approvals in a way that rugs users funds. </p>\n<p>Based on the fact that we have seen many rug pulls in the space based on compromised “owner” keys, this is a valid attack path. </p>\n<p><code>3 — High: Assets can be stolen/lost/compromised directly (or indirectly if there is a valid attack path that does not have hand-wavy hypotheticals).</code></p>\n</blockquote>\n<h2 id=\"h-08-indextemplatesolcompensate-will-most-certainly-fail\" style=\"position:relative;\"><a href=\"#h-08-indextemplatesolcompensate-will-most-certainly-fail\" aria-label=\"h 08 indextemplatesolcompensate will most certainly fail permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/269\">[H-08] <code>IndexTemplate.sol#compensate()</code> will most certainly fail</a></h2>\n<p><em>Submitted by WatchPug</em></p>\n<p>Precision loss while converting between <code>the amount of shares</code> and <code>the amount of underlying tokens</code> back and forth is not handled properly.</p>\n<hr>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/IndexTemplate.sol#L438-L447\">https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/IndexTemplate.sol#L438-L447</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_shortage</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalLiquidity</span><span class=\"mtk1\">() &lt; </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//Insolvency case</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_shortage</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_value</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_cds</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ICDSTemplate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">registry</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCDS</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk11\">compensate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_shortage</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_compensated</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_value</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">_cds</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">offsetDebt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_compensated</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>In the current implementation, when someone tries to resume the market after a pending period ends by calling <code>PoolTemplate.sol#resume()</code>, <code>IndexTemplate.sol#compensate()</code> will be called internally to make a payout. If the index pool is unable to cover the compensation, the CDS pool will then be used to cover the shortage.</p>\n<p>However, while <code>CDSTemplate.sol#compensate()</code> takes a parameter for the amount of underlying tokens, it uses <code>vault.transferValue()</code> to transfer corresponding <code>_attributions</code> (shares) instead of underlying tokens.</p>\n<p>Due to precision loss, the <code>_attributions</code> transferred in the terms of underlying tokens will most certainly be less than the shortage.</p>\n<p>At L444, the contract believes that it’s been compensated for <code>_value + _cds</code>, which is lower than the actual value, due to precision loss.</p>\n<p>At L446, when it calls <code>vault.offsetDebt(_compensated, msg.sender)</code>, the tx will revert at <code>require(underlyingValue(msg.sender) >= _amount)</code>.</p>\n<p>As a result, <code>resume()</code> can not be done, and the debt can’t be repaid.</p>\n<h5 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h5>\n<p>Given:</p>\n<ul>\n<li>vault.underlyingValue = 10,000</li>\n<li>vault.valueAll = 30,000</li>\n<li>totalAttributions = 2,000,000</li>\n<li>_amount = 1,010,000</li>\n<li>_shortage = _amount - vault.underlyingValue = 1,000,000</li>\n<li>_attributions = (_amount * totalAttributions) / valueAll = 67,333,333</li>\n<li>actualValueTransfered = (valueAll * _attributions) / totalAttributions = 1009999</li>\n</ul>\n<p><strong>Expected results</strong>: actualValueTransfered = _shortage;</p>\n<p><strong>Actual results</strong>: actualValueTransfered &#x3C; _shortage.</p>\n<h4 id=\"impact-3\" style=\"position:relative;\"><a href=\"#impact-3\" aria-label=\"impact 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>The precision loss isn’t just happening on special numbers, but will most certainly always revert the txs.</p>\n<p>This will malfunction the contract as the index pool can not <code>compensate()</code>, therefore the pool can not <code>resume()</code>. Causing the funds of the LPs of the pool and the index pool to be frozen, and other stakeholders of the same vault will suffer fund loss from an unfair share of the funds compensated before.</p>\n<h4 id=\"recommendation-1\" style=\"position:relative;\"><a href=\"#recommendation-1\" aria-label=\"recommendation 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h4>\n<p>Change to:</p>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/IndexTemplate.sol#L439-L446\">https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/IndexTemplate.sol#L439-L446</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalLiquidity</span><span class=\"mtk1\">() &lt; </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//Insolvency case</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_shortage</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_value</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_cds</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ICDSTemplate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">registry</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCDS</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk11\">compensate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_shortage</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_compensated</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">underlyingValue</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">offsetDebt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_compensated</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/269\">oishun1112 (Insure) confirmed and disagreed with severity</a></strong> </p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/269\">oishun1112 (Insure) resolved</a></strong></p>\n<h2 id=\"h-09-vaultsetcontroller-owner-of-the-vault-contracts-can-drain-funds-from-the-vault\" style=\"position:relative;\"><a href=\"#h-09-vaultsetcontroller-owner-of-the-vault-contracts-can-drain-funds-from-the-vault\" aria-label=\"h 09 vaultsetcontroller owner of the vault contracts can drain funds from the vault permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/271\">[H-09] <code>Vault#setController()</code> owner of the Vault contracts can drain funds from the Vault</a></h2>\n<p><em>Submitted by WatchPug</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L485-L496\">https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L485-L496</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setController</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_controller</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_controller</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERROR_ZERO_ADDRESS&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">controller</span><span class=\"mtk1\">) != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">controller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">migrate</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_controller</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">controller</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IController</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_controller</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">controller</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IController</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_controller</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ControllerSet</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_controller</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The owner of the Vault contract can set an arbitrary address as the <code>controller</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L342-L352\">https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L342-L352</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">utilize</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">keeper</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">keeper</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERROR_NOT_KEEPER&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">available</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">//balance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">controller</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">controller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">earn</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>A malicious <code>controller</code> contract can transfer funds from the Vault to the attacker.</p>\n<h4 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p>A malicious/compromised can:</p>\n<ol>\n<li>\n<p>Call <code>Vault#setController()</code> and set <code>controller</code> to a malicious contract;</p>\n<ul>\n<li>L489 the old controller will transfer funds to the new, malicious controller.</li>\n</ul>\n</li>\n<li>Call <code>Vault#utilize()</code> to deposit all the balance in the Vault contract into the malicious controller contract.</li>\n<li>Withdraw all the funds from the malicious controller contract.</li>\n</ol>\n<h4 id=\"recommendation-2\" style=\"position:relative;\"><a href=\"#recommendation-2\" aria-label=\"recommendation 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h4>\n<p>Consider disallowing <code>Vault#setController()</code> to set a new address if a controller is existing, which terminates the possibility of migrating funds to a specified address provided by the owner. Or, putting a timelock to this function at least.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/271\">oishun1112 (Insure) acknowledged and disagreed with severity</a>:</strong></p>\n<blockquote>\n<p>we assume ownership control is driven safely</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/271#issuecomment-1023326594\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Agree with warden that the privilege addresses should not be able to use approvals in a way that rugs users funds.</p>\n<p>Based on the fact that we have seen many rug pulls in the space based on compromised “owner” keys, this is a valid attack path.\n<code>3 — High: Assets can be stolen/lost/compromised directly (or indirectly if there is a valid attack path that does not have hand-wavy hypotheticals).</code></p>\n</blockquote>\n<h2 id=\"h-10-a-maliciouscompromised-registry-or-factory-admin-can-drain-all-the-funds-from-the-vault-contracts\" style=\"position:relative;\"><a href=\"#h-10-a-maliciouscompromised-registry-or-factory-admin-can-drain-all-the-funds-from-the-vault-contracts\" aria-label=\"h 10 a maliciouscompromised registry or factory admin can drain all the funds from the vault contracts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/272\">[H-10] A malicious/compromised Registry or Factory admin can drain all the funds from the Vault contracts</a></h2>\n<p><em>Submitted by WatchPug</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L52-L58\">https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L52-L58</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMarket</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IRegistry</span><span class=\"mtk1\">(</span><span class=\"mtk12\">registry</span><span class=\"mtk1\">).</span><span class=\"mtk11\">isListed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;ERROR_ONLY_MARKET&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L201-L206\">https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L201-L206</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">borrowValue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMarket</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">debts</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">totalDebt</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The current design/implementation allows a market address (registered on the <code>registry</code>) to call <code>Vault#borrowValue()</code> and transfer tokens to an arbitrary address.</p>\n<h4 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p>See the PoC section on [WP-H24].</p>\n<h4 id=\"recommendation-3\" style=\"position:relative;\"><a href=\"#recommendation-3\" aria-label=\"recommendation 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h4>\n<ol>\n<li>Consider adding constrains (eg. timelock) to <code>Registry#supportMarket()</code>.</li>\n<li>Consdier adding constrains (upper bound for each pool, and index pool for example) to <code>Vault#borrowValue()</code>.</li>\n</ol>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/272\">oishun1112 (Insure) acknowledged and disagreed with severity</a>:</strong></p>\n<blockquote>\n<p>Ownership has to be stolen to drain funds using this method and we assume ownership control driven safely, so we don’t treat this as issue</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/272#issuecomment-1023327233\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Agree with warden that the privilege addresses should not be able to use approvals in a way that rugs users funds.</p>\n<p>Based on the fact that we have seen many rug pulls in the space based on compromised “owner” keys, this is a valid attack path.\n<code>3 — High: Assets can be stolen/lost/compromised directly (or indirectly if there is a valid attack path that does not have hand-wavy hypotheticals).</code></p>\n</blockquote>\n<h2 id=\"h-11-pooltemplatesolresume-wrong-implementation-of-resume-will-compensate-overmuch-redeem-amount-from-index-pools\" style=\"position:relative;\"><a href=\"#h-11-pooltemplatesolresume-wrong-implementation-of-resume-will-compensate-overmuch-redeem-amount-from-index-pools\" aria-label=\"h 11 pooltemplatesolresume wrong implementation of resume will compensate overmuch redeem amount from index pools permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/283\">[H-11] <code>PoolTemplate.sol#resume()</code> Wrong implementation of <code>resume()</code> will compensate overmuch redeem amount from index pools</a></h2>\n<p><em>Submitted by WatchPug, also found by danb</em></p>\n<p>Wrong arithmetic.</p>\n<hr>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/PoolTemplate.sol#L700-L717\">https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/PoolTemplate.sol#L700-L717</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_deductionFromIndex</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_debt</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_totalCredit</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">MAGIC_SCALE_1E6</span><span class=\"mtk1\">) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">totalLiquidity</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_actualDeduction</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">indexList</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_index</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">indexList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_credit</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">indicies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_index</span><span class=\"mtk1\">].</span><span class=\"mtk12\">credit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_credit</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_shareOfIndex</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_credit</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">MAGIC_SCALE_1E6</span><span class=\"mtk1\">) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_totalCredit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_redeemAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_divCeil</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_deductionFromIndex</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_shareOfIndex</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_actualDeduction</span><span class=\"mtk1\"> += </span><span class=\"mtk11\">IIndexTemplate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_index</span><span class=\"mtk1\">).</span><span class=\"mtk11\">compensate</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_redeemAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h4 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<ul>\n<li>totalLiquidity = 200,000* 10**18;</li>\n<li>totalCredit = 100,000 * 10**18;</li>\n<li>debt = 10,000 * 10**18;</li>\n<li>[Index Pool 1] Credit = 20,000 * 10**18;</li>\n<li>[Index Pool 2] Credit = 30,000 * 10**18;</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 _deductionFromIndex = (_debt * _totalCredit * MAGIC_SCALE_1E6) /</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            totalLiquidity();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// _deductionFromIndex = 10,000 * 10**6 * 10**18;</span></span></code></pre>\n<p>[Index Pool 1]:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_shareOfIndex</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_credit</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">MAGIC_SCALE_1E6</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">_totalCredit</span><span class=\"mtk1\">;  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//  _shareOfIndex = 200000</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_redeemAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_divCeil</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_deductionFromIndex</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_shareOfIndex</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// _redeemAmount = 25,000 * 10**18;</span></span></span></code></pre>\n<p>[Index Pool 2]:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_shareOfIndex</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_credit</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">MAGIC_SCALE_1E6</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">_totalCredit</span><span class=\"mtk1\">;  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//  _shareOfIndex = 300000</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_redeemAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_divCeil</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_deductionFromIndex</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_shareOfIndex</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// _redeemAmount = 16666666666666666666667 (~ 16,666 * 10**18)</span></span></span></code></pre>\n<p>In most cases, the transaction will revet on underflow at:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_shortage</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_deductionFromIndex</span><span class=\"mtk1\"> /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">MAGIC_SCALE_1E6</span><span class=\"mtk1\"> -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_actualDeduction</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>In some cases, specific pools will be liable for unfair compensation:</p>\n<p>If the CSD is empty, <code>Index Pool 1</code> only have <code>6,000 * 10**18</code> and <code>Index Pool 2</code> only have <code>4,000 * 10**18</code>, the <code>_actualDeduction</code> will be <code>10,000 * 10**18</code>, <code>_deductionFromPool</code> will be <code>0</code>.</p>\n<p><code>Index Pool 1</code> should only pay <code>1,000 * 10**18</code>, but actually paid <code>6,000 * 10**18</code>, the LPs of <code>Index Pool 1</code> now suffer funds loss.</p>\n<h4 id=\"recommendation-4\" style=\"position:relative;\"><a href=\"#recommendation-4\" aria-label=\"recommendation 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h4>\n<p>Change to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_deductionFromIndex</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_debt</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_totalCredit</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">MAGIC_SCALE_1E6</span><span class=\"mtk1\">) / </span><span class=\"mtk11\">totalLiquidity</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_actualDeduction</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">indexList</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_index</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">indexList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_credit</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">indicies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_index</span><span class=\"mtk1\">].</span><span class=\"mtk12\">credit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_credit</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_shareOfIndex</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_credit</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">MAGIC_SCALE_1E6</span><span class=\"mtk1\">) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_totalCredit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_redeemAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_divCeil</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_deductionFromIndex</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_shareOfIndex</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">MAGIC_SCALE_1E6</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">MAGIC_SCALE_1E6</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_actualDeduction</span><span class=\"mtk1\"> += </span><span class=\"mtk11\">IIndexTemplate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_index</span><span class=\"mtk1\">).</span><span class=\"mtk11\">compensate</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_redeemAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/283\">oishun1112 (Insure) confirmed and resolved</a></strong></p>\n<h2 id=\"h-12-indextemplatesol-wrong-implementation-allows-lp-of-the-index-pool-to-resume-a-locked-payingout-pool-and-escape-the-responsibility-for-the-compensation\" style=\"position:relative;\"><a href=\"#h-12-indextemplatesol-wrong-implementation-allows-lp-of-the-index-pool-to-resume-a-locked-payingout-pool-and-escape-the-responsibility-for-the-compensation\" aria-label=\"h 12 indextemplatesol wrong implementation allows lp of the index pool to resume a locked payingout pool and escape the responsibility for the compensation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/278\">[H-12] <code>IndexTemplate.sol</code> Wrong implementation allows lp of the index pool to resume a locked <code>PayingOut</code> pool and escape the responsibility for the compensation</a></h2>\n<p><em>Submitted by WatchPug, also found by leastwood</em></p>\n<p>Based on the context, the system intends to lock all the lps during PayingOut period.</p>\n<p>However, the current implementation allows anyone, including LPs to call <code>resume()</code> and unlock the index pool.</p>\n<p>It allows a malicious LP to escape the responsibility for the compensation, at the expense of other LPs paying more than expected.</p>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/IndexTemplate.sol#L459-L471\">https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/IndexTemplate.sol#L459-L471</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">resume</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_poolLength</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">poolList</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_poolLength</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">IPoolTemplate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">poolList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">paused</span><span class=\"mtk1\">() == </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;ERROR: POOL_IS_PAUSED&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">locked</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Resumed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h4 id=\"recommendation-5\" style=\"position:relative;\"><a href=\"#recommendation-5\" aria-label=\"recommendation 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h4>\n<p>Change to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">resume</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_poolLength</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">poolList</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_poolLength</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">           </span><span class=\"mtk11\">IPoolTemplate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">poolList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">marketStatus</span><span class=\"mtk1\">() == </span><span class=\"mtk12\">MarketStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">           </span><span class=\"mtk8\">&quot;ERROR: POOL_IS_PAYINGOUT&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   </span><span class=\"mtk12\">locked</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Resumed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/278\">oishun1112 (Insure) confirmed</a></strong></p>\n<h2 id=\"h-13-admin-of-the-index-pool-can-withdrawcredit-after-applycover-to-avoid-taking-loss-for-the-compensation-paid-for-a-certain-pool\" style=\"position:relative;\"><a href=\"#h-13-admin-of-the-index-pool-can-withdrawcredit-after-applycover-to-avoid-taking-loss-for-the-compensation-paid-for-a-certain-pool\" aria-label=\"h 13 admin of the index pool can withdrawcredit after applycover to avoid taking loss for the compensation paid for a certain pool permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/281\">[H-13] Admin of the index pool can <code>withdrawCredit()</code> after <code>applyCover()</code> to avoid taking loss for the compensation paid for a certain pool</a></h2>\n<p><em>Submitted by WatchPug</em></p>\n<p>In the current implementation, when an incident is reported for a certain pool, the index pool can still <code>withdrawCredit()</code> from the pool, which in the best interest of an index pool, the admin of the index pool is preferred to do so.</p>\n<p>This allows the index pool to escape from the responsibility for the risks of invested pools.</p>\n<p>Making the LPs of the pool take an unfair share of the responsibility.</p>\n<h5 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h5>\n<ul>\n<li>Pool A <code>totalCredit</code> = 10,000</li>\n<li>Pool A <code>rewardPerCredit</code> = 1</li>\n<li>[Index Pool 1] allocates 1,000 credits to Pool <code>A</code>:</li>\n<li><code>totalCredit</code> = 11,000</li>\n<li>indicies[Index Pool 1] = 1,000</li>\n<li>After a while, Pool A <code>rewardPerCredit</code> has grown to <code>1.1</code>, and <code>applyCover()</code> has been called, [Index Pool 1] call <code>withdrawCredit()</code> get 100 premium</li>\n<li><code>totalCredit</code> = 10,000</li>\n<li>indicies[Index Pool 1] = 0</li>\n<li>After <code>pendingEnd</code>, the pool <code>resume()</code>,[ Index Pool 1] will not be paying for the compensation since <code>credit</code> is 0.</li>\n</ul>\n<p>In our case, [Index Pool 1] earned premium without paying for a part of the compensation.</p>\n<h4 id=\"recommendation-6\" style=\"position:relative;\"><a href=\"#recommendation-6\" aria-label=\"recommendation 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h4>\n<p>Change to:</p>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/PoolTemplate.sol#L416-L421\">https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/PoolTemplate.sol#L416-L421</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawCredit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_credit</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_pending</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">marketStatus</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">MarketStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;ERROR: WITHDRAW_CREDIT_BAD_CONDITIONS&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IndexInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_index</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">indicies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/281\">oishun1112 (Insure) confirmed and disagreed with severity</a>:</strong></p>\n<blockquote>\n<p>to call PoolTemplate: withdrawCredit(), someone has to call IndexTemplate: withdraw(), set(), and adjustAlloc().</p>\n<p>set() is onlyOwner, so we assume it’s fine()\nadjustAlloc() is public. this clean up and flatten the credit distribution.\nwithdraw() is public. this reduce totalCredit to distribute. when exceed upperSlack, call adjustAlloc().</p>\n<p>We should lock the credit control when pool is in payout status.\nThis implementation, still allows small amount of withdraw, for users who were requested Withdraw.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/281#issuecomment-1027721179\">oishun1112 (Insure) commented</a>:</strong></p>\n<blockquote>\n<p>We have fixed with PVE02 (Peckshield audit) issue together.</p>\n</blockquote>\n<h1 id=\"medium-risk-findings-9\" style=\"position:relative;\"><a href=\"#medium-risk-findings-9\" aria-label=\"medium risk findings 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (9)</h1>\n<h2 id=\"m-01-repaydebt-in-vaultsol-could-dos-functionality-for-markets\" style=\"position:relative;\"><a href=\"#m-01-repaydebt-in-vaultsol-could-dos-functionality-for-markets\" aria-label=\"m 01 repaydebt in vaultsol could dos functionality for markets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/126\">[M-01] repayDebt in Vault.sol could DOS functionality for markets</a></h2>\n<p><em>Submitted by p4st13r4</em></p>\n<p>Any user can pay the debt for any borrower in <code>Vault.sol</code>, by using <code>repayDebt()</code>. This function allows anyone to repay any amount of borrowed value, up-to and including the <code>totalDebt</code> value; it works by setting the <code>debts[_target]</code> to zero, and decreasing <code>totalDebt</code> by the given amount, up to zero. However, all debts of the other borrowers are left untouched.</p>\n<p>If a malicious (but generous) user were to repay the debt for all the borrowers, markets functionality regarding borrowing would be DOSed: the vault would try to decrease the debt of the market, successfully, but would fail to decrease <code>totalDebt</code> as it would result in an underflow</p>\n<h4 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/main/contracts/Vault.sol#L257\">https://github.com/code-423n4/2022-01-insure/blob/main/contracts/Vault.sol#L257</a></p>\n<h4 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Make <code>repayDebt()</code> accept an amount up-to and including the value of the debt for the given borrower</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/126\">oishun1112 (Insure) confirmed</a>:</strong></p>\n<blockquote>\n<p>this needs to be specified how in more detail.</p>\n</blockquote>\n<h2 id=\"m-02-owner-can-call-applycover-multiple-times-in-pooltemplatesol\" style=\"position:relative;\"><a href=\"#m-02-owner-can-call-applycover-multiple-times-in-pooltemplatesol\" aria-label=\"m 02 owner can call applycover multiple times in pooltemplatesol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/160\">[M-02] Owner can call <code>applyCover</code> multiple times in <code>PoolTemplate.sol</code></a></h2>\n<p><em>Submitted by camden</em></p>\n<p>The owner could potentially extend the insurance period indefinitely in the <code>applyCover</code> function without ever allowing the market to resume. This is because there is no check in <code>applyCover</code> to ensure that the market is in a <code>Trading</code> state.</p>\n<p>This can also allow the owner to emit fraudulent <code>MarketStatusChanged</code> events.</p>\n<h4 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Require that the market be in a <code>Trading</code> state to allow another <code>applyCover</code> call.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/160\">oishun1112 (Insure) confirmed and resolved</a>:</strong></p>\n<blockquote>\n<p>this behaviour is not intended, so confirmed.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/160#issuecomment-1023710961\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>upgrading to medium severity since it alters the function of the protocol </p>\n<p><code>2 — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.</code></p>\n</blockquote>\n<h2 id=\"m-03-signature-replay\" style=\"position:relative;\"><a href=\"#m-03-signature-replay\" aria-label=\"m 03 signature replay permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/184\">[M-03] Signature replay</a></h2>\n<p><em>Submitted by 0x1f8b</em></p>\n<p>Signature replay in <code>PoolTemplate</code>.</p>\n<h4 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p>The <code>redeem</code> method of <code>PoolTemplate</code> verifies the data stored in <code>incident</code>, and the verification logic of this process is performed as following:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">MerkleProof</span><span class=\"mtk1\">.</span><span class=\"mtk11\">verify</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_merkleProof</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_targets</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_insurance</span><span class=\"mtk1\">.</span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_insurance</span><span class=\"mtk1\">.</span><span class=\"mtk12\">insured</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">MerkleProof</span><span class=\"mtk1\">.</span><span class=\"mtk11\">verify</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_merkleProof</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_targets</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_insurance</span><span class=\"mtk1\">.</span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;ERROR: INSURANCE_EXEMPTED&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>As can be seen, the only data related to the <code>_insurance</code> are<code>target</code> and <code>insured</code>, so as the incident has no relation with the<code>Insurance</code>, apparently nothing prevents a user to call <code>insure</code> with high amounts, after receive the incident, the only thing that prevents this from being reused is that the owner creates the incident with an <code>_incidentTimestamp</code> from the past.</p>\n<p>So if an owner create a incident from the future it’s possible to create a new <code>insure</code> that could be reused by the same affected address.</p>\n<p>Another lack of input verification that could facilitate this attack is the <code>_span=0</code> in the <code>insure</code> method.</p>\n<h4 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>It is mandatory to add a check in <code>applyCover</code> that<code>_incidentTimestamp</code> is less than the current date and the <code>span</code> argument is greater than 0 in the<code>insure</code> method.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/184\">oishun1112 (Insure) confirmed and resolved, but disagreed with severity</a>:</strong></p>\n<blockquote>\n<p>agree on the _incidentTimestamp check.\ndisagree on span check since there already is</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">require(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            parameters.getMinDate(msg.sender) &lt;= _span,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            &quot;ERROR: INSURE_SPAN_BELOW_MIN&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span></code></pre>\n<p>we are going to set default value of 1week for everyone</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/184#issuecomment-1015081369\">oishun1112 (Insure) commented</a>:</strong></p>\n<blockquote>\n<p>we assume ownership control works fine.\nthis can lose money in-proper way, but not at risk since onlyOwner modifier applied.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/184#issuecomment-1023674000\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>going to leave this as 2 </p>\n<p><code>2 — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.</code></p>\n<p>The external requirement here would be an incorrect timestamp from the owner which would cause assets to be at risk from the replay. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/184#issuecomment-1027599600\">oishun1112 (Insure) commented</a>:</strong></p>\n<blockquote>\n<p>there is</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">_span &gt;= getMinDate() </span></span></code></pre>\n<p>so we don’t implement _span > 0</p>\n</blockquote>\n<h2 id=\"m-04-system-debt-is-not-handled-when-insurance-pools-become-insolvent\" style=\"position:relative;\"><a href=\"#m-04-system-debt-is-not-handled-when-insurance-pools-become-insolvent\" aria-label=\"m 04 system debt is not handled when insurance pools become insolvent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/228\">[M-04] System Debt Is Not Handled When Insurance Pools Become Insolvent</a></h2>\n<p><em>Submitted by leastwood</em></p>\n<p>If an incident has occurred where an insurance policy is to be redeemed. The market is put into the <code>MarketStatus.Payingout</code> mode where the <code>_insurance.insured</code> account is allowed to redeem their cover and receive a payout amount. Upon paying out the insurance cover, any user is able to resume the market by calling <code>PoolTemplate.resume()</code>. This function will compensate the insurance pool if it is insolvent by querying <code>IndexTemplate.compensate()</code> which in turn queries <code>CDSTemplate.compensate()</code> to cover any shortage.</p>\n<p>In the event none of these entities are able to cover the shortage in debt, the system accrues the debt. However, there is currently no mechanism to ensure when <code>transferDebt()</code> is called in <code>PoolTemplate.resume()</code>, the accrued system debt is paid off. Therefore, the system may incorrectly handle insolvency on an extreme edge case, generating system instability.</p>\n<h4 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/main/contracts/PoolTemplate.sol#L691-L734\">https://github.com/code-423n4/2022-01-insure/blob/main/contracts/PoolTemplate.sol#L691-L734</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">resume</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">marketStatus</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">MarketStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Payingout</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">pendingEnd</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;ERROR: UNABLE_TO_RESUME&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_debt</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">debts</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_totalCredit</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalCredit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_deductionFromIndex</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_debt</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_totalCredit</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">MAGIC_SCALE_1E6</span><span class=\"mtk1\">) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">totalLiquidity</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_actualDeduction</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">indexList</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_index</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">indexList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_credit</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">indicies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_index</span><span class=\"mtk1\">].</span><span class=\"mtk12\">credit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_credit</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_shareOfIndex</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_credit</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">MAGIC_SCALE_1E6</span><span class=\"mtk1\">) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_totalCredit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_redeemAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_divCeil</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_deductionFromIndex</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_shareOfIndex</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_actualDeduction</span><span class=\"mtk1\"> += </span><span class=\"mtk11\">IIndexTemplate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_index</span><span class=\"mtk1\">).</span><span class=\"mtk11\">compensate</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_redeemAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_deductionFromPool</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_debt</span><span class=\"mtk1\"> -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_deductionFromIndex</span><span class=\"mtk1\"> /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">MAGIC_SCALE_1E6</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_shortage</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_deductionFromIndex</span><span class=\"mtk1\"> /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">MAGIC_SCALE_1E6</span><span class=\"mtk1\"> -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_actualDeduction</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_deductionFromPool</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">offsetDebt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_deductionFromPool</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferDebt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_shortage</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">marketStatus</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">MarketStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MarketStatusChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">MarketStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Trading</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure/blob/main/contracts/IndexTemplate.sol#L421-L450\">https://github.com/code-423n4/2022-01-insure/blob/main/contracts/IndexTemplate.sol#L421-L450</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure/blob/main/contracts/CDSTemplate.sol#L248-L277\">https://github.com/code-423n4/2022-01-insure/blob/main/contracts/CDSTemplate.sol#L248-L277</a></li>\n</ul>\n<h4 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Consider devising a mechanism to ensure system debt is properly handled. After discussions with the sponsor, it seems that they will be implementing a way to mint <code>INSURE</code> tokens which will be used to cover the shortfall.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/228\">oishun1112 (Insure) acknowledged</a></strong></p>\n<blockquote>\n<p>yes, PoolTemplate calls transferDebt() to make his debt to the system debt in case all Index and CDS layers couldn’t cover the shortage.\nIn this case, we have to repay the system debt somehow since this is the situation that we over-lose money. One way is that someone calls repayDebt() and pay for it (not realistic at all). As we implement the way to payback, we are considering minting INSURE token or, other better mechanism.</p>\n<p>This is not developed yet, and acknowledged.</p>\n</blockquote>\n<h2 id=\"m-05-vaultsol-tokens-with-fee-on-transfer-are-not-supported\" style=\"position:relative;\"><a href=\"#m-05-vaultsol-tokens-with-fee-on-transfer-are-not-supported\" aria-label=\"m 05 vaultsol tokens with fee on transfer are not supported permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/236\">[M-05] <code>Vault.sol</code> Tokens with fee on transfer are not supported</a></h2>\n<p><em>Submitted by WatchPug, also found by pmerkleplant, cmichel, Ruhum, and Dravee</em></p>\n<p>There are ERC20 tokens that charge fee for every <code>transfer()</code> / <code>transferFrom()</code>.</p>\n<p><code>Vault.sol#addValue()</code> assumes that the received amount is the same as the transfer amount, and uses it to calculate attributions, balance amounts, etc. While the actual transferred amount can be lower for those tokens.</p>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L124-L140\">https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L124-L140</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addValue</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_beneficiary</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMarket</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_attributions</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalAttributions</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_attributions</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_pool</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">valueAll</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_attributions</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">totalAttributions</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">_pool</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_from</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">totalAttributions</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_attributions</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">attributions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_beneficiary</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">_attributions</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h4 id=\"recommendation-7\" style=\"position:relative;\"><a href=\"#recommendation-7\" aria-label=\"recommendation 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h4>\n<p>Consider comparing before and after balance to get the actual transferred amount.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/236\">oishun1112 (Insure) acknowledged</a>:</strong></p>\n<blockquote>\n<p>only USDC can be underwriting asset. We are trying to make it multi currency.\nWe won’t implement this now due to the gas consumption, but we will when we develop new type of Vault</p>\n</blockquote>\n<h2 id=\"m-06-index-compensate-is-0-when-totalliquidity-is-enough-to-cover-the-whole-amount\" style=\"position:relative;\"><a href=\"#m-06-index-compensate-is-0-when-totalliquidity-is-enough-to-cover-the-whole-amount\" aria-label=\"m 06 index compensate is 0 when totalliquidity is enough to cover the whole amount permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/354\">[M-06] Index compensate is 0 when totalLiquidity() is enough to cover the whole amount</a></h2>\n<p><em>Submitted by pauliax</em></p>\n<p>In IndexTemplate, function compensate, When <code>\\_amount > \\_value</code>, and <code>&#x3C;= totalLiquidity()</code>, the value of <code>\\_compensated</code> is not set, so it gets a default value of 0:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_value</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_compensated</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalLiquidity</span><span class=\"mtk1\">() &lt; </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_compensated</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_value</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">_cds</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">offsetDebt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_compensated</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>But nevertheless, in both cases, it calls <code>vault.offsetDebt</code>, even when the<code>\\_compensated</code> is 0 (no else block).</p>\n<h4 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>I think, in this case, it should try to redeem the premium (withdrawCredit?) to cover the whole amount, but I am not sure about the intentions as I didn’t have enough time to understand this protocol in depth.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/354\">oishun1112 (Insure) confirmed and resolved</a>:</strong></p>\n<blockquote>\n<p>Right.\ntotalLiquidity = underlyingValue + pendingPremium.</p>\n<p>I will discuss how to fix this issue with my team</p>\n</blockquote>\n<h2 id=\"m-07-requestwithdraw-without-obligation-to-withdraw-allow-underwriter-to-avoid-payout\" style=\"position:relative;\"><a href=\"#m-07-requestwithdraw-without-obligation-to-withdraw-allow-underwriter-to-avoid-payout\" aria-label=\"m 07 requestwithdraw without obligation to withdraw allow underwriter to avoid payout permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/295\">[M-07] <code>requestWithdraw</code> without obligation to withdraw allow underwriter to avoid payout</a></h2>\n<p><em>Submitted by gzeon</em></p>\n<p>To prevent withdrawal front-running, a lockup period is set between withdrawal request and withdrawal. However, there are no obligation to withdraw after the lockup period and the capital will keep earning premium during lockup. A strategy for underwriter is to keep requesting withdrawal every <code>lockup period</code> to keep their average lockup to <code>lockup period/2</code>.</p>\n<h4 id=\"proof-of-concept-13\" style=\"position:relative;\"><a href=\"#proof-of-concept-13\" aria-label=\"proof of concept 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/PoolTemplate.sol#L279\">https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/PoolTemplate.sol#L279</a></p>\n<p>Assuming</p>\n<ol>\n<li>Reporting DAO vote last for 24 hours (according to docs) plus there will be delay between the hack and vote creation</li>\n<li>the <code>lockup period</code> is set to 86400 (24 hours) in the supplied test cases</li>\n</ol>\n<p>It is very likely an underwriter can avoid payout by such strategy since their effective lockup would be 12 hours only. They will continue to earn yield in the pool and only require some extra gas cost for the <code>requestWithdraw</code> every 24 hours.</p>\n<h4 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Extend the lockup period at least by a factor of 2 or force underwriter to withdraw after lockup period.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/295\">oishun1112 (Insure) acknowledged</a>:</strong></p>\n<blockquote>\n<p>Yes, lock up period is going to be like a week~2week in production.</p>\n</blockquote>\n<h2 id=\"m-08-unbounded-iteration-over-all-indexes-2\" style=\"position:relative;\"><a href=\"#m-08-unbounded-iteration-over-all-indexes-2\" aria-label=\"m 08 unbounded iteration over all indexes 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/352\">[M-08] Unbounded iteration over all indexes (2)</a></h2>\n<p><em>Submitted by Dravee, also found by robee, egjlmn1, danb, WatchPug, Fitraldys, and Ruhum</em></p>\n<p>The transactions could fail if the array get too big and the transaction would consume more gas than the block limit.\nThis will then result in a denial of service for the desired functionality and break core functionality.</p>\n<h4 id=\"proof-of-concept-14\" style=\"position:relative;\"><a href=\"#proof-of-concept-14\" aria-label=\"proof of concept 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p><a href=\"https://github.com/code-423n4/2022-01-insure/blob/main/contracts/PoolTemplate.sol#L703\">https://github.com/code-423n4/2022-01-insure/blob/main/contracts/PoolTemplate.sol#L703</a></p>\n<h4 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h4>\n<p>VS Code</p>\n<h4 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Keep the array size small.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/352\">oishun1112 (Insure) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/352#issuecomment-1023645387\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Upgrading to sev-2 as this will eventually affect the availability of the protocol as transactions revert. </p>\n</blockquote>\n<h1 id=\"low-risk-findings-42\" style=\"position:relative;\"><a href=\"#low-risk-findings-42\" aria-label=\"low risk findings 42 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk Findings (42)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/110\">[L-01] Missing validation of address argument could indefinitely lock Registry contract</a> <em>Submitted by defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/120\">[L-02] Lack of inputs in Factory</a> <em>Submitted by 0x1f8b, also found by robee, Dravee, ospwner, hyh, and Meta0xNull</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/128\">[L-03] Wrong revert string in withdraw functions</a> <em>Submitted by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/129\">[L-04] resume() can be called by anyone in IndexTemplate.sol</a> <em>Submitted by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/130\">[L-05] No-op in CDSTemplate.sol’ withdraw()</a> <em>Submitted by p4st13r4, also found by tqts, 0xngndev, cmichel, Fitraldys, and pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/15\">[L-06] Require with empty message</a> <em>Submitted by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/153\">[L-07] No slippage control in CDSTemplate.sol = frontrun or sandwich</a> <em>Submitted by sirhashalot</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/157\">[L-08] Incorrect return value comment</a> <em>Submitted by sirhashalot</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/161\">[L-09] The fund function of the CDSTemplate contract does not match the description</a> <em>Submitted by cccz, also found by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/174\">[L-10] Edge case in withdrawValue may lead to failed transactions</a> <em>Submitted by 0xngndev</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/176\">[L-11] Incorrect Natspec can lead to errors</a> <em>Submitted by 0xngndev</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/18\">[L-12] Named return issue</a> <em>Submitted by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/189\">[L-13] PoolTemplate worth function description is incorrect</a> <em>Submitted by hyh</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/197\">[L-14] Vault. withdrawValue will fail on subtraction if there are not enough _attributions</a> <em>Submitted by hyh</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/198\">[L-15] Factory. createMarket doesn’t check if input array length is too big</a> <em>Submitted by hyh</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/20\">[L-16] Two Steps Verification before Transferring Ownership</a> <em>Submitted by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/21\">[L-17] Assert instead require to validate user inputs</a> <em>Submitted by robee, also found by 0xngndev, defsec, Dravee, hyh, and WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/226\">[L-18] Allowance checks not correctly implemented</a> <em>Submitted by defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/227\">[L-19] Implement check effect interaction to align with best practices</a> <em>Submitted by defsec, also found by sirhashalot</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/229\">[L-20] Improper Upper Bound Definition on the Fee</a> <em>Submitted by defsec, also found by Dravee and pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/242\">[L-21] Inconsistency in pragma solidity version definition in InsureDAOERC20.sol</a> <em>Submitted by hubble, also found by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/243\">[L-22] Input validation not done in few important functions in Parameters.sol</a> <em>Submitted by hubble</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/246\">[L-23] Can create market without some conditions</a> <em>Submitted by cmichel</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/247\">[L-24] Future owner is not cleared</a> <em>Submitted by cmichel</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/248\">[L-25] Lower slack can be higher than upper slack</a> <em>Submitted by cmichel</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/249\">[L-26] Premium payments can be timed</a> <em>Submitted by cmichel</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/259\">[L-27] Keeper, not controller: Vault.setKeeper and utilize descriptions are incorrect</a> <em>Submitted by hyh</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/268\">[L-28] <code>Vault#setController()</code> Lack of validation for the amount of migrated funds</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/270\">[L-29] <code>Vault#_unutilize()</code> Lack of validation for the amount of funds received</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/284\">[L-30] Wrong comment on fund function</a> <em>Submitted by Fitraldys</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/287\">[L-31] Inconsistent divide by 0 checks for <code>totalSupply()</code></a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/296\">[L-32] Spec error on function: <code>Factory:approveTemplate</code></a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/297\">[L-33] Spec error on function: <code>Factory:setCondition</code> (difference with code comment)</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/31\">[L-34] Skip balance check in _beforeTokenTransfer if no withdrawalRequest exists</a> <em>Submitted by TomFrenchBlockchain</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/311\">[L-35] <code>targetLev</code> can be set to 0 in <code>IndexTemplate:setLeverage</code></a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/312\">[L-36] getLockup and getWithdrawable can change after withdrawalReq is initiated</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/314\">[L-37] Validate _to is not empty</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/315\">[L-38] Add a timelock to <code>Parameters:setFeeRate</code></a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/339\">[L-39] Pause check missing on the several functions (PoolTemplate)</a> <em>Submitted by defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/347\">[L-40] Insurance Pool Locking Does Not Propagate To All Markets</a> <em>Submitted by leastwood</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/44\">[L-41] Parameters.sol lacks input validation</a> <em>Submitted by cccz</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/94\">[L-42] Uncontrolled call to controller, which can be the zero address</a> <em>Submitted by camden</em></li>\n</ul>\n<h1 id=\"non-critical-findings-15\" style=\"position:relative;\"><a href=\"#non-critical-findings-15\" aria-label=\"non critical findings 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Non-Critical Findings (15)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/132\">[N-01] Emit an event in setKeeper()</a> <em>Submitted by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/133\">[N-02] In PoolTemplate.sol, deposit() and _depositFrom() can re-use the same code</a> <em>Submitted by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/155\">[N-03] Inaccurate return value from <code>getCDS()</code> possible</a> <em>Submitted by sirhashalot</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/183\">[N-04] anyone can get money from an incident without paying beforehand</a> <em>Submitted by danb</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/212\">[N-05] Race condition on ERC20 approval</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/217\">[N-06] Missing error messages in require statements</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/22\">[N-07] Never used parameters</a> <em>Submitted by robee, also found by sirhashalot</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/65\">[N-08] too much centralization in the vault, the vault owner can withdraw all the value in the vault</a> <em>Submitted by bugwriter001</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/244\">[N-09] Typo for withdawable in multiple places in Parameters.sol  </a> <em>Submitted by hubble</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/310\">[N-10] Insurance NFT</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/334\">[N-11] Ordering importance in a struct</a> <em>Submitted by Kumpirmafyas</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/337\">[N-12] Misleading comments and documentation</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/48\">[N-13] pool can’t be initialized</a> <em>Submitted by danb, also found by cccz, jayjonah8, camden, defsec, hyh, loop, Meta0xNull, and Fitraldys</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/51\">[N-14] _depositFrom() does not  ensure that _from arg is not the contract itself </a> <em>Submitted by jayjonah8</em></li>\n</ul>\n<h1 id=\"gas-optimizations-98\" style=\"position:relative;\"><a href=\"#gas-optimizations-98\" aria-label=\"gas optimizations 98 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations (98)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/1\">[G-01] Unused imports</a> <em>Submitted by robee, also found by defsec, Jujic, saian, WatchPug, and Ruhum</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/108\">[G-02] in function _sub, less gas used using unchecked</a> <em>Submitted by Tomio</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/111\">[G-03] avoid using ‘else’ code can save gas in function pendingPremium</a> <em>Submitted by Tomio</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/113\">[G-04] split one require to two require can save gas</a> <em>Submitted by Fitraldys</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/118\">[G-05] Gas saving caching the value</a> <em>Submitted by 0x1f8b</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/121\">[G-06] unnecessary double <code>totalLiquidity()</code> call in function availableBalance</a> <em>Submitted by Tomio</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/122\">[G-07] save Insurance data directly to storage can save gas</a> <em>Submitted by Fitraldys</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/124\">[G-08] call emit from storage is more expensive</a> <em>Submitted by Fitraldys</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/13\">[G-09] Check if amount is not zero to save gas</a> <em>Submitted by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/137\">[G-10] Avoid expensive storage reads in Parameters.sol</a> <em>Submitted by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/138\">[G-11] acceptTransferOwnership() could save gas by using msg.sender</a> <em>Submitted by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/139\">[G-12] commitTransferOwnership() could save gas 1</a> <em>Submitted by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/142\">[G-13] Save gas in requestWithdraw()</a> <em>Submitted by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/140\">[G-14] totalAllocPoint in IndexTemplate.sol can be cached</a> <em>Submitted by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/145\">[G-15] Use <code>calldata</code> instead of <code>memory</code> for function parameters</a> <em>Submitted by defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/159\">[G-16] Remove unnecessary address cast in Vault.sol</a> <em>Submitted by sirhashalot</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/166\">[G-17] Unnecessary use of _msgSender()</a> <em>Submitted by Jujic, also found by defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/170\">[G-18] Moving Variable Declarations Before Error Checks Can Save Gas on Failure</a> <em>Submitted by 0xngndev, also found by ospwner</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/172\">[G-19] Grouping Repeated Logic Into a Modifier To Save on Deployment Costs</a> <em>Submitted by 0xngndev</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/178\">[G-20] Caching variables</a> <em>Submitted by Jujic, also found by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/181\">[G-21] Checking non-zero value can avoid an external call to save gas</a> <em>Submitted by Jujic</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/182\">[G-22] Avoid use of state variables in event emissions to save gas</a> <em>Submitted by Jujic</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/186\">[G-23] Remove unnecessary if statements for gas optimization </a> <em>Submitted by ospwner</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/188\">[G-24] set  <code>_mintAmount = _amount;</code> in the memory can save gas</a> <em>Submitted by Tomio</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/194\">[G-25] Multiple boolean comparrisons</a> <em>Submitted by loop, also found by robee, Tomio, 0xngndev, 0x1f8b, OriDabush, 0x0x0x, and defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/89\">[G-26] Gas optimization in Vault.addValueBatch()</a> <em>Submitted by tqts, also found by OriDabush</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/210\">[G-27] Avoid unnecessary code execution can save gas</a> <em>Submitted by Jujic</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/213\">[G-28] <code>InsureDAOERC20#transferFrom()</code> Do not reduce approval on transferFrom if current allowance is type(uint256).max</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/215\">[G-29] <code>AuctionBurnReserveSkew.sol#deposit()</code> Implementation can be simpler and save some gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/216\">[G-30] Remove unnecessary variables can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/218\">[G-31] Remove redundant code can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/219\">[G-32] <code>InsureDAOERC20#transferFrom()</code> Check of allowance can be done earlier to save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/230\">[G-33] Check of <code>_amount > 0</code> can be done earlier to save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/231\">[G-34] Cache function call results in the stack can save gas</a> <em>Submitted by WatchPug, also found by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/233\">[G-35] <code>AuctionBurnReserveSkew.sol#deposit()</code> Implementation can be simpler and save some gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/237\">[G-36] Avoiding repeated <code>marketStatus</code> checks can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/238\">[G-37] Changing bool to uint256 can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/240\">[G-38] Constructor not used</a> <em>Submitted by Jujic</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/253\">[G-39] Struct layout</a> <em>Submitted by Jujic, also found by TomFrenchBlockchain and WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/26\">[G-40] sqrt can be made unchecked to save gas</a> <em>Submitted by TomFrenchBlockchain</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/262\">[G-41] PoolTemplate.availableBalance calls totalLiquidity twice</a> <em>Submitted by hyh</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/264\">[G-42] Cache external call results can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/265\">[G-43] Avoiding unnecessary storage read can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/27\">[G-44] Withdrawal struct can be packed to save gas</a> <em>Submitted by TomFrenchBlockchain</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/274\">[G-45] using operator <code>&#x26;&#x26;</code> used more gas</a> <em>Submitted by Tomio</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/282\">[G-46] Change <code>public</code> constant variables to <code>private</code> / <code>internal</code> can save gas</a> <em>Submitted by WatchPug, also found by robee and Jujic</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/285\">[G-47] Gas: Optimize Conditional Statements in <code>CDSTemplate.sol:deposit()</code></a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/298\">[G-48] <code>Factory:approveTemplate</code> could make 1 SSTORE instead of 3</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/3\">[G-49] Unused state variables</a> <em>Submitted by robee, also found by sirhashalot</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/30\">[G-50] Gas: Consider making some constants as non-public to save gas</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/300\">[G-51] Gas: Optimize Conditional Statements in <code>IndexTemplate.sol:deposit()</code></a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/301\">[G-52] Gas: Cache <code>totalLiquidity()</code> in <code>IndexTemplate:leverage()</code></a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/303\">[G-53] Eliminate else block</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/304\">[G-54] Repeated external calls</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/306\">[G-55] Repeated storage reads</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/307\">[G-56] repayDebt optimization</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/308\">[G-57] Repeated math operations</a> <em>Submitted by pauliax, also found by tqts</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/309\">[G-58] deposit and _depositFrom are almost similar</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/317\">[G-59] Gas Optimization: Use unchecked for safe math</a> <em>Submitted by gzeon</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/32\">[G-60] Unnecessary market status check on redemption</a> <em>Submitted by TomFrenchBlockchain</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/320\">[G-61] Gas: Cache <code>_fee[_target]</code> in <code>Parameters.sol:getFeeRate()</code></a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/332\">[G-62] Order of statements</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/343\">[G-63] Gas: Cache <code>attributions[_target]</code> in <code>Vault.sol:underlyingValue()</code></a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/344\">[G-64] Gas: Avoid expensive calculation by checking if <code>valueAll() == 0</code></a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/345\">[G-65] Gas: <code>PoolTemplate:initialize()::_conditions</code> should be a fixed array of size 2</a> <em>Submitted by Dravee, also found by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/349\">[G-66] Gas: <code>incident.payoutNumerator</code> is used only once. It shouldn’t be stored in a variable.</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/350\">[G-67] Gas: <code>incident.payoutDenominator</code> is used only once. It shouldn’t be stored in a variable.</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/355\">[G-68] Gas: Optimize Conditional Statements in <code>PoolTemplate.sol:worth()</code></a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/36\">[G-69] Gas: <code>> 0</code> is less efficient than <code>!= 0</code> for unsigned integers</a> <em>Submitted by Dravee, also found by 0xngndev, defsec, Jujic, WatchPug, 0x0x0x, Ruhum, gzeon, and solgryn</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/361\">[G-70] Gas: Avoid expensive calculation by checking if <code>originalLiquidity() == 0</code></a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/37\">[G-71] allocatedCredit and availableBalance are always read together so should be returned together.</a> <em>Submitted by TomFrenchBlockchain</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/38\">[G-72] Gas: SafeMath is not needed when using Solidity version 0.8.*</a> <em>Submitted by Dravee, also found by Jujic and defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/39\">[G-73] Redundant tracking of markets in factory</a> <em>Submitted by TomFrenchBlockchain</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/40\">[G-74] Gas: No need to initialize variables with default values</a> <em>Submitted by Dravee, also found by robee, egjlmn1, Tomio, defsec, Jujic, Meta0xNull, WatchPug, 0x0x0x, and gzeon</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/41\">[G-99] Redundant if statements in market deployment function</a> <em>Submitted by TomFrenchBlockchain</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/47\">[G-75] Update to solc-0.8.10+</a> <em>Submitted by TomFrenchBlockchain, also found by defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/43\">[G-76] Gas: An array’s length should be cached to save gas in for-loops</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/5\">[G-77] Storage double reading. Could save SLOAD</a> <em>Submitted by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/56\">[G-78] Gas optimization in IndexTemplate.requestWithdraw()</a> <em>Submitted by tqts</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/58\">[G-79] Gas optimization in IndexTemplate._adjustAlloc()</a> <em>Submitted by tqts</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/59\">[G-80] Gas optimization in PoolTemplate.withdraw()</a> <em>Submitted by tqts</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/62\">[G-81] Gas: Usage of a non-native 256 bits uint as a counter in for-loops increases gas cost</a> <em>Submitted by Dravee, also found by robee and Jujic</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/63\">[G-82] Gas: Unused Named Returns</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/64\">[G-83] Gas: Use <code>calldata</code> instead of <code>memory</code> for external functions where the function argument is read-only.</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/66\">[G-84] Gas: Unnecessary checked arithmetic when no overflow/underflow possible</a> <em>Submitted by Dravee, also found by defsec, sirhashalot, Jujic, WatchPug, and hyh</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/68\">[G-85] Gas: Storage variable <code>IndexTemplate:pendingEnd#62</code> is never used and should be deleted</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/69\">[G-86] Gas: Costly operations inside a loop (<code>IndexTemplate._adjustAlloc()</code>)</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/7\">[G-87] Public functions to external</a> <em>Submitted by robee, also found by Dravee, Fitraldys, defsec, and gzeon</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/72\">[G-88] Gas: Consider making variables that aren’t updated outside the constructor as <code>immutable</code></a> <em>Submitted by Dravee, also found by Jujic, robee, TomFrenchBlockchain, 0x1f8b, loop, csanuragjain, gzeon, and defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/76\">[G-89] unnecessary checked postfix arithmetics</a> <em>Submitted by egjlmn1, also found by robee, Dravee, tqts, defsec, OriDabush, Jujic, 0x0x0x, and WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/78\">[G-90] Gas: Contracts inheriting <code>InsureDAOERC20</code> don’t need to import some dependencies <em>again</em></a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/79\">[G-91] <code>CDSTemplate.sol:compensate</code> code optimization</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/80\">[G-92] Gas: Avoid double assignment on variable</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/81\">[G-93] Gas: Redundant if-statement with the for-loop condition</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/82\">[G-94] Gas: Short-circuiting in an if-statement</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/83\">[G-95] Gas: Use <code>else if</code> to save gas and simplify code</a> <em>Submitted by Dravee, also found by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/84\">[G-96] Loss of precision and increased gas cost with double assignment on a calculation  </a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2022-01-insure-findings/issues/87\">[G-97] Shorten Error Messages to Save Gas</a> <em>Submitted by 0xngndev, also found by robee, Dravee, tqts, p4st13r4, sirhashalot, Jujic, Meta0xNull, and defsec</em></li>\n</ul>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-14\">High Risk Findings (14)</a></p>\n<ul>\n<li><a href=\"#h-01-tokens-can-be-burned-with-no-access-control\">[H-01] Tokens can be burned with no access control</a></li>\n<li><a href=\"#h-02-typo-in-pooltemplate-unlock-function-results-in-user-being-able-to-unlock-multiple-times\">[H-02] Typo in PoolTemplate unlock function results in user being able to unlock multiple times</a></li>\n<li><a href=\"#h-03-malicious-market-creators-can-steal-tokens-from-unsuspecting-approved-reference-accounts\">[H-03] Malicious Market Creators Can Steal Tokens From Unsuspecting Approved Reference Accounts</a></li>\n<li><a href=\"#h-04-initial-pool-deposit-can-be-stolen\">[H-04] Initial pool deposit can be stolen</a></li>\n<li><a href=\"#h-05-backdoor-in-withdrawredundant\">[H-05] backdoor in <code>withdrawRedundant</code></a></li>\n<li><a href=\"#h-06-the-first-depositor-to-a-pool-can-drain-all-users\">[H-06] the first depositor to a pool can drain all users</a></li>\n<li><a href=\"#h-07-wrong-designimplementation-of-permission-control-allows-maliciouscompromised-registry-or-factory-admin-to-steal-funds-from-users-wallet-balances\">[H-07] Wrong design/implementation of permission control allows malicious/compromised Registry or Factory admin to steal funds from users’ wallet balances</a></li>\n<li><a href=\"#h-08-indextemplatesolcompensate-will-most-certainly-fail\">[H-08] <code>IndexTemplate.sol#compensate()</code> will most certainly fail</a></li>\n<li><a href=\"#h-09-vaultsetcontroller-owner-of-the-vault-contracts-can-drain-funds-from-the-vault\">[H-09] <code>Vault#setController()</code> owner of the Vault contracts can drain funds from the Vault</a></li>\n<li><a href=\"#h-10-a-maliciouscompromised-registry-or-factory-admin-can-drain-all-the-funds-from-the-vault-contracts\">[H-10] A malicious/compromised Registry or Factory admin can drain all the funds from the Vault contracts</a></li>\n<li><a href=\"#h-11-pooltemplatesolresume-wrong-implementation-of-resume-will-compensate-overmuch-redeem-amount-from-index-pools\">[H-11] <code>PoolTemplate.sol#resume()</code> Wrong implementation of <code>resume()</code> will compensate overmuch redeem amount from index pools</a></li>\n<li><a href=\"#h-12-indextemplatesol-wrong-implementation-allows-lp-of-the-index-pool-to-resume-a-locked-payingout-pool-and-escape-the-responsibility-for-the-compensation\">[H-12] <code>IndexTemplate.sol</code> Wrong implementation allows lp of the index pool to resume a locked <code>PayingOut</code> pool and escape the responsibility for the compensation</a></li>\n<li><a href=\"#h-13-admin-of-the-index-pool-can-withdrawcredit-after-applycover-to-avoid-taking-loss-for-the-compensation-paid-for-a-certain-pool\">[H-13] Admin of the index pool can <code>withdrawCredit()</code> after <code>applyCover()</code> to avoid taking loss for the compensation paid for a certain pool</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-9\">Medium Risk Findings (9)</a></p>\n<ul>\n<li><a href=\"#m-01-repaydebt-in-vaultsol-could-dos-functionality-for-markets\">[M-01] repayDebt in Vault.sol could DOS functionality for markets</a></li>\n<li><a href=\"#m-02-owner-can-call-applycover-multiple-times-in-pooltemplatesol\">[M-02] Owner can call <code>applyCover</code> multiple times in <code>PoolTemplate.sol</code></a></li>\n<li><a href=\"#m-03-signature-replay\">[M-03] Signature replay</a></li>\n<li><a href=\"#m-04-system-debt-is-not-handled-when-insurance-pools-become-insolvent\">[M-04] System Debt Is Not Handled When Insurance Pools Become Insolvent</a></li>\n<li><a href=\"#m-05-vaultsol-tokens-with-fee-on-transfer-are-not-supported\">[M-05] <code>Vault.sol</code> Tokens with fee on transfer are not supported</a></li>\n<li><a href=\"#m-06-index-compensate-is-0-when-totalliquidity-is-enough-to-cover-the-whole-amount\">[M-06] Index compensate is 0 when totalLiquidity() is enough to cover the whole amount</a></li>\n<li><a href=\"#m-07-requestwithdraw-without-obligation-to-withdraw-allow-underwriter-to-avoid-payout\">[M-07] <code>requestWithdraw</code> without obligation to withdraw allow underwriter to avoid payout</a></li>\n<li><a href=\"#m-08-unbounded-iteration-over-all-indexes-2\">[M-08] Unbounded iteration over all indexes (2)</a></li>\n</ul>\n</li>\n<li><a href=\"#low-risk-findings-42\">Low Risk Findings (42)</a></li>\n<li><a href=\"#non-critical-findings-15\">Non-Critical Findings (15)</a></li>\n<li><a href=\"#gas-optimizations-98\">Gas Optimizations (98)</a></li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}