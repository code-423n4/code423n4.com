{
  "circa": {
    "title": "Juicebox V2 contest",
    "sponsor": "Juicebox",
    "slug": "2022-07-juicebox",
    "date": "2022-10-11",
    "findings": "https://github.com/code-423n4/2022-07-juicebox-findings/issues",
    "contest": 143
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the Juicebox V2 smart contract system written in Solidity. The audit contest took place between July 1—July 8 2022.</p>\n<p>Following the C4 audit contest, warden berndartmueller reviewed the mitigations for all identified issues; the mitigation review report is appended below the audit contest report.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>111 Wardens contributed reports to the Juicebox V2 contest:</p>\n<ol>\n<li><a href=\"https://twitter.com/berndartmueller\">berndartmueller</a></li>\n<li>cccz</li>\n<li>zzzitron</li>\n<li>IllIllI</li>\n<li>Lambda</li>\n<li><a href=\"https://twitter.com/real_philogy\">philogy</a></li>\n<li>0x52</li>\n<li>hake</li>\n<li>DimitarDimitrov</li>\n<li>0x29A (0x4non and rotcivegaf)</li>\n<li>hubble (ksk2345 and shri4net)</li>\n<li>AlleyCat</li>\n<li><a href=\"ylv.io\">ylv</a></li>\n<li><a href=\"https://twitter.com/iamdirky\">dirk_y</a></li>\n<li><a href=\"https://twitter.com/andyfeili\">oyc_109</a></li>\n<li>horsefacts</li>\n<li>pashov</li>\n<li><a href=\"https://twitter.com/0xhyh\">hyh</a></li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li>codexploder</li>\n<li>Meera</li>\n<li>bardamu</li>\n<li><a href=\"https://twitter.com/gallodasballo\">Alex the Entreprenerd</a></li>\n<li>rbserver</li>\n<li>robee</li>\n<li>_141345_</li>\n<li>0xA5DF</li>\n<li>0x1f8b</li>\n<li><a href=\"https://twitter.com/defsec_\">defsec</a></li>\n<li><a href=\"https://twitter.com/thePicodes\">Picodes</a></li>\n<li><a href=\"https://twitter.com/JoeStakey\">joestakey</a></li>\n<li><a href=\"https://twitter.com/father0fBl0cks\">fatherOfBlocks</a></li>\n<li>simon135</li>\n<li><a href=\"https://twitter.com/jonataspvt\">jonatascm</a></li>\n<li>0xDjango</li>\n<li><a href=\"https://twitter.com/0xNazgul\">0xNazgul</a></li>\n<li>0xf15ers (remora and twojoy)</li>\n<li><a href=\"https://chom.dev\">Chom</a></li>\n<li>GimelSec (<a href=\"https://twitter.com/rayn731\">rayn</a> and sces60107)</li>\n<li><a href=\"https://twitter.com/danialmomtahani\">0xdanial</a></li>\n<li><a href=\"https://mobile.twitter.com/tomj_bb\">TomJ</a></li>\n<li><a href=\"https://instagram.com/vanensurya\">Funen</a></li>\n<li><a href=\"https://twitter.com/Sm4rty_\">Sm4rty</a></li>\n<li><a href=\"https://twitter.com/0xch301\">Ch_301</a></li>\n<li>delfin454000</li>\n<li><a href=\"https://github.com/lyciumlee\">durianSausage</a></li>\n<li><a href=\"https://t.me/Road220\">m_Rassska</a></li>\n<li>Kaiziron</li>\n<li><a href=\"https://twitter.com/rajat_beladiya\">rajatbeladiya</a></li>\n<li>asutorufos</li>\n<li>Hawkeye (0xwags and 0xmint)</li>\n<li>sach1r0</li>\n<li>ReyAdmirado</li>\n<li><a href=\"https://milotruck.github.io/\">MiloTruck</a></li>\n<li>Bnke0x0</li>\n<li>brgltd</li>\n<li>Waze</li>\n<li><a href=\"https://twitter.com/sm4rtcontr4ct\">JC</a></li>\n<li><a href=\"https://twitter.com/_0v3rf10w\">0v3rf10w</a></li>\n<li>_Adam</li>\n<li><a href=\"https://twitter.com/ROHANJH56009256\">Rohan16</a></li>\n<li>Noah3o6</li>\n<li>jayfromthe13th</li>\n<li>djxploit</li>\n<li>0xNineDec</li>\n<li>sahar</li>\n<li><a href=\"https://twitter.com/svs_kaushik\">svskaushik</a></li>\n<li>TerrierLover</li>\n<li>samruna</li>\n<li><a href=\"https://www.linkedin.com/in/evgeniy-shaldin-21898712a/\">Chandr</a></li>\n<li>aysha</li>\n<li><a href=\"https://github.com/0xKitsune\">0xKitsune</a></li>\n<li><a href=\"https://twitter.com/SOL_Cheeezzyyyy\">Cheeezzyyyy</a></li>\n<li>kebabsec (okkothejawa and <a href=\"https://twitter.com/FlameHorizon1\">FlameHorizon</a>)</li>\n<li>Limbooo</li>\n<li>Saintcode_</li>\n<li>RedOneN</li>\n<li><a href=\"https://twitter.com/c3ph_\">c3phas</a></li>\n<li>apostle0x01</li>\n<li>UnusualTurtle</li>\n<li>sashik_eth</li>\n<li>JohnSmith</li>\n<li>cRat1st0s</li>\n<li>ajtra</li>\n<li><a href=\"https://twitter.com/TuturuTech\">Tutturu</a></li>\n<li><a href=\"https://twitter.com/meidhiwirara\">Tomio</a></li>\n<li><a href=\"https://www.instagram.com/riyan_rfa/\">rfa</a></li>\n<li>Metatron</li>\n<li><a href=\"https://twitter.com/0xKaden\">kaden</a></li>\n<li><a href=\"https://twitter.com/0xheynacho\">ignacio</a></li>\n<li><a href=\"https://github.com/Aymen1001\">Aymen0909</a></li>\n<li><a href=\"https://twitter.com/randyyramadhan\">Randyyy</a></li>\n<li><a href=\"https://veranos.io\">mrpathfindr</a></li>\n<li>ElKu</li>\n<li><a href=\"https://twitter.com/mektigboy\">mektigboy</a></li>\n<li><a href=\"https://github.com/exd0tpy\">exd0tpy</a></li>\n<li>0x09GTO</li>\n<li><a href=\"https://franfran.dev/\">Franfran</a></li>\n<li><a href=\"https://twitter.com/hansfriese\">hansfriese</a></li>\n<li>Green</li>\n<li><a href=\"https://twitter.com/tabishjshaikh\">tabish</a></li>\n<li>tintin</li>\n<li>cloudjunky</li>\n<li>cryptphi</li>\n<li>peritoflores</li>\n</ol>\n<p>This contest was judged by <a href=\"https://github.com/jack-the-pug\">Jack the Pug</a>.</p>\n<p>Mitigations reviewed by <a href=\"https://twitter.com/berndartmueller\">berndartmueller</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/itsmetechjay\">itsmetechjay</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 17 unique vulnerabilities. Of these vulnerabilities, 2 received a risk rating in the category of HIGH severity and 15 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 60 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 74 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2022-07-juicebox\">C4 Juicebox V2 contest repository</a>, and is composed of 10 smart contracts written in the Solidity programming language and includes 2,088 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-2\" style=\"position:relative;\"><a href=\"#high-risk-findings-2\" aria-label=\"high risk findings 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (2)</h1>\n<h2 id=\"h-01-oracle-data-feed-can-be-outdated-yet-used-anyways-which-will-impact-payment-logic\" style=\"position:relative;\"><a href=\"#h-01-oracle-data-feed-can-be-outdated-yet-used-anyways-which-will-impact-payment-logic\" aria-label=\"h 01 oracle data feed can be outdated yet used anyways which will impact payment logic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/138\">[H-01] Oracle data feed can be outdated yet used anyways which will impact payment logic</a></h2>\n<p><em>Submitted by 0xNineDec, also found by 0x1f8b, 0x29A, 0x52, 0xdanial, 0xDjango, 0xf15ers, bardamu, cccz, Cheeezzyyyy, Chom, codexploder, defsec, Franfran, Alex the Entreprenerd, Green, hake, hansfriese, horsefacts, hubble, hyh, IllIllI, jonatascm, kebabsec, Meera, oyc_109, pashov, rbserver, Ruhum, simon135, tabish, tintin, and zzzitron</em></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBChainlinkV3PriceFeed.sol#L44\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBChainlinkV3PriceFeed.sol#L44</a></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBPrices.sol#L57\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBPrices.sol#L57</a></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L387\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L387</a></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L585\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L585</a></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L661\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L661</a></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L830\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L830</a></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L868\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L868</a></p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The current implementation of <code>JBChainlinkV3PriceFeed</code> is used by the protocol to showcase how the feed will be retrieved via Chainlink Data Feeds. The feed is used to retrieve the <code>currentPrice</code>, which is also used afterwards by <code>JBPrices.priceFor()</code>, then by <code>JBSingleTokenPaymentTerminalStore.recordPaymentFrom()</code>, <code>JBSingleTokenPaymentTerminalStore.recordDistributionFor</code>, <code>JBSingleTokenPaymentTerminalStore.recordUsedAllowanceOf</code>, <code>JBSingleTokenPaymentTerminalStore._overflowDuring</code> and <code>JBSingleTokenPaymentTerminalStore._currentTotalOverflowOf</code>.\nAlthough the current feeds are calculated by a non implemented IJBPriceFeed, if the implementation of the price feed is the same as the showcased in<code>JBChainlinkV3PriceFeed</code>, the retrieved data can be outdated or out of bounds.</p>\n<p>It is important to remember that the sponsor said on the dedicated Discord Channel that also oracle pricing and data retrieval is inside the scope.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Chainlink classifies their data feeds into four different groups regarding how reliable is each source thus, how risky they are. The groups are <em>Verified Feeds, Monitored Feeds, Custom Feeds and Specialized Feeds</em> (they can be seen <a href=\"https://docs.chain.link/docs/selecting-data-feeds/#data-feed-categories\">here</a>). The risk is the lowest on the first one and highest on the last one.</p>\n<p>A strong reliance on the price feeds has to be also monitored as recommended on the <a href=\"https://docs.chain.link/docs/selecting-data-feeds/#risk-mitigation\">Risk Mitigation section</a>. There are several reasons why a data feed may fail such as unforeseen market events, volatile market conditions, degraded performance of infrastructure, chains, or networks, upstream data providers outage, malicious activities from third parties among others.</p>\n<p>Chainlink recommends using their data feeds along with some controls to prevent mismatches with the retrieved data. Along some recommendations, the feed can include circuit breakers (for extreme price events), contract update delays (to ensure that the injected data into the protocol is fresh enough), manual kill-switches (to cease connection in case of found bug or vulnerability in an upstream contract), monitoring (control the deviation of the data) and soak testing (of the price feeds).</p>\n<p>The <code>feed.lastRoundData()</code> interface parameters <a href=\"https://docs.chain.link/docs/price-feeds-api-reference/\">according to Chainlink</a> are the following:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function latestRoundData() external view</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    returns (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint80 roundId,             //  The round ID.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        int256 answer,              //  The price.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 startedAt,          //  Timestamp of when the round started.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 updatedAt,          //  Timestamp of when the round was updated.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint80 answeredInRound      //  The round ID of the round in which the answer was computed.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    )</span></span></code></pre>\n<p>Regarding Juicebox itself, only the <code>answer</code> is used on the <code>JBChainlinkV3PriceFeed.currentPrice()</code> implementation. The retrieved price of the <code>priceFeed</code> can be outdated and used anyways as a valid data because no timestamp tolerance of the update source time is checked while storing the return parameters of <code>feed.latestRoundData()</code> inside <code>JBChainlinkV3PriceFeed.currentPrice()</code> as recommended by Chainlink in <a href=\"https://docs.chain.link/docs/using-chainlink-reference-contracts/#check-the-timestamp-of-the-latest-answer\">here</a>. The usage of outdated data can impact on how the Payment terminals work regarding pricing calculation and value measurement.</p>\n<p>Precisely the following protocol logic within <code>JBSingleTokenPaymentTerminalStore​‌</code> will work unexpectedly regarding value management.</p>\n<ul>\n<li>\n<p><code>recordPaymentFrom()</code>:</p>\n<p>This function handles the minting of a project tokens according to a data source if one is given. If the retrieved value of the oracle is outdated, the <code>_weightRatio</code> at <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L387\">Line 387</a> will return an incorrect value and then the <code>tokenCount</code> calculated amount will suffer from this mismatch, impacting in the amount of tokens minted.</p>\n</li>\n<li>\n<p><code>recordDistributionFor()</code>:</p>\n<p>Performs the recording of recently distributed funds for a project. On <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L580\">line 580</a> the <code>distributedAmount</code> is computed and if the boolean check is false, then the call will perform a call to <code>priceFor</code> at <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L585\">line 585</a>. If the returned oracle value is not adjusted with current market prices, the <code>distributedAmount</code> will also drag that error computing an incorrect <code>distributedAmount</code>. Afterwards, because the <code>distributedAmount</code> is also used to update the token balances of the <code>msg.sender</code> (<a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L598\">line 598</a>) it means that the mismatch impacts on the modified balance.</p>\n</li>\n<li>\n<p><code>recordUsedAllowanceOf()</code>:</p>\n<p>Keeps record of used allowances of a project. It returns are analogue to the ones shown at <code>recordDistributionFor</code> where the <code>usedAmount</code> resembles the <code>distributedAmount</code>. The <code>usedAmount</code> is also used to update the project’s balance. If the data of the oracle is outdated, the <code>usedAmount</code> will be calculated dragging that error.</p>\n</li>\n<li>\n<p><code>_overflowDuring()</code>:</p>\n<p>Used to get the amount that is overflowing relative to a specified cycle. The data retrieved from the oracle is used to calculate the value of <code>_distributionLimitRemaining</code> on <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L827\">line 827</a> which is used later to calculate the return value if the boolean check performed at line 834 is true. Because the return of this function is the current balance of a project minus the amount that can be still distributed, if the amount that can still be distributed is wrong so will be the subtraction thus the return value.</p>\n</li>\n<li>\n<p><code>_currentTotalOverflowOf()</code>:</p>\n<p>Similar to the latter but used to get the overflow of all the terminals of a project. If the retrieved data has a mismatch with the market, the <code>_totalOverflow18Decimal</code> calculated on <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L827\">line 866</a> if the boolean check is false will drag this mismatch which will also be dragged into the final return of the function.</p>\n</li>\n</ul>\n<p>The issues of those miscalculations impact on every project currently minted, which also affects subsequently on each user that has tokens of a project resulting in a high reach impact.</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>As Chainlink <a href=\"https://docs.chain.link/docs/using-chainlink-reference-contracts/#check-the-timestamp-of-the-latest-answer\">recommends</a>:</p>\n<blockquote>\n<p>Your application should track the <code>latestTimestamp</code> variable or use the <code>updatedAt</code> value from the <code>latestRoundData()</code> function to make sure that the latest answer is recent enough for your application to use it. If your application detects that the reported answer is not updated within the heartbeat or within time limits that you determine are acceptable for your application, pause operation or switch to an alternate operation mode while identifying the cause of the delay.</p>\n<p>During periods of low volatility, the heartbeat triggers updates to the latest answer. Some heartbeats are configured to last several hours, so your application should check the timestamp and verify that the latest answer is recent enough for your application.</p>\n</blockquote>\n<p>It is recommended to add a tolerance that compares the <code>updatedAt</code> return timestamp from <code>latestRoundData()</code> with the current block timestamp and ensure that the <code>priceFeed</code> is being updated with the required frequency.</p>\n<p>If the <code>ETH/USD</code> is the only one that is needed to retrieve, because it is the most popular and available pair. It can also be useful to add other oracle to get the price feed (such as Uniswap’s). This can be used as a redundancy in the case of having one oracle that returns outdated values (what is outdated and what is up to date can be determined by a tolerance as mentioned).</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/138#issuecomment-1182192760\">mejango (Juicebox) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>There is also a good description in this duplicate #<a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/78\">78</a></p>\n</blockquote>\n<p><strong>mejango (Juicebox) resolved:</strong></p>\n<blockquote>\n<p>PR with fix: <a href=\"https://github.com/jbx-protocol/juice-contracts-v3/pull/1\">PR #1</a></p>\n</blockquote>\n<p><strong>berndartmueller (warden) reviewed mitigation:</strong></p>\n<blockquote>\n<p>Appropriate validations to prevent price staleness, round incompleteness and a negative price is put in place now.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-02-token-change-can-be-frontrun-blocking-token\" style=\"position:relative;\"><a href=\"#h-02-token-change-can-be-frontrun-blocking-token\" aria-label=\"h 02 token change can be frontrun blocking token permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/104\">[H-02] Token Change Can Be Frontrun, Blocking Token</a></h2>\n<p><em>Submitted by philogy, also found by berndartmueller and Lambda</em></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBTokenStore.sol#L246\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBTokenStore.sol#L246</a></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBTokenStore.sol#L266\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBTokenStore.sol#L266</a></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L605\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L605</a></p>\n<h3 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>This vulnerability allows malicious actors to block other users from changing tokens of their projects. Furthermore if ownership over the token contract is transferred to the <code>JBTokenStore</code> contract prior to the change, as suggested in the <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/main/security/postmortem/5.24.2022.md#Recourse\">recourse section of Juicebox’s 24.05.2022 post-mortem update</a>, this vulnerability would allow an attacker to become the owner of tokens being transferred. For <code>JBToken</code> based tokens this would allow an attacker to begin issuing arbitrary amounts the token that was meant to be transferred.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><strong>Exploit scenario:</strong></p>\n<ol>\n<li>Wanting to assign their token to their JB project an unsuspecting owner / admin transfers ownership to a <code>JBTokenStore</code> contract, either directly by calling <code>transferOwnership</code> on the token or indirectly by calling the <code>changeFor</code> method on an older <code>JBTokenStore</code> contract with <code>_newOwner</code> set as the new <code>JBTokenStore</code> contract. (For the newer Juicebox contracts the <code>JBController</code> contract’s <code>changeTokenOf</code> method would be called)</li>\n<li>Seeing this change an attacker submits a <code>changeTokenFor</code> calling transaction to the new <code>JBController</code> contract, triggering the <code>JBTokenStore</code> contract’s <code>changeFor</code> method, linking it to one of the attacker’s projects (this could be created in advance or as part of the same transaction via an attack contract)</li>\n<li>The attacker can then gain ownership over the token by calling <code>changeTokenFor</code> again with the <code>_newOwner</code> set to the attacker’s address</li>\n<li>Assuming the token has an owner restricted <code>mint</code> method like <code>JBToken</code> based tokens the attacker can now mint an arbitrary amount of the token</li>\n</ol>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Before allowing a caller to change to a specific token ensure that they have control over it. This can be achieved by storing a list of trusted older JB directories and projects which are then queried. Alternatively the contract could require the caller to actually be the <code>.owner()</code>  address of the token to migrate, this would require admins to:</p>\n<ol>\n<li>Call <code>changeTokenOf</code> with themselves as the new owner</li>\n<li>Call the new change token method on the newer contract, since they are the owner they’d pass the check</li>\n<li>Independently transfer the ownership to the new token store to ensure that it can issue tokens</li>\n</ol>\n<p>Future migrations can be made more seamless by having older contracts directly call new contracts via a sub-call, removing a necessary transaction for the admin. The newer contracts needs to verify that the older contract is the owner address of the token that’s being set and also has approval of the project owner which is being configured.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/104#issuecomment-1179367197\">mejango (Juicebox) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Nice. The project should first <code>changeToken</code> and then transfer ownership.</p>\n</blockquote>\n<p><strong>mejango (Juicebox) resolved:</strong></p>\n<blockquote>\n<p>PR with fix: <a href=\"https://github.com/jbx-protocol/juice-contracts-v3/pull/1\">PR #1</a></p>\n</blockquote>\n<p><strong>berndartmueller (warden) reviewed mitigation:</strong></p>\n<blockquote>\n<p>Changing an already set project token is not possible anymore.</p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-15\" style=\"position:relative;\"><a href=\"#medium-risk-findings-15\" aria-label=\"medium risk findings 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (15)</h1>\n<h2 id=\"m-01-duplicated-locked-splits-can-be-discarded\" style=\"position:relative;\"><a href=\"#m-01-duplicated-locked-splits-can-be-discarded\" aria-label=\"m 01 duplicated locked splits can be discarded permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/219\">[M-01] Duplicated locked splits can be discarded</a></h2>\n<p><em>Submitted by zzzitron</em></p>\n<p>The function of the protocol could be impacted.  This <a href=\"https://gist.github.com/zzzitron/a8c6067923a87af8e001c05442258370#file-2022-07-juiceboxv2-t-sol-L117-L163\">proof of concept</a> demonstrates the discarding of one of the duplicated locked splits. In the beginning it launches a project with two identical locked splits. As the owner of the project, it updates splits to only one of the two splits. Since all of original splits are locked both of them should still in the split after the update, but only one of them exists in the updated splits.</p>\n<p>It happens because <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L211-L221\">the check of the locked split</a> is not suitable for duplicated cases.</p>\n<p><em>Please see warden’s <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/219\">original report</a> for full details.</em></p>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Either prevent duplicates in the splits or track the matches while checking the locked splits.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/219\">mejango (Juicebox) acknowledged, but disagreed with severity</a></strong> </p>\n<hr>\n<h2 id=\"m-02-lack-of-check-on-muststartatorafter\" style=\"position:relative;\"><a href=\"#m-02-lack-of-check-on-muststartatorafter\" aria-label=\"m 02 lack of check on muststartatorafter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/220\">[M-02] Lack of check on <code>mustStartAtOrAfter</code></a></h2>\n<p><em>Submitted by zzzitron, also found by IllIllI</em></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L306-L312\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L306-L312</a></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L518-L522\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L518-L522</a></p>\n<h3 id=\"impact-2\" style=\"position:relative;\"><a href=\"#impact-2\" aria-label=\"impact 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>By setting huge <code>mustStartAtOrAfter</code>, the owner can set start time in the past. It might open up possibility to bypass the ballot waiting time depending on the ballot’s implementation.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The <a href=\"https://gist.github.com/zzzitron/a8c6067923a87af8e001c05442258370#file-2022-07-juiceboxv2-t-sol-L77-L115\">proof of concept</a> is almost the same as <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/system_tests/TestReconfigure.sol#L77-L114\"><code>TestReconfigure::testReconfigureProject</code></a>. In the original test, the owner of the project is reconfiguring funding cycle, but it is not in effect immediately because ballot is set. Only after 3 days the newly set funding cycle will be the current one.</p>\n<p>In the above proof of concept, only one parameter of the funding cycle is modified: <code>mustStartAtOrAfter</code> is set to <code>type(uint56).max</code>. As the result, the newly set funding cycle is considered as the current one without waiting for the ballot.</p>\n<p>The cause of this is missing check on <code>mustStartAtOrAfter</code> upon setting <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L306-L312\">here</a>. If the given <code>_mustStartAtOrAfter</code> is huge, it will be passed eventually to the <code>_initFor</code>, <code>_packAndStoreIntrinsicPropertiesOf</code>. Then it will ‘overflow’ by shifting and set to the funding cycle, which <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L518-L522\">essentially can be set to any value including the past</a>. Also, it seems like the number will be also effected because the bigger digit will carry over.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// in JBFundingCycleStore::_packAndStoreIntrinsicPropertiesOf</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// where the `_start` is derived from `_mustStartAtOrAfter`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">.</span><span class=\"mtk5\">/JBFundingCycleStore.sol-518-    /</span><span class=\"mtk1\">/ </span><span class=\"mtk12\">start</span><span class=\"mtk1\"> </span><span class=\"mtk4\">in</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bits</span><span class=\"mtk1\"> </span><span class=\"mtk7\">144</span><span class=\"mtk1\">-</span><span class=\"mtk7\">199.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">./</span><span class=\"mtk12\">JBFundingCycleStore</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">519</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">packed</span><span class=\"mtk1\"> |= </span><span class=\"mtk12\">_start</span><span class=\"mtk1\"> &lt;&lt; </span><span class=\"mtk7\">144</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">./</span><span class=\"mtk12\">JBFundingCycleStore</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">-</span><span class=\"mtk7\">520</span><span class=\"mtk1\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">.</span><span class=\"mtk5\">/JBFundingCycleStore.sol-521-    /</span><span class=\"mtk1\">/ </span><span class=\"mtk12\">number</span><span class=\"mtk1\"> </span><span class=\"mtk4\">in</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bits</span><span class=\"mtk1\"> </span><span class=\"mtk7\">200</span><span class=\"mtk1\">-</span><span class=\"mtk7\">255.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">./</span><span class=\"mtk12\">JBFundingCycleStore</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">-</span><span class=\"mtk7\">522</span><span class=\"mtk1\">-    </span><span class=\"mtk12\">packed</span><span class=\"mtk1\"> |= </span><span class=\"mtk12\">_number</span><span class=\"mtk1\"> &lt;&lt; </span><span class=\"mtk7\">200</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Foundry</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a check for the <code>_mustStartAtOrAfter</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// example check for _mustSTartAtOrAfter</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// in JBFundingCycleStore::configureFor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_mustStartAtOrAfter</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint56</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">INVALID_START</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/220#issuecomment-1182519751\">drgorillamd (Juicebox) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>We’ve seen the POC, now assessing how to best mitigate (at what level).</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/220#issuecomment-1200425695\">jack-the-pug (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Good catch!</p>\n</blockquote>\n<p><strong>drgorillamd (Juicebox) resolved:</strong></p>\n<blockquote>\n<p>PR with fix: <a href=\"https://github.com/jbx-protocol/juice-contracts-v3/pull/1\">PR #1</a></p>\n</blockquote>\n<p><strong>berndartmueller (warden) reviewed mitigation:</strong></p>\n<blockquote>\n<p><code>mustStartAtOrAfter</code> and the start date of an upcoming funding cycle are now validated to fit in <code>uint56</code>.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-use-a-safe-transfer-helper-library-for-erc20-transfers\" style=\"position:relative;\"><a href=\"#m-03-use-a-safe-transfer-helper-library-for-erc20-transfers\" aria-label=\"m 03 use a safe transfer helper library for erc20 transfers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/242\">[M-03] Use a safe transfer helper library for ERC20 transfers</a></h2>\n<p><em>Submitted by horsefacts, also found by 0x1f8b, 0x29A, 0x52, 0xf15ers, AlleyCat, apostle0x01, berndartmueller, cccz, Ch_301, Chom, cloudjunky, codexploder, cryptphi, delfin454000, durianSausage, fatherOfBlocks, Franfran, hake, hansfriese, hyh, IllIllI, jonatascm, Kaiziron, Limbooo, m_Rassska, Meera, oyc_109, peritoflores, rajatbeladiya, rbserver, Ruhum, Sm4rty, svskaushik, and zzzitron</em></p>\n<p><code>JBERC20PaymentTerminal#_transferFrom</code> calls <code>IERC20#transfer</code> and <code>transferFrom</code> directly. There are two issues with using this interface directly:</p>\n<ol>\n<li><code>JBERC20PaymentTerminal#_transferFrom</code> function does not check the return value of these calls. Tokens that return <code>false</code> rather than revert to indicate failed transfers may silently fail rather than reverting as expected.</li>\n<li>Since the IERC20 interface requires a boolean return value, attempting to transfer ERC20s with <a href=\"https://github.com/d-xo/weird-erc20#missing-return-values\">missing return values</a> will revert. This means Juicebox payment terminals cannot support a number of popular ERC20s, including USDT and BNB.</li>\n</ol>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBERC20PaymentTerminal.sol#L81-L89\"><code>JBERC20PaymentTerminal#_transferFrom</code></a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_transferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_from</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ? </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      : </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<h3 id=\"impact-3\" style=\"position:relative;\"><a href=\"#impact-3\" aria-label=\"impact 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Juicebox payment terminals may issue project tokens to users even though their incoming token transfer failed. Juicebox payment terminals cannot support USDT, BNB, and other popular (but nonstandard) ERC20s.</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use a safe transfer library like OpenZeppelin <a href=\"https://docs.openzeppelin.com/contracts/4.x/api/token/erc20#SafeERC20\">SafeERC20</a> to ensure consistent handling of ERC20 return values and abstract over <a href=\"https://github.com/d-xo/weird-erc20\">inconsistent ERC20</a> implementations.</p>\n<p>Additionally, since payment terminals are meant to support a variety of ERC20s, consider writing simulation tests that make token transfers using payment terminals for the most popular and most unusual ERC20s.</p>\n<p>(Note also that the out of scope <code>JBETHERC20ProjectPayer</code> and <code>JBETHERC20SplitsPayer</code> contracts also call <code>IERC20#transfer</code> and <code>transferFrom</code> without a helper!)</p>\n<p>See the following Forge test, which simulates an attempted USDT transfer. (Run this in fork mode using the <code>--fork-url</code> flag).</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// SPDX-License-Identifier: MIT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">6</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;./helpers/TestBaseWorkflow.sol&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">USDT_ADDRESS</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0xdAC17F958D2ee523a2206206994597C13D831ec7</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TestWeirdERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TestBaseWorkflow</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">IERC20Metadata</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">JBController</span><span class=\"mtk1\"> </span><span class=\"mtk12\">controller</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">JBProjectMetadata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_projectMetadata</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">JBFundingCycleData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_data</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">JBFundingCycleMetadata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_metadata</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">JBGroupedSplits</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">_groupedSplits</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">JBFundAccessConstraints</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">_fundAccessConstraints</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">IJBPaymentTerminal</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">_terminals</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">JBTokenStore</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tokenStore</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">JBERC20PaymentTerminal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tetherTerminal</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">IERC20Metadata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">usdt</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20Metadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">USDT_ADDRESS</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_projectOwner</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">WEIGHT</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1000</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**</span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setUp</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setUp</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_projectOwner</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">multisig</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_tokenStore</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">jbTokenStore</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">controller</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">jbController</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_projectMetadata</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">JBProjectMetadata</span><span class=\"mtk1\">({</span><span class=\"mtk12\">content:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;myIPFSHash&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">domain:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\">});</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_data</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">JBFundingCycleData</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">duration:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">14</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">weight:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">WEIGHT</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">discountRate:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">450000000</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">ballot:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IJBFundingCycleBallot</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_metadata</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">JBFundingCycleMetadata</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">global:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">JBGlobalFundingCycleMetadata</span><span class=\"mtk1\">({</span><span class=\"mtk12\">allowSetTerminals:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">, </span><span class=\"mtk12\">allowSetController:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">}),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">reservedRate:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">5000</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//50%</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">redemptionRate:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">5000</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//50%</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">ballotRedemptionRate:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">pausePay:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">pauseDistributions:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">pauseRedeem:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">pauseBurn:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">allowMinting:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">allowChangeToken:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">allowTerminalMigration:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">allowControllerMigration:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">holdFees:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">useTotalOverflowForRedemptions:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">useDataSourceForPay:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">useDataSourceForRedeem:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">dataSource:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_tetherTerminal</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">JBERC20PaymentTerminal</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">usdt</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">jbLibraries</span><span class=\"mtk1\">().</span><span class=\"mtk11\">ETH</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">// currency</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">jbLibraries</span><span class=\"mtk1\">().</span><span class=\"mtk11\">ETH</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">// base weight currency</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// JBSplitsGroupe</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">jbOperatorStore</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">jbProjects</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">jbDirectory</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">jbSplitsStore</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">jbPrices</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">jbPaymentTerminalStore</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">multisig</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">evm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">label</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tetherTerminal</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;TetherTerminal&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_terminals</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tetherTerminal</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">testTetherPaymentsRevert</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">JBERC20PaymentTerminal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">terminal</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_tetherTerminal</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_fundAccessConstraints</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">JBFundAccessConstraints</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">terminal:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">terminal</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">token:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">USDT_ADDRESS</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">distributionLimit:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**</span><span class=\"mtk7\">18</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">overflowAllowance:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">5</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**</span><span class=\"mtk7\">18</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">distributionLimitCurrency:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">jbLibraries</span><span class=\"mtk1\">().</span><span class=\"mtk11\">ETH</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">overflowAllowanceCurrency:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">jbLibraries</span><span class=\"mtk1\">().</span><span class=\"mtk11\">ETH</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">projectId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">controller</span><span class=\"mtk1\">.</span><span class=\"mtk11\">launchProjectFor</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">_projectOwner</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">_projectMetadata</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">_data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">_metadata</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">_groupedSplits</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">_fundAccessConstraints</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">_terminals</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk8\">&#39;&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">caller</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">evm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">label</span><span class=\"mtk1\">(</span><span class=\"mtk12\">caller</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;caller&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">usdt</span><span class=\"mtk1\">), </span><span class=\"mtk12\">caller</span><span class=\"mtk1\">, </span><span class=\"mtk7\">20</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**</span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">evm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">caller</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">usdt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">terminal</span><span class=\"mtk1\">), </span><span class=\"mtk7\">20</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**</span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">evm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">caller</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">terminal</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pay</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">projectId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">20</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**</span><span class=\"mtk7\">18</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">usdt</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk8\">&#39;Forge test&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/281\">mejango (Juicebox) confirmed</a></strong></p>\n<p><strong>mejango (Juicebox) resolved:</strong></p>\n<blockquote>\n<p>PR with fix: <a href=\"https://github.com/jbx-protocol/juice-contracts-v3/pull/1\">PR #1</a></p>\n</blockquote>\n<p><strong>berndartmueller (warden) reviewed mitigation:</strong></p>\n<blockquote>\n<p>OpenZeppelins’ <code>SafeERC20</code> library is now used to ensure consistent handling of ERC20 token transfers.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-juicebox-project-owner-can-create-a-honeypot-to-cause-grief\" style=\"position:relative;\"><a href=\"#m-04-juicebox-project-owner-can-create-a-honeypot-to-cause-grief\" aria-label=\"m 04 juicebox project owner can create a honeypot to cause grief permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/170\">[M-04] Juicebox project owner can create a honeypot to cause grief</a></h2>\n<p><em>Submitted by dirk_y, also found by IllIllI, and ylv</em></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L760\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L760</a></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L147\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L147</a></p>\n<h3 id=\"impact-4\" style=\"position:relative;\"><a href=\"#impact-4\" aria-label=\"impact 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>In a Juicebox project the project owner (or anyone that they approve) can set splits. These splits are details of the token distributions to other addresses in response to contributions to the project.</p>\n<p>At the moment the <code>SPLITS_TOTAL_PERCENT = 1_000_000_000</code>. This means that the project owner could theoretically add 1 billion different splits, each with a percent value of 1. Of course, this would require too much gas, but the idea stands. A project owner could honeypot users by creating a project with the <code>MAX_RESERVED_RATE</code> reserved rate, and setting a large percentage split for the <code>msg.sender</code> who calls <code>distributeReservedTokensOf</code> in <code>JBController.sol</code>. The project owner could then fund the project with a series of large payments to ensure that the reserved amount was sufficiently large to entice a user to call <code>distributeReservedTokensOf</code> in the belief that they will be obtaining a large percentage of the reserve.</p>\n<p>However, when a user calls this method they will hit the block gas limit and will have spent a large amount of ETH on gas, without receiving any of their expected split.</p>\n<p>I consider this to be of high severity since user assets (in the form of gas) can be permanently lost without any loss to the project owner/griefer.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The key behaviour we need to prove is that it’s possible to set more splits before hitting the block gas limit than it is to distribute reward tokens over the same number of splits. If this is true, the project owner will be able to set a number of splits that will always make the <code>distributeReservedTokensOf</code> hit the block gas limit, and hence grief the caller.</p>\n<p>This can be demonstrated by modifying the existing test cases. From some basic testing I have found that calling <code>distributeReservedTokensOf</code> hits the block gas limit when there are at least 389 splits, but for the same split count the project owner can successfully call <code>set</code> without hitting the block gas limit.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">diff --git a/test/jb_controller/distribute_reserved_token_of.test.js b/test/jb_controller/distribute_reserved</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">_token_of.test.js</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">index 2f964d8..6cfd645 100644</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">--- a/test/jb_controller/distribute_reserved_token_of.test.js</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+++ b/test/jb_controller/distribute_reserved_token_of.test.js</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">@@ -119,10 +119,15 @@ describe(&#39;JBController::distributeReservedTokensOf(...)&#39;, function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     const { addrs, projectOwner, jbController, mockJbTokenStore, mockSplitsStore, timestamp } =</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">       await setup();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     const caller = addrs[0];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">-    const splitsBeneficiariesAddresses = [addrs[1], addrs[2]].map((signer) =&gt; signer.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    let addressList = [addrs[1], addrs[2]];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    for (let i = 1; i &lt; 389; i++) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      addressList.push(addrs[1]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    const splitsBeneficiariesAddresses = addressList.map((signer) =&gt; signer.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     const splits = makeSplits({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">-      count: 2,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      count: 389,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">       beneficiary: splitsBeneficiariesAddresses,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">       preferClaimed: true,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">diff --git a/test/jb_splits_store/set.test.js b/test/jb_splits_store/set.test.js</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">index 3dd0331..5992957 100644</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">--- a/test/jb_splits_store/set.test.js</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+++ b/test/jb_splits_store/set.test.js</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">@@ -54,7 +54,7 @@ describe(&#39;JBSplitsStore::set(...)&#39;, function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     };</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">-  function makeSplits(beneficiaryAddress, count = 4) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+  function makeSplits(beneficiaryAddress, count = 389) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     let splits = [];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     for (let i = 0; i &lt; count; i++) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">       splits.push({</span></span></code></pre>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode &#x26; Hardhat</p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>For <code>JBSplit</code> objects there should be a minimum percentage for each split when calling <code>set</code>. Furthermore, it would probably be wise to prevent duplicate beneficiaries, but I have omitted that in the below recommendation for clarity. Below is a suggested diff. I’ve arbitrarily set a minimum percentage of 10,000 but given the PoC the min percentage should be conservatively set to ensure no more than 389 splits can be created (I would probably suggest a cap of max 100 splits per group).</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">diff --git a/contracts/JBSplitsStore.sol b/contracts/JBSplitsStore.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">index d61cca2..429d78a 100644</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">--- a/contracts/JBSplitsStore.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+++ b/contracts/JBSplitsStore.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">@@ -227,8 +227,8 @@ contract JBSplitsStore is IJBSplitsStore, JBOperatable {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     uint256 _percentTotal = 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     for (uint256 _i = 0; _i &lt; _splits.length; _i++) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">-      // The percent should be greater than 0.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">-      if (_splits[_i].percent == 0) revert INVALID_SPLIT_PERCENT();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      // The percent should be greater than or equal to 10000.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      if (_splits[_i].percent &lt; JBConstants.MIN_SPLIT_PERCENT) revert INVALID_SPLIT_PERCENT();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">       // ProjectId should be within a uint56</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">       if (_splits[_i].projectId &gt; type(uint56).max) revert INVALID_PROJECT_ID();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">diff --git a/contracts/libraries/JBConstants.sol b/contracts/libraries/JBConstants.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">index 9a418f2..afb5f23 100644</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">--- a/contracts/libraries/JBConstants.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+++ b/contracts/libraries/JBConstants.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">@@ -10,6 +10,7 @@ library JBConstants {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   uint256 public constant MAX_REDEMPTION_RATE = 10000;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   uint256 public constant MAX_DISCOUNT_RATE = 1000000000;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   uint256 public constant SPLITS_TOTAL_PERCENT = 1000000000;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+  uint256 public constant MIN_SPLIT_PERCENT = 10000;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   uint256 public constant MAX_FEE = 1000000000;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   uint256 public constant MAX_FEE_DISCOUNT = 1000000000;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"> }</span></span></code></pre>\n<p>An alternative to setting a minimum percentage would be to have a check on the length of the splits array and capping that at a sensible value. In this instance a project owner could still set low percentages per split, however I don’t personally see the value in being able to set a value of 1 (to receive 1 billionth of the reserve).</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/170#issuecomment-1179397247\">mejango (Juicebox) acknowledged, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Damn. Word. This is deep. Thank you.</p>\n</blockquote>\n<blockquote>\n<p>Not sure about “high” severity. But surely should be noted among the protocol’s risks.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/170#issuecomment-1193226758\">jack-the-pug (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Not bad, but also not a High. This is similar to the unbounded loop and other out-of-gas issues, the honeypot probably wont work if the wallet UI is better (alerts about the out-of-gas error).</p>\n<p>Will downgrade to Medium.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-05-discounted-fee-calculation-is-imprecise-and-calculates-less-fees-than-anticipated\" style=\"position:relative;\"><a href=\"#m-05-discounted-fee-calculation-is-imprecise-and-calculates-less-fees-than-anticipated\" aria-label=\"m 05 discounted fee calculation is imprecise and calculates less fees than anticipated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/275\">[M-05] Discounted fee calculation is imprecise and calculates less fees than anticipated</a></h2>\n<p><em>Submitted by berndartmueller, also found by 0x52, hyh, and Ruhum</em></p>\n<p>The <code>JBPayoutRedemptionPaymentTerminal._feeAmount</code> function is used to calculate the fee based on a given <code>_amount</code>, a fee rate <code>_fee</code> and an optional discount <code>_feeDiscount</code>.</p>\n<p>However, the current implementation calculates the fee in a way that leads to inaccuracy and to fewer fees being paid than anticipated by the protocol.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L1446-L1451\">JBPayoutRedemptionPaymentTerminal._feeAmount</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_feeAmount</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_fee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_feeDiscount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Calculate the discounted fee.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_discountedFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_fee</span><span class=\"mtk1\"> -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">PRBMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDiv</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_fee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_feeDiscount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">JBConstants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MAX_FEE_DISCOUNT</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// The amount of tokens from the `_amount` to pay as a fee.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">PRBMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDiv</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">JBConstants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MAX_FEE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_discountedFee</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">JBConstants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MAX_FEE</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><strong>Example:</strong></p>\n<p>Given the following (don’t mind the floating point arithmetic, this is only for simplicity. The issues still applies with integer arithmetic and higher decimal precision):</p>\n<ul>\n<li><code>amount</code> - 1000</li>\n<li><code>fee</code> - 5 (5%)</li>\n<li><code>feeDiscount</code> - 10 (10%)</li>\n<li><code>MAX_FEE_DISCOUNT</code> - 100</li>\n<li><code>MAX_FEE</code> - 100</li>\n</ul>\n<p>$discountedFee = fee - {{fee \\ast feeDiscount} \\over MAX_FEE_DISCOUNT}$<br>\n$discountedFee = 5 - {{5 \\ast 10} \\over 100}$<br>\n$discountedFee = 4.5$</p>\n<p>Calculating the fee amount based on the discounted fee of $4.5$:</p>\n<p>$fee\\_{Amount} = amount - {{amount \\ast MAX_FEE} \\over {discountedFee + MAX_FEE}}$<br>\n$fee\\_{Amount} = 1000 - {{1000 \\ast 100} \\over {4.5 + 100}}$<br>\n$fee\\_{Amount} = 1000 - 956.93779904$<br>\n$fee\\_{Amount} = 43.06220096$</p>\n<p>The calculated and wrong fee amount is <code>~43</code>, instead, it should be <code>45</code>. The issue comes from dividing by <code>_discountedFee + JBConstants.MAX_FEE</code>.</p>\n<p><strong>Now the correct way:</strong></p>\n<p>I omitted the <code>discountedFee</code> calculation as this formula is correct.</p>\n<p>$fee\\_{Amount} = {{amount \\ast discountedFee} \\over {MAX_FEE}}$<br>\n$fee\\_{Amount} = {{1000 \\ast 4.5} \\over {100}}$<br>\n$fee\\_{Amount} = 45$</p>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Fix the discounted fee calculation by adjusting the formula to:</p>\n<p>$fee\\_{Amount} = amount \\ast {fee - fee \\ast {discount \\over MAX\\_{FEE_DISCOUNT}} \\over MAX\\_{FEE}}$</p>\n<p>In Solidity:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_feeAmount</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_fee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_feeDiscount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Calculate the discounted fee.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_discountedFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_fee</span><span class=\"mtk1\"> -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">PRBMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDiv</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_fee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_feeDiscount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">JBConstants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MAX_FEE_DISCOUNT</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// The amount of tokens from the `_amount` to pay as a fee.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PRBMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDiv</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_discountedFee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">JBConstants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MAX_FEE</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/275\">mejango (Juicebox) acknowledged</a></strong> </p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/275#issuecomment-1193219669\">jack-the-pug (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Great job! One of the best write-ups I have ever seen, simple and clean.</p>\n<p>Here is a trophy for you: 🏆</p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-code-credits-fee-on-transfer-tokens-for-amount-stated-not-amount-transferred\" style=\"position:relative;\"><a href=\"#m-06-code-credits-fee-on-transfer-tokens-for-amount-stated-not-amount-transferred\" aria-label=\"m 06 code credits fee on transfer tokens for amount stated not amount transferred permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/304\">[M-06] Code credits fee-on-transfer tokens for amount stated, not amount transferred</a></h2>\n<p><em>Submitted by IllIllI, also found by cccz, hake, Meera, rbserver, and robee</em></p>\n<p>Some ERC20 tokens, such as USDT, allow for charging a fee any time <code>transfer()</code> or <code>transferFrom()</code> is called. If a contract does not allow for amounts to change after transfers, subsequent transfer operations based on the original amount will <code>revert()</code> due to the contract having an insufficient balance.</p>\n<h3 id=\"impact-5\" style=\"position:relative;\"><a href=\"#impact-5\" aria-label=\"impact 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>If there is only one user that has use a payment terminal with a fee-on-transfer token to pay a project for its token, that project will be unable to withdraw their funds, because the amount available will be less than the amount stated during deposit, and therefore the token’s <code>transfer()</code> call will revert during withdrawal. For more users, consider what happens if the token has a 10% fee-on-transfer fee - deposits will be underfunded by 10%, and the projects trying to withdraw the last 10% of deposits/rewards will have their calls revert due to the contract not holding enough tokens. If a whale does a large withdrawal, the extra 10% that that whale gets will mean that <em>many</em> projects will not be able to withdraw anything at all.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Because the terminals rely on terminal stores, which only store the initial value provided during the payment, and provide it during distributions, the terminals are unable to use the decreased value when they later are told to distribute funds to a project.</p>\n<p><code>JBSingleTokenPaymentTerminalStore.recordPaymentFrom()</code> stores the value passed in:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JBSingleTokenPaymentTerminalStore</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">372</span><span class=\"mtk1\">       </span><span class=\"mtk3\">// Add the amount to the token balance of the project.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">373</span><span class=\"mtk1\">       </span><span class=\"mtk12\">balanceOf</span><span class=\"mtk1\">[</span><span class=\"mtk11\">IJBSingleTokenPaymentTerminal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">)][</span><span class=\"mtk12\">_projectId</span><span class=\"mtk1\">] =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">374</span><span class=\"mtk1\">         </span><span class=\"mtk12\">balanceOf</span><span class=\"mtk1\">[</span><span class=\"mtk11\">IJBSingleTokenPaymentTerminal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">)][</span><span class=\"mtk12\">_projectId</span><span class=\"mtk1\">] +</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">375</span><span class=\"mtk1\">         </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L372-L375\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L372-L375</a></p>\n<p>And provide that same value when recording a dispersion:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JBSingleTokenPaymentTerminalStore</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">597</span><span class=\"mtk1\">       </span><span class=\"mtk3\">// Removed the distributed funds from the project&#39;s token balance.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">598</span><span class=\"mtk1\">       </span><span class=\"mtk12\">balanceOf</span><span class=\"mtk1\">[</span><span class=\"mtk11\">IJBSingleTokenPaymentTerminal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">)][</span><span class=\"mtk12\">_projectId</span><span class=\"mtk1\">] =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">599</span><span class=\"mtk1\">         </span><span class=\"mtk12\">balanceOf</span><span class=\"mtk1\">[</span><span class=\"mtk11\">IJBSingleTokenPaymentTerminal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">)][</span><span class=\"mtk12\">_projectId</span><span class=\"mtk1\">] -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">600</span><span class=\"mtk1\">         </span><span class=\"mtk12\">distributedAmount</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L597-L600\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L597-L600</a></p>\n<p>The terminals themselves use the values directly, and don’t consult their balances to look for changes (lines 817 and 850 below):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">abstract</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JBPayoutRedemptionPaymentTerminal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">817</span><span class=\"mtk1\">       (</span><span class=\"mtk12\">JBFundingCycle</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_fundingCycle</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_distributedAmount</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">store</span><span class=\"mtk1\">.</span><span class=\"mtk11\">recordDistributionFor</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">818</span><span class=\"mtk1\">         </span><span class=\"mtk12\">_projectId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">819</span><span class=\"mtk1\">         </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">820</span><span class=\"mtk1\">         </span><span class=\"mtk12\">_currency</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">821</span><span class=\"mtk1\">       );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">822</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">823</span><span class=\"mtk1\">       </span><span class=\"mtk3\">// The amount being distributed must be at least as much as was expected.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">824</span><span class=\"mtk1\">       </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_distributedAmount</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_minReturnedTokens</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">INADEQUATE_DISTRIBUTION_AMOUNT</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">825</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">826</span><span class=\"mtk1\">       </span><span class=\"mtk3\">// Get a reference to the project owner, which will receive tokens from paying the platform fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">827</span><span class=\"mtk1\">       </span><span class=\"mtk3\">// and receive any extra distributable funds not allocated to payout splits.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">828</span><span class=\"mtk1\">       </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_projectOwner</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">projects</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_projectId</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">829</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">830</span><span class=\"mtk1\">       </span><span class=\"mtk3\">// Define variables that will be needed outside the scoped section below.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">831</span><span class=\"mtk1\">       </span><span class=\"mtk3\">// Keep a reference to the fee amount that was paid.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">832</span><span class=\"mtk1\">       </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_fee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">833</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">834</span><span class=\"mtk1\">       </span><span class=\"mtk3\">// Scoped section prevents stack too deep. `_feeDiscount`, `_feeEligibleDistributionAmount`, and `_leftoverDistributionAmount` only used within scope.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">835</span><span class=\"mtk1\">       {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">836</span><span class=\"mtk1\">         </span><span class=\"mtk3\">// Get the amount of discount that should be applied to any fees taken.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">837</span><span class=\"mtk1\">         </span><span class=\"mtk3\">// If the fee is zero or if the fee is being used by an address that doesn&#39;t incur fees, set the discount to 100% for convinience.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">838</span><span class=\"mtk1\">         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_feeDiscount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">fee</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">isFeelessAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">839</span><span class=\"mtk1\">           ? </span><span class=\"mtk12\">JBConstants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MAX_FEE_DISCOUNT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">840</span><span class=\"mtk1\">           : </span><span class=\"mtk11\">_currentFeeDiscount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_projectId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">841</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">842</span><span class=\"mtk1\">         </span><span class=\"mtk3\">// The amount distributed that is eligible for incurring fees.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">843</span><span class=\"mtk1\">         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_feeEligibleDistributionAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">844</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">845</span><span class=\"mtk1\">         </span><span class=\"mtk3\">// The amount leftover after distributing to the splits.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">846</span><span class=\"mtk1\">         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_leftoverDistributionAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">847</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">848</span><span class=\"mtk1\">         </span><span class=\"mtk3\">// Payout to splits and get a reference to the leftover transfer amount after all splits have been paid.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">849</span><span class=\"mtk1\">         </span><span class=\"mtk3\">// Also get a reference to the amount that was distributed to splits from which fees should be taken.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">850</span><span class=\"mtk1\">         (</span><span class=\"mtk12\">_leftoverDistributionAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_feeEligibleDistributionAmount</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_distributeToPayoutSplitsOf</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">851</span><span class=\"mtk1\">           </span><span class=\"mtk12\">_projectId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">852</span><span class=\"mtk1\">           </span><span class=\"mtk12\">_fundingCycle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">configuration</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">853</span><span class=\"mtk1\">           </span><span class=\"mtk12\">payoutSplitsGroup</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">854</span><span class=\"mtk1\">           </span><span class=\"mtk12\">_distributedAmount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">855</span><span class=\"mtk1\">           </span><span class=\"mtk12\">_feeDiscount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">856</span><span class=\"mtk1\">         );</span></span></span></code></pre>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L817-L856\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L817-L856</a></p>\n<p>The terminals used the amounts stated, rather than transferred in (lines 349 and 356):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">abstract</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JBPayoutRedemptionPaymentTerminal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">4</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">332</span><span class=\"mtk1\">     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pay</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">333       </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_projectId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">334       </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">335       </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">336       </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_beneficiary</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">337       </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_minReturnedTokens</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">338       </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_preferClaimedTokens</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">339       </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_memo</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">340       </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_metadata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">341     ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isTerminalOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_projectId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">342</span><span class=\"mtk1\">       </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Prevents unused var compiler and natspec complaints.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">343</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">344</span><span class=\"mtk1\">       </span><span class=\"mtk3\">// ETH shouldn&#39;t be sent if this terminal&#39;s token isn&#39;t ETH.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">345</span><span class=\"mtk1\">       </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">token</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">JBTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ETH</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">346</span><span class=\"mtk1\">         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NO_MSG_VALUE_ALLOWED</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">347</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">348</span><span class=\"mtk1\">         </span><span class=\"mtk3\">// Transfer tokens to this terminal from the msg sender.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">349</span><span class=\"mtk1\">         </span><span class=\"mtk11\">_transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">350</span><span class=\"mtk1\">       }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">351</span><span class=\"mtk1\">       </span><span class=\"mtk3\">// If this terminal&#39;s token is ETH, override _amount with msg.value.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">352</span><span class=\"mtk1\">       </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">353</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">354</span><span class=\"mtk1\">       </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">355</span><span class=\"mtk1\">         </span><span class=\"mtk11\">_pay</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">356</span><span class=\"mtk1\">           </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">357</span><span class=\"mtk1\">           </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">358</span><span class=\"mtk1\">           </span><span class=\"mtk12\">_projectId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">359</span><span class=\"mtk1\">           </span><span class=\"mtk12\">_beneficiary</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">360</span><span class=\"mtk1\">           </span><span class=\"mtk12\">_minReturnedTokens</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">361</span><span class=\"mtk1\">           </span><span class=\"mtk12\">_preferClaimedTokens</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">362</span><span class=\"mtk1\">           </span><span class=\"mtk12\">_memo</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">363</span><span class=\"mtk1\">           </span><span class=\"mtk12\">_metadata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">364</span><span class=\"mtk1\">         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">365</span><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L332-L365\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L332-L365</a></p>\n<p>Same here (lines 555 and 561):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">abstract</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JBPayoutRedemptionPaymentTerminal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">5</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">540</span><span class=\"mtk1\">     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addToBalanceOf</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">541       </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_projectId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">542       </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">543       </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">544       </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_memo</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">545       </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_metadata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">546     ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isTerminalOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_projectId</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">547</span><span class=\"mtk1\">       </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Prevents unused var compiler and natspec complaints.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">548</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">549</span><span class=\"mtk1\">       </span><span class=\"mtk3\">// If this terminal&#39;s token isn&#39;t ETH, make sure no msg.value was sent, then transfer the tokens in from msg.sender.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">550</span><span class=\"mtk1\">       </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">token</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">JBTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ETH</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">551</span><span class=\"mtk1\">         </span><span class=\"mtk3\">// Amount must be greater than 0.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">552</span><span class=\"mtk1\">         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NO_MSG_VALUE_ALLOWED</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">553</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">554</span><span class=\"mtk1\">         </span><span class=\"mtk3\">// Transfer tokens to this terminal from the msg sender.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">555</span><span class=\"mtk1\">         </span><span class=\"mtk11\">_transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">556</span><span class=\"mtk1\">       }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">557</span><span class=\"mtk1\">       </span><span class=\"mtk3\">// If the terminal&#39;s token is ETH, override `_amount` with msg.value.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">558</span><span class=\"mtk1\">       </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">559</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">560</span><span class=\"mtk1\">       </span><span class=\"mtk3\">// Add to balance while only refunding held fees if the funds aren&#39;t originating from a feeless terminal.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">561</span><span class=\"mtk1\">       </span><span class=\"mtk11\">_addToBalanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_projectId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, !</span><span class=\"mtk12\">isFeelessAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_memo</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_metadata</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">562</span><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L540-L562\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L540-L562</a></p>\n<p>The transfer of fees and reserves have the same issue.</p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Measure the contract balance before and after the call to <code>transfer()</code>/<code>transferFrom()</code> in <code>JBERC20PaymentTerminal._transferFrom()</code>, and use the difference between the two as the amount, rather than the amount stated</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/304\">drgorillamd (Juicebox) acknowledged</a></strong></p>\n<p><strong>drgorillamd (Juicebox) resolved:</strong></p>\n<blockquote>\n<p>PR with fix: <a href=\"https://github.com/jbx-protocol/juice-contracts-v3/pull/1\">PR #1</a></p>\n</blockquote>\n<p><strong>berndartmueller (warden) reviewed mitigation:</strong></p>\n<blockquote>\n<p>The delta of the token balance before and after a transfer is used instead of the amount stated to handle fee-on-transfer tokens appropriately.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-07-processfees-may-fail-due-to-exceed-gas-limit\" style=\"position:relative;\"><a href=\"#m-07-processfees-may-fail-due-to-exceed-gas-limit\" aria-label=\"m 07 processfees may fail due to exceed gas limit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/8\">[M-07] processFees() may fail due to exceed gas limit</a></h2>\n<p><em>Submitted by oyc_109, also found by 0x52, IllIllI, and pashov</em></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L594\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L594</a></p>\n<h3 id=\"impact-6\" style=\"position:relative;\"><a href=\"#impact-6\" aria-label=\"impact 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The function <code>processFees()</code> in <code>JBPayoutRedemptionPaymentTerminal.sol</code> may fail due to unbounded loop over <code>_heldFeesOf[_projectId]</code></p>\n<p><code>_heldFeesOf[_projectId]</code> can get very large due to the function <code>_takeFeeFrom()</code> where it pushes fees that should be paid to a specific beneficiary onto the array</p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L1199\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L1199</a></p>\n<p><code>_heldFeesOf[_projectId]</code> could get large and cause a DOS condition where no fees can be distributed due to exceed of gas limit</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    for (uint256 _i = 0; _i &lt; _heldFeeLength; ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // Get the fee amount.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      uint256 _amount = _feeAmount(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _heldFees[_i].amount,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _heldFees[_i].fee,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _heldFees[_i].feeDiscount</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/8\">mejango (Juicebox) acknowledged</a></strong> </p>\n<hr>\n<h2 id=\"m-08-reentrancy-issues-on-function-distributepayoutsof\" style=\"position:relative;\"><a href=\"#m-08-reentrancy-issues-on-function-distributepayoutsof\" aria-label=\"m 08 reentrancy issues on function distributepayoutsof permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/329\">[M-08] Reentrancy issues on function <code>distributePayoutsOf</code></a></h2>\n<p><em>Submitted by 0x29A, also found by AlleyCat and hubble</em></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L415-L448\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L415-L448</a></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L788-L900\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L788-L900</a></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L981-L1174\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L981-L1174</a></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBETHPaymentTerminal.sol#L63-L79\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBETHPaymentTerminal.sol#L63-L79</a></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBERC20PaymentTerminal.sol#L73-L89\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBERC20PaymentTerminal.sol#L73-L89</a></p>\n<h3 id=\"impact-7\" style=\"position:relative;\"><a href=\"#impact-7\" aria-label=\"impact 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>In the contract <code>JBPayoutRedemptionPaymentTerminal</code>, the function <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L415-L448\"><code>distributePayoutsOf</code></a> calls the internal function <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L788-L900\"><code>_distributePayoutsOf</code></a> and this internal function perfoms a loop where is using the function <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L981-L1174\"><code>_distributeToPayoutSplitsOf</code></a>\nIn these functions there are a <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L1148\"><code>_transferFrom</code></a> what:</p>\n<ul>\n<li><code>JBETHPaymentTerminal</code> using a <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBETHPaymentTerminal.sol#L78\"><code>Address.sendValue(_to, _amount)</code></a></li>\n<li><code>JBERC20PaymentTerminal</code> using a <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBERC20PaymentTerminal.sol#L87\"><code>IERC20(token).transfer(_to, _amount)</code></a> with a <code>ERC777</code> as token</li>\n</ul>\n<p>Both give back the control to the <code>msg.sender</code> (<code>_to</code> variable) creating a reentrancy attack vector.</p>\n<p>Also could end with a lot of bad calculation because is using uncheckeds statements and function <code>_distributePayoutsOf</code> its no respecting the <code>checks, effects, interactions</code> pattern.</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Craft a contract to call function <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L437\"><code>distributePayoutsOf</code></a>, on receive ether reentrant to function <code>distributePayoutsOf</code> or use a <code>ERC777</code> callback.</p>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a reentrancyGuard as you do on <code>JBSingleTokenPaymentTerminalStore.sol</code>;\nYou have already imported the ReentrancyGuard on <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L5\">JBPayoutRedemptionPaymentTerminal.sol#L5</a> but you are not using it.</p>\n<p>My recommendation is to add <code>nonReentrant</code> modifier on function <code>distributePayoutsOf</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/35\">drgorillamd (Juicebox) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/329#issuecomment-1193225553\">jack-the-pug (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Lack of clear path to exploit it, but it does seem like <code>_distributeToPayoutSplitsOf</code> can be used to reenter <code>distributePayoutsOf</code>; it requires the attacker to be one of the project’s splits beneficiaries, though.</p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L1148-L1153\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L1148-L1153</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">_transferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_split</span><span class=\"mtk1\">.</span><span class=\"mtk12\">beneficiary</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) ? </span><span class=\"mtk12\">_split</span><span class=\"mtk1\">.</span><span class=\"mtk12\">beneficiary</span><span class=\"mtk1\"> : </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_netPayoutAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          );</span></span></span></code></pre>\n</blockquote>\n<hr>\n<h2 id=\"m-09-unhandled-chainlink-revert-would-lock-all-price-oracle-access\" style=\"position:relative;\"><a href=\"#m-09-unhandled-chainlink-revert-would-lock-all-price-oracle-access\" aria-label=\"m 09 unhandled chainlink revert would lock all price oracle access permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/59\">[M-09] Unhandled chainlink revert would lock all price oracle access</a></h2>\n<p><em>Submitted by bardamu, also found by berndartmueller, codexploder, Alex the Entreprenerd, and horsefacts</em></p>\n<p>Call to <code>latestRoundData</code> could potentially revert and make it impossible to query any prices. Feeds cannot be changed after they are configured (<a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBPrices.sol#L115\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBPrices.sol#L115</a>) so this would result in a permanent denial of service.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Chainlink’s multisigs can immediately block access to price feeds at will. Therefore, to prevent denial of service scenarios, it is recommended to query Chainlink price feeds using a defensive approach with Solidity’s try/catch structure. In this way, if the call to the price feed fails, the caller contract is still in control and can handle any errors safely and explicitly.</p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBPrices.sol#L69\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBPrices.sol#L69</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if (_feed != IJBPriceFeed(address(0))) return _feed.currentPrice(_decimals);</span></span></code></pre>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBChainlinkV3PriceFeed.sol#L42-L44\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBChainlinkV3PriceFeed.sol#L42-L44</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function currentPrice(uint256 _decimals) external view override returns (uint256) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  // Get the latest round information. Only need the price is needed.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  (, int256 _price, , , ) = feed.latestRoundData();</span></span></code></pre>\n<p>Refer to <a href=\"https://blog.openzeppelin.com/secure-smart-contract-guidelines-the-dangers-of-price-oracles/\">https://blog.openzeppelin.com/secure-smart-contract-guidelines-the-dangers-of-price-oracles/</a> for more information regarding potential risks to account for when relying on external price feed providers.</p>\n<h3 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VIM</p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Surround the call to <code>latestRoundData()</code> with <code>try/catch</code> instead of calling it directly. In a scenario where the call reverts, the catch block can be used to call a fallback oracle or handle the error in any other suitable way.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/59\">mejango (Juicebox) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/59#issuecomment-1200414043\">jack-the-pug (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Good catch! Seems like we should update this function to allow changing the feed contract:</p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBPrices.sol#L109-L121\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBPrices.sol#L109-L121</a></p>\n</blockquote>\n<hr>\n<h2 id=\"m-10-grieffer-beneficiary-can-cause-dos\" style=\"position:relative;\"><a href=\"#m-10-grieffer-beneficiary-can-cause-dos\" aria-label=\"m 10 grieffer beneficiary can cause dos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/229\">[M-10] Grieffer beneficiary can cause DOS</a></h2>\n<p><em>Submitted by hake, also found by cccz</em></p>\n<p>Payouts won’t be able to be distributed if one of multiple beneficiaries decides to revert the transaction on receival.</p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L1147-L1152\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L1147-L1152</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// If there&#39;s a beneficiary, send the funds directly to the beneficiary. Otherwise, send to the msg.sender.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">_transferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_split</span><span class=\"mtk1\">.</span><span class=\"mtk12\">beneficiary</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) ? </span><span class=\"mtk12\">_split</span><span class=\"mtk1\">.</span><span class=\"mtk12\">beneficiary</span><span class=\"mtk1\"> : </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_netPayoutAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          );</span></span></span></code></pre>\n<p>If token used is native ETH or ERC777 a beneficiary can revert the transaction on the callback and DOS <code>_distributeToPayoutSplitsOf()</code> for all the other beneficiaries.</p>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Have beneficiaries withdraw their benefit instead of sending it to them.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/229#issuecomment-1182422038\">mejango (Juicebox) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>By design. Project owners bring their own risks and opportunities when setting payout splits. Made clear <a href=\"https://info.juicebox.money/dev/learn/risks#setting-a-distribution-limit-and-payout-splits\">here</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/229#issuecomment-1183603378\">hake (warden) commented</a>:</strong></p>\n<blockquote>\n<p>A malicious or compromised beneficiary is not exactly under a project owner’s control. Implementing the recommended mitigation step would prevent the possibility of DOS while maintaining all privileges of project owner. No risks outlined in link below would be mitigated by the recommended mitigation, thus project owner would still have access to same range of functionalities.\n<a href=\"https://info.juicebox.money/dev/learn/risks/#setting-a-distribution-limit-and-payout-splits\">https://info.juicebox.money/dev/learn/risks/#setting-a-distribution-limit-and-payout-splits</a></p>\n</blockquote>\n<hr>\n<h2 id=\"m-11-addfeedfor-should-check-if-inverse-feed-already-exists\" style=\"position:relative;\"><a href=\"#m-11-addfeedfor-should-check-if-inverse-feed-already-exists\" aria-label=\"m 11 addfeedfor should check if inverse feed already exists permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/79\">[M-11] addFeedFor should check if inverse feed already exists</a></h2>\n<p><em>Submitted by 0x52, also found by DimitarDimitrov</em></p>\n<p>Potentially inconsistent currency conversions.</p>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>addFeedFor</code> requires that a price feed for the _currency _base doesn’t exist when adding a new price feed but doesn’t check if the inverse already exists. This means that two different oracles (potentially with different prices) could be used for _currency -> _base vs. _base -> _currency. Different prices would lead to inconsistent between conversion ratios depending on the direction of the conversion.</p>\n<h3 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Change L115 to:\n<code>if (feedFor\\[\\_currency]\\[\\_base] != IJBPriceFeed(address(0)) || feedFor\\[\\_base]\\[\\_currency] != IJBPriceFeed(address(0))) revert PRICE_FEED_ALREADY_EXISTS()</code></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/79\">mejango (Juicebox) confirmed</a></strong> </p>\n<p><strong>mejango (Juicebox) resolved:</strong></p>\n<blockquote>\n<p>PR with fix: <a href=\"https://github.com/jbx-protocol/juice-contracts-v3/pull/1\">PR #1</a></p>\n</blockquote>\n<p><strong>berndartmueller (warden) reviewed mitigation:</strong></p>\n<blockquote>\n<p>An additional check has been added to prevent adding a price feed for the inverse pair.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-12-changetokenof-makes-it-impossible-for-holders-of-oldtoken-to-redeem-the-overflowed-assets\" style=\"position:relative;\"><a href=\"#m-12-changetokenof-makes-it-impossible-for-holders-of-oldtoken-to-redeem-the-overflowed-assets\" aria-label=\"m 12 changetokenof makes it impossible for holders of oldtoken to redeem the overflowed assets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/83\">[M-12] changeTokenOf makes it impossible for holders of oldToken to redeem the overflowed assets.</a></h2>\n<p><em>Submitted by cccz</em></p>\n<p>When the owner calls the changeTokenOf function of the JBController contract, the token corresponding to the current project will be changed, which will make the oldToken holder unable to redeem the overflowing assets.</p>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena//blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L588-L606\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena//blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L588-L606</a></p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena//blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBTokenStore.sol#L236-L269\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena//blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBTokenStore.sol#L236-L269</a></p>\n<h3 id=\"recommended-mitigation-steps-12\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-12\" aria-label=\"recommended mitigation steps 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider adding a delay to <code>changeTokenOf</code>, or adding a function to convert <code>oldToken</code> to <code>newToken</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/83\">mejango (Juicebox) confirmed</a></strong></p>\n<p><strong>mejango (Juicebox) resolved:</strong></p>\n<blockquote>\n<p>PR with fix: <a href=\"https://github.com/jbx-protocol/juice-contracts-v3/pull/1\">PR #1</a></p>\n</blockquote>\n<p><strong>berndartmueller (warden) reviewed mitigation:</strong></p>\n<blockquote>\n<p>Once a token is set for a project, it can not be changed anymore.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-13-jbtoken-mint-function-could-mint-arbitrary-amount-of-tokens\" style=\"position:relative;\"><a href=\"#m-13-jbtoken-mint-function-could-mint-arbitrary-amount-of-tokens\" aria-label=\"m 13 jbtoken mint function could mint arbitrary amount of tokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/84\">[M-13] JBToken: mint function could mint arbitrary amount of tokens</a></h2>\n<p><em>Submitted by cccz</em></p>\n<p>The owner of the JBToken contract can mint arbitrary amount of tokens.</p>\n<p>In general, the owner of the JBToken contract is the JBTokenStore contract, and the minting of the tokens is controlled by the JBController contract, but when the changeTokenOf function of the JBController contract is called, the owner will be transferred to any address, which can mint arbitrary amount of tokens.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  function mint(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 _projectId,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address _account,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 _amount</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  ) external override onlyOwner {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _projectId; // Prevents unused var compiler and natspec complaints.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return _mint(_account, _amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena//blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBToken.sol#L106-L114\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena//blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBToken.sol#L106-L114</a></p>\n<h3 id=\"recommended-mitigation-steps-13\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-13\" aria-label=\"recommended mitigation steps 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider setting minter as the JBTokenStore contract and adding the onlyminter modifier to the mint function.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/84\">mejango (Juicebox) acknowledged</a></strong> </p>\n<hr>\n<h2 id=\"m-14-more-outstanding-reserved-tokens-are-distributed-than-anticipated-leading-to-less-redeemable-assets-and-therefore-loss-of-user-funds\" style=\"position:relative;\"><a href=\"#m-14-more-outstanding-reserved-tokens-are-distributed-than-anticipated-leading-to-less-redeemable-assets-and-therefore-loss-of-user-funds\" aria-label=\"m 14 more outstanding reserved tokens are distributed than anticipated leading to less redeemable assets and therefore loss of user funds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/285\">[M-14] More outstanding reserved tokens are distributed than anticipated leading to less redeemable assets and therefore loss of user funds</a></h2>\n<p><em>Submitted by berndartmueller</em></p>\n<p>The <code>JBController.distributeReservedTokensOf</code> function is used to distribute all outstanding reserved tokens for a project. Internally, the <code>JBController._distributeReservedTokensOf</code> function calculates the distributable amount of tokens <code>tokenCount</code> with the function <code>JBController._reservedTokenAmountFrom</code>.</p>\n<p>However, the current implementation of <code>JBController._reservedTokenAmountFrom</code> calculates the amount of reserved tokens currently tracked in a way that leads to inaccuracy and to more tokens distributed than anticipated.</p>\n<h3 id=\"impact-8\" style=\"position:relative;\"><a href=\"#impact-8\" aria-label=\"impact 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>More tokens than publicly defined via the funding cycle <code>reservedRate</code> are distributed (minted) to the splits and the owner increasing the total supply and therefore reducing the amount of terminal assets redeemable by a user. The increased supply takes effect in <code>JBSingleTokenPaymentTerminStore.recordRedemptionFor</code> on <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L784\">L784</a>. The higher the token supply, the less terminal assets redeemable.</p>\n<h3 id=\"proof-of-concept-13\" style=\"position:relative;\"><a href=\"#proof-of-concept-13\" aria-label=\"proof of concept 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L1086-L1090\">JBController._reservedTokenAmountFrom</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_reservedTokenAmountFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_processedTokenTracker</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_reservedRate</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_totalEligibleTokens</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Get a reference to the amount of tokens that are unprocessed.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_unprocessedTokenBalanceOf</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_processedTokenTracker</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ? </span><span class=\"mtk12\">_totalEligibleTokens</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_processedTokenTracker</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      : </span><span class=\"mtk12\">_totalEligibleTokens</span><span class=\"mtk1\"> + </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(-</span><span class=\"mtk12\">_processedTokenTracker</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// If there are no unprocessed tokens, return.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_unprocessedTokenBalanceOf</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// If all tokens are reserved, return the full unprocessed amount.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_reservedRate</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">JBConstants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MAX_RESERVED_RATE</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_unprocessedTokenBalanceOf</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">PRBMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDiv</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_unprocessedTokenBalanceOf</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">JBConstants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MAX_RESERVED_RATE</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">JBConstants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MAX_RESERVED_RATE</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_reservedRate</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ) - </span><span class=\"mtk12\">_unprocessedTokenBalanceOf</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><strong>Example:</strong></p>\n<p>Given the following (don’t mind the floating point arithmetic, this is only for simplicity. The issues still applies with integer arithmetic and higher decimal precision):</p>\n<ul>\n<li><code>processedTokenTracker</code> - <code>-1000</code></li>\n<li><code>reservedRate</code> - 10 (10%)</li>\n<li><code>totalEligibleTokens</code> - 0</li>\n<li><code>MAX_RESERVED_RATE</code> - 100</li>\n</ul>\n<p>$unprocessedTokenBalanceOf = 0 + (--1000)$<br>\n$unprocessedTokenBalanceOf = 1000$</p>\n<p>$reservedTokenAmount = {{unprocessedTokenBalanceOf \\ast MAX_RESERVED_RATE} \\over {MAX_RESERVED_RATE - reservedRate}} - unprocessedTokenBalanceOf$<br>\n$reservedTokenAmount = {{1000 \\ast 100} \\over {100 - 10}} - 1000$<br>\n$reservedTokenAmount = 1111.111 - 1000$<br>\n$reservedTokenAmount = 111,111$</p>\n<p>The calculated and wrong amount is <code>~111</code>, instead it should be <code>100</code> (10% of 1000). The issue comes from dividing by <code>JBConstants.MAX_RESERVED_RATE - _reservedRate</code>.</p>\n<p><strong>Now the correct way:</strong></p>\n<p>$reservedTokenAmount = {{unprocessedTokenBalanceOf \\ast reservedRate} \\over MAX_RESERVED_RATE}$<br>\n$reservedTokenAmount = {{1000 \\ast 10} \\over 100}$<br>\n$reservedTokenAmount = 100$</p>\n<h3 id=\"recommended-mitigation-steps-14\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-14\" aria-label=\"recommended mitigation steps 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Fix the outstanding reserve token calculation by implementing the calculation as following:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_reservedTokenAmountFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_processedTokenTracker</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_reservedRate</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_totalEligibleTokens</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Get a reference to the amount of tokens that are unprocessed.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_unprocessedTokenBalanceOf</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_processedTokenTracker</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ? </span><span class=\"mtk12\">_totalEligibleTokens</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_processedTokenTracker</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    : </span><span class=\"mtk12\">_totalEligibleTokens</span><span class=\"mtk1\"> + </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(-</span><span class=\"mtk12\">_processedTokenTracker</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// If there are no unprocessed tokens, return.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_unprocessedTokenBalanceOf</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">PRBMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDiv</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">_unprocessedTokenBalanceOf</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">_reservedRate</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">JBConstants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MAX_RESERVED_RATE</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/285#issuecomment-1179405474\">mejango (Juicebox) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>The only case where the tracker can be -1000 but the totalEligibleTokens is 0 is if reserved rate is 100%. <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L664\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L664</a>\n<img width=\"911\" alt=\"image\" src=\"https://user-images.githubusercontent.com/77952627/178077733-af364733-bcfb-47b9-b673-80bcad0efb2e.png\"></p>\n<p>Furthermore, reserved rate changes per fc is noted in the protocol’s known risks exposed by design:<a href=\"https://info.juicebox.money/dev/learn/risks#undistributed-reserved-rate-risk\">https://info.juicebox.money/dev/learn/risks#undistributed-reserved-rate-risk</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/285#issuecomment-1207328114\">jack-the-pug (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>I find this issue to be a valid Medium issue as it introduced an unexpected behavior that can cause a leak of value in certain circumstances.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-15-locked-splits-can-be-updated\" style=\"position:relative;\"><a href=\"#m-15-locked-splits-can-be-updated\" aria-label=\"m 15 locked splits can be updated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/278\">[M-15] Locked splits can be updated</a></h2>\n<p><em>Submitted by berndartmueller</em></p>\n<p>The check if the newly provided project splits contain the currently locked splits does not check the <code>JBSplit</code> struct properties <code>preferClaimed</code> and <code>preferAddToBalance</code>.</p>\n<p>According to the docs in <code>JBSplit.sol</code>, <em>“…if the split should be unchangeable until the specified time, with the exception of extending the locked period.”</em>, locked sets are unchangeable.</p>\n<p>However, locked sets with either <code>preferClaimed</code> or <code>preferAddToBalance</code> set to true can have their bool values overwritten by supplying the same split just with different bool values.</p>\n<h3 id=\"proof-of-concept-14\" style=\"position:relative;\"><a href=\"#proof-of-concept-14\" aria-label=\"proof of concept 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L213-L220\">JBSplitsStore.sol#L213-L220</a></p>\n<p>The check for sameness does not check the equality of the struct properties <code>preferClaimed</code> and <code>preferAddToBalance</code>.</p>\n<p><em>Please see warden’s <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/278\">original report</a> for full PoC and Mitigation details.</em></p>\n<h3 id=\"recommended-mitigation-steps-15\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-15\" aria-label=\"recommended mitigation steps 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add two additional sameness checks for <code>preferClaimed</code> and <code>preferAddToBalance</code>:</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/278\">mejango (Juicebox) confirmed</a></strong> </p>\n<p><strong>mejango (Juicebox) resolved:</strong></p>\n<blockquote>\n<p>PR with fix: <a href=\"https://github.com/jbx-protocol/juice-contracts-v3/pull/1\">PR #1</a></p>\n</blockquote>\n<p><strong>berndartmueller (warden) reviewed mitigation:</strong></p>\n<blockquote>\n<p>Two additional sameness checks for the split properties <code>preferClaimed</code> and <code>preferAddToBalance</code> have been added.</p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 60 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/299\">report highlighted below</a> by <strong>IllIllI</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/21\">Lambda</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/205\">_141345_</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/217\">zzzitron</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/274\">berndartmueller</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/286\">Meera</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/337\">GimelSec</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/186\">Picodes</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/244\">horsefacts</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/123\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/43\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/228\">simon135</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/47\">cccz</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/222\">sahar</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/12\">robee</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/143\">jonatascm</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/358\">joestakey</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/368\">hubble</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/268\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/125\">codexploder</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/265\">0xDjango</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/215\">Sm4rty</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/365\">Hawkeye</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/197\">delfin454000</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/261\">Ch_301</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/327\">asutorufos</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/236\">hake</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/191\">Waze</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/351\">TomJ</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/325\">TerrierLover</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/151\">svskaushik</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/60\">samruna</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/168\">sach1r0</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/254\">Rohan16</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/182\">ReyAdmirado</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/183\">rbserver</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/263\">pashov</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/5\">oyc_109</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/189\">MiloTruck</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/94\">m_Rassska</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/344\">Kaiziron</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/366\">JC</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/72\">durianSausage</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/357\">defsec</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/322\">Chom</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/76\">Chandr</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/112\">Bnke0x0</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/355\">aysha</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/139\">0xNineDec</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/284\">0xf15ers</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/290\">0xdanial</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/293\">0x29A</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/320\">0v3rf10w</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/154\">_Adam</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/208\">rajatbeladiya</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/115\">Noah3o6</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/347\">jayfromthe13th</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/62\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/108\">djxploit</a>, and <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/136\">brgltd</a>.</em></p>\n<h2 id=\"low-risk-issues\" style=\"position:relative;\"><a href=\"#low-risk-issues\" aria-label=\"low risk issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk Issues</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Instances</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>L-01</td>\n<td align=\"left\">Weight of one being used as zero not documented</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>L-02</td>\n<td align=\"left\">Calls may run out of gas until arrays are reduced in size</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>L-03</td>\n<td align=\"left\">Dust amounts not compensated, even if not using price oracle</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>L-04</td>\n<td align=\"left\">Splits can’t be locked once the timestamp passes <code>type(uint48).max</code></td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>L-05</td>\n<td align=\"left\">Unsafe use of <code>transfer()</code>/<code>transferFrom()</code> with <code>IERC20</code></td>\n<td align=\"center\">2</td>\n</tr>\n</tbody>\n</table>\n<p>Total: 7 instances over 5 issues</p>\n<h2 id=\"l-01-weight-of-one-being-used-as-zero-not-documented\" style=\"position:relative;\"><a href=\"#l-01-weight-of-one-being-used-as-zero-not-documented\" aria-label=\"l 01 weight of one being used as zero not documented permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-01] Weight of one being used as zero not documented</h2>\n<p>The comments and code below say that a weight of one is being used as a weight of zero. If a project is mature, or eventually becomes mature, a weight of one may in fact be a useful weighting, and the project owners will become very confused when they are unable to receive funds with this weighting.</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JBFundingCycleStore</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">467</span><span class=\"mtk1\">        </span><span class=\"mtk3\">// A weight of 1 is treated as a weight of 0.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">468</span><span class=\"mtk1\">        </span><span class=\"mtk3\">// This is to allow a weight of 0 (default) to represent inheriting the discounted weight of the previous funding cycle.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">469</span><span class=\"mtk1\">        </span><span class=\"mtk12\">_weight</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_weight</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">470</span><span class=\"mtk1\">          ? (</span><span class=\"mtk12\">_weight</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> ? </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">_weight</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">471</span><span class=\"mtk1\">:         : </span><span class=\"mtk11\">_deriveWeightFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_baseFundingCycle</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_start</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L467-L471\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L467-L471</a></p>\n<h2 id=\"l-02-calls-may-run-out-of-gas-until-arrays-are-reduced-in-size\" style=\"position:relative;\"><a href=\"#l-02-calls-may-run-out-of-gas-until-arrays-are-reduced-in-size\" aria-label=\"l 02 calls may run out of gas until arrays are reduced in size permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-02] Calls may run out of gas until arrays are reduced in size</h2>\n<p>The examples below are of functions that may revert due to the size of the data they’re processing, but no funds are at risk because the arrays can be changed.</p>\n<p><em>There are 2 instances of this issue. (For in-depth details on this and all further gas optimizations with multiple instances, see the warden’s <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/299\">full report</a>.)</em></p>\n<h2 id=\"l-03-dust-amounts-not-compensated-even-if-not-using-price-oracle\" style=\"position:relative;\"><a href=\"#l-03-dust-amounts-not-compensated-even-if-not-using-price-oracle\" aria-label=\"l 03 dust amounts not compensated even if not using price oracle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-03] Dust amounts not compensated, even if not using price oracle</h2>\n<p>If there’s a fixed weighting between what the user provides, and what is minted for them, there should be code that tracks partial token amounts, so that later payments are compensated for their prior partial amounts.</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JBSingleTokenPaymentTerminalStore</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">385</span><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_weightRatio</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currency</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_baseWeightCurrency</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">386</span><span class=\"mtk1\">        ? </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**</span><span class=\"mtk12\">_decimals</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">387</span><span class=\"mtk1\">        : </span><span class=\"mtk12\">prices</span><span class=\"mtk1\">.</span><span class=\"mtk11\">priceFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currency</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_baseWeightCurrency</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_decimals</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">388</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">389</span><span class=\"mtk1\">      </span><span class=\"mtk3\">// Find the number of tokens to mint, as a fixed point number with as many decimals as `weight` has.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">390</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">tokenCount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">PRBMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDiv</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_weight</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_weightRatio</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L385-L390\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L385-L390</a></p>\n<h2 id=\"l-04-splits-cant-be-locked-once-the-timestamp-passes-typeuint48max\" style=\"position:relative;\"><a href=\"#l-04-splits-cant-be-locked-once-the-timestamp-passes-typeuint48max\" aria-label=\"l 04 splits cant be locked once the timestamp passes typeuint48max permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-04] Splits can’t be locked once the timestamp passes <code>type(uint48).max</code></h2>\n<p>This behavior isn’t documented anywhere, and a project will be confused by this behavior when that time comes (the original developers will be unable to explain it because they’ll be dead).</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JBSplitsStore</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">261</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_splits</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lockedUntil</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint48</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">INVALID_LOCKED_UNTIL</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L261\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L261</a></p>\n<h2 id=\"l-05-unsafe-use-of-transfertransferfrom-with-ierc20\" style=\"position:relative;\"><a href=\"#l-05-unsafe-use-of-transfertransferfrom-with-ierc20\" aria-label=\"l 05 unsafe use of transfertransferfrom with ierc20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-05] Unsafe use of <code>transfer()</code>/<code>transferFrom()</code> with <code>IERC20</code></h2>\n<p>Some tokens do not implement the ERC20 standard properly but are still accepted by most code that accepts ERC20 tokens.  For example Tether (USDT)‘s <code>transfer()</code> and <code>transferFrom()</code> functions on L1 do not return booleans as the specification requires, and instead have no return value. When these sorts of tokens are cast to <code>IERC20</code>, their <a href=\"https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca\">function signatures</a> do not match and therefore the calls made, revert (see <a href=\"https://gist.github.com/IllIllI000/2b00a32e8f0559e8f386ea4f1800abc5\">this</a> link for a test case). Use OpenZeppelin’s <code>SafeERC20</code>’s <code>safeTransfer()</code>/<code>safeTransferFrom()</code> instead.</p>\n<p><em>There are 2 instances of this issue.</em></p>\n<h2 id=\"non-critical-issues\" style=\"position:relative;\"><a href=\"#non-critical-issues\" aria-label=\"non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Non-Critical Issues</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Instances</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>N-01</td>\n<td align=\"left\">Confusing variable names</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>N-02</td>\n<td align=\"left\">Return values of <code>approve()</code> not checked</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>N-03</td>\n<td align=\"left\">Adding a <code>return</code> statement when the function defines a named return variable, is redundant</td>\n<td align=\"center\">4</td>\n</tr>\n<tr>\n<td>N-04</td>\n<td align=\"left\">Non-assembly method available</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>N-05</td>\n<td align=\"left\"><code>constant</code>s should be defined rather than using magic numbers</td>\n<td align=\"center\">37</td>\n</tr>\n<tr>\n<td>N-06</td>\n<td align=\"left\">Use a more recent version of solidity</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>N-07</td>\n<td align=\"left\">Use a more recent version of solidity</td>\n<td align=\"center\">3</td>\n</tr>\n<tr>\n<td>N-08</td>\n<td align=\"left\">Use scientific notation (e.g. <code>1e18</code>) rather than exponentiation (e.g. <code>10**18</code>)</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>N-09</td>\n<td align=\"left\">Constant redefined elsewhere</td>\n<td align=\"center\">11</td>\n</tr>\n<tr>\n<td>N-10</td>\n<td align=\"left\">Inconsistent spacing in comments</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>N-11</td>\n<td align=\"left\">Lines are too long</td>\n<td align=\"center\">49</td>\n</tr>\n<tr>\n<td>N-12</td>\n<td align=\"left\">Typos</td>\n<td align=\"center\">17</td>\n</tr>\n<tr>\n<td>N-13</td>\n<td align=\"left\">File is missing NatSpec</td>\n<td align=\"center\">29</td>\n</tr>\n<tr>\n<td>N-14</td>\n<td align=\"left\">NatSpec is incomplete</td>\n<td align=\"center\">5</td>\n</tr>\n<tr>\n<td>N-15</td>\n<td align=\"left\">Event is missing <code>indexed</code> fields</td>\n<td align=\"center\">34</td>\n</tr>\n<tr>\n<td>N-16</td>\n<td align=\"left\">Not using the named return variables anywhere in the function is confusing</td>\n<td align=\"center\">6</td>\n</tr>\n</tbody>\n</table>\n<p>Total: 201 instances over 16 issues</p>\n<h2 id=\"n-01-confusing-variable-names\" style=\"position:relative;\"><a href=\"#n-01-confusing-variable-names\" aria-label=\"n 01 confusing variable names permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-01] Confusing variable names</h2>\n<p>It was well into my review before I realized that ‘configuration’ means the timestamp at which the configuration is set, not the actual configuration details. It would be helpful to people reading the code to name it something like <code>configTimestamp</code> in all places. Below is one example of many.</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JBFundingCycleStore</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">332</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_configuration</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L332\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L332</a></p>\n<h2 id=\"n-02-return-values-of-approve-not-checked\" style=\"position:relative;\"><a href=\"#n-02-return-values-of-approve-not-checked\" aria-label=\"n 02 return values of approve not checked permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-02] Return values of <code>approve()</code> not checked</h2>\n<p>Not all <code>IERC20</code> implementations <code>revert()</code> when there’s a failure in <code>approve()</code>. The function signature has a <code>boolean</code> return value and they indicate errors that way instead. By not checking the return value, operations that should have marked as failed, may potentially go through without actually approving anything.</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JBERC20PaymentTerminal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">99</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/tree/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBERC20PaymentTerminal.sol#L99\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/tree/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBERC20PaymentTerminal.sol#L99</a></p>\n<h2 id=\"n-03-adding-a-return-statement-when-the-function-defines-a-named-return-variable-is-redundant\" style=\"position:relative;\"><a href=\"#n-03-adding-a-return-statement-when-the-function-defines-a-named-return-variable-is-redundant\" aria-label=\"n 03 adding a return statement when the function defines a named return variable is redundant permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-03] Adding a <code>return</code> statement when the function defines a named return variable, is redundant</h2>\n<p><em>There are 4 instances of this issue.</em></p>\n<h2 id=\"n-04-non-assembly-method-available\" style=\"position:relative;\"><a href=\"#n-04-non-assembly-method-available\" aria-label=\"n 04 non assembly method available permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-04] Non-assembly method available</h2>\n<p><code>assembly{ id := chainid() }</code> => <code>uint256 id = block.chainid</code>, <code>assembly { size := extcodesize() }</code> => <code>uint256 size = address().code.length</code></p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JBFundingCycleStore</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">320</span><span class=\"mtk1\">:          _size := </span><span class=\"mtk11\">extcodesize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_ballot</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// No contract at the address ?</span></span></span></code></pre>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/tree/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L320\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/tree/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L320</a></p>\n<h2 id=\"n-05-constants-should-be-defined-rather-than-using-magic-numbers\" style=\"position:relative;\"><a href=\"#n-05-constants-should-be-defined-rather-than-using-magic-numbers\" aria-label=\"n 05 constants should be defined rather than using magic numbers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-05] <code>constant</code>s should be defined rather than using magic numbers</h2>\n<p>Even <a href=\"https://github.com/code-423n4/2022-05-opensea-seaport/blob/9d7ce4d08bf3c3010304a0476a785c70c0e90ae7/contracts/lib/TokenTransferrer.sol#L35-L39\">assembly</a> can benefit from using readable constants instead of hex/numeric literals.</p>\n<p><em>There are 37 instances of this issue.</em></p>\n<h2 id=\"n-06-use-a-more-recent-version-of-solidity\" style=\"position:relative;\"><a href=\"#n-06-use-a-more-recent-version-of-solidity\" aria-label=\"n 06 use a more recent version of solidity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-06] Use a more recent version of solidity</h2>\n<p>Use a solidity version of at least 0.8.12 to get <code>string.concat()</code> to be used instead of <code>abi.encodePacked(&#x3C;str>,&#x3C;str>)</code>.</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">abstract</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JBPayoutRedemptionPaymentTerminal</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">6</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/tree/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L2\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/tree/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L2</a></p>\n<h2 id=\"n-07-use-a-more-recent-version-of-solidity\" style=\"position:relative;\"><a href=\"#n-07-use-a-more-recent-version-of-solidity\" aria-label=\"n 07 use a more recent version of solidity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-07] Use a more recent version of solidity</h2>\n<p>Use a solidity version of at least 0.8.13 to get the ability to use <code>using for</code> with a list of free functions.</p>\n<p><em>There are 3 instances of this issue.</em></p>\n<h2 id=\"n-08-use-scientific-notation-eg-1e18-rather-than-exponentiation-eg-1018\" style=\"position:relative;\"><a href=\"#n-08-use-scientific-notation-eg-1e18-rather-than-exponentiation-eg-1018\" aria-label=\"n 08 use scientific notation eg 1e18 rather than exponentiation eg 1018 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-08] Use scientific notation (e.g. <code>1e18</code>) rather than exponentiation (e.g. <code>10**18</code>)</h2>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JBSingleTokenPaymentTerminalStore</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">868</span><span class=\"mtk1\">:        : </span><span class=\"mtk12\">PRBMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDiv</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_ethOverflow</span><span class=\"mtk1\">, </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**</span><span class=\"mtk7\">18</span><span class=\"mtk1\">, </span><span class=\"mtk12\">prices</span><span class=\"mtk1\">.</span><span class=\"mtk11\">priceFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">JBCurrencies</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ETH</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_currency</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/tree/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L868\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/tree/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L868</a></p>\n<h2 id=\"n-09-constant-redefined-elsewhere\" style=\"position:relative;\"><a href=\"#n-09-constant-redefined-elsewhere\" aria-label=\"n 09 constant redefined elsewhere permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-09] Constant redefined elsewhere</h2>\n<p>Consider defining in only one contract so that values cannot become out of sync when only one location is updated. A <a href=\"https://medium.com/coinmonks/gas-cost-of-solidity-library-functions-dbe0cedd4678\">cheap way</a> to store constants in a single location is to create an <code>internal constant</code> in a <code>library</code>. If the variable is a local cache of another contract’s value, consider making the cache variable internal or private, which will require external users to query the contract with the source of truth, so that callers don’t get out of sync.</p>\n<p><em>There are 11 instances of this issue.</em></p>\n<h2 id=\"n-10-inconsistent-spacing-in-comments\" style=\"position:relative;\"><a href=\"#n-10-inconsistent-spacing-in-comments\" aria-label=\"n 10 inconsistent spacing in comments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-10] Inconsistent spacing in comments</h2>\n<p>Some lines use <code>// x</code> and some use <code>//x</code>. The instances below point out the usages that don’t follow the majority, within each file.</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">JBController</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">912</span><span class=\"mtk1\">:      </span><span class=\"mtk3\">//Transfer between all splits.</span></span></span></code></pre>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/tree/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L912\">https://github.com/jbx-protocol/juice-contracts-v2-code4rena/tree/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L912</a></p>\n<h2 id=\"n-11-lines-are-too-long\" style=\"position:relative;\"><a href=\"#n-11-lines-are-too-long\" aria-label=\"n 11 lines are too long permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-11] Lines are too long</h2>\n<p>Usually lines in source code are limited to <a href=\"https://softwareengineering.stackexchange.com/questions/148677/why-is-80-characters-the-standard-limit-for-code-width\">80</a> characters. Today’s screens are much larger so it’s reasonable to stretch this in some cases. Since the files will most likely reside in GitHub, and GitHub starts using a scroll bar in all cases when the length is over <a href=\"https://github.com/aizatto/character-length\">164</a> characters, the lines below should be split when they reach that length.</p>\n<p><em>There are 49 instances of this issue.</em></p>\n<h2 id=\"n-12-typos\" style=\"position:relative;\"><a href=\"#n-12-typos\" aria-label=\"n 12 typos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-12] Typos</h2>\n<p><em>There are 17 instances of this issue.</em></p>\n<h2 id=\"n-13-file-is-missing-natspec\" style=\"position:relative;\"><a href=\"#n-13-file-is-missing-natspec\" aria-label=\"n 13 file is missing natspec permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-13] File is missing NatSpec</h2>\n<p><em>There are 29 instances of this issue.</em></p>\n<h2 id=\"n-14-natspec-is-incomplete\" style=\"position:relative;\"><a href=\"#n-14-natspec-is-incomplete\" aria-label=\"n 14 natspec is incomplete permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-14] NatSpec is incomplete</h2>\n<p><em>There are 5 instances of this issue.</em></p>\n<h2 id=\"n-15-event-is-missing-indexed-fields\" style=\"position:relative;\"><a href=\"#n-15-event-is-missing-indexed-fields\" aria-label=\"n 15 event is missing indexed fields permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-15] Event is missing <code>indexed</code> fields</h2>\n<p>Index event fields make the field more quickly accessible to off-chain tools that parse events. However, note that each index field costs extra gas during emission, so it’s not necessarily best to index the maximum allowed per event (threefields). Each <code>event</code> should use three <code>indexed</code> fields if there are three or more fields, and gas usage is not particularly of concern for the events in question.</p>\n<p><em>There are 34 instances of this issue.</em></p>\n<h2 id=\"n-16-not-using-the-named-return-variables-anywhere-in-the-function-is-confusing\" style=\"position:relative;\"><a href=\"#n-16-not-using-the-named-return-variables-anywhere-in-the-function-is-confusing\" aria-label=\"n 16 not using the named return variables anywhere in the function is confusing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-16] Not using the named return variables anywhere in the function is confusing</h2>\n<p>Consider changing the variable to be an unnamed one.</p>\n<p><em>There are 6 instances of this issue.</em></p>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this contest, 74 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/161\">report highlighted below</a> by <strong>0xA5DF</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/295\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/245\">horsefacts</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/256\">joestakey</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/63\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/349\">defsec</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/69\">0xKitsune</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/36\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/323\">TomJ</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/119\">Saintcode_</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/163\">RedOneN</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/301\">Meera</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/367\">Limbooo</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/20\">Lambda</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/142\">jonatascm</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/272\">c3phas</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/343\">UnusualTurtle</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/214\">Sm4rty</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/328\">simon135</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/338\">sashik_eth</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/167\">sach1r0</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/11\">robee</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/181\">ReyAdmirado</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/211\">rbserver</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/188\">MiloTruck</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/93\">m_Rassska</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/121\">JohnSmith</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/71\">durianSausage</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/162\">cRat1st0s</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/135\">brgltd</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/56\">Bnke0x0</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/255\">ajtra</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/283\">0xf15ers</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/206\">_141345_</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/173\">Waze</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/233\">Tutturu</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/140\">Tomio</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/164\">rfa</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/4\">oyc_109</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/114\">Noah3o6</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/287\">Metatron</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/172\">Kaiziron</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/141\">kaden</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/364\">JC</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/340\">jayfromthe13th</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/75\">ignacio</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/107\">djxploit</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/192\">delfin454000</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/262\">Ch_301</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/247\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/122\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/319\">0v3rf10w</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/153\">_Adam</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/342\">Randyyy</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/77\">mrpathfindr</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/237\">hake</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/269\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/70\">ElKu</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/273\">asutorufos</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/3\">apostle0x01</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/288\">0xdanial</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/300\">0x29A</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/267\">Rohan16</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/209\">rajatbeladiya</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/185\">Picodes</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/352\">mektigboy</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/134\">kebabsec</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/359\">Hawkeye</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/116\">exd0tpy</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/126\">codexploder</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/324\">Chom</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/86\">Cheeezzyyyy</a>, <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/266\">0xDjango</a>, and <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/110\">0x09GTO</a>.</em></p>\n<h2 id=\"g-01-run-checks-first\" style=\"position:relative;\"><a href=\"#g-01-run-checks-first\" aria-label=\"g 01 run checks first permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Run checks first</h2>\n<p>Running checks before doing other operations can save gas in case the checks don’t pass (since less operations were done before the revert).</p>\n<p>Lines: <a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBDirectory.sol#L270-L278\">JBDirectory.sol#L270-L278</a></p>\n<p>Gas saved: Not measured by tests, can be a few dozen of thousands in case of revert (tested with a contract mocking the same behavior and 3 terminals)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    // Delete the stored terminals for the project.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    _terminalsOf[_projectId] = _terminals;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Make sure duplicates were not added.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    // @audit run checks before assigning, to save gas in case of revert</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (_terminals.length &gt; 1)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       for (uint256 _i; _i &lt; _terminals.length; _i++)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 _j = _i + 1; _j &lt; _terminals.length; _j++)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">           if (_terminals[_i] == _terminals[_j]) revert DUPLICATE_TERMINALS();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    // Delete the stored terminals for the project.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    _terminalsOf[_projectId] = _terminals;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     emit SetTerminals(_projectId, _terminals, msg.sender);</span></span></span></code></pre>\n<h2 id=\"g-02-store-elements-that-are-used-multiple-times\" style=\"position:relative;\"><a href=\"#g-02-store-elements-that-are-used-multiple-times\" aria-label=\"g 02 store elements that are used multiple times permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] Store elements that are used multiple times</h2>\n<p>When the same array/mapping element is accessed more than once at the same block (without being modified) - it’s cheaper to store the element as a var and access that var every time.</p>\n<p>Gas saved: up to 2K units</p>\n<p><em>Please see warden’s <a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/161\">original report</a> for full details.</em></p>\n<h2 id=\"g-03-make-loop-increment-unchecked\" style=\"position:relative;\"><a href=\"#g-03-make-loop-increment-unchecked\" aria-label=\"g 03 make loop increment unchecked permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] Make loop increment unchecked</h2>\n<p>Overflowing loop index is virtually impossible, therefore it’s cheaper to make the increment unchecked. It’s also a bit cheaper to use ++i instead of i++.</p>\n<p>Gas saved: up to 300 units</p>\n<p>Lines:</p>\n<ul>\n<li><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L913\">JBController.sol#L913</a></li>\n<li><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L1014\">JBController.sol#L1014</a></li>\n<li><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBDirectory.sol#L139\">JBDirectory.sol#L139</a></li>\n<li><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBDirectory.sol#L167\">JBDirectory.sol#L167</a></li>\n<li><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBDirectory.sol#L275-L276\">JBDirectory.sol#L275-L276</a></li>\n<li><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBETHERC20SplitsPayer.sol#L466\">JBETHERC20SplitsPayer.sol#L466</a></li>\n<li><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L724\">JBFundingCycleStore.sol#L724</a></li>\n<li><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBOperatorStore.sol#L85\">JBOperatorStore.sol#L85</a></li>\n<li><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBOperatorStore.sol#L138\">JBOperatorStore.sol#L138</a></li>\n<li><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBOperatorStore.sol#L171\">JBOperatorStore.sol#L171</a></li>\n<li><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L862\">JBSingleTokenPaymentTerminalStore.sol#L862</a></li>\n<li><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L204\">JBSplitsStore.sol#L204</a></li>\n<li><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L211\">JBSplitsStore.sol#L211</a></li>\n<li><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L229\">JBSplitsStore.sol#L229</a></li>\n<li><a href=\"https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L304\">JBSplitsStore.sol#L304</a></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/JBController.sol b/contracts/JBController.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 26cd238..475a35a 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/JBController.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/JBController.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -910,7 +910,7 @@ contract JBController is IJBController, IJBMigratable, JBOperatable, ERC165 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     JBSplit[] memory _splits = splitsStore.splitsOf(_projectId, _domain, _group);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     //Transfer between all splits.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    for (uint256 _i = 0; _i &lt; _splits.length; _i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    for (uint256 _i = 0; _i &lt; _splits.length; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // Get a reference to the split being iterated on.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       JBSplit memory _split = _splits[_i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -964,6 +964,9 @@ contract JBController is IJBController, IJBMigratable, JBOperatable, ERC165 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _tokenCount,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         msg.sender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ++_i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -1011,7 +1014,7 @@ contract JBController is IJBController, IJBMigratable, JBOperatable, ERC165 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     splitsStore.set(_projectId, _fundingCycle.configuration, _groupedSplits);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Set distribution limits if there are any.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    for (uint256 _i; _i &lt; _fundAccessConstraints.length; _i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    for (uint256 _i; _i &lt; _fundAccessConstraints.length; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       JBFundAccessConstraints memory _constraints = _fundAccessConstraints[_i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // If distribution limit value is larger than 232 bits, revert.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -1051,6 +1054,9 @@ contract JBController is IJBController, IJBMigratable, JBOperatable, ERC165 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _constraints,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         msg.sender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ++_i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     return _fundingCycle.configuration;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/JBDirectory.sol b/contracts/JBDirectory.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 865c719..442e704 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/JBDirectory.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/JBDirectory.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -137,9 +137,12 @@ contract JBDirectory is IJBDirectory, JBOperatable, Ownable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     IJBPaymentTerminal[] storage _terminalOf_projectId = _terminalsOf[_projectId];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Return the first terminal which accepts the specified token.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    for (uint256 _i; _i &lt; _terminalOf_projectId.length; _i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    for (uint256 _i; _i &lt; _terminalOf_projectId.length; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       IJBPaymentTerminal _terminal = _terminalOf_projectId[_i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       if (_terminal.acceptsToken(_token, _projectId)) return _terminal;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ++_i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Not found.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -165,8 +168,12 @@ contract JBDirectory is IJBDirectory, JBOperatable, Ownable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     returns (bool)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    for (uint256 _i; _i &lt; _terminalsOf[_projectId].length; _i++)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    for (uint256 _i; _i &lt; _terminalsOf[_projectId].length; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       if (_terminalsOf[_projectId][_i] == _terminal) return true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ++_i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     return false;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -272,9 +279,17 @@ contract JBDirectory is IJBDirectory, JBOperatable, Ownable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Make sure duplicates were not added.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // @audit run checks before assigning, to save gas in case of revert</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (_terminals.length &gt; 1)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      for (uint256 _i; _i &lt; _terminals.length; _i++)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        for (uint256 _j = _i + 1; _j &lt; _terminals.length; _j++)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      for (uint256 _i; _i &lt; _terminals.length; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        for (uint256 _j = _i + 1; _j &lt; _terminals.length; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">           if (_terminals[_i] == _terminals[_j]) revert DUPLICATE_TERMINALS();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+          unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            ++_j;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+          }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+          ++_i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Delete the stored terminals for the project.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     _terminalsOf[_projectId] = _terminals;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/JBETHERC20SplitsPayer.sol b/contracts/JBETHERC20SplitsPayer.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 97a6517..6c344bd 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/JBETHERC20SplitsPayer.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/JBETHERC20SplitsPayer.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -463,7 +463,7 @@ contract JBETHERC20SplitsPayer is IJBSplitsPayer, JBETHERC20ProjectPayer, Reentr</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     leftoverAmount = _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Settle between all splits.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    for (uint256 i = 0; i &lt; _splits.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    for (uint256 i = 0; i &lt; _splits.length; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // Get a reference to the split being iterated on.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       JBSplit memory _split = _splits[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -544,6 +544,9 @@ contract JBETHERC20SplitsPayer is IJBSplitsPayer, JBETHERC20ProjectPayer, Reentr</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       emit DistributeToSplit(_split, _splitAmount, _defaultBeneficiary, msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ++i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/JBFundingCycleStore.sol b/contracts/JBFundingCycleStore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 13fe9e6..79d16c3 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/JBFundingCycleStore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/JBFundingCycleStore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -312,8 +312,7 @@ contract JBFundingCycleStore is IJBFundingCycleStore, JBControllerUtility {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (_data.weight &gt; type(uint88).max) revert INVALID_WEIGHT();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Ballot should be a valid contract, supporting the correct interface</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if(_data.ballot != IJBFundingCycleBallot(address(0))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (_data.ballot != IJBFundingCycleBallot(address(0))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       address _ballot = address(_data.ballot);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       uint32 _size;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -721,7 +722,7 @@ contract JBFundingCycleStore is IJBFundingCycleStore, JBControllerUtility {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Apply the base funding cycle&#39;s discount rate for each cycle that has passed.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 _discountMultiple = _startDistance / _baseFundingCycle.duration;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    for (uint256 i = 0; i &lt; _discountMultiple; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    for (uint256 i = 0; i &lt; _discountMultiple; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // The number of times to apply the discount rate.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // Base the new weight on the specified funding cycle&#39;s weight.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       weight = PRBMath.mulDiv(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -731,6 +732,9 @@ contract JBFundingCycleStore is IJBFundingCycleStore, JBControllerUtility {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // The calculation doesn&#39;t need to continue if the weight is 0.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       if (weight == 0) break;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ++i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/JBOperatorStore.sol b/contracts/JBOperatorStore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index e1e0241..e67f97d 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/JBOperatorStore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/JBOperatorStore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -82,13 +82,16 @@ contract JBOperatorStore is IJBOperatorStore {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 _domain,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256[] calldata _permissionIndexes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   ) external view override returns (bool) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    for (uint256 _i = 0; _i &lt; _permissionIndexes.length; _i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    for (uint256 _i = 0; _i &lt; _permissionIndexes.length; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       uint256 _permissionIndex = _permissionIndexes[_i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       if (_permissionIndex &gt; 255) revert PERMISSION_INDEX_OUT_OF_BOUNDS();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       if (((permissionsOf[_operator][_account][_domain] &gt;&gt; _permissionIndex) &amp; 1) == 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return false;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ++_i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     return true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -132,7 +135,7 @@ contract JBOperatorStore is IJBOperatorStore {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     @param _operatorData The data that specify the params for each operator being set.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   function setOperators(JBOperatorData[] calldata _operatorData) external override {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    for (uint256 _i = 0; _i &lt; _operatorData.length; _i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    for (uint256 _i = 0; _i &lt; _operatorData.length; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // Pack the indexes into a uint256.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       uint256 _packed = _packedPermissions(_operatorData[_i].permissionIndexes);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -146,6 +149,9 @@ contract JBOperatorStore is IJBOperatorStore {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _operatorData[_i].permissionIndexes,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _packed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ++_i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -162,13 +168,16 @@ contract JBOperatorStore is IJBOperatorStore {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     @return packed The packed value.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   function _packedPermissions(uint256[] calldata _indexes) private pure returns (uint256 packed) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    for (uint256 _i = 0; _i &lt; _indexes.length; _i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    for (uint256 _i = 0; _i &lt; _indexes.length; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       uint256 _index = _indexes[_i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       if (_index &gt; 255) revert PERMISSION_INDEX_OUT_OF_BOUNDS();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // Turn the bit at the index on.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       packed |= 1 &lt;&lt; _index;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ++_i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/JBSingleTokenPaymentTerminalStore.sol b/contracts/JBSingleTokenPaymentTerminalStore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 4fc5d46..21be5ff 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/JBSingleTokenPaymentTerminalStore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/JBSingleTokenPaymentTerminalStore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -859,8 +859,12 @@ contract JBSingleTokenPaymentTerminalStore is IJBSingleTokenPaymentTerminalStore</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 _ethOverflow;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Add the current ETH overflow for each terminal.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    for (uint256 _i = 0; _i &lt; _terminals.length; _i++)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    for (uint256 _i = 0; _i &lt; _terminals.length; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       _ethOverflow = _ethOverflow + _terminals[_i].currentEthOverflowOf(_projectId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ++_i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Convert the ETH overflow to the specified currency if needed, maintaining a fixed point number with 18 decimals.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 _totalOverflow18Decimal = _currency == JBCurrencies.ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/JBSplitsStore.sol b/contracts/JBSplitsStore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index be0d17b..2c9d371 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/JBSplitsStore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/JBSplitsStore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -201,7 +201,7 @@ contract JBSplitsStore is IJBSplitsStore, JBOperatable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     JBSplit[] memory _currentSplits = _getStructsFor(_projectId, _domain, _group);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Check to see if all locked splits are included.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    for (uint256 _i = 0; _i &lt; _currentSplits.length; _i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    for (uint256 _i = 0; _i &lt; _currentSplits.length; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       JBSplit memory _currentSplit_i = _currentSplits[_i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // If not locked, continue.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       if (block.timestamp &gt;= _currentSplit_i.lockedUntil) continue;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -209,7 +209,7 @@ contract JBSplitsStore is IJBSplitsStore, JBOperatable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // Keep a reference to whether or not the locked split being iterated on is included.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       bool _includesLocked = false;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      for (uint256 _j = 0; _j &lt; _splits.length; _j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      for (uint256 _j = 0; _j &lt; _splits.length; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Check for sameness.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         JBSplit memory _split_j = _splits[_j];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -220,15 +220,22 @@ contract JBSplitsStore is IJBSplitsStore, JBOperatable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">           // Allow lock extention.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">           _split_j.lockedUntil &gt;= _currentSplit_i.lockedUntil</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         ) _includesLocked = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+          ++_j;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       if (!_includesLocked) revert PREVIOUS_LOCKED_SPLITS_NOT_INCLUDED();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ++_i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Add up all the percents to make sure they cumulative are under 100%.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 _percentTotal = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    for (uint256 _i = 0; _i &lt; _splits.length; _i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    for (uint256 _i = 0; _i &lt; _splits.length; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       JBSplit memory _splits_i = _splits[_i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // The percent should be greater than 0.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       if (_splits_i.percent == 0) revert INVALID_SPLIT_PERCENT();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -276,6 +283,9 @@ contract JBSplitsStore is IJBSplitsStore, JBOperatable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         delete _packedSplitParts2Of[_projectId][_domain][_group][_i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       emit SetSplit(_projectId, _domain, _group, _splits_i, msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ++_i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Set the new length of the splits.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -304,7 +314,7 @@ contract JBSplitsStore is IJBSplitsStore, JBOperatable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     JBSplit[] memory _splits = new JBSplit[](_splitCount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Loop through each split and unpack the values into structs.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    for (uint256 _i = 0; _i &lt; _splitCount; _i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    for (uint256 _i = 0; _i &lt; _splitCount; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // Get a reference to the fist packed data.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       uint256 _packedSplitPart1 = _packedSplitParts1Of[_projectId][_domain][_group][_i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -335,6 +345,9 @@ contract JBSplitsStore is IJBSplitsStore, JBOperatable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // Add the split to the value being returned.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       _splits[_i] = _split;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ++_i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     return _splits;</span></span></span></code></pre>\n<p>Gas diff:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">╭──────────────────────────────────────────────────┬─────────────────┬─────────┬─────────┬─────────┬─────────╮</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ contracts/JBController.sol:JBController contract ┆                 ┆         ┆         ┆         ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ╞══════════════════════════════════════════════════╪═════════════════╪═════════╪═════════╪═════════╪═════════╡</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ Deployment Cost                                  ┆ Deployment Size ┆         ┆         ┆         ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ 3979659                                          ┆ 20791           ┆         ┆         ┆         ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ 3970050                                          ┆ 20743           ┆         ┆         ┆         ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ Function Name                                    ┆ min             ┆ avg     ┆ median  ┆ max     ┆ # calls │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ burnTokensOf                                     ┆ 30462           ┆ 33235   ┆ 30462   ┆ 38783   ┆ 3       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ burnTokensOf                                     ┆ 30462           ┆ 33211   ┆ 30462   ┆ 38709   ┆ 3       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -155,9 +155,9 @@ Test result: ok. 1 passed; 0 failed; finished in 14.33s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ launchProjectFor                                 ┆ 287838          ┆ 365019  ┆ 363870  ┆ 523212  ┆ 14      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ launchProjectFor                                 ┆ 287838          ┆ 364965  ┆ 363870  ┆ 522765  ┆ 14      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ mintTokensOf                                     ┆ 20132           ┆ 55030   ┆ 42967   ┆ 102610  ┆ 13      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ mintTokensOf                                     ┆ 20058           ┆ 55019   ┆ 42967   ┆ 102610  ┆ 13      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -172,21 +172,21 @@ Test result: ok. 1 passed; 0 failed; finished in 14.33s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ╞════════════════════════════════════════════════╪═════════════════╪═══════╪════════╪═══════╪═════════╡</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ Deployment Cost                                ┆ Deployment Size ┆       ┆        ┆       ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ 1247680                                        ┆ 6698            ┆       ┆        ┆       ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ 1232666                                        ┆ 6623            ┆       ┆        ┆       ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ Function Name                                  ┆ min             ┆ avg   ┆ median ┆ max   ┆ # calls │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ isTerminalOf                                   ┆ 633             ┆ 1508  ┆ 1065   ┆ 5065  ┆ 26      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ isTerminalOf                                   ┆ 633             ┆ 1497  ┆ 1065   ┆ 5065  ┆ 26      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ primaryTerminalOf                              ┆ 2295            ┆ 3221  ┆ 2295   ┆ 5853  ┆ 12      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ primaryTerminalOf                              ┆ 2295            ┆ 3209  ┆ 2295   ┆ 5779  ┆ 12      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ setTerminalsOf                                 ┆ 54817           ┆ 57189 ┆ 54817  ┆ 78546 ┆ 10      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ setTerminalsOf                                 ┆ 54817           ┆ 57167 ┆ 54817  ┆ 78324 ┆ 10      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ terminalsOf                                    ┆ 1389            ┆ 1389  ┆ 1389   ┆ 1389  ┆ 2       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ╰────────────────────────────────────────────────┴─────────────────┴───────┴────────┴───────┴─────────╯</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -226,7 +226,7 @@ Test result: ok. 1 passed; 0 failed; finished in 14.33s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ╞════════════════════════════════════════════════════════════════════╪═════════════════╪═════╪════════╪═════╪═════════╡</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ Deployment Cost                                                    ┆ Deployment Size ┆     ┆        ┆     ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ 2292746                                                            ┆ 12218           ┆     ┆        ┆     ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ 2283531                                                            ┆ 12172           ┆     ┆        ┆     ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ Function Name                                                      ┆ min             ┆ avg ┆ median ┆ max ┆ # calls │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -249,13 +249,13 @@ Test result: ok. 1 passed; 0 failed; finished in 14.33s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ distributePayoutsOf                                              ┆ 102240          ┆ 128903 ┆ 128903 ┆ 155567 ┆ 2       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ distributePayoutsOf                                              ┆ 102240          ┆ 128758 ┆ 128758 ┆ 155276 ┆ 2       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ pay                                                              ┆ 89467           ┆ 105031 ┆ 105031 ┆ 120596 ┆ 2       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ pay                                                              ┆ 89319           ┆ 104957 ┆ 104957 ┆ 120596 ┆ 2       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ redeemTokensOf                                                   ┆ 68162           ┆ 87607  ┆ 87607  ┆ 107052 ┆ 2       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ redeemTokensOf                                                   ┆ 68162           ┆ 87496  ┆ 87496  ┆ 106830 ┆ 2       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ supportsInterface                                                ┆ 503             ┆ 685    ┆ 655    ┆ 853    ┆ 9       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -268,7 +268,7 @@ Test result: ok. 1 passed; 0 failed; finished in 14.33s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ╞════════════════════════════════════════════════════════════════╪═════════════════╪═══════╪════════╪════════╪═════════╡</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ Deployment Cost                                                ┆ Deployment Size ┆       ┆        ┆        ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ 1055746                                                        ┆ 5457            ┆       ┆        ┆        ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ 1048339                                                        ┆ 5420            ┆       ┆        ┆        ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ Function Name                                                  ┆ min             ┆ avg   ┆ median ┆ max    ┆ # calls │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -330,7 +330,7 @@ Test result: ok. 1 passed; 0 failed; finished in 14.33s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ╞════════════════════════════════════════════════════════════════════════════════════════════╪═════════════════╪═══════╪════════╪═══════╪═════════╡</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ Deployment Cost                                                                            ┆ Deployment Size ┆       ┆        ┆       ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ 2551081                                                                                    ┆ 13119           ┆       ┆        ┆       ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ 2543674                                                                                    ┆ 13082           ┆       ┆        ┆       ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ Function Name                                                                              ┆ min             ┆ avg   ┆ median ┆ max   ┆ # calls │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -338,13 +338,13 @@ Test result: ok. 1 passed; 0 failed; finished in 14.33s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ currentTotalOverflowOf                                                                     ┆ 31426           ┆ 31426 ┆ 31426  ┆ 31426 ┆ 1       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ currentTotalOverflowOf                                                                     ┆ 31278           ┆ 31278 ┆ 31278  ┆ 31278 ┆ 1       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ recordRedemptionFor                                                                        ┆ 25847           ┆ 33828 ┆ 25847  ┆ 49791 ┆ 3       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ recordRedemptionFor                                                                        ┆ 25847           ┆ 33779 ┆ 25847  ┆ 49643 ┆ 3       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ╰────────────────────────────────────────────────────────────────────────────────────────────┴─────────────────┴───────┴────────┴───────┴─────────╯</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -353,15 +353,15 @@ Test result: ok. 1 passed; 0 failed; finished in 14.33s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ╞════════════════════════════════════════════════════╪═════════════════╪══════╪════════╪═══════╪═════════╡</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ Deployment Cost                                    ┆ Deployment Size ┆      ┆        ┆       ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ 751811                                             ┆ 4116            ┆      ┆        ┆       ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ 736791                                             ┆ 4041            ┆      ┆        ┆       ┆         │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> │ Function Name                                      ┆ min             ┆ avg  ┆ median ┆ max   ┆ # calls │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ set                                                ┆ 2998            ┆ 5840 ┆ 2998   ┆ 57007 ┆ 19      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ set                                                ┆ 2998            ┆ 5836 ┆ 2998   ┆ 56930 ┆ 19      │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-│ splitsOf                                           ┆ 2941            ┆ 4853 ┆ 2941   ┆ 8679  ┆ 3       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+│ splitsOf                                           ┆ 2941            ┆ 4830 ┆ 2941   ┆ 8610  ┆ 3       │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-juicebox-findings/issues/161#issuecomment-1183203750\">drgorillamd (Juicebox) commented</a>:</strong></p>\n<blockquote>\n<p>Really nice PoC/gas analysis, thank you.</p>\n</blockquote>\n<h1 id=\"mitigation-review\" style=\"position:relative;\"><a href=\"#mitigation-review\" aria-label=\"mitigation review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mitigation Review</h1>\n<p><em>Mitigation review by <a href=\"https://twitter.com/berndartmueller\">berndartmueller</a></em></p>\n<p><strong>Reviewed pull requests:</strong> <a href=\"https://github.com/jbx-protocol/juice-contracts-v3/pull/1/\">PR#1</a> (<code>b8e2472ce750ad084440c8db6090143807e79893</code>), <a href=\"https://github.com/jbx-protocol/juice-contracts-v3/pull/4\">PR#4</a></p>\n<h2 id=\"mitigation-overview\" style=\"position:relative;\"><a href=\"#mitigation-overview\" aria-label=\"mitigation overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mitigation Overview</h2>\n<p>The following is a high-level overview of the core changes introduced as the mitigation, arranged per the report findings.</p>\n<ul>\n<li>[H-01] Resolved. Appropriate validations to prevent price staleness, round incompleteness and a negative price is put in place now.</li>\n<li>[H-02] Resolved. Changing an already set project token is not possible anymore.</li>\n<li>[M-01] Acknowledged. </li>\n<li>[M-02] Resolved. <code>mustStartAtOrAfter</code> and the start date of an upcoming funding cycle are now validated to fit in <code>uint56</code>.</li>\n<li>[M-03] Resolved. OpenZeppelins’ <code>SafeERC20</code> library is now used to ensure consistent handling of ERC20 token transfers.</li>\n<li>[M-04] Acknowledged.</li>\n<li>[M-05] Acknowledged.</li>\n<li>[M-06] Resolved. The delta of the token balance before and after a transfer is used instead of the amount stated to handle fee-on-transfer tokens appropriately.</li>\n<li>[M-07] Acknowledged.</li>\n<li>[M-08] Acknowledged.</li>\n<li>[M-09] Acknowledged.</li>\n<li>[M-10] Acknowledged.</li>\n<li>[M-11] Resolved. An additional check has been added to prevent adding a price feed for the inverse pair.</li>\n<li>[M-12] Resolved. Once a token is set for a project, it can not be changed anymore.</li>\n<li>[M-13] Acknowledged.</li>\n<li>[M-14] Acknowledged.</li>\n<li>[M-15] Resolved. Two additional sameness checks for the split properties <code>preferClaimed</code> and <code>preferAddToBalance</code> have been added.</li>\n</ul>\n<h2 id=\"medium-risk-findings-1\" style=\"position:relative;\"><a href=\"#medium-risk-findings-1\" aria-label=\"medium risk findings 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (1)</h2>\n<h3 id=\"mm-01-migrating-from-v2-to-v3-will-cause-issues-with-funding-cycle-metadata\" style=\"position:relative;\"><a href=\"#mm-01-migrating-from-v2-to-v3-will-cause-issues-with-funding-cycle-metadata\" aria-label=\"mm 01 migrating from v2 to v3 will cause issues with funding cycle metadata permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[M.M-01] Migrating from V2 to V3 will cause issues with funding cycle metadata</h3>\n<p><strong>Context:</strong> <a href=\"https://github.com/jbx-protocol/juice-contracts-v3/blob/b8e2472ce750ad084440c8db6090143807e79893/contracts/libraries/JBFundingCycleMetadataResolver.sol#L150-L157\">libraries/JBFundingCycleMetadataResolver.sol#L150-L157</a> </p>\n<p><strong>Status:</strong> Acknowledged. Juicebox projects have to instantiate new V3 funding cycles if they wish to migrate from V2 to V3.</p>\n<p><strong>Description:</strong> In V3, the funding cycle metadata bitmask changes due to removing the parameter <code>allowChangeToken</code> and adding the new parameter <code>preferClaimedTokenOverride</code>. However, projects migrating from V2 to V3 with certain funding cycle metadata bits set will experience a possibly different funding cycle configuration than anticipated.</p>\n<p>The following table shows a comparison of the occupied bits of affected funding cycle metadata parameters in V2 and V3:</p>\n<table>\n<thead>\n<tr>\n<th>Metadata Param</th>\n<th>Bit Previously</th>\n<th>Bit Now</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>allowChangeToken</td>\n<td>77</td>\n<td>-</td>\n</tr>\n<tr>\n<td>allowTerminalMigration</td>\n<td>78</td>\n<td>77</td>\n</tr>\n<tr>\n<td>allowControllerMigration</td>\n<td>79</td>\n<td>78</td>\n</tr>\n<tr>\n<td>holdFees</td>\n<td>80</td>\n<td>79</td>\n</tr>\n<tr>\n<td>preferClaimedTokenOverride</td>\n<td>-</td>\n<td>80</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">packFundingCycleMetadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">JBFundingCycleMetadata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_metadata</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">pure</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">packed</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  [..]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// allow terminal migration in bit 77.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_metadata</span><span class=\"mtk1\">.</span><span class=\"mtk12\">allowTerminalMigration</span><span class=\"mtk1\">) </span><span class=\"mtk12\">packed</span><span class=\"mtk1\"> |= </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &amp;</span><span class=\"mtk12\">lt</span><span class=\"mtk1\">;&amp;</span><span class=\"mtk12\">lt</span><span class=\"mtk1\">; </span><span class=\"mtk7\">77</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// allow controller migration in bit 78.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_metadata</span><span class=\"mtk1\">.</span><span class=\"mtk12\">allowControllerMigration</span><span class=\"mtk1\">) </span><span class=\"mtk12\">packed</span><span class=\"mtk1\"> |= </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &amp;</span><span class=\"mtk12\">lt</span><span class=\"mtk1\">;&amp;</span><span class=\"mtk12\">lt</span><span class=\"mtk1\">; </span><span class=\"mtk7\">78</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// hold fees in bit 79.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_metadata</span><span class=\"mtk1\">.</span><span class=\"mtk12\">holdFees</span><span class=\"mtk1\">) </span><span class=\"mtk12\">packed</span><span class=\"mtk1\"> |= </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &amp;</span><span class=\"mtk12\">lt</span><span class=\"mtk1\">;&amp;</span><span class=\"mtk12\">lt</span><span class=\"mtk1\">; </span><span class=\"mtk7\">79</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// prefer claimed token override in bit 80.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_metadata</span><span class=\"mtk1\">.</span><span class=\"mtk12\">preferClaimedTokenOverride</span><span class=\"mtk1\">) </span><span class=\"mtk12\">packed</span><span class=\"mtk1\"> |= </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &amp;</span><span class=\"mtk12\">lt</span><span class=\"mtk1\">;&amp;</span><span class=\"mtk12\">lt</span><span class=\"mtk1\">; </span><span class=\"mtk7\">80</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  [..]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h4 id=\"recommendation\" style=\"position:relative;\"><a href=\"#recommendation\" aria-label=\"recommendation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h4>\n<p>Consider not changing the existing bits and their representation. Instead, add new metadata parameters to available most significant bits.</p>\n<p>For example, consider storing the newly added <code>_metadata.metadata</code> in bits <strong>248-256</strong> (instead of using bits 244-252) and use one of the 4 available bits <strong>244-247</strong> for <code>_metadata.preferClaimedTokenOverride</code>.</p>\n<h2 id=\"low-risk-findings-1\" style=\"position:relative;\"><a href=\"#low-risk-findings-1\" aria-label=\"low risk findings 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk Findings (1)</h2>\n<h3 id=\"ml-01-defaultbeneficiary-is-not-used-consistently\" style=\"position:relative;\"><a href=\"#ml-01-defaultbeneficiary-is-not-used-consistently\" aria-label=\"ml 01 defaultbeneficiary is not used consistently permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[M.L-01] <code>defaultBeneficiary</code> is not used consistently</h3>\n<p><strong>Context:</strong> <a href=\"https://github.com/jbx-protocol/juice-contracts-v3/blob/b8e2472ce750ad084440c8db6090143807e79893/contracts/JBETHERC20ProjectPayer.sol\">JBETHERC20ProjectPayer.sol</a>, <a href=\"https://github.com/jbx-protocol/juice-contracts-v3/blob/b8e2472ce750ad084440c8db6090143807e79893/contracts/JBETHERC20SplitsPayer.sol\">JBETHERC20SplitsPayer.sol</a> </p>\n<p><strong>Status:</strong> Resolved in <a href=\"https://github.com/jbx-protocol/juice-contracts-v3/pull/5\">PR#5</a></p>\n<p><strong>Description:</strong> When deploying a new instance of a <code>JBETHERC20ProjectPayer</code> or <code>JBETHERC20SplitsPayer</code> contract, the deployer can provide a default beneficiary address <code>defaultBeneficiary</code>. If the beneficiary is <code>address(0)</code>, this default beneficiary address will receive the project’s tokens when the project payer receives payments.</p>\n<p>However, <code>defaultBeneficiary</code> is only used within the <code>receive()</code> function. In the <code>pay(..)</code> function, the beneficiary, if set to <code>address(0)</code>, will immediately default to <code>tx.origin</code>.</p>\n<h4 id=\"recommendation-1\" style=\"position:relative;\"><a href=\"#recommendation-1\" aria-label=\"recommendation 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h4>\n<p>Consider using <code>defaultBeneficiary</code> consistently and if <code>defaultBeneficiary</code> is set to <code>address(0)</code>, only then default to <code>tx.origin</code>.</p>\n<h2 id=\"non-critical-findings-1\" style=\"position:relative;\"><a href=\"#non-critical-findings-1\" aria-label=\"non critical findings 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Non-Critical Findings (1)</h2>\n<h3 id=\"mn-01-msgsender-address-is-not-checked-if-it-is-a-feeless-address\" style=\"position:relative;\"><a href=\"#mn-01-msgsender-address-is-not-checked-if-it-is-a-feeless-address\" aria-label=\"mn 01 msgsender address is not checked if it is a feeless address permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[M.N-01] <code>msg.sender</code> address is not checked if it is a feeless address</h3>\n<p><strong>Context:</strong> <a href=\"https://github.dev/jbx-protocol/juice-contracts-v3/blob/b8e2472ce750ad084440c8db6090143807e79893/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol\">abstract/JBPayoutRedemptionPaymentTerminal.sol</a> </p>\n<p><strong>Status:</strong> Acknowledged. Feeless sender for distributions is removed in V3. Comment adjusted in <a href=\"https://github.com/jbx-protocol/juice-contracts-v3/pull/6\">PR#6</a></p>\n<p><strong>Description:</strong> According to the comment on <a href=\"https://github.dev/jbx-protocol/juice-contracts-v3/blob/b8e2472ce750ad084440c8db6090143807e79893/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L897\">L897</a>:</p>\n<p>> <em>// If the fee is zero or if the fee is <strong>being used by an address that doesn’t incur fees</strong>, set the discount to 100% for convenience.</em></p>\n<p>If the caller is an address that doesn’t incur fees, the discount should be set to 100%. However, in the latest version, <code>msg.sender</code> is no longer checked if it is considered a feeless address.</p>\n<p><a href=\"https://github.com/jbx-protocol/juice-contracts-v3/commit/8152fe45f7942d902a09fb8bff8663ad82e68e1f#diff-8ec76bd6ac0d417026483831ccb26d6b6bd986bf09e0749db9c77c4df7edf286L838\">See diff</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">// If the fee is zero or if the fee is being used by an address that doesn&amp;#39;t incur fees, set the discount to 100% for convenience.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- uint256 _feeDiscount = fee == 0 || isFeelessAddress[msg.sender]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ uint256 _feeDiscount = fee == 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ? JBConstants.MAX_FEE_DISCOUNT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  : _currentFeeDiscount(_projectId);</span></span></span></code></pre>\n<h4 id=\"recommendation-2\" style=\"position:relative;\"><a href=\"#recommendation-2\" aria-label=\"recommendation 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h4>\n<p>Consider reverting the change and check if <code>msg.sender</code> is a feeless address.</div></p>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk5 { color: #D16969; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-2\">High Risk Findings (2)</a></p>\n<ul>\n<li><a href=\"#h-01-oracle-data-feed-can-be-outdated-yet-used-anyways-which-will-impact-payment-logic\">[H-01] Oracle data feed can be outdated yet used anyways which will impact payment logic</a></li>\n<li><a href=\"#h-02-token-change-can-be-frontrun-blocking-token\">[H-02] Token Change Can Be Frontrun, Blocking Token</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-15\">Medium Risk Findings (15)</a></p>\n<ul>\n<li><a href=\"#m-01-duplicated-locked-splits-can-be-discarded\">[M-01] Duplicated locked splits can be discarded</a></li>\n<li><a href=\"#m-02-lack-of-check-on-muststartatorafter\">[M-02] Lack of check on <code>mustStartAtOrAfter</code></a></li>\n<li><a href=\"#m-03-use-a-safe-transfer-helper-library-for-erc20-transfers\">[M-03] Use a safe transfer helper library for ERC20 transfers</a></li>\n<li><a href=\"#m-04-juicebox-project-owner-can-create-a-honeypot-to-cause-grief\">[M-04] Juicebox project owner can create a honeypot to cause grief</a></li>\n<li><a href=\"#m-05-discounted-fee-calculation-is-imprecise-and-calculates-less-fees-than-anticipated\">[M-05] Discounted fee calculation is imprecise and calculates less fees than anticipated</a></li>\n<li><a href=\"#m-06-code-credits-fee-on-transfer-tokens-for-amount-stated-not-amount-transferred\">[M-06] Code credits fee-on-transfer tokens for amount stated, not amount transferred</a></li>\n<li><a href=\"#m-07-processfees-may-fail-due-to-exceed-gas-limit\">[M-07] processFees() may fail due to exceed gas limit</a></li>\n<li><a href=\"#m-08-reentrancy-issues-on-function-distributepayoutsof\">[M-08] Reentrancy issues on function <code>distributePayoutsOf</code></a></li>\n<li><a href=\"#m-09-unhandled-chainlink-revert-would-lock-all-price-oracle-access\">[M-09] Unhandled chainlink revert would lock all price oracle access</a></li>\n<li><a href=\"#m-10-grieffer-beneficiary-can-cause-dos\">[M-10] Grieffer beneficiary can cause DOS</a></li>\n<li><a href=\"#m-11-addfeedfor-should-check-if-inverse-feed-already-exists\">[M-11] addFeedFor should check if inverse feed already exists</a></li>\n<li><a href=\"#m-12-changetokenof-makes-it-impossible-for-holders-of-oldtoken-to-redeem-the-overflowed-assets\">[M-12] changeTokenOf makes it impossible for holders of oldToken to redeem the overflowed assets.</a></li>\n<li><a href=\"#m-13-jbtoken-mint-function-could-mint-arbitrary-amount-of-tokens\">[M-13] JBToken: mint function could mint arbitrary amount of tokens</a></li>\n<li><a href=\"#m-14-more-outstanding-reserved-tokens-are-distributed-than-anticipated-leading-to-less-redeemable-assets-and-therefore-loss-of-user-funds\">[M-14] More outstanding reserved tokens are distributed than anticipated leading to less redeemable assets and therefore loss of user funds</a></li>\n<li><a href=\"#m-15-locked-splits-can-be-updated\">[M-15] Locked splits can be updated</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#low-risk-issues\">Low Risk Issues</a></li>\n<li><a href=\"#l-01-weight-of-one-being-used-as-zero-not-documented\">L-01 Weight of one being used as zero not documented</a></li>\n<li><a href=\"#l-02-calls-may-run-out-of-gas-until-arrays-are-reduced-in-size\">L-02 Calls may run out of gas until arrays are reduced in size</a></li>\n<li><a href=\"#l-03-dust-amounts-not-compensated-even-if-not-using-price-oracle\">L-03 Dust amounts not compensated, even if not using price oracle</a></li>\n<li><a href=\"#l-04-splits-cant-be-locked-once-the-timestamp-passes-typeuint48max\">L-04 Splits can’t be locked once the timestamp passes <code>type(uint48).max</code></a></li>\n<li><a href=\"#l-05-unsafe-use-of-transfertransferfrom-with-ierc20\">L-05 Unsafe use of <code>transfer()</code>/<code>transferFrom()</code> with <code>IERC20</code></a></li>\n<li><a href=\"#non-critical-issues\">Non-Critical Issues</a></li>\n<li><a href=\"#n-01-confusing-variable-names\">N-01 Confusing variable names</a></li>\n<li><a href=\"#n-02-return-values-of-approve-not-checked\">N-02 Return values of <code>approve()</code> not checked</a></li>\n<li><a href=\"#n-03-adding-a-return-statement-when-the-function-defines-a-named-return-variable-is-redundant\">N-03 Adding a <code>return</code> statement when the function defines a named return variable, is redundant</a></li>\n<li><a href=\"#n-04-non-assembly-method-available\">N-04 Non-assembly method available</a></li>\n<li><a href=\"#n-05-constants-should-be-defined-rather-than-using-magic-numbers\">N-05 <code>constant</code>s should be defined rather than using magic numbers</a></li>\n<li><a href=\"#n-06-use-a-more-recent-version-of-solidity\">N-06 Use a more recent version of solidity</a></li>\n<li><a href=\"#n-07-use-a-more-recent-version-of-solidity\">N-07 Use a more recent version of solidity</a></li>\n<li><a href=\"#n-08-use-scientific-notation-eg-1e18-rather-than-exponentiation-eg-1018\">N-08 Use scientific notation (e.g. <code>1e18</code>) rather than exponentiation (e.g. <code>10**18</code>)</a></li>\n<li><a href=\"#n-09-constant-redefined-elsewhere\">N-09 Constant redefined elsewhere</a></li>\n<li><a href=\"#n-10-inconsistent-spacing-in-comments\">N-10 Inconsistent spacing in comments</a></li>\n<li><a href=\"#n-11-lines-are-too-long\">N-11 Lines are too long</a></li>\n<li><a href=\"#n-12-typos\">N-12 Typos</a></li>\n<li><a href=\"#n-13-file-is-missing-natspec\">N-13 File is missing NatSpec</a></li>\n<li><a href=\"#n-14-natspec-is-incomplete\">N-14 NatSpec is incomplete</a></li>\n<li><a href=\"#n-15-event-is-missing-indexed-fields\">N-15 Event is missing <code>indexed</code> fields</a></li>\n<li><a href=\"#n-16-not-using-the-named-return-variables-anywhere-in-the-function-is-confusing\">N-16 Not using the named return variables anywhere in the function is confusing</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#g-01-run-checks-first\">G-01 Run checks first</a></li>\n<li><a href=\"#g-02-store-elements-that-are-used-multiple-times\">G-02 Store elements that are used multiple times</a></li>\n<li><a href=\"#g-03-make-loop-increment-unchecked\">G-03 Make loop increment unchecked</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#mitigation-review\">Mitigation Review</a></p>\n<ul>\n<li><a href=\"#mitigation-overview\">Mitigation Overview</a></li>\n<li><a href=\"#medium-risk-findings-1\">Medium Risk Findings (1)</a></li>\n<li><a href=\"#low-risk-findings-1\">Low Risk Findings (1)</a></li>\n<li><a href=\"#non-critical-findings-1\">Non-Critical Findings (1)</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>",
  "md": "\n# Overview\n\n## About C4\n\nCode4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.\n\nA C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.\n\nDuring the audit contest outlined in this document, C4 conducted an analysis of the Juicebox V2 smart contract system written in Solidity. The audit contest took place between July 1—July 8 2022.\n\nFollowing the C4 audit contest, warden berndartmueller reviewed the mitigations for all identified issues; the mitigation review report is appended below the audit contest report.\n\n## Wardens\n\n111 Wardens contributed reports to the Juicebox V2 contest:\n\n  1. [berndartmueller](https://twitter.com/berndartmueller)\n  1. cccz\n  1. zzzitron\n  1. IllIllI\n  1. Lambda\n  1. [philogy](https://twitter.com/real_philogy)\n  1. 0x52\n  1. hake\n  1. DimitarDimitrov\n  1. 0x29A (0x4non and rotcivegaf)\n  1. hubble (ksk2345 and shri4net)\n  1. AlleyCat\n  1. [ylv](ylv.io)\n  1. [dirk_y](https://twitter.com/iamdirky)\n  1. [oyc&#95;109](https://twitter.com/andyfeili)\n  1. horsefacts\n  1. pashov\n  1. [hyh](https://twitter.com/0xhyh)\n  1. [Ruhum](https://twitter.com/0xruhum)\n  1. codexploder\n  1. Meera\n  1. bardamu\n  1. [Alex the Entreprenerd](https://twitter.com/gallodasballo)\n  1. rbserver\n  1. robee\n  1. &#95;141345&#95;\n  1. 0xA5DF\n  1. 0x1f8b\n  1. [defsec](https://twitter.com/defsec_)\n  1. [Picodes](https://twitter.com/thePicodes)\n  1. [joestakey](https://twitter.com/JoeStakey)\n  1. [fatherOfBlocks](https://twitter.com/father0fBl0cks)\n  1. simon135\n  1. [jonatascm](https://twitter.com/jonataspvt)\n  1. 0xDjango\n  1. [0xNazgul](https://twitter.com/0xNazgul)\n  1. 0xf15ers (remora and twojoy)\n  1. [Chom](https://chom.dev)\n  1. GimelSec ([rayn](https://twitter.com/rayn731) and sces60107)\n  1. [0xdanial](https://twitter.com/danialmomtahani)\n  1. [TomJ](https://mobile.twitter.com/tomj_bb)\n  1. [Funen](https://instagram.com/vanensurya)\n  1. [Sm4rty](https://twitter.com/Sm4rty_)\n  1. [Ch&#95;301](https://twitter.com/0xch301)\n  1. delfin454000\n  1. [durianSausage](https://github.com/lyciumlee)\n  1. [m&#95;Rassska](https://t.me/Road220)\n  1. Kaiziron\n  1. [rajatbeladiya](https://twitter.com/rajat_beladiya)\n  1. asutorufos\n  1. Hawkeye (0xwags and 0xmint)\n  1. sach1r0\n  1. ReyAdmirado\n  1. [MiloTruck](https://milotruck.github.io/)\n  1. Bnke0x0\n  1. brgltd\n  1. Waze\n  1. [JC](https://twitter.com/sm4rtcontr4ct)\n  1. [0v3rf10w](https://twitter.com/_0v3rf10w)\n  1. _Adam\n  1. [Rohan16](https://twitter.com/ROHANJH56009256)\n  1. Noah3o6\n  1. jayfromthe13th\n  1. djxploit\n  1. 0xNineDec\n  1. sahar\n  1. [svskaushik](https://twitter.com/svs_kaushik)\n  1. TerrierLover\n  1. samruna\n  1. [Chandr](https://www.linkedin.com/in/evgeniy-shaldin-21898712a/)\n  1. aysha\n  1. [0xKitsune](https://github.com/0xKitsune)\n  1. [Cheeezzyyyy](https://twitter.com/SOL_Cheeezzyyyy)\n  1. kebabsec (okkothejawa and [FlameHorizon](https://twitter.com/FlameHorizon1))\n  1. Limbooo\n  1. Saintcode&#95;\n  1. RedOneN\n  1. [c3phas](https://twitter.com/c3ph_)\n  1. apostle0x01\n  1. UnusualTurtle\n  1. sashik&#95;eth\n  1. JohnSmith\n  1. cRat1st0s\n  1. ajtra\n  1. [Tutturu](https://twitter.com/TuturuTech)\n  1. [Tomio](https://twitter.com/meidhiwirara)\n  1. [rfa](https://www.instagram.com/riyan_rfa/)\n  1. Metatron\n  1. [kaden](https://twitter.com/0xKaden)\n  1. [ignacio](https://twitter.com/0xheynacho)\n  1. [Aymen0909](https://github.com/Aymen1001)\n  1. [Randyyy](https://twitter.com/randyyramadhan)\n  1. [mrpathfindr](https://veranos.io)\n  1. ElKu\n  1. [mektigboy](https://twitter.com/mektigboy)\n  1. [exd0tpy](https://github.com/exd0tpy)\n  1. 0x09GTO\n  1. [Franfran](https://franfran.dev/)\n  1. [hansfriese](https://twitter.com/hansfriese)\n  1. Green\n  1. [tabish](https://twitter.com/tabishjshaikh)\n  1. tintin\n  1. cloudjunky\n  1. cryptphi\n  1. peritoflores\n\nThis contest was judged by [Jack the Pug](https://github.com/jack-the-pug).\n\nMitigations reviewed by [berndartmueller](https://twitter.com/berndartmueller).\n\nFinal report assembled by [itsmetechjay](https://twitter.com/itsmetechjay).\n\n# Summary\n\nThe C4 analysis yielded an aggregated total of 17 unique vulnerabilities. Of these vulnerabilities, 2 received a risk rating in the category of HIGH severity and 15 received a risk rating in the category of MEDIUM severity.\n\nAdditionally, C4 analysis included 60 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 74 reports recommending gas optimizations.\n\nAll of the issues presented here are linked back to their original finding.\n\n# Scope\n\nThe code under review can be found within the [C4 Juicebox V2 contest repository](https://github.com/code-423n4/2022-07-juicebox), and is composed of 10 smart contracts written in the Solidity programming language and includes 2,088 lines of Solidity code.\n\n# Severity Criteria\n\nC4 assesses the severity of disclosed vulnerabilities according to a methodology based on [OWASP standards](https://owasp.org/www-community/OWASP_Risk_Rating_Methodology).\n\nVulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.\n\nHigh-level considerations for vulnerabilities span the following key areas when conducting assessments:\n\n- Malicious Input Handling\n- Escalation of privileges\n- Arithmetic\n- Gas use\n\nFurther information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on [the C4 website](https://code4rena.com).\n\n# High Risk Findings (2)\n## [[H-01] Oracle data feed can be outdated yet used anyways which will impact payment logic](https://github.com/code-423n4/2022-07-juicebox-findings/issues/138)\n_Submitted by 0xNineDec, also found by 0x1f8b, 0x29A, 0x52, 0xdanial, 0xDjango, 0xf15ers, bardamu, cccz, Cheeezzyyyy, Chom, codexploder, defsec, Franfran, Alex the Entreprenerd, Green, hake, hansfriese, horsefacts, hubble, hyh, IllIllI, jonatascm, kebabsec, Meera, oyc&#95;109, pashov, rbserver, Ruhum, simon135, tabish, tintin, and zzzitron_\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBChainlinkV3PriceFeed.sol#L44>\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBPrices.sol#L57>\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L387>\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L585>\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L661>\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L830>\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L868>\n\n### Impact\n\nThe current implementation of `JBChainlinkV3PriceFeed` is used by the protocol to showcase how the feed will be retrieved via Chainlink Data Feeds. The feed is used to retrieve the `currentPrice`, which is also used afterwards by `JBPrices.priceFor()`, then by `JBSingleTokenPaymentTerminalStore.recordPaymentFrom()`, `JBSingleTokenPaymentTerminalStore.recordDistributionFor`, `JBSingleTokenPaymentTerminalStore.recordUsedAllowanceOf`, `JBSingleTokenPaymentTerminalStore._overflowDuring` and `JBSingleTokenPaymentTerminalStore._currentTotalOverflowOf`.\nAlthough the current feeds are calculated by a non implemented IJBPriceFeed, if the implementation of the price feed is the same as the showcased in`JBChainlinkV3PriceFeed`, the retrieved data can be outdated or out of bounds.\n\nIt is important to remember that the sponsor said on the dedicated Discord Channel that also oracle pricing and data retrieval is inside the scope.\n\n### Proof of Concept\n\nChainlink classifies their data feeds into four different groups regarding how reliable is each source thus, how risky they are. The groups are *Verified Feeds, Monitored Feeds, Custom Feeds and Specialized Feeds* (they can be seen [here](https://docs.chain.link/docs/selecting-data-feeds/#data-feed-categories)). The risk is the lowest on the first one and highest on the last one.\n\nA strong reliance on the price feeds has to be also monitored as recommended on the [Risk Mitigation section](https://docs.chain.link/docs/selecting-data-feeds/#risk-mitigation). There are several reasons why a data feed may fail such as unforeseen market events, volatile market conditions, degraded performance of infrastructure, chains, or networks, upstream data providers outage, malicious activities from third parties among others.\n\nChainlink recommends using their data feeds along with some controls to prevent mismatches with the retrieved data. Along some recommendations, the feed can include circuit breakers (for extreme price events), contract update delays (to ensure that the injected data into the protocol is fresh enough), manual kill-switches (to cease connection in case of found bug or vulnerability in an upstream contract), monitoring (control the deviation of the data) and soak testing (of the price feeds).\n\nThe `feed.lastRoundData()` interface parameters [according to Chainlink](https://docs.chain.link/docs/price-feeds-api-reference/) are the following:\n\n    function latestRoundData() external view\n        returns (\n            uint80 roundId,             //  The round ID.\n            int256 answer,              //  The price.\n            uint256 startedAt,          //  Timestamp of when the round started.\n            uint256 updatedAt,          //  Timestamp of when the round was updated.\n            uint80 answeredInRound      //  The round ID of the round in which the answer was computed.\n        )\n\nRegarding Juicebox itself, only the `answer` is used on the `JBChainlinkV3PriceFeed.currentPrice()` implementation. The retrieved price of the `priceFeed` can be outdated and used anyways as a valid data because no timestamp tolerance of the update source time is checked while storing the return parameters of `feed.latestRoundData()` inside `JBChainlinkV3PriceFeed.currentPrice()` as recommended by Chainlink in [here](https://docs.chain.link/docs/using-chainlink-reference-contracts/#check-the-timestamp-of-the-latest-answer). The usage of outdated data can impact on how the Payment terminals work regarding pricing calculation and value measurement.\n\nPrecisely the following protocol logic within `JBSingleTokenPaymentTerminalStore​‌` will work unexpectedly regarding value management.\n\n*   `recordPaymentFrom()`:\n\n    This function handles the minting of a project tokens according to a data source if one is given. If the retrieved value of the oracle is outdated, the `_weightRatio` at [Line 387](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L387) will return an incorrect value and then the `tokenCount` calculated amount will suffer from this mismatch, impacting in the amount of tokens minted.\n\n*   `recordDistributionFor()`:\n\n    Performs the recording of recently distributed funds for a project. On [line 580](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L580) the `distributedAmount` is computed and if the boolean check is false, then the call will perform a call to `priceFor` at [line 585](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L585). If the returned oracle value is not adjusted with current market prices, the `distributedAmount` will also drag that error computing an incorrect `distributedAmount`. Afterwards, because the `distributedAmount` is also used to update the token balances of the `msg.sender` ([line 598](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L598)) it means that the mismatch impacts on the modified balance.\n\n*   `recordUsedAllowanceOf()`:\n\n    Keeps record of used allowances of a project. It returns are analogue to the ones shown at `recordDistributionFor` where the `usedAmount` resembles the `distributedAmount`. The `usedAmount` is also used to update the project's balance. If the data of the oracle is outdated, the `usedAmount` will be calculated dragging that error.\n\n*   `_overflowDuring()`:\n\n    Used to get the amount that is overflowing relative to a specified cycle. The data retrieved from the oracle is used to calculate the value of `_distributionLimitRemaining` on [line 827](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L827) which is used later to calculate the return value if the boolean check performed at line 834 is true. Because the return of this function is the current balance of a project minus the amount that can be still distributed, if the amount that can still be distributed is wrong so will be the subtraction thus the return value.\n\n*   `_currentTotalOverflowOf()`:\n\n    Similar to the latter but used to get the overflow of all the terminals of a project. If the retrieved data has a mismatch with the market, the `_totalOverflow18Decimal` calculated on [line 866](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L827) if the boolean check is false will drag this mismatch which will also be dragged into the final return of the function.\n\nThe issues of those miscalculations impact on every project currently minted, which also affects subsequently on each user that has tokens of a project resulting in a high reach impact.\n\n### Recommended Mitigation Steps\n\nAs Chainlink [recommends](https://docs.chain.link/docs/using-chainlink-reference-contracts/#check-the-timestamp-of-the-latest-answer):\n\n> Your application should track the `latestTimestamp` variable or use the `updatedAt` value from the `latestRoundData()` function to make sure that the latest answer is recent enough for your application to use it. If your application detects that the reported answer is not updated within the heartbeat or within time limits that you determine are acceptable for your application, pause operation or switch to an alternate operation mode while identifying the cause of the delay.\n>\n> During periods of low volatility, the heartbeat triggers updates to the latest answer. Some heartbeats are configured to last several hours, so your application should check the timestamp and verify that the latest answer is recent enough for your application.\n\nIt is recommended to add a tolerance that compares the `updatedAt` return timestamp from `latestRoundData()` with the current block timestamp and ensure that the `priceFeed` is being updated with the required frequency.\n\nIf the `ETH/USD` is the only one that is needed to retrieve, because it is the most popular and available pair. It can also be useful to add other oracle to get the price feed (such as Uniswap's). This can be used as a redundancy in the case of having one oracle that returns outdated values (what is outdated and what is up to date can be determined by a tolerance as mentioned).\n\n**[mejango (Juicebox) confirmed, but disagreed with severity and commented](https://github.com/code-423n4/2022-07-juicebox-findings/issues/138#issuecomment-1182192760):**\n > There is also a good description in this duplicate #[78](https://github.com/code-423n4/2022-07-juicebox-findings/issues/78)\n\n**mejango (Juicebox) resolved:**\n> PR with fix: [PR #1](https://github.com/jbx-protocol/juice-contracts-v3/pull/1)\n\n**berndartmueller (warden) reviewed mitigation:**\n> Appropriate validations to prevent price staleness, round incompleteness and a negative price is put in place now.\n\n***\n\n## [[H-02] Token Change Can Be Frontrun, Blocking Token](https://github.com/code-423n4/2022-07-juicebox-findings/issues/104)\n_Submitted by philogy, also found by berndartmueller and Lambda_\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBTokenStore.sol#L246>\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBTokenStore.sol#L266>\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L605>\n\n### Impact\n\nThis vulnerability allows malicious actors to block other users from changing tokens of their projects. Furthermore if ownership over the token contract is transferred to the `JBTokenStore` contract prior to the change, as suggested in the [recourse section of Juicebox's 24.05.2022 post-mortem update](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/main/security/postmortem/5.24.2022.md#Recourse), this vulnerability would allow an attacker to become the owner of tokens being transferred. For `JBToken` based tokens this would allow an attacker to begin issuing arbitrary amounts the token that was meant to be transferred.\n\n### Proof of Concept\n\n**Exploit scenario:**\n\n1.  Wanting to assign their token to their JB project an unsuspecting owner / admin transfers ownership to a `JBTokenStore` contract, either directly by calling `transferOwnership` on the token or indirectly by calling the `changeFor` method on an older `JBTokenStore` contract with `_newOwner` set as the new `JBTokenStore` contract. (For the newer Juicebox contracts the `JBController` contract's `changeTokenOf` method would be called)\n2.  Seeing this change an attacker submits a `changeTokenFor` calling transaction to the new `JBController` contract, triggering the `JBTokenStore` contract's `changeFor` method, linking it to one of the attacker's projects (this could be created in advance or as part of the same transaction via an attack contract)\n3.  The attacker can then gain ownership over the token by calling `changeTokenFor` again with the `_newOwner` set to the attacker's address\n4.  Assuming the token has an owner restricted `mint` method like `JBToken` based tokens the attacker can now mint an arbitrary amount of the token\n\n### Recommended Mitigation Steps\n\nBefore allowing a caller to change to a specific token ensure that they have control over it. This can be achieved by storing a list of trusted older JB directories and projects which are then queried. Alternatively the contract could require the caller to actually be the `.owner()`  address of the token to migrate, this would require admins to:\n\n1.  Call `changeTokenOf` with themselves as the new owner\n2.  Call the new change token method on the newer contract, since they are the owner they'd pass the check\n3.  Independently transfer the ownership to the new token store to ensure that it can issue tokens\n\nFuture migrations can be made more seamless by having older contracts directly call new contracts via a sub-call, removing a necessary transaction for the admin. The newer contracts needs to verify that the older contract is the owner address of the token that's being set and also has approval of the project owner which is being configured.\n\n**[mejango (Juicebox) confirmed and commented](https://github.com/code-423n4/2022-07-juicebox-findings/issues/104#issuecomment-1179367197):**\n > Nice. The project should first `changeToken` and then transfer ownership.\n\n**mejango (Juicebox) resolved:**\n> PR with fix: [PR #1](https://github.com/jbx-protocol/juice-contracts-v3/pull/1)\n\n**berndartmueller (warden) reviewed mitigation:**\n> Changing an already set project token is not possible anymore.\n\n***\n\n \n# Medium Risk Findings (15)\n## [[M-01] Duplicated locked splits can be discarded](https://github.com/code-423n4/2022-07-juicebox-findings/issues/219)\n_Submitted by zzzitron_\n\n\nThe function of the protocol could be impacted.  This [proof of concept](https://gist.github.com/zzzitron/a8c6067923a87af8e001c05442258370#file-2022-07-juiceboxv2-t-sol-L117-L163) demonstrates the discarding of one of the duplicated locked splits. In the beginning it launches a project with two identical locked splits. As the owner of the project, it updates splits to only one of the two splits. Since all of original splits are locked both of them should still in the split after the update, but only one of them exists in the updated splits.\n\nIt happens because [the check of the locked split](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L211-L221) is not suitable for duplicated cases.\n\n*Please see warden's [original report](https://github.com/code-423n4/2022-07-juicebox-findings/issues/219) for full details.*\n\n### Recommended Mitigation Steps\n\nEither prevent duplicates in the splits or track the matches while checking the locked splits.\n\n**[mejango (Juicebox) acknowledged, but disagreed with severity](https://github.com/code-423n4/2022-07-juicebox-findings/issues/219)** \n\n***\n\n## [[M-02] Lack of check on `mustStartAtOrAfter`](https://github.com/code-423n4/2022-07-juicebox-findings/issues/220)\n_Submitted by zzzitron, also found by IllIllI_\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L306-L312>\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L518-L522>\n\n### Impact\n\nBy setting huge `mustStartAtOrAfter`, the owner can set start time in the past. It might open up possibility to bypass the ballot waiting time depending on the ballot's implementation.\n\n### Proof of Concept\n\nThe [proof of concept](https://gist.github.com/zzzitron/a8c6067923a87af8e001c05442258370#file-2022-07-juiceboxv2-t-sol-L77-L115) is almost the same as [`TestReconfigure::testReconfigureProject`](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/system_tests/TestReconfigure.sol#L77-L114). In the original test, the owner of the project is reconfiguring funding cycle, but it is not in effect immediately because ballot is set. Only after 3 days the newly set funding cycle will be the current one.\n\nIn the above proof of concept, only one parameter of the funding cycle is modified: `mustStartAtOrAfter` is set to `type(uint56).max`. As the result, the newly set funding cycle is considered as the current one without waiting for the ballot.\n\nThe cause of this is missing check on `mustStartAtOrAfter` upon setting [here](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L306-L312). If the given `_mustStartAtOrAfter` is huge, it will be passed eventually to the `_initFor`, `_packAndStoreIntrinsicPropertiesOf`. Then it will 'overflow' by shifting and set to the funding cycle, which [essentially can be set to any value including the past](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L518-L522). Also, it seems like the number will be also effected because the bigger digit will carry over.\n\n```solidity\n// in JBFundingCycleStore::_packAndStoreIntrinsicPropertiesOf\n// where the `_start` is derived from `_mustStartAtOrAfter`\n\n./JBFundingCycleStore.sol-518-    // start in bits 144-199.\n./JBFundingCycleStore.sol:519:    packed |= _start << 144;\n./JBFundingCycleStore.sol-520-\n./JBFundingCycleStore.sol-521-    // number in bits 200-255.\n./JBFundingCycleStore.sol-522-    packed |= _number << 200;\n```\n\n### Tools Used\n\nFoundry\n\n### Recommended Mitigation Steps\n\nAdd a check for the `_mustStartAtOrAfter`:\n\n```solidity\n// example check for _mustSTartAtOrAfter\n// in JBFundingCycleStore::configureFor\n\nif (_mustStartAtOrAfter > type(uint56).max) revert INVALID_START();\n```\n\n**[drgorillamd (Juicebox) confirmed and commented](https://github.com/code-423n4/2022-07-juicebox-findings/issues/220#issuecomment-1182519751):**\n > We've seen the POC, now assessing how to best mitigate (at what level).\n\n**[jack-the-pug (judge) commented](https://github.com/code-423n4/2022-07-juicebox-findings/issues/220#issuecomment-1200425695):**\n > Good catch!\n\n**drgorillamd (Juicebox) resolved:**\n> PR with fix: [PR #1](https://github.com/jbx-protocol/juice-contracts-v3/pull/1)\n\n**berndartmueller (warden) reviewed mitigation:**\n> `mustStartAtOrAfter` and the start date of an upcoming funding cycle are now validated to fit in `uint56`.\n\n\n\n***\n\n## [[M-03] Use a safe transfer helper library for ERC20 transfers](https://github.com/code-423n4/2022-07-juicebox-findings/issues/242)\n_Submitted by horsefacts, also found by 0x1f8b, 0x29A, 0x52, 0xf15ers, AlleyCat, apostle0x01, berndartmueller, cccz, Ch&#95;301, Chom, cloudjunky, codexploder, cryptphi, delfin454000, durianSausage, fatherOfBlocks, Franfran, hake, hansfriese, hyh, IllIllI, jonatascm, Kaiziron, Limbooo, m&#95;Rassska, Meera, oyc&#95;109, peritoflores, rajatbeladiya, rbserver, Ruhum, Sm4rty, svskaushik, and zzzitron_\n\n`JBERC20PaymentTerminal#_transferFrom` calls `IERC20#transfer` and `transferFrom` directly. There are two issues with using this interface directly:\n\n1.  `JBERC20PaymentTerminal#_transferFrom` function does not check the return value of these calls. Tokens that return `false` rather than revert to indicate failed transfers may silently fail rather than reverting as expected.\n\n2.  Since the IERC20 interface requires a boolean return value, attempting to transfer ERC20s with [missing return values](https://github.com/d-xo/weird-erc20#missing-return-values) will revert. This means Juicebox payment terminals cannot support a number of popular ERC20s, including USDT and BNB.\n\n[`JBERC20PaymentTerminal#_transferFrom`](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBERC20PaymentTerminal.sol#L81-L89):\n\n```solidity\n  function _transferFrom(\n    address _from,\n    address payable _to,\n    uint256 _amount\n  ) internal override {\n    _from == address(this)\n      ? IERC20(token).transfer(_to, _amount)\n      : IERC20(token).transferFrom(_from, _to, _amount);\n  }\n```\n\n### Impact\n\nJuicebox payment terminals may issue project tokens to users even though their incoming token transfer failed. Juicebox payment terminals cannot support USDT, BNB, and other popular (but nonstandard) ERC20s.\n\n### Recommended Mitigation Steps\n\nUse a safe transfer library like OpenZeppelin [SafeERC20](https://docs.openzeppelin.com/contracts/4.x/api/token/erc20#SafeERC20) to ensure consistent handling of ERC20 return values and abstract over [inconsistent ERC20](https://github.com/d-xo/weird-erc20) implementations.\n\nAdditionally, since payment terminals are meant to support a variety of ERC20s, consider writing simulation tests that make token transfers using payment terminals for the most popular and most unusual ERC20s.\n\n(Note also that the out of scope `JBETHERC20ProjectPayer` and `JBETHERC20SplitsPayer` contracts also call `IERC20#transfer` and `transferFrom` without a helper!)\n\nSee the following Forge test, which simulates an attempted USDT transfer. (Run this in fork mode using the `--fork-url` flag).\n\n```solidity\n// SPDX-License-Identifier: MIT\npragma solidity 0.8.6;\n\nimport './helpers/TestBaseWorkflow.sol';\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\n\naddress constant USDT_ADDRESS = address(0xdAC17F958D2ee523a2206206994597C13D831ec7);\n\ncontract TestWeirdERC20 is TestBaseWorkflow {\n  using SafeERC20 for IERC20Metadata;\n\n  JBController controller;\n  JBProjectMetadata _projectMetadata;\n  JBFundingCycleData _data;\n  JBFundingCycleMetadata _metadata;\n  JBGroupedSplits[] _groupedSplits;\n  JBFundAccessConstraints[] _fundAccessConstraints;\n  IJBPaymentTerminal[] _terminals;\n  JBTokenStore _tokenStore;\n  JBERC20PaymentTerminal _tetherTerminal;\n\n  IERC20Metadata usdt = IERC20Metadata(USDT_ADDRESS);\n  address _projectOwner;\n\n  uint256 WEIGHT = 1000 * 10**18;\n\n  function setUp() public override {\n    super.setUp();\n\n    _projectOwner = multisig();\n\n    _tokenStore = jbTokenStore();\n\n    controller = jbController();\n\n    _projectMetadata = JBProjectMetadata({content: 'myIPFSHash', domain: 1});\n\n    _data = JBFundingCycleData({\n      duration: 14,\n      weight: WEIGHT,\n      discountRate: 450000000,\n      ballot: IJBFundingCycleBallot(address(0))\n    });\n\n    _metadata = JBFundingCycleMetadata({\n      global: JBGlobalFundingCycleMetadata({allowSetTerminals: false, allowSetController: false}),\n      reservedRate: 5000, //50%\n      redemptionRate: 5000, //50%\n      ballotRedemptionRate: 0,\n      pausePay: false,\n      pauseDistributions: false,\n      pauseRedeem: false,\n      pauseBurn: false,\n      allowMinting: false,\n      allowChangeToken: false,\n      allowTerminalMigration: false,\n      allowControllerMigration: false,\n      holdFees: false,\n      useTotalOverflowForRedemptions: false,\n      useDataSourceForPay: false,\n      useDataSourceForRedeem: false,\n      dataSource: address(0)\n    });\n\n    _tetherTerminal = new JBERC20PaymentTerminal(\n      usdt,\n      jbLibraries().ETH(), // currency\n      jbLibraries().ETH(), // base weight currency\n      1, // JBSplitsGroupe\n      jbOperatorStore(),\n      jbProjects(),\n      jbDirectory(),\n      jbSplitsStore(),\n      jbPrices(),\n      jbPaymentTerminalStore(),\n      multisig()\n    );\n    evm.label(address(_tetherTerminal), 'TetherTerminal');\n\n    _terminals.push(_tetherTerminal);\n  }\n\n  function testTetherPaymentsRevert() public {\n    JBERC20PaymentTerminal terminal = _tetherTerminal;\n\n    _fundAccessConstraints.push(\n      JBFundAccessConstraints({\n        terminal: terminal,\n        token: address(USDT_ADDRESS),\n        distributionLimit: 10 * 10**18,\n        overflowAllowance: 5 * 10**18,\n        distributionLimitCurrency: jbLibraries().ETH(),\n        overflowAllowanceCurrency: jbLibraries().ETH()\n      })\n    );\n\n    uint256 projectId = controller.launchProjectFor(\n      _projectOwner,\n      _projectMetadata,\n      _data,\n      _metadata,\n      block.timestamp,\n      _groupedSplits,\n      _fundAccessConstraints,\n      _terminals,\n      ''\n    );\n\n    address caller = msg.sender;\n    evm.label(caller, 'caller');\n    deal(address(usdt), caller, 20 * 10**18);\n\n    evm.prank(caller);\n    usdt.safeApprove(address(terminal), 20 * 10**18);\n    evm.prank(caller);\n    terminal.pay(\n      projectId,\n      20 * 10**18,\n      address(usdt),\n      msg.sender,\n      0,\n      false,\n      'Forge test',\n      new bytes(0)\n    );\n  }\n}\n```\n**[mejango (Juicebox) confirmed](https://github.com/code-423n4/2022-07-juicebox-findings/issues/281)**\n\n**mejango (Juicebox) resolved:**\n> PR with fix: [PR #1](https://github.com/jbx-protocol/juice-contracts-v3/pull/1)\n\n**berndartmueller (warden) reviewed mitigation:**\n> OpenZeppelins&#39; `SafeERC20` library is now used to ensure consistent handling of ERC20 token transfers.\n\n\n***\n\n## [[M-04] Juicebox project owner can create a honeypot to cause grief](https://github.com/code-423n4/2022-07-juicebox-findings/issues/170)\n_Submitted by dirk&#95;y, also found by IllIllI, and ylv_\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L760>\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L147>\n\n### Impact\n\nIn a Juicebox project the project owner (or anyone that they approve) can set splits. These splits are details of the token distributions to other addresses in response to contributions to the project.\n\nAt the moment the `SPLITS_TOTAL_PERCENT = 1_000_000_000`. This means that the project owner could theoretically add 1 billion different splits, each with a percent value of 1. Of course, this would require too much gas, but the idea stands. A project owner could honeypot users by creating a project with the `MAX_RESERVED_RATE` reserved rate, and setting a large percentage split for the `msg.sender` who calls `distributeReservedTokensOf` in `JBController.sol`. The project owner could then fund the project with a series of large payments to ensure that the reserved amount was sufficiently large to entice a user to call `distributeReservedTokensOf` in the belief that they will be obtaining a large percentage of the reserve.\n\nHowever, when a user calls this method they will hit the block gas limit and will have spent a large amount of ETH on gas, without receiving any of their expected split.\n\nI consider this to be of high severity since user assets (in the form of gas) can be permanently lost without any loss to the project owner/griefer.\n\n### Proof of Concept\n\nThe key behaviour we need to prove is that it's possible to set more splits before hitting the block gas limit than it is to distribute reward tokens over the same number of splits. If this is true, the project owner will be able to set a number of splits that will always make the `distributeReservedTokensOf` hit the block gas limit, and hence grief the caller.\n\nThis can be demonstrated by modifying the existing test cases. From some basic testing I have found that calling `distributeReservedTokensOf` hits the block gas limit when there are at least 389 splits, but for the same split count the project owner can successfully call `set` without hitting the block gas limit.\n\n    diff --git a/test/jb_controller/distribute_reserved_token_of.test.js b/test/jb_controller/distribute_reserved\n    _token_of.test.js\n    index 2f964d8..6cfd645 100644\n    --- a/test/jb_controller/distribute_reserved_token_of.test.js\n    +++ b/test/jb_controller/distribute_reserved_token_of.test.js\n    @@ -119,10 +119,15 @@ describe('JBController::distributeReservedTokensOf(...)', function () {\n         const { addrs, projectOwner, jbController, mockJbTokenStore, mockSplitsStore, timestamp } =\n           await setup();\n         const caller = addrs[0];\n    -    const splitsBeneficiariesAddresses = [addrs[1], addrs[2]].map((signer) => signer.address);\n    +    let addressList = [addrs[1], addrs[2]];\n    +    for (let i = 1; i < 389; i++) {\n    +      addressList.push(addrs[1]);\n    +    }\n    +\n    +    const splitsBeneficiariesAddresses = addressList.map((signer) => signer.address);\n\n         const splits = makeSplits({\n    -      count: 2,\n    +      count: 389,\n           beneficiary: splitsBeneficiariesAddresses,\n           preferClaimed: true,\n         });\n    diff --git a/test/jb_splits_store/set.test.js b/test/jb_splits_store/set.test.js\n    index 3dd0331..5992957 100644\n    --- a/test/jb_splits_store/set.test.js\n    +++ b/test/jb_splits_store/set.test.js\n    @@ -54,7 +54,7 @@ describe('JBSplitsStore::set(...)', function () {\n         };\n       }\n\n    -  function makeSplits(beneficiaryAddress, count = 4) {\n    +  function makeSplits(beneficiaryAddress, count = 389) {\n         let splits = [];\n         for (let i = 0; i < count; i++) {\n           splits.push({\n\n### Tools Used\n\nVSCode & Hardhat\n\n### Recommended Mitigation Steps\n\nFor `JBSplit` objects there should be a minimum percentage for each split when calling `set`. Furthermore, it would probably be wise to prevent duplicate beneficiaries, but I have omitted that in the below recommendation for clarity. Below is a suggested diff. I've arbitrarily set a minimum percentage of 10,000 but given the PoC the min percentage should be conservatively set to ensure no more than 389 splits can be created (I would probably suggest a cap of max 100 splits per group).\n\n    diff --git a/contracts/JBSplitsStore.sol b/contracts/JBSplitsStore.sol\n    index d61cca2..429d78a 100644\n    --- a/contracts/JBSplitsStore.sol\n    +++ b/contracts/JBSplitsStore.sol\n    @@ -227,8 +227,8 @@ contract JBSplitsStore is IJBSplitsStore, JBOperatable {\n         uint256 _percentTotal = 0;\n\n         for (uint256 _i = 0; _i < _splits.length; _i++) {\n    -      // The percent should be greater than 0.\n    -      if (_splits[_i].percent == 0) revert INVALID_SPLIT_PERCENT();\n    +      // The percent should be greater than or equal to 10000.\n    +      if (_splits[_i].percent < JBConstants.MIN_SPLIT_PERCENT) revert INVALID_SPLIT_PERCENT();\n\n           // ProjectId should be within a uint56\n           if (_splits[_i].projectId > type(uint56).max) revert INVALID_PROJECT_ID();\n    diff --git a/contracts/libraries/JBConstants.sol b/contracts/libraries/JBConstants.sol\n    index 9a418f2..afb5f23 100644\n    --- a/contracts/libraries/JBConstants.sol\n    +++ b/contracts/libraries/JBConstants.sol\n    @@ -10,6 +10,7 @@ library JBConstants {\n       uint256 public constant MAX_REDEMPTION_RATE = 10000;\n       uint256 public constant MAX_DISCOUNT_RATE = 1000000000;\n       uint256 public constant SPLITS_TOTAL_PERCENT = 1000000000;\n    +  uint256 public constant MIN_SPLIT_PERCENT = 10000;\n       uint256 public constant MAX_FEE = 1000000000;\n       uint256 public constant MAX_FEE_DISCOUNT = 1000000000;\n     }\n\nAn alternative to setting a minimum percentage would be to have a check on the length of the splits array and capping that at a sensible value. In this instance a project owner could still set low percentages per split, however I don't personally see the value in being able to set a value of 1 (to receive 1 billionth of the reserve).\n\n**[mejango (Juicebox) acknowledged, but disagreed with severity and commented](https://github.com/code-423n4/2022-07-juicebox-findings/issues/170#issuecomment-1179397247):**\n > Damn. Word. This is deep. Thank you.\n\n > Not sure about \"high\" severity. But surely should be noted among the protocol's risks.\n\n**[jack-the-pug (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-07-juicebox-findings/issues/170#issuecomment-1193226758):**\n > Not bad, but also not a High. This is similar to the unbounded loop and other out-of-gas issues, the honeypot probably wont work if the wallet UI is better (alerts about the out-of-gas error).\n> \n> Will downgrade to Medium.\n\n\n\n***\n\n## [[M-05] Discounted fee calculation is imprecise and calculates less fees than anticipated](https://github.com/code-423n4/2022-07-juicebox-findings/issues/275)\n_Submitted by berndartmueller, also found by 0x52, hyh, and Ruhum_\n\nThe `JBPayoutRedemptionPaymentTerminal._feeAmount` function is used to calculate the fee based on a given `_amount`, a fee rate `_fee` and an optional discount `_feeDiscount`.\n\nHowever, the current implementation calculates the fee in a way that leads to inaccuracy and to fewer fees being paid than anticipated by the protocol.\n\n### Proof of Concept\n\n[JBPayoutRedemptionPaymentTerminal.\\_feeAmount](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L1446-L1451)\n\n```solidity\nfunction _feeAmount(\n    uint256 _amount,\n    uint256 _fee,\n    uint256 _feeDiscount\n  ) internal pure returns (uint256) {\n    // Calculate the discounted fee.\n    uint256 _discountedFee = _fee -\n      PRBMath.mulDiv(_fee, _feeDiscount, JBConstants.MAX_FEE_DISCOUNT);\n\n    // The amount of tokens from the `_amount` to pay as a fee.\n    return\n      _amount - PRBMath.mulDiv(_amount, JBConstants.MAX_FEE, _discountedFee + JBConstants.MAX_FEE);\n  }\n```\n\n**Example:**\n\nGiven the following (don't mind the floating point arithmetic, this is only for simplicity. The issues still applies with integer arithmetic and higher decimal precision):\n\n*   `amount` - 1000\n*   `fee` - 5 (5%)\n*   `feeDiscount` - 10 (10%)\n*   `MAX_FEE_DISCOUNT` - 100\n*   `MAX_FEE` - 100\n\n$discountedFee = fee - {{fee \\ast feeDiscount} \\over MAX_FEE_DISCOUNT}$\\\n$discountedFee = 5 - {{5 \\ast 10} \\over 100}$\\\n$discountedFee = 4.5$\n\nCalculating the fee amount based on the discounted fee of $4.5$:\n\n$fee\\_{Amount} = amount - {{amount \\ast MAX_FEE} \\over {discountedFee + MAX_FEE}}$\\\n$fee\\_{Amount} = 1000 - {{1000 \\ast 100} \\over {4.5 + 100}}$\\\n$fee\\_{Amount} = 1000 - 956.93779904$\\\n$fee\\_{Amount} = 43.06220096$\n\nThe calculated and wrong fee amount is `~43`, instead, it should be `45`. The issue comes from dividing by `_discountedFee + JBConstants.MAX_FEE`.\n\n**Now the correct way:**\n\nI omitted the `discountedFee` calculation as this formula is correct.\n\n$fee\\_{Amount} = {{amount \\ast discountedFee} \\over {MAX_FEE}}$\\\n$fee\\_{Amount} = {{1000 \\ast 4.5} \\over {100}}$\\\n$fee\\_{Amount} = 45$\n\n### Recommended Mitigation Steps\n\nFix the discounted fee calculation by adjusting the formula to:\n\n$fee\\_{Amount} = amount \\ast {fee - fee \\ast {discount \\over MAX\\_{FEE_DISCOUNT}} \\over MAX\\_{FEE}}$\n\nIn Solidity:\n\n```solidity\nfunction _feeAmount(\n    uint256 _amount,\n    uint256 _fee,\n    uint256 _feeDiscount\n) internal pure returns (uint256) {\n    // Calculate the discounted fee.\n    uint256 _discountedFee = _fee -\n      PRBMath.mulDiv(_fee, _feeDiscount, JBConstants.MAX_FEE_DISCOUNT);\n\n    // The amount of tokens from the `_amount` to pay as a fee.\n    return PRBMath.mulDiv(_amount, _discountedFee, JBConstants.MAX_FEE);\n}\n```\n\n**[mejango (Juicebox) acknowledged](https://github.com/code-423n4/2022-07-juicebox-findings/issues/275)** \n\n**[jack-the-pug (judge) commented](https://github.com/code-423n4/2022-07-juicebox-findings/issues/275#issuecomment-1193219669):**\n > Great job! One of the best write-ups I have ever seen, simple and clean.\n >\n > Here is a trophy for you: 🏆\n\n\n\n***\n\n## [[M-06] Code credits fee-on-transfer tokens for amount stated, not amount transferred](https://github.com/code-423n4/2022-07-juicebox-findings/issues/304)\n_Submitted by IllIllI, also found by cccz, hake, Meera, rbserver, and robee_\n\nSome ERC20 tokens, such as USDT, allow for charging a fee any time `transfer()` or `transferFrom()` is called. If a contract does not allow for amounts to change after transfers, subsequent transfer operations based on the original amount will `revert()` due to the contract having an insufficient balance.\n\n### Impact\n\nIf there is only one user that has use a payment terminal with a fee-on-transfer token to pay a project for its token, that project will be unable to withdraw their funds, because the amount available will be less than the amount stated during deposit, and therefore the token's `transfer()` call will revert during withdrawal. For more users, consider what happens if the token has a 10% fee-on-transfer fee - deposits will be underfunded by 10%, and the projects trying to withdraw the last 10% of deposits/rewards will have their calls revert due to the contract not holding enough tokens. If a whale does a large withdrawal, the extra 10% that that whale gets will mean that *many* projects will not be able to withdraw anything at all.\n\n### Proof of Concept\n\nBecause the terminals rely on terminal stores, which only store the initial value provided during the payment, and provide it during distributions, the terminals are unable to use the decreased value when they later are told to distribute funds to a project.\n\n`JBSingleTokenPaymentTerminalStore.recordPaymentFrom()` stores the value passed in:\n\n```solidity\nFile: contracts/JBSingleTokenPaymentTerminalStore.sol   #1\n\n372       // Add the amount to the token balance of the project.\n373       balanceOf[IJBSingleTokenPaymentTerminal(msg.sender)][_projectId] =\n374         balanceOf[IJBSingleTokenPaymentTerminal(msg.sender)][_projectId] +\n375         _amount.value;\n```\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L372-L375>\n\nAnd provide that same value when recording a dispersion:\n\n```solidity\nFile: contracts/JBSingleTokenPaymentTerminalStore.sol   #2\n\n597       // Removed the distributed funds from the project's token balance.\n598       balanceOf[IJBSingleTokenPaymentTerminal(msg.sender)][_projectId] =\n599         balanceOf[IJBSingleTokenPaymentTerminal(msg.sender)][_projectId] -\n600         distributedAmount;\n```\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L597-L600>\n\nThe terminals themselves use the values directly, and don't consult their balances to look for changes (lines 817 and 850 below):\n\n```solidity\nFile: contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol   #3\n\n817       (JBFundingCycle memory _fundingCycle, uint256 _distributedAmount) = store.recordDistributionFor(\n818         _projectId,\n819         _amount,\n820         _currency\n821       );\n822   \n823       // The amount being distributed must be at least as much as was expected.\n824       if (_distributedAmount < _minReturnedTokens) revert INADEQUATE_DISTRIBUTION_AMOUNT();\n825   \n826       // Get a reference to the project owner, which will receive tokens from paying the platform fee\n827       // and receive any extra distributable funds not allocated to payout splits.\n828       address payable _projectOwner = payable(projects.ownerOf(_projectId));\n829   \n830       // Define variables that will be needed outside the scoped section below.\n831       // Keep a reference to the fee amount that was paid.\n832       uint256 _fee;\n833   \n834       // Scoped section prevents stack too deep. `_feeDiscount`, `_feeEligibleDistributionAmount`, and `_leftoverDistributionAmount` only used within scope.\n835       {\n836         // Get the amount of discount that should be applied to any fees taken.\n837         // If the fee is zero or if the fee is being used by an address that doesn't incur fees, set the discount to 100% for convinience.\n838         uint256 _feeDiscount = fee == 0 || isFeelessAddress[msg.sender]\n839           ? JBConstants.MAX_FEE_DISCOUNT\n840           : _currentFeeDiscount(_projectId);\n841   \n842         // The amount distributed that is eligible for incurring fees.\n843         uint256 _feeEligibleDistributionAmount;\n844   \n845         // The amount leftover after distributing to the splits.\n846         uint256 _leftoverDistributionAmount;\n847   \n848         // Payout to splits and get a reference to the leftover transfer amount after all splits have been paid.\n849         // Also get a reference to the amount that was distributed to splits from which fees should be taken.\n850         (_leftoverDistributionAmount, _feeEligibleDistributionAmount) = _distributeToPayoutSplitsOf(\n851           _projectId,\n852           _fundingCycle.configuration,\n853           payoutSplitsGroup,\n854           _distributedAmount,\n855           _feeDiscount\n856         );\n```\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L817-L856>\n\nThe terminals used the amounts stated, rather than transferred in (lines 349 and 356):\n\n```solidity\nFile: contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol   #4\n\n332     function pay(\n333       uint256 _projectId,\n334       uint256 _amount,\n335       address _token,\n336       address _beneficiary,\n337       uint256 _minReturnedTokens,\n338       bool _preferClaimedTokens,\n339       string calldata _memo,\n340       bytes calldata _metadata\n341     ) external payable virtual override isTerminalOf(_projectId) returns (uint256) {\n342       _token; // Prevents unused var compiler and natspec complaints.\n343   \n344       // ETH shouldn't be sent if this terminal's token isn't ETH.\n345       if (token != JBTokens.ETH) {\n346         if (msg.value > 0) revert NO_MSG_VALUE_ALLOWED();\n347   \n348         // Transfer tokens to this terminal from the msg sender.\n349         _transferFrom(msg.sender, payable(address(this)), _amount);\n350       }\n351       // If this terminal's token is ETH, override _amount with msg.value.\n352       else _amount = msg.value;\n353   \n354       return\n355         _pay(\n356           _amount,\n357           msg.sender,\n358           _projectId,\n359           _beneficiary,\n360           _minReturnedTokens,\n361           _preferClaimedTokens,\n362           _memo,\n363           _metadata\n364         );\n365     }\n```\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L332-L365>\n\nSame here (lines 555 and 561):\n\n```solidity\nFile: contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol   #5\n\n540     function addToBalanceOf(\n541       uint256 _projectId,\n542       uint256 _amount,\n543       address _token,\n544       string calldata _memo,\n545       bytes calldata _metadata\n546     ) external payable virtual override isTerminalOf(_projectId) {\n547       _token; // Prevents unused var compiler and natspec complaints.\n548   \n549       // If this terminal's token isn't ETH, make sure no msg.value was sent, then transfer the tokens in from msg.sender.\n550       if (token != JBTokens.ETH) {\n551         // Amount must be greater than 0.\n552         if (msg.value > 0) revert NO_MSG_VALUE_ALLOWED();\n553   \n554         // Transfer tokens to this terminal from the msg sender.\n555         _transferFrom(msg.sender, payable(address(this)), _amount);\n556       }\n557       // If the terminal's token is ETH, override `_amount` with msg.value.\n558       else _amount = msg.value;\n559   \n560       // Add to balance while only refunding held fees if the funds aren't originating from a feeless terminal.\n561       _addToBalanceOf(_projectId, _amount, !isFeelessAddress[msg.sender], _memo, _metadata);\n562     }\n```\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L540-L562>\n\nThe transfer of fees and reserves have the same issue.\n\n### Recommended Mitigation Steps\n\nMeasure the contract balance before and after the call to `transfer()`/`transferFrom()` in `JBERC20PaymentTerminal._transferFrom()`, and use the difference between the two as the amount, rather than the amount stated\n\n**[drgorillamd (Juicebox) acknowledged](https://github.com/code-423n4/2022-07-juicebox-findings/issues/304)**\n\n**drgorillamd (Juicebox) resolved:**\n> PR with fix: [PR #1](https://github.com/jbx-protocol/juice-contracts-v3/pull/1)\n\n**berndartmueller (warden) reviewed mitigation:**\n> The delta of the token balance before and after a transfer is used instead of the amount stated to handle fee-on-transfer tokens appropriately.\n\n\n***\n\n## [[M-07] processFees() may fail due to exceed gas limit](https://github.com/code-423n4/2022-07-juicebox-findings/issues/8)\n_Submitted by oyc&#95;109, also found by 0x52, IllIllI, and pashov_\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L594>\n\n### Impact\n\nThe function `processFees()` in `JBPayoutRedemptionPaymentTerminal.sol` may fail due to unbounded loop over `_heldFeesOf[_projectId]`\n\n`_heldFeesOf[_projectId]` can get very large due to the function `_takeFeeFrom()` where it pushes fees that should be paid to a specific beneficiary onto the array\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L1199>\n\n`_heldFeesOf[_projectId]` could get large and cause a DOS condition where no fees can be distributed due to exceed of gas limit\n\n### Proof of Concept\n\n        for (uint256 _i = 0; _i < _heldFeeLength; ) {\n          // Get the fee amount.\n          uint256 _amount = _feeAmount(\n            _heldFees[_i].amount,\n            _heldFees[_i].fee,\n            _heldFees[_i].feeDiscount\n          );\n\n**[mejango (Juicebox) acknowledged](https://github.com/code-423n4/2022-07-juicebox-findings/issues/8)** \n\n\n***\n\n## [[M-08] Reentrancy issues on function `distributePayoutsOf`](https://github.com/code-423n4/2022-07-juicebox-findings/issues/329)\n_Submitted by 0x29A, also found by AlleyCat and hubble_\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L415-L448>\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L788-L900>\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L981-L1174>\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBETHPaymentTerminal.sol#L63-L79>\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBERC20PaymentTerminal.sol#L73-L89>\n\n### Impact\n\nIn the contract `JBPayoutRedemptionPaymentTerminal`, the function [`distributePayoutsOf`](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L415-L448) calls the internal function [`_distributePayoutsOf`](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L788-L900) and this internal function perfoms a loop where is using the function [`_distributeToPayoutSplitsOf`](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L981-L1174)\nIn these functions there are a [`_transferFrom`](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L1148) what:\n\n*   `JBETHPaymentTerminal` using a [`Address.sendValue(_to, _amount)`](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBETHPaymentTerminal.sol#L78)\n*   `JBERC20PaymentTerminal` using a [`IERC20(token).transfer(_to, _amount)`](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBERC20PaymentTerminal.sol#L87) with a `ERC777` as token\n\nBoth give back the control to the `msg.sender` (`_to` variable) creating a reentrancy attack vector.\n\nAlso could end with a lot of bad calculation because is using uncheckeds statements and function `_distributePayoutsOf` its no respecting the `checks, effects, interactions` pattern.\n\n### Proof of Concept\n\nCraft a contract to call function [`distributePayoutsOf`](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L437), on receive ether reentrant to function `distributePayoutsOf` or use a `ERC777` callback.\n\n### Recommended Mitigation Steps\n\nAdd a reentrancyGuard as you do on `JBSingleTokenPaymentTerminalStore.sol`;\nYou have already imported the ReentrancyGuard on [JBPayoutRedemptionPaymentTerminal.sol#L5](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L5) but you are not using it.\n\nMy recommendation is to add `nonReentrant` modifier on function `distributePayoutsOf`.\n\n**[drgorillamd (Juicebox) acknowledged](https://github.com/code-423n4/2022-07-juicebox-findings/issues/35)**\n\n**[jack-the-pug (judge) commented](https://github.com/code-423n4/2022-07-juicebox-findings/issues/329#issuecomment-1193225553):**\n > Lack of clear path to exploit it, but it does seem like `_distributeToPayoutSplitsOf` can be used to reenter `distributePayoutsOf`; it requires the attacker to be one of the project's splits beneficiaries, though.\n> \n> https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L1148-L1153\n> \n> ```solidity\n>           _transferFrom(\n>             address(this),\n>             _split.beneficiary != address(0) ? _split.beneficiary : payable(msg.sender),\n>             _netPayoutAmount\n>           );\n> \n> ```\n\n***\n\n## [[M-09] Unhandled chainlink revert would lock all price oracle access](https://github.com/code-423n4/2022-07-juicebox-findings/issues/59)\n_Submitted by bardamu, also found by berndartmueller, codexploder, Alex the Entreprenerd, and horsefacts_\n\nCall to `latestRoundData` could potentially revert and make it impossible to query any prices. Feeds cannot be changed after they are configured (<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBPrices.sol#L115>) so this would result in a permanent denial of service.\n\n### Proof of Concept\n\nChainlink's multisigs can immediately block access to price feeds at will. Therefore, to prevent denial of service scenarios, it is recommended to query Chainlink price feeds using a defensive approach with Solidity’s try/catch structure. In this way, if the call to the price feed fails, the caller contract is still in control and can handle any errors safely and explicitly.\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBPrices.sol#L69>\n\n    if (_feed != IJBPriceFeed(address(0))) return _feed.currentPrice(_decimals);\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBChainlinkV3PriceFeed.sol#L42-L44>\n\n    function currentPrice(uint256 _decimals) external view override returns (uint256) {\n      // Get the latest round information. Only need the price is needed.\n      (, int256 _price, , , ) = feed.latestRoundData();\n\nRefer to <https://blog.openzeppelin.com/secure-smart-contract-guidelines-the-dangers-of-price-oracles/> for more information regarding potential risks to account for when relying on external price feed providers.\n\n### Tools Used\n\nVIM\n\n### Recommended Mitigation Steps\n\nSurround the call to `latestRoundData()` with `try/catch` instead of calling it directly. In a scenario where the call reverts, the catch block can be used to call a fallback oracle or handle the error in any other suitable way.\n\n**[mejango (Juicebox) acknowledged](https://github.com/code-423n4/2022-07-juicebox-findings/issues/59)**\n\n**[jack-the-pug (judge) commented](https://github.com/code-423n4/2022-07-juicebox-findings/issues/59#issuecomment-1200414043):**\n > Good catch! Seems like we should update this function to allow changing the feed contract:\n> \n> https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBPrices.sol#L109-L121\n\n\n\n***\n\n## [[M-10] Grieffer beneficiary can cause DOS](https://github.com/code-423n4/2022-07-juicebox-findings/issues/229)\n_Submitted by hake, also found by cccz_\n\nPayouts won't be able to be distributed if one of multiple beneficiaries decides to revert the transaction on receival.\n\n### Proof of Concept\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L1147-L1152>\n\n```solidity\n// If there's a beneficiary, send the funds directly to the beneficiary. Otherwise, send to the msg.sender.\n          _transferFrom(\n            address(this),\n            _split.beneficiary != address(0) ? _split.beneficiary : payable(msg.sender),\n            _netPayoutAmount\n          );\n```\n\nIf token used is native ETH or ERC777 a beneficiary can revert the transaction on the callback and DOS `_distributeToPayoutSplitsOf()` for all the other beneficiaries.\n\n### Recommended Mitigation Steps\n\nHave beneficiaries withdraw their benefit instead of sending it to them.\n\n**[mejango (Juicebox) acknowledged and commented](https://github.com/code-423n4/2022-07-juicebox-findings/issues/229#issuecomment-1182422038):**\n > By design. Project owners bring their own risks and opportunities when setting payout splits. Made clear [here](https://info.juicebox.money/dev/learn/risks#setting-a-distribution-limit-and-payout-splits).\n\n**[hake (warden) commented](https://github.com/code-423n4/2022-07-juicebox-findings/issues/229#issuecomment-1183603378):**\n > A malicious or compromised beneficiary is not exactly under a project owner's control. Implementing the recommended mitigation step would prevent the possibility of DOS while maintaining all privileges of project owner. No risks outlined in link below would be mitigated by the recommended mitigation, thus project owner would still have access to same range of functionalities. \n>  https://info.juicebox.money/dev/learn/risks/#setting-a-distribution-limit-and-payout-splits\n\n\n***\n\n## [[M-11] addFeedFor should check if inverse feed already exists](https://github.com/code-423n4/2022-07-juicebox-findings/issues/79)\n_Submitted by 0x52, also found by DimitarDimitrov_\n\nPotentially inconsistent currency conversions.\n\n### Proof of Concept\n\n`addFeedFor` requires that a price feed for the \\_currency \\_base doesn't exist when adding a new price feed but doesn't check if the inverse already exists. This means that two different oracles (potentially with different prices) could be used for \\_currency -> \\_base vs. \\_base -> \\_currency. Different prices would lead to inconsistent between conversion ratios depending on the direction of the conversion.\n\n### Recommended Mitigation Steps\n\nChange L115 to:\n`if (feedFor\\[\\_currency]\\[\\_base] != IJBPriceFeed(address(0)) || feedFor\\[\\_base]\\[\\_currency] != IJBPriceFeed(address(0))) revert PRICE_FEED_ALREADY_EXISTS()`\n\n**[mejango (Juicebox) confirmed](https://github.com/code-423n4/2022-07-juicebox-findings/issues/79)** \n\n**mejango (Juicebox) resolved:**\n> PR with fix: [PR #1](https://github.com/jbx-protocol/juice-contracts-v3/pull/1)\n\n**berndartmueller (warden) reviewed mitigation:**\n> An additional check has been added to prevent adding a price feed for the inverse pair.\n\n***\n\n## [[M-12] changeTokenOf makes it impossible for holders of oldToken to redeem the overflowed assets.](https://github.com/code-423n4/2022-07-juicebox-findings/issues/83)\n_Submitted by cccz_\n\nWhen the owner calls the changeTokenOf function of the JBController contract, the token corresponding to the current project will be changed, which will make the oldToken holder unable to redeem the overflowing assets.\n\n### Proof of Concept\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena//blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L588-L606>\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena//blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBTokenStore.sol#L236-L269>\n\n### Recommended Mitigation Steps\n\nConsider adding a delay to `changeTokenOf`, or adding a function to convert `oldToken` to `newToken`.\n\n**[mejango (Juicebox) confirmed](https://github.com/code-423n4/2022-07-juicebox-findings/issues/83)**\n\n**mejango (Juicebox) resolved:**\n> PR with fix: [PR #1](https://github.com/jbx-protocol/juice-contracts-v3/pull/1)\n\n**berndartmueller (warden) reviewed mitigation:**\n> Once a token is set for a project, it can not be changed anymore.\n\n***\n\n## [[M-13] JBToken: mint function could mint arbitrary amount of tokens](https://github.com/code-423n4/2022-07-juicebox-findings/issues/84)\n_Submitted by cccz_\n\nThe owner of the JBToken contract can mint arbitrary amount of tokens.\n\nIn general, the owner of the JBToken contract is the JBTokenStore contract, and the minting of the tokens is controlled by the JBController contract, but when the changeTokenOf function of the JBController contract is called, the owner will be transferred to any address, which can mint arbitrary amount of tokens.\n\n      function mint(\n        uint256 _projectId,\n        address _account,\n        uint256 _amount\n      ) external override onlyOwner {\n        _projectId; // Prevents unused var compiler and natspec complaints.\n\n        return _mint(_account, _amount);\n      }\n\n### Proof of Concept\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena//blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBToken.sol#L106-L114>\n\n### Recommended Mitigation Steps\n\nConsider setting minter as the JBTokenStore contract and adding the onlyminter modifier to the mint function.\n\n**[mejango (Juicebox) acknowledged](https://github.com/code-423n4/2022-07-juicebox-findings/issues/84)** \n\n\n\n***\n\n## [[M-14] More outstanding reserved tokens are distributed than anticipated leading to less redeemable assets and therefore loss of user funds](https://github.com/code-423n4/2022-07-juicebox-findings/issues/285)\n_Submitted by berndartmueller_\n\nThe `JBController.distributeReservedTokensOf` function is used to distribute all outstanding reserved tokens for a project. Internally, the `JBController._distributeReservedTokensOf` function calculates the distributable amount of tokens `tokenCount` with the function `JBController._reservedTokenAmountFrom`.\n\nHowever, the current implementation of `JBController._reservedTokenAmountFrom` calculates the amount of reserved tokens currently tracked in a way that leads to inaccuracy and to more tokens distributed than anticipated.\n\n### Impact\n\nMore tokens than publicly defined via the funding cycle `reservedRate` are distributed (minted) to the splits and the owner increasing the total supply and therefore reducing the amount of terminal assets redeemable by a user. The increased supply takes effect in `JBSingleTokenPaymentTerminStore.recordRedemptionFor` on [L784](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L784). The higher the token supply, the less terminal assets redeemable.\n\n### Proof of Concept\n\n[JBController.\\_reservedTokenAmountFrom](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L1086-L1090)\n\n```solidity\nfunction _reservedTokenAmountFrom(\n    int256 _processedTokenTracker,\n    uint256 _reservedRate,\n    uint256 _totalEligibleTokens\n  ) internal pure returns (uint256) {\n    // Get a reference to the amount of tokens that are unprocessed.\n    uint256 _unprocessedTokenBalanceOf = _processedTokenTracker >= 0\n      ? _totalEligibleTokens - uint256(_processedTokenTracker)\n      : _totalEligibleTokens + uint256(-_processedTokenTracker);\n\n    // If there are no unprocessed tokens, return.\n    if (_unprocessedTokenBalanceOf == 0) return 0;\n\n    // If all tokens are reserved, return the full unprocessed amount.\n    if (_reservedRate == JBConstants.MAX_RESERVED_RATE) return _unprocessedTokenBalanceOf;\n\n    return\n      PRBMath.mulDiv(\n        _unprocessedTokenBalanceOf,\n        JBConstants.MAX_RESERVED_RATE,\n        JBConstants.MAX_RESERVED_RATE - _reservedRate\n      ) - _unprocessedTokenBalanceOf;\n  }\n```\n\n**Example:**\n\nGiven the following (don't mind the floating point arithmetic, this is only for simplicity. The issues still applies with integer arithmetic and higher decimal precision):\n\n*   `processedTokenTracker` - `-1000`\n*   `reservedRate` - 10 (10%)\n*   `totalEligibleTokens` - 0\n*   `MAX_RESERVED_RATE` - 100\n\n$unprocessedTokenBalanceOf = 0 + (--1000)$\\\n$unprocessedTokenBalanceOf = 1000$\n\n$reservedTokenAmount = {{unprocessedTokenBalanceOf \\ast MAX_RESERVED_RATE} \\over {MAX_RESERVED_RATE - reservedRate}} - unprocessedTokenBalanceOf$\\\n$reservedTokenAmount = {{1000 \\ast 100} \\over {100 - 10}} - 1000$\\\n$reservedTokenAmount = 1111.111 - 1000$\\\n$reservedTokenAmount = 111,111$\n\nThe calculated and wrong amount is `~111`, instead it should be `100` (10% of 1000). The issue comes from dividing by `JBConstants.MAX_RESERVED_RATE - _reservedRate`.\n\n**Now the correct way:**\n\n$reservedTokenAmount = {{unprocessedTokenBalanceOf \\ast reservedRate} \\over MAX_RESERVED_RATE}$\\\n$reservedTokenAmount = {{1000 \\ast 10} \\over 100}$\\\n$reservedTokenAmount = 100$\n\n### Recommended Mitigation Steps\n\nFix the outstanding reserve token calculation by implementing the calculation as following:\n\n```solidity\nfunction _reservedTokenAmountFrom(\n    int256 _processedTokenTracker,\n    uint256 _reservedRate,\n    uint256 _totalEligibleTokens\n) internal pure returns (uint256) {\n  // Get a reference to the amount of tokens that are unprocessed.\n  uint256 _unprocessedTokenBalanceOf = _processedTokenTracker >= 0\n    ? _totalEligibleTokens - uint256(_processedTokenTracker)\n    : _totalEligibleTokens + uint256(-_processedTokenTracker);\n\n  // If there are no unprocessed tokens, return.\n  if (_unprocessedTokenBalanceOf == 0) return 0;\n\n  return\n    PRBMath.mulDiv(\n      _unprocessedTokenBalanceOf,\n      _reservedRate,\n      JBConstants.MAX_RESERVED_RATE\n    );\n}\n```\n\n**[mejango (Juicebox) disputed and commented](https://github.com/code-423n4/2022-07-juicebox-findings/issues/285#issuecomment-1179405474):**\n > The only case where the tracker can be -1000 but the totalEligibleTokens is 0 is if reserved rate is 100%. https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L664\n> <img width=\"911\" alt=\"image\" src=\"https://user-images.githubusercontent.com/77952627/178077733-af364733-bcfb-47b9-b673-80bcad0efb2e.png\">\n> \n > Furthermore, reserved rate changes per fc is noted in the protocol's known risks exposed by design:https://info.juicebox.money/dev/learn/risks#undistributed-reserved-rate-risk.\n\n**[jack-the-pug (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-07-juicebox-findings/issues/285#issuecomment-1207328114):**\n > I find this issue to be a valid Medium issue as it introduced an unexpected behavior that can cause a leak of value in certain circumstances.\n\n\n\n***\n\n## [[M-15] Locked splits can be updated](https://github.com/code-423n4/2022-07-juicebox-findings/issues/278)\n_Submitted by berndartmueller_\n\nThe check if the newly provided project splits contain the currently locked splits does not check the `JBSplit` struct properties `preferClaimed` and `preferAddToBalance`.\n\nAccording to the docs in `JBSplit.sol`, *\"...if the split should be unchangeable until the specified time, with the exception of extending the locked period.\"*, locked sets are unchangeable.\n\nHowever, locked sets with either `preferClaimed` or `preferAddToBalance` set to true can have their bool values overwritten by supplying the same split just with different bool values.\n\n### Proof of Concept\n\n[JBSplitsStore.sol#L213-L220](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L213-L220)\n\nThe check for sameness does not check the equality of the struct properties `preferClaimed` and `preferAddToBalance`.\n\n*Please see warden's [original report](https://github.com/code-423n4/2022-07-juicebox-findings/issues/278) for full PoC and Mitigation details.*\n\n### Recommended Mitigation Steps\n\nAdd two additional sameness checks for `preferClaimed` and `preferAddToBalance`:\n\n**[mejango (Juicebox) confirmed](https://github.com/code-423n4/2022-07-juicebox-findings/issues/278)** \n\n**mejango (Juicebox) resolved:**\n> PR with fix: [PR #1](https://github.com/jbx-protocol/juice-contracts-v3/pull/1)\n\n**berndartmueller (warden) reviewed mitigation:**\n> Two additional sameness checks for the split properties `preferClaimed` and `preferAddToBalance` have been added.\n\n***\n\n\n\n# Low Risk and Non-Critical Issues\n\nFor this contest, 60 reports were submitted by wardens detailing low risk and non-critical issues. The [report highlighted below](https://github.com/code-423n4/2022-07-juicebox-findings/issues/299) by **IllIllI** received the top score from the judge.\n\n*The following wardens also submitted reports: [Lambda](https://github.com/code-423n4/2022-07-juicebox-findings/issues/21), [&#95;141345&#95;](https://github.com/code-423n4/2022-07-juicebox-findings/issues/205), [zzzitron](https://github.com/code-423n4/2022-07-juicebox-findings/issues/217), [berndartmueller](https://github.com/code-423n4/2022-07-juicebox-findings/issues/274), [Meera](https://github.com/code-423n4/2022-07-juicebox-findings/issues/286), [GimelSec](https://github.com/code-423n4/2022-07-juicebox-findings/issues/337), [Picodes](https://github.com/code-423n4/2022-07-juicebox-findings/issues/186), [horsefacts](https://github.com/code-423n4/2022-07-juicebox-findings/issues/244), [0xNazgul](https://github.com/code-423n4/2022-07-juicebox-findings/issues/123), [0x1f8b](https://github.com/code-423n4/2022-07-juicebox-findings/issues/43), [simon135](https://github.com/code-423n4/2022-07-juicebox-findings/issues/228), [cccz](https://github.com/code-423n4/2022-07-juicebox-findings/issues/47), [sahar](https://github.com/code-423n4/2022-07-juicebox-findings/issues/222), [robee](https://github.com/code-423n4/2022-07-juicebox-findings/issues/12), [jonatascm](https://github.com/code-423n4/2022-07-juicebox-findings/issues/143), [joestakey](https://github.com/code-423n4/2022-07-juicebox-findings/issues/358), [hubble](https://github.com/code-423n4/2022-07-juicebox-findings/issues/368), [Funen](https://github.com/code-423n4/2022-07-juicebox-findings/issues/268), [codexploder](https://github.com/code-423n4/2022-07-juicebox-findings/issues/125), [0xDjango](https://github.com/code-423n4/2022-07-juicebox-findings/issues/265), [Sm4rty](https://github.com/code-423n4/2022-07-juicebox-findings/issues/215), [Hawkeye](https://github.com/code-423n4/2022-07-juicebox-findings/issues/365), [delfin454000](https://github.com/code-423n4/2022-07-juicebox-findings/issues/197), [Ch&#95;301](https://github.com/code-423n4/2022-07-juicebox-findings/issues/261), [asutorufos](https://github.com/code-423n4/2022-07-juicebox-findings/issues/327), [hake](https://github.com/code-423n4/2022-07-juicebox-findings/issues/236), [Waze](https://github.com/code-423n4/2022-07-juicebox-findings/issues/191), [TomJ](https://github.com/code-423n4/2022-07-juicebox-findings/issues/351), [TerrierLover](https://github.com/code-423n4/2022-07-juicebox-findings/issues/325), [svskaushik](https://github.com/code-423n4/2022-07-juicebox-findings/issues/151), [samruna](https://github.com/code-423n4/2022-07-juicebox-findings/issues/60), [sach1r0](https://github.com/code-423n4/2022-07-juicebox-findings/issues/168), [Rohan16](https://github.com/code-423n4/2022-07-juicebox-findings/issues/254), [ReyAdmirado](https://github.com/code-423n4/2022-07-juicebox-findings/issues/182), [rbserver](https://github.com/code-423n4/2022-07-juicebox-findings/issues/183), [pashov](https://github.com/code-423n4/2022-07-juicebox-findings/issues/263), [oyc&#95;109](https://github.com/code-423n4/2022-07-juicebox-findings/issues/5), [MiloTruck](https://github.com/code-423n4/2022-07-juicebox-findings/issues/189), [m&#95;Rassska](https://github.com/code-423n4/2022-07-juicebox-findings/issues/94), [Kaiziron](https://github.com/code-423n4/2022-07-juicebox-findings/issues/344), [JC](https://github.com/code-423n4/2022-07-juicebox-findings/issues/366), [durianSausage](https://github.com/code-423n4/2022-07-juicebox-findings/issues/72), [defsec](https://github.com/code-423n4/2022-07-juicebox-findings/issues/357), [Chom](https://github.com/code-423n4/2022-07-juicebox-findings/issues/322), [Chandr](https://github.com/code-423n4/2022-07-juicebox-findings/issues/76), [Bnke0x0](https://github.com/code-423n4/2022-07-juicebox-findings/issues/112), [aysha](https://github.com/code-423n4/2022-07-juicebox-findings/issues/355), [0xNineDec](https://github.com/code-423n4/2022-07-juicebox-findings/issues/139), [0xf15ers](https://github.com/code-423n4/2022-07-juicebox-findings/issues/284), [0xdanial](https://github.com/code-423n4/2022-07-juicebox-findings/issues/290), [0x29A](https://github.com/code-423n4/2022-07-juicebox-findings/issues/293), [0v3rf10w](https://github.com/code-423n4/2022-07-juicebox-findings/issues/320), [&#95;Adam](https://github.com/code-423n4/2022-07-juicebox-findings/issues/154), [rajatbeladiya](https://github.com/code-423n4/2022-07-juicebox-findings/issues/208), [Noah3o6](https://github.com/code-423n4/2022-07-juicebox-findings/issues/115), [jayfromthe13th](https://github.com/code-423n4/2022-07-juicebox-findings/issues/347), [fatherOfBlocks](https://github.com/code-423n4/2022-07-juicebox-findings/issues/62), [djxploit](https://github.com/code-423n4/2022-07-juicebox-findings/issues/108), and [brgltd](https://github.com/code-423n4/2022-07-juicebox-findings/issues/136).*\n\n## Low Risk Issues\n\n|   | Issue                                                               | Instances |\n| - | :------------------------------------------------------------------ | :-------: |\n| L-01 | Weight of one being used as zero not documented                     |     1     |\n| L-02 | Calls may run out of gas until arrays are reduced in size           |     2     |\n| L-03 | Dust amounts not compensated, even if not using price oracle        |     1     |\n| L-04 | Splits can't be locked once the timestamp passes `type(uint48).max` |     1     |\n| L-05 | Unsafe use of `transfer()`/`transferFrom()` with `IERC20`           |     2     |\n\nTotal: 7 instances over 5 issues\n\n## [L-01] Weight of one being used as zero not documented\n\nThe comments and code below say that a weight of one is being used as a weight of zero. If a project is mature, or eventually becomes mature, a weight of one may in fact be a useful weighting, and the project owners will become very confused when they are unable to receive funds with this weighting.\n\n*There is 1 instance of this issue:*\n\n```solidity\nFile: contracts/JBFundingCycleStore.sol   #1\n\n467        // A weight of 1 is treated as a weight of 0.\n468        // This is to allow a weight of 0 (default) to represent inheriting the discounted weight of the previous funding cycle.\n469        _weight = _weight > 0\n470          ? (_weight == 1 ? 0 : _weight)\n471:         : _deriveWeightFrom(_baseFundingCycle, _start);\n```\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L467-L471>\n\n## [L-02] Calls may run out of gas until arrays are reduced in size\n\nThe examples below are of functions that may revert due to the size of the data they're processing, but no funds are at risk because the arrays can be changed.\n\n*There are 2 instances of this issue. (For in-depth details on this and all further gas optimizations with multiple instances, see the warden's [full report](https://github.com/code-423n4/2022-07-juicebox-findings/issues/299).)*\n\n\n## [L-03] Dust amounts not compensated, even if not using price oracle\n\nIf there's a fixed weighting between what the user provides, and what is minted for them, there should be code that tracks partial token amounts, so that later payments are compensated for their prior partial amounts.\n\n*There is 1 instance of this issue:*\n\n```solidity\nFile: contracts/JBSingleTokenPaymentTerminalStore.sol   #1\n\n385      uint256 _weightRatio = _amount.currency == _baseWeightCurrency\n386        ? 10**_decimals\n387        : prices.priceFor(_amount.currency, _baseWeightCurrency, _decimals);\n388  \n389      // Find the number of tokens to mint, as a fixed point number with as many decimals as `weight` has.\n390:     tokenCount = PRBMath.mulDiv(_amount.value, _weight, _weightRatio);\n```\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L385-L390>\n\n## [L-04] Splits can't be locked once the timestamp passes `type(uint48).max`\n\nThis behavior isn't documented anywhere, and a project will be confused by this behavior when that time comes (the original developers will be unable to explain it because they'll be dead).\n\n*There is 1 instance of this issue:*\n\n```solidity\nFile: contracts/JBSplitsStore.sol   #1\n\n261:         if (_splits[_i].lockedUntil > type(uint48).max) revert INVALID_LOCKED_UNTIL();\n```\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L261>\n\n## [L-05] Unsafe use of `transfer()`/`transferFrom()` with `IERC20`\n\nSome tokens do not implement the ERC20 standard properly but are still accepted by most code that accepts ERC20 tokens.  For example Tether (USDT)'s `transfer()` and `transferFrom()` functions on L1 do not return booleans as the specification requires, and instead have no return value. When these sorts of tokens are cast to `IERC20`, their [function signatures](https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca) do not match and therefore the calls made, revert (see [this](https://gist.github.com/IllIllI000/2b00a32e8f0559e8f386ea4f1800abc5) link for a test case). Use OpenZeppelin’s `SafeERC20`'s `safeTransfer()`/`safeTransferFrom()` instead.\n\n*There are 2 instances of this issue.*\n\n## Non-Critical Issues\n\n|    | Issue                                                                                       | Instances |\n| -- | :------------------------------------------------------------------------------------------ | :-------: |\n| N-01  | Confusing variable names                                                                    |     1     |\n| N-02  | Return values of `approve()` not checked                                                    |     1     |\n| N-03  | Adding a `return` statement when the function defines a named return variable, is redundant |     4     |\n| N-04  | Non-assembly method available                                                               |     1     |\n| N-05  | `constant`s should be defined rather than using magic numbers                               |     37    |\n| N-06  | Use a more recent version of solidity                                                       |     1     |\n| N-07  | Use a more recent version of solidity                                                       |     3     |\n| N-08  | Use scientific notation (e.g. `1e18`) rather than exponentiation (e.g. `10**18`)            |     1     |\n| N-09  | Constant redefined elsewhere                                                                |     11    |\n| N-10 | Inconsistent spacing in comments                                                            |     1     |\n| N-11 | Lines are too long                                                                          |     49    |\n| N-12 | Typos                                                                                       |     17    |\n| N-13 | File is missing NatSpec                                                                     |     29    |\n| N-14 | NatSpec is incomplete                                                                       |     5     |\n| N-15 | Event is missing `indexed` fields                                                           |     34    |\n| N-16 | Not using the named return variables anywhere in the function is confusing                  |     6     |\n\nTotal: 201 instances over 16 issues\n\n## [N-01] Confusing variable names\n\nIt was well into my review before I realized that 'configuration' means the timestamp at which the configuration is set, not the actual configuration details. It would be helpful to people reading the code to name it something like `configTimestamp` in all places. Below is one example of many.\n\n*There is 1 instance of this issue:*\n\n```solidity\nFile: contracts/JBFundingCycleStore.sol   #1\n\n332:     uint256 _configuration = block.timestamp;\n```\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L332>\n\n## [N-02] Return values of `approve()` not checked\n\nNot all `IERC20` implementations `revert()` when there's a failure in `approve()`. The function signature has a `boolean` return value and they indicate errors that way instead. By not checking the return value, operations that should have marked as failed, may potentially go through without actually approving anything.\n\n*There is 1 instance of this issue:*\n\n```solidity\nFile: contracts/JBERC20PaymentTerminal.sol   #1\n\n99:       IERC20(token).approve(_to, _amount);\n```\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/tree/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBERC20PaymentTerminal.sol#L99>\n\n## [N-03] Adding a `return` statement when the function defines a named return variable, is redundant\n\n*There are 4 instances of this issue.*\n\n## [N-04] Non-assembly method available\n\n`assembly{ id := chainid() }` => `uint256 id = block.chainid`, `assembly { size := extcodesize() }` => `uint256 size = address().code.length`\n\n*There is 1 instance of this issue:*\n\n```solidity\nFile: contracts/JBFundingCycleStore.sol   #1\n\n320:          _size := extcodesize(_ballot) // No contract at the address ?\n```\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/tree/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L320>\n\n## [N-05] `constant`s should be defined rather than using magic numbers\n\nEven [assembly](https://github.com/code-423n4/2022-05-opensea-seaport/blob/9d7ce4d08bf3c3010304a0476a785c70c0e90ae7/contracts/lib/TokenTransferrer.sol#L35-L39) can benefit from using readable constants instead of hex/numeric literals.\n\n*There are 37 instances of this issue.*\n\n## [N-06] Use a more recent version of solidity\n\nUse a solidity version of at least 0.8.12 to get `string.concat()` to be used instead of `abi.encodePacked(<str>,<str>)`.\n\n*There is 1 instance of this issue:*\n\n```solidity\nFile: contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol   #1\n\n2:    pragma solidity 0.8.6;\n```\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/tree/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L2>\n\n## [N-07] Use a more recent version of solidity\n\nUse a solidity version of at least 0.8.13 to get the ability to use `using for` with a list of free functions.\n\n*There are 3 instances of this issue.*\n\n## [N-08] Use scientific notation (e.g. `1e18`) rather than exponentiation (e.g. `10**18`)\n\n*There is 1 instance of this issue:*\n\n```solidity\nFile: contracts/JBSingleTokenPaymentTerminalStore.sol   #1\n\n868:        : PRBMath.mulDiv(_ethOverflow, 10**18, prices.priceFor(JBCurrencies.ETH, _currency, 18));\n```\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/tree/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L868>\n\n## [N-09] Constant redefined elsewhere\n\nConsider defining in only one contract so that values cannot become out of sync when only one location is updated. A [cheap way](https://medium.com/coinmonks/gas-cost-of-solidity-library-functions-dbe0cedd4678) to store constants in a single location is to create an `internal constant` in a `library`. If the variable is a local cache of another contract's value, consider making the cache variable internal or private, which will require external users to query the contract with the source of truth, so that callers don't get out of sync.\n\n*There are 11 instances of this issue.*\n\n## [N-10] Inconsistent spacing in comments\n\nSome lines use `// x` and some use `//x`. The instances below point out the usages that don't follow the majority, within each file.\n\n*There is 1 instance of this issue:*\n\n```solidity\nFile: contracts/JBController.sol   #1\n\n912:      //Transfer between all splits.\n```\n\n<https://github.com/jbx-protocol/juice-contracts-v2-code4rena/tree/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L912>\n\n## [N-11] Lines are too long\n\nUsually lines in source code are limited to [80](https://softwareengineering.stackexchange.com/questions/148677/why-is-80-characters-the-standard-limit-for-code-width) characters. Today's screens are much larger so it's reasonable to stretch this in some cases. Since the files will most likely reside in GitHub, and GitHub starts using a scroll bar in all cases when the length is over [164](https://github.com/aizatto/character-length) characters, the lines below should be split when they reach that length.\n\n*There are 49 instances of this issue.*\n\n## [N-12] Typos\n\n*There are 17 instances of this issue.*\n\n## [N-13] File is missing NatSpec\n\n*There are 29 instances of this issue.*\n\n## [N-14] NatSpec is incomplete\n\n*There are 5 instances of this issue.*\n\n## [N-15] Event is missing `indexed` fields\n\nIndex event fields make the field more quickly accessible to off-chain tools that parse events. However, note that each index field costs extra gas during emission, so it's not necessarily best to index the maximum allowed per event (threefields). Each `event` should use three `indexed` fields if there are three or more fields, and gas usage is not particularly of concern for the events in question.\n\n*There are 34 instances of this issue.*\n\n## [N-16] Not using the named return variables anywhere in the function is confusing\n\nConsider changing the variable to be an unnamed one.\n\n*There are 6 instances of this issue.*\n\n***\n\n# Gas Optimizations\n\nFor this contest, 74 reports were submitted by wardens detailing gas optimizations. The [report highlighted below](https://github.com/code-423n4/2022-07-juicebox-findings/issues/161) by **0xA5DF** received the top score from the judge.\n\n*The following wardens also submitted reports: [IllIllI](https://github.com/code-423n4/2022-07-juicebox-findings/issues/295), [horsefacts](https://github.com/code-423n4/2022-07-juicebox-findings/issues/245), [joestakey](https://github.com/code-423n4/2022-07-juicebox-findings/issues/256), [fatherOfBlocks](https://github.com/code-423n4/2022-07-juicebox-findings/issues/63), [defsec](https://github.com/code-423n4/2022-07-juicebox-findings/issues/349), [0xKitsune](https://github.com/code-423n4/2022-07-juicebox-findings/issues/69), [0x1f8b](https://github.com/code-423n4/2022-07-juicebox-findings/issues/36), [TomJ](https://github.com/code-423n4/2022-07-juicebox-findings/issues/323), [Saintcode&#95;](https://github.com/code-423n4/2022-07-juicebox-findings/issues/119), [RedOneN](https://github.com/code-423n4/2022-07-juicebox-findings/issues/163), [Meera](https://github.com/code-423n4/2022-07-juicebox-findings/issues/301), [Limbooo](https://github.com/code-423n4/2022-07-juicebox-findings/issues/367), [Lambda](https://github.com/code-423n4/2022-07-juicebox-findings/issues/20), [jonatascm](https://github.com/code-423n4/2022-07-juicebox-findings/issues/142), [c3phas](https://github.com/code-423n4/2022-07-juicebox-findings/issues/272), [UnusualTurtle](https://github.com/code-423n4/2022-07-juicebox-findings/issues/343), [Sm4rty](https://github.com/code-423n4/2022-07-juicebox-findings/issues/214), [simon135](https://github.com/code-423n4/2022-07-juicebox-findings/issues/328), [sashik&#95;eth](https://github.com/code-423n4/2022-07-juicebox-findings/issues/338), [sach1r0](https://github.com/code-423n4/2022-07-juicebox-findings/issues/167), [robee](https://github.com/code-423n4/2022-07-juicebox-findings/issues/11), [ReyAdmirado](https://github.com/code-423n4/2022-07-juicebox-findings/issues/181), [rbserver](https://github.com/code-423n4/2022-07-juicebox-findings/issues/211), [MiloTruck](https://github.com/code-423n4/2022-07-juicebox-findings/issues/188), [m_Rassska](https://github.com/code-423n4/2022-07-juicebox-findings/issues/93), [JohnSmith](https://github.com/code-423n4/2022-07-juicebox-findings/issues/121), [durianSausage](https://github.com/code-423n4/2022-07-juicebox-findings/issues/71), [cRat1st0s](https://github.com/code-423n4/2022-07-juicebox-findings/issues/162), [brgltd](https://github.com/code-423n4/2022-07-juicebox-findings/issues/135), [Bnke0x0](https://github.com/code-423n4/2022-07-juicebox-findings/issues/56), [ajtra](https://github.com/code-423n4/2022-07-juicebox-findings/issues/255), [0xf15ers](https://github.com/code-423n4/2022-07-juicebox-findings/issues/283), [&#95;141345&#95;](https://github.com/code-423n4/2022-07-juicebox-findings/issues/206), [Waze](https://github.com/code-423n4/2022-07-juicebox-findings/issues/173), [Tutturu](https://github.com/code-423n4/2022-07-juicebox-findings/issues/233), [Tomio](https://github.com/code-423n4/2022-07-juicebox-findings/issues/140), [rfa](https://github.com/code-423n4/2022-07-juicebox-findings/issues/164), [oyc&#95;109](https://github.com/code-423n4/2022-07-juicebox-findings/issues/4), [Noah3o6](https://github.com/code-423n4/2022-07-juicebox-findings/issues/114), [Metatron](https://github.com/code-423n4/2022-07-juicebox-findings/issues/287), [Kaiziron](https://github.com/code-423n4/2022-07-juicebox-findings/issues/172), [kaden](https://github.com/code-423n4/2022-07-juicebox-findings/issues/141), [JC](https://github.com/code-423n4/2022-07-juicebox-findings/issues/364), [jayfromthe13th](https://github.com/code-423n4/2022-07-juicebox-findings/issues/340), [ignacio](https://github.com/code-423n4/2022-07-juicebox-findings/issues/75), [djxploit](https://github.com/code-423n4/2022-07-juicebox-findings/issues/107), [delfin454000](https://github.com/code-423n4/2022-07-juicebox-findings/issues/192), [Ch&#95;301](https://github.com/code-423n4/2022-07-juicebox-findings/issues/262), [Aymen0909](https://github.com/code-423n4/2022-07-juicebox-findings/issues/247), [0xNazgul](https://github.com/code-423n4/2022-07-juicebox-findings/issues/122), [0v3rf10w](https://github.com/code-423n4/2022-07-juicebox-findings/issues/319), [&#95;Adam](https://github.com/code-423n4/2022-07-juicebox-findings/issues/153), [Randyyy](https://github.com/code-423n4/2022-07-juicebox-findings/issues/342), [mrpathfindr](https://github.com/code-423n4/2022-07-juicebox-findings/issues/77), [hake](https://github.com/code-423n4/2022-07-juicebox-findings/issues/237), [Funen](https://github.com/code-423n4/2022-07-juicebox-findings/issues/269), [ElKu](https://github.com/code-423n4/2022-07-juicebox-findings/issues/70), [asutorufos](https://github.com/code-423n4/2022-07-juicebox-findings/issues/273), [apostle0x01](https://github.com/code-423n4/2022-07-juicebox-findings/issues/3), [0xdanial](https://github.com/code-423n4/2022-07-juicebox-findings/issues/288), [0x29A](https://github.com/code-423n4/2022-07-juicebox-findings/issues/300), [Rohan16](https://github.com/code-423n4/2022-07-juicebox-findings/issues/267), [rajatbeladiya](https://github.com/code-423n4/2022-07-juicebox-findings/issues/209), [Picodes](https://github.com/code-423n4/2022-07-juicebox-findings/issues/185), [mektigboy](https://github.com/code-423n4/2022-07-juicebox-findings/issues/352), [kebabsec](https://github.com/code-423n4/2022-07-juicebox-findings/issues/134), [Hawkeye](https://github.com/code-423n4/2022-07-juicebox-findings/issues/359), [exd0tpy](https://github.com/code-423n4/2022-07-juicebox-findings/issues/116), [codexploder](https://github.com/code-423n4/2022-07-juicebox-findings/issues/126), [Chom](https://github.com/code-423n4/2022-07-juicebox-findings/issues/324), [Cheeezzyyyy](https://github.com/code-423n4/2022-07-juicebox-findings/issues/86), [0xDjango](https://github.com/code-423n4/2022-07-juicebox-findings/issues/266), and [0x09GTO](https://github.com/code-423n4/2022-07-juicebox-findings/issues/110).*\n\n## [G-01] Run checks first\n\nRunning checks before doing other operations can save gas in case the checks don't pass (since less operations were done before the revert).\n\nLines: [JBDirectory.sol#L270-L278](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBDirectory.sol#L270-L278)\n\nGas saved: Not measured by tests, can be a few dozen of thousands in case of revert (tested with a contract mocking the same behavior and 3 terminals)\n\n```diff\n \n-    // Delete the stored terminals for the project.\n-    _terminalsOf[_projectId] = _terminals;\n-\n     // Make sure duplicates were not added.\n+    // @audit run checks before assigning, to save gas in case of revert\n     if (_terminals.length > 1)\n       for (uint256 _i; _i < _terminals.length; _i++)\n         for (uint256 _j = _i + 1; _j < _terminals.length; _j++)\n           if (_terminals[_i] == _terminals[_j]) revert DUPLICATE_TERMINALS();\n \n+    // Delete the stored terminals for the project.\n+    _terminalsOf[_projectId] = _terminals;\n+\n     emit SetTerminals(_projectId, _terminals, msg.sender);\n\n```\n\n## [G-02] Store elements that are used multiple times \n\nWhen the same array/mapping element is accessed more than once at the same block (without being modified) - it's cheaper to store the element as a var and access that var every time.\n\nGas saved: up to 2K units\n\n*Please see warden's [original report](https://github.com/code-423n4/2022-07-juicebox-findings/issues/161) for full details.*\n\n## [G-03] Make loop increment unchecked \n\nOverflowing loop index is virtually impossible, therefore it's cheaper to make the increment unchecked. It's also a bit cheaper to use ++i instead of i++.\n\nGas saved: up to 300 units\n\nLines:\n\n*   [JBController.sol#L913](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L913)\n*   [JBController.sol#L1014](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L1014)\n*   [JBDirectory.sol#L139](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBDirectory.sol#L139)\n*   [JBDirectory.sol#L167](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBDirectory.sol#L167)\n*   [JBDirectory.sol#L275-L276](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBDirectory.sol#L275-L276)\n*   [JBETHERC20SplitsPayer.sol#L466](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBETHERC20SplitsPayer.sol#L466)\n*   [JBFundingCycleStore.sol#L724](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBFundingCycleStore.sol#L724)\n*   [JBOperatorStore.sol#L85](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBOperatorStore.sol#L85)\n*   [JBOperatorStore.sol#L138](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBOperatorStore.sol#L138)\n*   [JBOperatorStore.sol#L171](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBOperatorStore.sol#L171)\n*   [JBSingleTokenPaymentTerminalStore.sol#L862](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSingleTokenPaymentTerminalStore.sol#L862)\n*   [JBSplitsStore.sol#L204](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L204)\n*   [JBSplitsStore.sol#L211](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L211)\n*   [JBSplitsStore.sol#L229](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L229)\n*   [JBSplitsStore.sol#L304](https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBSplitsStore.sol#L304)\n\n```diff\ndiff --git a/contracts/JBController.sol b/contracts/JBController.sol\nindex 26cd238..475a35a 100644\n--- a/contracts/JBController.sol\n+++ b/contracts/JBController.sol\n@@ -910,7 +910,7 @@ contract JBController is IJBController, IJBMigratable, JBOperatable, ERC165 {\n     JBSplit[] memory _splits = splitsStore.splitsOf(_projectId, _domain, _group);\n \n     //Transfer between all splits.\n-    for (uint256 _i = 0; _i < _splits.length; _i++) {\n+    for (uint256 _i = 0; _i < _splits.length; ) {\n       // Get a reference to the split being iterated on.\n       JBSplit memory _split = _splits[_i];\n \n@@ -964,6 +964,9 @@ contract JBController is IJBController, IJBMigratable, JBOperatable, ERC165 {\n         _tokenCount,\n         msg.sender\n       );\n+      unchecked {\n+        ++_i;\n+      }\n     }\n   }\n \n@@ -1011,7 +1014,7 @@ contract JBController is IJBController, IJBMigratable, JBOperatable, ERC165 {\n     splitsStore.set(_projectId, _fundingCycle.configuration, _groupedSplits);\n \n     // Set distribution limits if there are any.\n-    for (uint256 _i; _i < _fundAccessConstraints.length; _i++) {\n+    for (uint256 _i; _i < _fundAccessConstraints.length; ) {\n       JBFundAccessConstraints memory _constraints = _fundAccessConstraints[_i];\n \n       // If distribution limit value is larger than 232 bits, revert.\n@@ -1051,6 +1054,9 @@ contract JBController is IJBController, IJBMigratable, JBOperatable, ERC165 {\n         _constraints,\n         msg.sender\n       );\n+      unchecked {\n+        ++_i;\n+      }\n     }\n \n     return _fundingCycle.configuration;\ndiff --git a/contracts/JBDirectory.sol b/contracts/JBDirectory.sol\nindex 865c719..442e704 100644\n--- a/contracts/JBDirectory.sol\n+++ b/contracts/JBDirectory.sol\n@@ -137,9 +137,12 @@ contract JBDirectory is IJBDirectory, JBOperatable, Ownable {\n \n     IJBPaymentTerminal[] storage _terminalOf_projectId = _terminalsOf[_projectId];\n     // Return the first terminal which accepts the specified token.\n-    for (uint256 _i; _i < _terminalOf_projectId.length; _i++) {\n+    for (uint256 _i; _i < _terminalOf_projectId.length; ) {\n       IJBPaymentTerminal _terminal = _terminalOf_projectId[_i];\n       if (_terminal.acceptsToken(_token, _projectId)) return _terminal;\n+      unchecked {\n+        ++_i;\n+      }\n     }\n \n     // Not found.\n@@ -165,8 +168,12 @@ contract JBDirectory is IJBDirectory, JBOperatable, Ownable {\n     override\n     returns (bool)\n   {\n-    for (uint256 _i; _i < _terminalsOf[_projectId].length; _i++)\n+    for (uint256 _i; _i < _terminalsOf[_projectId].length; ) {\n       if (_terminalsOf[_projectId][_i] == _terminal) return true;\n+      unchecked {\n+        ++_i;\n+      }\n+    }\n     return false;\n   }\n \n@@ -272,9 +279,17 @@ contract JBDirectory is IJBDirectory, JBOperatable, Ownable {\n     // Make sure duplicates were not added.\n     // @audit run checks before assigning, to save gas in case of revert\n     if (_terminals.length > 1)\n-      for (uint256 _i; _i < _terminals.length; _i++)\n-        for (uint256 _j = _i + 1; _j < _terminals.length; _j++)\n+      for (uint256 _i; _i < _terminals.length; ) {\n+        for (uint256 _j = _i + 1; _j < _terminals.length; ) {\n           if (_terminals[_i] == _terminals[_j]) revert DUPLICATE_TERMINALS();\n+          unchecked {\n+            ++_j;\n+          }\n+        }\n+        unchecked {\n+          ++_i;\n+        }\n+      }\n \n     // Delete the stored terminals for the project.\n     _terminalsOf[_projectId] = _terminals;\ndiff --git a/contracts/JBETHERC20SplitsPayer.sol b/contracts/JBETHERC20SplitsPayer.sol\nindex 97a6517..6c344bd 100644\n--- a/contracts/JBETHERC20SplitsPayer.sol\n+++ b/contracts/JBETHERC20SplitsPayer.sol\n@@ -463,7 +463,7 @@ contract JBETHERC20SplitsPayer is IJBSplitsPayer, JBETHERC20ProjectPayer, Reentr\n     leftoverAmount = _amount;\n \n     // Settle between all splits.\n-    for (uint256 i = 0; i < _splits.length; i++) {\n+    for (uint256 i = 0; i < _splits.length; ) {\n       // Get a reference to the split being iterated on.\n       JBSplit memory _split = _splits[i];\n \n@@ -544,6 +544,9 @@ contract JBETHERC20SplitsPayer is IJBSplitsPayer, JBETHERC20ProjectPayer, Reentr\n       }\n \n       emit DistributeToSplit(_split, _splitAmount, _defaultBeneficiary, msg.sender);\n+      unchecked {\n+        ++i;\n+      }\n     }\n   }\n }\ndiff --git a/contracts/JBFundingCycleStore.sol b/contracts/JBFundingCycleStore.sol\nindex 13fe9e6..79d16c3 100644\n--- a/contracts/JBFundingCycleStore.sol\n+++ b/contracts/JBFundingCycleStore.sol\n@@ -312,8 +312,7 @@ contract JBFundingCycleStore is IJBFundingCycleStore, JBControllerUtility {\n     if (_data.weight > type(uint88).max) revert INVALID_WEIGHT();\n \n     // Ballot should be a valid contract, supporting the correct interface\n-    if(_data.ballot != IJBFundingCycleBallot(address(0))) {\n-\n+    if (_data.ballot != IJBFundingCycleBallot(address(0))) {\n       address _ballot = address(_data.ballot);\n       uint32 _size;\n       assembly {\n@@ -721,7 +722,7 @@ contract JBFundingCycleStore is IJBFundingCycleStore, JBControllerUtility {\n     // Apply the base funding cycle's discount rate for each cycle that has passed.\n     uint256 _discountMultiple = _startDistance / _baseFundingCycle.duration;\n \n-    for (uint256 i = 0; i < _discountMultiple; i++) {\n+    for (uint256 i = 0; i < _discountMultiple; ) {\n       // The number of times to apply the discount rate.\n       // Base the new weight on the specified funding cycle's weight.\n       weight = PRBMath.mulDiv(\n@@ -731,6 +732,9 @@ contract JBFundingCycleStore is IJBFundingCycleStore, JBControllerUtility {\n       );\n       // The calculation doesn't need to continue if the weight is 0.\n       if (weight == 0) break;\n+      unchecked {\n+        ++i;\n+      }\n     }\n   }\n \ndiff --git a/contracts/JBOperatorStore.sol b/contracts/JBOperatorStore.sol\nindex e1e0241..e67f97d 100644\n--- a/contracts/JBOperatorStore.sol\n+++ b/contracts/JBOperatorStore.sol\n@@ -82,13 +82,16 @@ contract JBOperatorStore is IJBOperatorStore {\n     uint256 _domain,\n     uint256[] calldata _permissionIndexes\n   ) external view override returns (bool) {\n-    for (uint256 _i = 0; _i < _permissionIndexes.length; _i++) {\n+    for (uint256 _i = 0; _i < _permissionIndexes.length; ) {\n       uint256 _permissionIndex = _permissionIndexes[_i];\n \n       if (_permissionIndex > 255) revert PERMISSION_INDEX_OUT_OF_BOUNDS();\n \n       if (((permissionsOf[_operator][_account][_domain] >> _permissionIndex) & 1) == 0)\n         return false;\n+      unchecked {\n+        ++_i;\n+      }\n     }\n     return true;\n   }\n@@ -132,7 +135,7 @@ contract JBOperatorStore is IJBOperatorStore {\n     @param _operatorData The data that specify the params for each operator being set.\n   */\n   function setOperators(JBOperatorData[] calldata _operatorData) external override {\n-    for (uint256 _i = 0; _i < _operatorData.length; _i++) {\n+    for (uint256 _i = 0; _i < _operatorData.length; ) {\n       // Pack the indexes into a uint256.\n       uint256 _packed = _packedPermissions(_operatorData[_i].permissionIndexes);\n \n@@ -146,6 +149,9 @@ contract JBOperatorStore is IJBOperatorStore {\n         _operatorData[_i].permissionIndexes,\n         _packed\n       );\n+      unchecked {\n+        ++_i;\n+      }\n     }\n   }\n \n@@ -162,13 +168,16 @@ contract JBOperatorStore is IJBOperatorStore {\n     @return packed The packed value.\n   */\n   function _packedPermissions(uint256[] calldata _indexes) private pure returns (uint256 packed) {\n-    for (uint256 _i = 0; _i < _indexes.length; _i++) {\n+    for (uint256 _i = 0; _i < _indexes.length; ) {\n       uint256 _index = _indexes[_i];\n \n       if (_index > 255) revert PERMISSION_INDEX_OUT_OF_BOUNDS();\n \n       // Turn the bit at the index on.\n       packed |= 1 << _index;\n+      unchecked {\n+        ++_i;\n+      }\n     }\n   }\n }\ndiff --git a/contracts/JBSingleTokenPaymentTerminalStore.sol b/contracts/JBSingleTokenPaymentTerminalStore.sol\nindex 4fc5d46..21be5ff 100644\n--- a/contracts/JBSingleTokenPaymentTerminalStore.sol\n+++ b/contracts/JBSingleTokenPaymentTerminalStore.sol\n@@ -859,8 +859,12 @@ contract JBSingleTokenPaymentTerminalStore is IJBSingleTokenPaymentTerminalStore\n     uint256 _ethOverflow;\n \n     // Add the current ETH overflow for each terminal.\n-    for (uint256 _i = 0; _i < _terminals.length; _i++)\n+    for (uint256 _i = 0; _i < _terminals.length; ) {\n       _ethOverflow = _ethOverflow + _terminals[_i].currentEthOverflowOf(_projectId);\n+      unchecked {\n+        ++_i;\n+      }\n+    }\n \n     // Convert the ETH overflow to the specified currency if needed, maintaining a fixed point number with 18 decimals.\n     uint256 _totalOverflow18Decimal = _currency == JBCurrencies.ETH\ndiff --git a/contracts/JBSplitsStore.sol b/contracts/JBSplitsStore.sol\nindex be0d17b..2c9d371 100644\n--- a/contracts/JBSplitsStore.sol\n+++ b/contracts/JBSplitsStore.sol\n@@ -201,7 +201,7 @@ contract JBSplitsStore is IJBSplitsStore, JBOperatable {\n     JBSplit[] memory _currentSplits = _getStructsFor(_projectId, _domain, _group);\n \n     // Check to see if all locked splits are included.\n-    for (uint256 _i = 0; _i < _currentSplits.length; _i++) {\n+    for (uint256 _i = 0; _i < _currentSplits.length; ) {\n       JBSplit memory _currentSplit_i = _currentSplits[_i];\n       // If not locked, continue.\n       if (block.timestamp >= _currentSplit_i.lockedUntil) continue;\n@@ -209,7 +209,7 @@ contract JBSplitsStore is IJBSplitsStore, JBOperatable {\n       // Keep a reference to whether or not the locked split being iterated on is included.\n       bool _includesLocked = false;\n \n-      for (uint256 _j = 0; _j < _splits.length; _j++) {\n+      for (uint256 _j = 0; _j < _splits.length; ) {\n         // Check for sameness.\n         JBSplit memory _split_j = _splits[_j];\n         if (\n@@ -220,15 +220,22 @@ contract JBSplitsStore is IJBSplitsStore, JBOperatable {\n           // Allow lock extention.\n           _split_j.lockedUntil >= _currentSplit_i.lockedUntil\n         ) _includesLocked = true;\n+        unchecked {\n+          ++_j;\n+        }\n       }\n \n       if (!_includesLocked) revert PREVIOUS_LOCKED_SPLITS_NOT_INCLUDED();\n+\n+      unchecked {\n+        ++_i;\n+      }\n     }\n \n     // Add up all the percents to make sure they cumulative are under 100%.\n     uint256 _percentTotal = 0;\n \n-    for (uint256 _i = 0; _i < _splits.length; _i++) {\n+    for (uint256 _i = 0; _i < _splits.length; ) {\n       JBSplit memory _splits_i = _splits[_i];\n       // The percent should be greater than 0.\n       if (_splits_i.percent == 0) revert INVALID_SPLIT_PERCENT();\n@@ -276,6 +283,9 @@ contract JBSplitsStore is IJBSplitsStore, JBOperatable {\n         delete _packedSplitParts2Of[_projectId][_domain][_group][_i];\n \n       emit SetSplit(_projectId, _domain, _group, _splits_i, msg.sender);\n+      unchecked {\n+        ++_i;\n+      }\n     }\n \n     // Set the new length of the splits.\n@@ -304,7 +314,7 @@ contract JBSplitsStore is IJBSplitsStore, JBOperatable {\n     JBSplit[] memory _splits = new JBSplit[](_splitCount);\n \n     // Loop through each split and unpack the values into structs.\n-    for (uint256 _i = 0; _i < _splitCount; _i++) {\n+    for (uint256 _i = 0; _i < _splitCount; ) {\n       // Get a reference to the fist packed data.\n       uint256 _packedSplitPart1 = _packedSplitParts1Of[_projectId][_domain][_group][_i];\n \n@@ -335,6 +345,9 @@ contract JBSplitsStore is IJBSplitsStore, JBOperatable {\n \n       // Add the split to the value being returned.\n       _splits[_i] = _split;\n+      unchecked {\n+        ++_i;\n+      }\n     }\n \n     return _splits;\n```\n\nGas diff:\n\n```diff\n╭──────────────────────────────────────────────────┬─────────────────┬─────────┬─────────┬─────────┬─────────╮\n │ contracts/JBController.sol:JBController contract ┆                 ┆         ┆         ┆         ┆         │\n ╞══════════════════════════════════════════════════╪═════════════════╪═════════╪═════════╪═════════╪═════════╡\n │ Deployment Cost                                  ┆ Deployment Size ┆         ┆         ┆         ┆         │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ 3979659                                          ┆ 20791           ┆         ┆         ┆         ┆         │\n+│ 3970050                                          ┆ 20743           ┆         ┆         ┆         ┆         │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n │ Function Name                                    ┆ min             ┆ avg     ┆ median  ┆ max     ┆ # calls │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ burnTokensOf                                     ┆ 30462           ┆ 33235   ┆ 30462   ┆ 38783   ┆ 3       │\n+│ burnTokensOf                                     ┆ 30462           ┆ 33211   ┆ 30462   ┆ 38709   ┆ 3       │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n@@ -155,9 +155,9 @@ Test result: ok. 1 passed; 0 failed; finished in 14.33s\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ launchProjectFor                                 ┆ 287838          ┆ 365019  ┆ 363870  ┆ 523212  ┆ 14      │\n+│ launchProjectFor                                 ┆ 287838          ┆ 364965  ┆ 363870  ┆ 522765  ┆ 14      │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ mintTokensOf                                     ┆ 20132           ┆ 55030   ┆ 42967   ┆ 102610  ┆ 13      │\n+│ mintTokensOf                                     ┆ 20058           ┆ 55019   ┆ 42967   ┆ 102610  ┆ 13      │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n@@ -172,21 +172,21 @@ Test result: ok. 1 passed; 0 failed; finished in 14.33s\n ╞════════════════════════════════════════════════╪═════════════════╪═══════╪════════╪═══════╪═════════╡\n │ Deployment Cost                                ┆ Deployment Size ┆       ┆        ┆       ┆         │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ 1247680                                        ┆ 6698            ┆       ┆        ┆       ┆         │\n+│ 1232666                                        ┆ 6623            ┆       ┆        ┆       ┆         │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n │ Function Name                                  ┆ min             ┆ avg   ┆ median ┆ max   ┆ # calls │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ isTerminalOf                                   ┆ 633             ┆ 1508  ┆ 1065   ┆ 5065  ┆ 26      │\n+│ isTerminalOf                                   ┆ 633             ┆ 1497  ┆ 1065   ┆ 5065  ┆ 26      │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ primaryTerminalOf                              ┆ 2295            ┆ 3221  ┆ 2295   ┆ 5853  ┆ 12      │\n+│ primaryTerminalOf                              ┆ 2295            ┆ 3209  ┆ 2295   ┆ 5779  ┆ 12      │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ setTerminalsOf                                 ┆ 54817           ┆ 57189 ┆ 54817  ┆ 78546 ┆ 10      │\n+│ setTerminalsOf                                 ┆ 54817           ┆ 57167 ┆ 54817  ┆ 78324 ┆ 10      │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n │ terminalsOf                                    ┆ 1389            ┆ 1389  ┆ 1389   ┆ 1389  ┆ 2       │\n ╰────────────────────────────────────────────────┴─────────────────┴───────┴────────┴───────┴─────────╯\n@@ -226,7 +226,7 @@ Test result: ok. 1 passed; 0 failed; finished in 14.33s\n ╞════════════════════════════════════════════════════════════════════╪═════════════════╪═════╪════════╪═════╪═════════╡\n │ Deployment Cost                                                    ┆ Deployment Size ┆     ┆        ┆     ┆         │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ 2292746                                                            ┆ 12218           ┆     ┆        ┆     ┆         │\n+│ 2283531                                                            ┆ 12172           ┆     ┆        ┆     ┆         │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n │ Function Name                                                      ┆ min             ┆ avg ┆ median ┆ max ┆ # calls │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n@@ -249,13 +249,13 @@ Test result: ok. 1 passed; 0 failed; finished in 14.33s\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ distributePayoutsOf                                              ┆ 102240          ┆ 128903 ┆ 128903 ┆ 155567 ┆ 2       │\n+│ distributePayoutsOf                                              ┆ 102240          ┆ 128758 ┆ 128758 ┆ 155276 ┆ 2       │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ pay                                                              ┆ 89467           ┆ 105031 ┆ 105031 ┆ 120596 ┆ 2       │\n+│ pay                                                              ┆ 89319           ┆ 104957 ┆ 104957 ┆ 120596 ┆ 2       │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ redeemTokensOf                                                   ┆ 68162           ┆ 87607  ┆ 87607  ┆ 107052 ┆ 2       │\n+│ redeemTokensOf                                                   ┆ 68162           ┆ 87496  ┆ 87496  ┆ 106830 ┆ 2       │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n │ supportsInterface                                                ┆ 503             ┆ 685    ┆ 655    ┆ 853    ┆ 9       │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n@@ -268,7 +268,7 @@ Test result: ok. 1 passed; 0 failed; finished in 14.33s\n ╞════════════════════════════════════════════════════════════════╪═════════════════╪═══════╪════════╪════════╪═════════╡\n │ Deployment Cost                                                ┆ Deployment Size ┆       ┆        ┆        ┆         │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ 1055746                                                        ┆ 5457            ┆       ┆        ┆        ┆         │\n+│ 1048339                                                        ┆ 5420            ┆       ┆        ┆        ┆         │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n │ Function Name                                                  ┆ min             ┆ avg   ┆ median ┆ max    ┆ # calls │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n@@ -330,7 +330,7 @@ Test result: ok. 1 passed; 0 failed; finished in 14.33s\n ╞════════════════════════════════════════════════════════════════════════════════════════════╪═════════════════╪═══════╪════════╪═══════╪═════════╡\n │ Deployment Cost                                                                            ┆ Deployment Size ┆       ┆        ┆       ┆         │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ 2551081                                                                                    ┆ 13119           ┆       ┆        ┆       ┆         │\n+│ 2543674                                                                                    ┆ 13082           ┆       ┆        ┆       ┆         │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n │ Function Name                                                                              ┆ min             ┆ avg   ┆ median ┆ max   ┆ # calls │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n@@ -338,13 +338,13 @@ Test result: ok. 1 passed; 0 failed; finished in 14.33s\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ currentTotalOverflowOf                                                                     ┆ 31426           ┆ 31426 ┆ 31426  ┆ 31426 ┆ 1       │\n+│ currentTotalOverflowOf                                                                     ┆ 31278           ┆ 31278 ┆ 31278  ┆ 31278 ┆ 1       │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ recordRedemptionFor                                                                        ┆ 25847           ┆ 33828 ┆ 25847  ┆ 49791 ┆ 3       │\n+│ recordRedemptionFor                                                                        ┆ 25847           ┆ 33779 ┆ 25847  ┆ 49643 ┆ 3       │\n ╰────────────────────────────────────────────────────────────────────────────────────────────┴─────────────────┴───────┴────────┴───────┴─────────╯\n@@ -353,15 +353,15 @@ Test result: ok. 1 passed; 0 failed; finished in 14.33s\n ╞════════════════════════════════════════════════════╪═════════════════╪══════╪════════╪═══════╪═════════╡\n │ Deployment Cost                                    ┆ Deployment Size ┆      ┆        ┆       ┆         │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ 751811                                             ┆ 4116            ┆      ┆        ┆       ┆         │\n+│ 736791                                             ┆ 4041            ┆      ┆        ┆       ┆         │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n │ Function Name                                      ┆ min             ┆ avg  ┆ median ┆ max   ┆ # calls │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ set                                                ┆ 2998            ┆ 5840 ┆ 2998   ┆ 57007 ┆ 19      │\n+│ set                                                ┆ 2998            ┆ 5836 ┆ 2998   ┆ 56930 ┆ 19      │\n ├╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌┼╌╌╌╌╌╌╌╌╌┤\n-│ splitsOf                                           ┆ 2941            ┆ 4853 ┆ 2941   ┆ 8679  ┆ 3       │\n+│ splitsOf                                           ┆ 2941            ┆ 4830 ┆ 2941   ┆ 8610  ┆ 3       │\n \n\n```\n\n**[drgorillamd (Juicebox) commented](https://github.com/code-423n4/2022-07-juicebox-findings/issues/161#issuecomment-1183203750):**\n > Really nice PoC/gas analysis, thank you.\n\n# Mitigation Review\n\n*Mitigation review by [berndartmueller](https://twitter.com/berndartmueller)*\n\n**Reviewed pull requests:** [PR#1](https://github.com/jbx-protocol/juice-contracts-v3/pull/1/) (`b8e2472ce750ad084440c8db6090143807e79893`), [PR#4](https://github.com/jbx-protocol/juice-contracts-v3/pull/4)\n\n## Mitigation Overview\n\nThe following is a high-level overview of the core changes introduced as the mitigation, arranged per the report findings.\n\n* [H-01] Resolved. Appropriate validations to prevent price staleness, round incompleteness and a negative price is put in place now.\n* [H-02] Resolved. Changing an already set project token is not possible anymore.\n* [M-01] Acknowledged. \n* [M-02] Resolved. `mustStartAtOrAfter` and the start date of an upcoming funding cycle are now validated to fit in `uint56`.\n* [M-03] Resolved. OpenZeppelins&#39; `SafeERC20` library is now used to ensure consistent handling of ERC20 token transfers.\n* [M-04] Acknowledged.\n* [M-05] Acknowledged.\n* [M-06] Resolved. The delta of the token balance before and after a transfer is used instead of the amount stated to handle fee-on-transfer tokens appropriately.\n* [M-07] Acknowledged.\n* [M-08] Acknowledged.\n* [M-09] Acknowledged.\n* [M-10] Acknowledged.\n* [M-11] Resolved. An additional check has been added to prevent adding a price feed for the inverse pair.\n* [M-12] Resolved. Once a token is set for a project, it can not be changed anymore.\n* [M-13] Acknowledged.\n* [M-14] Acknowledged.\n* [M-15] Resolved. Two additional sameness checks for the split properties `preferClaimed` and `preferAddToBalance` have been added.\n\n## Medium Risk Findings (1)\n\n### [M.M-01] Migrating from V2 to V3 will cause issues with funding cycle metadata\n\n**Context:** [libraries/JBFundingCycleMetadataResolver.sol#L150-L157](https://github.com/jbx-protocol/juice-contracts-v3/blob/b8e2472ce750ad084440c8db6090143807e79893/contracts/libraries/JBFundingCycleMetadataResolver.sol#L150-L157) \n\n**Status:** Acknowledged. Juicebox projects have to instantiate new V3 funding cycles if they wish to migrate from V2 to V3.\n\n**Description:** In V3, the funding cycle metadata bitmask changes due to removing the parameter `allowChangeToken` and adding the new parameter `preferClaimedTokenOverride`. However, projects migrating from V2 to V3 with certain funding cycle metadata bits set will experience a possibly different funding cycle configuration than anticipated.\n\nThe following table shows a comparison of the occupied bits of affected funding cycle metadata parameters in V2 and V3:\n\n| Metadata Param             | Bit Previously | Bit Now |\n| -------------------------- | -------------- | ------- |\n| allowChangeToken           | 77             | -       |\n| allowTerminalMigration     | 78             | 77      |\n| allowControllerMigration   | 79             | 78      |\n| holdFees                   | 80             | 79      |\n| preferClaimedTokenOverride | -              | 80      |\n\n```solidity\nfunction packFundingCycleMetadata(JBFundingCycleMetadata memory _metadata)\n    internal\n    pure\n    returns (uint256 packed)\n{\n  [..]\n\n  // allow terminal migration in bit 77.\n  if (_metadata.allowTerminalMigration) packed |= 1 &lt;&lt; 77;\n  // allow controller migration in bit 78.\n  if (_metadata.allowControllerMigration) packed |= 1 &lt;&lt; 78;\n  // hold fees in bit 79.\n  if (_metadata.holdFees) packed |= 1 &lt;&lt; 79;\n  // prefer claimed token override in bit 80.\n  if (_metadata.preferClaimedTokenOverride) packed |= 1 &lt;&lt; 80;\n\n  [..]\n}\n```\n\n#### Recommendation\n\nConsider not changing the existing bits and their representation. Instead, add new metadata parameters to available most significant bits.\n\nFor example, consider storing the newly added `_metadata.metadata` in bits **248-256** (instead of using bits 244-252) and use one of the 4 available bits **244-247** for `_metadata.preferClaimedTokenOverride`.\n\n## Low Risk Findings (1)\n\n### [M.L-01] `defaultBeneficiary` is not used consistently\n\n**Context:** [JBETHERC20ProjectPayer.sol](https://github.com/jbx-protocol/juice-contracts-v3/blob/b8e2472ce750ad084440c8db6090143807e79893/contracts/JBETHERC20ProjectPayer.sol), [JBETHERC20SplitsPayer.sol](https://github.com/jbx-protocol/juice-contracts-v3/blob/b8e2472ce750ad084440c8db6090143807e79893/contracts/JBETHERC20SplitsPayer.sol) \n\n**Status:** Resolved in [PR#5](https://github.com/jbx-protocol/juice-contracts-v3/pull/5)\n\n**Description:** When deploying a new instance of a `JBETHERC20ProjectPayer` or `JBETHERC20SplitsPayer` contract, the deployer can provide a default beneficiary address `defaultBeneficiary`. If the beneficiary is `address(0)`, this default beneficiary address will receive the project&#39;s tokens when the project payer receives payments.\n\nHowever, `defaultBeneficiary` is only used within the `receive()` function. In the `pay(..)` function, the beneficiary, if set to `address(0)`, will immediately default to `tx.origin`.\n\n#### Recommendation\n\nConsider using `defaultBeneficiary` consistently and if `defaultBeneficiary` is set to `address(0)`, only then default to `tx.origin`.\n\n## Non-Critical Findings (1)\n\n### [M.N-01] `msg.sender` address is not checked if it is a feeless address\n\n**Context:** [abstract/JBPayoutRedemptionPaymentTerminal.sol](https://github.dev/jbx-protocol/juice-contracts-v3/blob/b8e2472ce750ad084440c8db6090143807e79893/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol) \n\n**Status:** Acknowledged. Feeless sender for distributions is removed in V3. Comment adjusted in [PR#6](https://github.com/jbx-protocol/juice-contracts-v3/pull/6)\n\n**Description:** According to the comment on [L897](https://github.dev/jbx-protocol/juice-contracts-v3/blob/b8e2472ce750ad084440c8db6090143807e79893/contracts/abstract/JBPayoutRedemptionPaymentTerminal.sol#L897):\n\n&gt; _// If the fee is zero or if the fee is **being used by an address that doesn&#39;t incur fees**, set the discount to 100% for convenience._\n\nIf the caller is an address that doesn&#39;t incur fees, the discount should be set to 100%. However, in the latest version, `msg.sender` is no longer checked if it is considered a feeless address.\n\n[See diff](https://github.com/jbx-protocol/juice-contracts-v3/commit/8152fe45f7942d902a09fb8bff8663ad82e68e1f#diff-8ec76bd6ac0d417026483831ccb26d6b6bd986bf09e0749db9c77c4df7edf286L838)\n\n```diff\n// If the fee is zero or if the fee is being used by an address that doesn&#39;t incur fees, set the discount to 100% for convenience.\n- uint256 _feeDiscount = fee == 0 || isFeelessAddress[msg.sender]\n+ uint256 _feeDiscount = fee == 0\n  ? JBConstants.MAX_FEE_DISCOUNT\n  : _currentFeeDiscount(_projectId);\n```\n\n#### Recommendation\n\nConsider reverting the change and check if `msg.sender` is a feeless address.</div>\n\n***\n\n# Disclosures\n\nC4 is an open organization governed by participants in the community.\n\nC4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.\n\nC4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.\n"
}