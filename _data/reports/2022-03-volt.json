{
  "circa": {
    "title": "Volt Protocol contest",
    "sponsor": "Volt Protocol",
    "slug": "2022-03-volt",
    "date": "2022-06-29",
    "findings": "https://github.com/code-423n4/2022-03-volt-findings/issues",
    "contest": 102
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the Volt Protocol smart contract system written in Solidity. The audit contest took place between March 31—April 6 2022.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>44 Wardens contributed reports to the Volt Protocol contest:</p>\n<ol>\n<li><a href=\"https://twitter.com/cmichelio\">cmichel</a></li>\n<li><a href=\"https://twitter.com/rayn731\">rayn</a></li>\n<li>hyh</li>\n<li>IllIllI</li>\n<li><a href=\"https://twitter.com/catchup22\">catchup</a></li>\n<li><a href=\"https://twitter.com/georgypetrov_\">georgypetrov</a></li>\n<li>robee</li>\n<li>Jujic</li>\n<li><a href=\"https://twitter.com/JustDravee\">Dravee</a></li>\n<li>Hawkeye (0xwags and 0xmint)</li>\n<li>0xkatana</li>\n<li>0xDjango</li>\n<li><a href=\"https://www.instagram.com/riyan_rfa/\">rfa</a></li>\n<li><a href=\"https://twitter.com/CertoraInc\">CertoraInc</a></li>\n<li><a href=\"https://twitter.com/defsec_\">defsec</a></li>\n<li>kenta</li>\n<li>sahar</li>\n<li><a href=\"https://instagram.com/vanensurya\">Funen</a></li>\n<li><a href=\"https://twitter.com/Meta0xNull\">Meta0xNull</a></li>\n<li>TerrierLover</li>\n<li><a href=\"https://twitter.com/nonfungiblenero\">Kenshin</a></li>\n<li><a href=\"https://twitter.com/morphean_sec\">Sleepy</a></li>\n<li><a href=\"https://twitter.com/0xkowloon\">0xkowloon</a></li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li>cccz</li>\n<li><a href=\"https://twitter.com/teryanarmenn\">teryanarmen</a></li>\n<li><a href=\"https://twitter.com/SolidityDev\">pauliax</a></li>\n<li>kyliek</li>\n<li>hake</li>\n<li>Kthere</li>\n<li>hubble (ksk2345 and shri4net)</li>\n<li><a href=\"https://twitter.com/danbinnun\">danb</a></li>\n<li>async</li>\n<li>aysha</li>\n<li><a href=\"https://twitter.com/BouSalman\">BouSalman</a></li>\n<li><a href=\"https://twitter.com/shenwilly_\">shenwilly</a></li>\n<li><a href=\"https://twitter.com/berndartmueller\">berndartmueller</a></li>\n<li>saian</li>\n<li><a href=\"https://twitter.com/_0v3rf10w\">0v3rf10w</a></li>\n<li><a href=\"https://twitter.com/0xNazgul\">0xNazgul</a></li>\n<li>okkothejawa</li>\n<li>samruna</li>\n</ol>\n<p>This contest was judged by <a href=\"https://github.com/jack-the-pug\">Jack the Pug</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/liveactionllama\">liveactionllama</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 7 unique vulnerabilities. Of these vulnerabilities, 1 received a risk rating in the category of HIGH severity and 6 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 36 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 25 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2022-03-volt\">C4 Volt Protocol contest repository</a>, and is composed of 17 smart contracts written in the Solidity programming language and includes 2,430 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-1\" style=\"position:relative;\"><a href=\"#high-risk-findings-1\" aria-label=\"high risk findings 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (1)</h1>\n<h2 id=\"h-01-oracle-price-does-not-compound\" style=\"position:relative;\"><a href=\"#h-01-oracle-price-does-not-compound\" aria-label=\"h 01 oracle price does not compound permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/22\">[H-01] Oracle price does not compound</a></h2>\n<p><em>Submitted by cmichel</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/oracle/ScalingPriceOracle.sol#L136\">ScalingPriceOracle.sol#L136</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/oracle/ScalingPriceOracle.sol#L113\">ScalingPriceOracle.sol#L113</a><br></p>\n<p>The oracle does not correctly compound the monthly APRs - it resets on <code>fulfill</code>.<br>\nNote that the <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/oracle/ScalingPriceOracle.sol#L198\"><code>oraclePrice</code> storage variable</a> is only set in <code>_updateCPIData</code> as part of the oracle <code>fulfill</code> callback.<br>\nIt’s set to the old price (price from 1 month ago) plus the interpolation from <strong><code>startTime</code></strong> to now.<br>\nHowever, <code>startTime</code> is <strong>reset</strong> in <code>requestCPIData</code> due to the <code>afterTimeInit</code> modifier, and therefore when Chainlink calls <code>fulfill</code> in response to the CPI request, the <code>timeDelta = block.timestamp - startTime</code> is close to zero again and <code>oraclePrice</code> is updated to itself again.</p>\n<p>This breaks the core functionality of the protocol as the oracle does not track the CPI, it always resets to <code>1.0</code> after every <code>fulfill</code> instead of compounding it.<br>\nIn addition, there should also be a way for an attacker to profit from the sudden drop of the oracle price to <code>1.0</code> again.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>As an example, assume <code>oraclePrice = 1.0 (1e18)</code>, <code>monthlyAPR = 10%</code>. The time elapsed is 14 days. Calling <code>getCurrentOraclePrice()</code> now would return <code>1.0 + 14/28 * 10% = 1.05</code>.</p>\n<ul>\n<li>It’s now the 15th of the month and one can trigger <code>requestCPIData</code>. <strong>This resets <code>startTime = now</code></strong>.</li>\n<li>Calling <code>getCurrentOraclePrice()</code> now would return <code>1.0</code> again as <code>timeDelta</code> (and <code>priceDelta</code>) is zero: <code>oraclePriceInt + priceDelta = oraclePriceInt = 1.0</code>.</li>\n<li>When <code>fulfill</code> is called it sets <code>oraclePrice = getCurrentOraclePrice()</code> which will be close to <code>1.0</code> as the <code>timeDelta</code> is tiny.</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The <code>oraclePrice</code> should be updated in <code>requestCPIData()</code> not in <code>fulfill</code>.<br>\nCover this scenario of multi-month accumulation in tests.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/22#issuecomment-1092068671\">ElliotFriedman (Volt) commented</a>:</strong></p>\n<blockquote>\n<p>Oracle price does compound per this line of code: <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/oracle/ScalingPriceOracle.sol#L197-L198\">https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/oracle/ScalingPriceOracle.sol#L197-L198</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/22#issuecomment-1098397591\">ElliotFriedman (Volt) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>This is the only valid critical finding we have seen so far! Great work cmichel!</p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-6\" style=\"position:relative;\"><a href=\"#medium-risk-findings-6\" aria-label=\"medium risk findings 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (6)</h1>\n<h2 id=\"m-01-vcon-address-change-not-persistent-across-protocol-components\" style=\"position:relative;\"><a href=\"#m-01-vcon-address-change-not-persistent-across-protocol-components\" aria-label=\"m 01 vcon address change not persistent across protocol components permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/60\">[M-01] <code>vcon</code> address change not persistent across protocol components</a></h2>\n<p><em>Submitted by rayn</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/contracts/core/Core.sol#L27\">Core.sol#L27</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/contracts/refs/CoreRef.sol#L22\">CoreRef.sol#L22</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/contracts/refs/CoreRef.sol#L199\">CoreRef.sol#L199</a><br></p>\n<p><code>vcon</code> address is allowed to be updated by <code>GOVERNOR</code> in <code>Core</code>, however, this change will not be reflected in <code>CoreRef._vcon</code>. Moreover, since <code>CoreRef._vcon</code> cannot be updated due to contract design, it is also impossible to fix this manually.\nWe are not yet sure how <code>vcon</code> will be used throughout the volt protocol, since details have not yet been made clear and code does not include related implementations. Consequently, it is impossible to estimate the exact impact. However, this desync between contracts seem dangerous enough to raise our attention, hence this report to inform the volt team about it.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In <code>Core</code>, <code>vcon</code> is allowed to be updated by GOVERNORs</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function setVcon(IERC20 _vcon) external onlyGovernor {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        vcon = _vcon;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        emit VconUpdate(_vcon);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>But in <code>CoreRef</code>, a contract inherited by several other ones including <code>NonCustodialPSM</code>, <code>GlobalRateLimitedMinter</code>, <code>ERC20CompountPCVDeposit</code> and <code>Volt</code>, <code>_vcon</code> is fixed upon initialization and cannot be further updated</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    IERC20 private immutable _vcon;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    constructor(address coreAddress) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _vcon = ICore(coreAddress).vcon();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>Thus if <code>GOVERNORS</code> ever updated <code>vcon</code> in <code>Core</code>, the state between <code>Core</code> and all other Volt protocol components will mismatch.</p>\n<p>Currently <code>_vcon</code> is not used in any place within the Volt protocol, but judging from the description in whitepapaer, future governance will be based on it, thus any potential desync will be devastating.</p>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>vim, ganache-cli</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>There are several possible solutions.</p>\n<p>The first is to dynamically fetch <code>vcon</code> from the <code>Core</code> whenever <code>CoreRef</code> uses it, and avoid storing a static copy locally.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function vcon() public view override returns (IERC20) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return _volt.vcon();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>The second is to expose a public API to update <code>_vcon</code> in <code>CoreRef</code>, however, this approach might not be especially favorable since many components will require updates at once, and it is highly possible that future GOVERNORs miss some of them while doing updates.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/60#issuecomment-1092212216\">ElliotFriedman (Volt) disagreed with High severity and commented</a>:</strong></p>\n<blockquote>\n<p>Agreed this is an issue; however, if the VCON address is updated, contracts that need to reference the new value will need to be redeployed to cache this new address when CoreRef is instantiated.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/60#issuecomment-1100818437\">Jack the Pug (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Based on the severity of the impact, I’m downgrading this to <code>Medium</code>.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-setting-new-buffer-does-not-reduce-current-buffer-to-cap\" style=\"position:relative;\"><a href=\"#m-02-setting-new-buffer-does-not-reduce-current-buffer-to-cap\" aria-label=\"m 02 setting new buffer does not reduce current buffer to cap permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/29\">[M-02] Setting new buffer does not reduce current buffer to cap</a></h2>\n<p><em>Submitted by cmichel, also found by rayn and catchup</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/RateLimited.sol#L142\">RateLimited.sol#L142</a><br></p>\n<p>The <code>RateLimited.setBufferCap</code> function first updates the buffer and then sets the new cap, but does not apply the new cap to the updated buffer.<br>\nMeaning, the updated buffer value can be larger than the new buffer cap which should never be the case.<br>\nActions consuming more than the new buffer cap can be performed.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_setBufferCap</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newBufferCap</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// @audit still uses old buffer cap, should set buffer first</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_updateBufferStored</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">oldBufferCap</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">bufferCap</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bufferCap</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">newBufferCap</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">BufferCapUpdate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">oldBufferCap</span><span class=\"mtk1\">, </span><span class=\"mtk12\">newBufferCap</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Update the buffer after setting the new cap:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">function _setBufferCap(uint256 newBufferCap) internal {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-   _updateBufferStored();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    uint256 oldBufferCap = bufferCap;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    bufferCap = newBufferCap;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   _updateBufferStored();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    emit BufferCapUpdate(oldBufferCap, newBufferCap);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/29\">ElliotFriedman (Volt) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-03-div-by-0\" style=\"position:relative;\"><a href=\"#m-03-div-by-0\" aria-label=\"m 03 div by 0 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/58\">[M-03] Div by 0</a></h2>\n<p><em>Submitted by robee, also found by georgypetrov, cmichel, and IllIllI</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/tree/main/contracts/utils/Deviation.sol#L23\">Deviation.sol#L23</a><br></p>\n<p>Division by 0 can lead to accidentally revert,<br>\n(An example of a similar issue - <a href=\"https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/84\">https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/84</a>)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    https://github.com/code-423n4/2022-03-volt/tree/main/contracts/utils/Deviation.sol#L23 a might be 0</span></span></code></pre>\n<p>It’s internal function but since it is used in another internal functions that are used in public and neither of them has this protection I thought it can be considered as medium (e.g. isWithinDeviationThreshold).</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/58\">ElliotFriedman (Volt) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/58#issuecomment-1100894509\">Jack the Pug (judge) commented</a>:</strong></p>\n<blockquote>\n<p>It’s a real issue but just like many other findings, it’s unlikely to be triggered in practice.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/58#issuecomment-1104667219\">Jack the Pug (judge) commented</a>:</strong></p>\n<blockquote>\n<p>In the particular context of this project, which most of the findings won’t lead to a code update, I’ll keep this as a <code>Med</code>.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-oracleref-assumes-backup-oracle-uses-the-same-normalizer-as-main-oracle\" style=\"position:relative;\"><a href=\"#m-04-oracleref-assumes-backup-oracle-uses-the-same-normalizer-as-main-oracle\" aria-label=\"m 04 oracleref assumes backup oracle uses the same normalizer as main oracle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/26\">[M-04] <code>OracleRef</code> assumes backup oracle uses the same normalizer as main oracle</a></h2>\n<p><em>Submitted by cmichel</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/refs/OracleRef.sol#L104\">OracleRef.sol#L104</a><br></p>\n<p>The <code>OracleRef</code> assumes that the backup oracle uses the same normalizer as the main oracle.<br>\nThis generally isn’t the case as it could be a completely different oracle, not even operated by Chainlink.<br></p>\n<p>If the main oracle fails, the backup oracle could be scaled by a wrong amount and return a wrong price which could lead to users being able to mint volt cheap or redeem volt for inflated underlying amounts.</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Should there be two scaling factors, one for each oracle?</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/26#issuecomment-1092201320\">ElliotFriedman (Volt) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>This is a good catch as it exposes some underlying assumptions made about backup oracles; however, we can assume that both oracles will use the same scaling factor and thus we will not need a second value for the backup oracle.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-05-updating-rate-limit-for-addresses-restores-their-entire-buffer-amount\" style=\"position:relative;\"><a href=\"#m-05-updating-rate-limit-for-addresses-restores-their-entire-buffer-amount\" aria-label=\"m 05 updating rate limit for addresses restores their entire buffer amount permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/27\">[M-05] Updating rate limit for addresses restores their entire buffer amount</a></h2>\n<p><em>Submitted by cmichel</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/MultiRateLimited.sol#L280\">MultiRateLimited.sol#L280</a><br></p>\n<p>When the <code>bufferCap</code> is updated for an address in <code>_updateAddress</code>, the address’s allowed buffer (<code>bufferStored</code>) is replenished to the entire <code>bufferCap</code>.</p>\n<p>The address could frontrun the <code>updateAddress</code> call and spend their entire buffer, then the buffer is replenished and they can spend their entire buffer a second time.</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Keep the old buffer value, capped by the new <code>bufferCap</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ uint256 newBuffer = individualBuffer(rateLimitedAddress);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  rateLimitData.lastBufferUsedTime = block.timestamp.toUint32();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  rateLimitData.bufferCap = _bufferCap;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  rateLimitData.rateLimitPerSecond = _rateLimitPerSecond;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- rateLimitData.bufferStored = _bufferCap;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ rateLimitData.bufferStored = min(_bufferCap, newBuffer);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/27#issuecomment-1092202200\">ElliotFriedman (Volt) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Good catch!</p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-noncustodialpsm-can-become-insolvent-as-cpi-index-rises\" style=\"position:relative;\"><a href=\"#m-06-noncustodialpsm-can-become-insolvent-as-cpi-index-rises\" aria-label=\"m 06 noncustodialpsm can become insolvent as cpi index rises permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/83\">[M-06] <code>NonCustodialPSM</code> can become insolvent as CPI index rises</a></h2>\n<p><em>Submitted by hyh</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/contracts/peg/NonCustodialPSM.sol#L236-L248\">NonCustodialPSM.sol#L236-L248</a><br></p>\n<p>NonCustodialPSM mints and redeems VOLT to a chosen stablecoin at the current market rate minus a fixed fee. It is assumed that the difference to be covered with pcvDeposit funds. That assumption is similar to one used in FEI protocol, but there no rate growth takes place as FEI to USD rate supposed to be stable, while VOLT to USD rate will rise over time.</p>\n<p>VOLT market rate is tied to the off-chain published CPI index. The growth of this index can easily surpass the yield of the pcvDeposit used, so its interest cannot be guaranteed to be always greater than CPI index advancement. The contract can end up in the situation when no redeem be possible, i.e. NonCustodialPSM can become insolvent.</p>\n<p>For example, let’s say the stablecoin is USDC, and now investors are worried about inflation and buy/mint 100m VOLT for 100m USDC. Fast forward 1 year, and investors were generally right, as due to rise of the oil prices happening simultaneously with logistics issues the CPI index growth end up being 30% APR for the year.</p>\n<p>Then, inflation fears abated and, say, stocks become stronger, and investors want their funds now to put them there and sell/redeem 100m VOLT expecting 125m USDC in return (for simplicity say 5m USDC goes to mint and redeem fees combined). USDC deposit strategy used in pcvDeposit yielded 10% APR for the year. The contract cannot redeem all the funds due as it is 125 - 100 * 1.1 = 15m USDC short.</p>\n<p>Putting severity to high as the contract serves requests sequentially and the last investors’ funds are lost this way, i.e. in the example above all the users, who came in to redeem when contract has 15m USDC in obligations and no funds, will lose their entire deposits.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Continuing the example, current low risk USDC deposit rates are circa 2.5 lower than US CPI:</p>\n<p>AAVE: <a href=\"https://classic.aave.com/#/markets\">https://classic.aave.com/#/markets</a></p>\n<p>Compound: <a href=\"https://compound.finance/markets/USDC\">https://compound.finance/markets/USDC</a></p>\n<p>US CPI: <a href=\"https://www.bls.gov/cpi/\">https://www.bls.gov/cpi/</a></p>\n<p>NonCustodialPSM.redeem uses current oracle price to determine what amount of stablecoins to be paid for 1 VOLT:</p>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/contracts/peg/NonCustodialPSM.sol#L236\">https://github.com/code-423n4/2022-03-volt/blob/main/contracts/peg/NonCustodialPSM.sol#L236</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/contracts/peg/NonCustodialPSM.sol#L378-L390\">https://github.com/code-423n4/2022-03-volt/blob/main/contracts/peg/NonCustodialPSM.sol#L378-L390</a></p>\n<p>NonCustodialPSM.mint does the same:</p>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/contracts/peg/NonCustodialPSM.sol#L274\">https://github.com/code-423n4/2022-03-volt/blob/main/contracts/peg/NonCustodialPSM.sol#L274</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/contracts/peg/NonCustodialPSM.sol#L357-L365\">https://github.com/code-423n4/2022-03-volt/blob/main/contracts/peg/NonCustodialPSM.sol#L357-L365</a></p>\n<p>For example, FEI protocol use a wide range of pcvDeposits, whose yields vary depending on the underlying strategy:</p>\n<p><a href=\"https://github.com/fei-protocol/fei-protocol-core/blob/develop/protocol-configuration/mainnetAddresses.ts#L164-L568\">https://github.com/fei-protocol/fei-protocol-core/blob/develop/protocol-configuration/mainnetAddresses.ts#L164-L568</a></p>\n<p>But there are no PCV deposits whose returns are linked to CPI of any country, so mismatch (basis) risk exists, which has to be addressed.</p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider providing a way to directly inject funds from a separately held stability fund (possibly shared across all the stablecoins and corresponding pcvDeposits) in addition to pcvDeposit as its strategy alone cannot guarantee the returns needed.</p>\n<p>Ideally, the redeem and mint fees collected should go to this stability fund as well, with the possibility to retrieve them when there is a total surplus big enough.</p>\n<p>More important, consider limiting the redeem amount to total user’s share of the pcvDeposit and its stability fund part, so the deficit be visible and shared between all the users. A user can then choose either to withdraw now, obtaining less than CPI index due to current liquidity situation, or to wait for stability fund to be filled up or for pcvDeposit yield to catch up. This way no user will lose the whole deposit.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/83#issuecomment-1091995380\">ElliotFriedman (Volt) disputed, disagreed with High severity, and commented</a>:</strong></p>\n<blockquote>\n<p>There is a risk of the system not being able to make everyone whole if the PCV grows too rapidly and onchain yields cannot keep up with or outcompete inflation; however, this is not a code issue, so marking as invalid.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/83#issuecomment-1104682677\">Jack the Pug (judge) commented</a>:</strong></p>\n<blockquote>\n<p>This is a valid concern. The warden explained why it’s possible to happen and how the current implementation handled it improperly, which can make some of the users suffer an unexpected and unfair loss.</p>\n<p>The recommended fix is reasonable.</p>\n<p>I’ll keep this as a <code>High</code>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/83#issuecomment-1120046828\">ElliotFriedman (Volt) commented</a>:</strong></p>\n<blockquote>\n<p>There is a 10m FEI liquidity backstop provided by the Tribe DAO, so the system would need to be live for many years without earning any yield to finally become insolvent.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/83#issuecomment-1120441273\">Jack the Pug (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>With the new information provided by the sponsor, I now agree that the likelihood of the situation described by the warden is low. And therefore, I’m downgrading the issue from High to Medium.</p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 36 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/64\">report highlighted below</a> by <strong>rayn</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/48\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/30\">cmichel</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/98\">Hawkeye</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/76\">0xDjango</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/86\">georgypetrov</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/88\">sahar</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/115\">defsec</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/117\">rfa</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/122\">kenta</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/81\">CertoraInc</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/51\">cccz</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/59\">robee</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/66\">Jujic</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/16\">Meta0xNull</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/97\">pauliax</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/101\">0xkatana</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/19\">hake</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/39\">Dravee</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/21\">teryanarmen</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/125\">kyliek</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/53\">danb</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/44\">Kenshin</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/80\">async</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/31\">shenwilly</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/89\">Sleepy</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/78\">catchup</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/112\">aysha</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/93\">hubble</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/8\">TerrierLover</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/11\">BouSalman</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/5\">Kthere</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/105\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/34\">berndartmueller</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/33\">0xkowloon</a>, and <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/36\">csanuragjain</a>.</em></p>\n<h2 id=\"summary-1\" style=\"position:relative;\"><a href=\"#summary-1\" aria-label=\"summary 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h2>\n<p>List of findings:</p>\n<ul>\n<li>Roles management</li>\n<li><code>oraclePrice</code> will be imprecise</li>\n<li>Unnecessary usage of <code>init()</code></li>\n<li>Using ecrecover is against best practice</li>\n<li><code>valid</code> in <code>OraclePassThrough/read()</code> always returns true</li>\n<li>Use Address.sendValue() without import @openzeppelin/contracts/utils/Address.sol</li>\n<li>setPublicChainlinkToken only called on chainId 1 and 42</li>\n<li>Unused functions and modifiers</li>\n</ul>\n<p>In summary of recommended security practices, complex role management easily creates confusions over the privilege of each role, it’s better to simplify the design of roles.<br>\nAlso, it’s better to use a verified library like ECDSA, delete unused functions, set unused variables to private, and import contracts correctly for best practice.</p>\n<h2 id=\"1-roles-management\" style=\"position:relative;\"><a href=\"#1-roles-management\" aria-label=\"1 roles management permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[1] Roles management</h2>\n<p>After reviewing the entire volt protocol, we found that role management has been made unnecessarily complex.<br>\nWhile there are no immediate fatal flaws in the current role assignment, from our prior experience in dealing with privilege management, we worry that such a complex system will likely lead to future problems, especially when management gradually moves from the hands of few reliable developers to an open vcon based governance.<br>\nDue to this, we feel that there is a need to express our concerns as well as highlight a few role assignments that we find “strange”.<br></p>\n<p>First. let’s review the roles included in Permissions and Tribes. The admin/members shown below are the ones explicitly assigned in contracts.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">DEFAULT_ADMIN_ROLE\t\t\t\t\t\t\t(native)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin DEFAULT_ADMIN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">MINTER_ROLE/MINTER\t\t\t&quot;MINTER_ROLE&quot;\t\t\t(native) (tribe-major)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin GOVERN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">BURNER_ROLE\t\t\t\t&quot;BURNER_ROLE&quot;\t\t\t(native)\t\t\tunused</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin GOVERN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">PCV_CONTROLLER_ROLE/PCV_CONTROLLER\t&quot;PCV_CONTROLLER_ROLE&quot;\t\t(native) (tribe-major)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin GOVERN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">GOVERN_ROLE/GOVERNOR\t\t\t&quot;GOVERN_ROLE&quot;\t\t\t(native) (tribe-major)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin GOVERN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\tcore</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\tinit() caller</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">GUARDIAN_ROLE/GUARDIAN\t\t\t&quot;GUARDIAN_ROLE&quot;\t\t\t(native) (tribe-major)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin GOVERN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">PARAMETER_ADMIN\t\t\t\t&quot;PARAMETER_ADMIN&quot;\t\t(tribe-admin)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin DEFAULT_ADMIN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">ORACLE_ADMIN\t\t\t\t&quot;ORACLE_ADMIN_ROLE&quot;\t\t(tribe-admin)\t\t\tunused</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin DEFAULT_ADMIN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">TRIBAL_CHIEF_ADMIN\t\t\t&quot;TRIBAL_CHIEF_ADMIN_ROLE&quot;\t(tribe-admin)\t\t\tunused</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin DEFAULT_ADMIN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">PCV_GUARDIAN_ADMIN\t\t\t&quot;PCV_GUARDIAN_ADMIN_ROLE&quot;\t(tribe-admin)\t\t\tunused</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin DEFAULT_ADMIN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">MINOR_ROLE_ADMIN\t\t\t&quot;MINOR_ROLE_ADMIN&quot;\t\t(tribe-admin)\t\t\tunused</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin DEFAULT_ADMIN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">FUSE_ADMIN\t\t\t\t&quot;FUSE_ADMIN&quot;\t\t\t(tribe-admin)\t\t\tunused</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin DEFAULT_ADMIN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">VETO_ADMIN\t\t\t\t&quot;VETO_ADMIN&quot;\t\t\t(tribe-admin)\t\t\tunused</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin DEFAULT_ADMIN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">MINTER_ADMIN\t\t\t\t&quot;MINTER_ADMIN&quot;\t\t\t(tribe-admin)\t\t\tunused</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin DEFAULT_ADMIN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">OPTIMISTIC_ADMIN\t\t\t&quot;OPTIMISTIC_ADMIN&quot;\t\t(tribe-admin)\t\t\tunused</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin DEFAULT_ADMIN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">LBP_SWAP_ROLE\t\t\t\t&quot;SWAP_ADMIN_ROLE&quot;\t\t(tribe-minor)\t\t\tunused</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin DEFAULT_ADMIN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">VOTIUM_ROLE\t\t\t\t&quot;VOTIUM_ADMIN_ROLE&quot;\t\t(tribe-minor)\t\t\tunused</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin DEFAULT_ADMIN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">MINOR_PARAM_ROLE\t\t\t&quot;MINOR_PARAM_ROLE&quot;\t\t(tribe-minor)\t\t\tunused</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin DEFAULT_ADMIN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">ADD_MINTER_ROLE\t\t\t\t&quot;ADD_MINTER_ROLE&quot;\t\t(tribe-minor)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin DEFAULT_ADMIN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">PSM_ADMIN_ROLE\t\t\t\t&quot;PSM_ADMIN_ROLE&quot;\t\t(tribe-minor)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tadmin DEFAULT_ADMIN_ROLE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tmembers</span></span></code></pre>\n<p>Notice how a several of those roles are not used in any of the contracts (marked as unused). This is the first problem. While it is understandable that the protocol is incomplete yet, introducing redundant roles does not make management easier. AccessControl.sol allows introducing new roles post-deployment, so it might be a better idea to keep a list of dynamically introduced roles instead of listing a lot of unused ones upfront, especially since there are roles with similar names (PCV<em>GUARDIAN</em>ADMIN and PCV_CONTROLLER), between which the difference is not made clear.</p>\n<p>Next, we carry on to see the design of <code>Permissions</code>.<br>\nWe note that this contract is modified from the implementation of fei protocol, but on the other hand, disagree that the implementation is anywhere near optimal. To support our argument, we discuss the logic of role granting and revoking below.<br>\nSo let’s look at the <code>grantMinter</code> function.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function grantMinter(address minter) external override onlyGovernor {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        grantRole(MINTER_ROLE, minter);</span></span></code></pre>\n<p>The function specifies that it is a <code>onlyGovernor</code> function, which should expectedly mean that <code>GOVERNOR</code>, and only <code>GOVERNOR</code> have the privilege to add <code>MINTER_ROLE</code> members. However, if we dig a bit deeper, it is easy to see that this is not the case.</p>\n<p>The <code>grantRole</code> function defined in AccessControl.sol is as below. Notice that it also has a modifier that specifies only admins of the specific role has privilege to add new members. Additionally, this function is public.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _grantRole(role, account);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>Combining this logic with the <code>grantMinter</code> one above, we can see that the workflow essentially becomes</p>\n<ol>\n<li>caller is allowed to add new users if it only has admin of <code>MINTER_ROLE</code> (call <code>grantRole</code> directly)</li>\n<li>caller is allowed to add new users if it has admin of <code>MINTER_ROLE</code> and <code>GOVERNOR</code> role (call <code>grantRole</code> or <code>grantMinter</code>)</li>\n<li>caller is not allowed to add new users if it only has <code>GOVERNOR</code> role (blocked by <code>grantRole</code>)</li>\n</ol>\n<p>It is clear that the <code>grantMinter</code> function now becomes semi-useless, since callers with only <code>GOVERNOR</code> role cannot do anything without admin of <code>MINTER_ROLE</code>, and admin of <code>MINTER_ROLE</code> can always call <code>grantRole</code> directly even if it does not have <code>GOVERNOR</code> role.</p>\n<p>Our best guess of the original intention is that <code>GOVERNOR</code> has full privilege over role management, while admin of roles are neglected. To realize this concept, it might be better to override the <code>grantRole</code> function and make it non-public, so that callers can’t circumvent the <code>GOVERNOR</code> check. Finally, change <code>grantMinter</code> to use the internal function <code>_grantRole</code>. Similar modifications should also be done to the <code>revokeXXX</code> series of functions.</p>\n<p>Now we’ve gone through <code>Permissions</code>, time to look at <code>CoreRef</code> and <code>OracleRef</code>.<br>\nOne of the more interesting design choice in <code>CoreRef</code> is the introduction of <code>CONTRACT_ADMIN_ROLE</code>. This allows an additional role to be granted admin over the specific contract. However, throughout the volt protocol, <code>CONTRACT_ADMIN_ROLE</code> does not serve any particularly useful purpose. Moreover, in some places, the usage of <code>CONTRACT_ADMIN_ROLE</code> does not make much sense.</p>\n<p>For instance, let’s look at implementation of <code>RateLimited</code> and <code>MultiRateLimited</code>.<br>\n<code>RateLimited</code> defines a global limit to the <code>bufferCap</code> and <code>rateLimitPerSecond</code>, and <code>MultiRateLimited</code> defines the upper limit of <code>individualMaxBufferCap</code> and <code>individualMaxRateLimitPerSecond</code>. In our opinion, for the system to make sense, a user granted permission to change <code>bufferCap</code> and <code>rateLimitPerSecond</code> should also have permission to change <code>individualMaxBufferCap</code> and <code>individualMaxRateLimitPerSecond</code>. However, it can be seen that <code>CONTRACT_ADMIN_ROLES</code> are allowed to change the global limits through <code>onlyGovernorOrAdmin</code> modifier, while individual limits can only be changed by <code>GOVERNOR</code> since <code>onlyGovernor</code> is used.\nThe flexibility introduced through <code>CONTRACT_ADMIN_ROLE</code> is not properly utilized in volt protocol, and as we see in the example above, leads to potential role privilege confusions, thus we deemed it more appropriate to remove the <code>CONTRACT_ADMIN_ROLE</code> mechanism altogether for simplicity.</p>\n<p>The next aspect we would like to discuss is more of a design choice, and not really a management problem. Take it with a grain of salt.<br>\nThroughout the contract, there are several places that use the <code>onlyGovernor</code> modifier. However given that the roles already included controllers/admins for each specific component (<code>PCV_CONTROLLER_ROLE</code>, <code>PSM_ADMIN_ROLE</code>), it is probably more appropriate to limit <code>GOVERNOR</code> to only manage the <code>Core</code> contract. If a governor needs to modify stuff from other contracts, add the corresponding admin role to itself and use that role to authenticate further actions. This design can create a clean cut between metadata management, and actually protocol management, at the cost of slightly more gas spent in granting roles. From our limited experience, this kind of management is more robust and greatly lowers the probability of mis-management in the future.</p>\n<p>Now we’ve discussed all general suggestions we have for role management, we finally note a few role modifier usage that we find “strange”, but are uncertain whether intended or not.</p>\n<ol>\n<li><code>NonCustodialPSM.withdrawERC20</code> uses modifier <code>onlyPCVController</code>. We find it strange that a function in the PSM module requires PCVController role. Shouldn’t this require <code>PSM_ADMIN_ROLE</code> instead?</li>\n<li><code>CompoundPCVDepositBase.withdraw</code> uses the modifier <code>onlyPCVController</code>. This would require <code>NonCustodialPSM</code> to have the <code>PCV_CONTROLLER_ROLE</code> to call <code>withdraw</code>, and while it is not a problem strictly speaking, we find it strange to grant such a role. A more usual implementation would be to have <code>CompoundPCVDepositBase</code> do internal bookkeeping on the amount each address deposited, and allow withdraw with respect to those values (similar to implementation of ERC20). This avoids the introduction of an additional role (a.k.a potential point of failure due to mis-management).</li>\n</ol>\n<p>Overall, complexity in role management easily creates confusions over the privilege of each role, and in the specific case of volt protocol, does not really introduce any benefits. We thus urge the developers to re-think the current role management system, and preferably simplify the design.</p>\n<h2 id=\"02-oracleprice-will-be-imprecise\" style=\"position:relative;\"><a href=\"#02-oracleprice-will-be-imprecise\" aria-label=\"02 oracleprice will be imprecise permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[02] <code>oraclePrice</code> will be imprecise</h2>\n<p>Public <code>oraclePrice</code> variable will be imprecise and confused. If other contracts try to get oracle price by calling <code>oraclePrice()</code> rather than calling <code>getCurrentOraclePrice()</code>, it will get wrong price.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/contracts/oracle/ScalingPriceOracle.sol#L36\">ScalingPriceOracle.sol#L36</a><br></p>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Declare <code>oraclePrice</code> to private, and only use <code>getCurrentOraclePrice()</code> to get the price instead.</p>\n<h2 id=\"03-unnecessary-usage-of-init\" style=\"position:relative;\"><a href=\"#03-unnecessary-usage-of-init\" aria-label=\"03 unnecessary usage of init permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[03] Unnecessary usage of <code>init()</code></h2>\n<p>Since <code>Core</code> contract does not go through a proxy, and the caller of <code>init()</code> is the same as the deployer in deploy script, it is unnecessary to use init functions.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/contracts/core/Core.sol#L20\">Core.sol#L20</a><br></p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider putting <code>init()</code> logic into <code>constructor</code> instead and stop inheriting Initializable.</p>\n<h2 id=\"04-using-ecrecover-is-against-best-practice\" style=\"position:relative;\"><a href=\"#04-using-ecrecover-is-against-best-practice\" aria-label=\"04 using ecrecover is against best practice permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[04] Using ecrecover is against best practice</h2>\n<p>Using ecrecover is against best practice. Preferably use ECDSA.recover instead. EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature unique. However it should be impossible to be a threat by now.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/contracts/volt/Volt.sol#L89\">Volt.sol#L89</a><br></p>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Take these implementations into consideration</p>\n<p><a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/4a9cc8b4918ef3736229a5cc5a310bdc17bf759f/contracts/utils/cryptography/draft-EIP712.sol\">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/4a9cc8b4918ef3736229a5cc5a310bdc17bf759f/contracts/utils/cryptography/draft-EIP712.sol</a></p>\n<p><a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/draft-ERC20Permit.sol</a></p>\n<h2 id=\"05-valid-in-oraclepassthroughread-always-returns-true\" style=\"position:relative;\"><a href=\"#05-valid-in-oraclepassthroughread-always-returns-true\" aria-label=\"05 valid in oraclepassthroughread always returns true permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[05] <code>valid</code> in <code>OraclePassThrough/read()</code> always returns true</h2>\n<p>In <code>OraclePassThrough.sol</code>, <code>valid</code> is always true in <code>read()</code>. Since <code>OracleRef</code> uses <code>valid</code> to determine validity. There should be a invalid case. Otherwise, the validity check is meaningless.</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/contracts/oracle/OraclePassThrough.sol#L41\">OraclePassThrough.sol#L41</a><br></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/contracts/refs/OracleRef.sol#L102\">OracleRef.sol#L102</a><br></p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Define the invalid case.</p>\n<h2 id=\"06-use-addresssendvalue-without-import-openzeppelincontractsutilsaddresssol\" style=\"position:relative;\"><a href=\"#06-use-addresssendvalue-without-import-openzeppelincontractsutilsaddresssol\" aria-label=\"06 use addresssendvalue without import openzeppelincontractsutilsaddresssol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[06] Use Address.sendValue() without import @openzeppelin/contracts/utils/Address.sol</h2>\n<p>Although <code>@openzeppelin/contracts/proxy/utils/Initializable.sol</code> is imported in <code>Core.sol</code>. A good coding practice should import <code>@openzeppelin/contracts/utils/Address.sol</code> when using it.</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/contracts/pcv/PCVDeposit.sol#L43\">PCVDeposit.sol#L43</a><br></p>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Import <code>@openzeppelin/contracts/utils/Address.sol</code> in <code>PCVDeposit.sol</code>.</p>\n<h2 id=\"07-setpublicchainlinktoken-only-called-on-chainid-1-and-42\" style=\"position:relative;\"><a href=\"#07-setpublicchainlinktoken-only-called-on-chainid-1-and-42\" aria-label=\"07 setpublicchainlinktoken only called on chainid 1 and 42 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[07] setPublicChainlinkToken only called on chainId 1 and 42</h2>\n<p><code>ScalingPriceOracle</code> checks <code>chainId</code> in contract constructor, it might be better to upfront reject construction if it is not intended to serve other chains.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/contracts/oracle/ScalingPriceOracle.sol#L84-L86\">ScalingPriceOracle.sol#L84-L86</a><br></p>\n<h3 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>It’s better to upfront check and reject construction if it is not intended to serve other chains.</p>\n<h2 id=\"08-unused-functions-and-modifiers\" style=\"position:relative;\"><a href=\"#08-unused-functions-and-modifiers\" aria-label=\"08 unused functions and modifiers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[08] Unused functions and modifiers</h2>\n<p>These functions are noted as for backward compatibility, but not used anywhere, should probably be removed.</p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/contracts/refs/CoreRef.sol#L10\">CoreRef.sol#L10</a><br></p>\n<p>Unused functions:</p>\n<ul>\n<li>_burnVoltHeld</li>\n</ul>\n<p>Unused modifiers:</p>\n<ul>\n<li>onlyVolt</li>\n<li>hasAnyOfFiveRoles</li>\n<li>hasAnyOfFourRoles</li>\n<li>hasAnyOfThreeRoles</li>\n<li>onlyGovernorOrGuardianOrAdmin</li>\n<li>ifMinterSelf</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-12\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-12\" aria-label=\"recommended mitigation steps 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Remove these unused functions and modifiers.</p>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this contest, 25 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/47\">report highlighted below</a> by <strong>IllIllI</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/40\">Jujic</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/38\">Dravee</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/102\">0xkatana</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/82\">CertoraInc</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/56\">robee</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/118\">rfa</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/79\">catchup</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/104\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/119\">defsec</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/85\">georgypetrov</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/72\">saian</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/121\">kenta</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/42\">Kenshin</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/9\">TerrierLover</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/96\">Hawkeye</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/20\">samruna</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/10\">0v3rf10w</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/75\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/65\">rayn</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/90\">Sleepy</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/4\">okkothejawa</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/32\">0xkowloon</a>, <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/35\">csanuragjain</a>, and <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/15\">Meta0xNull</a>.</em></p>\n<h2 id=\"g-01-store-the-timestamp-endpoint-rather-than-re-calculating-it-every-time\" style=\"position:relative;\"><a href=\"#g-01-store-the-timestamp-endpoint-rather-than-re-calculating-it-every-time\" aria-label=\"g 01 store the timestamp endpoint rather than re calculating it every time permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Store the timestamp endpoint rather than re-calculating it every time</h2>\n<p>The <code>isTimeEnded()</code> function does a lot of calculations every time it’s called. It’s called from multiple modifiers so it’s important for it to be efficient. Rather than storing the duration, the code can calculate and store the ending timestamp, so <code>isTimeEnded()</code> can just be a direct comparison of two <code>uint256</code>s. The duration can be calculated by subtracting the start timestamp from the ending timestamp.</p>\n<ol>\n<li>File: contracts/utils/Timed.sol (lines <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/Timed.sol#L38-L59\">38-59</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice return true if time period has ended</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isTimeEnded</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">remainingTime</span><span class=\"mtk1\">() == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice number of seconds remaining until time is up</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @return remaining</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">remainingTime</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">duration</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">timeSinceStart</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// duration always &gt;= timeSinceStart which is on [0,d]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice number of seconds since contract was initialized</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @return timestamp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev will be less than or equal to duration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">timeSinceStart</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk11\">isTimeStarted</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// uninitialized</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_duration</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">duration</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timePassed</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// block timestamp always &gt;= startTime</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timePassed</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">_duration</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">_duration</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">timePassed</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"g-02-lots-of-duplicated-code-between-ratelimitedsol-and-multiratelimitedsol\" style=\"position:relative;\"><a href=\"#g-02-lots-of-duplicated-code-between-ratelimitedsol-and-multiratelimitedsol\" aria-label=\"g 02 lots of duplicated code between ratelimitedsol and multiratelimitedsol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] Lots of duplicated code between <code>RateLimited.sol</code> and <code>MultiRateLimited.sol</code></h2>\n<p>The functionality of <code>RateLimited.sol</code> can be achieved by using either <code>address(0)</code> or <code>address(this)</code> as the <code>rateLimitedAddress</code> so having a separate <code>RateLimited.sol</code> contract is a waste of deployment gas.</p>\n<ol>\n<li>File: contracts/utils/RateLimited.sol (Various lines throughout the <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/RateLimited.sol\">file</a>)</li>\n<li>File: contracts/utils/MultiRateLimited.sol (Various lines throughout the <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/MultiRateLimited.sol\">file</a>)</li>\n</ol>\n<h2 id=\"g-03-requirerevert-strings-longer-than-32-bytes-cost-extra-gas\" style=\"position:relative;\"><a href=\"#g-03-requirerevert-strings-longer-than-32-bytes-cost-extra-gas\" aria-label=\"g 03 requirerevert strings longer than 32 bytes cost extra gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] <code>require()</code>/<code>revert()</code> strings longer than 32 bytes cost extra gas</h2>\n<p>See <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/47\">original submission</a> for instances.</p>\n<h2 id=\"g-04-use-a-more-recent-version-of-solidity\" style=\"position:relative;\"><a href=\"#g-04-use-a-more-recent-version-of-solidity\" aria-label=\"g 04 use a more recent version of solidity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] Use a more recent version of solidity</h2>\n<p>Use a solidity version of at least 0.8.10 to have external calls skip contract existence checks if the external call has a return value</p>\n<ol>\n<li>File: contracts/pcv/PCVDeposit.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/pcv/PCVDeposit.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/oracle/OraclePassThrough.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/oracle/OraclePassThrough.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"3\">\n<li>File: contracts/oracle/ScalingPriceOracle.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/oracle/ScalingPriceOracle.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"4\">\n<li>File: contracts/utils/Timed.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/Timed.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"5\">\n<li>File: contracts/utils/Deviation.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/Deviation.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"6\">\n<li>File: contracts/utils/GlobalRateLimitedMinter.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/GlobalRateLimitedMinter.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"7\">\n<li>File: contracts/utils/MultiRateLimited.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/MultiRateLimited.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"8\">\n<li>File: contracts/utils/RateLimited.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/RateLimited.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"9\">\n<li>File: contracts/volt/Volt.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/volt/Volt.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"10\">\n<li>File: contracts/refs/OracleRef.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/refs/OracleRef.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"11\">\n<li>File: contracts/refs/CoreRef.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/refs/CoreRef.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"12\">\n<li>File: contracts/core/Core.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/core/Core.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"13\">\n<li>File: contracts/core/TribeRoles.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/core/TribeRoles.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"14\">\n<li>File: contracts/core/Permissions.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/core/Permissions.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"15\">\n<li>File: contracts/peg/NonCustodialPSM.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/peg/NonCustodialPSM.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-05-use-a-more-recent-version-of-solidity\" style=\"position:relative;\"><a href=\"#g-05-use-a-more-recent-version-of-solidity\" aria-label=\"g 05 use a more recent version of solidity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Use a more recent version of solidity</h2>\n<p>Use a solidity version of at least 0.8.2 to get compiler automatic inlining\nUse a solidity version of at least 0.8.3 to get better struct packing and cheaper multiple storage reads\nUse a solidity version of at least 0.8.4 to get custom errors, which are cheaper at deployment than <code>revert()/require()</code> strings\nUse a solidity version of at least 0.8.10 to have external calls skip contract existence checks if the external call has a return value</p>\n<ol>\n<li>File: contracts/pcv/compound/CompoundPCVDepositBase.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/pcv/compound/CompoundPCVDepositBase.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/pcv/compound/ERC20CompoundPCVDeposit.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/pcv/compound/ERC20CompoundPCVDeposit.sol#L2\">2</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-06-using-bools-for-storage-incurs-overhead\" style=\"position:relative;\"><a href=\"#g-06-using-bools-for-storage-incurs-overhead\" aria-label=\"g 06 using bools for storage incurs overhead permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] Using <code>bool</code>s for storage incurs overhead</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Booleans are more expensive than uint256 or any type that takes up a full</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// word because each write operation emits an extra SLOAD to first read the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// slot&#39;s contents, replace the bits taken up by the boolean, and then write</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// back. This is the compiler&#39;s defense against contract upgrades and</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// pointer aliasing, and it cannot be disabled.</span></span></span></code></pre>\n<p><a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/58f635312aa21f947cae5f8578638a85aa2519f5/contracts/security/ReentrancyGuard.sol#L23-L27\">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/58f635312aa21f947cae5f8578638a85aa2519f5/contracts/security/ReentrancyGuard.sol#L23-L27</a></p>\n<ol>\n<li>File: contracts/utils/RateLimited.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/RateLimited.sol#L23\">23</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">doPartialAction</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/refs/OracleRef.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/refs/OracleRef.sol#L25\">25</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">doInvert</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"3\">\n<li>File: contracts/peg/NonCustodialPSM.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/peg/NonCustodialPSM.sol#L52\">52</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">redeemPaused</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"4\">\n<li>File: contracts/peg/NonCustodialPSM.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/peg/NonCustodialPSM.sol#L55\">55</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintPaused</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-07-internal-functions-only-called-once-can-be-inlined-to-save-gas\" style=\"position:relative;\"><a href=\"#g-07-internal-functions-only-called-once-can-be-inlined-to-save-gas\" aria-label=\"g 07 internal functions only called once can be inlined to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] <code>internal</code> functions only called once can be inlined to save gas</h2>\n<ol>\n<li>File: contracts/oracle/ScalingPriceOracle.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/oracle/ScalingPriceOracle.sol#L171\">171</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_updateCPIData</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_cpiData</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/oracle/ScalingPriceOracle.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/oracle/ScalingPriceOracle.sol#L218\">218</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_addNewMonth</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newMonth</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<ol start=\"3\">\n<li>File: contracts/core/Permissions.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/core/Permissions.sol#L211\">211</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_setupGovernor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">governor</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<h2 id=\"g-08-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage\" style=\"position:relative;\"><a href=\"#g-08-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage\" aria-label=\"g 08 state variables should be cached in stack variables rather than re reading them from storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-08] State variables should be cached in stack variables rather than re-reading them from storage</h2>\n<p>The instances below point to the second access of a state variable within a function.\nLess obvious optimizations include having local storage variables of mappings within state variable mappings or mappings within state variable structs, having local storage variables of structs within mappings, or having local caches of state variable contracts/addresses.</p>\n<ol>\n<li>File: contracts/pcv/compound/CompoundPCVDepositBase.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/pcv/compound/CompoundPCVDepositBase.sol#L32\">32</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isCToken</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;CompoundPCVDeposit: Not a cToken&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/pcv/compound/CompoundPCVDepositBase.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/pcv/compound/CompoundPCVDepositBase.sol#L57\">57</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            (</span><span class=\"mtk12\">cToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) * </span><span class=\"mtk12\">exchangeRate</span><span class=\"mtk1\">) /</span></span></span></code></pre>\n<ol start=\"3\">\n<li>File: contracts/pcv/compound/ERC20CompoundPCVDeposit.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/pcv/compound/ERC20CompoundPCVDeposit.sol#L31\">31</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cToken</span><span class=\"mtk1\">), </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"4\">\n<li>File: contracts/oracle/ScalingPriceOracle.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/oracle/ScalingPriceOracle.sol#L124\">124</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">percentageChange</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">delta</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">Constants</span><span class=\"mtk1\">.</span><span class=\"mtk12\">BP_INT</span><span class=\"mtk1\">) / </span><span class=\"mtk11\">int128</span><span class=\"mtk1\">(</span><span class=\"mtk12\">previousMonth</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"5\">\n<li>File: contracts/utils/MultiRateLimited.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/MultiRateLimited.sol#L344\">344</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">rateLimitPerAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">rateLimitedAddress</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lastBufferUsedTime</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span></span></span></code></pre>\n<ol start=\"6\">\n<li>File: contracts/utils/RateLimited.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/RateLimited.sol#L110\">110</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">BufferUsed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">usedAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bufferStored</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"7\">\n<li>File: contracts/refs/OracleRef.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/refs/OracleRef.sol#L104\">104</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            (</span><span class=\"mtk12\">_peg</span><span class=\"mtk1\">, </span><span class=\"mtk12\">valid</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">backupOracle</span><span class=\"mtk1\">.</span><span class=\"mtk11\">read</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<ol start=\"8\">\n<li>File: contracts/refs/OracleRef.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/refs/OracleRef.sol#L111\">111</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">scalingFactor</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**(-</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">decimalsNormalizer</span><span class=\"mtk1\">).</span><span class=\"mtk11\">toUint256</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<h2 id=\"g-09-splitting-require-statements-that-use--saves-gas\" style=\"position:relative;\"><a href=\"#g-09-splitting-require-statements-that-use--saves-gas\" aria-label=\"g 09 splitting require statements that use  saves gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-09] Splitting <code>require()</code> statements that use <code>&#x26;&#x26;</code> saves gas</h2>\n<p>See <a href=\"https://github.com/code-423n4/2022-01-xdefi-findings/issues/128\">this issue</a> for an example</p>\n<ol>\n<li>File: contracts/volt/Volt.sol (lines <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/volt/Volt.sol#L90-L93\">90-93</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">recoveredAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">recoveredAddress</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;Fei: INVALID_SIGNATURE&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span></code></pre>\n<h2 id=\"g-10-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead\" style=\"position:relative;\"><a href=\"#g-10-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead\" aria-label=\"g 10 usage of uintsints smaller than 32 bytes 256 bits incurs overhead permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-10] Usage of <code>uints</code>/<code>ints</code> smaller than 32 bytes (256 bits) incurs overhead</h2>\n<blockquote>\n<p>When using elements that are smaller than 32 bytes, your contract’s gas usage may be higher. This is because the EVM operates on 32 bytes at a time. Therefore, if the element is smaller than that, the EVM must use more operations in order to reduce the size of the element from 32 bytes to the desired size.</p>\n</blockquote>\n<p><a href=\"https://docs.soliditylang.org/en/v0.8.11/internals/layout_in_storage.html\">https://docs.soliditylang.org/en/v0.8.11/internals/layout_in_storage.html</a>\nUse a larger size then downcast where needed</p>\n<p>See <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/47\">original submission</a> for instances.</p>\n<h2 id=\"g-11-expressions-for-constant-values-such-as-a-call-to-keccak256-should-use-immutable-rather-than-constant\" style=\"position:relative;\"><a href=\"#g-11-expressions-for-constant-values-such-as-a-call-to-keccak256-should-use-immutable-rather-than-constant\" aria-label=\"g 11 expressions for constant values such as a call to keccak256 should use immutable rather than constant permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-11] Expressions for constant values such as a call to <code>keccak256()</code>, should use <code>immutable</code> rather than <code>constant</code></h2>\n<p>See <a href=\"https://github.com/ethereum/solidity/issues/9232\">this</a> issue for a detail description of the issue.</p>\n<p>See <a href=\"https://github.com/code-423n4/2022-03-volt-findings/issues/47\">original submission</a> for instances.</p>\n<h2 id=\"g-12-using-private-rather-than-public-for-constants-saves-gas\" style=\"position:relative;\"><a href=\"#g-12-using-private-rather-than-public-for-constants-saves-gas\" aria-label=\"g 12 using private rather than public for constants saves gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-12] Using <code>private</code> rather than <code>public</code> for constants, saves gas</h2>\n<p>If needed, the value can be read from the verified contract source code</p>\n<ol>\n<li>File: contracts/oracle/ScalingPriceOracle.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/oracle/ScalingPriceOracle.sol#L50\">50</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TIMEFRAME</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">28</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/oracle/ScalingPriceOracle.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/oracle/ScalingPriceOracle.sol#L55\">55</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MAXORACLEDEVIATION</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">2_000</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"3\">\n<li>File: contracts/oracle/ScalingPriceOracle.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/oracle/ScalingPriceOracle.sol#L61\">61</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">jobId</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"4\">\n<li>File: contracts/oracle/ScalingPriceOracle.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/oracle/ScalingPriceOracle.sol#L64\">64</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"5\">\n<li>File: contracts/utils/RateLimited.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/RateLimited.sol#L11\">11</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MAX_RATE_LIMIT_PER_SECOND</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"6\">\n<li>File: contracts/volt/Volt.sol (lines <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/volt/Volt.sol#L13-L14\">13-14</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PERMIT_TYPEHASH</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"7\">\n<li>File: contracts/core/Permissions.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/core/Permissions.sol#L10\">10</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">BURNER_ROLE</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;BURNER_ROLE&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"8\">\n<li>File: contracts/core/Permissions.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/core/Permissions.sol#L11\">11</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MINTER_ROLE</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;MINTER_ROLE&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"9\">\n<li>File: contracts/core/Permissions.sol (lines <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/core/Permissions.sol#L12-L13\">12-13</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PCV_CONTROLLER_ROLE</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;PCV_CONTROLLER_ROLE&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"10\">\n<li>File: contracts/core/Permissions.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/core/Permissions.sol#L14\">14</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">GOVERN_ROLE</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;GOVERN_ROLE&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"11\">\n<li>File: contracts/core/Permissions.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/core/Permissions.sol#L15\">15</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">GUARDIAN_ROLE</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;GUARDIAN_ROLE&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"12\">\n<li>File: contracts/peg/NonCustodialPSM.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/peg/NonCustodialPSM.sol#L49\">49</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MAX_FEE</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">300</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-13-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function\" style=\"position:relative;\"><a href=\"#g-13-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function\" aria-label=\"g 13 duplicated requirerevert checks should be refactored to a modifier or function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-13] Duplicated <code>require()</code>/<code>revert()</code> checks should be refactored to a modifier or function</h2>\n<ol>\n<li>File: contracts/utils/MultiRateLimited.sol (lines <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/MultiRateLimited.sol#L305-L308\">305-308</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_rateLimitPerSecond</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">MAX_RATE_LIMIT_PER_SECOND</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;MultiRateLimited: rateLimitPerSecond too high&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span></code></pre>\n<h2 id=\"g-14-state-variables-only-set-in-the-constructor-should-be-declared-immutable\" style=\"position:relative;\"><a href=\"#g-14-state-variables-only-set-in-the-constructor-should-be-declared-immutable\" aria-label=\"g 14 state variables only set in the constructor should be declared immutable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-14] State variables only set in the constructor should be declared <code>immutable</code></h2>\n<ol>\n<li>File: contracts/pcv/compound/ERC20CompoundPCVDeposit.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/pcv/compound/ERC20CompoundPCVDeposit.sol#L16\">16</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-15-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function\" style=\"position:relative;\"><a href=\"#g-15-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function\" aria-label=\"g 15 require or revert statements that check input arguments should be at the top of the function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-15] <code>require()</code> or <code>revert()</code> statements that check input arguments should be at the top of the function</h2>\n<p>Checks that involve constants should come before checks that involve state variables</p>\n<ol>\n<li>File: contracts/utils/MultiRateLimited.sol (lines <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/MultiRateLimited.sol#L270-L273\">270-273</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_rateLimitPerSecond</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">MAX_RATE_LIMIT_PER_SECOND</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;MultiRateLimited: rateLimitPerSecond too high&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/utils/MultiRateLimited.sol (lines <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/MultiRateLimited.sol#L305-L308\">305-308</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_rateLimitPerSecond</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">MAX_RATE_LIMIT_PER_SECOND</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;MultiRateLimited: rateLimitPerSecond too high&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span></code></pre>\n<ol start=\"3\">\n<li>File: contracts/utils/RateLimited.sol (lines <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/RateLimited.sol#L46-L49\">46-49</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_rateLimitPerSecond</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">_maxRateLimitPerSecond</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;RateLimited: rateLimitPerSecond too high&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span></code></pre>\n<h2 id=\"g-16-use-custom-errors-rather-than-revertrequire-strings-to-save-deployment-gas\" style=\"position:relative;\"><a href=\"#g-16-use-custom-errors-rather-than-revertrequire-strings-to-save-deployment-gas\" aria-label=\"g 16 use custom errors rather than revertrequire strings to save deployment gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-16] Use custom errors rather than <code>revert()</code>/<code>require()</code> strings to save deployment gas</h2>\n<ol>\n<li>File: contracts/oracle/ScalingPriceOracle.sol (Various lines throughout the <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/oracle/ScalingPriceOracle.sol\">file</a>)</li>\n<li>File: contracts/utils/Timed.sol (Various lines throughout the <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/Timed.sol\">file</a>)</li>\n<li>File: contracts/utils/MultiRateLimited.sol (Various lines throughout the <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/MultiRateLimited.sol\">file</a>)</li>\n<li>File: contracts/utils/RateLimited.sol (Various lines throughout the <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/utils/RateLimited.sol\">file</a>)</li>\n<li>File: contracts/volt/Volt.sol (Various lines throughout the <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/volt/Volt.sol\">file</a>)</li>\n<li>File: contracts/refs/OracleRef.sol (Various lines throughout the <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/refs/OracleRef.sol\">file</a>)</li>\n<li>File: contracts/refs/CoreRef.sol (Various lines throughout the <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/refs/CoreRef.sol\">file</a>)</li>\n<li>File: contracts/core/Permissions.sol (Various lines throughout the <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/core/Permissions.sol\">file</a>)</li>\n<li>File: contracts/peg/NonCustodialPSM.sol (Various lines throughout the <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/peg/NonCustodialPSM.sol\">file</a>)</li>\n</ol>\n<h2 id=\"g-17-not-using-the-named-return-variables-when-a-function-returns-wastes-deployment-gas\" style=\"position:relative;\"><a href=\"#g-17-not-using-the-named-return-variables-when-a-function-returns-wastes-deployment-gas\" aria-label=\"g 17 not using the named return variables when a function returns wastes deployment gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-17] Not using the named return variables when a function returns, wastes deployment gas</h2>\n<ol>\n<li>File: contracts/oracle/ScalingPriceOracle.sol (line <a href=\"https://github.com/code-423n4/2022-03-volt/blob/f1210bf3151095e4d371c9e9d7682d9031860bbd/contracts/oracle/ScalingPriceOracle.sol#L150\">150</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">sendChainlinkRequestTo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">, </span><span class=\"mtk12\">request</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-1\">High Risk Findings (1)</a></p>\n<ul>\n<li><a href=\"#h-01-oracle-price-does-not-compound\">[H-01] Oracle price does not compound</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-6\">Medium Risk Findings (6)</a></p>\n<ul>\n<li><a href=\"#m-01-vcon-address-change-not-persistent-across-protocol-components\">[M-01] <code>vcon</code> address change not persistent across protocol components</a></li>\n<li><a href=\"#m-02-setting-new-buffer-does-not-reduce-current-buffer-to-cap\">[M-02] Setting new buffer does not reduce current buffer to cap</a></li>\n<li><a href=\"#m-03-div-by-0\">[M-03] Div by 0</a></li>\n<li><a href=\"#m-04-oracleref-assumes-backup-oracle-uses-the-same-normalizer-as-main-oracle\">[M-04] <code>OracleRef</code> assumes backup oracle uses the same normalizer as main oracle</a></li>\n<li><a href=\"#m-05-updating-rate-limit-for-addresses-restores-their-entire-buffer-amount\">[M-05] Updating rate limit for addresses restores their entire buffer amount</a></li>\n<li><a href=\"#m-06-noncustodialpsm-can-become-insolvent-as-cpi-index-rises\">[M-06] <code>NonCustodialPSM</code> can become insolvent as CPI index rises</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#summary-1\">Summary</a></li>\n<li><a href=\"#1-roles-management\">1 Roles management</a></li>\n<li><a href=\"#02-oracleprice-will-be-imprecise\">02 <code>oraclePrice</code> will be imprecise</a></li>\n<li><a href=\"#03-unnecessary-usage-of-init\">03 Unnecessary usage of <code>init()</code></a></li>\n<li><a href=\"#04-using-ecrecover-is-against-best-practice\">04 Using ecrecover is against best practice</a></li>\n<li><a href=\"#05-valid-in-oraclepassthroughread-always-returns-true\">05 <code>valid</code> in <code>OraclePassThrough/read()</code> always returns true</a></li>\n<li><a href=\"#06-use-addresssendvalue-without-import-openzeppelincontractsutilsaddresssol\">06 Use Address.sendValue() without import @openzeppelin/contracts/utils/Address.sol</a></li>\n<li><a href=\"#07-setpublicchainlinktoken-only-called-on-chainid-1-and-42\">07 setPublicChainlinkToken only called on chainId 1 and 42</a></li>\n<li><a href=\"#08-unused-functions-and-modifiers\">08 Unused functions and modifiers</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#g-01-store-the-timestamp-endpoint-rather-than-re-calculating-it-every-time\">G-01 Store the timestamp endpoint rather than re-calculating it every time</a></li>\n<li><a href=\"#g-02-lots-of-duplicated-code-between-ratelimitedsol-and-multiratelimitedsol\">G-02 Lots of duplicated code between <code>RateLimited.sol</code> and <code>MultiRateLimited.sol</code></a></li>\n<li><a href=\"#g-03-requirerevert-strings-longer-than-32-bytes-cost-extra-gas\">G-03 <code>require()</code>/<code>revert()</code> strings longer than 32 bytes cost extra gas</a></li>\n<li><a href=\"#g-04-use-a-more-recent-version-of-solidity\">G-04 Use a more recent version of solidity</a></li>\n<li><a href=\"#g-05-use-a-more-recent-version-of-solidity\">G-05 Use a more recent version of solidity</a></li>\n<li><a href=\"#g-06-using-bools-for-storage-incurs-overhead\">G-06 Using <code>bool</code>s for storage incurs overhead</a></li>\n<li><a href=\"#g-07-internal-functions-only-called-once-can-be-inlined-to-save-gas\">G-07 <code>internal</code> functions only called once can be inlined to save gas</a></li>\n<li><a href=\"#g-08-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage\">G-08 State variables should be cached in stack variables rather than re-reading them from storage</a></li>\n<li><a href=\"#g-09-splitting-require-statements-that-use--saves-gas\">G-09 Splitting <code>require()</code> statements that use <code>&#x26;&#x26;</code> saves gas</a></li>\n<li><a href=\"#g-10-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead\">G-10 Usage of <code>uints</code>/<code>ints</code> smaller than 32 bytes (256 bits) incurs overhead</a></li>\n<li><a href=\"#g-11-expressions-for-constant-values-such-as-a-call-to-keccak256-should-use-immutable-rather-than-constant\">G-11 Expressions for constant values such as a call to <code>keccak256()</code>, should use <code>immutable</code> rather than <code>constant</code></a></li>\n<li><a href=\"#g-12-using-private-rather-than-public-for-constants-saves-gas\">G-12 Using <code>private</code> rather than <code>public</code> for constants, saves gas</a></li>\n<li><a href=\"#g-13-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function\">G-13 Duplicated <code>require()</code>/<code>revert()</code> checks should be refactored to a modifier or function</a></li>\n<li><a href=\"#g-14-state-variables-only-set-in-the-constructor-should-be-declared-immutable\">G-14 State variables only set in the constructor should be declared <code>immutable</code></a></li>\n<li><a href=\"#g-15-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function\">G-15 <code>require()</code> or <code>revert()</code> statements that check input arguments should be at the top of the function</a></li>\n<li><a href=\"#g-16-use-custom-errors-rather-than-revertrequire-strings-to-save-deployment-gas\">G-16 Use custom errors rather than <code>revert()</code>/<code>require()</code> strings to save deployment gas</a></li>\n<li><a href=\"#g-17-not-using-the-named-return-variables-when-a-function-returns-wastes-deployment-gas\">G-17 Not using the named return variables when a function returns, wastes deployment gas</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}