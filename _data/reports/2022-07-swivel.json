{
  "circa": {
    "title": "Swivel v3 contest",
    "sponsor": "Swivel",
    "slug": "2022-07-swivel",
    "date": "2022-09-29",
    "findings": "https://github.com/code-423n4/2022-07-swivel-findings/issues",
    "contest": 135
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the Swivel v3 smart contract system written in Solidity. The audit contest took place between July 12—July 15 2022.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>80 Wardens contributed reports to the Swivel v3 contest:</p>\n<ol>\n<li>scaraven</li>\n<li><a href=\"https://franfran.dev/\">Franfran</a></li>\n<li>GimelSec (<a href=\"https://twitter.com/rayn731\">rayn</a> and sces60107)</li>\n<li><a href=\"https://twitter.com/panprog\">panprog</a></li>\n<li>0x52</li>\n<li><a href=\"https://twitter.com/andyfeili\">oyc_109</a></li>\n<li>bardamu</li>\n<li><a href=\"https://twitter.com/devtooligan\">devtooligan</a></li>\n<li><a href=\"https://twitter.com/hansfriese\">hansfriese</a></li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li><a href=\"https://twitter.com/jonataspvt\">jonatascm</a></li>\n<li><a href=\"https://twitter.com/itsmeSTYJ\">itsmeSTYJ</a></li>\n<li>cccz</li>\n<li><a href=\"https://twitter.com/JoeStakey\">joestakey</a></li>\n<li>Bahurum</li>\n<li>0xDjango</li>\n<li><a href=\"https://twitter.com/c3ph_\">c3phas</a></li>\n<li><a href=\"twitter.com/rokinot\">rokinot</a></li>\n<li>0x1f8b</li>\n<li>sashik_eth</li>\n<li>ronnyx2017</li>\n<li><a href=\"https://twitter.com/bin2chen\">bin2chen</a></li>\n<li><a href=\"https://twitter.com/thePicodes\">Picodes</a></li>\n<li><a href=\"https://twitter.com/wookiemad\">MadWookie</a></li>\n<li><a href=\"https://benbaessler.com\">benbaessler</a></li>\n<li>rbserver</li>\n<li>0xSky</li>\n<li>auditor0517</li>\n<li>kyteg</li>\n<li>Bnke0x0</li>\n<li><a href=\"https://t.me/Road220\">m_Rassska</a></li>\n<li>Meera</li>\n<li>hake</li>\n<li>simon135</li>\n<li><a href=\"https://twitter.com/8olidity\">8olidity</a></li>\n<li>robee</li>\n<li><a href=\"https://twitter.com/0xNazgul\">0xNazgul</a></li>\n<li><a href=\"https://twitter.com/father0fBl0cks\">fatherOfBlocks</a></li>\n<li>_141345_</li>\n<li><a href=\"https://twitter.com/defsec_\">defsec</a></li>\n<li>_Adam</li>\n<li>Soosh</li>\n<li><a href=\"https://twitter.com/Sm4rty_\">Sm4rty</a></li>\n<li>slywaters</li>\n<li>Waze</li>\n<li><a href=\"https://instagram.com/vanensurya\">Funen</a></li>\n<li>ElKu</li>\n<li>Kaiziron</li>\n<li><a href=\"https://twitter.com/sm4rtcontr4ct\">JC</a></li>\n<li>ReyAdmirado</li>\n<li>Avci (<a href=\"https://github.com/0xarshia\">0xArshia</a> and <a href=\"https://twitter.com/danialmomtahani\">0xdanial</a>)</li>\n<li><a href=\"https://github.com/exd0tpy\">exd0tpy</a></li>\n<li>arcoun</li>\n<li>caventa</li>\n<li>Lambda</li>\n<li><a href=\"https://chom.dev\">Chom</a></li>\n<li>cryptphi</li>\n<li>0xNineDec</li>\n<li><a href=\"https://www.linkedin.com/in/georgi-nikolaev-georgiev-978253219\">gogo</a></li>\n<li>sach1r0</li>\n<li>aysha</li>\n<li>ak1</li>\n<li>Junnon</li>\n<li>PaludoX0</li>\n<li>rishabh</li>\n<li>pashov</li>\n<li><a href=\"https://twitter.com/mektigboy\">mektigboy</a></li>\n<li>ajtra</li>\n<li>0xsam</li>\n<li><a href=\"https://github.com/lyciumlee\">durianSausage</a></li>\n<li>0x040</li>\n<li><a href=\"https://mobile.twitter.com/tomj_bb\">TomJ</a></li>\n<li>samruna</li>\n<li><a href=\"https://twitter.com/fitraldys\">Fitraldys</a></li>\n<li>karanctf</li>\n<li><a href=\"https://twitter.com/0xheynacho\">ignacio</a></li>\n<li>CRYP70</li>\n<li><a href=\"https://github.com/Aymen1001\">Aymen0909</a></li>\n</ol>\n<p>This contest was judged by <a href=\"https://github.com/0xean\">0xean</a> and <a href=\"https://github.com/bghughes\">bghughes</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/itsmetechjay\">itsmetechjay</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 13 unique vulnerabilities. Of these vulnerabilities, 1 received a risk rating in the category of HIGH severity and 12 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 55 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 44 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2022-07-swivel\">C4 Swivel v3 contest repository</a>, and is composed of 5 smart contracts written in the Solidity programming language and includes 1,593 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-1\" style=\"position:relative;\"><a href=\"#high-risk-findings-1\" aria-label=\"high risk findings 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (1)</h1>\n<h2 id=\"h-01--mismatch-in-withdraw-between-yearn-and-other-protocols-can-prevent-users-from-redeeming-zctokens-and-permanently-lock-funds\" style=\"position:relative;\"><a href=\"#h-01--mismatch-in-withdraw-between-yearn-and-other-protocols-can-prevent-users-from-redeeming-zctokens-and-permanently-lock-funds\" aria-label=\"h 01  mismatch in withdraw between yearn and other protocols can prevent users from redeeming zctokens and permanently lock funds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/43\">[H-01]  Mismatch in <code>withdraw()</code> between Yearn and other protocols can prevent Users from redeeming zcTokens and permanently lock funds</a></h2>\n<p><em>Submitted by scaraven, also found by Franfran</em></p>\n<p>As defined in the docs for Euler, ERC4626, Compound and Aave, when withdrawing and depositing funds the <code>amount</code> specified corresponds excactly to how many of the underlying assets are deposited or withdrawn.</p>\n<p>However, as specified by <a href=\"https://docs.yearn.finance/vaults/smart-contracts/vault#withdraw\">Yearn</a>, the yearn withdraw <code>amount</code> parameter specifies how many <code>shares</code> are burnt instead of underlying assets retrieved. Two scenarios can occur from then on, if there are not enough shares then the transaction will revert and users will not be able to redeem the underlying assets from Yearn. If there are enough shares, then a higher number of assets will be withdrawn then expected (as assets per share will only increase). This means that once the user receives their underlying assets at a 1:1 peg the excess amounts will be permanently locked in the vault contract.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>All scenarios use Yearn finance as the protocol, the other protocols are unaffected.</p>\n<h4 id=\"scenario-1\" style=\"position:relative;\"><a href=\"#scenario-1\" aria-label=\"scenario 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenario #1</h4>\n<ol>\n<li>A yearn finance vault contains 50 shares and 200 uTokens all owned by Swivel.sol</li>\n<li>A user opens a zcToken position and deposits 100 uTokens into yearn receiving 100 zcTokens (and possibly a premium)</li>\n<li><code>100 / 200 * 50 = 25</code> shares are minted for the vault so we now have 75 shares and 300 uTokens in the yearn vault</li>\n<li>After maturity is achieved, the user tries to redeem their 100 zcTokens for uTokens</li>\n<li>The swivel.sol contract tries to withdraw the 100 uTokens, it instead withdraws 100 shares which is less than available so the transaction reverts and the user cannot withdraw all of their 100 uTokens and instead can only withdraw 75 uTokens.</li>\n</ol>\n<h4 id=\"scenario-2\" style=\"position:relative;\"><a href=\"#scenario-2\" aria-label=\"scenario 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenario #2</h4>\n<ol>\n<li>A yearn finance vault contains 50 shares and 100 uTokens all owned by Swivel.sol</li>\n<li>A user opens a zcToken position and deposits 100 uTokens into yearn receiving 100 zcTokens (and possibly a premium)</li>\n<li><code>100 / 100 * 50 = 50</code> shares are minted for the vault so we now have 100 shares and 200 uTokens in the yearn vault</li>\n<li>After maturity is achieved, the user tries to redeem their 100 zcTokens for uTokens</li>\n<li>The contract tries to retrieve 100 uTokens but instead withdraws 100 shares which corresponds to 200 uTokens</li>\n<li>User receives their 100 uTokens causing 100 uTokens to be left in the Swivel.sol contract which are now irretrievable</li>\n<li>If any user tries to withdraw their funds then the transaction will fail as no shares are left in the yearn vault</li>\n</ol>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>In the <code>withdraw()</code> function in Swivel.sol, calculating the price per share and use that to retrieve the correct number of underlying assets\ne.g.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pricePerShare</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IYearnVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">c</span><span class=\"mtk1\">).</span><span class=\"mtk11\">pricePerShare</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IYearnVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">c</span><span class=\"mtk1\">).</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">a</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">pricePerShare</span><span class=\"mtk1\">) &gt;= </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/43#issuecomment-1186017117\">JTraversa (Swivel) commented</a>:</strong></p>\n<blockquote>\n<p>Duplicate of <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/30\">#30</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/43#issuecomment-1186135113\">scaraven (warden) commented</a>:</strong></p>\n<blockquote>\n<p>I do not understand how this is a duplicate of #30, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/30\">#30</a> talks about a problem with <code>redeemUnderlying()</code> in Compound while this issue talks about a problem with <code>withdraw()</code> when using yearn.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/43#issuecomment-1186429670\">JTraversa (Swivel) commented</a>:</strong></p>\n<blockquote>\n<p>They both cannot be true at once however. Either the lib expects shares, or the lib expects assets. His suggestion notes inconsistency and recommends changing the compound redeem to align with yearn, while you note the inconsistency and recommend fixing the yearn math. At the end of the day the issue is the “mismatch”.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/43#issuecomment-1186439163\">scaraven (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Fair enough, that makes sense. I would still disagree with their interpretation of the issue, it is clear from the code that <code>a</code> represents the underlying assets. If <code>a</code> does represent the number of shares then other functions such as <code>authRedeemzcTokens</code> would be plain wrong because it would be redeeming each zcToken as if it was one share not one underlying asset.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/43#issuecomment-1186453137\">JTraversa (Swivel) commented</a>:</strong></p>\n<blockquote>\n<p>Yeah I actually kind of agree with you. We intended the implementation to align more with your finding. </p>\n<p>That said it <em>might</em> be worth a judge’s input. </p>\n<p>If they think they’re different, the other finding is invalid/should be disputed and this one is correct.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/43#issuecomment-1205884382\">bghughes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Confirmed, good issue and marked <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/30\">#30</a> as a duplicate.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/43#issuecomment-1234639671\">robrobbins (Swivel) resolved</a>:</strong></p>\n<blockquote>\n<p>Addressed: <a href=\"https://github.com/Swivel-Finance/gost/pull/437\">https://github.com/Swivel-Finance/gost/pull/437</a>.</p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-12\" style=\"position:relative;\"><a href=\"#medium-risk-findings-12\" aria-label=\"medium risk findings 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (12)</h1>\n<h2 id=\"m-01-with-most-functions-in-vaulttrackersol-users-can-call-them-only-once-after-maturity-has-been-reached\" style=\"position:relative;\"><a href=\"#m-01-with-most-functions-in-vaulttrackersol-users-can-call-them-only-once-after-maturity-has-been-reached\" aria-label=\"m 01 with most functions in vaulttrackersol users can call them only once after maturity has been reached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/116\">[M-01] With most functions in VaultTracker.sol, users can call them only once after maturity has been reached.</a></h2>\n<p><em>Submitted by hansfriese, also found by panprog</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L124\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L124</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L132\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L132</a></p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>With most functions in VaultTracker.sol, users can call them only once after maturity has been reached.</p>\n<p>So from the second call of any functions after maturity, it will revert and users might lose their funds or interests.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The main problem is that `vlt.exchangeRate<code></code> might be larger than maturityRate after maturity <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L132\">here</a>.</p>\n<p>Then it will revert from the second call with uint underflow <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L124\">here</a>.</p>\n<p>So such scenario is possible.</p>\n<ul>\n<li>Alice splits 1000 USDC into zcToken and nToken using <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L578\">splitUnderlying()</a></li>\n<li>After the market is matured, she withdraws back 1000 USDC using <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L600\">combineTokens()</a></li>\n<li>While combining tokens, <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L82\">removeNotional()</a> is called and vlt.exchangeRate will be set as an exchangeRate after maturity <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L104\">here</a>.</li>\n<li>From the <a href=\"https://docs.swivel.finance/developers/ubiquitous-language-v2/compound-language#exchange-rate\">explanation about Exchange Rate</a>, we know this ratio increases over time and also exchangeRate after the market is matured is greater than market.maturityRate from <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Marketplace/MarketPlace.sol#L220\">this function for zcToken interest</a></li>\n<li>So after removeNotional() is called, vlt.exchangeRate > maturityRate.</li>\n<li>After that, Alice calls <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L651\">redeemVaultInterest()</a> to claim interest, but it will revert <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L124\">here</a> with uint underflow error because maturityRate &#x3C; vlt.exchangeRate.</li>\n<li>So she can’t claim her interest forever.</li>\n<li>Also, if she claims interest first before calling <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L600\">combineTokens()</a>, she can’t get paid back here 1000 USDC forever because <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L82\">removeNotional()</a> will revert <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L94\">here</a> for the same reason.</li>\n</ul>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Solidity Visual Developer of VSCode</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We should save vlt.exchangeRate = maturityRate when maturityRate > 0 and exchangeRate > maturityRate.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">vlt.exchangeRate = (maturityRate &gt; 0 &amp;&amp; maturityRate &lt; exchangeRate) ? maturityRate : exchangeRate;</span></span></code></pre>\n<p>There are several places to modify for safety.</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L73\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L73</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L104\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L104</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L132\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L132</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L176\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L176</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L199\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L199</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L231\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L231</a></li>\n</ul>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/116#issuecomment-1185990904\">JTraversa (Swivel) disputed, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>I don’t actually disagree with most of the warden’s claims, just note that all of this would need to be intentional on the part of the user, and could not happen under any normal workflow of the protocol.</p>\n<p>E.g.:</p>\n<blockquote>\n<p>Alice splits 1000 USDC into zcToken and nToken using <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L578\">splitUnderlying()</a>\nAfter the market is martured, she withdraws back 1000 USDC using <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L600\">combineTokens()</a></p>\n</blockquote>\n<p>This interaction relies on a user calling <code>combineTokens</code> past maturity, which is 1. not possible from our UI 2. not beneficial in any way whatsoever, as redemption is explicitly done post maturity through <code>redeemZcToken</code>, + not using <code>redeemZcToken</code> would also fail to accrue post maturity interest.</p>\n<p>The same can be said of:</p>\n<blockquote>\n<p>Also, if she claims interest first before calling <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L600\">combineTokens()</a>, she can’t get paid back here 1000 USDC forever because <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L82\">removeNotional()</a> will revert <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L94\">here</a> for the same reason.</p>\n</blockquote>\n<p>There is no use case to calling <code>combineTokens</code> after maturity, meaning this specifically isn’t an issue in that direction either.</p>\n<p>Just disagreeing with severity because of the lack of potential impact in any reasonable operation of the protocol. A user would have to do this through a script, and the workflow would be unlikely to happen on accident.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/116#issuecomment-1204559301\">robrobbins (Swivel) resolved</a>:</strong></p>\n<blockquote>\n<p>Addressed: <a href=\"https://github.com/Swivel-Finance/gost/pull/414\">https://github.com/Swivel-Finance/gost/pull/414</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/116#issuecomment-1226463334\">0xean (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>I am somewhere between leaving this as High and downgrading to Medium.  I understand the sponsor’s points, but think it’s a pretty nasty rough edge to leave out there if a user interacted with the contract through etherscan or some other UI with less guard rails.  </p>\n<p>I am going to downgrade to Medium based on it being somewhat self inflicted and the probability of it therefore very low.  </p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-swivelsetfee-is-implemented-wrongly\" style=\"position:relative;\"><a href=\"#m-02-swivelsetfee-is-implemented-wrongly\" aria-label=\"m 02 swivelsetfee is implemented wrongly permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/117\">[M-02] Swivel.setFee() is implemented wrongly.</a></h2>\n<p><em>Submitted by hansfriese, also found by jonatascm</em></p>\n<p><code>Swivel.setFee()</code> is implemented wrongly.\nSwivel.feenominators won’t be set as expected.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L495\">This function</a> has a parameter “i” for the index of the new fee denomination but it isn’t used during the update.</p>\n<h3 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Solidity Visual Developer of VSCode</p>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L507\">This line</a> should be modified like below.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">feenominators[i[x]] = d[x];</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/117#issuecomment-1189941504\">JTraversa (Swivel) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Given this allows us to change fees post initialization, and doesn’t lead to the leakage of value or loss of funds, but a potential issue for admins solely (in a rare edge case where fees would even need to be changed), I might consider this low risk?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/117#issuecomment-1203375472\">bghughes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I agree with the warden here given that this is an incorrect implementation of the intended functionality. The warden’s suggestion shows that the function was not working as intended; if in production, for instance, this was not caught then calls to <code>setFee</code> would not work as intended and not set any fees across the markets. Instead, it would only populate the zero index of the 2nd-demensional array <code>uint16[4] public feenominators;</code> losing these values <code>[zcTokenInitiate, zcTokenExit, vaultInitiate, vaultExit]</code> and breaking functionality.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/117#issuecomment-1205908111\">JTraversa (Swivel) commented</a>:</strong></p>\n<blockquote>\n<p>Yeah I was kind of on the fence on this one thinking the method wouldn’t impact the current feenominators in the way you’ve stated, but because it actually could have an impact, and the event itself also would be misleading, removing the disagreement.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/117#issuecomment-1208525682\">robrobbins (Swivel) resolved</a>:</strong></p>\n<blockquote>\n<p>Addressed: <a href=\"https://github.com/Swivel-Finance/gost/pull/419\">https://github.com/Swivel-Finance/gost/pull/419</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-error-in-allowance-logic\" style=\"position:relative;\"><a href=\"#m-03-error-in-allowance-logic\" aria-label=\"m 03 error in allowance logic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/129\">[M-03] Error in allowance logic</a></h2>\n<p><em>Submitted by 0xDjango, also found by 0x1f8b, 8olidity, arcoun, Bahurum, caventa, csanuragjain, hansfriese, joestakey, jonatascm, Lambda, oyc_109, and ronnyx2017</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Tokens/ZcToken.sol#L112-L114\">https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Tokens/ZcToken.sol#L112-L114</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Tokens/ZcToken.sol#L132-L133\">https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Tokens/ZcToken.sol#L132-L133</a></p>\n<h3 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>There is an error in the allowance functionality to allow a non-owner to withdraw or redeem ZcTokens for the owner. Taking <code>ZcToken.redeem()</code> as an example, behold the following if/else block:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (holder == msg.sender) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            return redeemer.authRedeem(protocol, underlying, maturity, msg.sender, receiver, principalAmount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint256 allowed = allowance[holder][msg.sender];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (allowed &gt;= principalAmount) { revert Approvals(allowed, principalAmount); }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            allowance[holder][msg.sender] -= principalAmount;  </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            return redeemer.authRedeem(protocol, underlying, maturity, holder, receiver, principalAmount);</span></span></code></pre>\n<p>If the <code>msg.sender</code> is the holder, no check for allowance is needed. If the sender is not the holder, then their allowance is checked.</p>\n<p>The error lies in the if statement <code>if (allowed >= principalAmount) { revert Approvals(allowed, principalAmount); }</code>. This states that if the sender has equal to or more allowance than the principalAmount, revert.</p>\n<p>Therefore, if the sender has the proper allowance or more allowance than necessary, the transaction will revert. If the sender has less allowance than necessary, the transaction will still revert because of the <code>allowance[holder][msg.sender] -= principalAmount;</code> clause.</p>\n<p>In conclusion, there is no way to <code>withdraw()</code> or <code>redeem()</code> on behalf of another user.</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The fix is to simply change <code>>=</code> to <code>&#x3C;</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/129#issuecomment-1189926148\">JTraversa (Swivel) commented</a>:</strong></p>\n<blockquote>\n<p>Approval workflow doesnt leave funds at risk but is a nice to have, that plus scope and this <em>might</em> end up Low risk but I think Medium is appropriate as well.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/129#issuecomment-1200480311\">bghughes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>This is a good issue and I agree with the severity. I decided against making this High severity due to the fact that funds are not necessarily at risk; it’s just intended allowance functionality will not behave as expected. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/129#issuecomment-1203288875\">robrobbins (Swivel) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>See <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/180\">#180</a>. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/129#issuecomment-1203389433\">bghughes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Making this the main issue for the allowance flipped sign.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-vaulttracker-miscalculates-compounding-interest\" style=\"position:relative;\"><a href=\"#m-04-vaulttracker-miscalculates-compounding-interest\" aria-label=\"m 04 vaulttracker miscalculates compounding interest permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/136\">[M-04] VaultTracker miscalculates compounding interest</a></h2>\n<p><em>Submitted by GimelSec</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L65\">https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L65</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L100\">https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L100</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L130\">https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L130</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L172\">https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L172</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L191\">https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L191</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L228\">https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L228</a></p>\n<h3 id=\"impact-2\" style=\"position:relative;\"><a href=\"#impact-2\" aria-label=\"impact 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>VaultTracker neglect previously accrued interest while attempting to calculate new interest. This causes <code>nToken</code> holders to receive less yield than they should.</p>\n<p>All functions within VaultTracker that calculate interest are affected, including <code>addNotional</code>, <code>removeNotional</code>, <code>redeemInterest</code>, <code>transferNotionalFrom</code> and <code>transferNotionalFee</code>.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Consider the case where some user <code>N</code> tries to initiate a vault at 3 specific moments where <code>cToken</code> exchange rate is 5/10/20 respectively.\nThe corresponding market stays active and has not reached maturity. Additionally, <code>N</code> selects his premium volume to make <code>principalFilled</code> match the <code>cToken</code> exchange rate during each call to <code>initiateVaultFillingZcTokenInitiate</code>.\nWe recognize those exchange rates are most likely unrealistic, but we chose those for ease of demonstrating the bug. We also assume fees to be 0 for simplicity.</p>\n<p>For the first call to <code>Swivel.deposit</code></p>\n<ul>\n<li><code>a</code> = 5</li>\n<li><code>exchangeRate</code> = 5</li>\n</ul>\n<p>Assuming no additional fees while minting <code>cToken</code>, <code>N</code> will receive <code>cToken\\</code> for his 5 underlying tokens.</p>\n<p>For the matching call to <code>VaultTracker.addNotional</code></p>\n<ul>\n<li><code>a</code> = 5</li>\n<li><code>vlt.notional</code> = 0</li>\n<li><code>exchangeRate</code> = 5</li>\n</ul>\n<p>Since this is the first time adding <code>nToken</code> to the vault, there is no need to consider any accumulated interests, and we can assign <code>a</code> directly to <code>vlt.notional</code>.</p>\n<p>The result will be</p>\n<ul>\n<li><code>vlt.notional</code> = 5</li>\n<li><code>vlt.redeemable</code> = 0</li>\n<li><code>cToken</code> held by <code>Swivel</code> = 1</li>\n</ul>\n<p>For the second call to `Swivel.deposit, we have</p>\n<ul>\n<li><code>a</code> = 10</li>\n<li><code>exchangeRate</code> = 10</li>\n</ul>\n<p>The matching call to <code>VaultTracker.addNotional</code> has</p>\n<ul>\n<li><code>a</code> = 10</li>\n<li><code>vlt.notional</code> = 5</li>\n<li><code>vlt.redeemable</code> = 0</li>\n<li><code>exchangeRate</code> = 10</li>\n<li><code>vlt.exchangeRate</code> = 5</li>\n</ul>\n<p>The <code>yield</code> is derived from <code>((exchangeRate * 1e26) / vlt.exchangeRate) - 1e26</code> = <code>((10 * 1e26) / 5) - 1e26</code> = 1e26\nApplying this to <code>vlt.notional</code>, we get <code>interest</code> = <code>1e26 * 5 / 1e26</code> = 5</p>\n<p>This results in</p>\n<ul>\n<li><code>vlt.notional</code> = 5+10 = 15</li>\n<li><code>vlt.redeemable</code> = 0+5 = 5</li>\n<li><code>cToken</code> held by <code>Swivel</code> = 1+1 = 2</li>\n</ul>\n<p>Now comes the last call to <code>Swivel.deposit</code>, where</p>\n<ul>\n<li><code>a</code> = 20</li>\n<li><code>exchangeRate</code> = 20</li>\n</ul>\n<p><code>VaultTracker.addNotional</code> has</p>\n<ul>\n<li><code>a</code> = 20</li>\n<li><code>vlt.notional</code> = 15</li>\n<li><code>vlt.redeemable</code> = 5</li>\n<li><code>exchangeRate</code> = 20</li>\n<li><code>vlt.exchangeRate</code> = 10</li>\n</ul>\n<p><code>yield</code> = <code>((20 * 1e26) / 10) - 1e26</code> = 1e26\n<code>interest</code> = <code>1e26 * 15 / 1e26</code> = 15</p>\n<p>So we finally end up with</p>\n<ul>\n<li><code>vlt.notional</code> = 15+20 = 35</li>\n<li><code>vlt.redeemable</code> = 5+15 = 20</li>\n<li><code>cToken</code> held by <code>Swivel</code> = 2+1 = 3</li>\n</ul>\n<!---->\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Swivel{</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  function deposit(uint8 p, address u, address c, uint256 a) internal returns (bool) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (p == uint8(Protocols.Compound)) { // TODO is Rari a drop in here?</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      return ICompound(c).mint(a) == 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">VaultTracker{</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  function addNotional(address o, uint256 a) external authorized(admin) returns (bool) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 exchangeRate = Compounding.exchangeRate(protocol, cTokenAddr);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    Vault memory vlt = vaults[o];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (vlt.notional &gt; 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      uint256 yield;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // if market has matured, calculate marginal interest between the maturity rate and previous position exchange rate</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // otherwise, calculate marginal exchange rate between current and previous exchange rate.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      if (maturityRate &gt; 0) { // Calculate marginal interest</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        yield = ((maturityRate * 1e26) / vlt.exchangeRate) - 1e26;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        yield = ((exchangeRate * 1e26) / vlt.exchangeRate) - 1e26;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      uint256 interest = (yield * vlt.notional) / 1e26;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // add interest and amount to position, reset cToken exchange rate</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      vlt.redeemable += interest;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      vlt.notional += a;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      vlt.notional = a;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    vlt.exchangeRate = exchangeRate;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    vaults[o] = vlt;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>Now take a step back and think about the actual value of 3 <code>cToken</code> when <code>exchangeRate = 20</code>, it should be pretty obvious that the value tracked by <code>VaultTracker</code> = 35 + 20 = 55 is lesser than the actual value of <code>cToken</code> held by <code>Swivel</code> = 20*3 = 60.</p>\n<p>This is due to <code>VaultTracker</code> neglecting that previously accrued interest should also be considered while calculating new interest.</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>For all interest calculations, use <code>vlt.notional + vlt.redeemable</code> instead of just <code>vlt.notional</code> as <code>yield</code> base.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/136#issuecomment-1185979753\">JTraversa (Swivel) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>I believe that this would be valid if the <code>redeemable</code> was not redeemable by the user at any point in time.</p>\n<p>While interest accrues, it accrues to the <code>redeemable</code> balance which is withdrawn at any time. </p>\n<p>That said, in most cases, the math required to store and do the additional calculation marginal interest on the <code>redeemable</code> balance is largely a UX consideration? Should users be required to redeem their <code>redeemable</code> to earn interest or should it be compounded naturally though bloat tx costs? </p>\n<p>Should we force additional costs on a per transaction basis (that likely costs more than the interest itself for the vast majority of users), or should we assume that once significant enough <code>redeemable</code> is accrued to earn reasonable further interest, it will be redeemed by the user. </p>\n<p>(e.g. with example being 400% interest, and assuming an (optimistic) 5% APY is possible, the example would take ~28 years to replicate, and gas costs for transactions in that 28 years would be significant).</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/136#issuecomment-1193348594\">JTraversa (Swivel) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Thought about this one a bit more and it might slip in as acknowledged and disagreed with severity as it’s more value leakage than anything else.</p>\n<p>It’s a design decision, but could still be considered a detriment so perhaps not worth disputing all together?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/136#issuecomment-1219849345\">robrobbins (Swivel) commented</a>:</strong></p>\n<blockquote>\n<p>This is a design feature. We could just as easily dismiss this all together by stating <em>it is now documented that .notional is non compounding</em>. I don’t think we should do that however as I agree with @JTraversa here that some acknowledgement should happen for bringing this up. But it is not a <strong>risk</strong> in any situation.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/136#issuecomment-1220016605\">robrobbins (Swivel) resolved</a>:</strong></p>\n<blockquote>\n<p>Addressed: <a href=\"https://github.com/Swivel-Finance/gost/pull/427\">https://github.com/Swivel-Finance/gost/pull/427</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/136#issuecomment-1226426531\">0xean (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Going to reduce the severity on this to Medium as it has some pretty large external factors to end up in a scenario where it leaks any real value.  </p>\n</blockquote>\n<hr>\n<h2 id=\"m-05-should-use--instead-of-\" style=\"position:relative;\"><a href=\"#m-05-should-use--instead-of-\" aria-label=\"m 05 should use  instead of  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/21\">[M-05] Should use >= instead of ></a></h2>\n<p><em>Submitted by oyc_109</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L86\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L86</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L158\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L158</a></p>\n<p>The comparison should be ‘a >= vlt.notional’ instead of a > vlt.notional.</p>\n<p>Otherwise dust amounts will always be left in vlt.notional when calling <code>removeNotional()</code> or <code>transferNotionalFrom()</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/21#issuecomment-1186019971\">JTraversa (Swivel) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>While the leakage is potentially … 1 wei, its leakage nonetheless and a frontend would surely provide the max amount most of the time leading to reverts.</p>\n<p>Maybe a quick severity review from wardens but happy with where its at.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/21#issuecomment-1203398732\">bghughes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I agree that this is quite low stakes, given that there is non-zero potential leakage I think the warden should get credit for this as a Medium Risk vulnerability. Per the C4 juging criteria:</p>\n<blockquote>\n<p>2 — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.</p>\n</blockquote>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/21#issuecomment-1211292178\">robrobbins (Swivel) resolved</a>:</strong></p>\n<blockquote>\n<p>Addressed: <a href=\"https://github.com/Swivel-Finance/gost/pull/423\">https://github.com/Swivel-Finance/gost/pull/423</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-yearn-vault-integration-is-broken\" style=\"position:relative;\"><a href=\"#m-06-yearn-vault-integration-is-broken\" aria-label=\"m 06 yearn vault integration is broken permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/29\">[M-06] Yearn vault integration is broken</a></h2>\n<p><em>Submitted by bardamu</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fbf94f87994d91dce75c605a1822ec6d6d7e9e74/Marketplace/Compounding.sol#L55-L56\">https://github.com/code-423n4/2022-07-swivel/blob/fbf94f87994d91dce75c605a1822ec6d6d7e9e74/Marketplace/Compounding.sol#L55-L56</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fbf94f87994d91dce75c605a1822ec6d6d7e9e74/Marketplace/MarketPlace.sol#L64-L73\">https://github.com/code-423n4/2022-07-swivel/blob/fbf94f87994d91dce75c605a1822ec6d6d7e9e74/Marketplace/MarketPlace.sol#L64-L73</a></p>\n<h3 id=\"impact-3\" style=\"position:relative;\"><a href=\"#impact-3\" aria-label=\"impact 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Yearn integration is broken, making it impossible to create a <code>MarketPlace</code> associated with a Yearn vault.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>Compounding.sol</code> attempts to resolve the <code>underlying</code> token implemented by supported protocols:</p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fbf94f87994d91dce75c605a1822ec6d6d7e9e74/Marketplace/Compounding.sol#L50-L64\">https://github.com/code-423n4/2022-07-swivel/blob/fbf94f87994d91dce75c605a1822ec6d6d7e9e74/Marketplace/Compounding.sol#L50-L64</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function underlying(uint8 p, address c) internal view returns (address) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (p == uint8(Protocols.Compound)) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      return ICompoundToken(c).underlying();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else if (p == uint8(Protocols.Rari)) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      return ICompoundToken(c).underlying();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else if (p == uint8(Protocols.Yearn)) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      return IYearnVault(c).underlying();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else if (p == uint8(Protocols.Aave)) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      return IAaveToken(c).UNDERLYING_ASSET_ADDRESS();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else if (p == uint8(Protocols.Euler)) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      return IEulerToken(c).underlyingAsset();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      return IErc4626(c).asset();      </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p>As can be seen in the excerpt above, the contract will attempt to access <code>IYearnVault(c).underlying();</code> when integrating with a Yearn vault. <strong>Problem is this property is not present in Yearn vaults.</strong> Therefore this operation will always revert.</p>\n<p>In particular, this would not allow to create a <code>MarketPlace</code> associated with a Yearn vault even though the protocol is stated as supported.</p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fbf94f87994d91dce75c605a1822ec6d6d7e9e74/Marketplace/MarketPlace.sol#L64-L73\">https://github.com/code-423n4/2022-07-swivel/blob/fbf94f87994d91dce75c605a1822ec6d6d7e9e74/Marketplace/MarketPlace.sol#L64-L73</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function createMarket(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  uint8 p,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  uint256 m,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  address c,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  string memory n,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  string memory s</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">) external authorized(admin) unpaused(p) returns (bool) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  if (swivel == address(0)) { revert Exception(21, 0, 0, address(0), address(0)); }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  address underAddr = Compounding.underlying(p, c);</span></span></code></pre>\n<p>Correct underlying token address in Yearn vaults is stored in the <code>token</code> property.</p>\n<p><a href=\"https://github.com/yearn/yearn-vaults/blob/beff27908bb2ae017ed73b773181b9b93f7435ad/contracts/Vault.vy#L74\">https://github.com/yearn/yearn-vaults/blob/beff27908bb2ae017ed73b773181b9b93f7435ad/contracts/Vault.vy#L74</a></p>\n<h3 id=\"tools-used-3\" style=\"position:relative;\"><a href=\"#tools-used-3\" aria-label=\"tools used 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VIM</p>\n<h4 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Access the underlying token of a Yearn vault through the <code>token</code> property instead of the non-existent <code>underlying</code> which will cause a revert and the inability to create marketplaces associated with the protocol.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/29#issuecomment-1188445803\">JTraversa (Swivel) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Given no funds would be at risk as this is an issue that would exist at the time of admin’s market creation, I’d probably say that this issue is likely ~Low or so.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/29#issuecomment-1204024747\">bghughes (judge) decreaased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Agreed that funds are not necessarily at risk but this is a broken functionality of the protocol. Given: </p>\n<blockquote>\n<p>There are a few primary targets for concern:</p>\n<ol>\n<li>Ensuring the new <code>Compounding.sol</code> library properly calculates the exchangeRate for each external protocol.</li>\n<li>Ensuring the new <code>withdraw</code> and <code>deposit</code> methods on <code>Swivel.sol</code> properly encapsulate external protocol interactions.</li>\n</ol>\n</blockquote>\n<p>I believe this should be a Medium Risk issue.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/29#issuecomment-1211116106\">robrobbins (Swivel) commented</a>:</strong></p>\n<blockquote>\n<p>The example given is incorrect. <code>Compounding.Underlying()</code> is correct as <code>Compounding</code> is our library that abstracts the actual call to get the asset in question. </p>\n<p>The actual error is in the Compounding lib where <code>.Protocol</code> resolves to <code>Protocols.Yearn</code>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/29#issuecomment-1211145751\">robrobbins (Swivel) resolved</a>:</strong></p>\n<blockquote>\n<p>Addressed: <a href=\"https://github.com/Swivel-Finance/gost/pull/422\">https://github.com/Swivel-Finance/gost/pull/422</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-07-erc20-incorrect-check-on-returnedaddress-in-permit-results-in-unlimited-approval-of-zero-address\" style=\"position:relative;\"><a href=\"#m-07-erc20-incorrect-check-on-returnedaddress-in-permit-results-in-unlimited-approval-of-zero-address\" aria-label=\"m 07 erc20 incorrect check on returnedaddress in permit results in unlimited approval of zero address permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/72\">[M-07] ERC20 Incorrect check on returnedAddress in permit() results in unlimited approval of zero address</a></h2>\n<p><em>Submitted by devtooligan</em></p>\n<p>When creating ERC20.sol from Solmate, a <code>require()</code> in <code>permit()</code> was converted to a custom error incorrectly.</p>\n<p>It now reads:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">recoveredAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">recoveredAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Invalid</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>So if the <code>recoveredAddress</code> is non-zero and the <code>recoveredAddress</code> is not <code>owner</code> it will error. But if the <code>recoveredAddress == 0x0</code> then it will pass this check.</p>\n<p>Anyone can permit themselves as a <code>spender</code> using the zero address for any token which inherits this ERC20 implementation.  So, for example, someone could redeem some zcTokens for underlying, then transfer the burned tokens back to themselves and repeat, draining the protocol.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">attack</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IZcToken</span><span class=\"mtk1\"> </span><span class=\"mtk12\">zctoken</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">zctoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">permit</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0x0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),  </span><span class=\"mtk3\">// using 0 for r,s,v returns address(0x0) from ecrecover()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">assert</span><span class=\"mtk1\">(</span><span class=\"mtk12\">zctoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">allowance</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0x0</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)), </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">zctoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0x0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">zctoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0x0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                                    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// assumes attacker has previously acquired notional</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IMarketPlace</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mp</span><span class=\"mtk1\">).</span><span class=\"mtk11\">burnZcTokenRemovingNotional</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">zctoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">protocol</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">zctoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">underlying</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">zctoken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">maturity</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                                    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// .. repeat until drained, then move on to next token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Creator/Erc20.sol b/Creator/Erc20.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index a1f72b0..8464626 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Creator/Erc20.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Creator/Erc20.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -162,7 +162,7 @@ contract Erc20 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (recoveredAddress != address(0) &amp;&amp; recoveredAddress != owner) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (recoveredAddress == address(0) || recoveredAddress != owner) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 revert Invalid(msg.sender, owner);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/72#issuecomment-1186006635\">JTraversa (Swivel) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>This would rely on the zcTokens themselves to sit on address(0) right? </p>\n<p>So the big thing would be that whatever burn implementation the token uses must actually remove the tokens from the supply rather than sending them to address(0). (which this implementation does)</p>\n<p>That said, its clear the statement wasn’t as intended (or that block would have been removed).</p>\n<p>With scope questions this should probably be low-med or disputed?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/72#issuecomment-1204570102\">robrobbins (Swivel) resolved</a>:</strong></p>\n<blockquote>\n<p>Addressed: <a href=\"https://github.com/Swivel-Finance/gost/pull/415\">https://github.com/Swivel-Finance/gost/pull/415</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/72#issuecomment-1205862918\">bghughes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>It’s an interesting scope question as it questions a dependency - that said, this sort of low-level dependency, if used throughout the protocol, could jeopardize funds in a vault and break ERC-20 assumptions. I think the issue should stand given the risk.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/72#issuecomment-1205904983\">JTraversa (Swivel) commented</a>:</strong></p>\n<blockquote>\n<p>Yea agreed.</p>\n<p>That said I’m more emphasizing the other part for the severity claim?:</p>\n<blockquote>\n<p>So the big thing would be that whatever burn implementation the token uses must actually remove the tokens from the supply rather than sending them to address(0). (which this implementation does)</p>\n</blockquote>\n<p>Though I think we are ameliorating this anyways, the issue would only arise if somehow address(0) was broken, as discussed by the warden himself in this twitter thread: <a href=\"https://twitter.com/devtooligan/status/1554709426652688384\">https://twitter.com/devtooligan/status/1554709426652688384</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/72#issuecomment-1226102504\">0xean (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Given the current implementation does not send these tokens to address(0) to burn them I think this should be downgraded to Medium severity. </p>\n<p>The “external requirement” would be someone / some protocol trying to burn tokens be sending them to address(0) instead of calling burn.  </p>\n<p>I don’t see a direct attack path given the current implementation but do think this is above QA, Med seems right.  </p>\n</blockquote>\n<hr>\n<h2 id=\"m-08-zctokenwithdraw-will-send-user-0-tokens-if-called-after-maturity-deadline-but-before-market-is-set-mature\" style=\"position:relative;\"><a href=\"#m-08-zctokenwithdraw-will-send-user-0-tokens-if-called-after-maturity-deadline-but-before-market-is-set-mature\" aria-label=\"m 08 zctokenwithdraw will send user 0 tokens if called after maturity deadline but before market is set mature permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/32\">[M-08] ZcToken.withdraw will send user 0 tokens if called after maturity deadline but before market is set mature</a></h2>\n<p><em>Submitted by panprog</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Tokens/ZcToken.sol#L99\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Tokens/ZcToken.sol#L99</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Tokens/ZcToken.sol#L92\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Tokens/ZcToken.sol#L92</a></p>\n<h3 id=\"impact-4\" style=\"position:relative;\"><a href=\"#impact-4\" aria-label=\"impact 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>If <code>maturityRate</code> is still <code>0</code> after maturity deadline (because no transactions setting <code>maturityRate</code> have been executed yet), then <code>previewWithdraw</code> calculated amount (used by <code>ZcToken.withdraw</code> function) is <code>0</code> and thus <code>withdraw</code> function will send <code>0</code> underlying tokens to user, which might be very confusing to user. Subsequent call to the same function will send him correct amount.</p>\n<p>The same problem applies to all view functions in <code>ZcToken</code> contract - they use saved market <code>maturityRate</code>, which can be <code>0</code> even past deadline time and functions revert or return <code>0</code> in this case.</p>\n<p>Incorrect withdrawal behaviour:</p>\n<ol>\n<li>Bob has some <code>ZcToken</code>s.</li>\n<li>Right at the time of maturity Bob tries to withdraw his underlying tokens by calling <code>ZcToken.withdraw</code> with some underlying amount.</li>\n<li>Instead of receiving corresponding amount, Bob receives nothing (but transaction still succeeds and he uses gas for it).</li>\n</ol>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li><code>withdraw</code>: calculates <code>previewAmount</code> from <code>previewWithdraw</code></li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Tokens/ZcToken.sol#L99\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Tokens/ZcToken.sol#L99</a></p>\n<ol start=\"2\">\n<li><code>previewWithdraw</code>: multiplication by <code>maturityRate</code> returns 0</li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Tokens/ZcToken.sol#L92\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Tokens/ZcToken.sol#L92</a></p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add <code>getMaturityRate</code> function to <code>ZcToken</code>, which will return either market’s <code>maturityRate</code> or (if it’s <code>0</code>) current market’s <code>exchangeRate</code>. Use this function instead of <code>maturityRate</code> everywhere across <code>ZcToken</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/32\">JTraversa (Swivel) confirmed</a></strong> </p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/32#issuecomment-1211080261\">robrobbins (Swivel) resolved</a>:</strong></p>\n<blockquote>\n<p>Addressed: <a href=\"https://github.com/Swivel-Finance/gost/pull/421\">https://github.com/Swivel-Finance/gost/pull/421</a></p>\n</blockquote>\n<hr>\n<h2 id=\"m-09-vaulttracker-has-the-wrong-admin\" style=\"position:relative;\"><a href=\"#m-09-vaulttracker-has-the-wrong-admin\" aria-label=\"m 09 vaulttracker has the wrong admin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/36\">[M-09] VaultTracker has the wrong admin</a></h2>\n<p><em>Submitted by itsmeSTYJ, also found by GimelSec</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/main/Marketplace/MarketPlace.sol#L77\">https://github.com/code-423n4/2022-07-swivel/blob/main/Marketplace/MarketPlace.sol#L77</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/main/Creator/Creator.sol#L41\">https://github.com/code-423n4/2022-07-swivel/blob/main/Creator/Creator.sol#L41</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L32\">https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L32</a></p>\n<h3 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p><code>MarketPlace.createMarket()</code> calls <code>Creator.create()</code> which creates an instance of <code>ZcToken</code> and a <code>VaultTracker</code>. <code>VaultTracker</code> takes <code>msg.sender</code> as the admin. We know that if contract A calls contract B which calls contract C, <code>msg.sender</code> in contract C is the address of B i.e. the <code>msg.sender</code> in VaultTracker is the address of the creator contract. However, the creator contract is not able (and not supposed to) interact with the VaultTracker unlike the marketplace contract.</p>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Modify the constructor of the VaultTracker contract so that the creator contract can pass in msg.sender (MarketPlace’s address) to be used as admin.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/36\">JTraversa (Swivel) confirmed</a></strong> </p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/36#issuecomment-1205869654\">bghughes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Using this as the main <code>admin</code> constructor issue. Given it is admin related, I believe going with the Medium issue instead of #134 makes sense.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/36#issuecomment-1209654129\">robrobbins (Swivel) resolved</a>:</strong></p>\n<blockquote>\n<p>See <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/134\">#134</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-10-unpausedp-modifier-missing-in-authredeem-function\" style=\"position:relative;\"><a href=\"#m-10-unpausedp-modifier-missing-in-authredeem-function\" aria-label=\"m 10 unpausedp modifier missing in authredeem function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/64\">[M-10] unpaused(p) modifier missing in authRedeem function</a></h2>\n<p><em>Submitted by csanuragjain, also found by cccz</em></p>\n<p>Due to missing modifier, User will be able to redeem zcTokens and withdraw underlying even in paused Market. This happens due to missing unpaused(p) modifier</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li>Lets see function definition for authRedeem function</li>\n</ol>\n<!---->\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function authRedeem(uint8 p, address u, uint256 m, address f, address t, uint256 a) public authorized(markets[p][u][m].zcToken) returns (uint256 underlyingAmount)</span></span></code></pre>\n<ol start=\"2\">\n<li>Observe that unpaused(p) modifier is missing</li>\n<li>This means if Marketplace is placed under paused state by Admin, then also User can call authRedeem at Marketplace via withdraw/redeem at ZcToken contract.</li>\n<li>This will allow Users to withdraw in paused state which is incorrect</li>\n</ol>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add unpaused(p) modifier in authRedeem function</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function authRedeem(uint8 p, address u, uint256 m, address f, address t, uint256 a) public authorized(markets[p][u][m].zcToken) unpaused(p) returns (uint256 underlyingAmount) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/64\">JTraversa (Swivel) confirmed</a></strong> </p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/64#issuecomment-1208729320\">robrobbins (Swivel) resolved</a>:</strong></p>\n<blockquote>\n<p>Addressed: <a href=\"https://github.com/Swivel-Finance/gost/pull/420\">https://github.com/Swivel-Finance/gost/pull/420</a></p>\n</blockquote>\n<hr>\n<h2 id=\"m-11-loss-of-funds-in-an-underlying-protocol-would-cause-catostrophic-loss-of-funds-for-swivel\" style=\"position:relative;\"><a href=\"#m-11-loss-of-funds-in-an-underlying-protocol-would-cause-catostrophic-loss-of-funds-for-swivel\" aria-label=\"m 11 loss of funds in an underlying protocol would cause catostrophic loss of funds for swivel permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/71\">[M-11] Loss of funds in an underlying protocol would cause catostrophic loss of funds for swivel</a></h2>\n<p><em>Submitted by 0x52</em></p>\n<p>Loss of all user funds.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>This exploit stems from a quirk in the way that exchange rate is tracked for matured positions. We first need to breakdown how interest is calculate for a matured position.</p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L123-L132\">https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L123-L132</a></p>\n<p>In L124 the yield for a matured position is calculated as the difference between the previous exchange ratio and the maturity rate. This counts on the fact the exchange rate of the underlying protocol never decreases, as it always set the previous exchange rate to the current exchange rate after yield is calculated regardless of whether it is mature or not. The assumption is that the current exchange rate will always be greater than or equal to the maturity exchange rate. If it is higher then L124 will revert due to underflow and if it is equal then L124 will return yield = 0. The issue comes in when this assumption is invalidated. This would happen were the underlying protocol to lose value (hacked, UST depeg, etc.). With the loss of value, the exchange rate would drop, allowing a user to repeatedly redeem their matured position until all funds from the affected protocol are drained.</p>\n<p>Example:\nImagine a yearn vault that takes USDC as the underlying token. It’s current price per share is 1.25e6 (1.25 USDC per vault share). Swivel has a recently expired VaultTracker.sol for this yearn vault for which mature() is called, setting maturityRate = 1.25e6. Now let’s imagine that one small strategy deployed by the vault is compromised and the vault loses 4% of it’s USDC. Now the vault will return 1.2e6 as the price per share. When calling redeemInterest for the first time, vlt.exchangeRate will be updated to 1.2e6 in L132. The next time redeemInterest is called it will pay the difference between 1.25e6 (maturityRate) and 1.2e6 (vlt.exchangeRate). redeemInterest can be called repeatedly like this until all USDC deposited in the yearn vault by Swivel users has been drained.</p>\n<p>Additionally the user in question would not even need to have an expired position before the loss of funds occurred. SplitUnderlying in Swivel.sol has no checks to keep a user from minting previously expired market. After the loss of funds occurred the malicious user could use SplitUnderlying to create nTokens for the expired market, then carry out the exploit</p>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The impact of such an event could be decreased with changes. In splitUnderlying add:</p>\n<p><code>require(block.timestamp &#x3C; m)</code></p>\n<p>This prevents nTokens from being created after expiration which dramatically reduces the ability to take advantage of the opportunity. As for redeemInterest, add the following line after L124:</p>\n<p><code>vlt.notional = 0</code></p>\n<p>This would clear the notional balance of the user when redeeming after maturity, making it impossible to call repeatedly and reduces the chances that any users have a notional balance to exploit it should an event like this happen.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/71#issuecomment-1186008338\">JTraversa (Swivel) disputed, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>I’m unsure if this is a proper report / should be accepted given similar issues exist when you integrate nearly any DeFi primitive.</p>\n<p>You have risks that your integrated protocols could break, but make assumptions that they will not while placing failsafes like pause mechanism in your protocol.</p>\n<p>That said, the suggestions dont really solve anything, though we may end up taking them to heart? </p>\n<p>If the issue is that funds are lost when integrated protocol funds are lost and an attacker can then abuse these methods then the solutions provided just make someone spend more on gas in whatever flash loan tx they use to drain the protocol or slightly reduce the likelihood than an attacker will be in the correct position.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/71#issuecomment-1204013030\">bghughes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Note that this builds on <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/79\">#79</a> and I believe it is a good issue. The warden lays out a clear case in which Vault funds can be drained if these conditions occur:</p>\n<ul>\n<li>A market has matured</li>\n<li>The exchange rate of the underlying vault token drops below the set <code>maturityRate</code>.</li>\n</ul>\n<p>I agree that integrations can break @JTraversa, but given that Swivel aims to be the place people can go to deposit vault tokens and get ZCB + yield tokens (including allowing 4626 vaults) this is an attack vector IMO. Moreover, Yearn uses some discrete strategies in which the price per share realistically could reduce or even be manipulated in atomicity in a flash loan attack (which may seem counterintuitive bc generally lending vaults are supposed to be “up only”).</p>\n<p>Confirming this as a High-Risk issue as an attack vector to drain all vault funds is present. Please let me know Sponsor if you have any questions.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/71#issuecomment-1205711627\">robrobbins (Swivel) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Much of this is addressed with: <a href=\"https://github.com/Swivel-Finance/gost/pull/417\">https://github.com/Swivel-Finance/gost/pull/417</a> (cannot mint post maturity).</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/71#issuecomment-1227202390\">0xean (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Downgrading to Medium as it requires external factors for this situation to present itself and the attack to occur.  </p>\n</blockquote>\n<hr>\n<h2 id=\"m-12-interface-definition-error\" style=\"position:relative;\"><a href=\"#m-12-interface-definition-error\" aria-label=\"m 12 interface definition error permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/39\">[M-12] Interface definition error</a></h2>\n<p><em>Submitted by bin2chen, also found by 0x52, 0xDjango, 0xSky, auditor0517, Picodes, rokinot, ronnyx2017, and scaraven</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Marketplace/Interfaces.sol#L52\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Marketplace/Interfaces.sol#L52</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Marketplace/MarketPlace.sol#L164\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Marketplace/MarketPlace.sol#L164</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L620\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L620</a></p>\n<p><a href=\"https://github.com/Swivel-Finance/gost/blob/a76ac859df049527c3e5df85e706dec6ffa0e2bb/test/swivel/Swivel.sol#L10\">https://github.com/Swivel-Finance/gost/blob/a76ac859df049527c3e5df85e706dec6ffa0e2bb/test/swivel/Swivel.sol#L10</a></p>\n<h3 id=\"impact-5\" style=\"position:relative;\"><a href=\"#impact-5\" aria-label=\"impact 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p><code>MarketPlace.authRedeem()</code> call interface <code>ISwivel.authRedeem()</code> but Swivel contract  does not have this method only method  “authRedeemZcToken()“.</p>\n<p>The result will cause <code>MarketPlace.authRedeem()</code> to fail forever, thus causing <code>ZcToken.withdraw()</code> to fail forever.</p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>MarketPlace.sol call <code>ISwivel.authRedeem()</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  function authRedeem(uint8 p, address u, uint256 m, address f, address t, uint256 a) public authorized(markets[p][u][m].zcToken) returns (uint256 underlyingAmount) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     .....</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      ISwivel(swivel).authRedeem(p, u, market.cTokenAddr, t, a);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     .....</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     .....</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      ISwivel(swivel).authRedeem(p, u, market.cTokenAddr, t, amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     ....</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>Swivel.sol does not have <code>authRedeem()</code> ,only <code>authRedeemZcToken()</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  function authRedeemZcToken(uint8 p, address u, address c, address t, uint256 a) external authorized(marketPlace) returns(bool) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // redeem underlying from compounding</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (!withdraw(p, u, c, a)) { revert Exception(7, 0, 0, address(0), address(0)); }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // transfer underlying back to msg.sender</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    Safe.transfer(IErc20(u), t, a);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return (true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Swivel contract need declare “is ISwivel” and change method name.</p>\n<p>Other contracts should also declare “is Iinterfacename” to avoid method name errors\nlike IMarketPlace.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/39#issuecomment-1188432197\">JTraversa (Swivel) commented</a>:</strong></p>\n<blockquote>\n<p>Duplicate of <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/186\">#186</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/39#issuecomment-1203993402\">bghughes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Main issue for the non-existent function call and interface definition error.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/39#issuecomment-1226518688\">0xean (judge) increased severity to High and commented</a>:</strong></p>\n<blockquote>\n<p>This shows a direct path to funds being locked, upgrading the severity (and all duplicates) to high. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/39#issuecomment-1229878805\">JTraversa (Swivel) commented</a>:</strong></p>\n<blockquote>\n<p>Hmm, I think this could go either way.</p>\n<p>Technically because this is a redundant method meant to add compliance with EIP-5095, there aren’t actually user funds locked because they can follow the normal <code>redeem</code> workflow. So it is specifically that EIP-5095 compliance that would be broken.</p>\n<p>Plus personally I’d also want to reward more interesting or critical errors rather than a mis-spelled or defined interface.</p>\n<p>That said, I’d of course err towards the judge’s decision, but maybe that extra context helps ! </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/39#issuecomment-1230214222\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@JTraversa - appreciate the note and context. </p>\n<p>Can we walk through that flow to confirm the code path?  I would downgrade to M if there is an alternate flow.</p>\n<p>We both agree this function doesn’t work - <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Marketplace/MarketPlace.sol#L148\">https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Marketplace/MarketPlace.sol#L148</a></p>\n<p>Which afaict also means that these calls are not functional either. </p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L98\">https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L98</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L124\">https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L124</a></p>\n<p>Can you direct me to the alternate flow for redemption and I will confirm and move back to M</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/39#issuecomment-1230996235\">JTraversa (Swivel) commented</a>:</strong></p>\n<blockquote>\n<p>For sure!</p>\n<p>So there are two ways to redeem. Given custody sits on Swivel.sol, one is to call the zcToken (ERC-5095), which then itself calls authorized methods that bubble up from zcToken -> marketplace -> swivel. This is the path that appears to be broken, the <code>authRedeem</code>.</p>\n<p>That said, the primary path (the one we’ve used in previous Swivel versions) is one that starts with a redemption method directly on Swivel.sol, and has the instruction to burn bubbled down from swivel -> marketplace -> zcToken.</p>\n<p>That is available on Swivel.sol here: <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L634\">Link</a></p>\n<p>And its call to Marketplace.sol here: <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Marketplace/MarketPlace.sol#L176\">Link</a></p>\n<p>Hopefully that clarifies a bit :) </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/39#issuecomment-1231004724\">0xean (judge) decreased severity back to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Yup, thank you. Downgraded back to M as user funds are not locked given the alternate path. </p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 55 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/200\">report highlighted below</a> by <strong>joestakey</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/175\">Bahurum</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/185\">c3phas</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/135\">sashik_eth</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/47\">benbaessler</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/163\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/102\">defsec</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/104\">simon135</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/143\">hake</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/95\">Meera</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/28\">robee</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/45\">Bnke0x0</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/67\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/19\">oyc_109</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/110\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/88\">rbserver</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/165\">Chom</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/150\">Sm4rty</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/76\">Soosh</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/112\">kyteg</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/62\">csanuragjain</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/137\">GimelSec</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/160\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/189\">cryptphi</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/197\">Kaiziron</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/170\">scaraven</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/127\">0xNineDec</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/106\">0x52</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/123\">_141345_</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/94\">_Adam</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/125\">0xDjango</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/59\">jonatascm</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/118\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/38\">itsmeSTYJ</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/82\">8olidity</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/40\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/188\">gogo</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/34\">cccz</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/171\">slywaters</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/141\">sach1r0</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/198\">aysha</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/192\">rokinot</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/85\">Picodes</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/154\">ak1</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/75\">Junnon</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/89\">exd0tpy</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/194\">JC</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/99\">Waze</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/42\">ReyAdmirado</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/108\">ElKu</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/70\">PaludoX0</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/83\">rishabh</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/172\">pashov</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/113\">Avci</a>, and <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/179\">mektigboy</a>.</em></p>\n<h2 id=\"l-01-contracts-should-inherit-their-interfaces\" style=\"position:relative;\"><a href=\"#l-01-contracts-should-inherit-their-interfaces\" aria-label=\"l 01 contracts should inherit their interfaces permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-01] Contracts should inherit their interfaces</h2>\n<p>Contract implementations should inherit their interfaces.  Extending an interface ensures that all function signatures are correct, and catches mistakes introduced (e.g. through errant keystrokes)</p>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<h4 id=\"marketplacesol\" style=\"position:relative;\"><a href=\"#marketplacesol\" aria-label=\"marketplacesol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Marketplace.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L8\">contract MarketPlace {</a></p>\n<p>Does not inherit <code>IMarketPlace</code>, defined <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Interfaces.sol#L37\">here</a></p>\n<h3 id=\"recommended-mitigation-steps-12\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-12\" aria-label=\"recommended mitigation steps 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-8: contract MarketPlace {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+8: contract MarketPlace is IMarketPlace {</span></span></span></code></pre>\n<h2 id=\"l-02-immutable-addresses-lack-zero-address-check\" style=\"position:relative;\"><a href=\"#l-02-immutable-addresses-lack-zero-address-check\" aria-label=\"l 02 immutable addresses lack zero address check permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-02] Immutable addresses lack zero-address check</h2>\n<p>Constructors should check the address written in an immutable address variable is not the zero address.</p>\n<p>Note: while it has been indicated by the sponsor input validation will be on the front-end side to relieve users from unnecessary gas spendings, this issue here concerns constructor functions, ie when the contract is deployed by the team.</p>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>11 instances include:</p>\n<h4 id=\"swivelsol\" style=\"position:relative;\"><a href=\"#swivelsol\" aria-label=\"swivelsol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L71\">marketPlace = m</a></p>\n<h4 id=\"marketplacesol-1\" style=\"position:relative;\"><a href=\"#marketplacesol-1\" aria-label=\"marketplacesol 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MarketPlace.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L40\">creator = c</a></p>\n<h4 id=\"vaulttrackersol\" style=\"position:relative;\"><a href=\"#vaulttrackersol\" aria-label=\"vaulttrackersol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VaultTracker.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L33\">protocol = p</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L34\">maturity = m</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L35\">cTokenAddr = c</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L36\">swivel = s</a></p>\n<h4 id=\"zctokensol\" style=\"position:relative;\"><a href=\"#zctokensol\" aria-label=\"zctokensol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZcToken.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L33\">protocol = _protocol</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L34\">underlying = _underlying</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L35\">maturity = _maturity</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L36\">cToken = _cToken</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L37\">redeemer = IRedeemer(_redeemer)</a></p>\n<h3 id=\"recommended-mitigation-steps-13\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-13\" aria-label=\"recommended mitigation steps 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a zero address check for the immutable variables aforementioned.</p>\n<h2 id=\"l-03-safesol-does-not-check-contract-existence\" style=\"position:relative;\"><a href=\"#l-03-safesol-does-not-check-contract-existence\" aria-label=\"l 03 safesol does not check contract existence permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-03] Safe.sol does not check contract existence</h2>\n<p><code>Safe.sol</code> is used to perform ERC20 transfers in the protocols contracts. It does not check for contract existence, meaning any call to an address with no bytecode (the address zero or an EOA) would not revert upon <code>Safe.transfer</code>.</p>\n<p>If there is a market with an underlying token being an empty bytecode address, this means a user can initiate a position without actually transferring any token to <code>Swivel</code> - as all protocols except Aave do not check for the underlying token.</p>\n<p>As only an admin can add a market, the risk of this issue affecting the protocols is low.</p>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Safe.sol#L79-L87\"><code>Safe.transfer</code>()</a> and <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Safe.sol#L112-L119\"><code>Safe.transferFrom</code></a>, <code>success</code> is set to 1 if the call returns <code>1</code>, which is the case if it made to an address with no bytecode.</p>\n<h3 id=\"recommended-mitigation-steps-14\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-14\" aria-label=\"recommended mitigation steps 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use <code>extcodesize()</code> in <code>Safe.sol</code> transfer functions to ensure the destination contract has bytecode.</p>\n<h2 id=\"l-04-setters-should-check-the-input-value\" style=\"position:relative;\"><a href=\"#l-04-setters-should-check-the-input-value\" aria-label=\"l 04 setters should check the input value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-04] Setters should check the input value</h2>\n<p>Setters should check the input value - i.e. make revert if it is the zero address or zero.</p>\n<p>Note: while it has been indicated by the sponsor input validation will be on the front-end side to relieve users from unnecessary gas spendings, this issue here concerns constructor functions or setters called by authorized admins, not users, and most likely by interacting with the contract directly (for instance using Etherscan or Hardhat) and not with a front-end.</p>\n<h3 id=\"proof-of-concept-13\" style=\"position:relative;\"><a href=\"#proof-of-concept-13\" aria-label=\"proof of concept 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>5 instances:</p>\n<h4 id=\"swivelsol-1\" style=\"position:relative;\"><a href=\"#swivelsol-1\" aria-label=\"swivelsol 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L428-L432\">function setAdmin(address a)</a></p>\n<h4 id=\"marketplacesol-2\" style=\"position:relative;\"><a href=\"#marketplacesol-2\" aria-label=\"marketplacesol 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MarketPlace.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L45-L50\">function setSwivel(address s)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L53-L56\">function setAdmin(address a)</a></p>\n<h4 id=\"creatorsol\" style=\"position:relative;\"><a href=\"#creatorsol\" aria-label=\"creatorsol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creator.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L47-L50\">function setAdmin(address a)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L54-L61\">function setMarketPlace(address m)</a></p>\n<h3 id=\"recommended-mitigation-steps-15\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-15\" aria-label=\"recommended mitigation steps 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add non-zero checks to the setters aforementioned.</p>\n<h2 id=\"n-01-2256---1-can-be-re-written\" style=\"position:relative;\"><a href=\"#n-01-2256---1-can-be-re-written\" aria-label=\"n 01 2256   1 can be re written permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-01] <code>2**256 - 1</code> can be re-written</h2>\n<h3 id=\"proof-of-concept-14\" style=\"position:relative;\"><a href=\"#proof-of-concept-14\" aria-label=\"proof of concept 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<h4 id=\"vaulttrackersol-1\" style=\"position:relative;\"><a href=\"#vaulttrackersol-1\" aria-label=\"vaulttrackersol 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VaultTracker.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L549\">uint256 max = 2**256 - 1</a></p>\n<h2 id=\"n-02-constants-instead-of-magic-numbers\" style=\"position:relative;\"><a href=\"#n-02-constants-instead-of-magic-numbers\" aria-label=\"n 02 constants instead of magic numbers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-02] Constants instead of magic numbers</h2>\n<p>It is best practice to use constant variables rather than literal values to make the code easier to understand and maintain.</p>\n<h3 id=\"proof-of-concept-15\" style=\"position:relative;\"><a href=\"#proof-of-concept-15\" aria-label=\"proof of concept 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>30 instances:</p>\n<h4 id=\"vaulttrackersol-2\" style=\"position:relative;\"><a href=\"#vaulttrackersol-2\" aria-label=\"vaulttrackersol 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VaultTracker.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L60\">yield = ((maturityRate * 1e26) / vlt.exchangeRate) - 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L62\">yield = ((exchangeRate * 1e26) / vlt.exchangeRate) - 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L65\">uint256 interest = (yield * vlt.notional) / 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L94\">yield = ((maturityRate * 1e26) / vlt.exchangeRate) - 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L97\">yield = ((exchangeRate * 1e26) / vlt.exchangeRate) - 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L100\">uint256 interest = (yield * vlt.notional) / 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L124\">yield = ((maturityRate * 1e26) / vlt.exchangeRate) - 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L127\">yield = ((exchangeRate * 1e26) / vlt.exchangeRate) - 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L130\">uint256 interest = (yield * vlt.notional) / 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L167\">yield = ((maturityRate * 1e26) / from.exchangeRate) - 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L169\">yield = ((exchangeRate * 1e26) / from.exchangeRate) - 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L172\">uint256 interest = (yield * from.notional) / 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L186\">yield = ((maturityRate * 1e26) / to.exchangeRate) - 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L188\">yield = ((exchangeRate * 1e26) / to.exchangeRate) - 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L191\">uint256 newVaultInterest = (yield * to.notional) / 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L224\">yield = ((maturityRate * 1e26) / sVault.exchangeRate) - 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L226\">yield = ((exchangeRate * 1e26) / sVault.exchangeRate) - 1e26</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L228\">uint256 newVaultInterest = (yield * sVault.notional) / 1e26</a></p>\n<h3 id=\"recommended-mitigation-steps-16\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-16\" aria-label=\"recommended mitigation steps 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Define constant variables for the literal values aforementioned.</p>\n<h2 id=\"n-03-events-indexing\" style=\"position:relative;\"><a href=\"#n-03-events-indexing\" aria-label=\"n 03 events indexing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-03] Events indexing</h2>\n<p>Events should use the maximum amount of indexed fields: up to three parameters. This makes it easier to filter for specific values in front-ends.</p>\n<h3 id=\"proof-of-concept-16\" style=\"position:relative;\"><a href=\"#proof-of-concept-16\" aria-label=\"proof of concept 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>3 instances:</p>\n<h4 id=\"lending-marketcomptrollersol\" style=\"position:relative;\"><a href=\"#lending-marketcomptrollersol\" aria-label=\"lending marketcomptrollersol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>lending-market/Comptroller.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L52\">event ScheduleWithdrawal(address indexed token, uint256 hold)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L58\">event ScheduleApproval(address indexed token, uint256 hold)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L62\">event ScheduleFeeChange(uint256 hold)</a></p>\n<h3 id=\"recommended-mitigation-steps-17\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-17\" aria-label=\"recommended mitigation steps 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add indexed fields to these events so that they have the maximum number of indexed fields possible.</p>\n<h2 id=\"n-04-event-should-be-emitted-in-setters\" style=\"position:relative;\"><a href=\"#n-04-event-should-be-emitted-in-setters\" aria-label=\"n 04 event should be emitted in setters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-04] Event should be emitted in setters</h2>\n<p>Setters should emit an event so that Dapps can detect important changes to storage.</p>\n<h3 id=\"proof-of-concept-17\" style=\"position:relative;\"><a href=\"#proof-of-concept-17\" aria-label=\"proof of concept 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>5 instances:</p>\n<h4 id=\"swivelsol-2\" style=\"position:relative;\"><a href=\"#swivelsol-2\" aria-label=\"swivelsol 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L428-L432\">function setAdmin(address a)</a></p>\n<h4 id=\"marketplacesol-3\" style=\"position:relative;\"><a href=\"#marketplacesol-3\" aria-label=\"marketplacesol 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MarketPlace.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L45-L50\">function setSwivel(address s)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L53-L56\">function setAdmin(address a)</a></p>\n<h4 id=\"creatorsol-1\" style=\"position:relative;\"><a href=\"#creatorsol-1\" aria-label=\"creatorsol 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creator.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L47-L50\">function setAdmin(address a)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L54-L61\">function setMarketPlace(address m)</a></p>\n<h3 id=\"recommended-mitigation-steps-18\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-18\" aria-label=\"recommended mitigation steps 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Emit an event in all setters.</p>\n<h2 id=\"n-05-function-order\" style=\"position:relative;\"><a href=\"#n-05-function-order\" aria-label=\"n 05 function order permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-05] Function order</h2>\n<p>Functions should be ordered following the <a href=\"https://docs.soliditylang.org/en/v0.8.15/style-guide.html#order-of-functions\">Solidity conventions</a>.</p>\n<h3 id=\"proof-of-concept-18\" style=\"position:relative;\"><a href=\"#proof-of-concept-18\" aria-label=\"proof of concept 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<h4 id=\"swivelsol-3\" style=\"position:relative;\"><a href=\"#swivelsol-3\" aria-label=\"swivelsol 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<ul>\n<li>The modifier <code>authorized</code> is placed at the end of the contract, while it should be placed before every other function:</li>\n</ul>\n<!---->\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Inside each contract, library or interface, use the following order:</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Type declarations</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">State variables</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Events</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Modifiers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Functions</span></span></code></pre>\n<h4 id=\"marketplacesol-4\" style=\"position:relative;\"><a href=\"#marketplacesol-4\" aria-label=\"marketplacesol 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MarketPlace.sol</h4>\n<ul>\n<li>the modifiers <code>authorized</code> and <code>unpaused</code> are placed at the end of the contract, while it should be placed before every other function</li>\n<li>the internal function <code>calculateReturn()</code> is placed before several external functions, while it <code>external</code> functions should be declared before <code>internal</code> ones:</li>\n</ul>\n<!---->\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Functions should be grouped according to their visibility and ordered:</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">constructor</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">receive function (if exists)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">fallback function (if exists)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">external</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">public</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">internal</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">private</span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-19\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-19\" aria-label=\"recommended mitigation steps 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Place the functions in the correct order.</p>\n<h2 id=\"n-06-long-lines\" style=\"position:relative;\"><a href=\"#n-06-long-lines\" aria-label=\"n 06 long lines permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-06] Long lines</h2>\n<p>Source codes lines should be limited to a certain number of characters. A good practice is to ensure the code does not require a horizontal scroll bar on GitHub. The lines mentioned below have that problem</p>\n<h3 id=\"proof-of-concept-19\" style=\"position:relative;\"><a href=\"#proof-of-concept-19\" aria-label=\"proof of concept 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>14 instances:</p>\n<h4 id=\"swivelsol-4\" style=\"position:relative;\"><a href=\"#swivelsol-4\" aria-label=\"swivelsol 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L137\">    if (!mPlace.custodialInitiate(o.protocol, o.underlying, o.maturity, o.maker, msg.sender, principalFilled)) { revert Exception(8, 0, 0, address(0), address(0)); }</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L205\">if (!IMarketPlace(marketPlace).p2pZcTokenExchange(o.protocol, o.underlying, o.maturity, o.maker, msg.sender, a)) { revert Exception(11, 0, 0, address(0), address(0)); }</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L229\">if (!mPlace.p2pVaultExchange(o.protocol, o.underlying, o.maturity, o.maker, msg.sender, principalFilled)) { revert Exception(12, 0, 0, address(0), address(0)); }</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L301\">if (!IMarketPlace(marketPlace).p2pZcTokenExchange(o.protocol, o.underlying, o.maturity, msg.sender, o.maker, principalFilled)) { revert Exception(11, 0, 0, address(0), address(0)); }</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L331\">if (!IMarketPlace(marketPlace).p2pVaultExchange(o.protocol, o.underlying, o.maturity, msg.sender, o.maker, a)) { revert Exception(12, 0, 0, address(0), address(0)); }</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L399\">if (!mPlace.custodialExit(o.protocol, o.underlying, o.maturity, msg.sender, o.maker, principalFilled)) { revert Exception(9, 0, 0, address(0), address(0)); }</a></p>\n<h4 id=\"marketplacesol-5\" style=\"position:relative;\"><a href=\"#marketplacesol-5\" aria-label=\"marketplacesol 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MarketPlace.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L148\">  function authRedeem(uint8 p, address u, uint256 m, address f, address t, uint256 a) public authorized(markets[p][u][m].zcToken) returns (uint256 underlyingAmount) {</a></p>\n<h4 id=\"zctokensol-1\" style=\"position:relative;\"><a href=\"#zctokensol-1\" aria-label=\"zctokensol 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZcToken.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L31\">    constructor(uint8 _protocol, address _underlying, uint256 _maturity, address _cToken, address _redeemer, string memory _name, string memory _symbol, uint8 _decimals) </a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L47\">return (principalAmount * IRedeemer(redeemer).getExchangeRate(protocol, cToken) / IRedeemer(redeemer).markets(protocol, underlying, maturity).maturityRate);</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L56\">return (underlyingAmount * IRedeemer(redeemer).markets(protocol, underlying, maturity).maturityRate / IRedeemer(redeemer).getExchangeRate(protocol, cToken));</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L74\">return (principalAmount * IRedeemer(redeemer).getExchangeRate(protocol, cToken) / IRedeemer(redeemer).markets(protocol, underlying, maturity).maturityRate);</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L83\">return (balanceOf[owner] * IRedeemer(redeemer).getExchangeRate(protocol, cToken) / IRedeemer(redeemer).markets(protocol, underlying, maturity).maturityRate);</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L92\">return (underlyingAmount * IRedeemer(redeemer).markets(protocol, underlying, maturity).maturityRate / IRedeemer(redeemer).getExchangeRate(protocol, cToken));</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L120\">/// @notice At or after maturity, burns exactly <code>principalAmount</code> of Principal Tokens from <code>owner</code> and sends underlyingAmount of underlying tokens to <code>receiver</code>.</a></p>\n<h3 id=\"recommended-mitigation-steps-20\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-20\" aria-label=\"recommended mitigation steps 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Split the lines to avoid needing a scroll bar to look through the code.</p>\n<h2 id=\"n-07-natspec\" style=\"position:relative;\"><a href=\"#n-07-natspec\" aria-label=\"n 07 natspec permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-07] Natspec</h2>\n<p>Important functions should have a @notice comment to describe what they perform.</p>\n<h3 id=\"proof-of-concept-20\" style=\"position:relative;\"><a href=\"#proof-of-concept-20\" aria-label=\"proof of concept 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<h4 id=\"marketplacesol-6\" style=\"position:relative;\"><a href=\"#marketplacesol-6\" aria-label=\"marketplacesol 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MarketPlace.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L148\">function authRedeem(uint8 p, address u, uint256 m, address f, address t, uint256 a) public authorized(markets[p][u][m].zcToken) returns (uint256 underlyingAmount)</a></p>\n<h3 id=\"recommended-mitigation-steps-21\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-21\" aria-label=\"recommended mitigation steps 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a @notice comment to this function.</p>\n<h2 id=\"n-08-non-library-files-should-use-fixed-compiler-versions\" style=\"position:relative;\"><a href=\"#n-08-non-library-files-should-use-fixed-compiler-versions\" aria-label=\"n 08 non library files should use fixed compiler versions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-08] Non-library files should use fixed compiler versions</h2>\n<p>Contracts should be compiled using a fixed compiler version. Locking the pragma helps ensure that contracts do not accidentally get deployed using a different compiler version with which they have been tested the most.</p>\n<h3 id=\"proof-of-concept-21\" style=\"position:relative;\"><a href=\"#proof-of-concept-21\" aria-label=\"proof of concept 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<h4 id=\"zctokensol-2\" style=\"position:relative;\"><a href=\"#zctokensol-2\" aria-label=\"zctokensol 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZcToken.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L2\">pragma solidity ^0.8.4</a></p>\n<h3 id=\"recommended-mitigation-steps-22\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-22\" aria-label=\"recommended mitigation steps 22 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Used a fixed compiler version.</p>\n<h2 id=\"n-09-non-library-files-should-use-the-same-compiler-version\" style=\"position:relative;\"><a href=\"#n-09-non-library-files-should-use-the-same-compiler-version\" aria-label=\"n 09 non library files should use the same compiler version permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-09] Non-library files should use the same compiler version</h2>\n<p>Contracts within the scope should be compiled using the same compiler version.</p>\n<h3 id=\"proof-of-concept-22\" style=\"position:relative;\"><a href=\"#proof-of-concept-22\" aria-label=\"proof of concept 22 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>All the files in scope have the compiler version set to <code>0.8.13</code>, while <code>ZcToken.sol</code> has it set to <code>^0.8.4</code> .</p>\n<h3 id=\"recommended-mitigation-steps-23\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-23\" aria-label=\"recommended mitigation steps 23 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use the same compiler version throughout the contracts.</p>\n<h2 id=\"n-10-open-todos\" style=\"position:relative;\"><a href=\"#n-10-open-todos\" aria-label=\"n 10 open todos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-10] Open TODOs</h2>\n<p>There are open TODOs in the code. Code architecture, incentives, and error handling/reporting questions/issues should be resolved before deployment.</p>\n<h3 id=\"proof-of-concept-23\" style=\"position:relative;\"><a href=\"#proof-of-concept-23\" aria-label=\"proof of concept 23 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>16 instances:</p>\n<h4 id=\"lending-marketcomptrollersol-1\" style=\"position:relative;\"><a href=\"#lending-marketcomptrollersol-1\" aria-label=\"lending marketcomptrollersol 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>lending-market/Comptroller.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L33\">// TODO immutable?</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L120\">// TODO cheaper to assign amount here or keep the ADD?</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L192\">// TODO assign amount or keep the ADD?</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L221\">// TODO assign amount or keep ADD?</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L286\">// TODO assign amount or keep the ADD?</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L317\">// TODO assign amount or keep the ADD?</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L347\">// TODO assign amount or keep the ADD?</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#382\">// TODO assign amount or keep the ADD?</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L707\">// TODO as stated elsewhere, we may choose to simply return true in all and not attempt to measure against any expected return</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L708\">// TODO is Rari a drop in here?</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L716\">// TODO explain the Aave deposit args</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L721\">// TODO explain the 0 (primary account)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L740\">// TODO as stated elsewhere, we may choose to simply return true in all and not attempt to measure against any expected return</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L741\">// TODO is Rari a drop in here?</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L748\">// TODO explain the withdraw args</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L752\">// TODO explain the 0</a></p>\n<h3 id=\"recommended-mitigation-steps-24\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-24\" aria-label=\"recommended mitigation steps 24 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Remove the TODOs.</p>\n<h2 id=\"n-11-public-functions-can-be-external\" style=\"position:relative;\"><a href=\"#n-11-public-functions-can-be-external\" aria-label=\"n 11 public functions can be external permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-11] Public functions can be external</h2>\n<p>It is good practice to mark functions as <code>external</code> instead of <code>public</code> if they are not called by the contract where they are defined.</p>\n<h3 id=\"proof-of-concept-24\" style=\"position:relative;\"><a href=\"#proof-of-concept-24\" aria-label=\"proof of concept 24 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>1 instance:</p>\n<h4 id=\"marketplacesol-7\" style=\"position:relative;\"><a href=\"#marketplacesol-7\" aria-label=\"marketplacesol 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MarketPlace.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L148\">function authRedeem(uint8 p, address u, uint256 m, address f, address t, uint256 a) public</a></p>\n<h3 id=\"recommended-mitigation-steps-25\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-25\" aria-label=\"recommended mitigation steps 25 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Declare it as <code>external</code> instead of <code>public</code>.</p>\n<h2 id=\"n-12-tautological-code\" style=\"position:relative;\"><a href=\"#n-12-tautological-code\" aria-label=\"n 12 tautological code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-12] Tautological code</h2>\n<p>Remove tautologies.</p>\n<h3 id=\"proof-of-concept-25\" style=\"position:relative;\"><a href=\"#proof-of-concept-25\" aria-label=\"proof of concept 25 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>5 instances:</p>\n<h4 id=\"swivelsol-5\" style=\"position:relative;\"><a href=\"#swivelsol-5\" aria-label=\"swivelsol 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L712\">return IYearn(c).deposit(a) >= 0</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L727\">return IErc4626(c).deposit(a, address(this)) >= 0</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L745\">return IYearn(c).withdraw(a) >= 0</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L749\">return IAave(aaveAddr).withdraw(u, a, address(this)) >= 0</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L757\">return IErc4626(c).withdraw(a, address(this), address(this)) >= 0</a></p>\n<h3 id=\"recommended-mitigation-steps-26\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-26\" aria-label=\"recommended mitigation steps 26 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Remove the tautologies. Simply replace them with a <code>return true</code> statement.</p>\n<h2 id=\"n-13-typos\" style=\"position:relative;\"><a href=\"#n-13-typos\" aria-label=\"n 13 typos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-13] Typos</h2>\n<p>There are a few typos in the contracts.</p>\n<h3 id=\"proof-of-concept-26\" style=\"position:relative;\"><a href=\"#proof-of-concept-26\" aria-label=\"proof of concept 26 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>3 instances:</p>\n<h4 id=\"swivelsol-6\" style=\"position:relative;\"><a href=\"#swivelsol-6\" aria-label=\"swivelsol 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L682\">Varifies</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L682\">it’s signature.</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L747\">withraw</a></p>\n<h3 id=\"recommended-mitigation-steps-27\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-27\" aria-label=\"recommended mitigation steps 27 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Correct the typos.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/200#issuecomment-1212605119\">robrobbins (Swivel) commented</a>:</strong></p>\n<blockquote>\n<p>Contracts should explicitly implement their interface (if available). Agreed. Addressed here: <a href=\"https://github.com/Swivel-Finance/gost/pull/424\">https://github.com/Swivel-Finance/gost/pull/424</a></p>\n<p>Reference to VaultTracker having <code>2**256-1</code> is incorrect. Is in Swivel.sol. agree with assessment tho, changed.</p>\n<p>Casting int returns as booleans is not tautological, particularly in the context of what that method is doing (normalizing returns).</p>\n<p>MarketPlace.authRedeem as <code>external</code> agree - changed.</p>\n<p>Removing TODOS agree: removing.</p>\n<p>Various issues above addressed here: <a href=\"https://github.com/Swivel-Finance/gost/pull/425\">https://github.com/Swivel-Finance/gost/pull/425</a>.</p>\n<p>Event is now in place for <code>setAdmin</code> the only one that is needed. the other setters are one-time only by the deploying admin.</p>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this contest, 44 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/148\">report highlighted below</a> by <strong>joestakey</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/174\">MadWookie</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/176\">m_Rassska</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/100\">rbserver</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/78\">kyteg</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/44\">Bnke0x0</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/96\">Meera</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/184\">c3phas</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/142\">hake</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/155\">ajtra</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/122\">_141345_</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/84\">0xsam</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/93\">_Adam</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/109\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/164\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/173\">slywaters</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/77\">Soosh</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/98\">Waze</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/187\">rokinot</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/27\">robee</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/133\">sashik_eth</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/107\">ElKu</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/17\">durianSausage</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/159\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/147\">Sm4rty</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/169\">0x040</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/18\">oyc_109</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/46\">benbaessler</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/193\">JC</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/41\">ReyAdmirado</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/195\">TomJ</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/105\">simon135</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/2\">samruna</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/111\">Avci</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/66\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/61\">csanuragjain</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/92\">exd0tpy</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/182\">Fitraldys</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/152\">karanctf</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/190\">Kaiziron</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/126\">0xDjango</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/74\">ignacio</a>, <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/48\">CRYP70</a>, and <a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/183\">Aymen0909</a>.</em></p>\n<h2 id=\"g-01-address-mappings-can-be-combined-in-a-single-mapping\" style=\"position:relative;\"><a href=\"#g-01-address-mappings-can-be-combined-in-a-single-mapping\" aria-label=\"g 01 address mappings can be combined in a single mapping permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Address mappings can be combined in a single mapping</h2>\n<p>Combining mappings of <code>address</code> into a single mapping of <code>address</code> to a <code>struct</code> can save a <code>Gssset</code> (20000 gas) operation per mapping combined.\nThis also makes it cheaper for functions reading and writing several of these mappings by saving a <code>Gkeccak256</code> operation- 30 gas.</p>\n<h3 id=\"proof-of-concept-27\" style=\"position:relative;\"><a href=\"#proof-of-concept-27\" aria-label=\"proof of concept 27 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>1 instance:</p>\n<h4 id=\"swivelsol-7\" style=\"position:relative;\"><a href=\"#swivelsol-7\" aria-label=\"swivelsol 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L21\">mapping (address => uint256) public withdrawals</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L23\">mapping (address => uint256) public approvals</a></p>\n<h3 id=\"recommended-mitigation-steps-28\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-28\" aria-label=\"recommended mitigation steps 28 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Combine the <code>address</code> mappings aforementionned in a single <code>address</code> => <code>struct</code> mapping, for instance</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- mapping (address =&gt; uint256) public withdrawals;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  /// @dev maps a token address to a point in time, a hold, after which an approval can be made</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- mapping (address =&gt; uint256) public approvals;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ struct Hold {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint256 withdrawals;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint256 approvals;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ mapping (address =&gt; Hold) public holds;</span></span></span></code></pre>\n<h2 id=\"g-02-bytes-constant-are-cheaper-than-string-constants\" style=\"position:relative;\"><a href=\"#g-02-bytes-constant-are-cheaper-than-string-constants\" aria-label=\"g 02 bytes constant are cheaper than string constants permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] Bytes constant are cheaper than string constants</h2>\n<p>If the string can fit into 32 bytes, then <code>bytes32</code> is cheaper than <code>string</code>. <code>string</code> is a dynamically sized-type, which has current limitations in Solidity compared to a statically sized variable.\nThis means extra gas spent upon deployment and every time the constant is read.</p>\n<h3 id=\"proof-of-concept-28\" style=\"position:relative;\"><a href=\"#proof-of-concept-28\" aria-label=\"proof of concept 28 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Instances:</p>\n<h4 id=\"swivelsol-8\" style=\"position:relative;\"><a href=\"#swivelsol-8\" aria-label=\"swivelsol 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L25\">string constant public NAME = ‘Swivel Finance’;</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L26\">string constant public VERSION = ‘3.0.0’;</a></p>\n<h3 id=\"recommended-mitigation-steps-29\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-29\" aria-label=\"recommended mitigation steps 29 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- string constant public NAME = &#39;Swivel Finance&#39;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- string constant public VERSION = &#39;3.0.0&#39;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ bytes32 constant public NAME = &#39;Swivel Finance&#39;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ bytes32 constant public VERSION = &#39;3.0.0&#39;;</span></span></span></code></pre>\n<h2 id=\"g-03-caching-storage-variables-in-local-variables-to-save-gas\" style=\"position:relative;\"><a href=\"#g-03-caching-storage-variables-in-local-variables-to-save-gas\" aria-label=\"g 03 caching storage variables in local variables to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] Caching storage variables in local variables to save gas</h2>\n<p>Anytime you are reading from storage more than once, it is cheaper in gas cost to cache the variable: a SLOAD cost 100gas, while MLOAD and MSTORE cost 3 gas.</p>\n<p>In particular, in <code>for</code> loops, when using the length of a storage array as the condition being checked after each loop, caching the array length can yield significant gas savings if the array length is high</p>\n<h3 id=\"proof-of-concept-29\" style=\"position:relative;\"><a href=\"#proof-of-concept-29\" aria-label=\"proof of concept 29 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>2 instances:</p>\n<h4 id=\"swivelsol-9\" style=\"position:relative;\"><a href=\"#swivelsol-9\" aria-label=\"swivelsol 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<p>scope: <code>setFee()</code></p>\n<ul>\n<li><code>feeChange</code> is read twice. Unless <code>feeChange == 0</code>, but given that it is an admin function, it is expected that when the admin invokes this function, all the required conditions are met, hence the state variable will be read twice from storage.</li>\n</ul>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L500\">if (feeChange == 0)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L502\">if (block.timestamp &#x3C; feeChange)</a></p>\n<h4 id=\"marketplacesol-8\" style=\"position:relative;\"><a href=\"#marketplacesol-8\" aria-label=\"marketplacesol 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MarketPlace.sol</h4>\n<p>scope: <code>createMarket()</code></p>\n<ul>\n<li><code>swivel</code> is read twice. Unless <code>swivel == address(0)</code>, but given that it is an admin function, it is expected that when the admin invokes this function, all the required conditions are met, hence the state variable will be read twice from storage.</li>\n</ul>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L71\">if (swivel == address(0))</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L77\">(address zct, address tracker) = ICreator(creator).create(p, underAddr, m, c, swivel, n, s, IErc20(underAddr).decimals())</a></p>\n<h3 id=\"recommended-mitigation-steps-30\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-30\" aria-label=\"recommended mitigation steps 30 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Cache these storage variables using local variables.</p>\n<h2 id=\"g-04-caching-mapping-accesses-in-local-variables-to-save-gas\" style=\"position:relative;\"><a href=\"#g-04-caching-mapping-accesses-in-local-variables-to-save-gas\" aria-label=\"g 04 caching mapping accesses in local variables to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] Caching mapping accesses in local variables to save gas</h2>\n<p>Anytime you are reading from a mapping value more than once, it is cheaper in gas cost to cache it, by saving one <code>gkeccak256</code> operation - <code>30</code> gas.</p>\n<h3 id=\"proof-of-concept-30\" style=\"position:relative;\"><a href=\"#proof-of-concept-30\" aria-label=\"proof of concept 30 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>8 instances:</p>\n<h4 id=\"swivelsol-10\" style=\"position:relative;\"><a href=\"#swivelsol-10\" aria-label=\"swivelsol 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<p>scope: <code>initiateVaultFillingZcTokenInitiate()</code></p>\n<ul>\n<li><code>filled[hash]</code> is read twice:</li>\n</ul>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L116\">uint256 amount = a + filled[hash];</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L121\">filled[hash] += a;</a></p>\n<p>scope: <code>initiateZcTokenFillingVaultInitiate()</code></p>\n<ul>\n<li><code>filled[hash]</code> is read twice:</li>\n</ul>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L153\">uint256 amount = a + filled[hash];</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L158\">filled[hash] += a;</a></p>\n<p>scope: <code>initiateZcTokenFillingZcTokenExit()</code></p>\n<ul>\n<li><code>filled[hash]</code> is read twice:</li>\n</ul>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L188\">uint256 amount = a + filled[hash];</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L193\">filled[hash] += a;</a></p>\n<p>scope: <code>initiateVaultFillingVaultExit()</code></p>\n<ul>\n<li><code>filled[hash]</code> is read twice:</li>\n</ul>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L217\">uint256 amount = a + filled[hash];</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L222\">filled[hash] += a;</a></p>\n<p>scope: <code>exitZcTokenFillingZcTokenInitiate()</code></p>\n<ul>\n<li><code>filled[hash]</code> is read twice:</li>\n</ul>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L282\">uint256 amount = a + filled[hash];</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L287\">filled[hash] += a;</a></p>\n<p>scope: <code>exitVaultFillingVaultInitiate()</code></p>\n<ul>\n<li><code>filled[hash]</code> is read twice:</li>\n</ul>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L313\">uint256 amount = a + filled[hash];</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L318\">filled[hash] += a;</a></p>\n<p>scope: <code>exitVaultFillingZcTokenExit()</code></p>\n<ul>\n<li><code>filled[hash]</code> is read twice:</li>\n</ul>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L343\">uint256 amount = a + filled[hash];</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L348\">filled[hash] += a;</a></p>\n<p>scope: <code>exitZcTokenFillingVaultExit()</code></p>\n<ul>\n<li><code>filled[hash]</code> is read twice:</li>\n</ul>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L378\">uint256 amount = a + filled[hash];</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L383\">filled[hash] += a;</a></p>\n<h3 id=\"recommended-mitigation-steps-31\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-31\" aria-label=\"recommended mitigation steps 31 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Cache these <code>filled[hash]</code> accesses using local variables.</p>\n<p>Note: this will not save gas on the first call for a specific <code>hash</code> - only on subsequent calls.</p>\n<p>With that in mind, considering all these functions will only be called once for a specific <code>hash</code>, you can do the following change to save <code>SLOAD</code> operations:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-uint256 amount = a + filled[hash];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-if (amount &gt; o.premium) { revert Exception(5, amount, o.premium, address(0), address(0)); }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+if (a &gt; o.premium) { revert Exception(5, a, o.premium, address(0), address(0)); }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-filled[hash] += a;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+filled[hash] = a;</span></span></span></code></pre>\n<h2 id=\"g-05-calldata-instead-of-memory-for-ro-function-parameters\" style=\"position:relative;\"><a href=\"#g-05-calldata-instead-of-memory-for-ro-function-parameters\" aria-label=\"g 05 calldata instead of memory for ro function parameters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Calldata instead of memory for RO function parameters</h2>\n<p>If a reference type function parameter is read-only, it is cheaper in gas to use calldata instead of memory.\nCalldata is a non-modifiable, non-persistent area where function arguments are stored, and behaves mostly like memory,but it alleviates the compiler from the <code>abi.decode()</code> step that copies each index of the calldata to the memory index, each iteration costing <code>60</code> gas.</p>\n<h3 id=\"proof-of-concept-31\" style=\"position:relative;\"><a href=\"#proof-of-concept-31\" aria-label=\"proof of concept 31 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>2 instances:</p>\n<h4 id=\"swivelsol-11\" style=\"position:relative;\"><a href=\"#swivelsol-11\" aria-label=\"swivelsol 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L495\">function setFee(uint16[] memory i, uint16[] memory d)</a></p>\n<h3 id=\"recommended-mitigation-steps-32\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-32\" aria-label=\"recommended mitigation steps 32 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation STeps</h3>\n<p>Replace <code>memory</code> with <code>calldata</code></p>\n<h2 id=\"g-06-clones-for-cheap-contract-deployment\" style=\"position:relative;\"><a href=\"#g-06-clones-for-cheap-contract-deployment\" aria-label=\"g 06 clones for cheap contract deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] Clones for cheap contract deployment</h2>\n<p>There’s a way to save a significant amount of gas on deployment using Clones: <a href=\"https://www.youtube.com/watch?v=3Mw-pMmJ7TA\">https://www.youtube.com/watch?v=3Mw-pMmJ7TA</a> .</p>\n<p>With the standard way using the <code>new</code> keyword, each contract created contains the entire logic. Using proxies allow only the first implementation to contain the logic, saving deployment costs on subsequent instances deployed.</p>\n<h4 id=\"proof-of-concept-32\" style=\"position:relative;\"><a href=\"#proof-of-concept-32\" aria-label=\"proof of concept 32 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PROOF OF CONCEPT</h4>\n<p>Instances:</p>\n<h4 id=\"creatorsol-2\" style=\"position:relative;\"><a href=\"#creatorsol-2\" aria-label=\"creatorsol 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creator.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L40\">address zct = address(new ZcToken(p, u, m, c, marketPlace, n, s, d))</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L41\">address tracker = address(new VaultTracker(p, m, c, sw))</a></p>\n<h3 id=\"recommended-mitigation-steps-33\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-33\" aria-label=\"recommended mitigation steps 33 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use a proxy system, see <a href=\"https://youtu.be/3Mw-pMmJ7TA?t=915\">here</a> for an example.</p>\n<h2 id=\"g-07-constants-can-be-private\" style=\"position:relative;\"><a href=\"#g-07-constants-can-be-private\" aria-label=\"g 07 constants can be private permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] Constants can be private</h2>\n<p>Marking constants as <code>private</code> save gas upon deployment, as the compiler does not have to create getter functions for these variables. It is worth noting that a <code>private</code> variable can still be read using either the verified contract source code or the bytecode.</p>\n<p>For immutable variables written via constructor parameters, you can also look the contract deployment transaction.</p>\n<h3 id=\"proof-of-concept-33\" style=\"position:relative;\"><a href=\"#proof-of-concept-33\" aria-label=\"proof of concept 33 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>10 instances:</p>\n<h4 id=\"swivelsol-12\" style=\"position:relative;\"><a href=\"#swivelsol-12\" aria-label=\"swivelsol 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L27\">uint256 constant public HOLD = 3 days</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L35\">uint16 constant public MIN_FEENOMINATOR = 33</a></p>\n<h4 id=\"marketplacesol-9\" style=\"position:relative;\"><a href=\"#marketplacesol-9\" aria-label=\"marketplacesol 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Marketplace.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L26\">address public immutable creator</a></p>\n<h4 id=\"vaulttrackersol-3\" style=\"position:relative;\"><a href=\"#vaulttrackersol-3\" aria-label=\"vaulttrackersol 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VaultTracker.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L21\">address public immutable admin</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L22\">address public immutable cTokenAddr</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L23\">address public immutable swivel</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L24\">uint256 public immutable maturity</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L26\">uint8 public immutable protocol</a></p>\n<h4 id=\"zctokensol-3\" style=\"position:relative;\"><a href=\"#zctokensol-3\" aria-label=\"zctokensol 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZcToken.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L17\">uint8 public immutable protocol</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L21\">address public immutable cToken</a></p>\n<h3 id=\"recommended-mitigation-steps-34\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-34\" aria-label=\"recommended mitigation steps 34 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Make these constants <code>private</code> instead of <code>public</code></p>\n<h2 id=\"g-08-constructor-parameters-should-be-avoided-when-possible\" style=\"position:relative;\"><a href=\"#g-08-constructor-parameters-should-be-avoided-when-possible\" aria-label=\"g 08 constructor parameters should be avoided when possible permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-08] Constructor parameters should be avoided when possible</h2>\n<p>Constructor parameters are expensive. The contract deployment will be cheaper in gas if they are hard coded instead of using constructor parameters.</p>\n<h3 id=\"proof-of-concept-34\" style=\"position:relative;\"><a href=\"#proof-of-concept-34\" aria-label=\"proof of concept 34 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>4 instances:</p>\n<h4 id=\"swivelsol-13\" style=\"position:relative;\"><a href=\"#swivelsol-13\" aria-label=\"swivelsol 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L71\">marketPlace = m</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L72\">aaveAddr = a</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L73\">feenominators = [200, 600, 400, 200]</a></p>\n<h4 id=\"marketplacesol-10\" style=\"position:relative;\"><a href=\"#marketplacesol-10\" aria-label=\"marketplacesol 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MarketPlace.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L40\">creator = c</a></p>\n<h3 id=\"recommended-mitigation-steps-35\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-35\" aria-label=\"recommended mitigation steps 35 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Hardcode these variables with their initial value instead of writing them during contract deployment with constructor parameters.</p>\n<h2 id=\"g-09-event-fields-are-redundant\" style=\"position:relative;\"><a href=\"#g-09-event-fields-are-redundant\" aria-label=\"g 09 event fields are redundant permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-09] Event fields are redundant</h2>\n<p><code>block.timestamp</code> and <code>block.number</code> are added to event information by default, explicitly adding them is a waste of gas.</p>\n<h3 id=\"proof-of-concept-35\" style=\"position:relative;\"><a href=\"#proof-of-concept-35\" aria-label=\"proof of concept 35 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>1 instance:</p>\n<h4 id=\"marketplacesol-11\" style=\"position:relative;\"><a href=\"#marketplacesol-11\" aria-label=\"marketplacesol 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MarketPlace.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L104\">emit Mature(p, u, m, exchangeRate, block.timestamp)</a></p>\n<h3 id=\"recommended-mitigation-steps-36\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-36\" aria-label=\"recommended mitigation steps 36 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Remove the <code>uint256 matured</code> event field, as it always corresponds to <code>block.timestamp</code>.</p>\n<h2 id=\"g-10-functions-with-access-control-cheaper-if-payable\" style=\"position:relative;\"><a href=\"#g-10-functions-with-access-control-cheaper-if-payable\" aria-label=\"g 10 functions with access control cheaper if payable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-10] Functions with access control cheaper if payable</h2>\n<p>A function with access control marked as payable will lbe cheaper for legitimate callers: the compiler removes checks for <code>msg.value</code>, saving approximately <code>20</code> gas per function call.</p>\n<h3 id=\"proof-of-concept-36\" style=\"position:relative;\"><a href=\"#proof-of-concept-36\" aria-label=\"proof of concept 36 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>36 instances:</p>\n<h4 id=\"swivelsol-14\" style=\"position:relative;\"><a href=\"#swivelsol-14\" aria-label=\"swivelsol 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L428\">function setAdmin(address a) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L436\">function scheduleWithdrawal(address e) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L447\">function blockWithdrawal(address e) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L457\">function withdraw(address e) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L473\">function scheduleFeeChange() external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L483\">function blockFeeChange() external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L495\">function setFee(uint16[] memory i, uint16[] memory d) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L522\">function scheduleApproval(address e) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L533\">function blockApproval(address e) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L544\">function approveUnderlying(address[] calldata u, address[] calldata c) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L620\">function authRedeemZcToken(uint8 p, address u, address c, address t, uint256 a) external authorized(marketPlace)</a></p>\n<h4 id=\"marketplacesol-12\" style=\"position:relative;\"><a href=\"#marketplacesol-12\" aria-label=\"marketplacesol 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MarketPlace.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L45\">function setSwivel(address s) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L53\">function setAdmin(address a) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L70\">function createMarket(uint8 p,uint256 m,address c,string memory n,string memory s) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L115\">function mintZcTokenAddingNotional(uint8 p, address u, uint256 m, address t, uint256 a) external authorized(swivel)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L131\">function burnZcTokenRemovingNotional(uint8 p, address u, uint256 m, address t, uint256 a) external authorized(swivel)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L148\">function authRedeem(uint8 p, address u, uint256 m, address f, address t, uint256 a) public authorized(markets[p][u][m].zcToken)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L176\">function redeemZcToken(uint8 p, address u, uint256 m, address t, uint256 a) external authorized(swivel)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L201\">function redeemVaultInterest(uint8 p, address u, uint256 m, address t) external authorized(swivel)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L247\">function custodialInitiate(uint8 p, address u, uint256 m, address z, address n, uint256 a) external authorized(swivel)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L256\">function custodialExit(uint8 p, address u, uint256 m, address z, address n, uint256 a) external authorized(swivel)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L283\">function p2pZcTokenExchange(uint8 p, address u, uint256 m, address f, address t, uint256 a) external authorized(swivel)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L301\">function p2pVaultExchange(uint8 p, address u, uint256 m, address f, address t, uint256 a) external authorized(swivel)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L328\">function transferVaultNotionalFee(uint8 p, address u, uint256 m, address f, uint256 a) external authorized(swivel)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L336\">function pause(uint8 p, bool b) external authorized(admin)</a></p>\n<h4 id=\"creatorsol-3\" style=\"position:relative;\"><a href=\"#creatorsol-3\" aria-label=\"creatorsol 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creator.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L30-L39\">function create ( //args ) external authorized(marketPlace)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L47\">function setAdmin(address a) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L54\">function setMarketPlace(address m) external authorized(admin)</a></p>\n<h4 id=\"vaulttrackersol-4\" style=\"position:relative;\"><a href=\"#vaulttrackersol-4\" aria-label=\"vaulttrackersol 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VaultTracker.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L49\">function addNotional(address o, uint256 a) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L82\">function removeNotional(address o, uint256 a) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L113\">function redeemInterest(address o) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L143\">function matureVault(uint256 c) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L152\">function transferNotionalFrom(address f, address t, uint256 a) external authorized(admin)</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L208\">function transferNotionalFee(address f, uint256 a) external authorized(admin)</a></p>\n<h4 id=\"zctokensol-4\" style=\"position:relative;\"><a href=\"#zctokensol-4\" aria-label=\"zctokensol 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZcToken.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L140\">function burn(address f, uint256 a) external onlyAdmin(address(redeemer))</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L147\">function mint(address t, uint256 a) external onlyAdmin(address(redeemer))</a></p>\n<h3 id=\"recommended-mitigation-steps-37\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-37\" aria-label=\"recommended mitigation steps 37 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Remove these event fields.</p>\n<h2 id=\"g-11-immutable-variables-save-storage\" style=\"position:relative;\"><a href=\"#g-11-immutable-variables-save-storage\" aria-label=\"g 11 immutable variables save storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-11] Immutable variables save storage</h2>\n<p>If a variable is set in the constructor and never modified afterwards, marking it as <code>immutable</code> can save a storage slot - <code>20,000</code> gas. This also saves <code>97</code> gas on every read access of the variable.</p>\n<h3 id=\"proof-of-concept-37\" style=\"position:relative;\"><a href=\"#proof-of-concept-37\" aria-label=\"proof of concept 37 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>1 instance:</p>\n<h4 id=\"swivelsol-15\" style=\"position:relative;\"><a href=\"#swivelsol-15\" aria-label=\"swivelsol 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L33\">address public aaveAddr</a><br>\n<code>aaveAddr</code> is set in the constructor and read in two functions, but never modified.</p>\n<h3 id=\"recommended-mitigation-steps-38\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-38\" aria-label=\"recommended mitigation steps 38 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Mark <code>aaveAddr</code> as <code>immutable</code>.</p>\n<h2 id=\"g-12-prefix-increments\" style=\"position:relative;\"><a href=\"#g-12-prefix-increments\" aria-label=\"g 12 prefix increments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-12] Prefix increments</h2>\n<p>Prefix increments are cheaper than postfix increments - <code>6</code> gas. This can mean interesting savings in <code>for</code> loops.</p>\n<h3 id=\"proof-of-concept-38\" style=\"position:relative;\"><a href=\"#proof-of-concept-38\" aria-label=\"proof of concept 38 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>5 instances:</p>\n<h4 id=\"xtribesol\" style=\"position:relative;\"><a href=\"#xtribesol\" aria-label=\"xtribesol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>xTRIBE.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L100\">unchecked {i++;}</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L269\">unchecked {i++;}</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L418\">unchecked {i++;}</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L511\">unchecked {x++;}</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L564\">unchecked {i++;}</a></p>\n<h3 id=\"recommended-mitigation-steps-39\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-39\" aria-label=\"recommended mitigation steps 39 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Change <code>variable++</code> to <code>++variable</code>.</p>\n<h2 id=\"g-13-storage-cheaper-than-memory\" style=\"position:relative;\"><a href=\"#g-13-storage-cheaper-than-memory\" aria-label=\"g 13 storage cheaper than memory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-13] Storage cheaper than memory</h2>\n<p>Reference types cached in memory cost more gas than using storage, as new memory is allocated for these variables, copying data from storage to memory for each field of the struct or array: this means every field of the struct/array is read.</p>\n<h3 id=\"proof-of-concept-39\" style=\"position:relative;\"><a href=\"#proof-of-concept-39\" aria-label=\"proof of concept 39 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>18 instances:</p>\n<h4 id=\"marketplacesol-13\" style=\"position:relative;\"><a href=\"#marketplacesol-13\" aria-label=\"marketplacesol 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MarketPlace.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L91\">Market memory market = markets[p][u][m]</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L116\">Market memory market = markets[p][u][m]</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L132\">Market memory market = markets[p][u][m]</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L149\">Market memory market = markets[p][u][m]</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L177\">Market memory market = markets[p][u][m]</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L1216\">Market memory market = markets[p][u][m]</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L1228\">Market memory market = markets[p][u][m]</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L1248\">Market memory market = markets[p][u][m]</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L1266\">Market memory market = markets[p][u][m]</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L1284\">Market memory market = markets[p][u][m]</a></p>\n<h4 id=\"vaulttrackersol-5\" style=\"position:relative;\"><a href=\"#vaulttrackersol-5\" aria-label=\"vaulttrackersol 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VaultTracker.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L52\">Vault memory vlt = vaults[o]</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L84\">Vault memory vlt = vaults[o]</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L115\">Vault memory vlt = vaults[o]</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L155\">Vault memory from = vaults[f]</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L156\">Vault memory to = vaults[t]</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L209\">Vault memory oVault = vaults[f]</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L210\">Vault memory sVault = vaults[swivel]</a><br>\n<a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L244\">Vault memory vault = vaults[o]</a></p>\n<h3 id=\"recommended-mitigation-steps-40\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-40\" aria-label=\"recommended mitigation steps 40 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use <code>storage</code> instead of <code>memory</code>. Cache any field read more than once onto the stack to avoid unnecessary <code>SLOAD</code> operations.</p>\n<h2 id=\"g-14-unchecked-arithmetic\" style=\"position:relative;\"><a href=\"#g-14-unchecked-arithmetic\" aria-label=\"g 14 unchecked arithmetic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-14] Unchecked arithmetic</h2>\n<p>The default “checked” behavior costs more gas when adding/diving/multiplying, because under-the-hood those checks are implemented as a series of opcodes that, prior to performing the actual arithmetic, check for under/overflow and revert if it is detected.</p>\n<p>If it can statically be determined there is no possible way for your arithmetic to under/overflow (such as a condition in an if statement), surrounding the arithmetic in an <code>unchecked</code> block will save gas.</p>\n<h3 id=\"proof-of-concept-40\" style=\"position:relative;\"><a href=\"#proof-of-concept-40\" aria-label=\"proof of concept 40 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Instances:</p>\n<h4 id=\"vaulttrackersol-6\" style=\"position:relative;\"><a href=\"#vaulttrackersol-6\" aria-label=\"vaulttrackersol 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VaultTracker.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L103\">vlt.notional -= a</a><br>\nBecause of the check <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L86\">here</a>, it cannot underflow</p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L175\">from.notional -= a</a><br>\nBecause of the check <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L158\">here</a>, it cannot underflow</p>\n<h4 id=\"zctokensol-5\" style=\"position:relative;\"><a href=\"#zctokensol-5\" aria-label=\"zctokensol 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZcToken.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L115\">allowance[holder][msg.sender] -= previewAmount</a><br>\nBecause of the check <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L112\">here</a>, it cannot underflow</p>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L134\">allowance[holder][msg.sender] -= principalAmount</a><br>\nBecause of the check <a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L133\">here</a>, it cannot underflow.</p>\n<h3 id=\"recommended-mitigation-steps-41\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-41\" aria-label=\"recommended mitigation steps 41 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Place the arithmetic operations in an <code>unchecked</code> block.</p>\n<h2 id=\"g-15-unnecessary-computation\" style=\"position:relative;\"><a href=\"#g-15-unnecessary-computation\" aria-label=\"g 15 unnecessary computation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-15] Unnecessary computation</h2>\n<p>Unnecessary stack variables can be removed to save gas.</p>\n<h3 id=\"proof-of-concept-41\" style=\"position:relative;\"><a href=\"#proof-of-concept-41\" aria-label=\"proof of concept 41 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Instances:</p>\n<h4 id=\"zctokensol-6\" style=\"position:relative;\"><a href=\"#zctokensol-6\" aria-label=\"zctokensol 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZcToken.sol</h4>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">111</span><span class=\"mtk1\">:             uint256 allowed = </span><span class=\"mtk12\">allowance</span><span class=\"mtk1\">[holder][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">112</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (allowed &gt;= previewAmount) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">:                 revert </span><span class=\"mtk11\">Approvals</span><span class=\"mtk1\">(allowed, previewAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">114</span><span class=\"mtk1\">:             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">allowance</span><span class=\"mtk1\">[holder][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] -= previewAmount;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">132</span><span class=\"mtk1\">:             uint256 allowed = </span><span class=\"mtk12\">allowance</span><span class=\"mtk1\">[holder][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">133</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (allowed &gt;= principalAmount) { revert </span><span class=\"mtk11\">Approvals</span><span class=\"mtk1\">(allowed, principalAmount); }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">134</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">allowance</span><span class=\"mtk1\">[holder][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] -= principalAmount</span></span></span></code></pre>\n<p>Both <code>allowed</code> are not necessary. They only save gas if the function reverts</p>\n<h3 id=\"recommended-mitigation-steps-42\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-42\" aria-label=\"recommended mitigation steps 42 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Remove both <code>allowed</code> and read the storage variables directly in the condition blocks.</p>\n<h2 id=\"g-16-upgrade-solidity-compiler-version\" style=\"position:relative;\"><a href=\"#g-16-upgrade-solidity-compiler-version\" aria-label=\"g 16 upgrade solidity compiler version permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-16] Upgrade Solidity compiler version</h2>\n<p>0.8.10 removes contract existence checks if the external call has a return value - <code>700</code> gas</p>\n<h3 id=\"proof-of-concept-42\" style=\"position:relative;\"><a href=\"#proof-of-concept-42\" aria-label=\"proof of concept 42 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Instances:</p>\n<h4 id=\"erc20gaugessol\" style=\"position:relative;\"><a href=\"#erc20gaugessol\" aria-label=\"erc20gaugessol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ERC20Gauges.sol</h4>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L2\">pragma solidity ^0.8.4</a></p>\n<h3 id=\"recommended-mitigation-steps-43\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-43\" aria-label=\"recommended mitigation steps 43 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Upgrade <code>ZcToken.sol</code> compiler version.</p>\n<h2 id=\"g-17-use-assembly-for-simple-setters\" style=\"position:relative;\"><a href=\"#g-17-use-assembly-for-simple-setters\" aria-label=\"g 17 use assembly for simple setters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-17] use Assembly for simple setters</h2>\n<p>Where it does not affect readability, using assembly allows to save gas not only on deployment, but also on function calls.</p>\n<p>This is the case for instance for simple admin setters.</p>\n<h3 id=\"proof-of-concept-43\" style=\"position:relative;\"><a href=\"#proof-of-concept-43\" aria-label=\"proof of concept 43 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Instances:</p>\n<h4 id=\"swivelsol-16\" style=\"position:relative;\"><a href=\"#swivelsol-16\" aria-label=\"swivelsol 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">428</span><span class=\"mtk1\">:   function </span><span class=\"mtk11\">setAdmin</span><span class=\"mtk1\">(address a) external </span><span class=\"mtk11\">authorized</span><span class=\"mtk1\">(admin) </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">429</span><span class=\"mtk1\">:     admin = a;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">430</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">431</span><span class=\"mtk1\">:     </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">432</span><span class=\"mtk1\">:   }</span></span></span></code></pre>\n<h4 id=\"marketplacesol-14\" style=\"position:relative;\"><a href=\"#marketplacesol-14\" aria-label=\"marketplacesol 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MarketPlace.sol</h4>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">53</span><span class=\"mtk1\">:   function </span><span class=\"mtk11\">setAdmin</span><span class=\"mtk1\">(address a) external </span><span class=\"mtk11\">authorized</span><span class=\"mtk1\">(admin) </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">54</span><span class=\"mtk1\">:     admin = a;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">55</span><span class=\"mtk1\">:     </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">56</span><span class=\"mtk1\">:   }</span></span></span></code></pre>\n<h4 id=\"creatorsol-4\" style=\"position:relative;\"><a href=\"#creatorsol-4\" aria-label=\"creatorsol 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creator.sol</h4>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">47</span><span class=\"mtk1\">:   function </span><span class=\"mtk11\">setAdmin</span><span class=\"mtk1\">(address a) external </span><span class=\"mtk11\">authorized</span><span class=\"mtk1\">(admin) </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">48</span><span class=\"mtk1\">:     admin = a;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">49</span><span class=\"mtk1\">:     </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">50</span><span class=\"mtk1\">:   }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-44\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-44\" aria-label=\"recommended mitigation steps 44 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  admin = a;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    sstore(admin.slot, a)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  }</span></span></span></code></pre>\n<h2 id=\"g-18-writing-zero-wastes-gas\" style=\"position:relative;\"><a href=\"#g-18-writing-zero-wastes-gas\" aria-label=\"g 18 writing zero wastes gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-18] Writing zero wastes gas</h2>\n<p><code>Swivel.sol</code> uses a timelock system for changing the fees, which consists in setting <code>feeChange</code> to zero every time fees are changed, then setting it to <code>block.timestamp + HOLD</code> upon the next scheduled fee change.</p>\n<p>As <code>SSTORE</code> operations are more expensive when setting a state variable from zero to a non-zero value than setting it from a non-zero value to another non-zero value, gas can be saved by not setting <code>feeChange</code> to zero upon a fee update.</p>\n<h3 id=\"proof-of-concept-44\" style=\"position:relative;\"><a href=\"#proof-of-concept-44\" aria-label=\"proof of concept 44 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Instances:</p>\n<h4 id=\"swivelsol-17\" style=\"position:relative;\"><a href=\"#swivelsol-17\" aria-label=\"swivelsol 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swivel.sol</h4>\n<ul>\n<li>in <code>blockFeeChange</code>:</li>\n</ul>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L484\">feeChange = 0</a></p>\n<ul>\n<li>in <code>setFee</code>:</li>\n</ul>\n<p><a href=\"https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L515\">feeChange = 0</a></p>\n<h3 id=\"recommended-mitigation-steps-45\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-45\" aria-label=\"recommended mitigation steps 45 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Change to <code>feeChange = 1</code>, and change the following line in setFee:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- if (feeChange == 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ if (feeChange == 1)</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-07-swivel-findings/issues/148#issuecomment-1233316502\">robrobbins (Swivel) commented</a>:</strong></p>\n<blockquote>\n<p>Well-written report.</p>\n<p>But items either addressed elsewhere or won’t be fixed.</p>\n</blockquote>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-1\">High Risk Findings (1)</a></p>\n<ul>\n<li><a href=\"#h-01--mismatch-in-withdraw-between-yearn-and-other-protocols-can-prevent-users-from-redeeming-zctokens-and-permanently-lock-funds\">[H-01]  Mismatch in <code>withdraw()</code> between Yearn and other protocols can prevent Users from redeeming zcTokens and permanently lock funds</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-12\">Medium Risk Findings (12)</a></p>\n<ul>\n<li><a href=\"#m-01-with-most-functions-in-vaulttrackersol-users-can-call-them-only-once-after-maturity-has-been-reached\">[M-01] With most functions in VaultTracker.sol, users can call them only once after maturity has been reached.</a></li>\n<li><a href=\"#m-02-swivelsetfee-is-implemented-wrongly\">[M-02] Swivel.setFee() is implemented wrongly.</a></li>\n<li><a href=\"#m-03-error-in-allowance-logic\">[M-03] Error in allowance logic</a></li>\n<li><a href=\"#m-04-vaulttracker-miscalculates-compounding-interest\">[M-04] VaultTracker miscalculates compounding interest</a></li>\n<li><a href=\"#m-05-should-use--instead-of-\">[M-05] Should use >= instead of ></a></li>\n<li><a href=\"#m-06-yearn-vault-integration-is-broken\">[M-06] Yearn vault integration is broken</a></li>\n<li><a href=\"#m-07-erc20-incorrect-check-on-returnedaddress-in-permit-results-in-unlimited-approval-of-zero-address\">[M-07] ERC20 Incorrect check on returnedAddress in permit() results in unlimited approval of zero address</a></li>\n<li><a href=\"#m-08-zctokenwithdraw-will-send-user-0-tokens-if-called-after-maturity-deadline-but-before-market-is-set-mature\">[M-08] ZcToken.withdraw will send user 0 tokens if called after maturity deadline but before market is set mature</a></li>\n<li><a href=\"#m-09-vaulttracker-has-the-wrong-admin\">[M-09] VaultTracker has the wrong admin</a></li>\n<li><a href=\"#m-10-unpausedp-modifier-missing-in-authredeem-function\">[M-10] unpaused(p) modifier missing in authRedeem function</a></li>\n<li><a href=\"#m-11-loss-of-funds-in-an-underlying-protocol-would-cause-catostrophic-loss-of-funds-for-swivel\">[M-11] Loss of funds in an underlying protocol would cause catostrophic loss of funds for swivel</a></li>\n<li><a href=\"#m-12-interface-definition-error\">[M-12] Interface definition error</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#l-01-contracts-should-inherit-their-interfaces\">L-01 Contracts should inherit their interfaces</a></li>\n<li><a href=\"#l-02-immutable-addresses-lack-zero-address-check\">L-02 Immutable addresses lack zero-address check</a></li>\n<li><a href=\"#l-03-safesol-does-not-check-contract-existence\">L-03 Safe.sol does not check contract existence</a></li>\n<li><a href=\"#l-04-setters-should-check-the-input-value\">L-04 Setters should check the input value</a></li>\n<li><a href=\"#n-01-2256---1-can-be-re-written\">N-01 <code>2**256 - 1</code> can be re-written</a></li>\n<li><a href=\"#n-02-constants-instead-of-magic-numbers\">N-02 Constants instead of magic numbers</a></li>\n<li><a href=\"#n-03-events-indexing\">N-03 Events indexing</a></li>\n<li><a href=\"#n-04-event-should-be-emitted-in-setters\">N-04 Event should be emitted in setters</a></li>\n<li><a href=\"#n-05-function-order\">N-05 Function order</a></li>\n<li><a href=\"#n-06-long-lines\">N-06 Long lines</a></li>\n<li><a href=\"#n-07-natspec\">N-07 Natspec</a></li>\n<li><a href=\"#n-08-non-library-files-should-use-fixed-compiler-versions\">N-08 Non-library files should use fixed compiler versions</a></li>\n<li><a href=\"#n-09-non-library-files-should-use-the-same-compiler-version\">N-09 Non-library files should use the same compiler version</a></li>\n<li><a href=\"#n-10-open-todos\">N-10 Open TODOs</a></li>\n<li><a href=\"#n-11-public-functions-can-be-external\">N-11 Public functions can be external</a></li>\n<li><a href=\"#n-12-tautological-code\">N-12 Tautological code</a></li>\n<li><a href=\"#n-13-typos\">N-13 Typos</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#g-01-address-mappings-can-be-combined-in-a-single-mapping\">G-01 Address mappings can be combined in a single mapping</a></li>\n<li><a href=\"#g-02-bytes-constant-are-cheaper-than-string-constants\">G-02 Bytes constant are cheaper than string constants</a></li>\n<li><a href=\"#g-03-caching-storage-variables-in-local-variables-to-save-gas\">G-03 Caching storage variables in local variables to save gas</a></li>\n<li><a href=\"#g-04-caching-mapping-accesses-in-local-variables-to-save-gas\">G-04 Caching mapping accesses in local variables to save gas</a></li>\n<li><a href=\"#g-05-calldata-instead-of-memory-for-ro-function-parameters\">G-05 Calldata instead of memory for RO function parameters</a></li>\n<li><a href=\"#g-06-clones-for-cheap-contract-deployment\">G-06 Clones for cheap contract deployment</a></li>\n<li><a href=\"#g-07-constants-can-be-private\">G-07 Constants can be private</a></li>\n<li><a href=\"#g-08-constructor-parameters-should-be-avoided-when-possible\">G-08 Constructor parameters should be avoided when possible</a></li>\n<li><a href=\"#g-09-event-fields-are-redundant\">G-09 Event fields are redundant</a></li>\n<li><a href=\"#g-10-functions-with-access-control-cheaper-if-payable\">G-10 Functions with access control cheaper if payable</a></li>\n<li><a href=\"#g-11-immutable-variables-save-storage\">G-11 Immutable variables save storage</a></li>\n<li><a href=\"#g-12-prefix-increments\">G-12 Prefix increments</a></li>\n<li><a href=\"#g-13-storage-cheaper-than-memory\">G-13 Storage cheaper than memory</a></li>\n<li><a href=\"#g-14-unchecked-arithmetic\">G-14 Unchecked arithmetic</a></li>\n<li><a href=\"#g-15-unnecessary-computation\">G-15 Unnecessary computation</a></li>\n<li><a href=\"#g-16-upgrade-solidity-compiler-version\">G-16 Upgrade Solidity compiler version</a></li>\n<li><a href=\"#g-17-use-assembly-for-simple-setters\">G-17 use Assembly for simple setters</a></li>\n<li><a href=\"#g-18-writing-zero-wastes-gas\">G-18 Writing zero wastes gas</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>",
  "md": "\n# Overview\n\n## About C4\n\nCode4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.\n\nA C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.\n\nDuring the audit contest outlined in this document, C4 conducted an analysis of the Swivel v3 smart contract system written in Solidity. The audit contest took place between July 12—July 15 2022.\n\n## Wardens\n\n80 Wardens contributed reports to the Swivel v3 contest:\n\n  1. scaraven\n  1. [Franfran](https://franfran.dev/)\n  1. GimelSec ([rayn](https://twitter.com/rayn731) and sces60107)\n  1. [panprog](https://twitter.com/panprog)\n  1. 0x52\n  1. [oyc&#95;109](https://twitter.com/andyfeili)\n  1. bardamu\n  1. [devtooligan](https://twitter.com/devtooligan)\n  1. [hansfriese](https://twitter.com/hansfriese)\n  1. [csanuragjain](https://twitter.com/csanuragjain)\n  1. [jonatascm](https://twitter.com/jonataspvt)\n  1. [itsmeSTYJ](https://twitter.com/itsmeSTYJ)\n  1. cccz\n  1. [joestakey](https://twitter.com/JoeStakey)\n  1. Bahurum\n  1. 0xDjango\n  1. [c3phas](https://twitter.com/c3ph_)\n  1. [rokinot](twitter.com/rokinot)\n  1. 0x1f8b\n  1. sashik&#95;eth\n  1. ronnyx2017\n  1. [bin2chen](https://twitter.com/bin2chen)\n  1. [Picodes](https://twitter.com/thePicodes)\n  1. [MadWookie](https://twitter.com/wookiemad)\n  1. [benbaessler](https://benbaessler.com)\n  1. rbserver\n  1. 0xSky\n  1. auditor0517\n  1. kyteg\n  1. Bnke0x0\n  1. [m&#95;Rassska](https://t.me/Road220)\n  1. Meera\n  1. hake\n  1. simon135\n  1. [8olidity](https://twitter.com/8olidity)\n  1. robee\n  1. [0xNazgul](https://twitter.com/0xNazgul)\n  1. [fatherOfBlocks](https://twitter.com/father0fBl0cks)\n  1. &#95;141345&#95;\n  1. [defsec](https://twitter.com/defsec_)\n  1. &#95;Adam\n  1. Soosh\n  1. [Sm4rty](https://twitter.com/Sm4rty_)\n  1. slywaters\n  1. Waze\n  1. [Funen](https://instagram.com/vanensurya)\n  1. ElKu\n  1. Kaiziron\n  1. [JC](https://twitter.com/sm4rtcontr4ct)\n  1. ReyAdmirado\n  1. Avci ([0xArshia](https://github.com/0xarshia) and [0xdanial](https://twitter.com/danialmomtahani))\n  1. [exd0tpy](https://github.com/exd0tpy)\n  1. arcoun\n  1. caventa\n  1. Lambda\n  1. [Chom](https://chom.dev)\n  1. cryptphi\n  1. 0xNineDec\n  1. [gogo](https://www.linkedin.com/in/georgi-nikolaev-georgiev-978253219)\n  1. sach1r0\n  1. aysha\n  1. ak1\n  1. Junnon\n  1. PaludoX0\n  1. rishabh\n  1. pashov\n  1. [mektigboy](https://twitter.com/mektigboy)\n  1. ajtra\n  1. 0xsam\n  1. [durianSausage](https://github.com/lyciumlee)\n  1. 0x040\n  1. [TomJ](https://mobile.twitter.com/tomj_bb)\n  1. samruna\n  1. [Fitraldys](https://twitter.com/fitraldys)\n  1. karanctf\n  1. [ignacio](https://twitter.com/0xheynacho)\n  1. CRYP70\n  1. [Aymen0909](https://github.com/Aymen1001)\n\nThis contest was judged by [0xean](https://github.com/0xean) and [bghughes](https://github.com/bghughes).\n\nFinal report assembled by [itsmetechjay](https://twitter.com/itsmetechjay).\n\n# Summary\n\nThe C4 analysis yielded an aggregated total of 13 unique vulnerabilities. Of these vulnerabilities, 1 received a risk rating in the category of HIGH severity and 12 received a risk rating in the category of MEDIUM severity.\n\nAdditionally, C4 analysis included 55 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 44 reports recommending gas optimizations.\n\nAll of the issues presented here are linked back to their original finding.\n\n# Scope\n\nThe code under review can be found within the [C4 Swivel v3 contest repository](https://github.com/code-423n4/2022-07-swivel), and is composed of 5 smart contracts written in the Solidity programming language and includes 1,593 lines of Solidity code.\n\n# Severity Criteria\n\nC4 assesses the severity of disclosed vulnerabilities according to a methodology based on [OWASP standards](https://owasp.org/www-community/OWASP_Risk_Rating_Methodology).\n\nVulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.\n\nHigh-level considerations for vulnerabilities span the following key areas when conducting assessments:\n\n- Malicious Input Handling\n- Escalation of privileges\n- Arithmetic\n- Gas use\n\nFurther information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on [the C4 website](https://code4rena.com).\n\n# High Risk Findings (1)\n## [[H-01]  Mismatch in `withdraw()` between Yearn and other protocols can prevent Users from redeeming zcTokens and permanently lock funds](https://github.com/code-423n4/2022-07-swivel-findings/issues/43)\n_Submitted by scaraven, also found by Franfran_\n\nAs defined in the docs for Euler, ERC4626, Compound and Aave, when withdrawing and depositing funds the `amount` specified corresponds excactly to how many of the underlying assets are deposited or withdrawn.\n\nHowever, as specified by [Yearn](https://docs.yearn.finance/vaults/smart-contracts/vault#withdraw), the yearn withdraw `amount` parameter specifies how many `shares` are burnt instead of underlying assets retrieved. Two scenarios can occur from then on, if there are not enough shares then the transaction will revert and users will not be able to redeem the underlying assets from Yearn. If there are enough shares, then a higher number of assets will be withdrawn then expected (as assets per share will only increase). This means that once the user receives their underlying assets at a 1:1 peg the excess amounts will be permanently locked in the vault contract.\n\n### Proof of Concept\n\nAll scenarios use Yearn finance as the protocol, the other protocols are unaffected.\n\n#### Scenario #1\n\n1.  A yearn finance vault contains 50 shares and 200 uTokens all owned by Swivel.sol\n2.  A user opens a zcToken position and deposits 100 uTokens into yearn receiving 100 zcTokens (and possibly a premium)\n3.  `100 / 200 * 50 = 25` shares are minted for the vault so we now have 75 shares and 300 uTokens in the yearn vault\n4.  After maturity is achieved, the user tries to redeem their 100 zcTokens for uTokens\n5.  The swivel.sol contract tries to withdraw the 100 uTokens, it instead withdraws 100 shares which is less than available so the transaction reverts and the user cannot withdraw all of their 100 uTokens and instead can only withdraw 75 uTokens.\n\n#### Scenario #2\n\n1.  A yearn finance vault contains 50 shares and 100 uTokens all owned by Swivel.sol\n2.  A user opens a zcToken position and deposits 100 uTokens into yearn receiving 100 zcTokens (and possibly a premium)\n3.  `100 / 100 * 50 = 50` shares are minted for the vault so we now have 100 shares and 200 uTokens in the yearn vault\n4.  After maturity is achieved, the user tries to redeem their 100 zcTokens for uTokens\n5.  The contract tries to retrieve 100 uTokens but instead withdraws 100 shares which corresponds to 200 uTokens\n6.  User receives their 100 uTokens causing 100 uTokens to be left in the Swivel.sol contract which are now irretrievable\n7.  If any user tries to withdraw their funds then the transaction will fail as no shares are left in the yearn vault\n\n### Tools Used\n\nVS Code\n\n### Recommended Mitigation Steps\n\nIn the `withdraw()` function in Swivel.sol, calculating the price per share and use that to retrieve the correct number of underlying assets\ne.g.\n\n```solidity\nuint256 pricePerShare = IYearnVault(c).pricePerShare();\nreturn IYearnVault(c).withdraw(a / pricePerShare) >= 0;\n```\n\n**[JTraversa (Swivel) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/43#issuecomment-1186017117):**\n > Duplicate of [#30](https://github.com/code-423n4/2022-07-swivel-findings/issues/30).\n\n**[scaraven (warden) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/43#issuecomment-1186135113):**\n > I do not understand how this is a duplicate of #30, [#30](https://github.com/code-423n4/2022-07-swivel-findings/issues/30) talks about a problem with `redeemUnderlying()` in Compound while this issue talks about a problem with `withdraw()` when using yearn.\n\n**[JTraversa (Swivel) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/43#issuecomment-1186429670):**\n > They both cannot be true at once however. Either the lib expects shares, or the lib expects assets. His suggestion notes inconsistency and recommends changing the compound redeem to align with yearn, while you note the inconsistency and recommend fixing the yearn math. At the end of the day the issue is the \"mismatch\".\n\n**[scaraven (warden) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/43#issuecomment-1186439163):**\n > Fair enough, that makes sense. I would still disagree with their interpretation of the issue, it is clear from the code that `a` represents the underlying assets. If `a` does represent the number of shares then other functions such as `authRedeemzcTokens` would be plain wrong because it would be redeeming each zcToken as if it was one share not one underlying asset.\n\n**[JTraversa (Swivel) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/43#issuecomment-1186453137):**\n > Yeah I actually kind of agree with you. We intended the implementation to align more with your finding. \n> \n> That said it *might* be worth a judge's input. \n> \n> If they think they're different, the other finding is invalid/should be disputed and this one is correct.\n\n**[bghughes (judge) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/43#issuecomment-1205884382):**\n > Confirmed, good issue and marked [#30](https://github.com/code-423n4/2022-07-swivel-findings/issues/30) as a duplicate.\n\n**[robrobbins (Swivel) resolved](https://github.com/code-423n4/2022-07-swivel-findings/issues/43#issuecomment-1234639671):**\n > Addressed: https://github.com/Swivel-Finance/gost/pull/437.\n\n\n\n***\n\n \n# Medium Risk Findings (12)\n## [[M-01] With most functions in VaultTracker.sol, users can call them only once after maturity has been reached.](https://github.com/code-423n4/2022-07-swivel-findings/issues/116)\n_Submitted by hansfriese, also found by panprog_\n\n<https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L124>\n\n<https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L132>\n\n### Impact\n\nWith most functions in VaultTracker.sol, users can call them only once after maturity has been reached.\n\nSo from the second call of any functions after maturity, it will revert and users might lose their funds or interests.\n\n### Proof of Concept\n\nThe main problem is that `vlt.exchangeRate`` might be larger than maturityRate after maturity [here](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L132).\n\nThen it will revert from the second call with uint underflow [here](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L124).\n\nSo such scenario is possible.\n\n*   Alice splits 1000 USDC into zcToken and nToken using [splitUnderlying()](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L578)\n*   After the market is matured, she withdraws back 1000 USDC using [combineTokens()](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L600)\n*   While combining tokens, [removeNotional()](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L82) is called and vlt.exchangeRate will be set as an exchangeRate after maturity [here](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L104).\n*   From the [explanation about Exchange Rate](https://docs.swivel.finance/developers/ubiquitous-language-v2/compound-language#exchange-rate), we know this ratio increases over time and also exchangeRate after the market is matured is greater than market.maturityRate from [this function for zcToken interest](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Marketplace/MarketPlace.sol#L220)\n*   So after removeNotional() is called, vlt.exchangeRate > maturityRate.\n*   After that, Alice calls [redeemVaultInterest()](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L651) to claim interest, but it will revert [here](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L124) with uint underflow error because maturityRate < vlt.exchangeRate.\n*   So she can't claim her interest forever.\n*   Also, if she claims interest first before calling [combineTokens()](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L600), she can't get paid back here 1000 USDC forever because [removeNotional()](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L82) will revert [here](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L94) for the same reason.\n\n### Tools Used\n\nSolidity Visual Developer of VSCode\n\n### Recommended Mitigation Steps\n\nWe should save vlt.exchangeRate = maturityRate when maturityRate > 0 and exchangeRate > maturityRate.\n\n    vlt.exchangeRate = (maturityRate > 0 && maturityRate < exchangeRate) ? maturityRate : exchangeRate;\n\nThere are several places to modify for safety.\n\n*   <https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L73>\n*   <https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L104>\n*   <https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L132>\n*   <https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L176>\n*   <https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L199>\n*   <https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L231>\n\n**[JTraversa (Swivel) disputed, disagreed with severity and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/116#issuecomment-1185990904):**\n > I don't actually disagree with most of the warden's claims, just note that all of this would need to be intentional on the part of the user, and could not happen under any normal workflow of the protocol.\n> \n> E.g.:\n> > Alice splits 1000 USDC into zcToken and nToken using [splitUnderlying()](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L578)\n> After the market is martured, she withdraws back 1000 USDC using [combineTokens()](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L600)\n> \n> This interaction relies on a user calling `combineTokens` past maturity, which is 1. not possible from our UI 2. not beneficial in any way whatsoever, as redemption is explicitly done post maturity through `redeemZcToken`, + not using `redeemZcToken` would also fail to accrue post maturity interest.\n> \n> The same can be said of:\n> > Also, if she claims interest first before calling [combineTokens()](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L600), she can't get paid back here 1000 USDC forever because [removeNotional()](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L82) will revert [here](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L94) for the same reason.\n> \n> There is no use case to calling `combineTokens` after maturity, meaning this specifically isn't an issue in that direction either.\n> \n> Just disagreeing with severity because of the lack of potential impact in any reasonable operation of the protocol. A user would have to do this through a script, and the workflow would be unlikely to happen on accident.\n\n**[robrobbins (Swivel) resolved](https://github.com/code-423n4/2022-07-swivel-findings/issues/116#issuecomment-1204559301):**\n > Addressed: https://github.com/Swivel-Finance/gost/pull/414.\n\n**[0xean (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/116#issuecomment-1226463334):**\n > I am somewhere between leaving this as High and downgrading to Medium.  I understand the sponsor's points, but think it's a pretty nasty rough edge to leave out there if a user interacted with the contract through etherscan or some other UI with less guard rails.  \n> \n> I am going to downgrade to Medium based on it being somewhat self inflicted and the probability of it therefore very low.  \n\n\n\n***\n\n## [[M-02] Swivel.setFee() is implemented wrongly.](https://github.com/code-423n4/2022-07-swivel-findings/issues/117)\n_Submitted by hansfriese, also found by jonatascm_\n\n`Swivel.setFee()` is implemented wrongly.\nSwivel.feenominators won't be set as expected.\n\n### Proof of Concept\n\n[This function](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L495) has a parameter \"i\" for the index of the new fee denomination but it isn't used during the update.\n\n### Tools Used\n\nSolidity Visual Developer of VSCode\n\n### Recommended Mitigation Steps\n\n[This line](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L507) should be modified like below.\n\n    feenominators[i[x]] = d[x];\n\n**[JTraversa (Swivel) disagreed with severity and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/117#issuecomment-1189941504):**\n > Given this allows us to change fees post initialization, and doesn't lead to the leakage of value or loss of funds, but a potential issue for admins solely (in a rare edge case where fees would even need to be changed), I might consider this low risk?\n\n**[bghughes (judge) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/117#issuecomment-1203375472):**\n> I agree with the warden here given that this is an incorrect implementation of the intended functionality. The warden's suggestion shows that the function was not working as intended; if in production, for instance, this was not caught then calls to `setFee` would not work as intended and not set any fees across the markets. Instead, it would only populate the zero index of the 2nd-demensional array `uint16[4] public feenominators;` losing these values `[zcTokenInitiate, zcTokenExit, vaultInitiate, vaultExit]` and breaking functionality.\n\n**[JTraversa (Swivel) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/117#issuecomment-1205908111):**\n > Yeah I was kind of on the fence on this one thinking the method wouldn't impact the current feenominators in the way you've stated, but because it actually could have an impact, and the event itself also would be misleading, removing the disagreement.\n\n**[robrobbins (Swivel) resolved](https://github.com/code-423n4/2022-07-swivel-findings/issues/117#issuecomment-1208525682):**\n > Addressed: https://github.com/Swivel-Finance/gost/pull/419.\n\n\n\n***\n\n## [[M-03] Error in allowance logic](https://github.com/code-423n4/2022-07-swivel-findings/issues/129)\n_Submitted by 0xDjango, also found by 0x1f8b, 8olidity, arcoun, Bahurum, caventa, csanuragjain, hansfriese, joestakey, jonatascm, Lambda, oyc&#95;109, and ronnyx2017_\n\n<https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Tokens/ZcToken.sol#L112-L114>\n\n<https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Tokens/ZcToken.sol#L132-L133>\n\n### Impact\n\nThere is an error in the allowance functionality to allow a non-owner to withdraw or redeem ZcTokens for the owner. Taking `ZcToken.redeem()` as an example, behold the following if/else block:\n\n            if (holder == msg.sender) {\n                return redeemer.authRedeem(protocol, underlying, maturity, msg.sender, receiver, principalAmount);\n            }\n            else {\n                uint256 allowed = allowance[holder][msg.sender];\n                if (allowed >= principalAmount) { revert Approvals(allowed, principalAmount); }\n                allowance[holder][msg.sender] -= principalAmount;  \n                return redeemer.authRedeem(protocol, underlying, maturity, holder, receiver, principalAmount);\n\nIf the `msg.sender` is the holder, no check for allowance is needed. If the sender is not the holder, then their allowance is checked.\n\nThe error lies in the if statement `if (allowed >= principalAmount) { revert Approvals(allowed, principalAmount); }`. This states that if the sender has equal to or more allowance than the principalAmount, revert.\n\nTherefore, if the sender has the proper allowance or more allowance than necessary, the transaction will revert. If the sender has less allowance than necessary, the transaction will still revert because of the `allowance[holder][msg.sender] -= principalAmount;` clause.\n\nIn conclusion, there is no way to `withdraw()` or `redeem()` on behalf of another user.\n\n### Recommended Mitigation Steps\n\nThe fix is to simply change `>=` to `<`.\n\n\n**[JTraversa (Swivel) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/129#issuecomment-1189926148):**\n > Approval workflow doesnt leave funds at risk but is a nice to have, that plus scope and this *might* end up Low risk but I think Medium is appropriate as well.\n\n**[bghughes (judge) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/129#issuecomment-1200480311):**\n > This is a good issue and I agree with the severity. I decided against making this High severity due to the fact that funds are not necessarily at risk; it's just intended allowance functionality will not behave as expected. \n\n**[robrobbins (Swivel) resolved and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/129#issuecomment-1203288875):**\n > See [#180](https://github.com/code-423n4/2022-07-swivel-findings/issues/180). \n\n**[bghughes (judge) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/129#issuecomment-1203389433):**\n > Making this the main issue for the allowance flipped sign.\n\n\n\n***\n\n## [[M-04] VaultTracker miscalculates compounding interest](https://github.com/code-423n4/2022-07-swivel-findings/issues/136)\n_Submitted by GimelSec_\n\n<https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L65>\n\n<https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L100>\n\n<https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L130>\n\n<https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L172>\n\n<https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L191>\n\n<https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L228>\n\n### Impact\n\nVaultTracker neglect previously accrued interest while attempting to calculate new interest. This causes `nToken` holders to receive less yield than they should.\n\nAll functions within VaultTracker that calculate interest are affected, including `addNotional`, `removeNotional`, `redeemInterest`, `transferNotionalFrom` and `transferNotionalFee`.\n\n### Proof of Concept\n\nConsider the case where some user `N` tries to initiate a vault at 3 specific moments where `cToken` exchange rate is 5/10/20 respectively.\nThe corresponding market stays active and has not reached maturity. Additionally, `N` selects his premium volume to make `principalFilled` match the `cToken` exchange rate during each call to `initiateVaultFillingZcTokenInitiate`.\nWe recognize those exchange rates are most likely unrealistic, but we chose those for ease of demonstrating the bug. We also assume fees to be 0 for simplicity.\n\nFor the first call to `Swivel.deposit`\n\n*   `a` = 5\n*   `exchangeRate` = 5\n\nAssuming no additional fees while minting `cToken`, `N` will receive `cToken\\` for his 5 underlying tokens.\n\nFor the matching call to `VaultTracker.addNotional`\n\n*   `a` = 5\n*   `vlt.notional` = 0\n*   `exchangeRate` = 5\n\nSince this is the first time adding `nToken` to the vault, there is no need to consider any accumulated interests, and we can assign `a` directly to `vlt.notional`.\n\nThe result will be\n\n*   `vlt.notional` = 5\n*   `vlt.redeemable` = 0\n*   `cToken` held by `Swivel` = 1\n\nFor the second call to \\`Swivel.deposit, we have\n\n*   `a` = 10\n*   `exchangeRate` = 10\n\nThe matching call to `VaultTracker.addNotional` has\n\n*   `a` = 10\n*   `vlt.notional` = 5\n*   `vlt.redeemable` = 0\n*   `exchangeRate` = 10\n*   `vlt.exchangeRate` = 5\n\nThe `yield` is derived from `((exchangeRate * 1e26) / vlt.exchangeRate) - 1e26` = `((10 * 1e26) / 5) - 1e26` = 1e26\nApplying this to `vlt.notional`, we get `interest` = `1e26 * 5 / 1e26` = 5\n\nThis results in\n\n*   `vlt.notional` = 5+10 = 15\n*   `vlt.redeemable` = 0+5 = 5\n*   `cToken` held by `Swivel` = 1+1 = 2\n\nNow comes the last call to `Swivel.deposit`, where\n\n*   `a` = 20\n*   `exchangeRate` = 20\n\n`VaultTracker.addNotional` has\n\n*   `a` = 20\n*   `vlt.notional` = 15\n*   `vlt.redeemable` = 5\n*   `exchangeRate` = 20\n*   `vlt.exchangeRate` = 10\n\n`yield` = `((20 * 1e26) / 10) - 1e26` = 1e26\n`interest` = `1e26 * 15 / 1e26` = 15\n\nSo we finally end up with\n\n*   `vlt.notional` = 15+20 = 35\n*   `vlt.redeemable` = 5+15 = 20\n*   `cToken` held by `Swivel` = 2+1 = 3\n\n<!---->\n\n    Swivel{\n      ...\n      function deposit(uint8 p, address u, address c, uint256 a) internal returns (bool) {\n        ...\n        if (p == uint8(Protocols.Compound)) { // TODO is Rari a drop in here?\n          return ICompound(c).mint(a) == 0;\n        }\n        ...\n      }\n      ...\n    }\n\n\n    VaultTracker{\n      ...\n      function addNotional(address o, uint256 a) external authorized(admin) returns (bool) {\n        uint256 exchangeRate = Compounding.exchangeRate(protocol, cTokenAddr);\n\n        Vault memory vlt = vaults[o];\n\n        if (vlt.notional > 0) {\n          uint256 yield;\n\n          // if market has matured, calculate marginal interest between the maturity rate and previous position exchange rate\n          // otherwise, calculate marginal exchange rate between current and previous exchange rate.\n          if (maturityRate > 0) { // Calculate marginal interest\n            yield = ((maturityRate * 1e26) / vlt.exchangeRate) - 1e26;\n          } else {\n            yield = ((exchangeRate * 1e26) / vlt.exchangeRate) - 1e26;\n          }\n\n          uint256 interest = (yield * vlt.notional) / 1e26;\n          // add interest and amount to position, reset cToken exchange rate\n          vlt.redeemable += interest;\n          vlt.notional += a;\n        } else {\n          vlt.notional = a;\n        }\n        vlt.exchangeRate = exchangeRate;\n        vaults[o] = vlt;\n\n        return true;\n      }\n        ...\n    }\n\nNow take a step back and think about the actual value of 3 `cToken` when `exchangeRate = 20`, it should be pretty obvious that the value tracked by `VaultTracker` = 35 + 20 = 55 is lesser than the actual value of `cToken` held by `Swivel` = 20\\*3 = 60.\n\nThis is due to `VaultTracker` neglecting that previously accrued interest should also be considered while calculating new interest.\n\n### Recommended Mitigation Steps\n\nFor all interest calculations, use `vlt.notional + vlt.redeemable` instead of just `vlt.notional` as `yield` base.\n\n**[JTraversa (Swivel) disputed and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/136#issuecomment-1185979753):**\n > I believe that this would be valid if the `redeemable` was not redeemable by the user at any point in time.\n> \n> While interest accrues, it accrues to the `redeemable` balance which is withdrawn at any time. \n> \n> That said, in most cases, the math required to store and do the additional calculation marginal interest on the `redeemable` balance is largely a UX consideration? Should users be required to redeem their `redeemable` to earn interest or should it be compounded naturally though bloat tx costs? \n> \n> Should we force additional costs on a per transaction basis (that likely costs more than the interest itself for the vast majority of users), or should we assume that once significant enough `redeemable` is accrued to earn reasonable further interest, it will be redeemed by the user. \n> \n> (e.g. with example being 400% interest, and assuming an (optimistic) 5% APY is possible, the example would take ~28 years to replicate, and gas costs for transactions in that 28 years would be significant).\n\n**[JTraversa (Swivel) disagreed with severity and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/136#issuecomment-1193348594):**\n> Thought about this one a bit more and it might slip in as acknowledged and disagreed with severity as it's more value leakage than anything else.\n> \n> It's a design decision, but could still be considered a detriment so perhaps not worth disputing all together?\n\n**[robrobbins (Swivel) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/136#issuecomment-1219849345):**\n> This is a design feature. We could just as easily dismiss this all together by stating _it is now documented that .notional is non compounding_. I don't think we should do that however as I agree with @JTraversa here that some acknowledgement should happen for bringing this up. But it is not a **risk** in any situation.\n\n**[robrobbins (Swivel) resolved](https://github.com/code-423n4/2022-07-swivel-findings/issues/136#issuecomment-1220016605):**\n > Addressed: https://github.com/Swivel-Finance/gost/pull/427\n\n**[0xean (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/136#issuecomment-1226426531):**\n > Going to reduce the severity on this to Medium as it has some pretty large external factors to end up in a scenario where it leaks any real value.  \n\n\n\n***\n\n## [[M-05] Should use >= instead of >](https://github.com/code-423n4/2022-07-swivel-findings/issues/21)\n_Submitted by oyc&#95;109_\n\n<https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L86>\n\n<https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/VaultTracker/VaultTracker.sol#L158>\n\nThe comparison should be 'a >= vlt.notional' instead of a > vlt.notional.\n\nOtherwise dust amounts will always be left in vlt.notional when calling `removeNotional()` or `transferNotionalFrom()`.\n\n**[JTraversa (Swivel) confirmed, but disagreed with severity and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/21#issuecomment-1186019971):**\n > While the leakage is potentially ... 1 wei, its leakage nonetheless and a frontend would surely provide the max amount most of the time leading to reverts.\n> \n> Maybe a quick severity review from wardens but happy with where its at.\n\n**[bghughes (judge) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/21#issuecomment-1203398732):**\n> I agree that this is quite low stakes, given that there is non-zero potential leakage I think the warden should get credit for this as a Medium Risk vulnerability. Per the C4 juging criteria:\n> \n> >2 — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.\n\n**[robrobbins (Swivel) resolved](https://github.com/code-423n4/2022-07-swivel-findings/issues/21#issuecomment-1211292178):**\n > Addressed: https://github.com/Swivel-Finance/gost/pull/423.\n\n\n\n***\n\n## [[M-06] Yearn vault integration is broken](https://github.com/code-423n4/2022-07-swivel-findings/issues/29)\n_Submitted by bardamu_\n\n<https://github.com/code-423n4/2022-07-swivel/blob/fbf94f87994d91dce75c605a1822ec6d6d7e9e74/Marketplace/Compounding.sol#L55-L56>\n\n<https://github.com/code-423n4/2022-07-swivel/blob/fbf94f87994d91dce75c605a1822ec6d6d7e9e74/Marketplace/MarketPlace.sol#L64-L73>\n\n### Impact\n\nYearn integration is broken, making it impossible to create a `MarketPlace` associated with a Yearn vault.\n\n### Proof of Concept\n\n`Compounding.sol` attempts to resolve the `underlying` token implemented by supported protocols:\n\n<https://github.com/code-423n4/2022-07-swivel/blob/fbf94f87994d91dce75c605a1822ec6d6d7e9e74/Marketplace/Compounding.sol#L50-L64>\n\n    function underlying(uint8 p, address c) internal view returns (address) {\n        if (p == uint8(Protocols.Compound)) {\n          return ICompoundToken(c).underlying();\n        } else if (p == uint8(Protocols.Rari)) {\n          return ICompoundToken(c).underlying();\n        } else if (p == uint8(Protocols.Yearn)) {\n          return IYearnVault(c).underlying();\n        } else if (p == uint8(Protocols.Aave)) {\n          return IAaveToken(c).UNDERLYING_ASSET_ADDRESS();\n        } else if (p == uint8(Protocols.Euler)) {\n          return IEulerToken(c).underlyingAsset();\n        } else {\n          return IErc4626(c).asset();      \n        }\n      }\n\nAs can be seen in the excerpt above, the contract will attempt to access `IYearnVault(c).underlying();` when integrating with a Yearn vault. **Problem is this property is not present in Yearn vaults.** Therefore this operation will always revert.\n\nIn particular, this would not allow to create a `MarketPlace` associated with a Yearn vault even though the protocol is stated as supported.\n\n<https://github.com/code-423n4/2022-07-swivel/blob/fbf94f87994d91dce75c605a1822ec6d6d7e9e74/Marketplace/MarketPlace.sol#L64-L73>\n\n    function createMarket(\n      uint8 p,\n      uint256 m,\n      address c,\n      string memory n,\n      string memory s\n    ) external authorized(admin) unpaused(p) returns (bool) {\n      if (swivel == address(0)) { revert Exception(21, 0, 0, address(0), address(0)); }\n\n      address underAddr = Compounding.underlying(p, c);\n\nCorrect underlying token address in Yearn vaults is stored in the `token` property.\n\n<https://github.com/yearn/yearn-vaults/blob/beff27908bb2ae017ed73b773181b9b93f7435ad/contracts/Vault.vy#L74>\n\n### Tools Used\n\nVIM\n\n#### Recommended Mitigation Steps\n\nAccess the underlying token of a Yearn vault through the `token` property instead of the non-existent `underlying` which will cause a revert and the inability to create marketplaces associated with the protocol.\n\n**[JTraversa (Swivel) disagreed with severity and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/29#issuecomment-1188445803):**\n > Given no funds would be at risk as this is an issue that would exist at the time of admin's market creation, I'd probably say that this issue is likely ~Low or so.\n\n**[bghughes (judge) decreaased severity to Medium and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/29#issuecomment-1204024747):**\n> Agreed that funds are not necessarily at risk but this is a broken functionality of the protocol. Given: \n> >There are a few primary targets for concern:\n> >1. Ensuring the new `Compounding.sol` library properly calculates the exchangeRate for each external protocol.\n> >2. Ensuring the new `withdraw` and `deposit` methods on `Swivel.sol` properly encapsulate external protocol interactions.\n> \n> I believe this should be a Medium Risk issue.\n\n**[robrobbins (Swivel) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/29#issuecomment-1211116106):**\n > The example given is incorrect. `Compounding.Underlying()` is correct as `Compounding` is our library that abstracts the actual call to get the asset in question. \n> \n> The actual error is in the Compounding lib where `.Protocol` resolves to `Protocols.Yearn`.\n\n**[robrobbins (Swivel) resolved](https://github.com/code-423n4/2022-07-swivel-findings/issues/29#issuecomment-1211145751):**\n > Addressed: https://github.com/Swivel-Finance/gost/pull/422.\n\n\n\n***\n\n## [[M-07] ERC20 Incorrect check on returnedAddress in permit() results in unlimited approval of zero address](https://github.com/code-423n4/2022-07-swivel-findings/issues/72)\n_Submitted by devtooligan_\n\nWhen creating ERC20.sol from Solmate, a `require()` in `permit()` was converted to a custom error incorrectly.\n\nIt now reads:\n\n```solidity\n\nif (recoveredAddress != address(0) && recoveredAddress != owner) {\n    revert Invalid(msg.sender, owner);\n}\n```\n\nSo if the `recoveredAddress` is non-zero and the `recoveredAddress` is not `owner` it will error. But if the `recoveredAddress == 0x0` then it will pass this check.\n\nAnyone can permit themselves as a `spender` using the zero address for any token which inherits this ERC20 implementation.  So, for example, someone could redeem some zcTokens for underlying, then transfer the burned tokens back to themselves and repeat, draining the protocol.\n\n### Proof of Concept\n\n```solidity\nfunction attack(IZcToken zctoken) {\n    zctoken.permit(\n        address(0x0),\n        address(this),\n        type(uint).max,\n        block.timestamp,\n        uint8(0),  // using 0 for r,s,v returns address(0x0) from ecrecover()\n        bytes32(0),\n        bytes32(0)\n    );\n    assert(zctoken.allowance(address(0x0), address(this)), type(uint).max);\n\n    uint amount = zctoken.balanceOf(address(0x0)\n\n    zctoken.transferFrom(\n        address(0x0),\n        address(this),\n        amount\n    );\n\n                                    \n    // assumes attacker has previously acquired notional\n    IMarketPlace(mp).burnZcTokenRemovingNotional(\n        zctoken.protocol(),\n        zctoken.underlying(),\n        zctoken.maturity(),\n        address(this),\n        amount\n    );\n                                    \n    // .. repeat until drained, then move on to next token\n        \n}\n```\n\n### Recommended Mitigation Steps\n\n```diff\ndiff --git a/Creator/Erc20.sol b/Creator/Erc20.sol\nindex a1f72b0..8464626 100644\n--- a/Creator/Erc20.sol\n+++ b/Creator/Erc20.sol\n@@ -162,7 +162,7 @@ contract Erc20 {\n                 s\n             );\n\n-            if (recoveredAddress != address(0) && recoveredAddress != owner) {\n+            if (recoveredAddress == address(0) || recoveredAddress != owner) {\n                 revert Invalid(msg.sender, owner);\n             }\n```\n\n**[JTraversa (Swivel) disagreed with severity and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/72#issuecomment-1186006635):**\n > This would rely on the zcTokens themselves to sit on address(0) right? \n> \n> So the big thing would be that whatever burn implementation the token uses must actually remove the tokens from the supply rather than sending them to address(0). (which this implementation does)\n> \n> That said, its clear the statement wasn't as intended (or that block would have been removed).\n> \n> With scope questions this should probably be low-med or disputed?\n\n**[robrobbins (Swivel) resolved](https://github.com/code-423n4/2022-07-swivel-findings/issues/72#issuecomment-1204570102):**\n > Addressed: https://github.com/Swivel-Finance/gost/pull/415.\n\n**[bghughes (judge) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/72#issuecomment-1205862918):**\n> It's an interesting scope question as it questions a dependency - that said, this sort of low-level dependency, if used throughout the protocol, could jeopardize funds in a vault and break ERC-20 assumptions. I think the issue should stand given the risk.\n\n**[JTraversa (Swivel) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/72#issuecomment-1205904983):**\n > Yea agreed.\n> \n> That said I'm more emphasizing the other part for the severity claim?:\n> \n> >So the big thing would be that whatever burn implementation the token uses must actually remove the tokens from the supply rather than sending them to address(0). (which this implementation does)\n> \n> Though I think we are ameliorating this anyways, the issue would only arise if somehow address(0) was broken, as discussed by the warden himself in this twitter thread: https://twitter.com/devtooligan/status/1554709426652688384\n\n**[0xean (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/72#issuecomment-1226102504):**\n > Given the current implementation does not send these tokens to address(0) to burn them I think this should be downgraded to Medium severity. \n> \n> The \"external requirement\" would be someone / some protocol trying to burn tokens be sending them to address(0) instead of calling burn.  \n> \n> I don't see a direct attack path given the current implementation but do think this is above QA, Med seems right.  \n> \n> \n> \n\n\n\n***\n\n## [[M-08] ZcToken.withdraw will send user 0 tokens if called after maturity deadline but before market is set mature](https://github.com/code-423n4/2022-07-swivel-findings/issues/32)\n_Submitted by panprog_\n\n<https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Tokens/ZcToken.sol#L99>\n\n<https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Tokens/ZcToken.sol#L92>\n\n### Impact\n\nIf `maturityRate` is still `0` after maturity deadline (because no transactions setting `maturityRate` have been executed yet), then `previewWithdraw` calculated amount (used by `ZcToken.withdraw` function) is `0` and thus `withdraw` function will send `0` underlying tokens to user, which might be very confusing to user. Subsequent call to the same function will send him correct amount.\n\nThe same problem applies to all view functions in `ZcToken` contract - they use saved market `maturityRate`, which can be `0` even past deadline time and functions revert or return `0` in this case.\n\nIncorrect withdrawal behaviour:\n\n1.  Bob has some `ZcToken`s.\n2.  Right at the time of maturity Bob tries to withdraw his underlying tokens by calling `ZcToken.withdraw` with some underlying amount.\n3.  Instead of receiving corresponding amount, Bob receives nothing (but transaction still succeeds and he uses gas for it).\n\n### Proof of Concept\n\n1.  `withdraw`: calculates `previewAmount` from `previewWithdraw`\n\n<https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Tokens/ZcToken.sol#L99>\n\n2.  `previewWithdraw`: multiplication by `maturityRate` returns 0\n\n<https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Tokens/ZcToken.sol#L92>\n\n### Recommended Mitigation Steps\n\nAdd `getMaturityRate` function to `ZcToken`, which will return either market's `maturityRate` or (if it's `0`) current market's `exchangeRate`. Use this function instead of `maturityRate` everywhere across `ZcToken`.\n\n**[JTraversa (Swivel) confirmed](https://github.com/code-423n4/2022-07-swivel-findings/issues/32)** \n\n**[robrobbins (Swivel) resolved](https://github.com/code-423n4/2022-07-swivel-findings/issues/32#issuecomment-1211080261):**\n > Addressed: https://github.com/Swivel-Finance/gost/pull/421\n\n\n\n***\n\n## [[M-09] VaultTracker has the wrong admin](https://github.com/code-423n4/2022-07-swivel-findings/issues/36)\n_Submitted by itsmeSTYJ, also found by GimelSec_\n\n<https://github.com/code-423n4/2022-07-swivel/blob/main/Marketplace/MarketPlace.sol#L77>\n\n<https://github.com/code-423n4/2022-07-swivel/blob/main/Creator/Creator.sol#L41>\n\n<https://github.com/code-423n4/2022-07-swivel/blob/main/VaultTracker/VaultTracker.sol#L32>\n\n### Description\n\n`MarketPlace.createMarket()` calls `Creator.create()` which creates an instance of `ZcToken` and a `VaultTracker`. `VaultTracker` takes `msg.sender` as the admin. We know that if contract A calls contract B which calls contract C, `msg.sender` in contract C is the address of B i.e. the `msg.sender` in VaultTracker is the address of the creator contract. However, the creator contract is not able (and not supposed to) interact with the VaultTracker unlike the marketplace contract.\n\n### Recommended Mitigation Steps\n\nModify the constructor of the VaultTracker contract so that the creator contract can pass in msg.sender (MarketPlace’s address) to be used as admin.\n\n**[JTraversa (Swivel) confirmed](https://github.com/code-423n4/2022-07-swivel-findings/issues/36)** \n\n**[bghughes (judge) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/36#issuecomment-1205869654):**\n > Using this as the main `admin` constructor issue. Given it is admin related, I believe going with the Medium issue instead of #134 makes sense.\n\n**[robrobbins (Swivel) resolved](https://github.com/code-423n4/2022-07-swivel-findings/issues/36#issuecomment-1209654129):**\n > See [#134](https://github.com/code-423n4/2022-07-swivel-findings/issues/134).\n\n\n\n***\n\n## [[M-10] unpaused(p) modifier missing in authRedeem function](https://github.com/code-423n4/2022-07-swivel-findings/issues/64)\n_Submitted by csanuragjain, also found by cccz_\n\nDue to missing modifier, User will be able to redeem zcTokens and withdraw underlying even in paused Market. This happens due to missing unpaused(p) modifier\n\n### Proof of Concept\n\n1.  Lets see function definition for authRedeem function\n\n<!---->\n\n    function authRedeem(uint8 p, address u, uint256 m, address f, address t, uint256 a) public authorized(markets[p][u][m].zcToken) returns (uint256 underlyingAmount)\n\n2.  Observe that unpaused(p) modifier is missing\n\n3.  This means if Marketplace is placed under paused state by Admin, then also User can call authRedeem at Marketplace via withdraw/redeem at ZcToken contract.\n\n4.  This will allow Users to withdraw in paused state which is incorrect\n\n### Recommended Mitigation Steps\n\nAdd unpaused(p) modifier in authRedeem function\n\n    function authRedeem(uint8 p, address u, uint256 m, address f, address t, uint256 a) public authorized(markets[p][u][m].zcToken) unpaused(p) returns (uint256 underlyingAmount) {\n    ...\n    }\n\n**[JTraversa (Swivel) confirmed](https://github.com/code-423n4/2022-07-swivel-findings/issues/64)** \n\n**[robrobbins (Swivel) resolved](https://github.com/code-423n4/2022-07-swivel-findings/issues/64#issuecomment-1208729320):**\n > Addressed: https://github.com/Swivel-Finance/gost/pull/420\n\n\n\n***\n\n## [[M-11] Loss of funds in an underlying protocol would cause catostrophic loss of funds for swivel](https://github.com/code-423n4/2022-07-swivel-findings/issues/71)\n_Submitted by 0x52_\n\nLoss of all user funds.\n\n### Proof of Concept\n\nThis exploit stems from a quirk in the way that exchange rate is tracked for matured positions. We first need to breakdown how interest is calculate for a matured position.\n\n<https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L123-L132>\n\nIn L124 the yield for a matured position is calculated as the difference between the previous exchange ratio and the maturity rate. This counts on the fact the exchange rate of the underlying protocol never decreases, as it always set the previous exchange rate to the current exchange rate after yield is calculated regardless of whether it is mature or not. The assumption is that the current exchange rate will always be greater than or equal to the maturity exchange rate. If it is higher then L124 will revert due to underflow and if it is equal then L124 will return yield = 0. The issue comes in when this assumption is invalidated. This would happen were the underlying protocol to lose value (hacked, UST depeg, etc.). With the loss of value, the exchange rate would drop, allowing a user to repeatedly redeem their matured position until all funds from the affected protocol are drained.\n\nExample:\nImagine a yearn vault that takes USDC as the underlying token. It's current price per share is 1.25e6 (1.25 USDC per vault share). Swivel has a recently expired VaultTracker.sol for this yearn vault for which mature() is called, setting maturityRate = 1.25e6. Now let's imagine that one small strategy deployed by the vault is compromised and the vault loses 4% of it's USDC. Now the vault will return 1.2e6 as the price per share. When calling redeemInterest for the first time, vlt.exchangeRate will be updated to 1.2e6 in L132. The next time redeemInterest is called it will pay the difference between 1.25e6 (maturityRate) and 1.2e6 (vlt.exchangeRate). redeemInterest can be called repeatedly like this until all USDC deposited in the yearn vault by Swivel users has been drained.\n\nAdditionally the user in question would not even need to have an expired position before the loss of funds occurred. SplitUnderlying in Swivel.sol has no checks to keep a user from minting previously expired market. After the loss of funds occurred the malicious user could use SplitUnderlying to create nTokens for the expired market, then carry out the exploit\n\n### Recommended Mitigation Steps\n\nThe impact of such an event could be decreased with changes. In splitUnderlying add:\n\n`require(block.timestamp < m)`\n\nThis prevents nTokens from being created after expiration which dramatically reduces the ability to take advantage of the opportunity. As for redeemInterest, add the following line after L124:\n\n`vlt.notional = 0`\n\nThis would clear the notional balance of the user when redeeming after maturity, making it impossible to call repeatedly and reduces the chances that any users have a notional balance to exploit it should an event like this happen.\n\n**[JTraversa (Swivel) disputed, disagreed with severity and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/71#issuecomment-1186008338):**\n > I'm unsure if this is a proper report / should be accepted given similar issues exist when you integrate nearly any DeFi primitive.\n> \n> You have risks that your integrated protocols could break, but make assumptions that they will not while placing failsafes like pause mechanism in your protocol.\n> \n> That said, the suggestions dont really solve anything, though we may end up taking them to heart? \n> \n> If the issue is that funds are lost when integrated protocol funds are lost and an attacker can then abuse these methods then the solutions provided just make someone spend more on gas in whatever flash loan tx they use to drain the protocol or slightly reduce the likelihood than an attacker will be in the correct position.\n\n**[bghughes (judge) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/71#issuecomment-1204013030):**\n > Note that this builds on [#79](https://github.com/code-423n4/2022-07-swivel-findings/issues/79) and I believe it is a good issue. The warden lays out a clear case in which Vault funds can be drained if these conditions occur:\n> - A market has matured\n> - The exchange rate of the underlying vault token drops below the set `maturityRate`.\n> \n> I agree that integrations can break @JTraversa, but given that Swivel aims to be the place people can go to deposit vault tokens and get ZCB + yield tokens (including allowing 4626 vaults) this is an attack vector IMO. Moreover, Yearn uses some discrete strategies in which the price per share realistically could reduce or even be manipulated in atomicity in a flash loan attack (which may seem counterintuitive bc generally lending vaults are supposed to be \"up only\").\n> \n> Confirming this as a High-Risk issue as an attack vector to drain all vault funds is present. Please let me know Sponsor if you have any questions.\n\n**[robrobbins (Swivel) resolved and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/71#issuecomment-1205711627):**\n > Much of this is addressed with: https://github.com/Swivel-Finance/gost/pull/417 (cannot mint post maturity).\n\n**[0xean (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/71#issuecomment-1227202390):**\n > Downgrading to Medium as it requires external factors for this situation to present itself and the attack to occur.  \n\n\n\n***\n\n## [[M-12] Interface definition error](https://github.com/code-423n4/2022-07-swivel-findings/issues/39)\n_Submitted by bin2chen, also found by 0x52, 0xDjango, 0xSky, auditor0517, Picodes, rokinot, ronnyx2017, and scaraven_\n\n<https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Marketplace/Interfaces.sol#L52>\n\n<https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Marketplace/MarketPlace.sol#L164>\n\n<https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L620>\n\n<https://github.com/Swivel-Finance/gost/blob/a76ac859df049527c3e5df85e706dec6ffa0e2bb/test/swivel/Swivel.sol#L10>\n\n### Impact\n\n`MarketPlace.authRedeem()` call interface `ISwivel.authRedeem()` but Swivel contract  does not have this method only method  \"authRedeemZcToken()\".\n\nThe result will cause `MarketPlace.authRedeem()` to fail forever, thus causing `ZcToken.withdraw()` to fail forever.\n\n### Proof of Concept\n\nMarketPlace.sol call `ISwivel.authRedeem()`\n\n      function authRedeem(uint8 p, address u, uint256 m, address f, address t, uint256 a) public authorized(markets[p][u][m].zcToken) returns (uint256 underlyingAmount) {\n         .....\n\n          ISwivel(swivel).authRedeem(p, u, market.cTokenAddr, t, a);\n\n         .....\n        } else {\n\n         .....\n          ISwivel(swivel).authRedeem(p, u, market.cTokenAddr, t, amount);\n         ....\n        }\n\nSwivel.sol does not have `authRedeem()` ,only `authRedeemZcToken()`\n\n```\n  function authRedeemZcToken(uint8 p, address u, address c, address t, uint256 a) external authorized(marketPlace) returns(bool) {\n    // redeem underlying from compounding\n    if (!withdraw(p, u, c, a)) { revert Exception(7, 0, 0, address(0), address(0)); }\n    // transfer underlying back to msg.sender\n    Safe.transfer(IErc20(u), t, a);\n\n    return (true);\n  }\n\n```\n\n### Recommended Mitigation Steps\n\nSwivel contract need declare \"is ISwivel\" and change method name.\n\nOther contracts should also declare \"is Iinterfacename\" to avoid method name errors\nlike IMarketPlace.\n\n**[JTraversa (Swivel) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/39#issuecomment-1188432197):**\n > Duplicate of [#186](https://github.com/code-423n4/2022-07-swivel-findings/issues/186).\n\n**[bghughes (judge) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/39#issuecomment-1203993402):**\n > Main issue for the non-existent function call and interface definition error.\n\n**[0xean (judge) increased severity to High and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/39#issuecomment-1226518688):**\n > This shows a direct path to funds being locked, upgrading the severity (and all duplicates) to high. \n\n**[JTraversa (Swivel) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/39#issuecomment-1229878805):**\n > Hmm, I think this could go either way.\n> \n> Technically because this is a redundant method meant to add compliance with EIP-5095, there aren't actually user funds locked because they can follow the normal `redeem` workflow. So it is specifically that EIP-5095 compliance that would be broken.\n> \n> Plus personally I'd also want to reward more interesting or critical errors rather than a mis-spelled or defined interface.\n> \n> That said, I'd of course err towards the judge's decision, but maybe that extra context helps ! \n\n**[0xean (judge) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/39#issuecomment-1230214222):**\n > @JTraversa - appreciate the note and context. \n> \n> Can we walk through that flow to confirm the code path?  I would downgrade to M if there is an alternate flow.\n> \n> We both agree this function doesn't work - https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Marketplace/MarketPlace.sol#L148\n> \n> Which afaict also means that these calls are not functional either. \n> \n> https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L98\n> \n> https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L124\n> \n> Can you direct me to the alternate flow for redemption and I will confirm and move back to M\n> \n\n**[JTraversa (Swivel) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/39#issuecomment-1230996235):**\n > For sure!\n> \n> So there are two ways to redeem. Given custody sits on Swivel.sol, one is to call the zcToken (ERC-5095), which then itself calls authorized methods that bubble up from zcToken -> marketplace -> swivel. This is the path that appears to be broken, the `authRedeem`.\n> \n> That said, the primary path (the one we've used in previous Swivel versions) is one that starts with a redemption method directly on Swivel.sol, and has the instruction to burn bubbled down from swivel -> marketplace -> zcToken.\n> \n> That is available on Swivel.sol here: [Link](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Swivel/Swivel.sol#L634)\n> \n> And its call to Marketplace.sol here: [Link](https://github.com/code-423n4/2022-07-swivel/blob/fd36ce96b46943026cb2dfcb76dfa3f884f51c18/Marketplace/MarketPlace.sol#L176)\n> \n> Hopefully that clarifies a bit :) \n\n**[0xean (judge) decreased severity back to Medium and commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/39#issuecomment-1231004724):**\n > Yup, thank you. Downgraded back to M as user funds are not locked given the alternate path. \n\n\n\n***\n\n\n\n# Low Risk and Non-Critical Issues\n\nFor this contest, 55 reports were submitted by wardens detailing low risk and non-critical issues. The [report highlighted below](https://github.com/code-423n4/2022-07-swivel-findings/issues/200) by **joestakey** received the top score from the judge.\n\n*The following wardens also submitted reports: [Bahurum](https://github.com/code-423n4/2022-07-swivel-findings/issues/175), [c3phas](https://github.com/code-423n4/2022-07-swivel-findings/issues/185), [sashik&#95;eth](https://github.com/code-423n4/2022-07-swivel-findings/issues/135), [benbaessler](https://github.com/code-423n4/2022-07-swivel-findings/issues/47), [0x1f8b](https://github.com/code-423n4/2022-07-swivel-findings/issues/163), [defsec](https://github.com/code-423n4/2022-07-swivel-findings/issues/102), [simon135](https://github.com/code-423n4/2022-07-swivel-findings/issues/104), [hake](https://github.com/code-423n4/2022-07-swivel-findings/issues/143), [Meera](https://github.com/code-423n4/2022-07-swivel-findings/issues/95), [robee](https://github.com/code-423n4/2022-07-swivel-findings/issues/28), [Bnke0x0](https://github.com/code-423n4/2022-07-swivel-findings/issues/45), [fatherOfBlocks](https://github.com/code-423n4/2022-07-swivel-findings/issues/67), [oyc&#95;109](https://github.com/code-423n4/2022-07-swivel-findings/issues/19), [0xNazgul](https://github.com/code-423n4/2022-07-swivel-findings/issues/110), [rbserver](https://github.com/code-423n4/2022-07-swivel-findings/issues/88), [Chom](https://github.com/code-423n4/2022-07-swivel-findings/issues/165), [Sm4rty](https://github.com/code-423n4/2022-07-swivel-findings/issues/150), [Soosh](https://github.com/code-423n4/2022-07-swivel-findings/issues/76), [kyteg](https://github.com/code-423n4/2022-07-swivel-findings/issues/112), [csanuragjain](https://github.com/code-423n4/2022-07-swivel-findings/issues/62), [GimelSec](https://github.com/code-423n4/2022-07-swivel-findings/issues/137), [Funen](https://github.com/code-423n4/2022-07-swivel-findings/issues/160), [cryptphi](https://github.com/code-423n4/2022-07-swivel-findings/issues/189), [Kaiziron](https://github.com/code-423n4/2022-07-swivel-findings/issues/197), [scaraven](https://github.com/code-423n4/2022-07-swivel-findings/issues/170), [0xNineDec](https://github.com/code-423n4/2022-07-swivel-findings/issues/127), [0x52](https://github.com/code-423n4/2022-07-swivel-findings/issues/106), [&#95;141345&#95;](https://github.com/code-423n4/2022-07-swivel-findings/issues/123), [&#95;Adam](https://github.com/code-423n4/2022-07-swivel-findings/issues/94), [0xDjango](https://github.com/code-423n4/2022-07-swivel-findings/issues/125), [jonatascm](https://github.com/code-423n4/2022-07-swivel-findings/issues/59), [hansfriese](https://github.com/code-423n4/2022-07-swivel-findings/issues/118), [itsmeSTYJ](https://github.com/code-423n4/2022-07-swivel-findings/issues/38), [8olidity](https://github.com/code-423n4/2022-07-swivel-findings/issues/82), [bin2chen](https://github.com/code-423n4/2022-07-swivel-findings/issues/40), [gogo](https://github.com/code-423n4/2022-07-swivel-findings/issues/188), [cccz](https://github.com/code-423n4/2022-07-swivel-findings/issues/34), [slywaters](https://github.com/code-423n4/2022-07-swivel-findings/issues/171), [sach1r0](https://github.com/code-423n4/2022-07-swivel-findings/issues/141), [aysha](https://github.com/code-423n4/2022-07-swivel-findings/issues/198), [rokinot](https://github.com/code-423n4/2022-07-swivel-findings/issues/192), [Picodes](https://github.com/code-423n4/2022-07-swivel-findings/issues/85), [ak1](https://github.com/code-423n4/2022-07-swivel-findings/issues/154), [Junnon](https://github.com/code-423n4/2022-07-swivel-findings/issues/75), [exd0tpy](https://github.com/code-423n4/2022-07-swivel-findings/issues/89), [JC](https://github.com/code-423n4/2022-07-swivel-findings/issues/194), [Waze](https://github.com/code-423n4/2022-07-swivel-findings/issues/99), [ReyAdmirado](https://github.com/code-423n4/2022-07-swivel-findings/issues/42), [ElKu](https://github.com/code-423n4/2022-07-swivel-findings/issues/108), [PaludoX0](https://github.com/code-423n4/2022-07-swivel-findings/issues/70), [rishabh](https://github.com/code-423n4/2022-07-swivel-findings/issues/83), [pashov](https://github.com/code-423n4/2022-07-swivel-findings/issues/172), [Avci](https://github.com/code-423n4/2022-07-swivel-findings/issues/113), and [mektigboy](https://github.com/code-423n4/2022-07-swivel-findings/issues/179).*\n\n## [L-01] Contracts should inherit their interfaces\n\nContract implementations should inherit their interfaces.  Extending an interface ensures that all function signatures are correct, and catches mistakes introduced (e.g. through errant keystrokes)\n\n### Proof of Concept\n\n#### Marketplace.sol\n\n[contract MarketPlace {](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L8)\n\nDoes not inherit `IMarketPlace`, defined [here](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Interfaces.sol#L37)\n\n### Recommended Mitigation Steps\n\n```diff\n-8: contract MarketPlace {\n+8: contract MarketPlace is IMarketPlace {\n```\n\n## [L-02] Immutable addresses lack zero-address check\n\nConstructors should check the address written in an immutable address variable is not the zero address.\n\nNote: while it has been indicated by the sponsor input validation will be on the front-end side to relieve users from unnecessary gas spendings, this issue here concerns constructor functions, ie when the contract is deployed by the team.\n\n### Proof of Concept\n\n11 instances include:\n\n#### Swivel.sol\n\n[marketPlace = m](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L71)\n\n#### MarketPlace.sol\n\n[creator = c](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L40)\n\n#### VaultTracker.sol\n\n[protocol = p](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L33)\\\n[maturity = m](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L34)\\\n[cTokenAddr = c](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L35)\\\n[swivel = s](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L36)\n\n#### ZcToken.sol\n\n[protocol = \\_protocol](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L33)\\\n[underlying = \\_underlying](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L34)\\\n[maturity = \\_maturity](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L35)\\\n[cToken = \\_cToken](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L36)\\\n[redeemer = IRedeemer(\\_redeemer)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L37)\n\n### Recommended Mitigation Steps\n\nAdd a zero address check for the immutable variables aforementioned.\n\n## [L-03] Safe.sol does not check contract existence\n\n`Safe.sol` is used to perform ERC20 transfers in the protocols contracts. It does not check for contract existence, meaning any call to an address with no bytecode (the address zero or an EOA) would not revert upon `Safe.transfer`.\n\nIf there is a market with an underlying token being an empty bytecode address, this means a user can initiate a position without actually transferring any token to `Swivel` - as all protocols except Aave do not check for the underlying token.\n\nAs only an admin can add a market, the risk of this issue affecting the protocols is low.\n\n### Proof of Concept\n\nIn [`Safe.transfer`()](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Safe.sol#L79-L87) and [`Safe.transferFrom`](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Safe.sol#L112-L119), `success` is set to 1 if the call returns `1`, which is the case if it made to an address with no bytecode.\n\n### Recommended Mitigation Steps\n\nUse `extcodesize()` in `Safe.sol` transfer functions to ensure the destination contract has bytecode.\n\n## [L-04] Setters should check the input value\n\nSetters should check the input value - i.e. make revert if it is the zero address or zero.\n\nNote: while it has been indicated by the sponsor input validation will be on the front-end side to relieve users from unnecessary gas spendings, this issue here concerns constructor functions or setters called by authorized admins, not users, and most likely by interacting with the contract directly (for instance using Etherscan or Hardhat) and not with a front-end.\n\n### Proof of Concept\n\n5 instances:\n\n#### Swivel.sol\n\n[function setAdmin(address a)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L428-L432)\n\n#### MarketPlace.sol\n\n[function setSwivel(address s)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L45-L50)\\\n[function setAdmin(address a)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L53-L56)\n\n#### Creator.sol\n\n[function setAdmin(address a)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L47-L50)\\\n[function setMarketPlace(address m)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L54-L61)\n\n### Recommended Mitigation Steps\n\nAdd non-zero checks to the setters aforementioned.\n\n## [N-01] `2**256 - 1` can be re-written\n\n### Proof of Concept\n\n#### VaultTracker.sol\n\n[uint256 max = 2\\*\\*256 - 1](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L549)\n\n## [N-02] Constants instead of magic numbers\n\nIt is best practice to use constant variables rather than literal values to make the code easier to understand and maintain.\n\n### Proof of Concept\n\n30 instances:\n\n#### VaultTracker.sol\n\n[yield = ((maturityRate \\* 1e26) / vlt.exchangeRate) - 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L60)\\\n[yield = ((exchangeRate \\* 1e26) / vlt.exchangeRate) - 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L62)\\\n[uint256 interest = (yield \\* vlt.notional) / 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L65)\\\n[yield = ((maturityRate \\* 1e26) / vlt.exchangeRate) - 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L94)\\\n[yield = ((exchangeRate \\* 1e26) / vlt.exchangeRate) - 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L97)\\\n[uint256 interest = (yield \\* vlt.notional) / 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L100)\\\n[yield = ((maturityRate \\* 1e26) / vlt.exchangeRate) - 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L124)\\\n[yield = ((exchangeRate \\* 1e26) / vlt.exchangeRate) - 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L127)\\\n[uint256 interest = (yield \\* vlt.notional) / 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L130)\\\n[yield = ((maturityRate \\* 1e26) / from.exchangeRate) - 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L167)\\\n[yield = ((exchangeRate \\* 1e26) / from.exchangeRate) - 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L169)\\\n[uint256 interest = (yield \\* from.notional) / 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L172)\\\n[yield = ((maturityRate \\* 1e26) / to.exchangeRate) - 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L186)\\\n[yield = ((exchangeRate \\* 1e26) / to.exchangeRate) - 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L188)\\\n[uint256 newVaultInterest = (yield \\* to.notional) / 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L191)\\\n[yield = ((maturityRate \\* 1e26) / sVault.exchangeRate) - 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L224)\\\n[yield = ((exchangeRate \\* 1e26) / sVault.exchangeRate) - 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L226)\\\n[uint256 newVaultInterest = (yield \\* sVault.notional) / 1e26](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L228)\n\n### Recommended Mitigation Steps\n\nDefine constant variables for the literal values aforementioned.\n\n## [N-03] Events indexing\n\nEvents should use the maximum amount of indexed fields: up to three parameters. This makes it easier to filter for specific values in front-ends.\n\n### Proof of Concept\n\n3 instances:\n\n#### lending-market/Comptroller.sol\n\n[event ScheduleWithdrawal(address indexed token, uint256 hold)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L52)\\\n[event ScheduleApproval(address indexed token, uint256 hold)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L58)\\\n[event ScheduleFeeChange(uint256 hold)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L62)\n\n### Recommended Mitigation Steps\n\nAdd indexed fields to these events so that they have the maximum number of indexed fields possible.\n\n## [N-04] Event should be emitted in setters\n\nSetters should emit an event so that Dapps can detect important changes to storage.\n\n### Proof of Concept\n\n5 instances:\n\n#### Swivel.sol\n\n[function setAdmin(address a)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L428-L432)\n\n#### MarketPlace.sol\n\n[function setSwivel(address s)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L45-L50)\\\n[function setAdmin(address a)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L53-L56)\n\n#### Creator.sol\n\n[function setAdmin(address a)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L47-L50)\\\n[function setMarketPlace(address m)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L54-L61)\n\n### Recommended Mitigation Steps\n\nEmit an event in all setters.\n\n## [N-05] Function order\n\nFunctions should be ordered following the [Solidity conventions](https://docs.soliditylang.org/en/v0.8.15/style-guide.html#order-of-functions).\n\n### Proof of Concept\n\n#### Swivel.sol\n\n*  The modifier `authorized` is placed at the end of the contract, while it should be placed before every other function:\n\n<!---->\n\n    Inside each contract, library or interface, use the following order:\n\n    Type declarations\n\n    State variables\n\n    Events\n\n    Modifiers\n\n    Functions\n\n#### MarketPlace.sol\n\n*   the modifiers `authorized` and `unpaused` are placed at the end of the contract, while it should be placed before every other function\n\n*   the internal function `calculateReturn()` is placed before several external functions, while it `external` functions should be declared before `internal` ones:\n\n<!---->\n\n    Functions should be grouped according to their visibility and ordered:\n\n    constructor\n\n    receive function (if exists)\n\n    fallback function (if exists)\n\n    external\n\n    public\n\n    internal\n\n    private\n\n### Recommended Mitigation Steps\n\nPlace the functions in the correct order.\n\n## [N-06] Long lines\n\nSource codes lines should be limited to a certain number of characters. A good practice is to ensure the code does not require a horizontal scroll bar on GitHub. The lines mentioned below have that problem\n\n### Proof of Concept\n\n14 instances:\n\n#### Swivel.sol\n\n[    if (!mPlace.custodialInitiate(o.protocol, o.underlying, o.maturity, o.maker, msg.sender, principalFilled)) { revert Exception(8, 0, 0, address(0), address(0)); }](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L137)\\\n[    if (!IMarketPlace(marketPlace).p2pZcTokenExchange(o.protocol, o.underlying, o.maturity, o.maker, msg.sender, a)) { revert Exception(11, 0, 0, address(0), address(0)); }](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L205)\\\n[    if (!mPlace.p2pVaultExchange(o.protocol, o.underlying, o.maturity, o.maker, msg.sender, principalFilled)) { revert Exception(12, 0, 0, address(0), address(0)); }](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L229)\\\n[    if (!IMarketPlace(marketPlace).p2pZcTokenExchange(o.protocol, o.underlying, o.maturity, msg.sender, o.maker, principalFilled)) { revert Exception(11, 0, 0, address(0), address(0)); }](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L301)\\\n[    if (!IMarketPlace(marketPlace).p2pVaultExchange(o.protocol, o.underlying, o.maturity, msg.sender, o.maker, a)) { revert Exception(12, 0, 0, address(0), address(0)); }](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L331)\\\n[    if (!mPlace.custodialExit(o.protocol, o.underlying, o.maturity, msg.sender, o.maker, principalFilled)) { revert Exception(9, 0, 0, address(0), address(0)); }](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L399)\n\n#### MarketPlace.sol\n\n[  function authRedeem(uint8 p, address u, uint256 m, address f, address t, uint256 a) public authorized(markets\\[p\\]\\[u\\]\\[m\\].zcToken) returns (uint256 underlyingAmount) {](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L148)\n\n#### ZcToken.sol\n\n[    constructor(uint8 \\_protocol, address \\_underlying, uint256 \\_maturity, address \\_cToken, address \\_redeemer, string memory \\_name, string memory \\_symbol, uint8 \\_decimals) ](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L31)\\\n[        return (principalAmount \\* IRedeemer(redeemer).getExchangeRate(protocol, cToken) / IRedeemer(redeemer).markets(protocol, underlying, maturity).maturityRate);](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L47)\\\n[        return (underlyingAmount \\* IRedeemer(redeemer).markets(protocol, underlying, maturity).maturityRate / IRedeemer(redeemer).getExchangeRate(protocol, cToken));](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L56)\\\n[        return (principalAmount \\* IRedeemer(redeemer).getExchangeRate(protocol, cToken) / IRedeemer(redeemer).markets(protocol, underlying, maturity).maturityRate);](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L74)\\\n[        return (balanceOf\\[owner\\] \\* IRedeemer(redeemer).getExchangeRate(protocol, cToken) / IRedeemer(redeemer).markets(protocol, underlying, maturity).maturityRate);](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L83)\\\n[        return (underlyingAmount \\* IRedeemer(redeemer).markets(protocol, underlying, maturity).maturityRate / IRedeemer(redeemer).getExchangeRate(protocol, cToken));](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L92)\\\n[    /// @notice At or after maturity, burns exactly `principalAmount` of Principal Tokens from `owner` and sends underlyingAmount of underlying tokens to `receiver`.](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L120)\n\n### Recommended Mitigation Steps\n\nSplit the lines to avoid needing a scroll bar to look through the code.\n\n## [N-07] Natspec\n\nImportant functions should have a @notice comment to describe what they perform.\n\n### Proof of Concept\n\n#### MarketPlace.sol\n\n[function authRedeem(uint8 p, address u, uint256 m, address f, address t, uint256 a) public authorized(markets\\[p\\]\\[u\\]\\[m\\].zcToken) returns (uint256 underlyingAmount)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L148)\n\n### Recommended Mitigation Steps\n\nAdd a @notice comment to this function.\n\n## [N-08] Non-library files should use fixed compiler versions\n\nContracts should be compiled using a fixed compiler version. Locking the pragma helps ensure that contracts do not accidentally get deployed using a different compiler version with which they have been tested the most.\n\n### Proof of Concept\n\n#### ZcToken.sol\n\n[pragma solidity ^0.8.4](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L2)\n\n### Recommended Mitigation Steps\n\nUsed a fixed compiler version.\n\n## [N-09] Non-library files should use the same compiler version\n\nContracts within the scope should be compiled using the same compiler version.\n\n### Proof of Concept\n\nAll the files in scope have the compiler version set to `0.8.13`, while `ZcToken.sol` has it set to `^0.8.4` .\n\n### Recommended Mitigation Steps\n\nUse the same compiler version throughout the contracts.\n\n## [N-10] Open TODOs\n\nThere are open TODOs in the code. Code architecture, incentives, and error handling/reporting questions/issues should be resolved before deployment.\n\n### Proof of Concept\n\n16 instances:\n\n#### lending-market/Comptroller.sol\n\n[// TODO immutable?](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L33)\\\n[// TODO cheaper to assign amount here or keep the ADD?](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L120)\\\n[// TODO assign amount or keep the ADD?](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L192)\\\n[// TODO assign amount or keep ADD?](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L221)\\\n[// TODO assign amount or keep the ADD?](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L286)\\\n[// TODO assign amount or keep the ADD?](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L317)\\\n[// TODO assign amount or keep the ADD?](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L347)\\\n[// TODO assign amount or keep the ADD?](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#382)\\\n[// TODO as stated elsewhere, we may choose to simply return true in all and not attempt to measure against any expected return](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L707)\\\n[// TODO is Rari a drop in here?](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L708)\\\n[// TODO explain the Aave deposit args](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L716)\\\n[// TODO explain the 0 (primary account)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L721)\\\n[// TODO as stated elsewhere, we may choose to simply return true in all and not attempt to measure against any expected return](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L740)\\\n[// TODO is Rari a drop in here?](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L741)\\\n[// TODO explain the withdraw args](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L748)\\\n[// TODO explain the 0](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L752)\n\n### Recommended Mitigation Steps\n\nRemove the TODOs.\n\n## [N-11] Public functions can be external\n\nIt is good practice to mark functions as `external` instead of `public` if they are not called by the contract where they are defined.\n\n### Proof of Concept\n\n1 instance:\n\n#### MarketPlace.sol\n\n[function authRedeem(uint8 p, address u, uint256 m, address f, address t, uint256 a) public](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L148)\n\n### Recommended Mitigation Steps\n\nDeclare it as `external` instead of `public`.\n\n## [N-12] Tautological code\n\nRemove tautologies.\n\n### Proof of Concept\n\n5 instances:\n\n#### Swivel.sol\n\n[return IYearn(c).deposit(a) >= 0](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L712)\\\n[return IErc4626(c).deposit(a, address(this)) >= 0](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L727)\\\n[return IYearn(c).withdraw(a) >= 0](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L745)\\\n[return IAave(aaveAddr).withdraw(u, a, address(this)) >= 0](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L749)\\\n[return IErc4626(c).withdraw(a, address(this), address(this)) >= 0](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L757)\n\n### Recommended Mitigation Steps\n\nRemove the tautologies. Simply replace them with a `return true` statement.\n\n## [N-13] Typos\n\nThere are a few typos in the contracts.\n\n### Proof of Concept\n\n3 instances:\n\n#### Swivel.sol\n\n[Varifies](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L682)\\\n[it's signature.](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L682)\\\n[withraw](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L747)\n\n### Recommended Mitigation Steps\n\nCorrect the typos.\n\n**[robrobbins (Swivel) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/200#issuecomment-1212605119):**\n > Contracts should explicitly implement their interface (if available). Agreed. Addressed here: https://github.com/Swivel-Finance/gost/pull/424\n>\n>\n > Reference to VaultTracker having `2**256-1` is incorrect. Is in Swivel.sol. agree with assessment tho, changed.\n>\n>\n > Casting int returns as booleans is not tautological, particularly in the context of what that method is doing (normalizing returns).\n>\n>\n > MarketPlace.authRedeem as `external` agree - changed.\n>\n>\n > Removing TODOS agree: removing.\n >\n >\n > Various issues above addressed here: https://github.com/Swivel-Finance/gost/pull/425.\n>\n>\n > Event is now in place for `setAdmin` the only one that is needed. the other setters are one-time only by the deploying admin.\n\n\n\n\n***\n\n# Gas Optimizations\n\nFor this contest, 44 reports were submitted by wardens detailing gas optimizations. The [report highlighted below](https://github.com/code-423n4/2022-07-swivel-findings/issues/148) by **joestakey** received the top score from the judge.\n\n*The following wardens also submitted reports: [MadWookie](https://github.com/code-423n4/2022-07-swivel-findings/issues/174), [m&#95;Rassska](https://github.com/code-423n4/2022-07-swivel-findings/issues/176), [rbserver](https://github.com/code-423n4/2022-07-swivel-findings/issues/100), [kyteg](https://github.com/code-423n4/2022-07-swivel-findings/issues/78), [Bnke0x0](https://github.com/code-423n4/2022-07-swivel-findings/issues/44), [Meera](https://github.com/code-423n4/2022-07-swivel-findings/issues/96), [c3phas](https://github.com/code-423n4/2022-07-swivel-findings/issues/184), [hake](https://github.com/code-423n4/2022-07-swivel-findings/issues/142), [ajtra](https://github.com/code-423n4/2022-07-swivel-findings/issues/155), [&#95;141345&#95;](https://github.com/code-423n4/2022-07-swivel-findings/issues/122), [0xsam](https://github.com/code-423n4/2022-07-swivel-findings/issues/84), [_Adam](https://github.com/code-423n4/2022-07-swivel-findings/issues/93), [0xNazgul](https://github.com/code-423n4/2022-07-swivel-findings/issues/109), [0x1f8b](https://github.com/code-423n4/2022-07-swivel-findings/issues/164), [slywaters](https://github.com/code-423n4/2022-07-swivel-findings/issues/173), [Soosh](https://github.com/code-423n4/2022-07-swivel-findings/issues/77), [Waze](https://github.com/code-423n4/2022-07-swivel-findings/issues/98), [rokinot](https://github.com/code-423n4/2022-07-swivel-findings/issues/187), [robee](https://github.com/code-423n4/2022-07-swivel-findings/issues/27), [sashik&#95;eth](https://github.com/code-423n4/2022-07-swivel-findings/issues/133), [ElKu](https://github.com/code-423n4/2022-07-swivel-findings/issues/107), [durianSausage](https://github.com/code-423n4/2022-07-swivel-findings/issues/17), [Funen](https://github.com/code-423n4/2022-07-swivel-findings/issues/159), [Sm4rty](https://github.com/code-423n4/2022-07-swivel-findings/issues/147), [0x040](https://github.com/code-423n4/2022-07-swivel-findings/issues/169), [oyc&#95;109](https://github.com/code-423n4/2022-07-swivel-findings/issues/18), [benbaessler](https://github.com/code-423n4/2022-07-swivel-findings/issues/46), [JC](https://github.com/code-423n4/2022-07-swivel-findings/issues/193), [ReyAdmirado](https://github.com/code-423n4/2022-07-swivel-findings/issues/41), [TomJ](https://github.com/code-423n4/2022-07-swivel-findings/issues/195), [simon135](https://github.com/code-423n4/2022-07-swivel-findings/issues/105), [samruna](https://github.com/code-423n4/2022-07-swivel-findings/issues/2), [Avci](https://github.com/code-423n4/2022-07-swivel-findings/issues/111), [fatherOfBlocks](https://github.com/code-423n4/2022-07-swivel-findings/issues/66), [csanuragjain](https://github.com/code-423n4/2022-07-swivel-findings/issues/61), [exd0tpy](https://github.com/code-423n4/2022-07-swivel-findings/issues/92), [Fitraldys](https://github.com/code-423n4/2022-07-swivel-findings/issues/182), [karanctf](https://github.com/code-423n4/2022-07-swivel-findings/issues/152), [Kaiziron](https://github.com/code-423n4/2022-07-swivel-findings/issues/190), [0xDjango](https://github.com/code-423n4/2022-07-swivel-findings/issues/126), [ignacio](https://github.com/code-423n4/2022-07-swivel-findings/issues/74), [CRYP70](https://github.com/code-423n4/2022-07-swivel-findings/issues/48), and [Aymen0909](https://github.com/code-423n4/2022-07-swivel-findings/issues/183).*\n\n## [G-01] Address mappings can be combined in a single mapping\n\nCombining mappings of `address` into a single mapping of `address` to a `struct` can save a `Gssset` (20000 gas) operation per mapping combined.\nThis also makes it cheaper for functions reading and writing several of these mappings by saving a `Gkeccak256` operation- 30 gas.\n\n### Proof of Concept\n\n1 instance:\n\n#### Swivel.sol\n\n[mapping (address => uint256) public withdrawals](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L21)\\\n[mapping (address => uint256) public approvals](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L23)\n\n### Recommended Mitigation Steps\n\nCombine the `address` mappings aforementionned in a single `address` => `struct` mapping, for instance\n\n```diff\n- mapping (address => uint256) public withdrawals;\n  /// @dev maps a token address to a point in time, a hold, after which an approval can be made\n- mapping (address => uint256) public approvals;\n+ struct Hold {\n+    uint256 withdrawals;\n+    uint256 approvals;\n+ }\n+ mapping (address => Hold) public holds;\n```\n\n## [G-02] Bytes constant are cheaper than string constants\n\nIf the string can fit into 32 bytes, then `bytes32` is cheaper than `string`. `string` is a dynamically sized-type, which has current limitations in Solidity compared to a statically sized variable.\nThis means extra gas spent upon deployment and every time the constant is read.\n\n### Proof of Concept\n\nInstances:\n\n#### Swivel.sol\n\n[string constant public NAME = 'Swivel Finance';](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L25)\\\n[string constant public VERSION = '3.0.0';](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L26)\n\n### Recommended Mitigation Steps\n\n```diff\n- string constant public NAME = 'Swivel Finance';\n- string constant public VERSION = '3.0.0';\n+ bytes32 constant public NAME = 'Swivel Finance';\n+ bytes32 constant public VERSION = '3.0.0';\n```\n\n## [G-03] Caching storage variables in local variables to save gas\n\nAnytime you are reading from storage more than once, it is cheaper in gas cost to cache the variable: a SLOAD cost 100gas, while MLOAD and MSTORE cost 3 gas.\n\nIn particular, in `for` loops, when using the length of a storage array as the condition being checked after each loop, caching the array length can yield significant gas savings if the array length is high\n\n### Proof of Concept\n\n2 instances:\n\n#### Swivel.sol\n\nscope: `setFee()`\n\n*   `feeChange` is read twice. Unless `feeChange == 0`, but given that it is an admin function, it is expected that when the admin invokes this function, all the required conditions are met, hence the state variable will be read twice from storage.\n\n[if (feeChange == 0)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L500)\\\n[if (block.timestamp < feeChange)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L502)\n\n#### MarketPlace.sol\n\nscope: `createMarket()`\n\n*   `swivel` is read twice. Unless `swivel == address(0)`, but given that it is an admin function, it is expected that when the admin invokes this function, all the required conditions are met, hence the state variable will be read twice from storage.\n\n[if (swivel == address(0))](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L71)\\\n[(address zct, address tracker) = ICreator(creator).create(p, underAddr, m, c, swivel, n, s, IErc20(underAddr).decimals())](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L77)\n\n### Recommended Mitigation Steps\n\nCache these storage variables using local variables.\n\n## [G-04] Caching mapping accesses in local variables to save gas\n\nAnytime you are reading from a mapping value more than once, it is cheaper in gas cost to cache it, by saving one `gkeccak256` operation - `30` gas.\n\n### Proof of Concept\n\n8 instances:\n\n#### Swivel.sol\n\nscope: `initiateVaultFillingZcTokenInitiate()`\n\n*   `filled[hash]` is read twice:\n\n[uint256 amount = a + filled\\[hash\\];](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L116)\\\n[filled\\[hash\\] += a;](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L121)\n\nscope: `initiateZcTokenFillingVaultInitiate()`\n\n*   `filled[hash]` is read twice:\n\n[uint256 amount = a + filled\\[hash\\];](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L153)\\\n[filled\\[hash\\] += a;](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L158)\n\nscope: `initiateZcTokenFillingZcTokenExit()`\n\n*   `filled[hash]` is read twice:\n\n[uint256 amount = a + filled\\[hash\\];](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L188)\\\n[filled\\[hash\\] += a;](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L193)\n\nscope: `initiateVaultFillingVaultExit()`\n\n*   `filled[hash]` is read twice:\n\n[uint256 amount = a + filled\\[hash\\];](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L217)\\\n[filled\\[hash\\] += a;](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L222)\n\nscope: `exitZcTokenFillingZcTokenInitiate()`\n\n*   `filled[hash]` is read twice:\n\n[uint256 amount = a + filled\\[hash\\];](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L282)\\\n[filled\\[hash\\] += a;](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L287)\n\nscope: `exitVaultFillingVaultInitiate()`\n\n*   `filled[hash]` is read twice:\n\n[uint256 amount = a + filled\\[hash\\];](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L313)\\\n[filled\\[hash\\] += a;](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L318)\n\nscope: `exitVaultFillingZcTokenExit()`\n\n*   `filled[hash]` is read twice:\n\n[uint256 amount = a + filled\\[hash\\];](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L343)\\\n[filled\\[hash\\] += a;](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L348)\n\nscope: `exitZcTokenFillingVaultExit()`\n\n*   `filled[hash]` is read twice:\n\n[uint256 amount = a + filled\\[hash\\];](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L378)\\\n[filled\\[hash\\] += a;](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L383)\n\n### Recommended Mitigation Steps\n\nCache these `filled[hash]` accesses using local variables.\n\nNote: this will not save gas on the first call for a specific `hash` - only on subsequent calls.\n\nWith that in mind, considering all these functions will only be called once for a specific `hash`, you can do the following change to save `SLOAD` operations:\n\n```diff\n-uint256 amount = a + filled[hash];\n\n-if (amount > o.premium) { revert Exception(5, amount, o.premium, address(0), address(0)); }\n+if (a > o.premium) { revert Exception(5, a, o.premium, address(0), address(0)); }\n\n-filled[hash] += a;\n+filled[hash] = a;\n```\n\n## [G-05] Calldata instead of memory for RO function parameters\n\nIf a reference type function parameter is read-only, it is cheaper in gas to use calldata instead of memory.\nCalldata is a non-modifiable, non-persistent area where function arguments are stored, and behaves mostly like memory,but it alleviates the compiler from the `abi.decode()` step that copies each index of the calldata to the memory index, each iteration costing `60` gas.\n\n### Proof of Concept\n\n2 instances:\n\n#### Swivel.sol\n\n[function setFee(uint16\\[\\] memory i, uint16\\[\\] memory d)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L495)\n\n### Recommended Mitigation STeps\n\nReplace `memory` with `calldata`\n\n## [G-06] Clones for cheap contract deployment\n\nThere's a way to save a significant amount of gas on deployment using Clones: <https://www.youtube.com/watch?v=3Mw-pMmJ7TA> .\n\nWith the standard way using the `new` keyword, each contract created contains the entire logic. Using proxies allow only the first implementation to contain the logic, saving deployment costs on subsequent instances deployed.\n\n#### PROOF OF CONCEPT\n\nInstances:\n\n#### Creator.sol\n\n[address zct = address(new ZcToken(p, u, m, c, marketPlace, n, s, d))](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L40)\\\n[address tracker = address(new VaultTracker(p, m, c, sw))](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L41)\n\n### Recommended Mitigation Steps\n\nUse a proxy system, see [here](https://youtu.be/3Mw-pMmJ7TA?t=915) for an example.\n\n## [G-07] Constants can be private\n\nMarking constants as `private` save gas upon deployment, as the compiler does not have to create getter functions for these variables. It is worth noting that a `private` variable can still be read using either the verified contract source code or the bytecode.\n\nFor immutable variables written via constructor parameters, you can also look the contract deployment transaction.\n\n### Proof of Concept\n\n10 instances:\n\n#### Swivel.sol\n\n[uint256 constant public HOLD = 3 days](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L27)\\\n[uint16 constant public MIN_FEENOMINATOR = 33](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L35)\n\n#### Marketplace.sol\n\n[address public immutable creator](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L26)\n\n#### VaultTracker.sol\n\n[address public immutable admin](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L21)\\\n[address public immutable cTokenAddr](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L22)\\\n[address public immutable swivel](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L23)\\\n[uint256 public immutable maturity](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L24)\\\n[uint8 public immutable protocol](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L26)\n\n#### ZcToken.sol\n\n[uint8 public immutable protocol](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L17)\\\n[address public immutable cToken](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L21)\n\n### Recommended Mitigation Steps\n\nMake these constants `private` instead of `public`\n\n## [G-08] Constructor parameters should be avoided when possible\n\nConstructor parameters are expensive. The contract deployment will be cheaper in gas if they are hard coded instead of using constructor parameters.\n\n### Proof of Concept\n\n4 instances:\n\n#### Swivel.sol\n\n[marketPlace = m](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L71)\\\n[aaveAddr = a](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L72)\\\n[feenominators = \\[200, 600, 400, 200\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L73)\n\n#### MarketPlace.sol\n\n[creator = c](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L40)\n\n### Recommended Mitigation Steps\n\nHardcode these variables with their initial value instead of writing them during contract deployment with constructor parameters.\n\n## [G-09] Event fields are redundant\n\n`block.timestamp` and `block.number` are added to event information by default, explicitly adding them is a waste of gas.\n\n### Proof of Concept\n\n1 instance:\n\n#### MarketPlace.sol\n\n[emit Mature(p, u, m, exchangeRate, block.timestamp)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L104)\n\n### Recommended Mitigation Steps\n\nRemove the `uint256 matured` event field, as it always corresponds to `block.timestamp`.\n\n## [G-10] Functions with access control cheaper if payable\n\nA function with access control marked as payable will lbe cheaper for legitimate callers: the compiler removes checks for `msg.value`, saving approximately `20` gas per function call.\n\n### Proof of Concept\n\n36 instances:\n\n#### Swivel.sol\n\n[function setAdmin(address a) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L428)\\\n[function scheduleWithdrawal(address e) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L436)\\\n[function blockWithdrawal(address e) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L447)\\\n[function withdraw(address e) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L457)\\\n[function scheduleFeeChange() external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L473)\\\n[function blockFeeChange() external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L483)\\\n[function setFee(uint16\\[\\] memory i, uint16\\[\\] memory d) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L495)\\\n[function scheduleApproval(address e) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L522)\\\n[function blockApproval(address e) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L533)\\\n[function approveUnderlying(address\\[\\] calldata u, address\\[\\] calldata c) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L544)\\\n[function authRedeemZcToken(uint8 p, address u, address c, address t, uint256 a) external authorized(marketPlace)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L620)\n\n#### MarketPlace.sol\n\n[function setSwivel(address s) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L45)\\\n[function setAdmin(address a) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L53)\\\n[function createMarket(uint8 p,uint256 m,address c,string memory n,string memory s) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L70)\\\n[function mintZcTokenAddingNotional(uint8 p, address u, uint256 m, address t, uint256 a) external authorized(swivel)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L115)\\\n[function burnZcTokenRemovingNotional(uint8 p, address u, uint256 m, address t, uint256 a) external authorized(swivel)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L131)\\\n[function authRedeem(uint8 p, address u, uint256 m, address f, address t, uint256 a) public authorized(markets\\[p\\]\\[u\\]\\[m\\].zcToken)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L148)\\\n[function redeemZcToken(uint8 p, address u, uint256 m, address t, uint256 a) external authorized(swivel)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L176)\\\n[function redeemVaultInterest(uint8 p, address u, uint256 m, address t) external authorized(swivel)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L201)\\\n[function custodialInitiate(uint8 p, address u, uint256 m, address z, address n, uint256 a) external authorized(swivel)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L247)\\\n[function custodialExit(uint8 p, address u, uint256 m, address z, address n, uint256 a) external authorized(swivel)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L256)\\\n[function p2pZcTokenExchange(uint8 p, address u, uint256 m, address f, address t, uint256 a) external authorized(swivel)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L283)\\\n[function p2pVaultExchange(uint8 p, address u, uint256 m, address f, address t, uint256 a) external authorized(swivel)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L301)\\\n[function transferVaultNotionalFee(uint8 p, address u, uint256 m, address f, uint256 a) external authorized(swivel)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L328)\\\n[function pause(uint8 p, bool b) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L336)\n\n#### Creator.sol\n\n[function create ( //args ) external authorized(marketPlace)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L30-L39)\\\n[function setAdmin(address a) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L47)\\\n[function setMarketPlace(address m) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/Creator.sol#L54)\n\n#### VaultTracker.sol\n\n[function addNotional(address o, uint256 a) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L49)\\\n[function removeNotional(address o, uint256 a) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L82)\\\n[function redeemInterest(address o) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L113)\\\n[function matureVault(uint256 c) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L143)\\\n[function transferNotionalFrom(address f, address t, uint256 a) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L152)\\\n[function transferNotionalFee(address f, uint256 a) external authorized(admin)](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L208)\n\n#### ZcToken.sol\n\n[function burn(address f, uint256 a) external onlyAdmin(address(redeemer))](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L140)\\\n[function mint(address t, uint256 a) external onlyAdmin(address(redeemer))](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L147)\n\n### Recommended Mitigation Steps\n\nRemove these event fields.\n\n## [G-11] Immutable variables save storage\n\nIf a variable is set in the constructor and never modified afterwards, marking it as `immutable` can save a storage slot - `20,000` gas. This also saves `97` gas on every read access of the variable.\n\n### Proof of Concept\n\n1 instance:\n\n#### Swivel.sol\n\n[address public aaveAddr](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L33)\\\n`aaveAddr` is set in the constructor and read in two functions, but never modified.\n\n### Recommended Mitigation Steps\n\nMark `aaveAddr` as `immutable`.\n\n## [G-12] Prefix increments\n\nPrefix increments are cheaper than postfix increments - `6` gas. This can mean interesting savings in `for` loops.\n\n### Proof of Concept\n\n5 instances:\n\n#### xTRIBE.sol\n\n[unchecked {i++;}](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L100)\\\n[unchecked {i++;}](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L269)\\\n[unchecked {i++;}](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L418)\\\n[unchecked {x++;}](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L511)\\\n[unchecked {i++;}](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L564)\n\n### Recommended Mitigation Steps\n\nChange `variable++` to `++variable`.\n\n## [G-13] Storage cheaper than memory\n\nReference types cached in memory cost more gas than using storage, as new memory is allocated for these variables, copying data from storage to memory for each field of the struct or array: this means every field of the struct/array is read.\n\n### Proof of Concept\n\n18 instances:\n\n#### MarketPlace.sol\n\n[Market memory market = markets\\[p\\]\\[u\\]\\[m\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L91)\\\n[Market memory market = markets\\[p\\]\\[u\\]\\[m\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L116)\\\n[Market memory market = markets\\[p\\]\\[u\\]\\[m\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L132)\\\n[Market memory market = markets\\[p\\]\\[u\\]\\[m\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L149)\\\n[Market memory market = markets\\[p\\]\\[u\\]\\[m\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L177)\\\n[Market memory market = markets\\[p\\]\\[u\\]\\[m\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L1216)\\\n[Market memory market = markets\\[p\\]\\[u\\]\\[m\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L1228)\\\n[Market memory market = markets\\[p\\]\\[u\\]\\[m\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L1248)\\\n[Market memory market = markets\\[p\\]\\[u\\]\\[m\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L1266)\\\n[Market memory market = markets\\[p\\]\\[u\\]\\[m\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Marketplace/MarketPlace.sol#L1284)\n\n#### VaultTracker.sol\n\n[Vault memory vlt = vaults\\[o\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L52)\\\n[Vault memory vlt = vaults\\[o\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L84)\\\n[Vault memory vlt = vaults\\[o\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L115)\\\n[Vault memory from = vaults\\[f\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L155)\\\n[Vault memory to = vaults\\[t\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L156)\\\n[Vault memory oVault = vaults\\[f\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L209)\\\n[Vault memory sVault = vaults\\[swivel\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L210)\\\n[Vault memory vault = vaults\\[o\\]](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L244)\n\n### Recommended Mitigation Steps\n\nUse `storage` instead of `memory`. Cache any field read more than once onto the stack to avoid unnecessary `SLOAD` operations.\n\n## [G-14] Unchecked arithmetic\n\nThe default \"checked\" behavior costs more gas when adding/diving/multiplying, because under-the-hood those checks are implemented as a series of opcodes that, prior to performing the actual arithmetic, check for under/overflow and revert if it is detected.\n\nIf it can statically be determined there is no possible way for your arithmetic to under/overflow (such as a condition in an if statement), surrounding the arithmetic in an `unchecked` block will save gas.\n\n### Proof of Concept\n\nInstances:\n\n#### VaultTracker.sol\n\n[vlt.notional -= a](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L103)\\\nBecause of the check [here](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L86), it cannot underflow\n\n[from.notional -= a](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L175)\\\nBecause of the check [here](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/VaultTracker/VaultTracker.sol#L158), it cannot underflow\n\n#### ZcToken.sol\n\n[allowance\\[holder\\]\\[msg.sender\\] -= previewAmount](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L115)\\\nBecause of the check [here](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L112), it cannot underflow\n\n[allowance\\[holder\\]\\[msg.sender\\] -= principalAmount](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L134)\\\nBecause of the check [here](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L133), it cannot underflow.\n\n### Recommended Mitigation Steps\n\nPlace the arithmetic operations in an `unchecked` block.\n\n## [G-15] Unnecessary computation\n\nUnnecessary stack variables can be removed to save gas.\n\n### Proof of Concept\n\nInstances:\n\n#### ZcToken.sol\n\n```cpp\n111:             uint256 allowed = allowance[holder][msg.sender];\n112:             if (allowed >= previewAmount) {\n113:                 revert Approvals(allowed, previewAmount);\n114:             }\n115:             allowance[holder][msg.sender] -= previewAmount;\n```\n\n```cpp\n132:             uint256 allowed = allowance[holder][msg.sender];\n133:             if (allowed >= principalAmount) { revert Approvals(allowed, principalAmount); }\n134:             allowance[holder][msg.sender] -= principalAmount\n```\n\nBoth `allowed` are not necessary. They only save gas if the function reverts\n\n### Recommended Mitigation Steps\n\nRemove both `allowed` and read the storage variables directly in the condition blocks.\n\n## [G-16] Upgrade Solidity compiler version\n\n0.8.10 removes contract existence checks if the external call has a return value - `700` gas\n\n### Proof of Concept\n\nInstances:\n\n#### ERC20Gauges.sol\n\n[pragma solidity ^0.8.4](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Creator/ZcToken.sol#L2)\n\n### Recommended Mitigation Steps\n\nUpgrade `ZcToken.sol` compiler version.\n\n## [G-17] use Assembly for simple setters\n\nWhere it does not affect readability, using assembly allows to save gas not only on deployment, but also on function calls.\n\nThis is the case for instance for simple admin setters.\n\n### Proof of Concept\n\nInstances:\n\n#### Swivel.sol\n\n```cpp\n428:   function setAdmin(address a) external authorized(admin) returns (bool) {\n429:     admin = a;\n430: \n431:     return true;\n432:   }\n```\n\n#### MarketPlace.sol\n\n```cpp\n53:   function setAdmin(address a) external authorized(admin) returns (bool) {\n54:     admin = a;\n55:     return true;\n56:   }\n```\n\n#### Creator.sol\n\n```cpp\n47:   function setAdmin(address a) external authorized(admin) returns (bool) {\n48:     admin = a;\n49:     return true;\n50:   }\n```\n\n### Recommended Mitigation Steps\n\n```diff\n-  admin = a;\n+  assembly {\n+    sstore(admin.slot, a)\n+  }\n```\n\n## [G-18] Writing zero wastes gas\n\n`Swivel.sol` uses a timelock system for changing the fees, which consists in setting `feeChange` to zero every time fees are changed, then setting it to `block.timestamp + HOLD` upon the next scheduled fee change.\n\nAs `SSTORE` operations are more expensive when setting a state variable from zero to a non-zero value than setting it from a non-zero value to another non-zero value, gas can be saved by not setting `feeChange` to zero upon a fee update.\n\n### Proof of Concept\n\nInstances:\n\n#### Swivel.sol\n\n*   in `blockFeeChange`:\n\n[feeChange = 0](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L484)\n\n*   in `setFee`:\n\n[feeChange = 0](https://github.com/code-423n4/2022-07-swivel/blob/daf72892d8a8d6eaa43b9e7d1924ccb0e612ee3c/Swivel/Swivel.sol#L515)\n\n### Recommended Mitigation Steps\n\nChange to `feeChange = 1`, and change the following line in setFee:\n\n```diff\n- if (feeChange == 0)\n+ if (feeChange == 1)\n```\n\n**[robrobbins (Swivel) commented](https://github.com/code-423n4/2022-07-swivel-findings/issues/148#issuecomment-1233316502):**\n > Well-written report.\n> \n> But items either addressed elsewhere or won't be fixed.\n\n\n***\n\n# Disclosures\n\nC4 is an open organization governed by participants in the community.\n\nC4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.\n\nC4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.\n"
}