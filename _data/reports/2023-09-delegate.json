{
  "circa": {
    "title": "Delegate",
    "sponsor": "Delegate",
    "slug": "2023-09-delegate",
    "date": "2023-11-15",
    "findings": "https://github.com/code-423n4/2023-09-delegate-findings/issues",
    "contest": 284
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit outlined in this document, C4 conducted an analysis of the Delegate smart contract system written in Solidity. The audit took place between September 5—September 11 2023.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>17 Wardens contributed reports to the Delegate:</p>\n<ol>\n<li><a href=\"https://code4rena.com/@ladboy233\">ladboy233</a></li>\n<li><a href=\"https://code4rena.com/@d4r3d3v1l\">d4r3d3v1l</a></li>\n<li><a href=\"https://code4rena.com/@DadeKuma\">DadeKuma</a></li>\n<li><a href=\"https://code4rena.com/@pfapostol\">pfapostol</a></li>\n<li><a href=\"https://code4rena.com/@Sathish9098\">Sathish9098</a></li>\n<li>Baki (<a href=\"https://code4rena.com/@Viraz\">Viraz</a> and <a href=\"https://code4rena.com/@supernova\">supernova</a>)</li>\n<li><a href=\"https://code4rena.com/@p0wd3r\">p0wd3r</a></li>\n<li><a href=\"https://code4rena.com/@m4ttm\">m4ttm</a></li>\n<li><a href=\"https://code4rena.com/@Banditx0x\">Banditx0x</a></li>\n<li><a href=\"https://code4rena.com/@gkrastenov\">gkrastenov</a></li>\n<li><a href=\"https://code4rena.com/@Fulum\">Fulum</a></li>\n<li><a href=\"https://code4rena.com/@sces60107\">sces60107</a></li>\n<li><a href=\"https://code4rena.com/@Brenzee\">Brenzee</a></li>\n<li><a href=\"https://code4rena.com/@kodyvim\">kodyvim</a></li>\n<li><a href=\"https://code4rena.com/@lsaudit\">lsaudit</a></li>\n<li><a href=\"https://code4rena.com/@lodelux\">lodelux</a></li>\n</ol>\n<p>This audit was judged by <a href=\"https://code4rena.com/@GalloDaSballo\">Alex the Entreprenerd</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/liveactionllama\">liveactionllama</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 2 unique vulnerabilities. Of these vulnerabilities, 0 received a risk rating in the category of HIGH severity and 2 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 10 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 2 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2023-09-delegate\">C4 Delegate repository</a>, and is composed of 12 smart contracts written in the Solidity programming language and includes 1,824 lines of Solidity code.</p>\n<p>In addition to the known issues identified by the project team, a Code4rena bot race was conducted at the start of the audit. The winning bot, <strong>Hound</strong> from warden DadeKuma, generated the <a href=\"https://gist.github.com/code423n4/b2b64c6a8265f8a3a7f724f67b8e49f9\">Automated Findings report</a> and all findings therein were classified as out of scope.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities based on three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>For more information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>, specifically our section on <a href=\"https://docs.code4rena.com/awarding/judging-criteria/severity-categorization\">Severity Categorization</a>.</p>\n<h1 id=\"medium-risk-findings-2\" style=\"position:relative;\"><a href=\"#medium-risk-findings-2\" aria-label=\"medium risk findings 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (2)</h1>\n<h2 id=\"m-01-no-way-to-revoke-approval-in-delegatetokenapprove-leads-to-unauthorized-calling-of-delegatetokentransferfrom\" style=\"position:relative;\"><a href=\"#m-01-no-way-to-revoke-approval-in-delegatetokenapprove-leads-to-unauthorized-calling-of-delegatetokentransferfrom\" aria-label=\"m 01 no way to revoke approval in delegatetokenapprove leads to unauthorized calling of delegatetokentransferfrom permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/383\">[M-01] No way to revoke Approval in <code>DelegateToken.approve</code> leads to unauthorized calling of <code>DelegateToken.transferFrom</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/383\">d4r3d3v1l</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-09-delegate/blob/main/src/DelegateToken.sol#L134\">https://github.com/code-423n4/2023-09-delegate/blob/main/src/DelegateToken.sol#L134</a><br>\n<a href=\"https://github.com/code-423n4/2023-09-delegate/blob/main/src/DelegateToken.sol#L168\">https://github.com/code-423n4/2023-09-delegate/blob/main/src/DelegateToken.sol#L168</a><br>\n<a href=\"https://github.com/code-423n4/2023-09-delegate/blob/main/src/libraries/DelegateTokenStorageHelpers.sol#L149\">https://github.com/code-423n4/2023-09-delegate/blob/main/src/libraries/DelegateTokenStorageHelpers.sol#L149</a></p>\n<p>There is no way to revoke the approval which given via <code>DelegateToken.approve(address,delegateTokenId)</code>. They can able call the <code>DelegateToken.transferFrom</code> even the tokenHolder revoke the permission using the <code>DelegateToken.setApprovalForAll</code>.</p>\n<p>If the spender address is approved by the PT token, we can call the <code>DelegateToken.withdraw</code>.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Alice is the token Holder.</p>\n<p>Alice approves Bob via <code>DelegateToken.setApprovalForAll(Bob,true)</code>.</p>\n<p>Bob approves himself using <code>DelegateToken.approve(Bob,delegateTokenId)</code></p>\n<p>Alice revokes the Bob approval by calling <code>DelegateToken.setApprovalForAll(Bob,false);</code></p>\n<p>Now Bob can still calls the <code>DelegateToken.transferFrom(Alice,to,delegateTokenId)</code> which is subjected to call only by approved address.</p>\n<p>The transfer will be successful.</p>\n<p><strong>Code details</strong></p>\n<p><a href=\"https://github.com/code-423n4/2023-09-delegate/blob/main/src/libraries/DelegateTokenStorageHelpers.sol#L143\">https://github.com/code-423n4/2023-09-delegate/blob/main/src/libraries/DelegateTokenStorageHelpers.sol#L143</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">revertNotApprovedOrOperator</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account</span><span class=\"mtk1\"> =&gt; </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operator</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">enabled</span><span class=\"mtk1\">)) </span><span class=\"mtk11\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk11\">accountOperator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">delegateTokenId</span><span class=\"mtk1\"> =&gt; </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[</span><span class=\"mtk7\">3</span><span class=\"mtk1\">] </span><span class=\"mtk12\">info</span><span class=\"mtk1\">) </span><span class=\"mtk11\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk11\">delegateTokenInfo</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\"> </span><span class=\"mtk11\">account</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk11\">delegateTokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">account</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">accountOperator</span><span class=\"mtk1\">[</span><span class=\"mtk12\">account</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] || </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">readApproved</span><span class=\"mtk1\">(</span><span class=\"mtk12\">delegateTokenInfo</span><span class=\"mtk1\">, </span><span class=\"mtk12\">delegateTokenId</span><span class=\"mtk1\">)) </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Errors</span><span class=\"mtk1\">.</span><span class=\"mtk11\">NotApproved</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">delegateTokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Even after revoking the approval for operator using <code>setApprovalAll</code> this <code>msg.sender == readApproved(delegateTokenInfo, delegateTokenId)</code> will be true and able to call <code>transferFrom</code> function.</p>\n<p><strong>Test function</strong></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">testFuzzingTransfer721</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlyingTokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expiryTypeRelative</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">time</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">assume</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">assume</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">dt</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">/* ExpiryType */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expiry</span><span class=\"mtk1\">, </span><span class=\"mtk3\">/* ExpiryValue */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ) = </span><span class=\"mtk11\">prepareValidExpiry</span><span class=\"mtk1\">(</span><span class=\"mtk12\">expiryTypeRelative</span><span class=\"mtk1\">, </span><span class=\"mtk12\">time</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">), </span><span class=\"mtk7\">33</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">dt</span><span class=\"mtk1\">), </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">dt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">dt</span><span class=\"mtk1\">), </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">delegateId1</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">dt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">create</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">DelegateTokenStructs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">DelegateInfo</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">IDelegateRegistry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">DelegationType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">33</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">expiry</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">SALT</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">dt</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">dt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">dt</span><span class=\"mtk1\">), </span><span class=\"mtk12\">delegateId1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">dt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">dt</span><span class=\"mtk1\">), </span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tmp</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">dt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getApproved</span><span class=\"mtk1\">(</span><span class=\"mtk12\">delegateId1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tmp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">dt</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">dt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0x320</span><span class=\"mtk1\">), </span><span class=\"mtk12\">delegateId1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>If token Holder revokes the approval for a operator using <code>DelegateToken.setApprovalForAll</code>, revoke the all the approvals(DelegateToken.approve) which is done by the operator.</p>\n<h3 id=\"assessed-type\" style=\"position:relative;\"><a href=\"#assessed-type\" aria-label=\"assessed type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Access Control</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/383#issuecomment-1728555248\">0xfoobar (Delegate) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Need to double-check, but looks plausible.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/383#issuecomment-1740661652\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>In contrast to ERC721, which only allows the owner to change <code>approve</code><br>\n<a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/ef3e7771a7e2d9b30234a57f96ee7acf5dddb9ed/contracts/token/ERC721/ERC721.sol#L448-L454\">ERC721.sol#L448-L454</a></p>\n<p><code>DT.approve</code> allows the operator to set themselves as approved, which can technically be undone via a multicall but may not be performed under normal usage.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/383#issuecomment-1742167006\">Alex the Entreprenerd (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Leaning towards Medium Severity as the finding requires:</p>\n<ul>\n<li>Alice <code>approvesForAll</code> Bob</li>\n<li>Bob approves self</li>\n<li>Alice revokes Bobs <code>approvalForAll</code></li>\n<li>Alice doesn’t revoke the <code>_approve</code> that Bob gave to self</li>\n</ul>\n<p>Notice that any transfer would reset the approval as well.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/383#issuecomment-1745837556\">0xfoobar (Delegate) commented</a>:</strong></p>\n<blockquote>\n<p>A note about how ERC721 works: there are two different types of approvals. <code>approve()</code> lets an account move a single tokenId, while <code>setApprovalForAll()</code> marks an address as an operator to move all tokenIds. We can note the difference in the core OpenZeppelin ERC721 base contract, two separate mappings: <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol#L32-L34\">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol#L32-L34</a></p>\n<p>So plausible that an operator could be permitted to add new tokenid-specific approvals, but see your point that OZ ERC721 doesn’t allow this by default and so could lead to confusing states that are possible but not fun to get out of.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-createofferersol-should-not-enforce-the-nonce-incremented-sequentially-otherwise-user-can-dos-the-contract-by-skipping-order\" style=\"position:relative;\"><a href=\"#m-02-createofferersol-should-not-enforce-the-nonce-incremented-sequentially-otherwise-user-can-dos-the-contract-by-skipping-order\" aria-label=\"m 02 createofferersol should not enforce the nonce incremented sequentially otherwise user can dos the contract by skipping order permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/94\">[M-02] <code>CreateOfferer.sol</code> should not enforce the nonce incremented sequentially, otherwise user can DOS the contract by skipping order</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/94\">ladboy233</a></em></p>\n<p>According to <a href=\"https://github.com/ProjectOpenSea/seaport/blob/main/docs/SeaportDocumentation.md#contract-orders\">https://github.com/ProjectOpenSea/seaport/blob/main/docs/SeaportDocumentation.md#contract-orders</a>:</p>\n<blockquote>\n<p>“Seaport v1.2 introduced support for a new type of order: the contract order. In brief, a smart contract that implements the ContractOffererInterface (referred to as an “Seaport app contract” or ‘Seaport app’ in the docs and a ‘contract offerer’ in the code) can now provide a dynamically generated order (a contract order) in response to a buyer or seller’s contract order request.”</p>\n</blockquote>\n<p>The CreateOfferer.sol aims to be comply with the interface ContractOffererInterface.</p>\n<p>The life cycle of the contract life cycle here is here:</p>\n<p><a href=\"https://github.com/ProjectOpenSea/seaport/blob/main/docs/SeaportDocumentation.md#example-lifecycle-journey\">https://github.com/ProjectOpenSea/seaport/blob/main/docs/SeaportDocumentation.md#example-lifecycle-journey</a></p>\n<p>First the function <code>_getGeneratedOrder</code> is called.</p>\n<p>Then after the order execution, the function ratifyOrder is triggered for contract (CreateOfferer.sol) to do post order validation.</p>\n<p>In the logic of ratifyOrder, the nonce is incremented by calling this <a href=\"https://github.com/code-423n4/2023-09-delegate/blob/a6dbac8068760ee4fc5bababb57e3fe79e5eeb2e/src/CreateOfferer.sol#L77\">line of code</a> <code>Helpers.processNonce</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ratifyOrder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">offer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ReceivedItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">consideration</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">context</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contractNonce</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">checkStage</span><span class=\"mtk1\">(Enums.Stage.ratify, Enums.Stage.generate)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">onlySeaport</span><span class=\"mtk1\">(msg.sender)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">Helpers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">processNonce</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nonce</span><span class=\"mtk1\">, </span><span class=\"mtk12\">contractNonce</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">Helpers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">verifyCreate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">delegateToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">offer</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">transientState</span><span class=\"mtk1\">.</span><span class=\"mtk12\">receivers</span><span class=\"mtk1\">, </span><span class=\"mtk12\">consideration</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">], </span><span class=\"mtk12\">context</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ratifyOrder</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This is calling this <a href=\"https://github.com/code-423n4/2023-09-delegate/blob/a6dbac8068760ee4fc5bababb57e3fe79e5eeb2e/src/libraries/CreateOffererLib.sol#L184\">line of code</a>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">processNonce</span><span class=\"mtk1\">(CreateOffererStructs.Nonce </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nonce</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contractNonce</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">nonce</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">contractNonce</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk12\">CreateOffererErrors</span><span class=\"mtk1\">.</span><span class=\"mtk11\">InvalidContractNonce</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nonce</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">, </span><span class=\"mtk12\">contractNonce</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t++</span><span class=\"mtk12\">nonce</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t} </span><span class=\"mtk3\">// Infeasible this will overflow if starting point is zero</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The CreateOffererStructs.Nonce data structure is just <a href=\"https://github.com/code-423n4/2023-09-delegate/blob/a6dbac8068760ee4fc5bababb57e3fe79e5eeb2e/src/libraries/CreateOffererLib.sol#L72\">nonce</a>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">library</span><span class=\"mtk1\"> </span><span class=\"mtk12\">CreateOffererStructs</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Used to track the stage and lock status</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Stage</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">CreateOffererEnums</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Stage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">flag</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">CreateOffererEnums</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Lock</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lock</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Used to keep track of the seaport contract nonce of CreateOfferer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Nonce</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>But this is not how Seaport contract track contract nonce.</p>\n<p>On Seaport contract, we are calling <a href=\"https://github.com/ProjectOpenSea/seaport/blob/539f0c18af85152aff9d64d90a55cf1627fd3e25/reference/lib/ReferenceOrderValidator.sol#L323\">_getGeneratedOrder</a>.</p>\n<p>Which calls <a href=\"https://github.com/ProjectOpenSea/seaport/blob/539f0c18af85152aff9d64d90a55cf1627fd3e25/reference/lib/ReferenceOrderValidator.sol#L360\">_callGenerateOrder</a>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">// Do a low-level call to get success status and any return data.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">returnData</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_callGenerateOrder</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">orderParameters</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">context</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">originalOfferItems</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">originalConsiderationItems</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">// Increment contract nonce and use it to derive order hash.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">// Note: nonce will be incremented even for skipped orders, and</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">// even if generateOrder&#39;s return data doesn&#39;t meet constraints.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk11\">contractNonce</span><span class=\"mtk1\"> = (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t</span><span class=\"mtk12\">_contractNonces</span><span class=\"mtk1\">[</span><span class=\"mtk12\">orderParameters</span><span class=\"mtk1\">.</span><span class=\"mtk12\">offerer</span><span class=\"mtk1\">]++</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">// Derive order hash from contract nonce and offerer address.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">orderHash</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t</span><span class=\"mtk12\">contractNonce</span><span class=\"mtk1\"> ^</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t\t(</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint160</span><span class=\"mtk1\">(</span><span class=\"mtk12\">orderParameters</span><span class=\"mtk1\">.</span><span class=\"mtk12\">offerer</span><span class=\"mtk1\">)) &lt;&lt; </span><span class=\"mtk7\">96</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t}</span></span></span></code></pre>\n<p>As we can see:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Increment contract nonce and use it to derive order hash.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Note: nonce will be incremented even for skipped orders, and</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// even if generateOrder&#39;s return data doesn&#39;t meet constraints.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk11\">contractNonce</span><span class=\"mtk1\"> = (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">_contractNonces</span><span class=\"mtk1\">[</span><span class=\"mtk12\">orderParameters</span><span class=\"mtk1\">.</span><span class=\"mtk12\">offerer</span><span class=\"mtk1\">]++</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Nonce will be incremented even for skipped orders.</p>\n<p>This is very important, suppose the low level call _callGenerateOrder return false, we are hitting the <a href=\"https://github.com/ProjectOpenSea/seaport/blob/539f0c18af85152aff9d64d90a55cf1627fd3e25/reference/lib/ReferenceOrderValidator.sol#L401\">else block</a>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_revertOrReturnEmpty</span><span class=\"mtk1\">(</span><span class=\"mtk12\">revertOnInvalid</span><span class=\"mtk1\">, </span><span class=\"mtk12\">orderHash</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>This is calling <code>_revertOrReturnEmpty</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_revertOrReturnEmpty</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">revertOnInvalid</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contractOrderHash</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">pure</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orderHash</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">OrderToExecute</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">emptyOrder</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">// If invalid input should not revert...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">revertOnInvalid</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">// Return the contract order hash and zero values for the numerator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">// and denominator.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">contractOrderHash</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">emptyOrder</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">// Otherwise, revert.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidContractOrder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractOrderHash</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Clearly we can see that if the flag revertOnInvalid is set to false, then even the low level call return false, the nonce of the offerer is still incremented.</p>\n<p>Where in the Seaport code does it set revertOnInvalid to false?</p>\n<p>When the Seaport wants to combine multiple orders in <a href=\"https://github.com/ProjectOpenSea/seaport-core/blob/d4e8c74adc472b311ab64b5c9f9757b5bba57a15/src/lib/OrderCombiner.sol#L137\">this line of code</a>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_fulfillAvailableAdvancedOrders</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">AdvancedOrder</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">advancedOrders</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">CriteriaResolver</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">criteriaResolvers</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">FulfillmentComponent</span><span class=\"mtk1\">[][] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">offerFulfillments</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">FulfillmentComponent</span><span class=\"mtk1\">[][] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">considerationFulfillments</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fulfillerConduitKey</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maximumFulfilled</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">, </span><span class=\"mtk3\">/* availableOrders */</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Execution</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk3\">/* executions */</span><span class=\"mtk1\"> ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Validate orders, apply amounts, &amp; determine if they use conduits.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orderHashes</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">containsNonOpen</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_validateOrdersAndPrepareToFulfill</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">advancedOrders</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">criteriaResolvers</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">false</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// Signifies that invalid orders should NOT revert.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">maximumFulfilled</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">recipient</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span></code></pre>\n<p>We <a href=\"https://github.com/ProjectOpenSea/seaport-core/blob/d4e8c74adc472b311ab64b5c9f9757b5bba57a15/src/lib/OrderCombiner.sol#L256\">call</a> <code>_validateOrderAndUpdateStatus</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Validate it, update status, and determine fraction to fill.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orderHash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">) =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_validateOrderAndUpdateStatus</span><span class=\"mtk1\">(</span><span class=\"mtk12\">advancedOrder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">revertOnInvalid</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Finally we <a href=\"https://github.com/ProjectOpenSea/seaport-core/blob/d4e8c74adc472b311ab64b5c9f9757b5bba57a15/src/lib/OrderValidator.sol#L178C21-L178C37\">call</a> the logic _getGeneratedOrder(orderParameters, advancedOrder.extraData, revertOnInvalid) below with parameter revertOnInvalid false.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// If the order is a contract order, return the generated order.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">orderParameters</span><span class=\"mtk1\">.</span><span class=\"mtk12\">orderType</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">OrderType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">CONTRACT</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">// Ensure that the numerator and denominator are both equal to 1.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t</span><span class=\"mtk3\">// (1 ^ nd =/= 0) =&gt; (nd =/= 1) =&gt; (n =/= 1) || (d =/= 1)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t</span><span class=\"mtk3\">// It&#39;s important that the values are 120-bit masked before</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t</span><span class=\"mtk3\">// multiplication is applied. Otherwise, the last implication</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t</span><span class=\"mtk3\">// above is not correct (mod 2^256).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\tinvalidFraction := </span><span class=\"mtk11\">xor</span><span class=\"mtk1\">(</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">), </span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">// Revert if the supplied numerator and denominator are not valid.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">invalidFraction</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t</span><span class=\"mtk11\">_revertBadFraction</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">// Return the generated order based on the order params and the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">// provided extra data. If revertOnInvalid is true, the function</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">// will revert if the input is invalid.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getGeneratedOrder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">orderParameters</span><span class=\"mtk1\">, </span><span class=\"mtk12\">advancedOrder</span><span class=\"mtk1\">.</span><span class=\"mtk12\">extraData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">revertOnInvalid</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t}</span></span></span></code></pre>\n<p>Ok what does this mean?</p>\n<p>Suppose the CreateOfferer.sol fulfills two orders and creates two delegate tokens.</p>\n<p>The nonces start from 0 and then increment to 1 and then increment to 2.</p>\n<p>A user crafts a contract with malformed minimumReceived and combines with another valid order to call OrderCombine.</p>\n<p>As we can see above, when multiple order is passed in, the revertOnInvalid is set to false, so the contract order from CreateOfferer.sol is skipped, but the nonce is incremented.</p>\n<p>Then the nonce tracked by CreateOfferer.sol internally is out of sync with the contract nonce in seaport contract forever.</p>\n<p>Then the CreateOfferer.sol is not usable because if the <a href=\"https://github.com/ProjectOpenSea/seaport/blob/539f0c18af85152aff9d64d90a55cf1627fd3e25/reference/lib/ReferenceZoneInteraction.sol#L147\">ratifyOrder callback</a> hit the contract, transaction revert <a href=\"https://github.com/code-423n4/2023-09-delegate/blob/a6dbac8068760ee4fc5bababb57e3fe79e5eeb2e/src/libraries/CreateOffererLib.sol#L185\">in this check</a>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">nonce</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">contractNonce</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk12\">CreateOffererErrors</span><span class=\"mtk1\">.</span><span class=\"mtk11\">InvalidContractNonce</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nonce</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">, </span><span class=\"mtk12\">contractNonce</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>I would recommend do not validate the order execution in the ratifyOrder call back by using the contract nonce, instead, validate the order using <a href=\"https://github.com/ProjectOpenSea/seaport/blob/539f0c18af85152aff9d64d90a55cf1627fd3e25/reference/lib/ReferenceZoneInteraction.sol#L151\">orderHash</a>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ContractOffererInterface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">offerer</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ratifyOrder</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">orderToExecute</span><span class=\"mtk1\">.</span><span class=\"mtk12\">spentItems</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">orderToExecute</span><span class=\"mtk1\">.</span><span class=\"mtk12\">receivedItems</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">advancedOrder</span><span class=\"mtk1\">.</span><span class=\"mtk12\">extraData</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">orderHashes</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">orderHash</span><span class=\"mtk1\">) ^ (</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint160</span><span class=\"mtk1\">(</span><span class=\"mtk12\">offerer</span><span class=\"mtk1\">)) &lt;&lt; </span><span class=\"mtk7\">96</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) != </span><span class=\"mtk12\">ContractOffererInterface</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ratifyOrder</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">)</span></span></span></code></pre>\n<h3 id=\"assessed-type-1\" style=\"position:relative;\"><a href=\"#assessed-type-1\" aria-label=\"assessed type 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>DoS</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/94#issuecomment-1728555434\">0xfoobar (Delegate) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Need to double-check but looks plausible.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/94#issuecomment-1742175246\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p><code>_callGenerateOrder</code> is caught, and in case of multiple order will be incrementing nonce without reverting.</p>\n<p><a href=\"https://github.com/ProjectOpenSea/seaport/blob/22ea29df3c241ebc17c95268164dde47e1186287/reference/lib/ReferenceOrderValidator.sol#L286-L302\">ReferenceOrderValidator.sol#L286-L302</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_callGenerateOrder</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">OrderParameters</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orderParameters</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">context</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">originalOfferItems</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">originalConsiderationItems</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">returnData</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">orderParameters</span><span class=\"mtk1\">.</span><span class=\"mtk12\">offerer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">call</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodeWithSelector</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">ContractOffererInterface</span><span class=\"mtk1\">.</span><span class=\"mtk12\">generateOrder</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">originalOfferItems</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">originalConsiderationItems</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">context</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>The call to <code>generateOrder</code> will revert at <code>processSpentItems</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-09-delegate/blob/a6dbac8068760ee4fc5bababb57e3fe79e5eeb2e/src/libraries/CreateOffererLib.sol#L351-L352\">CreateOffererLib.sol#L351-L352</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!(</span><span class=\"mtk12\">minimumReceived</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">maximumSpent</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">1</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk12\">CreateOffererErrors</span><span class=\"mtk1\">.</span><span class=\"mtk11\">NoBatchWrapping</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p>This will cause the nonce to be increased in Seaport but not on the <code>CreateOfferer</code>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/94#issuecomment-1742682777\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Have asked the Warden for a Coded POC.<br>\nHave reached out to Seaport Devs to ask for advice as to whether the issue is valid.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/94#issuecomment-1745091145\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://gist.github.com/JeffCX/2d91b4f5f781f08a249350e748d85131#file-createofferer-t-sol-L545\">Coded POC</a> from the warden.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/94#issuecomment-1745811557\">0xfoobar (Delegate) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Believe issue is valid, would love confirmation from Seaport devs if you have it. Believe this should be a quality Medium not High because CreateOfferer is tangential to the core protocol, would not cause any loss of user funds if abused, and could be easily replaced if DoS-ed. Appreciate the detailed work to dive into the workings of Seaport nonces.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/94#issuecomment-1748635567\">Alex the Entreprenerd (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Agree with impact from Sponsor. Temporarly marking as valid; however, we will not confirm until runnable POC is produced.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/94#issuecomment-1748951894\">ladboy233 (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Agree with sponsor’s severity assessment!</p>\n<p>Fully runnable <a href=\"https://gist.github.com/JeffCX/1ac6d24c79b4b680e5f2f24298135f7a\">POC</a> to show the nonce is out of sync.</p>\n<p>The Contract offerer internal nonce is tracked in this <a href=\"https://gist.github.com/JeffCX/1ac6d24c79b4b680e5f2f24298135f7a#file-poc-sol-L62\">line of code</a>.</p>\n<p>While the contract offerer nonce on Seaport side can be acquired by calling:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">seaport</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractOffererNonce</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractOfferer1</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p>And indeed if we use <code>fulfillAvailableAdvancedOrder</code> to fulfill only one contract order and revert in other order, nonce is still incremented.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">seaport_contrat_offer_1_nonce</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">seaport</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractOffererNonce</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractOfferer1</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">console2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">seaport_contrat_offer_1_nonce</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// the nonce of contract offerer on seaport is 1 is 1!!</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">oldNonce</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">contractOfferer1</span><span class=\"mtk1\">.</span><span class=\"mtk11\">nonce</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// the none of contract offerer 1 is 0!</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">console2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">oldNonce</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>A more detailed explanation is <a href=\"https://gist.github.com/JeffCX/0d58dacfddaae87a74eb59ab07ebaca8\">here</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/94#issuecomment-1750142313\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Logs</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Logs:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">) </span><span class=\"mtk7\">0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">) </span><span class=\"mtk7\">0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">setRevert</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">) </span><span class=\"mtk7\">0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">) </span><span class=\"mtk7\">0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">generateOrder</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">reverting</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">generateOrder</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">Sent</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ETH</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SEAPORT</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">fulfilled</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">) </span><span class=\"mtk7\">0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">) </span><span class=\"mtk7\">0xa0Cb889707d426A7A386870A03bc70d1b0697598</span></span></span></code></pre>\n<p>As shown by the logs, the Token 1 is not transfered, but the nonce is consumed.</p>\n<details>\n<summary>POC</summary>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// SPDX-License-Identifier: CC0-1.0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">21</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">Test</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;forge-std/Test.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">BaseSeaportTest</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;./base/BaseSeaportTest.t.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">BaseLiquidDelegateTest</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;./base/BaseLiquidDelegateTest.t.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">SeaportHelpers</span><span class=\"mtk1\">, </span><span class=\"mtk12\">User</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;./utils/SeaportHelpers.t.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">IDelegateToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Structs</span><span class=\"mtk1\"> </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk12\">IDelegateTokenStructs</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;src/interfaces/IDelegateToken.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">IDelegateRegistry</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;delegate-registry/src/IDelegateRegistry.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">AdvancedOrder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">OrderParameters</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Fulfillment</span><span class=\"mtk1\">, </span><span class=\"mtk12\">CriteriaResolver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">OfferItem</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ConsiderationItem</span><span class=\"mtk1\">, </span><span class=\"mtk12\">FulfillmentComponent</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;seaport/contracts/lib/ConsiderationStructs.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">, </span><span class=\"mtk12\">OrderType</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;seaport/contracts/lib/ConsiderationEnums.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;seaport/contracts/interfaces/ContractOffererInterface.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">CreateOfferer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Enums</span><span class=\"mtk1\"> </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk12\">OffererEnums</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Structs</span><span class=\"mtk1\"> </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk12\">OffererStructs</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;src/CreateOfferer.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">MockERC721</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;./mock/MockTokens.t.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">WETH</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;./mock/WETH.t.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">console2</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;forge-std/console2.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">IERC721</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;openzeppelin/token/ERC721/IERC721.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">IERC1155</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;openzeppelin/token/ERC1155/IERC1155.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;seaport/contracts/lib/ConsiderationEnums.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">ContractOffererInterface</span><span class=\"mtk1\">, </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ReceivedItem</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Schema</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;seaport/contracts/interfaces/ContractOffererInterface.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ISeaport</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getContractOffererNonce</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contractOfferer</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nonce</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">abstract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC165</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> See {IERC165-supportsInterface}.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">supportsInterface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">bytes4</span><span class=\"mtk1\">(</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;supportsInterface(bytes4)&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * </span><span class=\"mtk4\">@title</span><span class=\"mtk3\"> TestContractOffererNativeToken</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TestContractOffererNativeToken</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ContractOffererInterface</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ERC165</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">error</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OrderUnavailable</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_SEAPORT</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\"> </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_available</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\"> </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_required</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ready</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fulfilled</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">extraAvailable</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">extraRequired</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reverting</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nonce</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">otherContract</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">name</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ShowName</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">name</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NumberUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">number</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">seaport</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_name</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Set immutable values and storage variables.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_SEAPORT</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">seaport</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">fulfilled</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ready</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">extraAvailable</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">extraRequired</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">name</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_name</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRevert</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">state</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">console2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;setRevert&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">state</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">reverting</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">state</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">receive</span><span class=\"mtk1\">() </span><span class=\"mtk12\">external</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">activate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">available</span><span class=\"mtk1\">, </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">required</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">ready</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">fulfilled</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OrderUnavailable</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Set storage variables.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_available</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">available</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_required</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">required</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ready</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// In case of criteria based orders and non-wildcard items, the member</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// `available.identifier` would correspond to the `identifierOrCriteria`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// i.e., the merkle-root.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @param identifier corresponds to the actual token-id that gets transferred.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">activateWithCriteria</span><span class=\"mtk1\">(</span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">available</span><span class=\"mtk1\">, </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">required</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">ready</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">fulfilled</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OrderUnavailable</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">available</span><span class=\"mtk1\">.</span><span class=\"mtk12\">itemType</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC721_WITH_CRITERIA</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">IERC721</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">available</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_SEAPORT</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">available</span><span class=\"mtk1\">.</span><span class=\"mtk12\">itemType</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC1155_WITH_CRITERIA</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">IERC1155</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC1155</span><span class=\"mtk1\">(</span><span class=\"mtk12\">available</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">available</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_SEAPORT</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Set storage variables.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_available</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">available</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_required</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">required</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ready</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">extendAvailable</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">ready</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">fulfilled</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OrderUnavailable</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">extraAvailable</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_available</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> /= </span><span class=\"mtk7\">2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">extendRequired</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">ready</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">fulfilled</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OrderUnavailable</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">extraRequired</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">generateOrder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minimumReceived</span><span class=\"mtk1\">, </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maximumSpent</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk3\">/* context */</span><span class=\"mtk1\"> )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">offer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ReceivedItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">consideration</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">console2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;generateOrder&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ShowName</span><span class=\"mtk1\">(</span><span class=\"mtk12\">name</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Set the offer and consideration that were supplied during deployment.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">reverting</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">console2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;reverting&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;revert here&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">otherContract</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">result</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ISeaport</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_SEAPORT</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getContractOffererNonce</span><span class=\"mtk1\">(</span><span class=\"mtk12\">otherContract</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">console2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;result&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">result</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NumberUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">result</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">oldNonce</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">TestContractOffererNativeToken</span><span class=\"mtk1\">(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">otherContract</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">nonce</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NumberUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">oldNonce</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">offer</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">SpentItem</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">consideration</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ReceivedItem</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Send eth to Seaport.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\">,) = </span><span class=\"mtk12\">_SEAPORT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">minimumReceived</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">}(</span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">console2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Sent ETH to SEAPORT&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">success</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// revert(&quot;error&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Revert if transaction fails.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">success</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">returndatacopy</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk11\">returndatasize</span><span class=\"mtk1\">())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk11\">returndatasize</span><span class=\"mtk1\">())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Set the offer item as the _available item in storage.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">offer</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">minimumReceived</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Set the erc721 consideration item.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">consideration</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">ReceivedItem</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">itemType:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">token:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maximumSpent</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">identifier:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maximumSpent</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">amount:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maximumSpent</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">recipient:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Update storage to reflect that the order has been fulfilled.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">fulfilled</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">console2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;fulfilled&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fulfilled</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">previewOrder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">caller</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\">, </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">context</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">offer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ReceivedItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">consideration</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Ensure the caller is Seaport &amp; the order has not yet been fulfilled.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">ready</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">fulfilled</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">caller</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">_SEAPORT</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">context</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OrderUnavailable</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Set the offer and consideration that were supplied during deployment.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">offer</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">SpentItem</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">extraAvailable</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">consideration</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ReceivedItem</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">extraRequired</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">extraAvailable</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">offer</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_available</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">extraRequired</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">consideration</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">ReceivedItem</span><span class=\"mtk1\">({</span><span class=\"mtk12\">itemType:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_required</span><span class=\"mtk1\">.</span><span class=\"mtk12\">itemType</span><span class=\"mtk1\">, </span><span class=\"mtk12\">token:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_required</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">identifier:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_required</span><span class=\"mtk1\">.</span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_required</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">recipient:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">))});</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getInventory</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">offerable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receivable</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Set offerable and receivable supplied at deployment if unfulfilled.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">ready</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">fulfilled</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">offerable</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">SpentItem</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">receivable</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">SpentItem</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">offerable</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">SpentItem</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">extraAvailable</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">extraAvailable</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">offerable</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_available</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">receivable</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">SpentItem</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">extraRequired</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">extraRequired</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">receivable</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_required</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ratifyOrder</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\">, </span><span class=\"mtk3\">/* offer */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ReceivedItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\">, </span><span class=\"mtk3\">/* consideration */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\">, </span><span class=\"mtk3\">/* context */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\">, </span><span class=\"mtk3\">/* orderHashes */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk3\">/* contractNonce */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\"> </span><span class=\"mtk3\">/* ratifyOrderMagicValue */</span><span class=\"mtk1\"> ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ContractOffererInterface</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ratifyOrder</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onERC1155Received</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">bytes4</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0xf23a6e61</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// function supportsInterface(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//     bytes4 interfaceId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//     public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//     view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//     virtual</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//     override(ERC165, ContractOffererInterface)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//     returns (bool)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//     return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//         interfaceId == type(ContractOffererInterface).interfaceId ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//         super.supportsInterface(interfaceId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Returns the metadata for this contract offerer.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getSeaportMetadata</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">pure</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">name</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">Schema</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">schemas</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// map to Seaport Improvement Proposal IDs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">schemas</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Schema</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">schemas</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">id</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1337</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">schemas</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">metadata</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk8\">&quot;TestContractOffererNativeToken&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">schemas</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">CreateOffererTest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Test</span><span class=\"mtk1\">, </span><span class=\"mtk12\">BaseSeaportTest</span><span class=\"mtk1\">, </span><span class=\"mtk12\">BaseLiquidDelegateTest</span><span class=\"mtk1\">, </span><span class=\"mtk12\">SeaportHelpers</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">CreateOfferer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">createOfferer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">WETH</span><span class=\"mtk1\"> </span><span class=\"mtk12\">weth</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startGas</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">User</span><span class=\"mtk1\"> </span><span class=\"mtk12\">buyer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">User</span><span class=\"mtk1\"> </span><span class=\"mtk12\">seller</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">OfferItem</span><span class=\"mtk1\"> </span><span class=\"mtk12\">offerItem</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ConsiderationItem</span><span class=\"mtk1\"> </span><span class=\"mtk12\">considerationItem</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">OfferItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">offerItems</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ConsiderationItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">minimumReceived</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">maximumSpent</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setUp</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">OffererStructs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Parameters</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">createOffererParameters</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">OffererStructs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Parameters</span><span class=\"mtk1\">({</span><span class=\"mtk12\">seaport:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">seaport</span><span class=\"mtk1\">), </span><span class=\"mtk12\">delegateToken:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">dt</span><span class=\"mtk1\">), </span><span class=\"mtk12\">principalToken:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">principal</span><span class=\"mtk1\">)});</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">createOfferer</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">CreateOfferer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">createOffererParameters</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">weth</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">WETH</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Setup buyer and seller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">seller</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeUser</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;seller&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">label</span><span class=\"mtk1\">(</span><span class=\"mtk12\">seller</span><span class=\"mtk1\">.</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;seller&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">buyer</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeUser</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;buyer&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">label</span><span class=\"mtk1\">(</span><span class=\"mtk12\">buyer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;buyer&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">OfferItem</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_offerItem</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">offerItems</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_offerItem</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">///@dev reset the offer items array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">resetOfferItems</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">offerItems</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">///@dev Construct and an offer item to the offer items array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">itemType</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">offerItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">itemType</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">itemType</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">offerItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">token</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">offerItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">identifierOrCriteria</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">offerItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">offerItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">offerItem</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">offerItem</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">itemType</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addOfferItem</span><span class=\"mtk1\">({</span><span class=\"mtk12\">itemType:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">itemType</span><span class=\"mtk1\">, </span><span class=\"mtk12\">token:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">identifier:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">startAmount:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">endAmount:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">});</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">itemType</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">itemType</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">NATIVE</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">addEthOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">itemType</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">addErc20OfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">itemType</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC1155</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">addErc1155OfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">addErc721OfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">itemType</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amt</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">itemType</span><span class=\"mtk1\">, </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amt</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amt</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addErc721OfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addErc721OfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">), </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addErc721OfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addErc721OfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addErc721OfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addErc721OfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addErc721OfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">, </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addErc1155OfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC1155</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mockERC1155</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addErc20OfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mockERC20</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addErc20OfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addErc20OfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addErc1155OfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC1155</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mockERC1155</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addEthOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">NATIVE</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addEthOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">paymentAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addEthOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">paymentAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">///@dev add a considerationItem to the considerationItems array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ConsiderationItem</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_considerationItem</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_considerationItem</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">///@dev reset the considerationItems array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">resetConsiderationItems</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">///@dev construct a considerationItem and add it to the considerationItems array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">itemType</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">considerationItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">itemType</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">itemType</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">considerationItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">token</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">considerationItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">identifierOrCriteria</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">considerationItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">considerationItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">considerationItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">recipient</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">considerationItem</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">considerationItem</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">itemType</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amt</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">itemType</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">NATIVE</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">addEthConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amt</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">itemType</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">addErc20ConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amt</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">itemType</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC1155</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">addErc1155ConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amt</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">addErc721ConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addEthConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">paymentAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">NATIVE</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">paymentAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">paymentAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addEthConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">NATIVE</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addErc20ConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mockERC20</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addErc20ConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">paymentAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addErc20ConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">paymentAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">paymentAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addErc721ConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addErc1155ConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC1155</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mockERC1155</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">receive</span><span class=\"mtk1\">() </span><span class=\"mtk12\">external</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev Example of setting up one order</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_single_POC</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">TestContractOffererNativeToken</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contractOfferer1</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TestContractOffererNativeToken</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">seaport</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk8\">&quot;contractOffer1&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractOfferer1</span><span class=\"mtk1\">), </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractOfferer1</span><span class=\"mtk1\">), </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">seaport</span><span class=\"mtk1\">), </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addEthOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addErc721ConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractOfferer1</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">OrderParameters</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orderParameters1</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">OrderParameters</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractOfferer1</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">offerItems</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">OrderType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">CONTRACT</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">AdvancedOrder</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">advancedOrder1</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">AdvancedOrder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">orderParameters1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">FulfillmentComponent</span><span class=\"mtk1\">[][] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">offerFulfillments</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">FulfillmentComponent</span><span class=\"mtk1\">[][](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">offerFulfillments</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">FulfillmentComponent</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">offerFulfillments</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">][</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">FulfillmentComponent</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Create considerationFulfillments 2D array similarly</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">FulfillmentComponent</span><span class=\"mtk1\">[][] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">considerationFulfillments</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">FulfillmentComponent</span><span class=\"mtk1\">[][](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">considerationFulfillments</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">FulfillmentComponent</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">considerationFulfillments</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">][</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">FulfillmentComponent</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// contractOfferer1.setRevert(true);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">AdvancedOrder</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orders</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">AdvancedOrder</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">orders</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">advancedOrder1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">seaport</span><span class=\"mtk1\">.</span><span class=\"mtk11\">fulfillAvailableAdvancedOrders</span><span class=\"mtk1\">(</span><span class=\"mtk12\">orders</span><span class=\"mtk1\">, </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">CriteriaResolver</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk12\">offerFulfillments</span><span class=\"mtk1\">, </span><span class=\"mtk12\">considerationFulfillments</span><span class=\"mtk1\">, </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk7\">100</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_POC</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">TestContractOffererNativeToken</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contractOfferer1</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TestContractOffererNativeToken</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">seaport</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk8\">&quot;contractOffer1&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractOfferer1</span><span class=\"mtk1\">), </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractOfferer1</span><span class=\"mtk1\">), </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">seaport</span><span class=\"mtk1\">), </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">console2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;mockERC721.ownerOf(1)&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addEthOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addErc721ConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractOfferer1</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">OrderParameters</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orderParameters1</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">OrderParameters</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractOfferer1</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">offerItems</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">OrderType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">CONTRACT</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">AdvancedOrder</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">advancedOrder1</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">AdvancedOrder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">orderParameters1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">resetOfferItems</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">resetConsiderationItems</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">TestContractOffererNativeToken</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contractOfferer2</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TestContractOffererNativeToken</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">seaport</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk8\">&quot;contractOffer2&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractOfferer2</span><span class=\"mtk1\">), </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractOfferer2</span><span class=\"mtk1\">), </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">seaport</span><span class=\"mtk1\">), </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addEthOfferItem</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">addErc721ConsiderationItem</span><span class=\"mtk1\">(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractOfferer2</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">console2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;mockERC721.ownerOf(2)&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">contractOfferer1</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRevert</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">OrderParameters</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orderParameters2</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">OrderParameters</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractOfferer2</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">offerItems</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">OrderType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">CONTRACT</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">AdvancedOrder</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">advancedOrder2</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">AdvancedOrder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">orderParameters2</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// FulfillmentComponent[][] memory offerFulfillments = new FulfillmentComponent[][](2);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// offerFulfillments[0] = new FulfillmentComponent[](2);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// offerFulfillments[0][0] = FulfillmentComponent(1, 0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// offerFulfillments[0][1] = FulfillmentComponent(1, 1);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// // Create considerationFulfillments 2D array similarly</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// FulfillmentComponent[][] memory considerationFulfillments = new FulfillmentComponent[][](2);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// considerationFulfillments[0] = new FulfillmentComponent[](2);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// considerationFulfillments[0][0] = FulfillmentComponent(1, 0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// considerationFulfillments[0][1] = FulfillmentComponent(1, 1);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">FulfillmentComponent</span><span class=\"mtk1\">[][] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">offerFulfillments</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">FulfillmentComponent</span><span class=\"mtk1\">[][](</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">offerFulfillments</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">FulfillmentComponent</span><span class=\"mtk1\">[](</span><span class=\"mtk12\">offerItems</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">offerFulfillments</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">FulfillmentComponent</span><span class=\"mtk1\">[](</span><span class=\"mtk12\">offerItems</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">FulfillmentComponent</span><span class=\"mtk1\">[][] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">considerationFulfillments</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">FulfillmentComponent</span><span class=\"mtk1\">[][](</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">considerationFulfillments</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">FulfillmentComponent</span><span class=\"mtk1\">[](</span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">considerationFulfillments</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">FulfillmentComponent</span><span class=\"mtk1\">[](</span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">offerItems</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">offerFulfillments</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">FulfillmentComponent</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">i</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">considerationFulfillments</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">FulfillmentComponent</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">i</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">offerItems</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">offerFulfillments</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">FulfillmentComponent</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">i</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">considerationFulfillments</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">FulfillmentComponent</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">i</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">AdvancedOrder</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orders</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">AdvancedOrder</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">orders</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">advancedOrder1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">orders</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">advancedOrder2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">console2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;mockERC721.ownerOf(1)&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">console2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;mockERC721.ownerOf(2)&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">seaport</span><span class=\"mtk1\">.</span><span class=\"mtk11\">fulfillAvailableAdvancedOrders</span><span class=\"mtk1\">(</span><span class=\"mtk12\">orders</span><span class=\"mtk1\">, </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">CriteriaResolver</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk12\">offerFulfillments</span><span class=\"mtk1\">, </span><span class=\"mtk12\">considerationFulfillments</span><span class=\"mtk1\">, </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk7\">100</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">seaport_contrat_offer_1_nonce</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">seaport</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractOffererNonce</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractOfferer1</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">console2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">seaport_contrat_offer_1_nonce</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// the nonce of contract offerer on seaport is 1 is 1!!</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">oldNonce</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">contractOfferer1</span><span class=\"mtk1\">.</span><span class=\"mtk11\">nonce</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// the none of contract offerer 1 is 0!</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">console2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">oldNonce</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Proof also by showing that we can re-do Order 1 but nonces are deSynched</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">console2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;mockERC721.ownerOf(1)&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">console2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;mockERC721.ownerOf(2)&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">mockERC721</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n</details>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this audit, 10 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/293\">report highlighted below</a> by <strong>DadeKuma</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/5\">p0wd3r</a>, <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/369\">gkrastenov</a>, <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/357\">Fulum</a>, <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/354\">sces60107</a>, <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/353\">Brenzee</a>, <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/176\">kodyvim</a>, <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/172\">lsaudit</a>, <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/96\">ladboy233</a>, and <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/79\">lodelux</a>.</em></p>\n<h2 id=\"01-previeworder-should-not-revert\" style=\"position:relative;\"><a href=\"#01-previeworder-should-not-revert\" aria-label=\"01 previeworder should not revert permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[01] <code>previewOrder</code> should not revert</h2>\n<p>The official <a href=\"https://github.com/ProjectOpenSea/seaport/blob/main/docs/SeaportDocumentation.md#arguments-and-basic-functionality\">documentation</a> says that <code>previewOrder</code> should not revert, as it may cause issues to the caller:</p>\n<blockquote>\n<p>An optimal Seaport app should return an order with penalties when its previewOrder function is called with unacceptable minimumReceived and maximumSpent arrays, so that the caller can learn what the Seaport app expects. But it should revert when its generateOrder is called with unacceptable minimumReceived and maximumSpent arrays, so the function fails fast, gets skipped, and avoids wasting gas by leaving the validation to Seaport.</p>\n</blockquote>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">previewOrder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">caller</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minimumReceived</span><span class=\"mtk1\">, </span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maximumSpent</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">context</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">onlySeaport</span><span class=\"mtk1\">(</span><span class=\"mtk12\">caller</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">SpentItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">offer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ReceivedItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">consideration</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">context</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">160</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Errors</span><span class=\"mtk1\">.</span><span class=\"mtk11\">InvalidContextLength</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">offer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">consideration</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">Helpers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">processSpentItems</span><span class=\"mtk1\">(</span><span class=\"mtk12\">minimumReceived</span><span class=\"mtk1\">, </span><span class=\"mtk12\">maximumSpent</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-09-delegate/blob/main/src/CreateOfferer.sol#L176-L184\">https://github.com/code-423n4/2023-09-delegate/blob/main/src/CreateOfferer.sol#L176-L184</a></p>\n<h2 id=\"02-withdraw-should-revert-with-non-supported-delegationtype\" style=\"position:relative;\"><a href=\"#02-withdraw-should-revert-with-non-supported-delegationtype\" aria-label=\"02 withdraw should revert with non supported delegationtype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[02] Withdraw should revert with non-supported <code>delegationType</code></h2>\n<p>There seems to be no way to create a DelegateToken that is not ERC721/ERC20/ERC1155, but due to the fact that <code>DelegationType</code> supports also <code>ALL</code> and <code>CONTRACT</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">enum</span><span class=\"mtk1\"> </span><span class=\"mtk10\">DelegationType</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">NONE</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ALL</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">CONTRACT</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ERC1155</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>And there are multiple ways to create DelegateToken (e.g. <code>DelegateToken.create</code> and <code>CreateOfferer.transferFrom</code>, but more contracts could be created in the future), it would be safer to revert the transaction on withdraw to avoid burning unsupported tokens:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">delegateTokenId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">delegationType</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">IDelegateRegistry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">DelegationType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC1155</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">erc1155UnderlyingAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">StorageHelpers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">readUnderlyingAmount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">delegateTokenInfo</span><span class=\"mtk1\">, </span><span class=\"mtk12\">delegateTokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">StorageHelpers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">writeUnderlyingAmount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">delegateTokenInfo</span><span class=\"mtk1\">, </span><span class=\"mtk12\">delegateTokenId</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// Deletes amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">erc11551UnderlyingTokenId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">RegistryHelpers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">loadTokenId</span><span class=\"mtk1\">(</span><span class=\"mtk12\">delegateRegistry</span><span class=\"mtk1\">, </span><span class=\"mtk12\">registryHash</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">RegistryHelpers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decrementERC1155</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">delegateRegistry</span><span class=\"mtk1\">, </span><span class=\"mtk12\">registryHash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">delegateTokenHolder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">underlyingContract</span><span class=\"mtk1\">, </span><span class=\"mtk12\">erc11551UnderlyingTokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">erc1155UnderlyingAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">underlyingRights</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">StorageHelpers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">burnPrincipal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">principalToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">principalBurnAuthorization</span><span class=\"mtk1\">, </span><span class=\"mtk12\">delegateTokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC1155</span><span class=\"mtk1\">(</span><span class=\"mtk12\">underlyingContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">erc11551UnderlyingTokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">erc1155UnderlyingAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/* @audit Should revert here to avoid burning a not supported delegate token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">        revert Errors.InvalidTokenType(delegationType);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">*/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-09-delegate/blob/main/src/DelegateToken.sol#L353-L386\">https://github.com/code-423n4/2023-09-delegate/blob/main/src/DelegateToken.sol#L353-L386</a></p>\n<h2 id=\"03-lack-of-data-on-flashloan-could-make-some-erc1155-unusable\" style=\"position:relative;\"><a href=\"#03-lack-of-data-on-flashloan-could-make-some-erc1155-unusable\" aria-label=\"03 lack of data on flashloan could make some erc1155 unusable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[03] Lack of <code>data</code> on flashloan could make some ERC1155 unusable</h2>\n<p>When doing an ERC1155 flashloan, the data parameter is always empty:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">IERC1155</span><span class=\"mtk1\">(</span><span class=\"mtk12\">info</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">info</span><span class=\"mtk1\">.</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">info</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">info</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-09-delegate/blob/main/src/DelegateToken.sol#L406\">https://github.com/code-423n4/2023-09-delegate/blob/main/src/DelegateToken.sol#L406</a></p>\n<p>Some collections might need this parameter to be usable. This is an <a href=\"https://etherscan.io/tx/0xd067dbef589678ad1c138e007fee644f1b5ed350043551983c90b9e46071fed2\">example</a> of such case:</p>\n<ol>\n<li>The sender transfers ERC1155 from the OpenSea contract to the ApeGang contract</li>\n<li>In the same transaction the ApeGang’s onERC1155BatchReceived hook is called</li>\n<li>This allows the ApeGang to react to the token being received</li>\n<li>The data includes merkle proofs that are needed to validate the transaction</li>\n</ol>\n<p>Consider adding a <code>flashloanData</code> parameter to <code>Structs.FlashInfo</code> and pass it while transfering.</p>\n<h2 id=\"04-using-delegatecall-inside-a-loop-may-cause-issues-with-payable-functions\" style=\"position:relative;\"><a href=\"#04-using-delegatecall-inside-a-loop-may-cause-issues-with-payable-functions\" aria-label=\"04 using delegatecall inside a loop may cause issues with payable functions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[04] Using <code>delegatecall</code> inside a loop may cause issues with <code>payable</code> functions</h2>\n<p>If one of the <code>delegatecall</code> consumes part of the <code>msg.value</code>, other calls might fail, if they expect the full <code>msg.value</code>. Consider using a different design, or fully document this decision to avoid potential issues.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">multicall</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">results</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">results</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\">[](</span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">//slither-disable-next-line calls-loop,delegatecall-loop</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            (</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk12\">results</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]) = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk11\">delegatecall</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">success</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MulticallFailed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/delegatexyz/delegate-registry/blob/6d1254de793ccc40134f9bec0b7cb3d9c3632bc1/src/DelegateRegistry.sol#L37\">https://github.com/delegatexyz/delegate-registry/blob/6d1254de793ccc40134f9bec0b7cb3d9c3632bc1/src/DelegateRegistry.sol#L37</a></p>\n<h2 id=\"05-createofferer-uses-a-custom-context-implementation-instead-of-an-existing-sip\" style=\"position:relative;\"><a href=\"#05-createofferer-uses-a-custom-context-implementation-instead-of-an-existing-sip\" aria-label=\"05 createofferer uses a custom context implementation instead of an existing sip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[05] <code>CreateOfferer</code> uses a custom context implementation instead of an existing SIP</h2>\n<p>It is suggested to use an existing <a href=\"https://github.com/ProjectOpenSea/SIPs/blob/main/SIPS/sip-7.md\">SIP implementation</a> instead of creating a new standard from scratch, which might be prone to errors:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">Structs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Context</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">decodedContext</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">context</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">Structs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Context</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-09-delegate/blob/main/src/CreateOfferer.sol#L59\">https://github.com/code-423n4/2023-09-delegate/blob/main/src/CreateOfferer.sol#L59</a></p>\n<p>Please note that the contract needs to be SIP compliant before it’s possible to implement SIP-7, as it requires SIP-5 and SIP-6. </p>\n<p>The issue describing non-compliance is described here: <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/280\"><code>#280</code></a>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/293#issuecomment-1724128834\">0xfoobar (Delegate) commented</a>:</strong></p>\n<blockquote>\n<p>Useful QA report.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/293#issuecomment-1732627819\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p><strong>[01] previewOrder should not revert</strong><br>\nLow</p>\n<p><strong>[02] Withdraw should revert with a not supported delegationType</strong><br>\nRefactoring</p>\n<p><strong>[03] Lack of data on flashloan could make some ERC1155 unusable</strong><br>\nLow</p>\n<p><strong>[04] Using delegatecall inside a loop may cause issues with payable functions</strong><br>\nRefactoring</p>\n<p><strong>[05] CreateOfferer uses a custom context implementation instead of an existing SIP</strong><br>\nLow</p>\n<p>The following downgraded submissions from the warden were also considered in scoring:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/259\">Seaport orders will not work with USDT</a></li>\n<li><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/260\">DelegateToken is not EIP-721 compliant</a></li>\n<li><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/264\">Rebasing tokens remain permanently locked inside DelegateToken</a></li>\n<li><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/267\">ETH can be permanently locked during a flashloan</a></li>\n<li><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/269\">Principal token can be permanently locked</a></li>\n<li><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/280\">CreateOfferer is not SIP-compliant, which can cause integration issues with third parties</a></li>\n</ul>\n<p>Total: 6+ Low and 2 Refactoring</p>\n<p>By far the best submission, great work!</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/293#issuecomment-1745886019\">0xfoobar (Delegate) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p><strong>[01] previewOrder should not revert</strong><br>\nThe quoted documentation actually says it can revert, we’re not doing order penalties here just straightforward fulfillment.</p>\n<p><strong>[02] Withdraw should revert with non-supported delegationType</strong><br>\nIt does.</p>\n<p><strong>[03] Lack of data on flashloan could make some ERC1155 unusable</strong><br>\nAcknowledged, we won’t be transferring directly to staking contracts with merkle roots so this is fine.</p>\n<p><strong>[04] Using delegatecall inside a loop may cause issues with payable functions</strong><br>\nBut here it does not, we can see in the quoted code that it’s not looping over <code>msg.value</code>.</p>\n<p><strong>[05] CreateOfferer uses a custom context implementation instead of an existing SIP</strong><br>\nAcknowledged.</p>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this audit, 2 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/78\">report highlighted below</a> by <strong>Sathish9098</strong> received the top score from the judge.</p>\n<p><em>The following warden also submitted a report: <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/380\">Baki</a>.</em></p>\n<h2 id=\"g-01-structs-can-be-packed-into-fewer-storage-slots\" style=\"position:relative;\"><a href=\"#g-01-structs-can-be-packed-into-fewer-storage-slots\" aria-label=\"g 01 structs can be packed into fewer storage slots permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Structs can be packed into fewer storage slots</h2>\n<h3 id=\"saves-6000-gas-3-slot\" style=\"position:relative;\"><a href=\"#saves-6000-gas-3-slot\" aria-label=\"saves 6000 gas 3 slot permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Saves <code>6000 GAS</code>, <code>3 SLOT</code></h3>\n<p>Each slot saved can avoid an extra Gsset (20000 gas) for the first setting of the struct.</p>\n<p>Subsequent reads as well as writes have smaller gas savings.</p>\n<h3 id=\"expiry-can-be-uint96-instead-of-uint256---saves-2000-gas-1-slot\" style=\"position:relative;\"><a href=\"#expiry-can-be-uint96-instead-of-uint256---saves-2000-gas-1-slot\" aria-label=\"expiry can be uint96 instead of uint256   saves 2000 gas 1 slot permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>expiry</code> can be uint96 instead of <code>uint256</code> :  Saves <code>2000 GAS</code>, <code>1 SLOT</code></h3>\n<p><a href=\"https://github.com/code-423n4/2023-09-delegate/blob/a6dbac8068760ee4fc5bababb57e3fe79e5eeb2e/src/libraries/DelegateTokenLib.sol#L20-L29\">https://github.com/code-423n4/2023-09-delegate/blob/a6dbac8068760ee4fc5bababb57e3fe79e5eeb2e/src/libraries/DelegateTokenLib.sol#L20-L29</a></p>\n<p>A <code>uint96</code> can store values from <code>0 to 2^96 - 1</code>, which is a very large range. However, it’s important to note that Ethereum’s <code>block.timestamp</code> is a <code>Unix timestamp</code>, which represents time in seconds.</p>\n<p>A <code>uint96</code> would overflow after approximately <code>2,508,149,904,626,209 years</code> when storing time in seconds.  This is an extremely long time frame, and it’s highly unlikely that Ethereum or any blockchain system will remain unchanged for such an extended period.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: 2023-09-delegate/src/libraries/DelegateTokenLib.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">20: struct DelegateInfo {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">21:        address principalHolder;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">22:        IDelegateRegistry.DelegationType tokenType;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">23:        address delegateHolder;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">24:        uint256 amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">25:        address tokenContract;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 28:        uint96 expiry;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">26:        uint256 tokenId;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">27:        bytes32 rights;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 28:        uint256 expiry;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">29:    }</span></span></span></code></pre>\n<h3 id=\"signersalt-expirylength-can-be-uint128-instead-of-uint256--saves-4000-gas-2-slot\" style=\"position:relative;\"><a href=\"#signersalt-expirylength-can-be-uint128-instead-of-uint256--saves-4000-gas-2-slot\" aria-label=\"signersalt expirylength can be uint128 instead of uint256  saves 4000 gas 2 slot permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>signerSalt</code>, <code>expiryLength</code> can be <code>uint128</code> instead of <code>uint256</code> : Saves <code>4000 GAS</code>, <code>2 SLOT</code></h3>\n<p><a href=\"https://github.com/code-423n4/2023-09-delegate/blob/a6dbac8068760ee4fc5bababb57e3fe79e5eeb2e/src/libraries/CreateOffererLib.sol#L89-L105\">https://github.com/code-423n4/2023-09-delegate/blob/a6dbac8068760ee4fc5bababb57e3fe79e5eeb2e/src/libraries/CreateOffererLib.sol#L89-L105</a></p>\n<p>In many blockchain protocols, the usage of <code>salt</code> often involves values within the range of <code>uint32</code>, as they provide a sufficient numeric space for generating unique salts. Therefore, adopting a uint32 data type for the signerSalt field is a reasonable choice, as it aligns with common practices and conserves storage resources.</p>\n<p>For the <code>expiryLength</code> field, which is intended to store the <code>duration</code> or <code>length</code> of an <code>expiration period</code>, using <code>uint128</code> is more than adequate. This choice allows for a vast range of possible expiration lengths, accommodating a wide spectrum of use cases without incurring unnecessary storage overhead</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: 2023-09-delegate/src/libraries/CreateOffererLib.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">89: struct Context {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">90:        bytes32 rights;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 91:        uint128 signerSalt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 92:        uint128 expiryLength;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 91:        uint256 signerSalt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 92:        uint256 expiryLength;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">93:        CreateOffererEnums.ExpiryType expiryType;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">94:        CreateOffererEnums.TargetToken targetToken;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">95:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">98: struct Order {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">99:        bytes32 rights;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 100:        uint256 expiryLength;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 101:        uint256 signerSalt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 100:        uint128 expiryLength;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 101:        uint128 signerSalt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">102:        address tokenContract;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">103:        CreateOffererEnums.ExpiryType expiryType;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">104:        CreateOffererEnums.TargetToken targetToken;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">105:    }</span></span></span></code></pre>\n<h2 id=\"g-02-remove-or-replace-unused-state-variables\" style=\"position:relative;\"><a href=\"#g-02-remove-or-replace-unused-state-variables\" aria-label=\"g 02 remove or replace unused state variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] Remove or replace unused state variables</h2>\n<h3 id=\"saves-20000-gas\" style=\"position:relative;\"><a href=\"#saves-20000-gas\" aria-label=\"saves 20000 gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Saves <code>20000 GAS</code></h3>\n<p>Saves a storage slot. If the variable is assigned a non-zero value, saves <code>Gsset (20000 gas)</code>. If it’s assigned a zero value, saves <code>Gsreset (2900 gas)</code>. If the variable remains unassigned, there is no gas savings unless the variable is public, in which case the compiler-generated non-payable getter deployment cost is saved. If the state variable is overriding an interface’s public function, mark the variable as constant or immutable so that it does not use a storage slot</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk12\">delegate</span><span class=\"mtk1\">-</span><span class=\"mtk12\">registry</span><span class=\"mtk1\">/</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DelegateRegistry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">18</span><span class=\"mtk1\">: </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">delegationHash</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[</span><span class=\"mtk7\">5</span><span class=\"mtk1\">] </span><span class=\"mtk12\">delegationStorage</span><span class=\"mtk1\">) </span><span class=\"mtk12\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">delegations</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/delegatexyz/delegate-registry/blob/6d1254de793ccc40134f9bec0b7cb3d9c3632bc1/src/DelegateRegistry.sol#L18\">https://github.com/delegatexyz/delegate-registry/blob/6d1254de793ccc40134f9bec0b7cb3d9c3632bc1/src/DelegateRegistry.sol#L18</a></p>\n<h2 id=\"g-03-state-variables-should-be-cached\" style=\"position:relative;\"><a href=\"#g-03-state-variables-should-be-cached\" aria-label=\"g 03 state variables should be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] State variables should be cached</h2>\n<h3 id=\"saves-300-gas-3-slod\" style=\"position:relative;\"><a href=\"#saves-300-gas-3-slod\" aria-label=\"saves 300 gas 3 slod permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Saves <code>300 GAS</code>, <code>3 SLOD</code></h3>\n<p>Caching of a state variable replaces each Gwarmaccess (100 gas) with a cheaper stack read. Other less obvious fixes/optimizations include having local memory caches of state variable structs, or having local caches of state variable contracts/addresses.</p>\n<h3 id=\"noncevalue-receiverstargettokenreceiver-receiversfulfiller--should-be-cached--saves-300-gas-3-slod\" style=\"position:relative;\"><a href=\"#noncevalue-receiverstargettokenreceiver-receiversfulfiller--should-be-cached--saves-300-gas-3-slod\" aria-label=\"noncevalue receiverstargettokenreceiver receiversfulfiller  should be cached  saves 300 gas 3 slod permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>nonce.value</code>, <code>receivers.targetTokenReceiver</code>, <code>receivers.fulfiller</code>  should be cached : Saves <code>300 GAS</code>, <code>3 SLOD</code></h3>\n<p><a href=\"https://github.com/code-423n4/2023-09-delegate/blob/a6dbac8068760ee4fc5bababb57e3fe79e5eeb2e/src/libraries/CreateOffererLib.sol#L185\">https://github.com/code-423n4/2023-09-delegate/blob/a6dbac8068760ee4fc5bababb57e3fe79e5eeb2e/src/libraries/CreateOffererLib.sol#L185</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: 2023-09-delegate/src/libraries/CreateOffererLib.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ uint256 value_ = nonce.value ;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- 185: if (nonce.value != contractNonce) revert CreateOffererErrors.InvalidContractNonce(nonce.value, contractNonce);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ 185: if (value_ != contractNonce) revert CreateOffererErrors.InvalidContractNonce(value_, contractNonce);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ address targetTokenReceiver_ = receivers.targetTokenReceiver ;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ address fulfiller_ = receivers.fulfiller;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">289: //slither-disable-start timestamp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">300:        if (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            keccak256(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                abi.encode(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    IDelegateTokenStructs.DelegateInfo({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        tokenType: tokenType,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                         principalHolder: decodedContext.targetToken == CreateOffererEnums.TargetToken.principal </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ? receivers.targetTokenReceiver : receivers.fulfiller,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                         principalHolder: decodedContext.targetToken == CreateOffererEnums.TargetToken.principal </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ? targetTokenReceiver_  : fulfiller_ ,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                        delegateHolder: decodedContext.targetToken == CreateOffererEnums.TargetToken.delegate ? receivers.targetTokenReceiver : receivers.fulfiller,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        delegateHolder: decodedContext.targetToken == CreateOffererEnums.TargetToken.delegate ? targetTokenReceiver_  : fulfiller_ ,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        expiry: CreateOffererHelpers.calculateExpiry(decodedContext.expiryType, decodedContext.expiryLength),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        rights: decodedContext.rights,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        tokenContract: consideration.token,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        tokenId: (tokenType != IDelegateRegistry.DelegationType.ERC20) ? consideration.identifier : 0,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        amount: (tokenType != IDelegateRegistry.DelegationType.ERC721) ? consideration.amount : 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ) != keccak256(abi.encode(IDelegateToken(delegateToken).getDelegateInfo(DelegateTokenHelpers.delegateIdNoRevert(address(this), identifier))))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ) revert CreateOffererErrors.DelegateInfoInvariant();</span></span></span></code></pre>\n<h2 id=\"g-04-use-assembly-for-loops-to-save-gas\" style=\"position:relative;\"><a href=\"#g-04-use-assembly-for-loops-to-save-gas\" aria-label=\"g 04 use assembly for loops to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] Use assembly for loops to save gas</h2>\n<h3 id=\"saves-2450-gas-for-every-iteration-from-7-instances\" style=\"position:relative;\"><a href=\"#saves-2450-gas-for-every-iteration-from-7-instances\" aria-label=\"saves 2450 gas for every iteration from 7 instances permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Saves <code>2450 GAS</code> for every iteration from <code>7 instances</code></h3>\n<p>Assembly is more gas efficient for loops. Saves minimum <code>350 GAS</code> per iteration as per remix gas checks.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk12\">Breadcrumbsdelegate</span><span class=\"mtk1\">-</span><span class=\"mtk12\">registry</span><span class=\"mtk1\">/</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DelegateRegistry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">- </span><span class=\"mtk7\">35</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-                </span><span class=\"mtk3\">//slither-disable-next-line calls-loop,delegatecall-loop</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-                (</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk12\">results</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]) = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk11\">delegatecall</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">success</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MulticallFailed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+ </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+    </span><span class=\"mtk3\">// Load the length of the data array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+    </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dataSize</span><span class=\"mtk1\"> := </span><span class=\"mtk10\">mload</span><span class=\"mtk1\">(</span><span class=\"mtk10\">data</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+    </span><span class=\"mtk3\">// Initialize the results array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+    </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">results</span><span class=\"mtk1\"> := </span><span class=\"mtk10\">mload</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0x40</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+    </span><span class=\"mtk11\">mstore</span><span class=\"mtk1\">(</span><span class=\"mtk12\">results</span><span class=\"mtk1\">, </span><span class=\"mtk12\">dataSize</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+    </span><span class=\"mtk3\">// Initialize a counter (i) to zero</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+    </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> := </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+    </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> { } </span><span class=\"mtk11\">lt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">, </span><span class=\"mtk12\">dataSize</span><span class=\"mtk1\">) { } {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk3\">// Start loop</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk3\">// Load the next calldata from the data array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldataPtr</span><span class=\"mtk1\"> := </span><span class=\"mtk10\">add</span><span class=\"mtk1\">(</span><span class=\"mtk10\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, 0x20), </span><span class=\"mtk10\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">, 0x20))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldataSize</span><span class=\"mtk1\"> := </span><span class=\"mtk10\">mload</span><span class=\"mtk1\">(</span><span class=\"mtk10\">calldataPtr</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk3\">// Perform delegatecall</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> := </span><span class=\"mtk10\">delegatecall</span><span class=\"mtk1\">(</span><span class=\"mtk10\">gas</span><span class=\"mtk1\">(), </span><span class=\"mtk10\">address</span><span class=\"mtk1\">(), </span><span class=\"mtk10\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">calldataPtr</span><span class=\"mtk1\">, 0x04), </span><span class=\"mtk10\">calldataSize</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk3\">// Store the result and check for success</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> </span><span class=\"mtk11\">iszero</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+            </span><span class=\"mtk3\">// Revert if delegatecall fails</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+            </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk11\">mstore</span><span class=\"mtk1\">(</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">results</span><span class=\"mtk1\">, </span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0x20</span><span class=\"mtk1\">)), </span><span class=\"mtk12\">success</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk3\">// Increment the counter</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        i := </span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk3\">// End loop</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+    </span><span class=\"mtk3\">// results contains the success status of each delegatecall</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+ }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">275</span><span class=\"mtk1\">:  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">hashes</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">312</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">tempLocation</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">locations</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    tempValue := </span><span class=\"mtk11\">sload</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tempLocation</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">contents</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">tempValue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">386</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">hashesLength</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">hash</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">hashes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">_invalidFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_loadFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Hashes</span><span class=\"mtk1\">.</span><span class=\"mtk11\">location</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hash</span><span class=\"mtk1\">)))) </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">filteredHashes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">count</span><span class=\"mtk1\">++] = </span><span class=\"mtk12\">hash</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">393</span><span class=\"mtk1\">:  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">count</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">hash</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">filteredHashes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">location</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Hashes</span><span class=\"mtk1\">.</span><span class=\"mtk11\">location</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hash</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contract_</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_loadDelegationAddresses</span><span class=\"mtk1\">(</span><span class=\"mtk12\">location</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">delegations_</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Delegation</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">type_:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Hashes</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decodeType</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hash</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">to:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">from:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">rights:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_loadDelegationBytes32</span><span class=\"mtk1\">(</span><span class=\"mtk12\">location</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Storage</span><span class=\"mtk1\">.</span><span class=\"mtk12\">POSITIONS_RIGHTS</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">amount:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_loadDelegationUint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">location</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Storage</span><span class=\"mtk1\">.</span><span class=\"mtk12\">POSITIONS_AMOUNT</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">contract_:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contract_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">tokenId:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_loadDelegationUint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">location</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Storage</span><span class=\"mtk1\">.</span><span class=\"mtk12\">POSITIONS_TOKEN_ID</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">417</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">hashesLength</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">hash</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">hashes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">_invalidFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_loadFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Hashes</span><span class=\"mtk1\">.</span><span class=\"mtk11\">location</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hash</span><span class=\"mtk1\">)))) </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">filteredHashes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">count</span><span class=\"mtk1\">++] = </span><span class=\"mtk12\">hash</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">423</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">count</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">validHashes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">filteredHashes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span></code></pre>\n<p><a href=\"https://github.com/delegatexyz/delegate-registry/blob/6d1254de793ccc40134f9bec0b7cb3d9c3632bc1/src/DelegateRegistry.sol#L423-L425\">https://github.com/delegatexyz/delegate-registry/blob/6d1254de793ccc40134f9bec0b7cb3d9c3632bc1/src/DelegateRegistry.sol#L423-L425</a></p>\n<h2 id=\"g-05-dont-initialize-default-values-to-variables-to-reduce-gas\" style=\"position:relative;\"><a href=\"#g-05-dont-initialize-default-values-to-variables-to-reduce-gas\" aria-label=\"g 05 dont initialize default values to variables to reduce gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Don’t initialize default values to variables to reduce gas</h2>\n<p>Saves <code>13 GAS</code> for local variable and <code>2000 GAS</code> for state variable </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk12\">Breadcrumbsdelegate</span><span class=\"mtk1\">-</span><span class=\"mtk12\">registry</span><span class=\"mtk1\">/</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DelegateRegistry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">35</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">275</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">hashes</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">312</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">386</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">hashesLength</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">393</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">count</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">417</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">hashesLength</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">423</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">count</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/delegatexyz/delegate-registry/blob/6d1254de793ccc40134f9bec0b7cb3d9c3632bc1/src/DelegateRegistry.sol#L35\">https://github.com/delegatexyz/delegate-registry/blob/6d1254de793ccc40134f9bec0b7cb3d9c3632bc1/src/DelegateRegistry.sol#L35</a></p>\n<h2 id=\"g-06-use-constants-instead-of-typeuintxmax-to-avoid-calculating-every-time\" style=\"position:relative;\"><a href=\"#g-06-use-constants-instead-of-typeuintxmax-to-avoid-calculating-every-time\" aria-label=\"g 06 use constants instead of typeuintxmax to avoid calculating every time permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] Use constants instead of type(uintX).max to avoid calculating every time</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk12\">delegate</span><span class=\"mtk1\">-</span><span class=\"mtk12\">registry</span><span class=\"mtk1\">/</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DelegateRegistry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">213</span><span class=\"mtk1\">:    ? </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">215</span><span class=\"mtk1\">: </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">Ops</span><span class=\"mtk1\">.</span><span class=\"mtk11\">or</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rights</span><span class=\"mtk1\"> == </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">217</span><span class=\"mtk1\">: ? </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">232</span><span class=\"mtk1\">: ? </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">234</span><span class=\"mtk1\">: </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">Ops</span><span class=\"mtk1\">.</span><span class=\"mtk11\">or</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rights</span><span class=\"mtk1\"> == </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">236</span><span class=\"mtk1\">: ? </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">372</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">cleanUpper12Bytes</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> &lt;&lt; </span><span class=\"mtk7\">160</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/delegatexyz/delegate-registry/blob/6d1254de793ccc40134f9bec0b7cb3d9c3632bc1/src/DelegateRegistry.sol#L213\">https://github.com/delegatexyz/delegate-registry/blob/6d1254de793ccc40134f9bec0b7cb3d9c3632bc1/src/DelegateRegistry.sol#L213</a></p>\n<h2 id=\"g-07-for-same-condition-checks-use-modifiers\" style=\"position:relative;\"><a href=\"#g-07-for-same-condition-checks-use-modifiers\" aria-label=\"g 07 for same condition checks use modifiers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] For same condition checks use modifiers</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">delegate</span><span class=\"mtk1\">-</span><span class=\"mtk12\">registry</span><span class=\"mtk1\">/</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DelegateRegistry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">56</span><span class=\"mtk1\">: } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">loadedFrom</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">: } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">loadedFrom</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">85</span><span class=\"mtk1\">: } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">loadedFrom</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:  } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">loadedFrom</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">118</span><span class=\"mtk1\">: } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">loadedFrom</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">140</span><span class=\"mtk1\">: } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">loadedFrom</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">143</span><span class=\"mtk1\">: } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">loadedFrom</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/delegatexyz/delegate-registry/blob/6d1254de793ccc40134f9bec0b7cb3d9c3632bc1/src/DelegateRegistry.sol#L75C9-L75C47\">https://github.com/delegatexyz/delegate-registry/blob/6d1254de793ccc40134f9bec0b7cb3d9c3632bc1/src/DelegateRegistry.sol#L75C9-L75C47</a></p>\n<h2 id=\"g-08-declare-the-variables-outside-the-loop\" style=\"position:relative;\"><a href=\"#g-08-declare-the-variables-outside-the-loop\" aria-label=\"g 08 declare the variables outside the loop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-08] Declare the variables outside the loop</h2>\n<p>Per iterations saves <code>26 GAS</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: delegate-registry/src/DelegateRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                 bytes32 location ;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                 address from ;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> for (uint256 i = 0; i &lt; hashes.length; ++i) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                 bytes32 location = Hashes.location(hashes[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                 address from = _loadFrom(location);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                location = Hashes.location(hashes[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                from = _loadFrom(location);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                if (_invalidFrom(from)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    delegations_[i] = Delegation({type_: DelegationType.NONE, to: address(0), from: address(0), rights: &quot;&quot;, amount: 0, contract_: address(0), tokenId: 0});</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    (, address to, address contract_) = _loadDelegationAddresses(location);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    delegations_[i] = Delegation({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        type_: Hashes.decodeType(hashes[i]),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        to: to,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        from: from,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        rights: _loadDelegationBytes32(location, Storage.POSITIONS_RIGHTS),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        amount: _loadDelegationUint(location, Storage.POSITIONS_AMOUNT),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        contract_: contract_,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        tokenId: _loadDelegationUint(location, Storage.POSITIONS_TOKEN_ID)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    });</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/78#issuecomment-1742654814\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Very good work with the first 2 findings!</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/78#issuecomment-1745886574\">0xfoobar (Delegate) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Useful findings on the gas stuff. Not sure the refactoring is worth the loss of struct ordering here but will think it over.</p>\n</blockquote>\n<hr>\n<h1 id=\"audit-analysis\" style=\"position:relative;\"><a href=\"#audit-analysis\" aria-label=\"audit analysis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Audit Analysis</h1>\n<p>For this audit, 4 analysis reports were submitted by wardens. An analysis report examines the codebase as a whole, providing observations and advice on such topics as architecture, mechanism, or approach. The <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/261\">report highlighted below</a> by <strong>pfapostol</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/305\">DadeKuma</a>, <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/384\">m4ttm</a>, and <a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/157\">Banditx0x</a>.</em></p>\n<h3 id=\"approach-taken-in-evaluating-the-codebase\" style=\"position:relative;\"><a href=\"#approach-taken-in-evaluating-the-codebase\" aria-label=\"approach taken in evaluating the codebase permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Approach taken in evaluating the codebase</h3>\n<p>I first explored the scope of audit. I discovered that the project can be divided into 2 independent parts: <code>Delegate Registry</code> and <code>Delegate Marketplace</code>. I carried out all subsequent stages separately for each of this parts, and then analyzed the correctness of their interaction.</p>\n<p><strong>Test coverage</strong></p>\n<p><code>Delegate Registry</code>:</p>\n<p>Test coverage is 100% for most audit files. In this regard, I decided to concentrate on finding logical errors, since simple errors (errors due to typos, incorrect statements) should be excluded by tests.</p>\n<table>\n<thead>\n<tr>\n<th>File</th>\n<th>% Lines</th>\n<th>% Statements</th>\n<th>% Branches</th>\n<th>% Funcs</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>src/DelegateRegistry.sol</td>\n<td>100.00% (175/175)</td>\n<td>100.00% (219/219)</td>\n<td>98.78% (81/82)</td>\n<td>100.00% (33/33)</td>\n</tr>\n<tr>\n<td>src/libraries/RegistryHashes.sol</td>\n<td>100.00% (12/12)</td>\n<td>100.00% (12/12)</td>\n<td>100.00% (0/0)</td>\n<td>100.00% (12/12)</td>\n</tr>\n<tr>\n<td>src/libraries/RegistryOps.sol</td>\n<td>66.67% (2/3)</td>\n<td>66.67% (2/3)</td>\n<td>100.00% (0/0)</td>\n<td>66.67% (2/3)</td>\n</tr>\n<tr>\n<td>src/libraries/RegistryStorage.sol</td>\n<td>100.00% (6/6)</td>\n<td>100.00% (6/6)</td>\n<td>100.00% (0/0)</td>\n<td>100.00% (3/3)</td>\n</tr>\n</tbody>\n</table>\n<p><code>Delegate Marketplace</code>:</p>\n<table>\n<thead>\n<tr>\n<th>File</th>\n<th>% Lines</th>\n<th>% Statements</th>\n<th>% Branches</th>\n<th>% Funcs</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>src/CreateOfferer.sol</td>\n<td>90.70% (39/43)</td>\n<td>92.00% (46/50)</td>\n<td>77.27% (17/22)</td>\n<td>100.00% (8/8)</td>\n</tr>\n<tr>\n<td>src/DelegateToken.sol</td>\n<td>88.55% (147/166)</td>\n<td>90.28% (195/216)</td>\n<td>80.43% (37/46)</td>\n<td>89.66% (26/29)</td>\n</tr>\n<tr>\n<td>src/PrincipalToken.sol</td>\n<td>100.00% (14/14)</td>\n<td>100.00% (17/17)</td>\n<td>100.00% (4/4)</td>\n<td>100.00% (5/5)</td>\n</tr>\n<tr>\n<td>src/libraries/CreateOffererLib.sol</td>\n<td>95.24% (40/42)</td>\n<td>95.38% (62/65)</td>\n<td>69.23% (18/26)</td>\n<td>100.00% (9/9)</td>\n</tr>\n<tr>\n<td>src/libraries/DelegateTokenLib.sol</td>\n<td>88.89% (8/9)</td>\n<td>90.48% (19/21)</td>\n<td>75.00% (6/8)</td>\n<td>100.00% (5/5)</td>\n</tr>\n<tr>\n<td>src/libraries/DelegateTokenRegistryHelpers.sol</td>\n<td>100.00% (57/57)</td>\n<td>100.00% (87/87)</td>\n<td>100.00% (26/26)</td>\n<td>100.00% (21/21)</td>\n</tr>\n<tr>\n<td>src/libraries/DelegateTokenStorageHelpers.sol</td>\n<td>91.67% (44/48)</td>\n<td>92.11% (70/76)</td>\n<td>80.77% (21/26)</td>\n<td>100.00% (21/21)</td>\n</tr>\n<tr>\n<td>src/libraries/DelegateTokenTransferHelpers.sol</td>\n<td>88.24% (30/34)</td>\n<td>87.80% (36/41)</td>\n<td>80.77% (21/26)</td>\n<td>100.00% (9/9)</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Code review</strong></p>\n<p>I studied the <code>Delegate Registry</code> code starting with the libraries, and also starting from the lowest level functions, moving to the top level functions. Having built a general understanding of what each of the functions does, I formed an idea of how the Registry works and built general diagrams.</p>\n<p><strong>Packed delegation data:</strong></p>\n<p><img src=\"https://user-images.githubusercontent.com/50257230/267004960-285bf761-0dd8-47bf-b3c2-84971c8b0ab4.jpg\" alt=\"2023-09-delegate-delegation-state.jpg\"></p>\n<p><strong>Important external interfaces:</strong></p>\n<ol>\n<li>delegateAll - Delegates the entire wallet</li>\n<li>delegateContract - Delegates the right to use the contract</li>\n<li>delegateERC721 - Delegates the right to use a specific contract token</li>\n<li>delegateERC20 - Delegates the right to use a certain amount of a token of a certain contract</li>\n<li>delegateERC1155 - Delegates the right to use a certain amount of a certain token of a certain contract</li>\n</ol>\n<p>There are also 5 functions to check the correctness of the delegation</p>\n<details>\n  <summary>Details on each function and hashing schemes</summary>\n  \n`RegistryOps` library:\n<ol>\n<li>\n<p>Contains 3 operation:</p>\n<ol>\n<li><code>max</code>: use optimized assembly logic to calculate max of 2 numbers</li>\n<li><code>and</code>: use 2x <code>iszero</code> to clean arguments before <code>and</code></li>\n<li><code>or</code>: use 2x <code>iszero</code> to clean arguments before <code>or</code></li>\n</ol>\n</li>\n</ol>\n<p><code>RegistryStorage</code> library:</p>\n<ol>\n<li>\n<p>Contains 10 constants:</p>\n<ol>\n<li>mostly offsets for packing/unpacking of addresses</li>\n</ol>\n</li>\n<li>\n<p>Contains 3 functions:</p>\n<ol>\n<li><code>packAddresses</code>: - store <code>from</code>, <code>to</code> and <code>contract</code> addresses in 2 storage slots</li>\n<li><code>unpackAddresses</code>: - reverse to <code>packAddresses</code> operation</li>\n<li><code>unpackAddress</code>: - helper to unpack <code>to</code> or <code>from</code>. Should not to be used for <code>contract</code> unwrapping</li>\n</ol>\n</li>\n</ol>\n<p><code>RegistryHashes</code> library:</p>\n<ol>\n<li>\n<p>Contains 7 constants:</p>\n<ol>\n<li>mostly types of hashes</li>\n</ol>\n</li>\n<li>\n<p>Contains 12 functions:</p>\n<ol>\n<li><code>decodeType</code>: - decode hash type from last byte into <code>enum</code>, (potentially may overflow <code>enum</code>)</li>\n<li>\n<p><code>location</code>: - calculate storage key from hash</p>\n<p><img src=\"https://user-images.githubusercontent.com/50257230/267005098-69e33a94-3981-4fe4-9132-bff4b01fe6d6.jpg\" alt=\"2023-09-delegate-location.jpg\"></p>\n</li>\n<li>\n<p><code>allHash</code>: - calculate hash for <code>all</code> type</p>\n<p><img src=\"https://user-images.githubusercontent.com/50257230/267005120-2c0f64f1-9956-4831-9aa5-94b5db62eae3.jpg\" alt=\"2023-09-delegate-all-hash.jpg\"></p>\n</li>\n<li>\n<p><code>allLocation</code>: - calculate location for <code>all</code> type hash</p>\n<p><img src=\"https://user-images.githubusercontent.com/50257230/267005108-f66df89c-bb88-4cfc-bd86-d2e207368f0a.jpg\" alt=\"2023-09-delegate-all-hash-location.jpg\"></p>\n</li>\n<li><code>contractHash</code> : - similar to <code>allHash</code></li>\n<li><code>contractLocation</code>: - similar to <code>allLocation</code></li>\n<li><code>erc721Hash</code>: - similar to <code>allHash</code></li>\n<li><code>erc721Location</code>: - similar to <code>allLocation</code></li>\n<li><code>erc20Hash</code>: - similar to <code>allHash</code></li>\n<li><code>erc20Location</code>: - similar to <code>allLocation</code></li>\n<li><code>erc1155Hash</code>: - similar to <code>allHash</code></li>\n<li><code>erc1155Location</code>: - similar to <code>allLocation</code></li>\n</ol>\n</li>\n</ol>\n<p><code>DelegateRegistry</code> contract:</p>\n<ol>\n<li>\n<p>contains 3 state variables:</p>\n<ol>\n<li><code>delegations</code></li>\n<li><code>outgoingDelegationHashes</code></li>\n<li><code>incomingDelegationHashes</code></li>\n</ol>\n</li>\n<li>\n<p>contains 33 functions:</p>\n<ol>\n<li><code>sweep</code>: - transfer all contract balance to hardcoded address (Currently 0x0)</li>\n<li><code>readSlot</code>: - perform <code>sload</code></li>\n<li><code>readSlots</code>: - perform <code>sload</code>s in loop</li>\n<li><code>_pushDelegationHashes</code>: - <em>push delegation hash to the incoming and outgoing hashes mappings</em></li>\n<li><code>_writeDelegation</code> x2 : - perform <code>sstore</code> for <code>data</code> at <code>position</code> in <code>location</code></li>\n<li><code>_updateFrom</code>: - change <code>from</code> value in first slot, while keeping first 8 bytes of <code>contract</code> intact</li>\n<li><code>_loadDelegationBytes32</code>: - perform <code>sload</code> at <code>position</code> in <code>location</code></li>\n<li><code>_loadDelegationUint</code>: - similar to <code>_loadDelegationBytes32</code></li>\n<li><code>multicall</code>: - payable multicall</li>\n<li><code>supportsInterface</code>: -</li>\n<li><code>_writeDelegationAddresses</code>: - <code>sstore</code> packed delegation at 0 and 1 slot in <code>location</code></li>\n<li><code>_loadFrom</code>: - <code>sload</code> <code>from</code> address from <code>location</code></li>\n<li><code>_loadDelegationAddresses</code>: - reverse to <code>_writeDelegationAddresses</code></li>\n<li><code>_invalidFrom</code>: - check if address is <em><code>DELEGATION_EMPTY</code> or <code>DELEGATION_REVOKED</code> flags(addresses)</em></li>\n<li><code>_validateFrom</code>: - match passed <code>from</code> to value in <code>location</code></li>\n<li><code>checkDelegateForAll</code>: - validate that <code>from</code> delegated <code>to</code> the entire wallet</li>\n<li><code>checkDelegateForContract</code>: - the same as <code>checkDelegateForContract</code> or delegated for specific <code>contract</code></li>\n<li><code>checkDelegateForERC721</code> : - the same as <code>checkDelegateForContract</code> or delegated for specific <code>tokenId</code> in specific <code>contract</code></li>\n<li><code>checkDelegateForERC20</code>: - return amount delegated <code>from</code> to <code>to</code> </li>\n<li><code>checkDelegateForERC1155</code> : - similar to <code>checkDelegateForERC20</code></li>\n<li><code>_getValidDelegationHashesFromHashes</code>: - remove invalid <code>from</code>s from hashes array</li>\n<li><code>getIncomingDelegationHashes</code>: - return only valid hashes from <code>incomingDelegationHashes</code></li>\n<li><code>getOutgoingDelegationHashes</code>: - the same as <code>getIncomingDelegationHashes</code>, but  with <code>outgoingDelegationHashes</code></li>\n<li><code>_getValidDelegationsFromHashes</code>: - read storage for every valid hash in memory <code>Delegation</code> struct</li>\n<li><code>getIncomingDelegations</code>: - return <code>Delegation</code> struct for only valid hashes from <code>incomingDelegationHashes</code></li>\n<li><code>getOutgoingDelegations</code>: - the same as <code>getIncomingDelegations</code>, but  with <code>outgoingDelegationHashes</code></li>\n<li><code>getDelegationsFromHashes</code>: - the same as <code>_getValidDelegationsFromHashes</code> but for invalid delegation return empty struct</li>\n<li>\n<p><code>delegateAll</code>: - <code>msg.sender</code> delegate the whole wallet to <code>from</code></p>\n<p><img src=\"https://user-images.githubusercontent.com/50257230/267005089-e7b3823d-d232-4180-91fd-2a94083b7d03.jpg\" alt=\"2023-09-delegate-delegate-all-flow.jpg\"></p>\n</li>\n<li><code>delegateContract</code>: - similar to <code>delegateAll</code>, but for specific <code>contract</code></li>\n<li><code>delegateERC721</code>: - similar to <code>delegateContract</code>, but for specific <code>tokenId</code></li>\n<li><code>delegateERC20</code>: - similar to <code>delegateContract</code>, but for <code>ERC20</code> token <code>amount</code> + allow to change <code>amount</code> if already delegated</li>\n<li><code>delegateERC1155</code>: - similar to <code>delegateERC20</code>, but for <code>ERC1155</code> (specific <code>tokenId</code>)</li>\n</ol>\n</li>\n</ol>\n</details>\n<p><code>Delegate Marketplace</code>:</p>\n<p><code>CreateOfferer</code> is a separate part of the marketplace that guarantees interaction with the seaport.</p>\n<p><strong>Important external interfaces:</strong></p>\n<ol>\n<li>create - Create <code>DelegateToken</code> and <code>PrincipalToken</code> tokens. Transfer one of token types to contract. Delegate to `delegateHolder<code></code>. mint principal token.</li>\n<li>extend - Extend the expiration time for an existing <code>DelegateToken</code>. Called by <code>PrincipalToken</code> owner.</li>\n<li>rescind - Return the <code>DelegateToken</code> to the <code>PrincipalToken</code> holder early. Called by <code>DelegateToken</code> holder or after the <code>DelegateToken</code> has expired, anyone can call this method. this does not release the spot asset from escrow, it merely cancels out the <code>DelegateToken</code>.</li>\n<li>withdraw - burn the <code>PrincipalToken</code> and claim the spot asset from escrow. Called by the <code>PrincipalToken</code> owner. <code>PrincipalToken</code> owner can authorize others to call this on their behalf, and if <code>PrincipalToken</code> owner also owns the <code>DelegateToken</code> then they can skip calling rescind and go straight to withdraw</li>\n</ol>\n<details>\n  <summary>Details for each function</summary>\n  \n### Delegate marketplace\n<p><code>DelegateTokenStorageHelpers</code> library:</p>\n<ol>\n<li>\n<p>Contains 10 constants:</p>\n<ol>\n<li>mostly flags and storage positions</li>\n</ol>\n</li>\n<li>\n<p>Contains 21 functions:</p>\n<ol>\n<li><code>writeApproved</code>: - store <code>approved</code> to <em>`PACKED<em>INFO</em>POSITION</em><code>while keeping</code>expiry` intact</li>\n<li><code>writeExpiry</code>: - store <code>expiry</code> to <em>`PACKED<em>INFO</em>POSITION</em><code>while keeping</code>approved` intact</li>\n<li><code>writeRegistryHash</code>: - store <code>registryHash</code> to <em><code>REGISTRY_HASH_POSITION</code></em></li>\n<li><code>writeUnderlyingAmount</code>: - store <code>underlyingAmount</code> to <em><code>UNDERLYING_AMOUNT_POSITION</code></em></li>\n<li><code>incrementBalance</code>: - increment <code>balance</code> for <code>delegateTokenHolder</code></li>\n<li><code>decrementBalance</code>: - decrement <code>balance</code> for <code>delegateTokenHolder</code></li>\n<li><code>principalIsCaller</code>: - revert if <code>msg.sender</code> is not <code>principalToken</code></li>\n<li><code>revertAlreadyExisted</code>: - revert if <code>registryHash</code> is not zero</li>\n<li><code>revertNotOperator</code>: - revert if not <code>operator</code> or “owner”</li>\n<li><code>readApproved</code>: - shift <em><code>PACKED_INFO_POSITION</code> to read <code>approved</code></em></li>\n<li><code>readExpiry</code>: - read <code>expiry</code> from <em><code>PACKED_INFO_POSITION</code></em> </li>\n<li><code>readRegistryHash</code>: - read <code>registryHash</code> from <em><code>REGISTRY_HASH_POSITION</code></em></li>\n<li><code>readUnderlyingAmount</code>: - read <code>underlyingAmount</code> from <em><code>UNDERLYING_AMOUNT_POSITION</code></em></li>\n<li><code>revertNotMinted</code>: - revert if <code>registryHash</code> is not set or used (<em><code>ID_AVAILABLE</code>, <code>ID_USED</code></em>)</li>\n<li><code>checkBurnAuthorized</code>: - revert if caller is not <code>principalToken</code> or delegate not authorized burn </li>\n<li><code>checkMintAuthorized</code>: - similar to <code>checkBurnAuthorized</code> but with mint</li>\n<li><code>revertNotApprovedOrOperator</code>: - revert if caller is not “owner” or <code>operator</code> or <code>approved</code> in token</li>\n<li><code>revertInvalidWithdrawalConditions</code>: - similar to <code>revertNotApprovedOrOperator</code> + check expiry</li>\n<li><code>burnPrincipal</code> : - call <code>burn</code> on <code>PrincipalToken</code> with custom reentrancy guard</li>\n<li><code>mintPrincipal</code>: - call <code>mint</code> on <code>PrincipalToken</code> with custom reentrancy guard</li>\n</ol>\n</li>\n</ol>\n<p><code>DelegateTokenRegistryHelpers</code> library:</p>\n<ol>\n<li>\n<p>Contains 21 functions:</p>\n<ol>\n<li><code>loadTokenHolder</code>: - read <code>to</code> from <code>delegateRegistry</code> at <code>location</code> from <code>registryHash</code>. Not revert on revoked!!!</li>\n<li><code>loadContract</code>: - read <code>contract</code> from <code>delegateRegistry</code> at <code>location</code> from <code>registryHash</code></li>\n<li><code>loadTokenHolderAndContract</code>: - read <code>to</code> and <code>contract</code> from <code>delegateRegistry</code> at <code>location</code> from <code>registryHash</code></li>\n<li><code>loadFrom</code>: - similar with <code>from</code></li>\n<li><code>loadAmount</code>: - similar with <code>amount</code></li>\n<li><code>loadRights</code>: - similar with <code>rights</code></li>\n<li><code>loadTokenId</code>: - similar with <code>tokenId</code></li>\n<li><code>calculateDecreasedAmount</code>: - return <code>amount</code> - <code>decreaseAmount</code>. No underflow check!!!</li>\n<li><code>calculateIncreasedAmount</code>: - similar to <code>calculateDecreasedAmount</code> ,but increased</li>\n<li><code>transferERC721</code>: - revoke delegation to <code>from</code> and delegate <code>to</code> while validating both hashes</li>\n<li><code>revokeERC721</code>: - revoke delegation and validate hash</li>\n<li><code>delegateERC721</code>: - delegate and validate hash</li>\n<li><code>revertERC721FlashUnavailable</code>: - revert if <code>contract</code> does not have <code>rights</code> for <code>flashloan</code> or <code>tokenId</code> itself</li>\n<li><code>revertERC20FlashAmountUnavailable</code>: - revert if delegation does not have enough <code>amount</code> with <code>“”</code> and <code>flashloan</code> <code>rights</code></li>\n<li><code>revertERC1155FlashAmountUnavailable</code>: - similar to <code>revertERC20FlashAmountUnavailable</code></li>\n<li><code>transferERC20</code>: - decrease <code>amount</code> from old delegation and increase for new</li>\n<li><code>transferERC1155</code>: - similar to <code>transferERC20</code></li>\n<li><code>incrementERC20</code>: - increase amount in delegation</li>\n<li><code>incrementERC1155</code>: - the same with <code>ERC1155</code></li>\n<li><code>decrementERC20</code>: - similar to <code>incrementERC20</code>, but decrease</li>\n<li><code>decrementERC1155</code>: - similar to <code>incrementERC1155</code>, but decrease</li>\n</ol>\n</li>\n</ol>\n<p><code>DelegateTokenTransferHelpers</code> library:</p>\n<ol>\n<li>\n<p>Contains 2 constants:</p>\n<ol>\n<li><code>ERC1155</code> callbacks</li>\n</ol>\n</li>\n<li>\n<p>Contains 9 functions:</p>\n<ol>\n<li><code>checkERC1155BeforePull</code> : - custom reentrancy guard + revert if amount == 0 </li>\n<li><code>checkERC1155Pulled</code>:- bottom part of custom reentrancy guard + require contract to be operator</li>\n<li><code>revertInvalidERC1155PullCheck</code>: - revert on <code>checkERC1155Pulled</code> condition</li>\n<li><code>pullERC1155AfterCheck</code>: - transfer <code>ERC1155</code> from <code>msg.sender</code> to contract revert if <em><code>ERC1155_PULLED</code></em></li>\n<li><code>checkERC20BeforePull</code>: - check that it is <code>ERC20</code> check that <code>amount</code> ≠ 0, check that there is enough <code>allowance</code></li>\n<li><code>pullERC20AfterCheck</code>: - transfer <code>ERC20</code> from <code>msg.sender</code> to contract</li>\n<li><code>checkERC721BeforePull</code>: - check that it is <code>ERC721</code>, check that owner is <code>msg.sender</code></li>\n<li><code>pullERC721AfterCheck</code>: - transfer <code>ERC721</code> from <code>msg.sender</code> to contract</li>\n<li><code>checkAndPullByType</code>: - transfer one of token types from <code>msg.sender</code> to contract</li>\n</ol>\n</li>\n</ol>\n<p><code>DelegateTokenHelpers</code> library:</p>\n<ol>\n<li>\n<p>Contains 5 functions:</p>\n<ol>\n<li><code>revertOnCallingInvalidFlashloan</code>: - revert if selector does not match</li>\n<li><code>revertOnInvalidERC721ReceiverCallback</code>: - the same</li>\n<li><code>revertOnInvalidERC721ReceiverCallback</code>: - the same</li>\n<li><code>revertOldExpiry</code>: - revert if <code>expiry</code> expired</li>\n<li><code>delegateIdNoRevert</code>: - hash <code>caller</code> and <code>salt</code></li>\n</ol>\n</li>\n</ol>\n<p><code>DelegateToken</code> contract:</p>\n<ol>\n<li>\n<p>Contains 29 functions:</p>\n<ol>\n<li><code>supportsInterface</code>: - supported interfaces</li>\n<li><code>onERC1155BatchReceived</code>: - revert </li>\n<li><code>onERC721Received</code>: - revert if contract is not <code>operator</code>, else return selector</li>\n<li><code>onERC1155Received</code>: - revert on custom reentrancy check fail else return selector</li>\n<li><code>balanceOf</code>: - get balance of <code>delegateTokenHolder</code> if not <code>address(0)</code></li>\n<li><code>ownerOf</code>: - return <code>to</code> from registry for specific <code>delegateTokenId</code></li>\n<li><code>getApproved</code>: - return <code>approved</code> address revert if not minted</li>\n<li><code>isApprovedForAll</code>: - return if  <code>accountOperator</code></li>\n<li><code>approve</code>: - store approved <code>spender</code>, revert if not minted or not operator</li>\n<li><code>setApprovalForAll</code>: - set <code>accountOperator</code></li>\n<li><code>name</code>: - constant</li>\n<li><code>symbol</code>: - constant</li>\n<li><code>transferFrom</code>: - transfer <code>delegateTokenId</code> with underlying token</li>\n<li><code>isApprovedOrOwner</code>: - check if it is <code>“owner\"</code>or <code>operator</code> or <code>approved</code></li>\n<li><code>getDelegateId</code>: - get <code>delegateTokenId</code> revert if not available</li>\n<li><code>burnAuthorizedCallback</code>: -  revert if caller is not <code>principalToken</code> or delegate not authorized burn </li>\n<li><code>mintAuthorizedCallback</code>: - similar</li>\n<li><code>create</code>: - transfer one of token types to contract. delegate to <code>delegateHolder</code>. mint principal token</li>\n<li><code>safeTransferFrom</code>: - call <code>transferFrom</code> and check selector callback</li>\n<li><code>getDelegateInfo</code>: - build and get <code>DelegateInfo</code> from <code>delegateTokenId</code></li>\n<li><code>extend</code>: - allow principal or operator  to increase <code>expiry</code> if old not expired</li>\n<li><code>rescind</code>: - allow delegate( or anyone after expiry) transfer <code>delegateTokenId</code> to principal</li>\n<li><code>tokenURI</code>: - call <code>MarketMetadata</code> for <code>delegateTokenURI</code></li>\n<li><code>baseURI</code>: -  call <code>MarketMetadata</code> for <code>delegateTokenBaseURI</code></li>\n<li><code>contractURI</code>: - call <code>MarketMetadata</code> for <code>delegateTokenContractURI</code></li>\n<li><code>royaltyInfo</code>: - similar</li>\n<li><code>withdraw</code>: - withdraw delegation, burn principal, transfer underlaying back to <code>msg.sender</code></li>\n<li><code>flashloan</code>: - flash-loan operation for all token types</li>\n</ol>\n</li>\n</ol>\n<p><code>PrincipalToken</code> contract:</p>\n<ol>\n<li>\n<p>Contains 5 functions:</p>\n<ol>\n<li><code>isApprovedOrOwner</code> : - Call <code>ERC721</code>  <code>_isApprovedOrOwner</code></li>\n<li><code>_checkDelegateTokenCaller</code>: - check caller is <code>delegateToken</code></li>\n<li><code>tokenURI</code>: - Call <code>MarketMetadata</code> for <code>principalTokenURI</code></li>\n<li><code>mint</code>: - mint. Called by <code>delegateToken</code> when authorized</li>\n<li><code>burn</code>: - burn. Called by <code>delegateToken</code> when authorized</li>\n</ol>\n</li>\n</ol>\n<p><code>CreateOffererModifiers</code> library:</p>\n<ol>\n<li>store <code>seaport</code> address and Stage</li>\n<li>\n<p>Contains 2 modifiers:</p>\n<ol>\n<li><code>onlySeaport</code>: - caller is <code>seaport</code></li>\n<li><code>checkStage</code>: - reentrancy check + stage change</li>\n</ol>\n</li>\n</ol>\n<p><code>CreateOffererHelpers</code> library:</p>\n<ol>\n<li>\n<p>Contains 9 functions:</p>\n<ol>\n<li><code>processNonce</code>: - check nonce and increment if correct</li>\n<li><code>updateTransientState</code>: - fulfill <code>TransientState</code> struct</li>\n<li><code>createAndValidateDelegateTokenId</code>: - Call <code>create</code> on <code>IDelegateToken</code>. And check correct <code>delegateId</code></li>\n<li><code>calculateExpiry</code>: - return absolute <code>expiry</code> for both types</li>\n<li><code>processSpentItems</code>: - build <code>offer</code> and <code>consideration</code> from <code>minimumReceived</code> and <code>maximumSpent</code></li>\n<li><code>calculateOrderHash</code>: - hash <code>order</code> with with <code>tokenType</code></li>\n<li><code>calculateOrderHashAndId</code>: - get <code>delegateTokenId</code> from <code>calculateOrderHash</code></li>\n<li><code>verifyCreate</code>: - match hash to context</li>\n<li><code>validateCreateOrderHash</code>: - match provided hash to actual</li>\n</ol>\n</li>\n</ol>\n<p><code>CreateOfferer</code> contract:</p>\n<ol>\n<li>Seaport iteraction</li>\n</ol>\n</details>\n<h3 id=\"mechanism-review\" style=\"position:relative;\"><a href=\"#mechanism-review\" aria-label=\"mechanism review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mechanism review</h3>\n<p>The contract consists of 2 parts, one part is a storage of delegation hashes, and the other part is ERC721 compatible tokens that reflect the ownership of the delegation.</p>\n<p><code>Delegate Registry</code>: uses hashing to compactly store the delegation. And also hash functions for calculating a unique location in storage. It also contains functions that check the hash based on the location and <code>from</code> address.</p>\n<p><code>Delegate Token</code>: Deposits all assets, in return issues an ERC721 token, which confirms the ownership of the delegation, for a certain period of time.</p>\n<p><code>PrincipalToken</code>: Depends on <code>Delegate Token</code>, cannot be called on its own. It is an ERC721 token that confirms the right to claim deposited assets after expiration.</p>\n<p><code>CreateOfferer</code>: Integration with seaport as specified in <a href=\"https://github.com/ProjectOpenSea/seaport/blob/main/docs/SeaportDocumentation.md#contract-orders\">documentation</a>. When selling, the asset turns into a <code>Delegate Token</code> and is assigned to the buyer, the seller receives a <code>PrincipalToken</code>.</p>\n<p><code>Delegate Token</code> in its work relies entirely on <code>Delegate Registry</code>, which must reliably guarantee the authenticity and confirmation of the delegation.</p>\n<h3 id=\"codebase-quality-analysis\" style=\"position:relative;\"><a href=\"#codebase-quality-analysis\" aria-label=\"codebase quality analysis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Codebase quality analysis</h3>\n<p>In general, the quality of the code base is quite high. The huge number of comments in NatSpec makes it very easy to determine what a particular function is intended for.</p>\n<p>The downside is the use of assembler for gas optimization, which is not comparable to the damage it causes to code readability.</p>\n<h3 id=\"centralization-risks\" style=\"position:relative;\"><a href=\"#centralization-risks\" aria-label=\"centralization risks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Centralization risks</h3>\n<p>There is no risk of centralization since all rights are divided between the <code>Delegate Token</code> and the <code>PrincipalToken</code>. The only exception is <code>CreateOfferer</code>, which relies on the <code>seaport</code> address, which is immutable, but it is possible that the contract address will change in the future, it would be useful to add a function that allows you to change the address if necessary</p>\n<h3 id=\"systemic-risks\" style=\"position:relative;\"><a href=\"#systemic-risks\" aria-label=\"systemic risks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Systemic risks</h3>\n<p>The contract is used to delegate all types of tokens (<code>ERC20</code>, <code>ERC721</code>, <code>ERC1155</code>), but does not take into account that some tokens do not follow the standards.</p>\n<p>Contracts are programmed for version ^0.8.21, by default the compiler will use version 0.8.21, which is very recent and may contain undetected vulnerabilities, as well as compatibility problems with different L2 chains.</p>\n<h3 id=\"new-insights-and-learning-from-this-audit\" style=\"position:relative;\"><a href=\"#new-insights-and-learning-from-this-audit\" aria-label=\"new insights and learning from this audit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>New insights and learning from this audit</h3>\n<p>I learned about <code>CreateOfferer</code> seaport integration, all other concepts were well known to me.</p>\n<p><strong>Time spent</strong><br>\n33 hours</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-09-delegate-findings/issues/261#issuecomment-1732610672\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Imo proper way to discuss coverage<br>\n+<br>\nInteresting charts for packing and logic on delegation</p>\n</blockquote>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Audits incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Audit submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#medium-risk-findings-2\">Medium Risk Findings (2)</a></p>\n<ul>\n<li><a href=\"#m-01-no-way-to-revoke-approval-in-delegatetokenapprove-leads-to-unauthorized-calling-of-delegatetokentransferfrom\">[M-01] No way to revoke Approval in <code>DelegateToken.approve</code> leads to unauthorized calling of <code>DelegateToken.transferFrom</code></a></li>\n<li><a href=\"#m-02-createofferersol-should-not-enforce-the-nonce-incremented-sequentially-otherwise-user-can-dos-the-contract-by-skipping-order\">[M-02] <code>CreateOfferer.sol</code> should not enforce the nonce incremented sequentially, otherwise user can DOS the contract by skipping order</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#01-previeworder-should-not-revert\">01 <code>previewOrder</code> should not revert</a></li>\n<li><a href=\"#02-withdraw-should-revert-with-non-supported-delegationtype\">02 Withdraw should revert with non-supported <code>delegationType</code></a></li>\n<li><a href=\"#03-lack-of-data-on-flashloan-could-make-some-erc1155-unusable\">03 Lack of <code>data</code> on flashloan could make some ERC1155 unusable</a></li>\n<li><a href=\"#04-using-delegatecall-inside-a-loop-may-cause-issues-with-payable-functions\">04 Using <code>delegatecall</code> inside a loop may cause issues with <code>payable</code> functions</a></li>\n<li><a href=\"#05-createofferer-uses-a-custom-context-implementation-instead-of-an-existing-sip\">05 <code>CreateOfferer</code> uses a custom context implementation instead of an existing SIP</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#g-01-structs-can-be-packed-into-fewer-storage-slots\">G-01 Structs can be packed into fewer storage slots</a></li>\n<li><a href=\"#g-02-remove-or-replace-unused-state-variables\">G-02 Remove or replace unused state variables</a></li>\n<li><a href=\"#g-03-state-variables-should-be-cached\">G-03 State variables should be cached</a></li>\n<li><a href=\"#g-04-use-assembly-for-loops-to-save-gas\">G-04 Use assembly for loops to save gas</a></li>\n<li><a href=\"#g-05-dont-initialize-default-values-to-variables-to-reduce-gas\">G-05 Don’t initialize default values to variables to reduce gas</a></li>\n<li><a href=\"#g-06-use-constants-instead-of-typeuintxmax-to-avoid-calculating-every-time\">G-06 Use constants instead of type(uintX).max to avoid calculating every time</a></li>\n<li><a href=\"#g-07-for-same-condition-checks-use-modifiers\">G-07 For same condition checks use modifiers</a></li>\n<li><a href=\"#g-08-declare-the-variables-outside-the-loop\">G-08 Declare the variables outside the loop</a></li>\n</ul>\n</li>\n<li><a href=\"#audit-analysis\">Audit Analysis</a></li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}