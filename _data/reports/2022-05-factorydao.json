{
  "circa": {
    "title": "FactoryDAO contest",
    "sponsor": "FactoryDAO",
    "slug": "2022-05-factorydao",
    "date": "2022-08-02",
    "findings": "https://github.com/code-423n4/2022-05-factorydao-findings/issues",
    "contest": 119
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the FactoryDAO smart contract system written in Solidity. The audit contest took place between May 4—May 8 2022.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>81 Wardens contributed reports to the FactoryDAO contest:</p>\n<ol>\n<li>IllIllI</li>\n<li>AuditsAreUS</li>\n<li><a href=\"https://twitter.com/KenzoAgada\">kenzo</a></li>\n<li>unforgiven</li>\n<li><a href=\"https://twitter.com/0xhyh\">hyh</a></li>\n<li><a href=\"https://twitter.com/father0fBl0cks\">fatherOfBlocks</a></li>\n<li><a href=\"https://twitter.com/danbinnun\">danb</a></li>\n<li><a href=\"https://twitter.com/WatchPug_\">WatchPug</a> (<a href=\"https://github.com/jack-the-pug\">jtp</a> and <a href=\"https://github.com/mingwatch\">ming</a>)</li>\n<li><a href=\"https://twitter.com/Pedroais2/\">pedroais</a></li>\n<li>horsefacts</li>\n<li><a href=\"https://twitter.com/0xleastwood\">leastwood</a></li>\n<li>reassor</li>\n<li><a href=\"https://twitter.com/HickupH\">hickuphh3</a></li>\n<li><a href=\"https://twitter.com/gzeon\">gzeon</a></li>\n<li><a href=\"https://twitter.com/thePicodes\">Picodes</a></li>\n<li>GimelSec (<a href=\"https://twitter.com/rayn731\">rayn</a> and sces60107)</li>\n<li>0xf15ers (remora and twojoy)</li>\n<li>PPrieditis</li>\n<li><a href=\"https://www.linkedin.com/in/saxena-rahul/\">0xYamiDancho</a></li>\n<li>0x52</li>\n<li>scaraven</li>\n<li><a href=\"https://twitter.com/JustDravee\">Dravee</a></li>\n<li><a href=\"https://twitter.com/defsec_\">defsec</a></li>\n<li>robee</li>\n<li>VAD37</li>\n<li><a href=\"https://twitter.com/rajat_beladiya\">rajatbeladiya</a></li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li>sorrynotsorry</li>\n<li>hubble (ksk2345 and shri4net)</li>\n<li><a href=\"https://twitter.com/shenwilly_\">shenwilly</a></li>\n<li>eccentricexit</li>\n<li><a href=\"https://www.instagram.com/riyan_rfa/\">rfa</a></li>\n<li><a href=\"https://twitter.com/JoeStakey\">joestakey</a></li>\n<li>oyc_109</li>\n<li><a href=\"https://twitter.com/MaratCerby\">MaratCerby</a></li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li>0x1f8b</li>\n<li>samruna</li>\n<li>TerrierLover</li>\n<li>ilan</li>\n<li><a href=\"https://twitter.com/berndartmueller\">berndartmueller</a></li>\n<li><a href=\"https://twitter.com/ellahinator\">ellahi</a></li>\n<li><a href=\"https://twitter.com/hansfriese\">hansfriese</a></li>\n<li>0xkatana</li>\n<li><a href=\"https://Twitter.com/roinevirta\">juicy</a></li>\n<li><a href=\"https://instagram.com/vanensurya\">Funen</a></li>\n<li>simon135</li>\n<li>Hawkeye (0xwags and 0xmint)</li>\n<li>delfin454000</li>\n<li>ACai</li>\n<li><a href=\"https://www.linkedin.com/in/yahia-chaabane/\">ych18</a></li>\n<li><a href=\"https://twitter.com/Throt7le\">throttle</a></li>\n<li>kebabsec (okkothejawa and <a href=\"https://twitter.com/FlameHorizon1\">FlameHorizon</a>)</li>\n<li>AlleyCat</li>\n<li>Bruhhh</li>\n<li>cccz</li>\n<li><a href=\"https://twitter.com/CertoraInc\">CertoraInc</a> (egjlmn1, <a href=\"https://twitter.com/ori_dabush\">OriDabush</a>, ItayG, and shakedwinder)</li>\n<li><a href=\"https://twitter.com/0xNazgul\">0xNazgul</a></li>\n<li><a href=\"https://github.com/z3s/\">z3s</a></li>\n<li><a href=\"https://twitter.com/meidhiwirara\">Tomio</a></li>\n<li>Waze</li>\n<li>minhquanym</li>\n<li><a href=\"https://twitter.com/wuwe19\">wuwe1</a></li>\n<li><a href=\"https://twitter.com/0xbroccolirob\">broccolirob</a></li>\n<li>cryptphi</li>\n<li>peritoflores</li>\n<li>0x1337</li>\n<li>jayjonah8</li>\n<li>mtz</li>\n<li>p4st13r4 (<a href=\"https://github.com/0x69e8\">0x69e8</a> and 0xb4bb4)</li>\n<li>TrungOre</li>\n</ol>\n<p>This contest was judged by <a href=\"https://github.com/gititGoro\">Justin Goro</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/itsmetechjay\">itsmetechjay</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 24 unique vulnerabilities. Of these vulnerabilities, 3 received a risk rating in the category of HIGH severity and 21 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 43 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 40 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2022-05-factorydao\">C4 FactoryDAO contest repository</a>, and is composed of 10 smart contracts written in the Solidity programming language and includes 812 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-3\" style=\"position:relative;\"><a href=\"#high-risk-findings-3\" aria-label=\"high risk findings 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (3)</h1>\n<h2 id=\"h-01-speedbumppricegate-excess-ether-did-not-return-to-the-user\" style=\"position:relative;\"><a href=\"#h-01-speedbumppricegate-excess-ether-did-not-return-to-the-user\" aria-label=\"h 01 speedbumppricegate excess ether did not return to the user permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/48\">[H-01] SpeedBumpPriceGate: Excess ether did not return to the user</a></h2>\n<p><em>Submitted by cccz, also found by 0x52, 0xYamiDancho, csanuragjain, GimelSec, gzeon, hickuphh3, horsefacts, hyh, IllIllI, kenzo, leastwood, PPrieditis, reassor, unforgiven, WatchPug, and danb</em></p>\n<p>The <code>passThruGate</code> function of the <code>SpeedBumpPriceGate</code> contract is used to charge NFT purchase fees.\nSince the price of NFT will change due to the previous purchase, users are likely to send more ether than the actual purchase price in order to ensure that they can purchase NFT. However, the passThruGate function did not return the excess ether, which would cause asset loss to the user.\nConsider the following scenario:</p>\n<ol>\n<li>An NFT is sold for 0.15 eth</li>\n<li>User A believes that the value of the NFT is acceptable within 0.3 eth, considering that someone may buy the NFT before him, so user A transfers 0.3 eth to buy the NFT</li>\n<li>When user A’s transaction is executed, the price of the NFT is 0.15 eth, but since the contract does not return excess eth, user A actually spends 0.3 eth.</li>\n</ol>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/SpeedBumpPriceGate.sol#L65-L82\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/SpeedBumpPriceGate.sol#L65-L82</a></p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">-   function passThruGate(uint index, address) override external payable {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+  function passThruGate(uint index, address payer) override external payable {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint price = getCost(index);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(msg.value &gt;= price, &#39;Please send more ETH&#39;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // bump up the price</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Gate storage gate = gates[index];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // multiply by the price increase factor</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        gate.lastPrice = (price * gate.priceIncreaseFactor) / gate.priceIncreaseDenominator;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // move up the reference</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        gate.lastPurchaseBlock = block.number;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // pass thru the ether</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (msg.value &gt; 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            // use .call so we can send to contracts, for example gnosis safe, re-entrance is not a threat here</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">-           (bool sent, bytes memory data) = gate.beneficiary.call{value: msg.value}(&quot;&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+          (bool sent, bytes memory data) = gate.beneficiary.call{value: price}(&quot;&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            require(sent, &#39;ETH transfer failed&#39;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      if (msg.value - price &gt; 0){ </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+         (bool sent, bytes memory data) = payer.call{value: msg.value - price}(&quot;&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+          require(sent, &#39;ETH transfer failed&#39;);}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/48#issuecomment-1122005082\">illuzen (FactoryDAO) confirmed, but disagreed with severity</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/48#issuecomment-1145528979\">illuzen (FactoryDAO) resolved</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/pull/4\">https://github.com/code-423n4/2022-05-factorydao/pull/4</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/48#issuecomment-1154647062\">Justin Goro (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Maintaining severity as user funds are lost.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-02-dos-blacklisted-user-may-prevent-withdrawexcessrewards\" style=\"position:relative;\"><a href=\"#h-02-dos-blacklisted-user-may-prevent-withdrawexcessrewards\" aria-label=\"h 02 dos blacklisted user may prevent withdrawexcessrewards permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/57\">[H-02] DoS: Blacklisted user may prevent <code>withdrawExcessRewards()</code></a></h2>\n<p><em>Submitted by AuditsAreUS</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L242-L256\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L242-L256</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L224-L234\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L224-L234</a></p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>If one user becomes blacklisted or otherwise cannot be transferred funds in any of the rewards tokens or the deposit token then they will not be able to call <code>withdraw()</code> for that token.</p>\n<p>The impact of one user not being able to call <code>withdraw()</code> is that the owner will now never be able to call <code>withdrawExcessRewards()</code> and therefore lock not only the users rewards and deposit but also and excess rewards attributed to the owner.</p>\n<p>Thus, one malicious user may deliberately get them selves blacklisted to prevent the owner from claiming the final rewards. Since the attacker may do this with negligible balance in their <code>deposit()</code> this attack is very cheap.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>It is possible for <code>IERC20(pool.rewardTokens[i]).transfer(receipt.owner, transferAmount);</code> to fail for numerous reasons. Such as if a user has been blacklisted (in certain ERC20 tokens) or if a token is paused or there is an attack and the token is stuck.</p>\n<p>This will prevent <code>withdraw()</code> from being called.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardsWeiClaimed</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardFunding</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] -= </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tax</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">taxPerCapita</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]) / </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">transferAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] - </span><span class=\"mtk12\">tax</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">taxes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">tax</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">transferAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">depositToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amountDepositedWei</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Token transfer failed&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Since line 245 of <code>withdrawExcessRewards()</code> requires that <code>require(pool.totalDepositsWei == 0, 'Cannot withdraw until all deposits are withdrawn');</code>, if one single user is unable to withdraw then it is impossible for the owner to claim the excess rewards and they are forever stuck in the contract.</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider allowing <code>withdrawExcessRewards()</code> to be called after a set period of time after the pool end if most users have withdrawn or some similar criteria.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/57#issuecomment-1122022055\">illuzen (FactoryDAO) confirmed, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Kind of a duplicate, but I like this angle better. However, malicious token contracts are explicitly considered in the contract as an acceptable risk. Will probably just wrap transfers in a try catch</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/57#issuecomment-1145530196\">illuzen (FactoryDAO) resolved</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/pull/2\">https://github.com/code-423n4/2022-05-factorydao/pull/2</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/57#issuecomment-1154659729\">Justin Goro (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Maintaining severity as deposit tokens at risk.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-03-merklevesting-withdrawal-does-not-verify-that-tokens-were-transferred-successfully\" style=\"position:relative;\"><a href=\"#h-03-merklevesting-withdrawal-does-not-verify-that-tokens-were-transferred-successfully\" aria-label=\"h 03 merklevesting withdrawal does not verify that tokens were transferred successfully permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/130\">[H-03] MerkleVesting withdrawal does not verify that tokens were transferred successfully</a></h2>\n<p><em>Submitted by kenzo, also found by IllIllI</em></p>\n<p>Across the codebase, the protocol is usually checking that ERC20 transfers have succeeded by checking their return value.\nThis check is missing in MerkleVesting’s <code>withdraw</code> function.</p>\n<h3 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>If for some reason the ERC20 transfer is temporarily failing, the user would totally lose his allocation and funds.\nAll the state variables would already have been updated at this stage, so he can’t call <code>withdraw</code> again.\nThere is no way to withdraw these locked tokens.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>At the last point of <code>withdraw</code>, the function <a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/main/contracts/MerkleVesting.sol#L173\">is sending</a> the funds to the user, and does not check the return value - whether it has succeeded:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        IERC20(tree.tokenAddress).transfer(destination, currentWithdrawal);</span></span></code></pre>\n<p>Note that this is (nicely and rightfully) done after all the state variables have been updated.\nAs the return value of the external call is not checked, if it has failed, the contract wouldn’t know about it, and the function will finish “successfully”.</p>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>As done throughout the rest of the protocol, add a check that verifies that the transfer has succeeded.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/130#issuecomment-1122570209\">illuzen (FactoryDAO) acknowledged, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Debatable, since requiring successful transfer means we can’t do non-standard tokens like USDT. Also, tokens could be malicious and simply lie about the success.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/130#issuecomment-1155855225\">Justin Goro (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Regarding the non standard tokens that don’t return bools, the common approach to performing a low level call with </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">(bool success, _)  = address(token).call(//etc</span></span></code></pre>\n<p>allows for transfers to be validated for USDT.</p>\n<p>Severity will stand because this function represents user funds.</p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-21\" style=\"position:relative;\"><a href=\"#medium-risk-findings-21\" aria-label=\"medium risk findings 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (21)</h1>\n<h2 id=\"m-01-speedbumppricegatesoladdgate-lack-of-input-validation-may-casue-div-by-0-error\" style=\"position:relative;\"><a href=\"#m-01-speedbumppricegatesoladdgate-lack-of-input-validation-may-casue-div-by-0-error\" aria-label=\"m 01 speedbumppricegatesoladdgate lack of input validation may casue div by 0 error permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/153\">[M-01] <code>SpeedBumpPriceGate.sol#addGate()</code> Lack of input validation may casue div by 0 error</a></h2>\n<p><em>Submitted by WatchPug</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/SpeedBumpPriceGate.sol#L43\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/SpeedBumpPriceGate.sol#L43</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">priceIncreaseDenominator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">priceIncreaseDenominator</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>If <code>priceIncreaseDenominator</code> is set to <code>0</code> when <code>addGate()</code>, in <code>passThruGate()</code> the tx will revert at L72 because of div by 0.</p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/SpeedBumpPriceGate.sol#L71-L72\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/SpeedBumpPriceGate.sol#L71-L72</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// multiply by the price increase factor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastPrice</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">price</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">priceIncreaseFactor</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">priceIncreaseDenominator</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h3 id=\"recommendation\" style=\"position:relative;\"><a href=\"#recommendation\" aria-label=\"recommendation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Consider adding a check in <code>addGate()</code> to require <code>priceIncreaseDenominator > 0</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/153#issuecomment-1123458383\">illuzen (FactoryDAO) acknowledged, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>This is fine, we just add another gate, redeploy the tree and only harm done is we lost some gas.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/153#issuecomment-1158431030\">Justin Goro (judge) commented</a>:</strong></p>\n<blockquote>\n<p>While value is not leaked in this instance, this can cause functionality to be interrupted until fixed. Severity of issue will be maintained.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-malicious-token-reward-could-disable-withdrawals\" style=\"position:relative;\"><a href=\"#m-02-malicious-token-reward-could-disable-withdrawals\" aria-label=\"m 02 malicious token reward could disable withdrawals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/20\">[M-02] Malicious token reward could disable withdrawals</a></h2>\n<p><em>Submitted by shenwilly, also found by 0xYamiDancho, hickuphh3, hubble, kenzo, and leastwood</em></p>\n<p><code>PermissionlessBasicPoolFactory.withdraw</code> requires each reward token transfers to succeed before withdrawing the deposit. If one of the reward token is a malicious/pausable contract that reverts on transfer, unaware users that deposited into this pool will have their funds stuck in the contract.</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add an <code>emergencyWithdraw</code> function that ignores failed reward token transfers.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/20#issuecomment-1121973616\">illuzen (FactoryDAO) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>This is explicitly acknowledged in the contract comments, malicious reward tokens render the pool malicious, there is no way to get around that, but the emergencyWithdraw idea is good</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/20#issuecomment-1123225361\">illuzen (FactoryDAO) commented</a>:</strong></p>\n<blockquote>\n<p>Technically duplicate, but mitigation is better here.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/20#issuecomment-1145529907\">illuzen (FactoryDAO) resolved</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/pull/2\">https://github.com/code-423n4/2022-05-factorydao/pull/2</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/20#issuecomment-1160012500\">ksk2345  (warden) commented</a>:</strong></p>\n<blockquote>\n<ol>\n<li>User Funds are at loss so severity of this issue is High. Please check the descriptions in the duplicate  IssueIDs : #191, #145, and #106 (marked wrongly as dup of M13)</li>\n<li>IssueId #192 and #246 are wrongly marked as dup of M02. The root cause is malicious rewardToken, but the impact is different than that of M02, and also the code fix for the impact will be different. M02 talks of impact on loss of user deposits and the fix will be in withdraw function. While these two Issues impact on globalBeneficiary not able to withdraw rewards, the fix will be in withdrawTaxes() function. Hence, these two issues needs to be separated into a New Medium Issue.</li>\n</ol>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/20#issuecomment-1163884936\">Justin Goro (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@ksk2345 - I really do sympathize with your point of view. I think you made two good points.\nHere’s the thing, though: When assessing these issues, it’s very important to take sponsor’s intent into account. That’s what makes humans necessary in C4 (for now). Sufficiently powerful software can form a graph of vulnerabilities and draw inferences. Our job is to figure out if these vulnerabilities matter and to what extent.</p>\n<p>First to the broader point of linking duplicates, whether blocking users or taxes, the vector is via a malicious pool creator in the form of a reward token. The reason this matters is because the Factorydao pools can be permissionlessly created and completely ignored by users. They are analogous to Uniswap pools. Sure, someone could create a malicious token pair in Uniswap but since all pairs are opt-in and can be routed around, the use of this pair requires explicit consent from the end user.</p>\n<p>If we bear in mind that end user involvement is consensual and that this is communicated to the users and that nothing can be hidden on Ethereum then it follows that we can umbrella these issues not as malicious tokens or withdrawal and tax vulnerabilities but pool creators trying to game the code while relying on social engineering to funnel unsuspecting users through these channels (scam).</p>\n<p><strong>digression on duplicates</strong><br>\nOn a broader issue of duplicates, I notice a similar theme arising when duplicate labels are challenged so I’d just like to clarify how I grouped duplicates:</p>\n<p>For most of the duplicate disputes, it was “the issue reported the same but the fix was different.” If the issue is invalid, however, then the fix is kind of irrelevant which is why I grouped those all as the same issue. If the issue is the same but the fixes different, then I grouped them if the fixes were qualitatively similar. If there was one amongst them that provided the best fix, this would be the original in the set. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-safetransferfrom-is-recommended-instead-of-transfer-1\" style=\"position:relative;\"><a href=\"#m-03-safetransferfrom-is-recommended-instead-of-transfer-1\" aria-label=\"m 03 safetransferfrom is recommended instead of transfer 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/22\">[M-03] safeTransferFrom is recommended instead of transfer (1)</a></h2>\n<p><em>Submitted by MaratCerby, also found by berndartmueller, broccolirob, CertoraInc, cryptphi, danb, gzeon, horsefacts, hyh, joestakey, leastwood, throttle, VAD37, wuwe1, and z3s</em></p>\n<p>ERC20 standard allows transferF function of some contracts to return bool or return nothing.<br>\nSome tokens such as USDT return nothing.<br>\nThis could lead to funds stuck in the contract without possibility to retrieve them.<br>\nUsing safeTransferFrom of SafeERC20.sol is recommended instead.<br></p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/4a9cc8b4918ef3736229a5cc5a310bdc17bf759f/contracts/token/ERC20/utils/SafeERC20.sol\">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/4a9cc8b4918ef3736229a5cc5a310bdc17bf759f/contracts/token/ERC20/utils/SafeERC20.sol</a></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/22#issuecomment-1121974704\">illuzen (FactoryDAO) commented</a>:</strong></p>\n<blockquote>\n<p>We support ERC20 contracts, not SafeERC20. Contracts that do not conform to the standard are not supported.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/22#issuecomment-1145530282\">illuzen (FactoryDAO) confirmed and resolved</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/pull/2\">https://github.com/code-423n4/2022-05-factorydao/pull/2</a></p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-merkle-leaves-are-the-same-length-as-the-parents-that-are-hashed\" style=\"position:relative;\"><a href=\"#m-04-merkle-leaves-are-the-same-length-as-the-parents-that-are-hashed\" aria-label=\"m 04 merkle leaves are the same length as the parents that are hashed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/58\">[M-04] Merkle leaves are the same length as the parents that are hashed</a></h2>\n<p><em>Submitted by AuditsAreUS</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleLib.sol#L36-L42\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleLib.sol#L36-L42</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleDropFactory.sol#L94\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleDropFactory.sol#L94</a></p>\n<h3 id=\"impact-2\" style=\"position:relative;\"><a href=\"#impact-2\" aria-label=\"impact 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The size of a <code>leaf</code> is the same size of the parent data that is hashed, both are 64 bytes. As a result it is possible to have a hash collision between a leaf and any node in the tree. This allows for proofs to be repeated multiple times by taking subtrees as leaves.</p>\n<p>Fraudulent proofs will disrupt the airdrop and transfer funds to invalid addresses.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>For example consider the following binary tree which has 4 leaves d,e,f,g</p>\n<p>a->b<br>\na->c<br></p>\n<p>b->d<br>\nb->e<br></p>\n<p>c->f<br>\nc->g<br></p>\n<p>To calculate the parent hash for c it is <code>keccak(f || g)</code> and the parent hash for a is <code>keccak(b || c)</code> as seen in the <code>parentHash()</code> function below.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">parentHash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">a</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">b</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk12\">b</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">b</span><span class=\"mtk1\">, </span><span class=\"mtk12\">a</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>A leaf is calculated as</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">leaf</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">destination</span><span class=\"mtk1\">, </span><span class=\"mtk12\">value</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p><code>abi.encode(address,uint)</code> will output 64 bytes. Since <code>abi.encode(bytes32,bytes32)</code> will also be 64 bytes it is possible to have a hash collision between a leaf and a parent node.</p>\n<p>Taking the example above if we now set <code>destination = keccak(e || d)</code> and <code>value = keccak(f || g)</code> and provide the proof as an empty array since we are already at <code>a</code>, the root <code>[]</code>. This proof will verify for <code>destination</code> and <code>value</code> set to the hash of each child node.</p>\n<p>This issue is rated as medium as there are some drawbacks to the attack that will make it challenging to pull off in practice. The first is that <code>destination</code> is a 20 bytes address and thus will require the node in the tree to have 12 leading zero bytes which may not occur. Second is the <code>value</code> is transferred to the user and so it is likely that the balance of the contract will not be sufficient for this transfer to succeed.</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider using <code>leaf = keccak(abi.encodePacked(destination, value))</code> in <code>withdraw()</code> as this will reduce the size of the leaf data being hashed to 52 bytes.</p>\n<p>Since <code>keccak256</code> prevents length extension attacks a different length of data to be hashed can be assumed to give different hashes and prevent a collision between a leaf and other nodes in the tree.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/58#issuecomment-1122034825\">illuzen (FactoryDAO) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>Valid. Interesting attack, but even if it is successful, it will transfer tokens to what is almost certainly an unusable address, making this both very unlikely (due to issues you mentioned) and of zero benefit to the attacker (griefing). 12 sequential zero bytes would occur approximately 1 out of every 16^12 = 281474976710656 nodes.</p>\n<p>I recommend bonus points for this one.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/58#issuecomment-1154660758\">Justin Goro (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Very impressive analysis.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-05-merkledropfactorydeposittokens--does-not-require-the-tree-to-exist\" style=\"position:relative;\"><a href=\"#m-05-merkledropfactorydeposittokens--does-not-require-the-tree-to-exist\" aria-label=\"m 05 merkledropfactorydeposittokens  does not require the tree to exist permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/59\">[M-05] <code>MerkleDropFactory.depositTokens()</code>  does not require the tree to exist</a></h2>\n<p><em>Submitted by AuditsAreUS</em></p>\n<p>The function <code>depositTokens()</code> does not first check to ensure that the <code>treeIndex</code> exists.</p>\n<p>The impact is that we will attempt to transfer from the zero address to this address. If the transfer succeeds (which it currently does not since we use <code>IERC20.transferFrom()</code>)  then the <code>tokenBalance</code> of this index will be increased.</p>\n<p>This will be an issue if the contract is updated to use OpenZeppelin’s <code>safeTransferFrom()</code> function. This update may be necessary to support non-standard ERC20 tokens such as USDT.</p>\n<p>If the update is made then <code>merkleTree.tokenAddress.safeTransferFrom(msg.sender, address(this), value), \"ERC20 transfer failed\");</code> will succeed if <code>merkleTree.tokenAddress = address(0)</code> since <code>safeTransferFrom()</code> succeeds against the zero address.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>There are no checks the <code>treeIndex</code> is  valid.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">depositTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">treeIndex</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// storage since we are editing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">MerkleTree</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">merkleTree</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">merkleTrees</span><span class=\"mtk1\">[</span><span class=\"mtk12\">treeIndex</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// bookkeeping to make sure trees don&#39;t share tokens</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">merkleTree</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenBalance</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">value</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// transfer tokens, if this is a malicious token, then this whole tree is malicious</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// but it does not effect the other trees</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">merkleTree</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">value</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERC20 transfer failed&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TokensDeposited</span><span class=\"mtk1\">(</span><span class=\"mtk12\">treeIndex</span><span class=\"mtk1\">, </span><span class=\"mtk12\">merkleTree</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">value</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider adding the check to ensure <code>0 &#x3C; treeIndex &#x3C;= numTrees</code> in <code>depositTokens()</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/59#issuecomment-1122037126\">illuzen (FactoryDAO) acknowledged, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Technically valid, but this harms no one but the caller, and incorrectly entering arguments is not in scope. </p>\n<p>File this under code style.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/59#issuecomment-1145529595\">illuzen (FactoryDAO) resolved</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/pull/3\">https://github.com/code-423n4/2022-05-factorydao/pull/3</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/59#issuecomment-1154662299\">Justin Goro (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Maintaining severity as validating treeIndex isn’t out of bounds seems within the appropriate expectations of input validation.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/59#issuecomment-1158489785\">HickupHH3 (warden) commented</a>:</strong></p>\n<blockquote>\n<p>FYI, the call will not succeed because OZ’s safeTransferFrom() will revert if target isn’t an EOA. Solmate on the other hand will not.\n<a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol#L110\">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol#L110</a><br>\n<a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol#L135\">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol#L135</a><br>\n<a href=\"https://github.com/Rari-Capital/solmate/blob/main/src/utils/SafeTransferLib.sol#L9\">https://github.com/Rari-Capital/solmate/blob/main/src/utils/SafeTransferLib.sol#L9</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/59#issuecomment-1163853005\">Justin Goro (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@HickupHH3 - ‘target’ in openzeppelin’s address library refers to the contract making the call. In other words, merkleTree.tokenAddress. So the call will succeed.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-wrong-out-of-range-check\" style=\"position:relative;\"><a href=\"#m-06-wrong-out-of-range-check\" aria-label=\"m 06 wrong out of range check permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/79\">[M-06] wrong out of range check</a></h2>\n<p><em>Submitted by danb</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/main/contracts/MerkleIdentity.sol#L124\">https://github.com/code-423n4/2022-05-factorydao/blob/main/contracts/MerkleIdentity.sol#L124</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/main/contracts/MerkleIdentity.sol#L98\">https://github.com/code-423n4/2022-05-factorydao/blob/main/contracts/MerkleIdentity.sol#L98</a></p>\n<h3 id=\"vulnerability-details\" style=\"position:relative;\"><a href=\"#vulnerability-details\" aria-label=\"vulnerability details permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerability details</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">require(merkleIndex &lt;= numTrees, &#39;merkleIndex out of range&#39;);</span></span></code></pre>\n<p>This line checks that the index is valid.<br>\nHowever, the trees start at index 1, therefore index 0 should fail this check, but it doesn’t.</p>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>change to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">require(merkleIndex &lt;= numTrees &amp;&amp; merkleIndex &gt; 0, &#39;merkleIndex out of range&#39;);</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/79#issuecomment-1122060088\">illuzen (FactoryDAO) acknowledged, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Technically valid, but the next line will revert, unless you think someone has the keccak pre-image of zero bytes and this pre-image is a set of valid arguments to this function…</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/79#issuecomment-1145528891\">illuzen (FactoryDAO) resolved</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/pull/4\">https://github.com/code-423n4/2022-05-factorydao/pull/4</a></p>\n</blockquote>\n<hr>\n<h2 id=\"m-07-getrewards-in-permissionlessbasicpoolfactory-calculate-wrong-reward-amount-for-receiptid0\" style=\"position:relative;\"><a href=\"#m-07-getrewards-in-permissionlessbasicpoolfactory-calculate-wrong-reward-amount-for-receiptid0\" aria-label=\"m 07 getrewards in permissionlessbasicpoolfactory calculate wrong reward amount for receiptid0 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/161\">[M-07] getRewards() in PermissionlessBasicPoolFactory calculate wrong reward amount for receiptId==0</a></h2>\n<p><em>Submitted by unforgiven</em></p>\n<p>In <code>getRewards()</code> of <code>PermissionlessBasicPoolFactory</code> contract, there is a check to see that receipt is initialized receipt, but the condition used by code will be true for <code>receiptId</code> equal <code>0</code>. because <code>receiptId==0</code> is not initilized for any pool and the value of <code>pools[poolId].receipts[0].id</code> will be <code>0</code> so the condition <code>receipt.id == receiptId</code> will be passed on <code>getRewards()</code>. Any function that depends on <code>getRewards()</code> to check that if <code>receptId</code> has deposited fund, can be fooled. right now this bug has no direct money loss, but this function doesn’t work as it suppose too.</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>This is <code>getRewards()</code> code:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function getRewards(uint poolId, uint receiptId) public view returns (uint[] memory) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Pool storage pool = pools[poolId];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Receipt memory receipt = pool.receipts[receiptId];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(pool.id == poolId, &#39;Uninitialized pool&#39;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(receipt.id == receiptId, &#39;Uninitialized receipt&#39;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint nowish = block.timestamp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (nowish &gt; pool.endTime) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            nowish = pool.endTime;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint secondsDiff = nowish - receipt.timeDeposited;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint[] memory rewardsLocal = new uint[](pool.rewardsWeiPerSecondPerToken.length);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        for (uint i = 0; i &lt; pool.rewardsWeiPerSecondPerToken.length; i++) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            rewardsLocal[i] = (secondsDiff * pool.rewardsWeiPerSecondPerToken[i] * receipt.amountDepositedWei) / 1e18;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return rewardsLocal;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>if the value of <code>receiptId</code> set as <code>0</code> then even so <code>receiptId==0</code> is not initialized but this line:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(receipt.id == receiptId, &#39;Uninitialized receipt&#39;);</span></span></code></pre>\n<p>will be passed, because, receipts start from number <code>1</code> and <code>pool.receipts[0]</code> will have zero value for his fields. This is the code in <code>deposit()</code> which is responsible for creating receipt objects.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        pool.totalDepositsWei += amount;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        pool.numReceipts++;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        Receipt storage receipt = pool.receipts[pool.numReceipts];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        receipt.id = pool.numReceipts;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        receipt.amountDepositedWei = amount;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        receipt.timeDeposited = block.timestamp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        receipt.owner = msg.sender;</span></span></code></pre>\n<p>as you can see <code>pool.numReceipts++</code> and <code>pool.receipts[pool.numReceipts]</code> increase <code>numReceipts</code> and use it as receipts index. so receipnts will start from index <code>1</code>.<br>\nThis bug will cause that <code>getRewards(poolId, 0)</code> return <code>0</code> instead of reverting. any function that depend on reverting of <code>getRewards()</code> for uninitialized receipts can be excploited by sending <code>receipntId</code> as <code>0</code>. this function can be inside this contract or other contracts. (<code>withdraw</code> use <code>getRewards</code> and we will see that we can create <code>WithdrawalOccurred</code> event for <code>receiptsId</code> as 0)</p>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VIM</p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>If you want to start from index <code>1</code> then add this line too to ensure <code>receipntId</code> is not <code>0</code> too:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">require(receiptId &gt; 0, &#39;Uninitialized receipt&#39;);</span></span></code></pre>\n<p>or we could check for uninitialized receipnts with <code>owner</code> field as non-zero.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/161#issuecomment-1123873019\">illuzen (FactoryDAO) confirmed, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Technically valid, but it is a no-op, nothing bad happens either on withdraw or on getRewards. There are no functions that depend on getRewards reverting, but yes it would be cleaner if we do not allow 0 here.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-08-a-transfer-that-is-not-validated-its-result\" style=\"position:relative;\"><a href=\"#m-08-a-transfer-that-is-not-validated-its-result\" aria-label=\"m 08 a transfer that is not validated its result permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/87\">[M-08] A transfer that is not validated its result.</a></h2>\n<p><em>Submitted by fatherOfBlocks</em></p>\n<p>When the transfer is made in the <strong>withdraw()</strong> function, it is not validated if the transfer was done correctly.</p>\n<p>This could be a conflict since not being able to perform it would return a false and that case would not be handled, the most common is to revert.</p>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The recommendation is to wrap the transfer with a require, as is done in <strong>MerkleDropFactory.sol</strong> for example.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/87#issuecomment-1122093825\">illuzen (FactoryDAO) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>Malicious or otherwise bad tokens are considered acceptable risks for this contract as long as they cannot interfere with other trees.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/87#issuecomment-1145529354\">illuzen (FactoryDAO) resolved</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/pull/3\">https://github.com/code-423n4/2022-05-factorydao/pull/3</a></p>\n</blockquote>\n<hr>\n<h2 id=\"m-09-rebasing-tokens-go-to-the-pool-owner-or-remain-locked-in-the-various-contracts\" style=\"position:relative;\"><a href=\"#m-09-rebasing-tokens-go-to-the-pool-owner-or-remain-locked-in-the-various-contracts\" aria-label=\"m 09 rebasing tokens go to the pool owner or remain locked in the various contracts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/121\">[M-09] Rebasing tokens go to the pool owner, or remain locked in the various contracts</a></h2>\n<p><em>Submitted by IllIllI</em></p>\n<p>Rebasing tokens are tokens that have each holder’s <code>balanceof()</code> increase over time. Aave aTokens are an example of such tokens.</p>\n<h3 id=\"impact-3\" style=\"position:relative;\"><a href=\"#impact-3\" aria-label=\"impact 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Users expect that when they deposit tokens to a pool, that they get back all rewards earned, not just a flat rate. With the contracts of this project, deposited tokens will grow in value, but the value in excess of the pre-calculated <code>getMaximumRewards()</code>/deposited amounts go solely to the owner/creator, or will remain locked in the contract</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In the case of pools, the owner can withdraw the excess rebasing reward tokens by calling <code>withdrawExcessRewards()</code>, but is unable to withdraw excess deposited rebasing tokens. The Merkle-tree-related contracts have no way to withdraw any excess rebasing tokens.</p>\n<p>All parts of the code assume that the value stated is the balance that is available to withdraw. It stores the values…</p>\n<p><em>(Note: see <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/121\">submission</a> for full Proof of Concept)</em></p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Provide a function for the pool owner to withdraw excess deposited tokens and repay any associated taxes. In the case of the Merkle trees though, pro rata share amounts need to be calculated and tracked and updated with every withdrawal, which will require drastic changes to the code, making it much more expensive.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/121#issuecomment-1122556516\">illuzen (FactoryDAO) acknowledged, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Valid, but i think we will just not support rebasing tokens</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/121#issuecomment-1145529476\">illuzen (FactoryDAO) resolved</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/pull/3\">https://github.com/code-423n4/2022-05-factorydao/pull/3</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/121#issuecomment-1154673476\">Justin Goro (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Severity maintained.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/121#issuecomment-1158625076\">0xleastwood (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Not supporting rebasing tokens is equivalent to not supporting fee-on-transfer tokens. Maybe we could group all non-standard ERC20 issues together?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/121#issuecomment-1158643566\">IllIllI000 (warden) commented</a>:</strong></p>\n<blockquote>\n<p>They are slightly different: Fee-on-transfer tokens cause things to revert which will either prevent the token from being used, or will cause deposited funds to be locked. With rebasing tokens, a user misses out on new rewards, rather than losing deposited capital</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/121#issuecomment-1160078975\">ksk2345 (warden) commented</a>:</strong></p>\n<blockquote>\n<p>If a sponsor mentions that they will not be supporting rebase tokens,  then its judged as invalid.<br>\nRefer : <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/105\">https://github.com/code-423n4/2022-04-backed-findings/issues/105</a><br>\nI think we need a general consensus in C4 org rulebook how to treat this token and having some consistent judgement.<br></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/121#issuecomment-1163895257\">Justin Goro (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The sponsor acknowledged the validity and referenced this in a PR so it’s sitting somewhere between acknowledged and confirmed. In other words, the sponsor is not averse to lending a helping hand to rebase tokens but will not explicitly encourage the use of them. This is similar to how a standard CFMM allows for rebase tokens to exist and function but not without side effects, similar to the PR which does not close all holes against rebase tokens.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-10-unbounded-loop-in-withdraw-may-cause-rewards-to-be-locked-in-the-contract\" style=\"position:relative;\"><a href=\"#m-10-unbounded-loop-in-withdraw-may-cause-rewards-to-be-locked-in-the-contract\" aria-label=\"m 10 unbounded loop in withdraw may cause rewards to be locked in the contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/122\">[M-10] Unbounded loop in <code>withdraw()</code> may cause rewards to be locked in the contract</a></h2>\n<p><em>Submitted by IllIllI</em></p>\n<p>The <code>withdraw()</code> has an unbounded loop with external calls. If the gas costs of functions change between when deposits are made and when rewards are withdrawn, or if the gas cost of the deposit (<code>transferFrom()</code>) is less than the gas cost of the withdrawal (<code>transfer()</code>), then the <code>withdraw()</code> function may revert due to exceeding the block size gas limit.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>transfer()</code> is an external call, and <code>rewards.length</code> has no maximum size:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">224</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">225</span><span class=\"mtk1\">               </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardsWeiClaimed</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">226</span><span class=\"mtk1\">               </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardFunding</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] -= </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">227</span><span class=\"mtk1\">               </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tax</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">taxPerCapita</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]) / </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">228</span><span class=\"mtk1\">               </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">transferAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] - </span><span class=\"mtk12\">tax</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">229</span><span class=\"mtk1\">               </span><span class=\"mtk12\">taxes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">tax</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">230</span><span class=\"mtk1\">               </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">transferAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">231</span><span class=\"mtk1\">           }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L224-L231\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L224-L231</a></p>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Allow the specification of an offset and length to the <code>withdraw()</code> function, so that withdrawals can be broken up into smaller batches if required</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/122\">illuzen (FactoryDAO) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-11-pool-owners-can-prevent-the-payment-of-taxes\" style=\"position:relative;\"><a href=\"#m-11-pool-owners-can-prevent-the-payment-of-taxes\" aria-label=\"m 11 pool owners can prevent the payment of taxes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/124\">[M-11] Pool owners can prevent the payment of taxes</a></h2>\n<p><em>Submitted by IllIllI</em></p>\n<p>Pool owners can prevent taxes from being paid without impacting any other functionality</p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>By adding a custom reward token that always reverts for transfers to <code>globalBenericiary</code>, the owner can prevent taxes from being paid:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">258</span><span class=\"mtk1\">       </span><span class=\"mtk3\">/// @notice Withdraw taxes from pool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">259</span><span class=\"mtk1\">       </span><span class=\"mtk3\">/// @dev Anyone may call this, it just moves the taxes from this contract to the globalBeneficiary</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">260</span><span class=\"mtk1\">       </span><span class=\"mtk3\">/// @param poolId which pool are we talking about?</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">261</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawTaxes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">262</span><span class=\"mtk1\">           </span><span class=\"mtk12\">Pool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pool</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pools</span><span class=\"mtk1\">[</span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">263</span><span class=\"mtk1\">           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">id</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Uninitialized pool&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">264</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">265</span><span class=\"mtk1\">           </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">266</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">267</span><span class=\"mtk1\">               </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tax</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">taxes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">268</span><span class=\"mtk1\">               </span><span class=\"mtk12\">taxes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">269</span><span class=\"mtk1\">               </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">globalBeneficiary</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tax</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">270</span><span class=\"mtk1\">           }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">271</span><span class=\"mtk1\">           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Token transfer failed&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">272</span><span class=\"mtk1\">       }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L258-L272\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L258-L272</a></p>\n<p>While the sponsor mentions that malicious tokens make the pool malicious, this particular issue has a simple fix outlined below in the mitigation section</p>\n<h3 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Force taxes to be paid during <code>withdraw()</code></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/124#issuecomment-1122558610\">illuzen (FactoryDAO) confirmed, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Valid, but adding another transfer to withdraw increases gas costs. And it’s possible pool creator and token creator are not same party, so it’s not clear the mitigation would be better.</p>\n<p>I think it’s an acceptable risk. If someone wants to go to this level of trouble, they could just fork the contract and remove the fees.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/124#issuecomment-1145530765\">illuzen (FactoryDAO) resolved</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/pull/2\">https://github.com/code-423n4/2022-05-factorydao/pull/2</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/124#issuecomment-1155844048\">Justin Goro (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Validating against tokens specifically written with if statements for this contract is not really something a developer can prevent. For instance, a token creator can cause their token to revert if the contract requesting transferFrom approval is a Uniswap router. This would prevent all trade of that token within Uniswap. But that’s certainly not the failing of the Uniswap developers.</p>\n<p>However, for tokens in particular, it is recommended to not revert on bad implementations and so the issue will be treated as belonging to that camp of suggestions. For that reason, the risk status will remain 2.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-12-pool-owners-can-prevent-withdrawals-of-specific-receipts\" style=\"position:relative;\"><a href=\"#m-12-pool-owners-can-prevent-withdrawals-of-specific-receipts\" aria-label=\"m 12 pool owners can prevent withdrawals of specific receipts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/125\">[M-12] Pool owners can prevent withdrawals of specific receipts</a></h2>\n<p><em>Submitted by IllIllI</em></p>\n<p>Pool owners can prevent withdrawals of specific receipts without impacting any other functionality</p>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Reciepts are non-transferrable, so a malicious owner can monitor the blockchain for receipt creations, and inspect which account holds the receiptId. Next, by changing settings in a custom reward token that reverts for specific addresses, the owner can prevent that specific receipt owner from withdrawing:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">230</span><span class=\"mtk1\">               </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">transferAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">231</span><span class=\"mtk1\">           }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">232</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">233</span><span class=\"mtk1\">           </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">depositToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amountDepositedWei</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">234</span><span class=\"mtk1\">           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Token transfer failed&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L230-L234\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L230-L234</a></p>\n<p>While the sponsor mentions that malicious tokens make the pool malicious, this particular issue has a straight forward fix outlined below in the mitigation section</p>\n<h3 id=\"recommended-mitigation-steps-12\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-12\" aria-label=\"recommended mitigation steps 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Rather than reverting the whole withdrawal if only one transfer fails, return a boolean of whether all withdrawals were successful, and allow <code>withdraw()</code> to be called multiple times, keeping track of what has been transferred and what hasn’t</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/125#issuecomment-1122559541\">illuzen (FactoryDAO) confirmed, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Valid, similar to #124 mitigation seems risky, could provide emergencyWithdrawal function instead…</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/125#issuecomment-1145530834\">illuzen (FactoryDAO) resolved</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/pull/2\">https://github.com/code-423n4/2022-05-factorydao/pull/2</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/125#issuecomment-1155847137\">Justin Goro (judge) commented</a>:</strong></p>\n<blockquote>\n<p>While the example provided is not in scope for the developer to fix, the catch all provided by the sponsor is a good way to act as a last resort protection against loop griefing attacks.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-13-amount-requires-to-be-updated-to-contract-balance-increase-1\" style=\"position:relative;\"><a href=\"#m-13-amount-requires-to-be-updated-to-contract-balance-increase-1\" aria-label=\"m 13 amount requires to be updated to contract balance increase 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/34\">[M-13] amount requires to be updated to contract balance increase (1)</a></h2>\n<p><em>Submitted by MaratCerby, also found by 0x1337, 0x52, 0xYamiDancho, AuditsAreUS, berndartmueller, cccz, CertoraInc, csanuragjain, defsec, Dravee, GimelSec, hickuphh3, horsefacts, hyh, IllIllI, jayjonah8, kenzo, leastwood, mtz, p4st13r4, PPrieditis, reassor, Ruhum, throttle, TrungOre, VAD37, wuwe1, and ych18</em></p>\n<p>Every time transferFrom or transfer function in ERC20 standard is called there is a possibility that underlying smart contract did not transfer the exact amount entered.</p>\n<p>It is required to find out contract balance increase/decrease after the transfer.<br>\nThis pattern also prevents from re-entrancy attack vector.</p>\n<h3 id=\"recommended-mitigation-steps-13\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-13\" aria-label=\"recommended mitigation steps 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Recommended code:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">fundPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Pool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pool</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pools</span><span class=\"mtk1\">[</span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardFunding</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getMaximumRewards</span><span class=\"mtk1\">(</span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">i</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// transfer the tokens from pool-creator to this contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balanceBefore</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)); </span><span class=\"mtk3\">// remembering asset balance before the transfer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) - </span><span class=\"mtk12\">balanceBefore</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// updating actual amount to the contract balance increase</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">newAmount</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// making sure amounts match</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// bookkeeping to make sure pools don&#39;t share tokens</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardFunding</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Token deposits failed&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/34#issuecomment-1121979560\">illuzen (FactoryDAO) confirmed, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Re-entrance here would involve sending our contract tokens multiple times and creating multiple pools, not withdraw any funds. Malicious tokens could lie about balance as well, so the mitigation doesn’t completely fix the issue.</p>\n<p>And malicious tokens are explicitly considered in the comments as acceptable. What is unacceptable is malicious pools harming other pools.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/34#issuecomment-1145530416\">illuzen (FactoryDAO) resolved</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/pull/2\">https://github.com/code-423n4/2022-05-factorydao/pull/2</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/34#issuecomment-1154610894\">Justin Goro (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Just a note on the reason for checking token balances before and after: not all tokens that report a difference between the balance and the amount are acting maliciously. In particular fee-on-transfer tokens.</p>\n</blockquote>\n<blockquote>\n<p>Reducing severity as this is a value leakage situation and because the sponsor has taken pains to emphasize the isolation of pools and the desire to not have to support all tokens.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-14-merkle-tree-related-contracts-vulnerable-to-cross-chain-replay-attacks\" style=\"position:relative;\"><a href=\"#m-14-merkle-tree-related-contracts-vulnerable-to-cross-chain-replay-attacks\" aria-label=\"m 14 merkle tree related contracts vulnerable to cross chain replay attacks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/126\">[M-14] Merkle-tree-related contracts vulnerable to cross-chain-replay attacks</a></h2>\n<p><em>Submitted by IllIllI</em></p>\n<blockquote>\n<p>Bank is a token vesting, airdrop and payroll tool. It uses merkle trees to massively scale token distributions with integrated vesting (time locks). The idea of this tool is that it allows DAOs to vest pre-sale participants, and future allocations of tokens (such as DAO treasury allocations) far into the future. These are important contracts since they need longevity and will secure large allocations of tokens.</p>\n</blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/README.md?plain=1#L28\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/README.md?plain=1#L28</a></p>\n<p>Since these trees are long-lived, they need to be able to handle forks correctly. If someone generates an exchange address for their drops, that address may only be valid for that chain (e.g. exchange supports BTC but not BSV), and any funds sent to the unsupported chain are lost.</p>\n<h3 id=\"impact-4\" style=\"position:relative;\"><a href=\"#impact-4\" aria-label=\"impact 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>If there’s a fork, since anyone can call <code>withdraw()</code>, an attacker can monitor the blockchain for calls to <code>withdraw()</code>, and then make the same call with the same arguments on the other chain, which will send funds to the unsupported address.</p>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>There are no EIP-712 protections in the encoding:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleDropFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">94</span><span class=\"mtk1\">           </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">leaf</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">destination</span><span class=\"mtk1\">, </span><span class=\"mtk12\">value</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleDropFactory.sol#L94\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleDropFactory.sol#L94</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleVesting</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">109</span><span class=\"mtk1\">           </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">leaf</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">destination</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totalCoins</span><span class=\"mtk1\">, </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\">, </span><span class=\"mtk12\">endTime</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lockPeriodEndTime</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleVesting.sol#L109\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleVesting.sol#L109</a></p>\n<p>and anyone can trigger a withdrawal:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleDropFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">82</span><span class=\"mtk1\">       </span><span class=\"mtk3\">/// @dev Anyone may call this function for anyone else, funds go to destination regardless, it&#39;s just a question of</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">83</span><span class=\"mtk1\">       </span><span class=\"mtk3\">/// @dev who provides the proof and pays the gas, msg.sender is not used in this function</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleDropFactory.sol#L82-L83\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleDropFactory.sol#L82-L83</a></p>\n<h3 id=\"recommended-mitigation-steps-14\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-14\" aria-label=\"recommended mitigation steps 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add EIP-712 protections and add a mechanism to allow tokens to be transferred to a different address using EIP-2612 <code>permit()</code></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/126#issuecomment-1123394301\">illuzen (FactoryDAO) acknowledged, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Sending funds to an unusable address on a chain that we didn’t intend to be on doesn’t seem in scope, but good thinking. In any case, the exchange will have the key for the address on the other chain since private keys are chain agnostic.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-15-permissionlessbasicpoolfactorys-withdraw-can-become-frozen-on-zero-reward-token-transfers\" style=\"position:relative;\"><a href=\"#m-15-permissionlessbasicpoolfactorys-withdraw-can-become-frozen-on-zero-reward-token-transfers\" aria-label=\"m 15 permissionlessbasicpoolfactorys withdraw can become frozen on zero reward token transfers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/175\">[M-15] PermissionlessBasicPoolFactory’s withdraw can become frozen on zero reward token transfers</a></h2>\n<p><em>Submitted by hyh</em></p>\n<p>Reward tokens that do not allow for zero amount transfers can prevent user pool exit.</p>\n<p>Now it is required that all reward amounts be successfully transferred to a receipt owner and the reward token amount isn’t checked in the process.</p>\n<p>If withdraw was called at the moment when some reward amount is zero (because either zero time passed or zero slope is set), the withdraw() will revert.</p>\n<p>Say once such reward token is there (say with no malicious intent, as it’s just a specifics of some valid tokens), user cannot withdraw immediately after deposit as no rewards accrued yet and this token transfer will revert the whole call even if it is one of the many.</p>\n<p>As withdraw() the only way for a user to exit pool, her funds will be frozen within.</p>\n<p>If slope is set to zero for such a token, either maliciously or mistakenly, the withdrawals are impossible for all the users.</p>\n<p>As this is user fund freeze case with external assumptions, setting the severity to medium.</p>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Some ERC20 tokens do not allow for zero amount transfers:</p>\n<p><a href=\"https://github.com/d-xo/weird-erc20#revert-on-zero-value-transfers\">https://github.com/d-xo/weird-erc20#revert-on-zero-value-transfers</a></p>\n<p>withdraw() iterates across the set of reward tokens, and requires all transfers to go through:</p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L230-L230\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L230-L230</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">success</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">transferAmount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Once some is not ok, the whole call reverts. As it’s the only way for a user to exit the pool, her funds are frozen until non-zero reward is obtained.</p>\n<p>It might never happen as rewardsWeiPerSecondPerToken is allowed to be zero:</p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L92-L112\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L92-L112</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addPool</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxDeposit</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardsWeiPerSecondPerToken</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">programLengthDays</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositTokenAddress</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">excessBeneficiary</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardTokenAddresses</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ipfsHash</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">name</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Pool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pool</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pools</span><span class=\"mtk1\">[++</span><span class=\"mtk12\">numPools</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">id</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">numPools</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardsWeiPerSecondPerToken</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewardsWeiPerSecondPerToken</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">startTime</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">endTime</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">startTime</span><span class=\"mtk1\"> + (</span><span class=\"mtk12\">programLengthDays</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">depositToken</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">depositTokenAddress</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">excessBeneficiary</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">excessBeneficiary</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">taxPerCapita</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">globalTaxPerCapita</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardsWeiPerSecondPerToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">rewardTokenAddresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Rewards and reward token arrays must be same length&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>This way, when one of the reward tokens doesn’t allow for zero transfers:</p>\n<ol>\n<li>immediate withdraw after deposit is impossible</li>\n<li>factory allows for creation of malicious or misconfigured pools by adding such a reward token with zero rewardsWeiPerSecondPerToken, making withdraw impossible for all users</li>\n</ol>\n<h3 id=\"recommended-mitigation-steps-15\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-15\" aria-label=\"recommended mitigation steps 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider controlling for zero amounts in reward transfer cycle:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+\t        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t            </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardsWeiClaimed</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t            </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardFunding</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] -= </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tax</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">taxPerCapita</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]) / </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">transferAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] - </span><span class=\"mtk12\">tax</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t            </span><span class=\"mtk12\">taxes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">tax</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t            </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">transferAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+\t        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L224-L231\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L224-L231</a></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/175#issuecomment-1124518960\">illuzen (FactoryDAO) marked as duplicate and commented</a>:</strong></p>\n<blockquote>\n<p>Duplicate of #108 (M-13)</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/175#issuecomment-1155831457\">Justin Goro (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Unmarking duplicate as FOT and revert-on-zero tokens are different.<br>\nConsider this issue implicitly acknowledged as sponsor has communicated that badly implemented ERC20 tokens are allowed so long as they respect pool isolation.<br>\nHowever, this bug is still a useful boundary condition to consider and so it will not be marked as invalid.<br></p>\n</blockquote>\n<hr>\n<h2 id=\"m-16-erc20-tokens-with-different-decimals-than-18-leads-to-loss-of-funds\" style=\"position:relative;\"><a href=\"#m-16-erc20-tokens-with-different-decimals-than-18-leads-to-loss-of-funds\" aria-label=\"m 16 erc20 tokens with different decimals than 18 leads to loss of funds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/47\">[M-16] ERC20 tokens with different decimals than 18 leads to loss of funds</a></h2>\n<p><em>Submitted by reassor, also found by hyh, IllIllI, kenzo, leastwood, rajatbeladiya, VAD37, and ych18</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L169\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L169</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L282\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L282</a></p>\n<h3 id=\"impact-5\" style=\"position:relative;\"><a href=\"#impact-5\" aria-label=\"impact 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Contract <code>PermissionlessBasicPoolFactory</code> calculates rewards by using hardcoded value of decimals <code>18</code> (1e18) for ERC20 tokens. This leads to wrong rewards calculations and effectively loss of funds for all pools that will be using ERC20 tokens with different decimals than <code>18</code>. Example of such a token is USDC that has 6 decimals only.</p>\n<h3 id=\"proof-of-concept-13\" style=\"position:relative;\"><a href=\"#proof-of-concept-13\" aria-label=\"proof of concept 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L169\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L169</a></li>\n<li><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L282\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L282</a></li>\n</ul>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Manual Review / VSCode</p>\n<h3 id=\"recommended-mitigation-steps-16\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-16\" aria-label=\"recommended mitigation steps 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>It is recommended to add support for different number of decimals than <code>18</code> by dynamically checking <code>decimals()</code> for the tokens that are part of the rewards calculations. Alternatively if such a support is not needed, new require statements should be added to <code>addPool</code> that will be checking that the number of decimals for all ERC20 tokens is <code>18</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/47#issuecomment-1122004512\">illuzen (FactoryDAO) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-17-owner-of-a-pool-may-prevent-any-taxes-being-withdrawn\" style=\"position:relative;\"><a href=\"#m-17-owner-of-a-pool-may-prevent-any-taxes-being-withdrawn\" aria-label=\"m 17 owner of a pool may prevent any taxes being withdrawn permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/52\">[M-17] Owner of a pool may prevent any taxes being withdrawn</a></h2>\n<p><em>Submitted by AuditsAreUS, also found by IllIllI</em></p>\n<p>It is possible for the owner of a pool to prevent any taxes being withdrawn by the <code>globalBeneficiary</code>. The impact is the taxed tokens will be permanently locked in the contract and <code>withdrawTaxes()</code> will not be callable for that <code>poolId</code>.</p>\n<h3 id=\"proof-of-concept-14\" style=\"position:relative;\"><a href=\"#proof-of-concept-14\" aria-label=\"proof of concept 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The attack works by setting one of the <code>rewardTokenAddresses</code> to a malicious contract during <code>addPool()</code>. The malicious contract is set such that it will revert on the call <code>pool.rewardTokens[i]).transfer(globalBeneficiary, tax)</code> if an only if the <code>to</code> address is `globalBeneficiary.</p>\n<p>The result of this attack is that if one reward transfer fails then entire <code>withdrawTaxes()</code> transaction will revert and no taxes can be claimed. However, the pool will function correctly for all other users.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawTaxes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Pool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pool</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pools</span><span class=\"mtk1\">[</span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">id</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Uninitialized pool&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tax</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">taxes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">taxes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">globalBeneficiary</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tax</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Token transfer failed&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-17\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-17\" aria-label=\"recommended mitigation steps 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>There are a few mitigations to this issue.</p>\n<p>The first is for the <code>withdrawTaxes()</code> function to take both <code>poolId</code> and <code>rewardIndex</code> as a parameters to allowing the tax beneficiary to only withdraw from certain reward tokens in the pool. This would allow the beneficiary to withdraw from all reward tokens except malicious ones.</p>\n<p>The second mitigation is to implement a <code>try-catch</code> condition around the withdrawal of reward tokens. In the catch statement re-instate the <code>taxes[poolId][i] = tax</code> if the transfer fails. Alternatively just skip the reward tokens if the transfer fails though this would be undesirable if a token is paused for some reason.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/52#issuecomment-1122016021\">illuzen (FactoryDAO) confirmed, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Valid, will probably do <code>try-catch</code>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/52#issuecomment-1145530021\">illuzen (FactoryDAO) resolved</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/pull/2\">https://github.com/code-423n4/2022-05-factorydao/pull/2</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/52#issuecomment-1154655710\">Justin Goro (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Downgraded: deposited funds not at risk but value leakage occurs.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-18-dos-attacker-may-significantly-increase-the-cost-of-withdrawexcessrewards-by-creating-a-significant-number-of-excess-receipts\" style=\"position:relative;\"><a href=\"#m-18-dos-attacker-may-significantly-increase-the-cost-of-withdrawexcessrewards-by-creating-a-significant-number-of-excess-receipts\" aria-label=\"m 18 dos attacker may significantly increase the cost of withdrawexcessrewards by creating a significant number of excess receipts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/54\">[M-18] DoS: Attacker may significantly increase the cost of <code>withdrawExcessRewards()</code> by creating a significant number of excess receipts</a></h2>\n<p><em>Submitted by AuditsAreUS, also found by 0x52, 0xf15ers, and pedroais</em></p>\n<p>An attacker may cause a DoS attack on <code>withdrawExcessRewards()</code> by creating a excessive number of <code>receipts</code> with minimal value. Each of these receipts will need to be withdrawn before the owner can call <code>withdrawExcessRewards()</code>.</p>\n<p>The impact is the owner would have to pay an unbounded amount of gas to <code>withdraw()</code> all the accounts and receive their excess funds.</p>\n<h3 id=\"proof-of-concept-15\" style=\"position:relative;\"><a href=\"#proof-of-concept-15\" aria-label=\"proof of concept 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>withdrawExcessRewards()</code> has the requirement that <code>totalDepositsWei</code> for the pool is zero before the owner may call this function as seen on line 245.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">totalDepositsWei</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Cannot withdraw until all deposits are withdrawn&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><code>pool.totalDepositsWei</code> is added to each time a user calls <code>deposit()</code>. It is increased by the amount the user deposits. There are no restrictions on the amount that may be deposited as a result a user may add 1 wei (or the smallest unit on any currency) which has negligible value.</p>\n<p>The owner can force withdraw these accounts by calling <code>withdraw()</code> so long as <code>block.timestamp > pool.endTime</code>. They would be required to do this for each account that was created.</p>\n<p>This could be a significant amount of gas costs, especially if the gas price has increased since the attacker originally made the deposits.</p>\n<h3 id=\"recommended-mitigation-steps-18\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-18\" aria-label=\"recommended mitigation steps 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider adding a minimum deposit amount for each pool that can be configured by the pool owner.</p>\n<p>Alternatively, allow the owner to call <code>withdrawExcessRewards()</code> given some other criteria such as</p>\n<ul>\n<li>A fix period of time (e.g. 1 month) has passed since the end of the auction; and</li>\n<li>90% of the deposits have been withdrawn<br></li>\n</ul>\n<p>These criteria can be customised as desired by the design team.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/54#issuecomment-1122018541\">illuzen (FactoryDAO) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Valid, will probably do minimum deposit.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-19-centralisation-risk-owner-may-abuse-the-tax-rate-to-claim-999-of-pools\" style=\"position:relative;\"><a href=\"#m-19-centralisation-risk-owner-may-abuse-the-tax-rate-to-claim-999-of-pools\" aria-label=\"m 19 centralisation risk owner may abuse the tax rate to claim 999 of pools permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/56\">[M-19] Centralisation Risk: Owner may abuse the tax rate to claim 99.9% of pools</a></h2>\n<p><em>Submitted by AuditsAreUS, also found by leastwood, pedroais, and reassor</em></p>\n<p>It is possible for the owner to increase the tax rate to 99.9% in <code>setGlobalTax()</code>.</p>\n<p>The impact of this is that any future pools will be required to pay 99.9% of their rewards in tax to the <code>globalBeneficiary</code>.</p>\n<p>It is possible for the <code>globalBeneficiary</code> to modify this and front-run any transactions in the mem-pool which call <code>addPool()</code>. These transactions will succeed and create pools with the 99.9% tax rate.</p>\n<h3 id=\"proof-of-concept-16\" style=\"position:relative;\"><a href=\"#proof-of-concept-16\" aria-label=\"proof of concept 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The cap for the tax rate is 1000 = 100%.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setGlobalTax</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newTaxPerCapita</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">globalBeneficiary</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Only globalBeneficiary can set tax&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newTaxPerCapita</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Tax too high&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">globalTaxPerCapita</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">newTaxPerCapita</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-19\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-19\" aria-label=\"recommended mitigation steps 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>It is recommended to put some reasonable upper bounds on the tax rate. Consider setting the upper bounds for the tax rate to 5%.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/56#issuecomment-1145529833\">illuzen (FactoryDAO) confirmed and resolved</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/pull/2\">https://github.com/code-423n4/2022-05-factorydao/pull/2</a></p>\n</blockquote>\n<hr>\n<h2 id=\"m-20-merkleresistor-zero-coinspersecond-will-brick-tranche-initialization-and-withdrawals\" style=\"position:relative;\"><a href=\"#m-20-merkleresistor-zero-coinspersecond-will-brick-tranche-initialization-and-withdrawals\" aria-label=\"m 20 merkleresistor zero coinspersecond will brick tranche initialization and withdrawals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/107\">[M-20] MerkleResistor: zero coinsPerSecond will brick tranche initialization and withdrawals</a></h2>\n<p><em>Submitted by hickuphh3, also found by GimelSec, gzeon, and scaraven</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleResistor.sol#L259\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleResistor.sol#L259</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleResistor.sol#L264\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleResistor.sol#L264</a></p>\n<h3 id=\"details--impact\" style=\"position:relative;\"><a href=\"#details--impact\" aria-label=\"details  impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Details &#x26; Impact</h3>\n<p>It is possible for <code>coinsPerSecond</code> to be zero. In these cases, the <code>startTime</code> calculation</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">vestingTime</span><span class=\"mtk1\"> - (</span><span class=\"mtk12\">totalCoins</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">coinsPerSecond</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>will revert from division by zero, preventing initialization, and by extension, withdrawals of vested tokens.</p>\n<h3 id=\"proof-of-concept-17\" style=\"position:relative;\"><a href=\"#proof-of-concept-17\" aria-label=\"proof of concept 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>We assume vesting time chosen is the maximum (<code>tree.maxEndTime</code>) so that <code>totalCoins = maxTotalPayments</code>. These examples showcase some possibilities for which the calculated <code>coinsPerSecond</code> can be zero.</p>\n<h4 id=\"example-1-high-upfront-percentage\" style=\"position:relative;\"><a href=\"#example-1-high-upfront-percentage\" aria-label=\"example 1 high upfront percentage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example 1: High upfront percentage</h4>\n<ul>\n<li><code>pctUpFront = 99</code> (99% up front)</li>\n<li><code>totalCoins = 10_000e6</code> (10k USDC)</li>\n<li><code>vestingTime = 1 year</code></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">coinsPerSecond</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalCoins</span><span class=\"mtk1\"> * (</span><span class=\"mtk11\">uint</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">) - </span><span class=\"mtk12\">tree</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pctUpFront</span><span class=\"mtk1\">)) / (</span><span class=\"mtk12\">vestingTime</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">100</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 10_000e6 * (100 - 99) / (365 * 86400 * 100)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// = 0</span></span></span></code></pre>\n<h4 id=\"example-2-small-reward-amount--token-decimals\" style=\"position:relative;\"><a href=\"#example-2-small-reward-amount--token-decimals\" aria-label=\"example 2 small reward amount  token decimals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example 2: Small reward amount / token decimals</h4>\n<ul>\n<li><code>pctUpFront = 0</code></li>\n<li><code>totalCoins = 100_000e2</code> (100k EURS)</li>\n<li><code>vestingTime = 180 days</code></li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">coinsPerSecond</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalCoins</span><span class=\"mtk1\"> * (</span><span class=\"mtk11\">uint</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">) - </span><span class=\"mtk12\">tree</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pctUpFront</span><span class=\"mtk1\">)) / (</span><span class=\"mtk12\">vestingTime</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">100</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 100_000e2 * 100 / (180 * 86400 * 100)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// = 0</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-20\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-20\" aria-label=\"recommended mitigation steps 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Scale up <code>coinsPerSecond</code> by <code>PRECISION</code>, then scale down when executing withdrawals. While it isn’t foolproof, the possibility of <code>coinsPerSecond</code> being zero is reduced significantly.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"264\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"265\"></span><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">coinsPerSecond</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalCoins</span><span class=\"mtk1\"> * (</span><span class=\"mtk11\">uint</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">) - </span><span class=\"mtk12\">tree</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pctUpFront</span><span class=\"mtk1\">)) * </span><span class=\"mtk12\">PRECISION</span><span class=\"mtk1\"> / (</span><span class=\"mtk12\">vestingTime</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">100</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"266\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"184\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"185\"></span><span class=\"grvsc-source\"><span class=\"mtk12\">currentWithdrawal</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">tranche</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastWithdrawalTime</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">tranche</span><span class=\"mtk1\">.</span><span class=\"mtk12\">coinsPerSecond</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">PRECISION</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/107#issuecomment-1122169659\">illuzen (FactoryDAO) confirmed, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Example 1 = 3, not 0</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/107#issuecomment-1155837749\">Justin Goro (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Reducing severity because rewards are not staked user funds.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-21-verification-should-be-leafed-based-and-not-address-based\" style=\"position:relative;\"><a href=\"#m-21-verification-should-be-leafed-based-and-not-address-based\" aria-label=\"m 21 verification should be leafed based and not address based permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/148\">[M-21] Verification should be leafed based and not address based</a></h2>\n<p><em>Submitted by Picodes, also found by pedroais, and unforgiven</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleVesting.sol#L115\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleVesting.sol#L115</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleDropFactory.sol#L92\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleDropFactory.sol#L92</a></p>\n<h3 id=\"impact-6\" style=\"position:relative;\"><a href=\"#impact-6\" aria-label=\"impact 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Contracts should clarify what is the intended behavior for Merkle trees with multiple leafs with the same address.</p>\n<h3 id=\"recommended-mitigation-steps-21\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-21\" aria-label=\"recommended mitigation steps 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>There is 2 possible behaviors:</p>\n<ul>\n<li>either - what is currently done - you only authorize one claim per address, in which case the multiple leaf are here to give users a choice - for example you could use <code>MerkleVesting</code> to give users the choice between 2 sets of vesting parameters and have something close to <code>MerkleResistor</code>.</li>\n<li>either you use a mapping based on the leaf to store if a leaf has been claimed or not.</li>\n</ul>\n<p>This behavior should be clarified in the comments at least, and made clear to merkle tree builders.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/148#issuecomment-1123447533\">illuzen (FactoryDAO) confirmed, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>This is covered in a comment on MerkleResistor:49, but we should put it elsewhere for clarity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/148#issuecomment-1145529268\">illuzen (FactoryDAO) resolved</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/pull/3\">https://github.com/code-423n4/2022-05-factorydao/pull/3</a></p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 43 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/275\">report highlighted below</a> by <strong>horsefacts</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/94\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/198\">PPrieditis</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/92\">robee</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/236\">sorrynotsorry</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/273\">defsec</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/216\">reassor</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/234\">rfa</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/50\">MaratCerby</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/209\">VAD37</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/136\">berndartmueller</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/133\">0xYamiDancho</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/104\">0xf15ers</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/76\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/43\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/280\">TerrierLover</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/218\">ilan</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/96\">ellahi</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/84\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/91\">juicy</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/268\">Dravee</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/265\">eccentricexit</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/111\">hickuphh3</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/285\">hyh</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/176\">GimelSec</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/224\">joestakey</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/149\">Picodes</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/266\">Hawkeye</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/187\">gzeon</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/101\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/19\">oyc_109</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/220\">0xkatana</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/190\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/15\">samruna</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/251\">simon135</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/226\">delfin454000</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/277\">kebabsec</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/115\">ACai</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/85\">AlleyCat</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/237\">Bruhhh</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/62\">csanuragjain</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/182\">rajatbeladiya</a>, and <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/214\">throttle</a>.</em></p>\n<h2 id=\"l-01-missing-parameter-validations-in-speedbumppricegateaddgate\" style=\"position:relative;\"><a href=\"#l-01-missing-parameter-validations-in-speedbumppricegateaddgate\" aria-label=\"l 01 missing parameter validations in speedbumppricegateaddgate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-01] Missing parameter validations in <code>SpeedBumpPriceGate#addGate</code></h2>\n<p>Callers of <code>addGate</code> can create price gates with a zero price floor (allowing users to claim free tokens), and zero <code>priceIncreaseDenominator</code> (causing price calculation to revert with a divide by zero error).</p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/SpeedBumpPriceGate.sol#L36-L45\"><code>SpeedBumpPriceGate#addGate</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addGate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">priceFloor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">priceDecay</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">priceIncrease</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">priceIncreaseDenominator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">beneficiary</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// prefix operator increments then evaluates</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Gate</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">gates</span><span class=\"mtk1\">[++</span><span class=\"mtk12\">numGates</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">priceFloor</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">priceFloor</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">decayFactor</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">priceDecay</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">priceIncreaseFactor</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">priceIncrease</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">priceIncreaseDenominator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">priceIncreaseDenominator</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">beneficiary</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">beneficiary</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Suggestion: Validate that <code>priceFloor</code> and <code>priceIncreaseDenominator</code> are nonzero.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addGate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">priceFloor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">priceDecay</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">priceIncrease</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">priceIncreaseDenominator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">beneficiary</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">priceFloor</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Price floor must be nonzero&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">priceIncreaseDenominator</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Denominator must be nonzero&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// prefix operator increments then evaluates</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Gate</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">gates</span><span class=\"mtk1\">[++</span><span class=\"mtk12\">numGates</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">priceFloor</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">priceFloor</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">decayFactor</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">priceDecay</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">priceIncreaseFactor</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">priceIncrease</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">priceIncreaseDenominator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">priceIncreaseDenominator</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">beneficiary</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">beneficiary</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"l-02-voterid-token-can-be-minted-to-the-zero-address\" style=\"position:relative;\"><a href=\"#l-02-voterid-token-can-be-minted-to-the-zero-address\" aria-label=\"l 02 voterid token can be minted to the zero address permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-02] <code>VoterID</code> token can be minted to the zero address</h2>\n<p><code>VoterID</code> tokens can be minted to the zero address in <code>VoterID#createIdentityFor</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L122-L147\"><code>VoterID#createIdentityFor</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createIdentityFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uri</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_minter</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Only minter may create identity&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owners</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">] == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;Token already exists&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// for getTokenByIndex below, 0 based index so we do it before incrementing numIdentities</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">allTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">numIdentities</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// increment the number of identities</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">numIdentities</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">numIdentities</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// two way mapping for enumeration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ownershipMapIndexToToken</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">][</span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">]] = </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ownershipMapTokenToIndex</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">][</span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// set owner of new token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">owners</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// increment balances for owner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">] + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uriMap</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">uri</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Transfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IdentityCreated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Suggestion: validate <code>thisOwner</code> in <code>createIdentityFor</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createIdentityFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uri</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_minter</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Only minter may create identity&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owners</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">] == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;Token already exists&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;ERC721: mint to the zero address&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// for getTokenByIndex below, 0 based index so we do it before incrementing numIdentities</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">allTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">numIdentities</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// increment the number of identities</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">numIdentities</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">numIdentities</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// two way mapping for enumeration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ownershipMapIndexToToken</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">][</span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">]] = </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ownershipMapTokenToIndex</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">][</span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// set owner of new token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">owners</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// increment balances for owner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">] + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uriMap</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">uri</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Transfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IdentityCreated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"l-03-voterid-token-can-be-minted-to-non-erc721-receivers\" style=\"position:relative;\"><a href=\"#l-03-voterid-token-can-be-minted-to-non-erc721-receivers\" aria-label=\"l 03 voterid token can be minted to non erc721 receivers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-03] <code>VoterID</code> token can be minted to non-ERC721 receivers</h2>\n<p><code>VoterID</code> tokens can be minted to non-ERC721 receivers in <code>VoterID#createIdentityFor</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L122-L147\"><code>VoterID#createIdentityFor</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createIdentityFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uri</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_minter</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Only minter may create identity&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owners</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">] == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;Token already exists&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// for getTokenByIndex below, 0 based index so we do it before incrementing numIdentities</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">allTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">numIdentities</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// increment the number of identities</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">numIdentities</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">numIdentities</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// two way mapping for enumeration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ownershipMapIndexToToken</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">][</span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">]] = </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ownershipMapTokenToIndex</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">][</span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// set owner of new token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">owners</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// increment balances for owner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">] + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uriMap</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">uri</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Transfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IdentityCreated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Suggestion: check <code>checkOnERC721Received</code> in <code>createIdentityFor</code>. This callback introduces a reentrancy vector, so take care to ensure callers of <code>createIdentityFor</code> use a reentrancy guard or follow checks-effects-interactions:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createIdentityFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uri</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_minter</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Only minter may create identity&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owners</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">] == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;Token already exists&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;ERC721: mint to the zero address&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// for getTokenByIndex below, 0 based index so we do it before incrementing numIdentities</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">allTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">numIdentities</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// increment the number of identities</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">numIdentities</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">numIdentities</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// two way mapping for enumeration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ownershipMapIndexToToken</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">][</span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">]] = </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ownershipMapTokenToIndex</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">][</span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// set owner of new token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">owners</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// increment balances for owner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">] + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uriMap</span><span class=\"mtk1\">[</span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">uri</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">checkOnERC721Received</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;Identity: transfer to non ERC721Receiver implementer&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Transfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IdentityCreated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">thisOwner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">thisToken</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"l-04-prefer-safetransfer-and-safetransferfrom-for-erc20-token-transfers\" style=\"position:relative;\"><a href=\"#l-04-prefer-safetransfer-and-safetransferfrom-for-erc20-token-transfers\" aria-label=\"l 04 prefer safetransfer and safetransferfrom for erc20 token transfers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-04] Prefer <code>safeTransfer</code> and <code>safeTransferFrom</code> for ERC20 token transfers</h2>\n<p>Consider using OpenZeppelin’s <a href=\"https://docs.openzeppelin.com/contracts/2.x/api/token/erc20#SafeERC20\"><code>SafeERC20</code></a> library to handle edge cases in ERC20 token transfers. This prevents accidentally forgetting to check the return value, like the example in <a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleVesting.sol#L169-L174\"><code>MerkleVesting#withdraw</code></a>.</p>\n<p>Potential changes:</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L144\"><code>PermissionlessBasicPoolFactory.sol#L144</code></a></li>\n<li><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L198\"><code>PermissionlessBasicPoolFactory.sol#L198</code></a></li>\n<li><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L230\"><code>PermissionlessBasicPoolFactory.sol#L230</code></a></li>\n<li><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleVesting.sol#L89\"><code>MerkleVesting.sol#L89</code></a></li>\n<li><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleResistor.sol#L121\"><code>MerkleResistor.sol#L121</code></a></li>\n<li><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleResistor.sol#L204\"><code>MerkleResistor.sol#L204</code></a></li>\n<li><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleDropFactory.sol#L77\"><code>MerkleDropFactory.sol#L77</code></a></li>\n<li><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleDropFactory.sol#L107\"><code>MerkleDropFactory.sol#L107</code></a></li>\n</ul>\n<h2 id=\"l-05-replace-inline-assembly-with-accountcodelength\" style=\"position:relative;\"><a href=\"#l-05-replace-inline-assembly-with-accountcodelength\" aria-label=\"l 05 replace inline assembly with accountcodelength permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-05] Replace inline assembly with <code>account.code.length</code></h2>\n<p><code>&#x3C;address>.code.length</code> can be used in Solidity >= 0.8.0 to access an account’s code size and check if it is a contract without inline assembly.</p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L343-L349\"><code>VoterID#isContract</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">size</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// solhint-disable-next-line no-inline-assembly</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> { size := </span><span class=\"mtk11\">extcodesize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">account</span><span class=\"mtk1\">) }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">size</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Suggestion:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account</span><span class=\"mtk1\">.</span><span class=\"mtk12\">code</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"l-06-voteridtransferfrom-does-not-distinguish-nonexistent-tokens-from-unapproved-transfers\" style=\"position:relative;\"><a href=\"#l-06-voteridtransferfrom-does-not-distinguish-nonexistent-tokens-from-unapproved-transfers\" aria-label=\"l 06 voteridtransferfrom does not distinguish nonexistent tokens from unapproved transfers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-06] <code>VoterID#transferFrom</code> does not distinguish nonexistent tokens from unapproved transfers</h2>\n<p>Unlike other common ERC721 implementations, <code>VoterID</code> does not distinguish an attempt to transfer a nonexistent token from an unapproved transfer:</p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L198-L201\"><code>VoterId#transferFrom</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">isApproved</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;Identity: Unapproved transfer&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Consider checking that a token exists in <code>isApproved</code> to distinguish attempts to transfer nonexistint tokens. (See OpenZeppelin <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/d4fb3a89f9d0a39c7ee6f2601d33ffbf30085322/contracts/token/ERC721/ERC721.sol#L232\"><code>ERC721#_isApprovedOrOwner</code></a> for an example).</p>\n<h2 id=\"n-01-prefer-two-step-ownership-transfers\" style=\"position:relative;\"><a href=\"#n-01-prefer-two-step-ownership-transfers\" aria-label=\"n 01 prefer two step ownership transfers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-01] Prefer two-step ownership transfers</h2>\n<p>If the <code>owner</code> of <code>VoterID</code> accidentally transfers ownership to an incorrect address, protected functions may become permanently inaccessible.</p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L151-L155\"><code>VoterID.sol#L151-L155</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setOwner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newOwner</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ownerOnly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">oldOwner</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_owner_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_owner_</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">newOwner</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OwnerUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">oldOwner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">newOwner</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Suggestion: handle ownership transfers with two steps and two transactions. First, allow the current owner to propose a new owner address. Second, allow the proposed owner (and only the proposed owner) to accept ownership, and update the contract owner internally.</p>\n<h2 id=\"n-02-balanceof-does-not-revert-on-zero-address-query\" style=\"position:relative;\"><a href=\"#n-02-balanceof-does-not-revert-on-zero-address-query\" aria-label=\"n 02 balanceof does not revert on zero address query permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-02] <code>balanceOf</code> does not revert on zero address query</h2>\n<p>According to the ERC721 spec and the natspec comment in the code, <code>VoterID#balanceOf</code> should revert when called with the zero address, but it does not:</p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L168-L175\"><code>VoterID.sol#L168-L175</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Count all NFTs assigned to an owner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev NFTs assigned to the zero address are considered invalid, and this</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">///  function throws for queries about the zero address.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @param _address An address for whom to query the balance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @return The number of NFTs owned by `owner`, possibly zero</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_address</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_address</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Suggestion: Validate that <code>_address</code> is not <code>address(0)</code> in <code>balanceOf</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Count all NFTs assigned to an owner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev NFTs assigned to the zero address are considered invalid, and this</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">///  function throws for queries about the zero address.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @param _address An address for whom to query the balance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @return The number of NFTs owned by `owner`, possibly zero</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_address</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_address</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERC721: balance query for the zero address&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_address</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"n-03-move-require-check-to-top-of-function\" style=\"position:relative;\"><a href=\"#n-03-move-require-check-to-top-of-function\" aria-label=\"n 03 move require check to top of function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-03] Move <code>require</code> check to top of function</h2>\n<p>The <code>require</code> check in <code>PermissionlessBasicPoolFactory#addPool</code> comes after several state changes. Consider moving it to the top of the function to follow the checks-effects-interactions pattern.</p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L111-L113\"><code>PermissionlessBasicPoolFactory.sol#L112</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardsWeiPerSecondPerToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">rewardTokenAddresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Rewards and reward token arrays must be same length&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"n-04-emit-events-from-privileged-operations\" style=\"position:relative;\"><a href=\"#n-04-emit-events-from-privileged-operations\" aria-label=\"n 04 emit events from privileged operations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-04] Emit events from privileged operations</h2>\n<p>Consider adding events to protected functions that change contract state. This enables you to monitor off chain for suspicious activity, and allows end users to observe and trust changes to these parameters.</p>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L163\"><code>VoterId#setTokenURI</code></a></li>\n<li><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleIdentity.sol#L60\"><code>MerkleIdentity#setManagement</code></a></li>\n<li><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleIdentity.sol#L67\"><code>MerkleIdentity#setTreeAdder</code></a></li>\n<li><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleIdentity.sol#L75\"><code>MerkleIdentity#setIpfsHash</code></a></li>\n</ul>\n<h2 id=\"n-05-incomplete-natspec-comment\" style=\"position:relative;\"><a href=\"#n-05-incomplete-natspec-comment\" aria-label=\"n 05 incomplete natspec comment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-05] Incomplete natspec comment</h2>\n<p>The <code>@notice</code> natspec comment on <code>VoterID</code> is <a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L10\">incomplete</a>.</p>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this contest, 40 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/95\">report highlighted below</a> by <strong>IllIllI</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/193\">Dravee</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/258\">defsec</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/186\">gzeon</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/264\">eccentricexit</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/7\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/131\">0xYamiDancho</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/222\">joestakey</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/18\">oyc_109</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/215\">reassor</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/93\">robee</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/10\">samruna</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/103\">0xf15ers</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/44\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/221\">Tomio</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/219\">0xkatana</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/100\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/233\">rfa</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/202\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/279\">TerrierLover</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/217\">ilan</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/248\">simon135</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/203\">CertoraInc</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/132\">Waze</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/97\">ellahi</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/71\">minhquanym</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/81\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/250\">z3s</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/225\">delfin454000</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/177\">GimelSec</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/276\">horsefacts</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/90\">juicy</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/183\">rajatbeladiya</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/199\">PPrieditis</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/61\">csanuragjain</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/281\">Hawkeye</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/208\">VAD37</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/151\">Picodes</a>, <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/77\">Ruhum</a>, and <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/114\">ACai</a>.</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"left\">Title</th>\n<th align=\"center\">Instances</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td align=\"left\"><code>for</code>-loops should be broken out of earlier</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>2</td>\n<td align=\"left\">Multiple <code>address</code> mappings can be combined into a single <code>mapping</code> of an <code>address</code> to a <code>struct</code>, where appropriate</td>\n<td align=\"center\">3</td>\n</tr>\n<tr>\n<td>3</td>\n<td align=\"left\">State variables only set in the constructor should be declared <code>immutable</code></td>\n<td align=\"center\">5</td>\n</tr>\n<tr>\n<td>4</td>\n<td align=\"left\">Using <code>calldata</code> instead of <code>memory</code> for read-only arguments in <code>external</code> functions saves gas</td>\n<td align=\"center\">11</td>\n</tr>\n<tr>\n<td>5</td>\n<td align=\"left\">State variables should be cached in stack variables rather than re-reading them from storage</td>\n<td align=\"center\">28</td>\n</tr>\n<tr>\n<td>6</td>\n<td align=\"left\"><code>&#x3C;x> += &#x3C;y></code> costs more gas than <code>&#x3C;x> = &#x3C;x> + &#x3C;y></code> for state variables</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>7</td>\n<td align=\"left\"><code>internal</code> functions only called once can be inlined to save gas</td>\n<td align=\"center\">3</td>\n</tr>\n<tr>\n<td>8</td>\n<td align=\"left\">Add <code>unchecked {}</code> for subtractions where the operands cannot underflow because of a previous <code>require()</code></td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>9</td>\n<td align=\"left\"><code>&#x3C;array>.length</code> should not be looked up in every loop of a <code>for</code>-loop</td>\n<td align=\"center\">7</td>\n</tr>\n<tr>\n<td>10</td>\n<td align=\"left\"><code>++i</code>/<code>i++</code> should be <code>unchecked{++i}</code>/<code>unchecked{++i}</code> when it is not possible for them to overflow, as is the case when used in <code>for</code>- and <code>while</code>-loops</td>\n<td align=\"center\">6</td>\n</tr>\n<tr>\n<td>11</td>\n<td align=\"left\"><code>require()</code>/<code>revert()</code> strings longer than 32 bytes cost extra gas</td>\n<td align=\"center\">19</td>\n</tr>\n<tr>\n<td>12</td>\n<td align=\"left\">Not using the named return variables when a function returns, wastes deployment gas</td>\n<td align=\"center\">5</td>\n</tr>\n<tr>\n<td>13</td>\n<td align=\"left\">Remove unused local variable</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>14</td>\n<td align=\"left\">Using <code>bool</code>s for storage incurs overhead</td>\n<td align=\"center\">4</td>\n</tr>\n<tr>\n<td>15</td>\n<td align=\"left\"><code>public</code> library function should be made <code>private</code>/<code>internal</code></td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>16</td>\n<td align=\"left\">Move <code>if-else</code> to inside function call to save deployment gas</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>17</td>\n<td align=\"left\">Use a more recent version of solidity</td>\n<td align=\"center\">12</td>\n</tr>\n<tr>\n<td>18</td>\n<td align=\"left\">It costs more gas to initialize variables to zero than to let the default of zero be applied</td>\n<td align=\"center\">9</td>\n</tr>\n<tr>\n<td>19</td>\n<td align=\"left\"><code>++i</code> costs less gas than <code>++i</code>, especially when it’s used in <code>for</code>-loops (<code>--i</code>/<code>i--</code> too)</td>\n<td align=\"center\">7</td>\n</tr>\n<tr>\n<td>20</td>\n<td align=\"left\">Using <code>private</code> rather than <code>public</code> for constants, saves gas</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>21</td>\n<td align=\"left\">Duplicated <code>require()</code>/<code>revert()</code> checks should be refactored to a modifier or function</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>22</td>\n<td align=\"left\">Stack variable used as a cheaper cache for a state variable is only used once</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>23</td>\n<td align=\"left\"><code>require()</code> or <code>revert()</code> statements that check input arguments should be at the top of the function</td>\n<td align=\"center\">3</td>\n</tr>\n<tr>\n<td>24</td>\n<td align=\"left\">Use custom errors rather than <code>revert()</code>/<code>require()</code> strings to save deployment gas</td>\n<td align=\"center\">67</td>\n</tr>\n<tr>\n<td>25</td>\n<td align=\"left\"><code>public</code> functions not called by the contract should be declared <code>external</code> instead</td>\n<td align=\"center\">8</td>\n</tr>\n</tbody>\n</table>\n<p>Total: 209 instances over 25 classes</p>\n<h2 id=\"1-for-loops-should-be-broken-out-of-earlier\" style=\"position:relative;\"><a href=\"#1-for-loops-should-be-broken-out-of-earlier\" aria-label=\"1 for loops should be broken out of earlier permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[1] <code>for</code>-loops should be broken out of earlier</h2>\n<p>If it’s known that the function will revert after the <code>for</code>-loop completes, <code>break</code> should be used to end the loop early</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">141</span><span class=\"mtk1\">          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardFunding</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">142</span><span class=\"mtk1\">              </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getMaximumRewards</span><span class=\"mtk1\">(</span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">i</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">143</span><span class=\"mtk1\">              </span><span class=\"mtk3\">// transfer the tokens from pool-creator to this contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">144</span><span class=\"mtk1\">              </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L141-L144\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L141-L144</a></p>\n<h2 id=\"2-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct-where-appropriate\" style=\"position:relative;\"><a href=\"#2-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct-where-appropriate\" aria-label=\"2 multiple address mappings can be combined into a single mapping of an address to a struct where appropriate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[2] Multiple <code>address</code> mappings can be combined into a single <code>mapping</code> of an <code>address</code> to a <code>struct</code>, where appropriate</h2>\n<p>Saves a storage slot for the mapping. Depending on the circumstances and sizes of types, can avoid a Gsset (20000 gas) per mapping combined. Reads and subsequent writes can also be cheaper when a function requires both values and they both fit in the same storage slot</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VoterID</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">18</span><span class=\"mtk1\">       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">19</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">20</span><span class=\"mtk1\">       </span><span class=\"mtk3\">// Mapping from owner to operator approvals</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">21</span><span class=\"mtk1\">       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operatorApprovals</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L18-L21\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L18-L21</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VoterID</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">28</span><span class=\"mtk1\">       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ownershipMapIndexToToken</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ownershipMapTokenToIndex</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L28-L29\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L28-L29</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">56</span><span class=\"mtk1\">      </span><span class=\"mtk3\">// pools[poolId] = poolStruct</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">57</span><span class=\"mtk1\">      </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Pool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pools</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">      </span><span class=\"mtk3\">// metadatas[poolId] = metadataStruct</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">59</span><span class=\"mtk1\">      </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Metadata</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">metadatas</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">      </span><span class=\"mtk3\">// taxes[poolId] = taxesCollected[rewardIndex]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">61</span><span class=\"mtk1\">      </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">[]) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">taxes</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L56-L61\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L56-L61</a></p>\n<h2 id=\"3-state-variables-only-set-in-the-constructor-should-be-declared-immutable\" style=\"position:relative;\"><a href=\"#3-state-variables-only-set-in-the-constructor-should-be-declared-immutable\" aria-label=\"3 state variables only set in the constructor should be declared immutable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[3] State variables only set in the constructor should be declared <code>immutable</code></h2>\n<p>Avoids a Gsset (20000 gas) in the constructor, and replaces each Gwarmacces (100 gas) with a <code>PUSH32</code> (3 gas).</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleEligibility</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">16</span><span class=\"mtk1\">       </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gateMaster</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleEligibility.sol#L16\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleEligibility.sol#L16</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">51</span><span class=\"mtk1\">       </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">globalBeneficiary</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L51\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L51</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VoterID</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">65</span><span class=\"mtk1\">       </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_name</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L65\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L65</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VoterID</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">4</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">       </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_symbol</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L66\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L66</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VoterID</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">5</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">74</span><span class=\"mtk1\">       </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_minter</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L74\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L74</a></p>\n<h2 id=\"4-using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas\" style=\"position:relative;\"><a href=\"#4-using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas\" aria-label=\"4 using calldata instead of memory for read only arguments in external functions saves gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[4] Using <code>calldata</code> instead of <code>memory</code> for read-only arguments in <code>external</code> functions saves gas</h2>\n<p>When a function with a <code>memory</code> array is called externally, the <code>abi.decode()</code> step has to use a for-loop to copy each index of the <code>calldata</code> to the <code>memory</code> index. Each iteration of this for-loop costs at least 60 gas (i.e. <code>60 * &#x3C;mem_array>.length</code>). Using <code>calldata</code> directly, obliviates the need for such a loop in the contract code and runtime execution. Structs have the same overhead as an array of length one</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IVoterID</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">12</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createIdentityFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uri</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/interfaces/IVoterID.sol#L12\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/interfaces/IVoterID.sol#L12</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleEligibility</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">85</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">passThruGate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">index</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleEligibility.sol#L85\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleEligibility.sol#L85</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleIdentity</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">116</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">merkleIndex</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uri</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addressProof</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">metadataProof</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleIdentity.sol#L116\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleIdentity.sol#L116</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleIdentity</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">4</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">116</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">merkleIndex</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uri</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addressProof</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">metadataProof</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleIdentity.sol#L116\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleIdentity.sol#L116</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleIdentity</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">5</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">116</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">merkleIndex</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uri</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addressProof</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">metadataProof</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleIdentity.sol#L116\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleIdentity.sol#L116</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleResistor</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">6</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">134</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">treeIndex</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">destination</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vestingTime</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minTotalPayments</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxTotalPayments</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleResistor.sol#L134\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleResistor.sol#L134</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleVesting</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">7</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">treeIndex</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">destination</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalCoins</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endTime</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lockPeriodEndTime</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleVesting.sol#L104\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleVesting.sol#L104</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">8</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">95</span><span class=\"mtk1\">           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardsWeiPerSecondPerToken</span><span class=\"mtk1\">,</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L95\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L95</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">9</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">99</span><span class=\"mtk1\">           </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardTokenAddresses</span><span class=\"mtk1\">,</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L99\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L99</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VoterID</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">10</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">162</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setTokenURI</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uri</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ownerOnly</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L162\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L162</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IVoterID</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">11</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">12</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createIdentityFor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uri</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/interfaces/IVoterID.sol#L12\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/interfaces/IVoterID.sol#L12</a></p>\n<h2 id=\"5-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage\" style=\"position:relative;\"><a href=\"#5-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage\" aria-label=\"5 state variables should be cached in stack variables rather than re reading them from storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[5] State variables should be cached in stack variables rather than re-reading them from storage</h2>\n<p>The instances below point to the second+ access of a state variable within a function. Caching will replace each Gwarmaccess (100 gas) with a much cheaper stack read.\nLess obvious fixes/optimizations include having local storage variables of mappings within state variable mappings or mappings within state variable structs, having local storage variables of structs within mappings, having local memory caches of state variable structs, or having local caches of state variable contracts/addresses.</p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/95\">See original submission</a> for details.</p>\n<h2 id=\"6-x--y-costs-more-gas-than-x--x--y-for-state-variables\" style=\"position:relative;\"><a href=\"#6-x--y-costs-more-gas-than-x--x--y-for-state-variables\" aria-label=\"6 x  y costs more gas than x  x  y for state variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[6] <code>&#x3C;x> += &#x3C;y></code> costs more gas than <code>&#x3C;x> = &#x3C;x> + &#x3C;y></code> for state variables</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleEligibility</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">47</span><span class=\"mtk1\">           </span><span class=\"mtk12\">numGates</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleEligibility.sol#L47\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleEligibility.sol#L47</a></p>\n<h2 id=\"7-internal-functions-only-called-once-can-be-inlined-to-save-gas\" style=\"position:relative;\"><a href=\"#7-internal-functions-only-called-once-can-be-inlined-to-save-gas\" aria-label=\"7 internal functions only called once can be inlined to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[7] <code>internal</code> functions only called once can be inlined to save gas</h2>\n<p>Not inlining costs 20 to 40 gas because of two extra <code>JUMP</code> instructions and additional stack operations needed for function calls.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">137</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">fundPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L137\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L137</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VoterID</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">304</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L304\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L304</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VoterID</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">343</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L343\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L343</a></p>\n<h2 id=\"8-add-unchecked--for-subtractions-where-the-operands-cannot-underflow-because-of-a-previous-require\" style=\"position:relative;\"><a href=\"#8-add-unchecked--for-subtractions-where-the-operands-cannot-underflow-because-of-a-previous-require\" aria-label=\"8 add unchecked  for subtractions where the operands cannot underflow because of a previous require permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[8] Add <code>unchecked {}</code> for subtractions where the operands cannot underflow because of a previous <code>require()</code></h2>\n<p><code>require(a &#x3C;= b); x = b - a</code> => <code>require(a &#x3C;= b); unchecked { x = b - a }</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleVesting</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">157</span><span class=\"mtk1\">               </span><span class=\"mtk12\">currentWithdrawal</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">tranche</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastWithdrawalTime</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">tranche</span><span class=\"mtk1\">.</span><span class=\"mtk12\">coinsPerSecond</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleVesting.sol#L157\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleVesting.sol#L157</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">187</span><span class=\"mtk1\">               </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maximumDepositWei</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">totalDepositsWei</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L187\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L187</a></p>\n<h2 id=\"9-arraylength-should-not-be-looked-up-in-every-loop-of-a-for-loop\" style=\"position:relative;\"><a href=\"#9-arraylength-should-not-be-looked-up-in-every-loop-of-a-for-loop\" aria-label=\"9 arraylength should not be looked up in every loop of a for loop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[9] <code>&#x3C;array>.length</code> should not be looked up in every loop of a <code>for</code>-loop</h2>\n<p>The overheads outlined below are <em>PER LOOP</em>, excluding the first loop</p>\n<ul>\n<li>storage arrays incur a Gwarmaccess (100 gas)</li>\n<li>memory arrays use <code>MLOAD</code> (3 gas)</li>\n<li>calldata arrays use <code>CALLDATALOAD</code> (3 gas)</li>\n</ul>\n<p>Caching the length changes each of these to a <code>DUP&#x3C;N></code> (3 gas), and gets rid of the extra <code>DUP&#x3C;N></code> needed to store the stack offset</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleLib</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">22</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleLib.sol#L22\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleLib.sol#L22</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewardTokenAddresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L115\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L115</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">141</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardFunding</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L141\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L141</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"74\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">4</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">168</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardsWeiPerSecondPerToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L168\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L168</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"75\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">5</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">224</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L224\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L224</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"76\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">6</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">249</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L249\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L249</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"77\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">7</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">266</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L266\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L266</a></p>\n<h2 id=\"10-ii-should-be-uncheckediuncheckedi-when-it-is-not-possible-for-them-to-overflow-as-is-the-case-when-used-in-for--and-while-loops\" style=\"position:relative;\"><a href=\"#10-ii-should-be-uncheckediuncheckedi-when-it-is-not-possible-for-them-to-overflow-as-is-the-case-when-used-in-for--and-while-loops\" aria-label=\"10 ii should be uncheckediuncheckedi when it is not possible for them to overflow as is the case when used in for  and while loops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[10] <code>++i</code>/<code>i++</code> should be <code>unchecked{++i}</code>/<code>unchecked{++i}</code> when it is not possible for them to overflow, as is the case when used in <code>for</code>- and <code>while</code>-loops</h2>\n<p>The <code>unchecked</code> keyword is new in solidity version 0.8.0, so this only applies to that version or higher, which these instances are. This saves 30-40 gas <a href=\"https://gist.github.com/hrkrshnn/ee8fabd532058307229d65dcd5836ddc#the-increment-in-for-loop-post-condition-can-be-made-unchecked\"><em>PER LOOP</em></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"78\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewardTokenAddresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L115\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L115</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"79\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">141</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardFunding</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L141\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L141</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"80\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">168</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardsWeiPerSecondPerToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L168\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L168</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"81\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">4</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">224</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L224\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L224</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"82\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">5</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">249</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L249\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L249</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"83\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">6</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">266</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L266\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L266</a></p>\n<h2 id=\"11-requirerevert-strings-longer-than-32-bytes-cost-extra-gas\" style=\"position:relative;\"><a href=\"#11-requirerevert-strings-longer-than-32-bytes-cost-extra-gas\" aria-label=\"11 requirerevert strings longer than 32 bytes cost extra gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[11] <code>require()</code>/<code>revert()</code> strings longer than 32 bytes cost extra gas</h2>\n<p>See <a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/95\">original submission</a> for full details.</p>\n<h2 id=\"12-not-using-the-named-return-variables-when-a-function-returns-wastes-deployment-gas\" style=\"position:relative;\"><a href=\"#12-not-using-the-named-return-variables-when-a-function-returns-wastes-deployment-gas\" aria-label=\"12 not using the named return variables when a function returns wastes deployment gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[12] Not using the named return variables when a function returns, wastes deployment gas</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"84\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">FixedPricePassThruGate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">40</span><span class=\"mtk1\">           </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ethCost</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/FixedPricePassThruGate.sol#L40\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/FixedPricePassThruGate.sol#L40</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"85\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleEligibility</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">50</span><span class=\"mtk1\">           </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numGates</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleEligibility.sol#L50\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleEligibility.sol#L50</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"86\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleEligibility</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">77</span><span class=\"mtk1\">           </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">countValid</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">totalWithdrawals</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maxWithdrawalsTotal</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">root</span><span class=\"mtk1\">.</span><span class=\"mtk11\">verifyProof</span><span class=\"mtk1\">(</span><span class=\"mtk12\">leaf</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleEligibility.sol#L77\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleEligibility.sol#L77</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"87\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SpeedBumpPriceGate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">4</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">56</span><span class=\"mtk1\">               </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">priceFloor</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/SpeedBumpPriceGate.sol#L56\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/SpeedBumpPriceGate.sol#L56</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"88\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SpeedBumpPriceGate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">5</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">               </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastPrice</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">decay</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/SpeedBumpPriceGate.sol#L58\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/SpeedBumpPriceGate.sol#L58</a></p>\n<h2 id=\"13-remove-unused-local-variable\" style=\"position:relative;\"><a href=\"#13-remove-unused-local-variable\" aria-label=\"13 remove unused local variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[13] Remove unused local variable</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"89\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">FixedPricePassThruGate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">53</span><span class=\"mtk1\">               (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sent</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">beneficiary</span><span class=\"mtk1\">.</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ethCost</span><span class=\"mtk1\">}(</span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/FixedPricePassThruGate.sol#L53\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/FixedPricePassThruGate.sol#L53</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"90\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SpeedBumpPriceGate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">               (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sent</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">gate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">beneficiary</span><span class=\"mtk1\">.</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">}(</span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/SpeedBumpPriceGate.sol#L79\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/SpeedBumpPriceGate.sol#L79</a></p>\n<h2 id=\"14-using-bools-for-storage-incurs-overhead\" style=\"position:relative;\"><a href=\"#14-using-bools-for-storage-incurs-overhead\" aria-label=\"14 using bools for storage incurs overhead permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[14] Using <code>bool</code>s for storage incurs overhead</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"91\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Booleans are more expensive than uint256 or any type that takes up a full</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// word because each write operation emits an extra SLOAD to first read the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// slot&#39;s contents, replace the bits taken up by the boolean, and then write</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// back. This is the compiler&#39;s defense against contract upgrades and</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// pointer aliasing, and it cannot be disabled.</span></span></span></code></pre>\n<p><a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/58f635312aa21f947cae5f8578638a85aa2519f5/contracts/security/ReentrancyGuard.sol#L23-L27\">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/58f635312aa21f947cae5f8578638a85aa2519f5/contracts/security/ReentrancyGuard.sol#L23-L27</a>\nUse <code>uint256(1)</code> and <code>uint256(2)</code> for true/false</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"92\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleDropFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawn</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleDropFactory.sol#L29\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleDropFactory.sol#L29</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"93\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleResistor</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">50</span><span class=\"mtk1\">       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialized</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleResistor.sol#L50\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleResistor.sol#L50</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"94\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleVesting</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialized</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleVesting.sol#L38\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleVesting.sol#L38</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"95\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VoterID</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">4</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">21</span><span class=\"mtk1\">       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operatorApprovals</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L21\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L21</a></p>\n<h2 id=\"15-public-library-function-should-be-made-privateinternal\" style=\"position:relative;\"><a href=\"#15-public-library-function-should-be-made-privateinternal\" aria-label=\"15 public library function should be made privateinternal permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[15] <code>public</code> library function should be made <code>private</code>/<code>internal</code></h2>\n<p>Changing from <code>public</code> will remove the compiler-introduced checks for <code>msg.value</code> and decrease the contract’s method ID table size</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"96\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleLib</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">36</span><span class=\"mtk1\">      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">parentHash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleLib.sol#L36\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleLib.sol#L36</a></p>\n<h2 id=\"16-move-if-else-to-inside-function-call-to-save-deployment-gas\" style=\"position:relative;\"><a href=\"#16-move-if-else-to-inside-function-call-to-save-deployment-gas\" aria-label=\"16 move if else to inside function call to save deployment gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[16] Move <code>if-else</code> to inside function call to save deployment gas</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"97\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleLib</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">37</span><span class=\"mtk1\">          </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">a</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">b</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">              </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk12\">b</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">39</span><span class=\"mtk1\">          } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">40</span><span class=\"mtk1\">              </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">b</span><span class=\"mtk1\">, </span><span class=\"mtk12\">a</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">41</span><span class=\"mtk1\">          }</span></span></span></code></pre>\n<p>change to <code>return keccak256(a &#x3C; b ? abi.encode(a, b) : abi.encode(b, a)</code>\n<a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleLib.sol#L37-L41\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleLib.sol#L37-L41</a></p>\n<h2 id=\"17-use-a-more-recent-version-of-solidity\" style=\"position:relative;\"><a href=\"#17-use-a-more-recent-version-of-solidity\" aria-label=\"17 use a more recent version of solidity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[17] Use a more recent version of solidity</h2>\n<p>Use a solidity version of at least 0.8.10 to have external calls skip contract existence checks if the external call has a return value</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"98\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">FixedPricePassThruGate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">   </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">9</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/FixedPricePassThruGate.sol#L3\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/FixedPricePassThruGate.sol#L3</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"99\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IVoterID</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">   </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">9</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/interfaces/IVoterID.sol#L3\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/interfaces/IVoterID.sol#L3</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"100\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleDropFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">   </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">9</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleDropFactory.sol#L3\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleDropFactory.sol#L3</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"101\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleEligibility</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">4</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">   </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">9</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleEligibility.sol#L3\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleEligibility.sol#L3</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"102\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleIdentity</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">5</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">   </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">9</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleIdentity.sol#L3\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleIdentity.sol#L3</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"103\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleLib</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">6</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">   </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">9</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleLib.sol#L3\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleLib.sol#L3</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"104\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleResistor</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">7</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">   </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">9</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleResistor.sol#L3\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleResistor.sol#L3</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"105\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleVesting</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">8</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">   </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">9</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleVesting.sol#L3\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleVesting.sol#L3</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"106\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">9</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">   </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">9</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L3\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L3</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"107\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SpeedBumpPriceGate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">10</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">   </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">9</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/SpeedBumpPriceGate.sol#L3\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/SpeedBumpPriceGate.sol#L3</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"108\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VoterID</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">11</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">   </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">9</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L3\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L3</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"109\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IVoterID</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">12</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">   </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">9</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/interfaces/IVoterID.sol#L3\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/interfaces/IVoterID.sol#L3</a></p>\n<h2 id=\"18-it-costs-more-gas-to-initialize-variables-to-zero-than-to-let-the-default-of-zero-be-applied\" style=\"position:relative;\"><a href=\"#18-it-costs-more-gas-to-initialize-variables-to-zero-than-to-let-the-default-of-zero-be-applied\" aria-label=\"18 it costs more gas to initialize variables to zero than to let the default of zero be applied permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[18] It costs more gas to initialize variables to zero than to let the default of zero be applied</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"110\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleLib</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">22</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleLib.sol#L22\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleLib.sol#L22</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"111\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleResistor</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">176</span><span class=\"mtk1\">           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentWithdrawal</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleResistor.sol#L176\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleResistor.sol#L176</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"112\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleVesting</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">150</span><span class=\"mtk1\">           </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentWithdrawal</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleVesting.sol#L150\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleVesting.sol#L150</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"113\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">4</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewardTokenAddresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L115\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L115</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"114\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">5</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">141</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardFunding</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L141\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L141</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"115\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">6</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">168</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardsWeiPerSecondPerToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L168\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L168</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"116\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">7</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">224</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L224\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L224</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"117\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">8</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">249</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L249\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L249</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"118\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">9</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">266</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L266\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L266</a></p>\n<h2 id=\"19-i-costs-less-gas-than-i-especially-when-its-used-in-for-loops---ii---too\" style=\"position:relative;\"><a href=\"#19-i-costs-less-gas-than-i-especially-when-its-used-in-for-loops---ii---too\" aria-label=\"19 i costs less gas than i especially when its used in for loops   ii   too permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[19] <code>++i</code> costs less gas than <code>++i</code>, especially when it’s used in <code>for</code>-loops (<code>--i</code>/<code>i--</code> too)</h2>\n<p>Saves 6 gas <em>PER LOOP</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"119\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewardTokenAddresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L115\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L115</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"120\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">141</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardFunding</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L141\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L141</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"121\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">168</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardsWeiPerSecondPerToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L168\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L168</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"122\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">4</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">224</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L224\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L224</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"123\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">5</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">249</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L249\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L249</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"124\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">6</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">266</span><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L266\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L266</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"125\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleLib</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">7</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">22</span><span class=\"mtk1\">          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleLib.sol#L22\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/MerkleLib.sol#L22</a></p>\n<h2 id=\"20-using-private-rather-than-public-for-constants-saves-gas\" style=\"position:relative;\"><a href=\"#20-using-private-rather-than-public-for-constants-saves-gas\" aria-label=\"20 using private rather than public for constants saves gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[20] Using <code>private</code> rather than <code>public</code> for constants, saves gas</h2>\n<p>If needed, the value can be read from the verified contract source code. Savings are due to the compiler not having to create non-payable getter functions for deployment calldata, and not adding another entry to the method ID table</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"126\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleResistor</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">59</span><span class=\"mtk1\">       </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PRECISION</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1000000</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleResistor.sol#L59\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleResistor.sol#L59</a></p>\n<h2 id=\"21-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function\" style=\"position:relative;\"><a href=\"#21-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function\" aria-label=\"21 duplicated requirerevert checks should be refactored to a modifier or function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[21] Duplicated <code>require()</code>/<code>revert()</code> checks should be refactored to a modifier or function</h2>\n<p>Saves deployment costs</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"127\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">id</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Uninitialized pool&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L182\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L182</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"128\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">234</span><span class=\"mtk1\">           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Token transfer failed&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L234\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L234</a></p>\n<h2 id=\"22-stack-variable-used-as-a-cheaper-cache-for-a-state-variable-is-only-used-once\" style=\"position:relative;\"><a href=\"#22-stack-variable-used-as-a-cheaper-cache-for-a-state-variable-is-only-used-once\" aria-label=\"22 stack variable used as a cheaper cache for a state variable is only used once permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[22] Stack variable used as a cheaper cache for a state variable is only used once</h2>\n<p>If the variable is only accessed once, it’s cheaper to use the state variable directly that one time</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"129\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VoterID</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">152</span><span class=\"mtk1\">           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">oldOwner</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_owner_</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L152\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L152</a></p>\n<h2 id=\"23-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function\" style=\"position:relative;\"><a href=\"#23-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function\" aria-label=\"23 require or revert statements that check input arguments should be at the top of the function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[23] <code>require()</code> or <code>revert()</code> statements that check input arguments should be at the top of the function</h2>\n<p>Checks that involve constants should come before checks that involve state variables</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"130\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">316</span><span class=\"mtk1\">           </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newTaxPerCapita</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Tax too high&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L316\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/PermissionlessBasicPoolFactory.sol#L316</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"131\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">112</span><span class=\"mtk1\">          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardsWeiPerSecondPerToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">rewardTokenAddresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Rewards and reward token arrays must be same length&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L112\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L112</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"132\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessBasicPoolFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">159</span><span class=\"mtk1\">          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">id</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Uninitialized pool&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L159\">https://github.com/code-423n4/2022-05-factorydao/blob/db415804c06143d8af6880bc4cda7222e5463c0e/contracts/PermissionlessBasicPoolFactory.sol#L159</a></p>\n<h2 id=\"24-use-custom-errors-rather-than-revertrequire-strings-to-save-deployment-gas\" style=\"position:relative;\"><a href=\"#24-use-custom-errors-rather-than-revertrequire-strings-to-save-deployment-gas\" aria-label=\"24 use custom errors rather than revertrequire strings to save deployment gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[24] Use custom errors rather than <code>revert()</code>/<code>require()</code> strings to save deployment gas</h2>\n<p>Custom errors are available from solidity version 0.8.4. The instances below match or exceed that version</p>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/95\">See original submission</a> for details.</p>\n<h2 id=\"25-public-functions-not-called-by-the-contract-should-be-declared-external-instead\" style=\"position:relative;\"><a href=\"#25-public-functions-not-called-by-the-contract-should-be-declared-external-instead\" aria-label=\"25 public functions not called by the contract should be declared external instead permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[25] <code>public</code> functions not called by the contract should be declared <code>external</code> instead</h2>\n<p>Contracts <a href=\"https://docs.soliditylang.org/en/latest/contracts.html#function-overriding\">are allowed</a> to override their parents’ functions and change the visibility from <code>external</code> to <code>public</code> and can save gas by doing so.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"133\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleDropFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">49</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addMerkleTree</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newRoot</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ipfsHash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenBalance</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleDropFactory.sol#L49\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleDropFactory.sol#L49</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"134\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleDropFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">88</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">treeIndex</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">destination</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleDropFactory.sol#L88\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleDropFactory.sol#L88</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"135\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleIdentity</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">140</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">merkleIndex</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleIdentity.sol#L140\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleIdentity.sol#L140</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"136\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleIdentity</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">4</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">152</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isEligible</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">merkleIndex</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleIdentity.sol#L152\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleIdentity.sol#L152</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"137\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleLib</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">5</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">17</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">verifyProof</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">root</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">leaf</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleLib.sol#L17\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleLib.sol#L17</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"138\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleResistor</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">6</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">80</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addMerkleTree</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newRoot</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ipfsHash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minEndTime</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxEndTime</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pctUpFront</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenBalance</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleResistor.sol#L80\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleResistor.sol#L80</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"139\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">MerkleVesting</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">7</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">62</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addMerkleRoot</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newRoot</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ipfsHash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenBalance</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleVesting.sol#L62\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/MerkleVesting.sol#L62</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"140\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VoterID</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">   #</span><span class=\"mtk7\">8</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">270</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isApprovedForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operator</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L270\">https://github.com/code-423n4/2022-05-factorydao/blob/e22a562c01c533b8765229387894cc0cb9bed116/contracts/VoterID.sol#L270</a></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/95#issuecomment-1122159008\">illuzen (FactoryDAO) commented</a>:</strong></p>\n<blockquote>\n<p>All duplicates except<br>\n2: valid, I guess, but negligible benefit<br>\n14: valid, but negligible<br>\n15: valid<br>\n20: valid</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/95#issuecomment-1146708232\">Justin Goro (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Issue 21 is QA and is an opinion rather than a clear improvement. The dev may have had reasons for going the route they did.</p>\n<p>Note to wardens: for deployment gas improvements, unless the improvements are significant and impact final contract size significantly, these optimizations are the least important since they have no impact on the end user of the contract. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-05-factorydao-findings/issues/95#issuecomment-1157183708\">Justin Goro (judge) commented</a>:</strong></p>\n<blockquote>\n<p>There were 25 improvements reported. An impact score has been assigned to each. 0 indicates either that the impact is negligible, the improvement is invalid or the item is not actually a gas optimization. 1 indicates a valid but low or negligible improvement and 2 indicates a significant improvement worth serious consideration.</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"left\">Title</th>\n<th align=\"center\">Impact</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td align=\"left\"><code>for</code>-loops should be broken out of earlier</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>2</td>\n<td align=\"left\">Multiple <code>address</code> mappings can be combined into a single <code>mapping</code> of an <code>address</code> to a <code>struct</code>, where appropriate</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>3</td>\n<td align=\"left\">State variables only set in the constructor should be declared <code>immutable</code></td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>4</td>\n<td align=\"left\">Using <code>calldata</code> instead of <code>memory</code> for read-only arguments in <code>external</code> functions saves gas</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>5</td>\n<td align=\"left\">State variables should be cached in stack variables rather than re-reading them from storage</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>6</td>\n<td align=\"left\"><code>&#x3C;x> += &#x3C;y></code> costs more gas than <code>&#x3C;x> = &#x3C;x> + &#x3C;y></code> for state variables</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>7</td>\n<td align=\"left\"><code>internal</code> functions only called once can be inlined to save gas</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>8</td>\n<td align=\"left\">Add <code>unchecked {}</code> for subtractions where the operands cannot underflow because of a previous <code>require()</code></td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>9</td>\n<td align=\"left\"><code>&#x3C;array>.length</code> should not be looked up in every loop of a <code>for</code>-loop</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>10</td>\n<td align=\"left\"><code>++i</code>/<code>i++</code> should be <code>unchecked{++i}</code>/<code>unchecked{++i}</code> when it is not possible for them to overflow, as is the case when used in <code>for</code>- and <code>while</code>-loops</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>11</td>\n<td align=\"left\"><code>require()</code>/<code>revert()</code> strings longer than 32 bytes cost extra gas</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>12</td>\n<td align=\"left\">Not using the named return variables when a function returns, wastes deployment gas</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td>13</td>\n<td align=\"left\">Remove unused local variable</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>14</td>\n<td align=\"left\">Using <code>bool</code>s for storage incurs overhead</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>15</td>\n<td align=\"left\"><code>public</code> library function should be made <code>private</code>/<code>internal</code></td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>16</td>\n<td align=\"left\">Move <code>if-else</code> to inside function call to save deployment gas</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td>17</td>\n<td align=\"left\">Use a more recent version of solidity</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>18</td>\n<td align=\"left\">It costs more gas to initialize variables to zero than to let the default of zero be applied</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>19</td>\n<td align=\"left\"><code>++i</code> costs less gas than <code>++i</code>, especially when it’s used in <code>for</code>-loops (<code>--i</code>/<code>i--</code> too)</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>20</td>\n<td align=\"left\">Using <code>private</code> rather than <code>public</code> for constants, saves gas</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>21</td>\n<td align=\"left\">Duplicated <code>require()</code>/<code>revert()</code> checks should be refactored to a modifier or function</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td>22</td>\n<td align=\"left\">Stack variable used as a cheaper cache for a state variable is only used once</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td>23</td>\n<td align=\"left\"><code>require()</code> or <code>revert()</code> statements that check input arguments should be at the top of the function</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>24</td>\n<td align=\"left\">Use custom errors rather than <code>revert()</code>/<code>require()</code> strings to save deployment gas</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>25</td>\n<td align=\"left\"><code>public</code> functions not called by the contract should be declared <code>external</code> instead</td>\n<td align=\"center\">1</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-3\">High Risk Findings (3)</a></p>\n<ul>\n<li><a href=\"#h-01-speedbumppricegate-excess-ether-did-not-return-to-the-user\">[H-01] SpeedBumpPriceGate: Excess ether did not return to the user</a></li>\n<li><a href=\"#h-02-dos-blacklisted-user-may-prevent-withdrawexcessrewards\">[H-02] DoS: Blacklisted user may prevent <code>withdrawExcessRewards()</code></a></li>\n<li><a href=\"#h-03-merklevesting-withdrawal-does-not-verify-that-tokens-were-transferred-successfully\">[H-03] MerkleVesting withdrawal does not verify that tokens were transferred successfully</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-21\">Medium Risk Findings (21)</a></p>\n<ul>\n<li><a href=\"#m-01-speedbumppricegatesoladdgate-lack-of-input-validation-may-casue-div-by-0-error\">[M-01] <code>SpeedBumpPriceGate.sol#addGate()</code> Lack of input validation may casue div by 0 error</a></li>\n<li><a href=\"#m-02-malicious-token-reward-could-disable-withdrawals\">[M-02] Malicious token reward could disable withdrawals</a></li>\n<li><a href=\"#m-03-safetransferfrom-is-recommended-instead-of-transfer-1\">[M-03] safeTransferFrom is recommended instead of transfer (1)</a></li>\n<li><a href=\"#m-04-merkle-leaves-are-the-same-length-as-the-parents-that-are-hashed\">[M-04] Merkle leaves are the same length as the parents that are hashed</a></li>\n<li><a href=\"#m-05-merkledropfactorydeposittokens--does-not-require-the-tree-to-exist\">[M-05] <code>MerkleDropFactory.depositTokens()</code>  does not require the tree to exist</a></li>\n<li><a href=\"#m-06-wrong-out-of-range-check\">[M-06] wrong out of range check</a></li>\n<li><a href=\"#m-07-getrewards-in-permissionlessbasicpoolfactory-calculate-wrong-reward-amount-for-receiptid0\">[M-07] getRewards() in PermissionlessBasicPoolFactory calculate wrong reward amount for receiptId==0</a></li>\n<li><a href=\"#m-08-a-transfer-that-is-not-validated-its-result\">[M-08] A transfer that is not validated its result.</a></li>\n<li><a href=\"#m-09-rebasing-tokens-go-to-the-pool-owner-or-remain-locked-in-the-various-contracts\">[M-09] Rebasing tokens go to the pool owner, or remain locked in the various contracts</a></li>\n<li><a href=\"#m-10-unbounded-loop-in-withdraw-may-cause-rewards-to-be-locked-in-the-contract\">[M-10] Unbounded loop in <code>withdraw()</code> may cause rewards to be locked in the contract</a></li>\n<li><a href=\"#m-11-pool-owners-can-prevent-the-payment-of-taxes\">[M-11] Pool owners can prevent the payment of taxes</a></li>\n<li><a href=\"#m-12-pool-owners-can-prevent-withdrawals-of-specific-receipts\">[M-12] Pool owners can prevent withdrawals of specific receipts</a></li>\n<li><a href=\"#m-13-amount-requires-to-be-updated-to-contract-balance-increase-1\">[M-13] amount requires to be updated to contract balance increase (1)</a></li>\n<li><a href=\"#m-14-merkle-tree-related-contracts-vulnerable-to-cross-chain-replay-attacks\">[M-14] Merkle-tree-related contracts vulnerable to cross-chain-replay attacks</a></li>\n<li><a href=\"#m-15-permissionlessbasicpoolfactorys-withdraw-can-become-frozen-on-zero-reward-token-transfers\">[M-15] PermissionlessBasicPoolFactory’s withdraw can become frozen on zero reward token transfers</a></li>\n<li><a href=\"#m-16-erc20-tokens-with-different-decimals-than-18-leads-to-loss-of-funds\">[M-16] ERC20 tokens with different decimals than 18 leads to loss of funds</a></li>\n<li><a href=\"#m-17-owner-of-a-pool-may-prevent-any-taxes-being-withdrawn\">[M-17] Owner of a pool may prevent any taxes being withdrawn</a></li>\n<li><a href=\"#m-18-dos-attacker-may-significantly-increase-the-cost-of-withdrawexcessrewards-by-creating-a-significant-number-of-excess-receipts\">[M-18] DoS: Attacker may significantly increase the cost of <code>withdrawExcessRewards()</code> by creating a significant number of excess receipts</a></li>\n<li><a href=\"#m-19-centralisation-risk-owner-may-abuse-the-tax-rate-to-claim-999-of-pools\">[M-19] Centralisation Risk: Owner may abuse the tax rate to claim 99.9% of pools</a></li>\n<li><a href=\"#m-20-merkleresistor-zero-coinspersecond-will-brick-tranche-initialization-and-withdrawals\">[M-20] MerkleResistor: zero coinsPerSecond will brick tranche initialization and withdrawals</a></li>\n<li><a href=\"#m-21-verification-should-be-leafed-based-and-not-address-based\">[M-21] Verification should be leafed based and not address based</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#l-01-missing-parameter-validations-in-speedbumppricegateaddgate\">L-01 Missing parameter validations in <code>SpeedBumpPriceGate#addGate</code></a></li>\n<li><a href=\"#l-02-voterid-token-can-be-minted-to-the-zero-address\">L-02 <code>VoterID</code> token can be minted to the zero address</a></li>\n<li><a href=\"#l-03-voterid-token-can-be-minted-to-non-erc721-receivers\">L-03 <code>VoterID</code> token can be minted to non-ERC721 receivers</a></li>\n<li><a href=\"#l-04-prefer-safetransfer-and-safetransferfrom-for-erc20-token-transfers\">L-04 Prefer <code>safeTransfer</code> and <code>safeTransferFrom</code> for ERC20 token transfers</a></li>\n<li><a href=\"#l-05-replace-inline-assembly-with-accountcodelength\">L-05 Replace inline assembly with <code>account.code.length</code></a></li>\n<li><a href=\"#l-06-voteridtransferfrom-does-not-distinguish-nonexistent-tokens-from-unapproved-transfers\">L-06 <code>VoterID#transferFrom</code> does not distinguish nonexistent tokens from unapproved transfers</a></li>\n<li><a href=\"#n-01-prefer-two-step-ownership-transfers\">N-01 Prefer two-step ownership transfers</a></li>\n<li><a href=\"#n-02-balanceof-does-not-revert-on-zero-address-query\">N-02 <code>balanceOf</code> does not revert on zero address query</a></li>\n<li><a href=\"#n-03-move-require-check-to-top-of-function\">N-03 Move <code>require</code> check to top of function</a></li>\n<li><a href=\"#n-04-emit-events-from-privileged-operations\">N-04 Emit events from privileged operations</a></li>\n<li><a href=\"#n-05-incomplete-natspec-comment\">N-05 Incomplete natspec comment</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#1-for-loops-should-be-broken-out-of-earlier\">1 <code>for</code>-loops should be broken out of earlier</a></li>\n<li><a href=\"#2-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct-where-appropriate\">2 Multiple <code>address</code> mappings can be combined into a single <code>mapping</code> of an <code>address</code> to a <code>struct</code>, where appropriate</a></li>\n<li><a href=\"#3-state-variables-only-set-in-the-constructor-should-be-declared-immutable\">3 State variables only set in the constructor should be declared <code>immutable</code></a></li>\n<li><a href=\"#4-using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas\">4 Using <code>calldata</code> instead of <code>memory</code> for read-only arguments in <code>external</code> functions saves gas</a></li>\n<li><a href=\"#5-state-variables-should-be-cached-in-stack-variables-rather-than-re-reading-them-from-storage\">5 State variables should be cached in stack variables rather than re-reading them from storage</a></li>\n<li><a href=\"#6-x--y-costs-more-gas-than-x--x--y-for-state-variables\">6 <code>&#x3C;x> += &#x3C;y></code> costs more gas than <code>&#x3C;x> = &#x3C;x> + &#x3C;y></code> for state variables</a></li>\n<li><a href=\"#7-internal-functions-only-called-once-can-be-inlined-to-save-gas\">7 <code>internal</code> functions only called once can be inlined to save gas</a></li>\n<li><a href=\"#8-add-unchecked--for-subtractions-where-the-operands-cannot-underflow-because-of-a-previous-require\">8 Add <code>unchecked {}</code> for subtractions where the operands cannot underflow because of a previous <code>require()</code></a></li>\n<li><a href=\"#9-arraylength-should-not-be-looked-up-in-every-loop-of-a-for-loop\">9 <code>&#x3C;array>.length</code> should not be looked up in every loop of a <code>for</code>-loop</a></li>\n<li><a href=\"#10-ii-should-be-uncheckediuncheckedi-when-it-is-not-possible-for-them-to-overflow-as-is-the-case-when-used-in-for--and-while-loops\">10 <code>++i</code>/<code>i++</code> should be <code>unchecked{++i}</code>/<code>unchecked{++i}</code> when it is not possible for them to overflow, as is the case when used in <code>for</code>- and <code>while</code>-loops</a></li>\n<li><a href=\"#11-requirerevert-strings-longer-than-32-bytes-cost-extra-gas\">11 <code>require()</code>/<code>revert()</code> strings longer than 32 bytes cost extra gas</a></li>\n<li><a href=\"#12-not-using-the-named-return-variables-when-a-function-returns-wastes-deployment-gas\">12 Not using the named return variables when a function returns, wastes deployment gas</a></li>\n<li><a href=\"#13-remove-unused-local-variable\">13 Remove unused local variable</a></li>\n<li><a href=\"#14-using-bools-for-storage-incurs-overhead\">14 Using <code>bool</code>s for storage incurs overhead</a></li>\n<li><a href=\"#15-public-library-function-should-be-made-privateinternal\">15 <code>public</code> library function should be made <code>private</code>/<code>internal</code></a></li>\n<li><a href=\"#16-move-if-else-to-inside-function-call-to-save-deployment-gas\">16 Move <code>if-else</code> to inside function call to save deployment gas</a></li>\n<li><a href=\"#17-use-a-more-recent-version-of-solidity\">17 Use a more recent version of solidity</a></li>\n<li><a href=\"#18-it-costs-more-gas-to-initialize-variables-to-zero-than-to-let-the-default-of-zero-be-applied\">18 It costs more gas to initialize variables to zero than to let the default of zero be applied</a></li>\n<li><a href=\"#19-i-costs-less-gas-than-i-especially-when-its-used-in-for-loops---ii---too\">19 <code>++i</code> costs less gas than <code>++i</code>, especially when it’s used in <code>for</code>-loops (<code>--i</code>/<code>i--</code> too)</a></li>\n<li><a href=\"#20-using-private-rather-than-public-for-constants-saves-gas\">20 Using <code>private</code> rather than <code>public</code> for constants, saves gas</a></li>\n<li><a href=\"#21-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function\">21 Duplicated <code>require()</code>/<code>revert()</code> checks should be refactored to a modifier or function</a></li>\n<li><a href=\"#22-stack-variable-used-as-a-cheaper-cache-for-a-state-variable-is-only-used-once\">22 Stack variable used as a cheaper cache for a state variable is only used once</a></li>\n<li><a href=\"#23-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function\">23 <code>require()</code> or <code>revert()</code> statements that check input arguments should be at the top of the function</a></li>\n<li><a href=\"#24-use-custom-errors-rather-than-revertrequire-strings-to-save-deployment-gas\">24 Use custom errors rather than <code>revert()</code>/<code>require()</code> strings to save deployment gas</a></li>\n<li><a href=\"#25-public-functions-not-called-by-the-contract-should-be-declared-external-instead\">25 <code>public</code> functions not called by the contract should be declared <code>external</code> instead</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}