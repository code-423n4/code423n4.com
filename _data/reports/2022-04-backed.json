{
  "circa": {
    "title": "Backed Protocol contest",
    "sponsor": "Backed Protocol",
    "slug": "2022-04-backed",
    "date": "2022-04-21",
    "findings": "https://github.com/code-423n4/2022-04-backed-findings/issues",
    "contest": 106
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the Backed Protocol smart contract system written in Solidity. The audit contest took place between April 5—April 7 2022.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>54 Wardens contributed reports to the Backed Protocol contest:</p>\n<ol>\n<li><a href=\"https://twitter.com/rayn731\">rayn</a></li>\n<li>0xDjango</li>\n<li><a href=\"https://twitter.com/cmichelio\">cmichel</a></li>\n<li>WatchPug (<a href=\"https://github.com/jack-the-pug\">jtp</a> and <a href=\"https://github.com/mingwatch\">ming</a>)</li>\n<li>hake</li>\n<li>IllIllI</li>\n<li><a href=\"https://twitter.com/teryanarmenn\">teryanarmen</a></li>\n<li><a href=\"https://twitter.com/JustDravee\">Dravee</a></li>\n<li>CertoraInc (<a href=\"https://twitter.com/danbinnun\">danb</a>, egjlmn1, <a href=\"https://twitter.com/ori_dabush\">OriDabush</a>, ItayG, and shakedwinder)</li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li><a href=\"https://twitter.com/HickupH\">hickuphh3</a></li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li><a href=\"https://twitter.com/transmissions11\">t11s</a></li>\n<li>tintin</li>\n<li>joshie</li>\n<li>robee</li>\n<li>AuditsAreUS</li>\n<li><a href=\"https://twitter.com/danbinnun\">danb</a></li>\n<li><a href=\"https://twitter.com/berndartmueller\">berndartmueller</a></li>\n<li><a href=\"https://twitter.com/shenwilly_\">shenwilly</a></li>\n<li><a href=\"https://twitter.com/jah_s3\">jah</a></li>\n<li>minhquanym</li>\n<li>TerrierLover</li>\n<li>cccz</li>\n<li>saian</li>\n<li>0xkatana</li>\n<li>reassor</li>\n<li><a href=\"https://twitter.com/securerodd\">securerodd</a></li>\n<li><a href=\"https://twitter.com/_0v3rf10w\">0v3rf10w</a></li>\n<li>sorrynotsorry</li>\n<li>FSchmoede</li>\n<li>0x1f8b</li>\n<li><a href=\"https://twitter.com/nonfungiblenero\">Kenshin</a></li>\n<li><a href=\"https://twitter.com/Meta0xNull\">Meta0xNull</a></li>\n<li><a href=\"https://github.com/z3s/\">z3s</a></li>\n<li>m9800</li>\n<li><a href=\"https://www.instagram.com/riyan_rfa/\">rfa</a></li>\n<li><a href=\"https://twitter.com/BouSalman\">BouSalman</a></li>\n<li>VAD37</li>\n<li>PPrieditis</li>\n<li>Hawkeye (0xwags and 0xmint)</li>\n<li>horsefacts</li>\n<li>hubble (ksk2345 and shri4net)</li>\n<li>samruna</li>\n<li><a href=\"https://twitter.com/meidhiwirara\">Tomio</a></li>\n<li><a href=\"https://instagram.com/vanensurya\">Funen</a></li>\n<li><a href=\"https://twitter.com/zachobront\">obront</a></li>\n</ol>\n<p>This contest was judged by <a href=\"https://twitter.com/gzeon\">gzeon</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/liveactionllama\">liveactionllama</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 10 unique vulnerabilities. Of these vulnerabilities, 3 received a risk rating in the category of HIGH severity and 7 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 34 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 23 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2022-04-backed\">C4 Backed Protocol contest repository</a>, and is composed of 7 smart contracts written in the Solidity programming language and includes 434 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code423n4.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-3\" style=\"position:relative;\"><a href=\"#high-risk-findings-3\" aria-label=\"high risk findings 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (3)</h1>\n<h2 id=\"h-01-can-force-borrower-to-pay-huge-interest\" style=\"position:relative;\"><a href=\"#h-01-can-force-borrower-to-pay-huge-interest\" aria-label=\"h 01 can force borrower to pay huge interest permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/24\">[H-01] Can force borrower to pay huge interest</a></h2>\n<p><em>Submitted by cmichel, also found by AuditsAreUS, csanuragjain, danb, IllIllI, joshie, Ruhum, t11s, and tintin</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L148\">NFTLoanFacilitator.sol#L148</a><br></p>\n<p>The loan amount is used as a min loan amount. It can be matched as high as possible (realistically up to the collateral NFT’s worth to remain in profit) and the borrower has to pay interest on the entire amount instead of just on the desired loan amount when the loan was created.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li>User needs a 10k USDC loan, NFTs are illiquid and they only have a BAYC worth 350k$. So buying another NFT worth roughly the desired 10k$ is not feasible. They will put the entire 350k$ BAYC as collateral for the 10k USDC loan.</li>\n<li>A lender matches the loan calling <code>lend</code> with 350k USDC.</li>\n<li>The borrower now has to pay interest on the entire 350k USDC even though they only wanted a 10k loan. Otherwise, they risk losing their collateral. Their effective rate on their 10k loan is 35x higher.</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The loan amount should not have min amount semantics.\nWhen someone wants to get a loan, they specify a certain amount they need, they don’t want to receive and pay interest on more than that.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/24#issuecomment-1090194769\">wilsoncusack (Backed Protocol) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>The ability to increase the loan amount is seen as a feature of the protocol, not a bug.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/24#issuecomment-1100042414\">gzeon (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>While a larger loan size is strictly beneficial to the borrower, the higher interest payment it entitled is not. The warden suggested a valid situation that may cost the user more than intended. Considering the amount lost is bounded because the lender carry more risk for a larger loan, downgrading this to Medium risk for the sponsor to consider a maxLoanAmount parameter.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/24#issuecomment-1100054828\">gzeon (judge) increased severity to High and commented</a>:</strong></p>\n<blockquote>\n<p>After considering <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/9\">#9</a> bringing up the loan origination fee, I believe this is a High risk issue for the protocol to not have a <code>maxLoanAmount</code> parameter.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/24#issuecomment-1100502129\">wilsoncusack (Backed Protocol) commented</a>:</strong></p>\n<blockquote>\n<p>IMO it does not make sense to label this as High severity. This is not an exploit but is just the protocol working exactly as described in the README. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/24#issuecomment-1100536164\">gzeon (judge) commented</a>:</strong></p>\n<blockquote>\n<p>From README</p>\n<blockquote>\n<p>Perpetual lender buyout: a lender can be boughtout at any time by a new lender who meets the existing terms and beats at least one term by at least 10%, e.g. 10% longer duration, 10% higher loan amount, 10% lower interest. The new lender pays the previous lender their principal + any interest owed. The loan duration restarts on buyout.</p>\n</blockquote>\n<p>I don’t agree that allowing higher loan amount necessarily means the loan amount needs to be unbounded. Given the increased interest and origination fee, a higher loan amount is not necessarily “beating existing terms” as described in the README.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/24#issuecomment-1100639005\">wilsoncusack (Backed Protocol) commented</a>:</strong></p>\n<blockquote>\n<p>It certainly doesn’t necessarily mean that but it is how we chose to implement it and I think the description is clear that there is no cap. We define “beating” as having one of those values changed by at least 10% and so I think it is beating as described by the readme. </p>\n</blockquote>\n<blockquote>\n<p>Nonetheless, I appreciate your drawing focus again to this point (<a href=\"https://twitter.com/WilsonCusack/status/1511683701800853506?s=20&#x26;t=SGd-Grp3L5yrL48Y3r_tEw\">we discussed on twitter</a> with our community during audit as this became a point of interest, and have of course considered this idea when designing the protocol at the outset). We will again consider adding a Boolean flag to each loan as to whether the borrower allows loan amount increases </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/24#issuecomment-1100866532\">wilsoncusack (Backed Protocol) commented</a>:</strong></p>\n<blockquote>\n<p>Respect judge to have final say, but since this is going public want to make sure our take on this is clear. </p>\n<p>We believe the protocol design was clearly communicated in the README, including origination fee and the possibility for perpetually increasing loan amount. We think there is no “exploit” here, just people pointing out potential downsides to how the protocol is designed (as one might point out problems of impermanent loss with an AMM.) We view these as QA reports. We are interested in this feedback and listening to it in that we want to listen to potential users and make sure our protocol appeals to as many people as possible. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/24#issuecomment-1100871827\">gzeon (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I consider this as an exploit because asset can be lost. Combining unbounded loan amount, interest rate and origination fee (max 5%), a malicious lender can grief borrower with limited risk and get a chance to seize the collateral as demonstrated in the POC. </p>\n<p>The fact that the code is working as described in README is irrelevant if it is going to make user lose their asset. If this is going to stay as a protocol design, I recommend to clearly communicate the risk of unbounded loan amount which is lacking in the contest repo.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/24#issuecomment-1105499280\">wilsoncusack (Backed Protocol) resolved</a></strong></p>\n<hr>\n<h2 id=\"h-02-currentloanowner-can-manipulate-loaninfo-when-any-lenders-try-to-buyout\" style=\"position:relative;\"><a href=\"#h-02-currentloanowner-can-manipulate-loaninfo-when-any-lenders-try-to-buyout\" aria-label=\"h 02 currentloanowner can manipulate loaninfo when any lenders try to buyout permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/88\">[H-02] currentLoanOwner can manipulate loanInfo when any lenders try to buyout</a></h2>\n<p><em>Submitted by rayn</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-backed/blob/main/contracts/NFTLoanFacilitator.sol#L205-L208\">NFTLoanFacilitator.sol#L205-L208</a><br>\n<a href=\"https://github.com/code-423n4/2022-04-backed/blob/main/contracts/NFTLoanFacilitator.sol#L215-L218\">NFTLoanFacilitator.sol#L215-L218</a></p>\n<p>If an attacker already calls <code>lend()</code> to lend to a loan, the attacker can manipulate <code>loanInfo</code> by reentrancy attack when any lenders try to buyout. The attacker can set bad values of <code>lendInfo</code> (e.g. very long duration, and 0 interest rate) that the lender who wants to buyout don’t expect.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>An attacker lends a loan, and <code>loanAssetContractAddress</code> in <code>loanInfo</code> is ERC777 which is suffering from reentrancy attack. When a lender (victim) try to buyout the loan of the attacker:</p>\n<ol>\n<li>The victim called <code>lend()</code>.</li>\n<li>In <code>lend()</code>, it always call <code>ERC20(loanAssetContractAddress).safeTransfer</code> to send <code>accumulatedInterest + previousLoanAmount</code> to <code>currentLoanOwner</code> (attacker).</li>\n<li>\n<p>The <code>transfer</code> of <code>loanAssetContractAddress</code> ERC777 will call <code>_callTokensReceived</code> so that the attacker can call <code>lend()</code> again in reentrancy with parameters:</p>\n<ul>\n<li>loanId: same loan Id</li>\n<li>interestRate: set to bad value (e.g. 0)</li>\n<li>amount: same amount</li>\n<li>durationSeconds: set to bad value (e.g. a long durationSeconds)</li>\n<li>sendLendTicketTo: same address of the attacker (<code>currentLoanOwner</code>)</li>\n</ul>\n</li>\n<li>Now the variables in <code>loanInfo</code> are changed to bad value, and the victim will get the lend ticket but the loan term is manipulated, and can not set it back (because it requires a better term).</li>\n</ol>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>vim</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use <code>nonReentrant</code> modifier on <code>lend()</code> to prevent reentrancy attack: <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/security/ReentrancyGuard.sol\">OpenZeppelin/ReentrancyGuard.sol</a><br></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/88#issuecomment-1091992426\">wilsoncusack (Backed Protocol) acknowledged, but disagreed with High severity and commented</a>:</strong></p>\n<blockquote>\n<p>We should mitigate, but will think on this.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/88#issuecomment-1092333890\">wilsoncusack (Backed Protocol) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Not sure whether this should be Medium or High risk.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/88#issuecomment-1092723962\">wilsoncusack (Backed Protocol) commented</a>:</strong></p>\n<blockquote>\n<p>Thinking more, again we should definitely mitigate, but I think this is less severe because I do not think ERC777 tokens will work with our contract? The on received call will revert? So this would need to be a malicious ERC20 designed just for this.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/88#issuecomment-1092733796\">wilsoncusack (Backed Protocol) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>er erc777 does work because reception ack is not needed in the normal case.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/88#issuecomment-1100056759\">gzeon (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Sponsor confirmed with fix.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-03-borrower-can-be-their-own-lender-and-steal-funds-from-buyout-due-to-reentrancy\" style=\"position:relative;\"><a href=\"#h-03-borrower-can-be-their-own-lender-and-steal-funds-from-buyout-due-to-reentrancy\" aria-label=\"h 03 borrower can be their own lender and steal funds from buyout due to reentrancy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/85\">[H-03] Borrower can be their own lender and steal funds from buyout due to reentrancy</a></h2>\n<p><em>Submitted by 0xDjango</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L214-L221\">NFTLoanFacilitator.sol#L214-L221</a><br>\n<a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L230-L250\">NFTLoanFacilitator.sol#L230-L250</a></p>\n<p>If borrower lends their own loan, they can repay and close the loan before ownership of the lend ticket is transferred to the new lender. The borrower will keep the NFT + loan amount + accrued interest.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>This exploit requires that the <code>loanAssetContractAddress</code> token transfers control to the receiver.</p>\n<h4 id=\"steps-of-exploit\" style=\"position:relative;\"><a href=\"#steps-of-exploit\" aria-label=\"steps of exploit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Steps of exploit:</h4>\n<ul>\n<li>Borrower creates loan with <code>createLoan()</code>.</li>\n<li>The same Borrower calls <code>lend()</code>, funding their own loan. The Borrower receives the lend ticket, and funds are transferred to themself.</li>\n<li>A new lender attempts to buy out the loan. The original loan amount + accruedInterest are sent to the original lender (same person as borrower).</li>\n<li>Due to lack of checks-effects-interactions pattern, the borrower is able to immediately call <code>repayAndCloseLoan()</code> before the lend ticket is transferred to the new lender.</li>\n</ul>\n<p>The following code illustrates that the new lender sends funds to the original lender prior to receiving the lend ticket in return.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">loanAssetContractAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">currentLoanOwner</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">accumulatedInterest</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">previousLoanAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ILendTicket</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lendTicketContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">loanFacilitatorTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentLoanOwner</span><span class=\"mtk1\">, </span><span class=\"mtk12\">sendLendTicketTo</span><span class=\"mtk1\">, </span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">The</span><span class=\"mtk1\"> </span><span class=\"mtk12\">original</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lender</span><span class=\"mtk1\">/</span><span class=\"mtk12\">borrower</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calls</span><span class=\"mtk1\"> </span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk12\">following</span><span class=\"mtk1\"> </span><span class=\"mtk8\">`repayAndCloseLoan()`</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">so</span><span class=\"mtk1\"> </span><span class=\"mtk11\">that</span><span class=\"mtk1\"> </span><span class=\"mtk11\">they</span><span class=\"mtk1\"> </span><span class=\"mtk11\">receive</span><span class=\"mtk1\"> </span><span class=\"mtk11\">their</span><span class=\"mtk1\"> </span><span class=\"mtk11\">collateral</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NFT</span><span class=\"mtk1\"> </span><span class=\"mtk11\">from</span><span class=\"mtk1\"> </span><span class=\"mtk11\">the</span><span class=\"mtk1\"> </span><span class=\"mtk11\">protocol</span><span class=\"mtk1\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">repayAndCloseLoan</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">notClosed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Loan</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loan</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">loanInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interest</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_interestOwed</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">loanAmount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastAccumulatedTimestamp</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">perAnumInterestRate</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">accumulatedInterest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lender</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lendTicketContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">closed</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">loanAssetContractAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">interest</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">loanAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralContractAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">borrowTicketContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralTokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Repay</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">interest</span><span class=\"mtk1\">, </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">loanAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Close</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Finally, the new lender receives the lend ticket that has no utility at this point. The borrower now possesses the NFT, original loan amount, and accrued interest.</p>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Move the line to transfer the lend ticket to the new lender above the line to transfer to funds to the original lender. Or, use reentrancyGuard from OpenZeppelin to remove the risk of reentrant calls completely.</p>\n<p>If desired, also require that the lender cannot be the same account as the borrower of a loan.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/85#issuecomment-1091968833\">wilsoncusack (Backed Protocol) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Borrower would need to convince lender to use an ERC20 with this malicious callback, but yes is legit.</p>\n<p>malicious ERC20<br>\n-> transfers value to borrow ticket holder<br>\n-> calls repay and close loan (would need funds available to do so, but still nets up)</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/85#issuecomment-1092334816\">wilsoncusack (Backed Protocol) commented</a>:</strong></p>\n<blockquote>\n<p>Possibility of an ERC777 loan asset warrants this as high, I think. Even though the warden didn’t suggest that vector.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/85#issuecomment-1092724315\">wilsoncusack (Backed Protocol) commented</a>:</strong></p>\n<blockquote>\n<p>Scratch that, I think ERC777 not possible because our contract isn’t setup to receive them.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/85#issuecomment-1092733859\">wilsoncusack (Backed Protocol) commented</a>:</strong></p>\n<blockquote>\n<p>er erc777 does work because reception ack is not needed in the normal case.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/85#event-6430345280\">wilsoncusack (Backed Protocol) resolved</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/85#issuecomment-1100148955\">gzeon (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Sponsor confirmed.</p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-7\" style=\"position:relative;\"><a href=\"#medium-risk-findings-7\" aria-label=\"medium risk findings 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (7)</h1>\n<h2 id=\"m-01-when-an-attacker-lends-to-a-loan-the-attacker-can-trigger-dos-that-any-lenders-can-not-buyout-it\" style=\"position:relative;\"><a href=\"#m-01-when-an-attacker-lends-to-a-loan-the-attacker-can-trigger-dos-that-any-lenders-can-not-buyout-it\" aria-label=\"m 01 when an attacker lends to a loan the attacker can trigger dos that any lenders can not buyout it permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/89\">[M-01] When an attacker lends to a loan, the attacker can trigger DoS that any lenders can not buyout it</a></h2>\n<p><em>Submitted by rayn, also found by hake</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-backed/blob/main/contracts/NFTLoanFacilitator.sol#L205-L208\">NFTLoanFacilitator.sol#L205-L208</a><br>\n<a href=\"https://github.com/code-423n4/2022-04-backed/blob/main/contracts/NFTLoanFacilitator.sol#L215-L218\">NFTLoanFacilitator.sol#L215-L218</a></p>\n<p>If an attacker (lender) lends to a loan, the attacker can always revert transactions when any lenders try to buyout, making anyone can not buyout the loan of the attacker.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li>A victim calls <code>lend()</code>, trying to buyout the loan of the attacker.</li>\n<li>In <code>lend()</code>, it always call <code>ERC20(loanAssetContractAddress).safeTransfer</code> to send <code>accumulatedInterest + previousLoanAmount</code> to <code>currentLoanOwner</code> (attacker).</li>\n<li>If the <code>transfer</code> of <code>loanAssetContractAddress</code> is ERC777, it will call <code>_callTokensReceived</code> that the attacker can manipulate and always revert it.</li>\n<li>Because <code>NFTLoanFacilitator</code> uses <code>safeTransfer</code> and <code>safeTransferFrom</code> to check return value, the transaction of the victim will also be reverted. It makes anyone can not buyout the loan of the attacker.</li>\n</ol>\n<p>In <code>_callTokensReceived</code>, the attacker just wants to revert the buyout transaction, but keep <code>repayAndCloseLoan</code> successful. The attacker can call <code>loanInfoStruct(uint256 loanId)</code> in <code>_callTokensReceived</code> to check if the value of <code>loanInfo</code> is changed or not to decide to revert it.</p>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>vim</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Don’t transfer <code>ERC20(loanAssetContractAddress)</code> to <code>currentLoanOwner</code> in <code>lend()</code>, use a global mapping to record redemption of lenders and add an external function <code>redeem</code> for lenders to transfer <code>ERC20(loanAssetContractAddress)</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/89#issuecomment-1091989314\">wilsoncusack (Backed Protocol) acknowledged, but disagreed with High severity and commented</a>:</strong></p>\n<blockquote>\n<p>I think this is just part of perils of working with certain assets and I am not sure we will mitigate.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/89#issuecomment-1098487430\">wilsoncusack (Backed Protocol) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Sorry, I lost track of this one/labeled incorrectly. This is indeed an issue we intend to address: we will block erc777 tokens. </p>\n<p>The worse implication here is that a lender could prevent a borrower from repaying and could seize the NFT. </p>\n<p>Still not sure if this should be High or Medium. But there are legit ERC777 tokens that a borrower might selecting unknowingly, so probably is High?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/89#issuecomment-1100058092\">gzeon (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>I suggest this as Med Risk as no fund is loss by preventing buyout.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/89#issuecomment-1100498588\">wilsoncusack (Backed Protocol) commented</a>:</strong></p>\n<blockquote>\n<p>But as I said above the bigger issue is they could block repayment, guaranteeing default and seizure of collateral? </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/89#issuecomment-1100562648\">gzeon (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I think you are correct as there is a similar call in <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L241\">L241</a>. However, both wardens failed to describe such attack path and I am inclined to keep this as Med Risk.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/89#issuecomment-1105714709\">wilsoncusack (Backed Protocol) resolved</a></strong></p>\n<hr>\n<h2 id=\"m-02-protocol-doesnt-handle-fee-on-transfer-tokens\" style=\"position:relative;\"><a href=\"#m-02-protocol-doesnt-handle-fee-on-transfer-tokens\" aria-label=\"m 02 protocol doesnt handle fee on transfer tokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/75\">[M-02] Protocol doesn’t handle fee on transfer tokens</a></h2>\n<p><em>Submitted by 0xDjango, also found by cccz, csanuragjain, Dravee, IllIllI, robee, and Ruhum</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L155-L160\">NFTLoanFacilitator.sol#L155-L160</a><br></p>\n<p>Since the borrower is able to specify any asset token, it is possible that loans will be created with tokens that support fee on transfer. If a fee on transfer asset token is chosen, the protocol will contain a point of failure on the original <code>lend()</code> call.</p>\n<p>It is my belief that this is a medium severity vulnerability due to its ability to impact core protocol functionality.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>For the first lender to call <code>lend()</code>, if the transfer fee % of the asset token is larger than the origination fee %, the second transfer will fail in the following code:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanAssetContractAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">facilitatorTake</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">originationFeeRate</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">SCALAR</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanAssetContractAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">borrowTicketContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">facilitatorTake</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Example:</p>\n<ul>\n<li><code>originationFee = 2%</code> Max fee is 5% per comments</li>\n<li><code>feeOnTransfer = 3%</code></li>\n<li><code>amount = 100 tokens</code></li>\n<li>Lender transfers <code>amount</code></li>\n<li><code>NFTLoanFacilitator</code> receives <code>97</code>.</li>\n<li><code>facilitatorTake = 2</code></li>\n<li><code>NFTLoanFacilitator</code> attempts to send <code>100 - 2</code> to borrower, but only has <code>97</code>.</li>\n<li>Execution reverts.</li>\n</ul>\n<h4 id=\"other-considerations\" style=\"position:relative;\"><a href=\"#other-considerations\" aria-label=\"other considerations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Other considerations:</h4>\n<p>If the originationFee is less than or equal to the transferFee, the transfers will succeed but will be received at a loss for the borrower and lender. Specifically for the lender, it might be unwanted functionality for a lender to lend 100 and receive 97 following a successful repayment (excluding interest for this example).</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Since the <code>originationFee</code> is calculated based on the <code>amount</code> sent by the lender, this calculation will always underflow given the example above. Instead, a potential solution would be to calculate the <code>originationFee</code> based on the requested loan amount, allowing the lender to send a greater value so that <code>feeOnTransfer &#x3C;= originationFee</code>.</p>\n<p>Oppositely, the protocol can instead calculate the amount received from the initial transfer and use this amount to calculate the <code>originationFee</code>. The issue with this option is that the borrower will receive less than the desired loan amount.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/75#issuecomment-1091897047\">wilsoncusack (Backed Protocol) commented</a>:</strong></p>\n<blockquote>\n<p>If <code>amount - origination_fee - token_fee &#x3C; 0</code>, then yeah you will not be able to underwrite to loan. But that would be a huge fee.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/75#issuecomment-1091903599\">wilsoncusack (Backed Protocol) commented</a>:</strong></p>\n<blockquote>\n<p>Discussed more with warden 0xDjango, if the token even has a 1% fee then the second transfer will fail OR we will leak facilitator funds, although this is sort of impossible because currently none of the transactions with these fee on transfer tokens will work.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/75#issuecomment-1092316654\">wilsoncusack (Backed Protocol) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>This issue is slightly different from others that just point out that borrowers will get <code>amount - token_fee</code>. The only one I have seen, I think, to point out that fulfilling loans with fee on transfer tokens is impossible.<br></p>\n<p>Imagine a token that takes 1% on transfer.<br>\nAmount = 100<br>\n99 reaches facilitator<br>\nfacilitator transfers 100 - facilitator take = 99 to the borrower.<br>\nFacilitator gets nothing<br>\nBorrower gets 98.<br></p>\n<p>If the facilitator take is greater or the fee on transfer take is greater, it won’t work at all.<br></p>\n<p>Med severity is maybe right given we can miss out on origination fees?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/75#issuecomment-1097469936\">wilsoncusack (Backed Protocol) confirmed and resolved</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/75#issuecomment-1100083163\">gzeon (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Sponsor confirmed with fix.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-sendcollateralto-is-unchecked-in-closeloan-which-can-cause-users-collateral-nft-to-be-frozen\" style=\"position:relative;\"><a href=\"#m-03-sendcollateralto-is-unchecked-in-closeloan-which-can-cause-users-collateral-nft-to-be-frozen\" aria-label=\"m 03 sendcollateralto is unchecked in closeloan which can cause users collateral nft to be frozen permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/83\">[M-03] <code>sendCollateralTo</code> is unchecked in <code>closeLoan()</code>, which can cause user’s collateral NFT to be frozen</a></h2>\n<p><em>Submitted by WatchPug, also found by berndartmueller, Dravee, hake, jah, and minhquanym</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L116-L126\">NFTLoanFacilitator.sol#L116-L126</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">closeLoan</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sendCollateralTo</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">notClosed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">borrowTicketContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">) == </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: borrow ticket holder only&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Loan</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loan</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">loanInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastAccumulatedTimestamp</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: has lender, use repayAndCloseLoan&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">closed</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralContractAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">sendCollateralTo</span><span class=\"mtk1\">, </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralTokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Close</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The <code>sendCollateralTo</code> will receive the collateral NFT when <code>closeLoan()</code> is called. However, if <code>sendCollateralTo</code> is a contract address that does not support ERC721, the collateral NFT can be frozen in the contract.</p>\n<p>As per the documentation of EIP-721:</p>\n<blockquote>\n<p>A wallet/broker/auction application MUST implement the wallet interface if it will accept safe transfers.</p>\n</blockquote>\n<p>Ref: <a href=\"https://eips.ethereum.org/EIPS/eip-721\">EIP-721</a></p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Change to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">closeLoan</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sendCollateralTo</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">notClosed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">borrowTicketContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">) == </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: borrow ticket holder only&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Loan</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loan</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">loanInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastAccumulatedTimestamp</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: has lender, use repayAndCloseLoan&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">closed</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralContractAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">sendCollateralTo</span><span class=\"mtk1\">, </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralTokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Close</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/83#issuecomment-1092314347\">wilsoncusack (Backed Protocol) acknowledged, but disagreed with Medium severity and commented</a>:</strong></p>\n<blockquote>\n<p>We use transferFrom and _mint instead of the safe versions to save gas. We think it is a reasonable expectation that users calling this should know what they are doing. We feel this is OK especially because other major protocols like Uniswap do this (<a href=\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/NonfungiblePositionManager.sol#L156\">Uniswap/NonfungiblePositionManager.sol#L156</a>).</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/83#issuecomment-1100090670\">gzeon (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I believe Med Risk is a fair assessment given the mixed/inconsistent usage of <code>safeTransferFrom</code> and <code>transferFrom</code> in the contract.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-requiredimprovementrate-can-not-work-as-expected-when-previousinterestrate-less-than-10-due-to-precision-loss\" style=\"position:relative;\"><a href=\"#m-04-requiredimprovementrate-can-not-work-as-expected-when-previousinterestrate-less-than-10-due-to-precision-loss\" aria-label=\"m 04 requiredimprovementrate can not work as expected when previousinterestrate less than 10 due to precision loss permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/80\">[M-04] <code>requiredImprovementRate</code> can not work as expected when <code>previousInterestRate</code> less than 10 due to precision loss</a></h2>\n<p><em>Submitted by WatchPug, also found by CertoraInc and hickuphh3</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L167-L179\">NFTLoanFacilitator.sol#L167-L179</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">previousInterestRate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">perAnumInterestRate</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">previousDurationSeconds</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">durationSeconds</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">interestRate</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">previousInterestRate</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;NFTLoanFacilitator: rate too high&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">durationSeconds</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">previousDurationSeconds</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;NFTLoanFacilitator: duration too low&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">((</span><span class=\"mtk12\">previousLoanAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">requiredImprovementRate</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">SCALAR</span><span class=\"mtk1\">) &lt;= </span><span class=\"mtk12\">amountIncrease</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    || </span><span class=\"mtk12\">previousDurationSeconds</span><span class=\"mtk1\"> + (</span><span class=\"mtk12\">previousDurationSeconds</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">requiredImprovementRate</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">SCALAR</span><span class=\"mtk1\">) &lt;= </span><span class=\"mtk12\">durationSeconds</span><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    || (</span><span class=\"mtk12\">previousInterestRate</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// do not allow rate improvement if rate already 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &amp;&amp; </span><span class=\"mtk12\">previousInterestRate</span><span class=\"mtk1\"> - (</span><span class=\"mtk12\">previousInterestRate</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">requiredImprovementRate</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">SCALAR</span><span class=\"mtk1\">) &gt;= </span><span class=\"mtk12\">interestRate</span><span class=\"mtk1\">), </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: proposed terms must be better than existing terms&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The <code>requiredImprovementRate</code> represents the percentage of improvement required of at least one of the terms when buying out from a previous lender.</p>\n<p>However, when <code>previousInterestRate</code> is less than <code>10</code> and <code>requiredImprovementRate</code> is <code>100</code>, due to precision loss, the new <code>interestRate</code> is allowed to be the same as the previous one.</p>\n<p>Making such an expected constraint absent.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li>Alice <code>createLoan()</code> with <code>maxPerAnumInterest</code> = 10, received <code>loanId</code> = 1</li>\n<li>Bob <code>lend()</code> with <code>interestRate</code> = 9  for <code>loanId</code> = 1</li>\n<li>Charlie <code>lend()</code> with <code>interestRate</code> = 9 (and all the same other terms with Bob) and buys out <code>loanId</code> = 1</li>\n</ol>\n<p>Charlie is expected to provide at least 10% better terms, but actually bought out Bob with the same terms.</p>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider using: <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/utils/math/Math.sol#L39-L42\">OpenZeppelin/Math.sol#L39-L42</a><br></p>\n<p>And change the check to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">(</span><span class=\"mtk12\">previousInterestRate</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// do not allow rate improvement if rate already 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &amp;&amp; </span><span class=\"mtk12\">previousInterestRate</span><span class=\"mtk1\"> - </span><span class=\"mtk10\">Math</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ceilDiv</span><span class=\"mtk1\">(</span><span class=\"mtk12\">previousInterestRate</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">requiredImprovementRate</span><span class=\"mtk1\">, </span><span class=\"mtk12\">SCALAR</span><span class=\"mtk1\">) &gt;= </span><span class=\"mtk12\">interestRate</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/80#issuecomment-1094305756\">wilsoncusack (Backed Protocol) confirmed and resolved</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/80#issuecomment-1100093154\">gzeon (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Sponsor confirmed with fix.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-05-borrowers-lose-funds-if-they-call-repayandcloseloan-instead-of-closeloan\" style=\"position:relative;\"><a href=\"#m-05-borrowers-lose-funds-if-they-call-repayandcloseloan-instead-of-closeloan\" aria-label=\"m 05 borrowers lose funds if they call repayandcloseloan instead of closeloan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/27\">[M-05] Borrowers lose funds if they call <code>repayAndCloseLoan</code> instead of <code>closeLoan</code></a></h2>\n<p><em>Submitted by cmichel</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L241\">NFTLoanFacilitator.sol#L241</a><br></p>\n<p>The <code>repayAndCloseLoan</code> function does not revert if there has not been a lender for a loan (matched with <code>lend</code>).\nUsers should use <code>closeLoan</code> in this case but the contract should disallow calling <code>repayAndCloseLoan</code> because users can lose funds.</p>\n<p>It performs a <code>ERC20(loan.loanAssetContractAddress).safeTransferFrom(msg.sender, lender, interest + loan.loanAmount)</code> call where <code>interest</code> will be a high value accumulated from timestamp 0 and the <code>loan.loanAmount</code> is the initially desired min loan amount <code>minLoanAmount</code> set in <code>createLoan</code>.\nThe user will lose these funds if they ever approved the contract (for example, for another loan).</p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a check that there actually is something to repay.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastAccumulatedTimestamp</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;loan was never matched by a lender. use closeLoan instead&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/27#issuecomment-1090191862\">wilsoncusack (Backed Protocol) commented</a>:</strong></p>\n<blockquote>\n<p>ownerOf query here will fail if there is no lender, <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L239\">NFTLoanFacilitator.sol#L239</a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/27#issuecomment-1090376185\">wilsoncusack (Backed Protocol) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Actually this is wrong, we switched to solmate and this ownerOf will not fail. Is a legit issue.</p>\n<p>Not an attack, but funds can be lost some. Medium probably makes sense? </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/27#issuecomment-1091694388\">wilsoncusack (Backed Protocol) commented</a>:</strong></p>\n<blockquote>\n<p>Requires borrow to have approved the facilitator to move this erc20 and to call the wrong method.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/27#issuecomment-1099377787\">wilsoncusack (Backed Protocol) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Yooo just discovered solmate had not followed the ERC721 standard on <a href=\"https://github.com/code-423n4/2022-04-backed/blob/main/contracts/NFTLoanFacilitator.sol#L239\">this ownerOf</a> and it should have reverted, updated here </p>\n<p><a href=\"https://github.com/Rari-Capital/solmate/commit/921a9ad4e22b995bd3d7b5464bcda294dd977209\">Rari-Capital/solmate@921a9ad</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/27#issuecomment-1100098358\">gzeon (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Sponsor confirmed with fix.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-might-not-get-desired-min-loan-amount-if-_originationfeerate-changes\" style=\"position:relative;\"><a href=\"#m-06-might-not-get-desired-min-loan-amount-if-_originationfeerate-changes\" aria-label=\"m 06 might not get desired min loan amount if _originationfeerate changes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/28\">[M-06] Might not get desired min loan amount if <code>_originationFeeRate</code> changes</a></h2>\n<p><em>Submitted by cmichel, also found by teryanarmen</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L309\">NFTLoanFacilitator.sol#L309</a><br></p>\n<p>Admins can update the origination fee by calling <code>updateOriginationFeeRate</code>.\nNote that a borrower does not receive their <code>minLoanAmount</code> set in <code>createLoan</code>, they only receive <code>(1 - originationFee) * minLoanAmount</code>, see <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L159\"><code>lend</code></a>.\nTherefore, they need to precalculate the <code>minLoanAmount</code> using the <strong>current</strong> origination fee to arrive at the post-fee amount that they actually receive.\nIf admins then increase the fee, the borrower receives fewer funds than required to cover their rent and might become homeless.</p>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Reconsider how the min loan amount works. Imo, this <code>minLoanAmount</code> should be the post-fee amount, not the pre-fee amount. It’s also more intuitive for the borrower when creating the loan.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/28#issuecomment-1090190851\">wilsoncusack (Backed Protocol) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>Won’t change, is just how it works.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/28#issuecomment-1092324481\">wilsoncusack (Backed Protocol) acknowledged, but disagreed with Medium severity and commented</a>:</strong></p>\n<blockquote>\n<p>The only true mitigation here would be to store originationFeeRate in the Loan struct at the time of origination to guarantee a borrower gets the fee rate that was present when they created the loan. But we do not plan to make this change.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/28#issuecomment-1097468240\">wilsoncusack (Backed Protocol) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Decided to fix because we could do so without too much gas.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/28#issuecomment-1100102896\">gzeon (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Sponsor confirmed with fix.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-07-mintborrowticketto-can-be-a-contract-with-no-onerc721received-method-which-may-cause-the-borrowticket-nft-to-be-frozen-and-put-users-funds-at-risk\" style=\"position:relative;\"><a href=\"#m-07-mintborrowticketto-can-be-a-contract-with-no-onerc721received-method-which-may-cause-the-borrowticket-nft-to-be-frozen-and-put-users-funds-at-risk\" aria-label=\"m 07 mintborrowticketto can be a contract with no onerc721received method which may cause the borrowticket nft to be frozen and put users funds at risk permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/81\">[M-07] <code>mintBorrowTicketTo</code> can be a contract with no <code>onERC721Received</code> method, which may cause the BorrowTicket NFT to be frozen and put users’ funds at risk</a></h2>\n<p><em>Submitted by WatchPug</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L102-L102\">NFTLoanFacilitator.sol#L102-L102</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">IERC721Mintable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">borrowTicketContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mintBorrowTicketTo</span><span class=\"mtk1\">, </span><span class=\"mtk12\">id</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanTicket.sol#L33-L35\">NFTLoanTicket.sol#L33-L35</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">loanFacilitatorOnly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>If <code>mintBorrowTicketTo</code> is a contract that does not implement the <code>onERC721Received</code> method, in the current implementation of <code>createLoan()</code>, the tx will still be successfully, and the loan will be created.</p>\n<p>This can be a problem if <code>mintBorrowTicketTo</code> can not handle ERC721 properly, as the <code>BorrowTicket</code> NFT will be used later to get back the user’s funds.</p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider using <code>safeMint</code> in <code>NFTLoanTicket.sol#mint()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">loanFacilitatorOnly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_safeMint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/81#issuecomment-1092340998\">wilsoncusack (Backed Protocol) acknowledged, but disagreed with Medium severity and commented</a>:</strong></p>\n<blockquote>\n<p>Similar to <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/83\">#83</a> </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/81#issuecomment-1100146976\">gzeon (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Not really a duplicate because it is the mint function. Fund can be lost by losing the borrow ticket.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/81#issuecomment-1100499540\">wilsoncusack (Backed Protocol) commented</a>:</strong></p>\n<blockquote>\n<p>Agree not really duplicate. I think my response is the same, which is comparing to Uniswap v3 nft which also would mean loss of funds if lost. </p>\n<p>From <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/83#issuecomment-1092314347\">#83</a>:</p>\n<blockquote>\n<p>We use transferFrom and _mint instead of the safe versions to save gas. We think it is a reasonable expectation that users calling this should know what they are doing, we feel this is OK especially because other major protocols like Uniswap do this <a href=\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/NonfungiblePositionManager.sol#L156\">NonfungiblePositionManager.sol#L156</a>.</p>\n</blockquote>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/81#issuecomment-1100560835\">gzeon (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Given the safe variant is used in <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L242\">L242</a> and <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L262\">L262</a>, looks like ERC721 safety was a concern at the time the code is written. Therefore I believe Med Risk is a fair assessment.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/81#issuecomment-1100640970\">wilsoncusack (Backed Protocol) commented</a>:</strong></p>\n<blockquote>\n<p>Fair. This was an intentional change to save gas but I should have been consistent.<br> </p>\n<img width=\"303\" alt=\"Screen Shot 2022-04-16 at 7 21 08 AM\" src=\"https://user-images.githubusercontent.com/6678357/163673078-bc8d84f5-8371-4b39-bce6-f997ce820d9d.png\">\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 34 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/134\">report highlighted below</a> by warden <strong>IllIllI</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/130\">Dravee</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/52\">shenwilly</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/107\">teryanarmen</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/126\">hake</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/121\">reassor</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/55\">TerrierLover</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/87\">0xDjango</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/95\">m9800</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/31\">robee</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/18\">securerodd</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/46\">t11s</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/44\">tintin</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/77\">0v3rf10w</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/118\">0xkatana</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/108\">berndartmueller</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/2\">BouSalman</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/53\">CertoraInc</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/104\">FSchmoede</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/91\">rayn</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/43\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/63\">sorrynotsorry</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/57\">VAD37</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/35\">PPrieditis</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/5\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/7\">csanuragjain</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/109\">Hawkeye</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/120\">horsefacts</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/110\">hubble</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/67\">Kenshin</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/60\">Meta0xNull</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/49\">samruna</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/84\">WatchPug</a>, and <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/93\">z3s</a>.</em></p>\n<h2 id=\"l-01-loans-can-be-created-and-paid-with-non-existentdestructed-tokens\" style=\"position:relative;\"><a href=\"#l-01-loans-can-be-created-and-paid-with-non-existentdestructed-tokens\" aria-label=\"l 01 loans can be created and paid with non existentdestructed tokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-01] Loans can be created and paid with non-existent/destructed tokens</h2>\n<p><code>@rari-capital/solmate/src/utils/SafeTransferLib.sol</code> has functions named similarly to functions that OpenZeppelin has, but they act differently. At the top of the file is the following comment:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @dev Note that none of the functions in this library check that a token has code at all! That responsibility is delegated to the caller.</span></span></span></code></pre>\n<p><a href=\"https://github.com/Rari-Capital/solmate/blob/4eaf6b68202e36f67cab379768ac6be304c8ebde/src/utils/SafeTransferLib.sol#L9\">Rari-Capital/SafeTransferLib.sol#L9</a><br></p>\n<p>If the caller of these functions does not check that the token has code, calls to these functions will be no-ops, since low level calls to non-contracts always return success. There are many instances of these calls throughout the file with no code existence checks:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">contracts/NFTLoanFacilitator.sol:155:            ERC20(loanAssetContractAddress).safeTransferFrom(msg.sender, address(this), amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">contracts/NFTLoanFacilitator.sol:157:            ERC20(loanAssetContractAddress).safeTransfer(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">contracts/NFTLoanFacilitator.sol:200:                ERC20(loanAssetContractAddress).safeTransferFrom(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">contracts/NFTLoanFacilitator.sol:205:                ERC20(loanAssetContractAddress).safeTransfer(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">contracts/NFTLoanFacilitator.sol:210:                ERC20(loanAssetContractAddress).safeTransfer(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">contracts/NFTLoanFacilitator.sol:215:                ERC20(loan.loanAssetContractAddress).safeTransferFrom(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">contracts/NFTLoanFacilitator.sol:241:        ERC20(loan.loanAssetContractAddress).safeTransferFrom(msg.sender, lender, interest + loan.loanAmount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">contracts/NFTLoanFacilitator.sol:242:        IERC721(loan.collateralContractAddress).safeTransferFrom(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">contracts/NFTLoanFacilitator.sol:262:        IERC721(loan.collateralContractAddress).safeTransferFrom(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">contracts/NFTLoanFacilitator.sol:297:        ERC20(asset).safeTransfer(to, amount);</span></span></code></pre>\n<h2 id=\"l-02-originationfeerates-of-less-than-1000-may-charge-no-fees-if-amounts-are-small\" style=\"position:relative;\"><a href=\"#l-02-originationfeerates-of-less-than-1000-may-charge-no-fees-if-amounts-are-small\" aria-label=\"l 02 originationfeerates of less than 1000 may charge no fees if amounts are small permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-02] <code>originationFeeRate</code>s of less than 1000 may charge no fees if amounts are small</h2>\n<p>File: contracts/NFTLoanFacilitator.sol (line <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L156\">156</a>)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">facilitatorTake</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">originationFeeRate</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">SCALAR</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>Add a <code>require()</code> for <code>facilitatorTake</code> to be non-zero if <code>originationFeeRate</code> is non-zero, or state the fee logic for small amounts</p>\n<h2 id=\"l-03-a-malicious-owner-can-keep-the-fee-rate-at-zero-but-if-a-large-value-transfer-enters-the-mempool-the-owner-can-jack-the-rate-up-to-the-maximum\" style=\"position:relative;\"><a href=\"#l-03-a-malicious-owner-can-keep-the-fee-rate-at-zero-but-if-a-large-value-transfer-enters-the-mempool-the-owner-can-jack-the-rate-up-to-the-maximum\" aria-label=\"l 03 a malicious owner can keep the fee rate at zero but if a large value transfer enters the mempool the owner can jack the rate up to the maximum permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-03] A malicious owner can keep the fee rate at zero, but if a large value transfer enters the mempool, the owner can jack the rate up to the maximum</h2>\n<p>File: contracts/NFTLoanFacilitator.sol (lines <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L306-L312\">306-312</a>)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateOriginationFeeRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_originationFeeRate</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_originationFeeRate</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk7\">5</span><span class=\"mtk1\"> * (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** (</span><span class=\"mtk12\">INTEREST_RATE_DECIMALS</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">2</span><span class=\"mtk1\">)), </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: max fee 5%&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">originationFeeRate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_originationFeeRate</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">UpdateOriginationFeeRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_originationFeeRate</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Store the fee rate during loan creation, along with the maximum fee rate the user will allow, and update to the new rate for that particular loan only when loans are bought out</p>\n<h2 id=\"l-04-a-malicious-owner-can-set-an-effectively-infinite-improvement-rate-with-typeuint256max-after-heshe-has-entered-into-a-loan-to-prevent-others-from-buying-them-out\" style=\"position:relative;\"><a href=\"#l-04-a-malicious-owner-can-set-an-effectively-infinite-improvement-rate-with-typeuint256max-after-heshe-has-entered-into-a-loan-to-prevent-others-from-buying-them-out\" aria-label=\"l 04 a malicious owner can set an effectively infinite improvement rate with typeuint256max after heshe has entered into a loan to prevent others from buying them out permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-04] A malicious owner can set an effectively infinite improvement rate with <code>type(uint256).max</code> after he/she has entered into a loan to prevent others from buying them out</h2>\n<p>File: contracts/NFTLoanFacilitator.sol (lines <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L320-L326\">320-326</a>)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateRequiredImprovementRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_improvementRate</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_improvementRate</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;NFTLoanFacilitator: 0 improvement rate&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">requiredImprovementRate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_improvementRate</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">UpdateRequiredImprovementRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_improvementRate</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Have a sane upper limit to the improvement rate, and don’t allow it to change as above</p>\n<h2 id=\"l-05-tokenuri-reverts-for-tokens-that-dont-implement-ierc20metadata\" style=\"position:relative;\"><a href=\"#l-05-tokenuri-reverts-for-tokens-that-dont-implement-ierc20metadata\" aria-label=\"l 05 tokenuri reverts for tokens that dont implement ierc20metadata permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-05] <code>tokenURI()</code> reverts for tokens that don’t implement <code>IERC20Metadata</code></h2>\n<p>While the ticket descriptors are not in scope, the code calling them is. <code>NFTLoanTicket.tokenURI()</code>, which is in scope, ends up calling descriptor code which casts the asset to <code>IERC20Metadata</code>. This interface is separate from <code>IERC20</code> because EIP-20 does not require those functions to exist. If a valid ERC20 token does not implement this interface, casting it and attempting to call non-existant functions will cause the code to revert, which will cause <code>tokenURI()</code> to revert.</p>\n<p><a href=\"https://github.com/code-423n4/2022-04-backed/blob/d34ddbdaf8d1bc1bf17446df830db629ee551308/contracts/descriptors/libraries/PopulateSVGParams.sol#L65\">PopulateSVGParams.sol#L65</a><br>\n<a href=\"https://github.com/code-423n4/2022-04-backed/blob/d34ddbdaf8d1bc1bf17446df830db629ee551308/contracts/descriptors/libraries/PopulateSVGParams.sol#L69\">PopulateSVGParams.sol#L69</a><br>\n<a href=\"https://github.com/code-423n4/2022-04-backed/blob/d34ddbdaf8d1bc1bf17446df830db629ee551308/contracts/descriptors/libraries/PopulateSVGParams.sol#L83\">PopulateSVGParams.sol#L83</a><br></p>\n<p>Use <a href=\"https://github.com/boringcrypto/BoringSolidity/blob/ccb743d4c3363ca37491b87c6c9b24b1f5fa25dc/contracts/libraries/BoringERC20.sol#L33-L55\"><code>safeDecimals()</code></a> etc</p>\n<h2 id=\"l-06-_safemint-should-be-used-rather-than-_mint-wherever-possible\" style=\"position:relative;\"><a href=\"#l-06-_safemint-should-be-used-rather-than-_mint-wherever-possible\" aria-label=\"l 06 _safemint should be used rather than _mint wherever possible permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-06] <code>_safeMint()</code> should be used rather than <code>_mint()</code> wherever possible</h2>\n<p><code>_mint()</code> is <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/d4d8d2ed9798cc3383912a23b5e8d5cb602f7d4b/contracts/token/ERC721/ERC721.sol#L271\">discouraged</a> in favor of <code>_safeMint()</code> which ensures that the recipient is either an EOA or implements <code>IERC721Receiver</code>. Both open <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/d4d8d2ed9798cc3383912a23b5e8d5cb602f7d4b/contracts/token/ERC721/ERC721.sol#L238-L250\">OpenZeppelin</a> and <a href=\"https://github.com/Rari-Capital/solmate/blob/4eaf6b68202e36f67cab379768ac6be304c8ebde/src/tokens/ERC721.sol#L180\">solmate</a> have versions of this function so that NFTs aren’t lost if they’re minted to contracts that cannot transfer them back out.</p>\n<p>File: contracts/NFTLoanTicket.sol (line <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanTicket.sol#L34\">34</a>)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"l-07-loanfacilitatortransfer-does-not-verify-that-the-receiver-is-capable-of-handling-an-nft\" style=\"position:relative;\"><a href=\"#l-07-loanfacilitatortransfer-does-not-verify-that-the-receiver-is-capable-of-handling-an-nft\" aria-label=\"l 07 loanfacilitatortransfer does not verify that the receiver is capable of handling an nft permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-07] <code>loanFacilitatorTransfer()</code> does not verify that the receiver is capable of handling an NFT</h2>\n<p>EIP-721 states:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">///  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">///  THEY MAY BE PERMANENTLY LOST</span></span></span></code></pre>\n<p><a href=\"https://github.com/ethereum/EIPs/blob/904be2534386631358766607f4a098e11a401e95/EIPS/eip-721.md?plain=1#L103-L105\">EIP-721.md#L103-L105</a></p>\n<p>The code below was copied from <code>transferFrom()</code>, so any function calling <code>_transfer()</code> needs to confirm that <code>to</code> is capable of receiving NFTs. <code>loanFacilitatorTransfer()</code> calls <code>_transfer()</code> without completing this check, which can lead to the loss of NFTs. Checking if the address is zero or not is not sufficient; it needs the other checks in <a href=\"https://github.com/Rari-Capital/solmate/blob/4eaf6b68202e36f67cab379768ac6be304c8ebde/src/tokens/ERC721.sol#L105-L110\"><code>safeTransferFrom()</code></a>.</p>\n<p>File: contracts/LendTicket.sol (lines <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/LendTicket.sol#L24-L34\">24-34</a>)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter\" aria-hidden=\"true\"></span><span class=\"grvsc-source\"><span class=\"mtk3\">/// @dev exact copy of </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"96\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"97\"></span><span class=\"grvsc-source\"><span class=\"mtk3\">/// with L78 - L81 removed to enable loanFacilitatorTransfer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"98\"></span><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_transfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"99\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"100\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"101\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"102\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"103\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">ownerOf</span><span class=\"mtk1\">[</span><span class=\"mtk12\">id</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;WRONG_FROM&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"104\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"105\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;INVALID_RECIPIENT&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"l-08-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables\" style=\"position:relative;\"><a href=\"#l-08-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables\" aria-label=\"l 08 missing checks for address0x0 when assigning values to address state variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-08] Missing checks for <code>address(0x0)</code> when assigning values to <code>address</code> state variables</h2>\n<ol>\n<li>File: contracts/NFTLoanFacilitator.sol (line <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L282\">282</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">lendTicketContract</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_contract</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/NFTLoanFacilitator.sol (line <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L292\">292</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">borrowTicketContract</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_contract</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"n-01-constants-should-be-defined-rather-than-using-magic-numbers\" style=\"position:relative;\"><a href=\"#n-01-constants-should-be-defined-rather-than-using-magic-numbers\" aria-label=\"n 01 constants should be defined rather than using magic numbers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-01] <code>constant</code>s should be defined rather than using magic numbers</h2>\n<ol>\n<li>File: contracts/NFTLoanFacilitator.sol (line <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L307\">307</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_originationFeeRate</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk7\">5</span><span class=\"mtk1\"> * (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** (</span><span class=\"mtk12\">INTEREST_RATE_DECIMALS</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">2</span><span class=\"mtk1\">)), </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: max fee 5%&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/NFTLoanFacilitator.sol (line <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L384\">384</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">* (</span><span class=\"mtk12\">perAnumInterestRate</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">365</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<ol start=\"3\">\n<li>File: contracts/NFTLoanFacilitator.sol (line <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L384\">384</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">* (</span><span class=\"mtk12\">perAnumInterestRate</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">365</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<ol start=\"4\">\n<li>File: contracts/NFTLoanFacilitator.sol (line <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L385\">385</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5\">/ 1e21 /</span><span class=\"mtk1\">/ </span><span class=\"mtk12\">SCALAR</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e18</span></span></span></code></pre>\n<h2 id=\"n-02-typos\" style=\"position:relative;\"><a href=\"#n-02-typos\" aria-label=\"n 02 typos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-02] Typos</h2>\n<ol>\n<li>File: contracts/NFTLoanFacilitator.sol (line <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/NFTLoanFacilitator.sol#L303\">303</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">* @</span><span class=\"mtk12\">notice</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Updates</span><span class=\"mtk1\"> </span><span class=\"mtk12\">originationFeeRate</span><span class=\"mtk1\"> </span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk12\">faciliator</span><span class=\"mtk1\"> </span><span class=\"mtk12\">keeps</span><span class=\"mtk1\"> </span><span class=\"mtk4\">of</span><span class=\"mtk1\"> </span><span class=\"mtk12\">each</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loan</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span></span></span></code></pre>\n<p>faciliator</p>\n<ol start=\"2\">\n<li>File: contracts/interfaces/INFTLoanFacilitator.sol (line <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/interfaces/INFTLoanFacilitator.sol#L65\">65</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">* @</span><span class=\"mtk12\">param</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minLoanAmount</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mimimum</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loan</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span></span></span></code></pre>\n<p>mimimum</p>\n<h2 id=\"n-03-natspec-is-incomplete\" style=\"position:relative;\"><a href=\"#n-03-natspec-is-incomplete\" aria-label=\"n 03 natspec is incomplete permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-03] NatSpec is incomplete</h2>\n<ol>\n<li>File: contracts/interfaces/INFTLoanFacilitator.sol (lines <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/interfaces/INFTLoanFacilitator.sol#L286-L288\">286-288</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">* @</span><span class=\"mtk12\">param</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loanId</span><span class=\"mtk1\"> </span><span class=\"mtk12\">The</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loan</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">*/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">totalOwed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Missing: <code>@return</code></p>\n<ol start=\"2\">\n<li>File: contracts/interfaces/INFTLoanFacilitator.sol (lines <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/interfaces/INFTLoanFacilitator.sol#L292-L294\">292-294</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">* @</span><span class=\"mtk12\">param</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loanId</span><span class=\"mtk1\"> </span><span class=\"mtk12\">The</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loan</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">*/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">interestOwed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Missing: <code>@return</code></p>\n<ol start=\"3\">\n<li>File: contracts/interfaces/INFTLoanFacilitator.sol (lines <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/interfaces/INFTLoanFacilitator.sol#L298-L300\">298-300</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">* @</span><span class=\"mtk12\">param</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loanId</span><span class=\"mtk1\"> </span><span class=\"mtk12\">The</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loan</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">*/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">loanEndSeconds</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Missing: <code>@return</code></p>\n<h2 id=\"n-04-event-is-missing-indexed-fields\" style=\"position:relative;\"><a href=\"#n-04-event-is-missing-indexed-fields\" aria-label=\"n 04 event is missing indexed fields permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-04] Event is missing <code>indexed</code> fields</h2>\n<p>Each <code>event</code> should use three <code>indexed</code> fields if there are three or more fields</p>\n<ol>\n<li>File: contracts/interfaces/INFTLoanFacilitator.sol (lines <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/interfaces/INFTLoanFacilitator.sol#L68-L77\">68-77</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CreateLoan</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minter</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralTokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxInterestRate</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loanAssetContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minLoanAmount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minDurationSeconds</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"2\">\n<li>File: contracts/interfaces/INFTLoanFacilitator.sol (lines <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/interfaces/INFTLoanFacilitator.sol#L93-L99\">93-99</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Lend</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interestRate</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loanAmount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">durationSeconds</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"3\">\n<li>File: contracts/interfaces/INFTLoanFacilitator.sol (line <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/interfaces/INFTLoanFacilitator.sol#L145\">145</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">WithdrawOriginationFees</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">asset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"4\">\n<li>File: contracts/interfaces/INFTLoanFacilitator.sol (line <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/interfaces/INFTLoanFacilitator.sol#L152\">152</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">UpdateOriginationFeeRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeRate</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"5\">\n<li>File: contracts/interfaces/INFTLoanFacilitator.sol (line <a href=\"https://github.com/code-423n4/2022-04-backed/blob/e8015d7c4b295af131f017e646ba1b99c8f608f0/contracts/interfaces/INFTLoanFacilitator.sol#L159\">159</a>)</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">UpdateRequiredImprovementRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">improvementRate</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/134#issuecomment-1092325381\">wilsoncusack (Backed Protocol) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>High quality! Will work through all.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/134#issuecomment-1105641586\">wilsoncusack (Backed Protocol) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>[L-01] Fixed, we now check code.length<br>\n[L-02] Won’t fix<br>\n[L-03] Fixed, origination fee is frozen with loan terms<br>\n[L-04] Won’t fix<br>\n[L-05] Won’t fix<br>\n[L-06] Won’t fix<br>\n[L-07] Won’t fix<br>\n[L-08] Won’t fix<br>\n[N-01] Won’t fix, too much gas<br>\n[N-02] Fixed<br>\n[N-03] Fixed<br>\n[N-04] Won’t fix</p>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations-23\" style=\"position:relative;\"><a href=\"#gas-optimizations-23\" aria-label=\"gas optimizations 23 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations (23)</h1>\n<p>For this contest, 23 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/20\">report highlighted below</a> by warden <strong>Dravee</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/135\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/79\">saian</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/32\">robee</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/58\">TerrierLover</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/6\">joshie</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/123\">rfa</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/119\">0xkatana</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/76\">0v3rf10w</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/62\">sorrynotsorry</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/128\">Tomio</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/22\">t11s</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/103\">FSchmoede</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/54\">CertoraInc</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/101\">Funen</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/92\">rayn</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/4\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/10\">csanuragjain</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/65\">Kenshin</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/61\">Meta0xNull</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/13\">obront</a>, <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/47\">securerodd</a>, and <a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/94\">z3s</a>.</em></p>\n<h2 id=\"foreword\" style=\"position:relative;\"><a href=\"#foreword\" aria-label=\"foreword permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Foreword</h2>\n<ul>\n<li><strong><code>@audit</code> tags</strong></li>\n</ul>\n<blockquote>\n<p>The code is annotated at multiple places with <code>//@audit</code> comments to pinpoint the issues. Please, pay attention to them for more details.</p>\n</blockquote>\n<h2 id=\"g-01-storage\" style=\"position:relative;\"><a href=\"#g-01-storage\" aria-label=\"g 01 storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Storage</h2>\n<h3 id=\"caching-storage-values-in-memory\" style=\"position:relative;\"><a href=\"#caching-storage-values-in-memory\" aria-label=\"caching storage values in memory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Caching storage values in memory</h3>\n<p>The code can be optimized by minimising the number of SLOADs. SLOADs are expensive (100 gas) compared to MLOADs/MSTOREs (3 gas). Here, storage values should get cached in memory (see the <code>@audit</code> tags for further details):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">174</span><span class=\"mtk1\">:                 </span><span class=\"mtk11\">require</span><span class=\"mtk1\">((</span><span class=\"mtk12\">previousLoanAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">requiredImprovementRate</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">SCALAR</span><span class=\"mtk1\">) &lt;= </span><span class=\"mtk12\">amountIncrease</span><span class=\"mtk1\"> </span><span class=\"mtk3\">//@audit gas: should cache requiredImprovementRate</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">175</span><span class=\"mtk1\">:                 || </span><span class=\"mtk12\">previousDurationSeconds</span><span class=\"mtk1\"> + (</span><span class=\"mtk12\">previousDurationSeconds</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">requiredImprovementRate</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">SCALAR</span><span class=\"mtk1\">) &lt;= </span><span class=\"mtk12\">durationSeconds</span><span class=\"mtk1\">   </span><span class=\"mtk3\">//@audit gas: should use cached requiredImprovementRate</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">176</span><span class=\"mtk1\">                  || (</span><span class=\"mtk12\">previousInterestRate</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// do not allow rate improvement if rate already 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">177</span><span class=\"mtk1\">:                     &amp;&amp; </span><span class=\"mtk12\">previousInterestRate</span><span class=\"mtk1\"> - (</span><span class=\"mtk12\">previousInterestRate</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">requiredImprovementRate</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">SCALAR</span><span class=\"mtk1\">) &gt;= </span><span class=\"mtk12\">interestRate</span><span class=\"mtk1\">), </span><span class=\"mtk3\">//@audit gas: should use cached requiredImprovementRate</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">231</span><span class=\"mtk1\">          </span><span class=\"mtk12\">Loan</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loan</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">loanInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">232</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">233</span><span class=\"mtk1\">          </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interest</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_interestOwed</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">234</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">loanAmount</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//@audit gas: should cache loan.loanAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">235</span><span class=\"mtk1\">              </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastAccumulatedTimestamp</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">236</span><span class=\"mtk1\">              </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">perAnumInterestRate</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">237</span><span class=\"mtk1\">              </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">accumulatedInterest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">238</span><span class=\"mtk1\">          );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">239</span><span class=\"mtk1\">          </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lender</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lendTicketContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">240</span><span class=\"mtk1\">          </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">closed</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">241</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">loanAssetContractAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">interest</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">loanAmount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit gas: should use cached loan.loanAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">242</span><span class=\"mtk1\">          </span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralContractAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">243</span><span class=\"mtk1\">              </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">244</span><span class=\"mtk1\">              </span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">borrowTicketContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">245</span><span class=\"mtk1\">              </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralTokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">246</span><span class=\"mtk1\">          );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">247</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">248</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Repay</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">interest</span><span class=\"mtk1\">, </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">loanAmount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit gas: should use cached loan.loanAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">249</span><span class=\"mtk1\">          </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Close</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">250</span><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">338</span><span class=\"mtk1\">          </span><span class=\"mtk12\">Loan</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loan</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">loanInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">339</span><span class=\"mtk1\">          </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">closed</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastAccumulatedTimestamp</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">340</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">341</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loanInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">loanAmount</span><span class=\"mtk1\"> + </span><span class=\"mtk11\">_interestOwed</span><span class=\"mtk1\">( </span><span class=\"mtk3\">//@audit gas: should use loan.loanAmount instead of loanInfo[loanId].loanAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">342</span><span class=\"mtk1\">              </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">loanAmount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">343</span><span class=\"mtk1\">              </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastAccumulatedTimestamp</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">344</span><span class=\"mtk1\">              </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">perAnumInterestRate</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">345</span><span class=\"mtk1\">              </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">accumulatedInterest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">346</span><span class=\"mtk1\">          );</span></span></span></code></pre>\n<h2 id=\"g-02-comparisons\" style=\"position:relative;\"><a href=\"#g-02-comparisons\" aria-label=\"g 02 comparisons permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] Comparisons</h2>\n<h3 id=\"-0-is-less-efficient-than--0-for-unsigned-integers-with-proof\" style=\"position:relative;\"><a href=\"#-0-is-less-efficient-than--0-for-unsigned-integers-with-proof\" aria-label=\" 0 is less efficient than  0 for unsigned integers with proof permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>> 0</code> is less efficient than <code>!= 0</code> for unsigned integers (with proof)</h3>\n<p><code>!= 0</code> costs less gas compared to <code>> 0</code> for unsigned integers in <code>require</code> statements with the optimizer enabled (6 gas)</p>\n<p>Proof: While it may seem that <code>> 0</code> is cheaper than <code>!=</code>, this is only true without the optimizer enabled and outside a require statement. If you enable the optimizer at 10k AND you’re in a <code>require</code> statement, this will save gas. You can see <a href=\"https://twitter.com/gzeon/status/1485428085885640706\">this tweet</a> for more proofs.</p>\n<p>I suggest changing <code>> 0</code> with <code>!= 0</code> here:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">321</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_improvementRate</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;NFTLoanFacilitator: 0 improvement rate&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Also, please enable the Optimizer.</p>\n<h2 id=\"g-03-arithmetics\" style=\"position:relative;\"><a href=\"#g-03-arithmetics\" aria-label=\"g 03 arithmetics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] Arithmetics</h2>\n<h3 id=\"i-costs-less-gas-compared-to-i-or-i--1\" style=\"position:relative;\"><a href=\"#i-costs-less-gas-compared-to-i-or-i--1\" aria-label=\"i costs less gas compared to i or i  1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>++i</code> costs less gas compared to <code>i++</code> or <code>i += 1</code></h3>\n<p><code>++i</code> costs less gas compared to <code>i++</code> or <code>i += 1</code> for unsigned integer, as pre-increment is cheaper (about 5 gas per iteration). This statement is true even with the optimizer enabled.</p>\n<p><code>i++</code> increments <code>i</code> and returns the initial value of <code>i</code>. Which means:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">i</span><span class=\"mtk1\">++; </span><span class=\"mtk3\">// == 1 but i == 2  </span></span></span></code></pre>\n<p>But <code>++i</code> returns the actual incremented value:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// == 2 and i == 2 too, so no need for a temporary variable  </span></span></span></code></pre>\n<p>In the first case, the compiler has to create a temporary variable (when used) for returning <code>1</code> instead of <code>2</code></p>\n<p>Instances include:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">LendTicket</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">39</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">balanceOf</span><span class=\"mtk1\">[</span><span class=\"mtk12\">from</span><span class=\"mtk1\">]--;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">LendTicket</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">41</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">balanceOf</span><span class=\"mtk1\">[</span><span class=\"mtk12\">to</span><span class=\"mtk1\">]++;</span></span></span></code></pre>\n<p>I suggest using <code>++i</code> instead of <code>i++</code> to increment the value of an uint variable.<br>\nSame thing for <code>--i</code> and <code>i--</code></p>\n<h3 id=\"unchecking-arithmetics-operations-that-cant-underflowoverflow\" style=\"position:relative;\"><a href=\"#unchecking-arithmetics-operations-that-cant-underflowoverflow\" aria-label=\"unchecking arithmetics operations that cant underflowoverflow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unchecking arithmetics operations that can’t underflow/overflow</h3>\n<p>Solidity version 0.8+ comes with implicit overflow and underflow checks on unsigned integers. When an overflow or an underflow isn’t possible (as an example, when a comparison is made before the arithmetic operation), some gas can be saved by using an <code>unchecked</code> block: <a href=\"https://docs.soliditylang.org/en/v0.8.10/control-structures.html#checked-or-unchecked-arithmetic\">Checked or Unchecked Arithmetic</a>.</p>\n<p>I suggest wrapping with an <code>unchecked</code> block here (see <code>@audit</code> tags for more details):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">156</span><span class=\"mtk1\">              </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">facilitatorTake</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">originationFeeRate</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">SCALAR</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">157</span><span class=\"mtk1\">              </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanAssetContractAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">158</span><span class=\"mtk1\">                  </span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">borrowTicketContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">159</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">facilitatorTake</span><span class=\"mtk1\"> </span><span class=\"mtk3\">//@audit gas: should be unchecked as facilitatorTake is &lt; amount and can&#39;t underflow L156 (originationFeeRate is upper bounded and always &lt; SCALAR)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">209</span><span class=\"mtk1\">                  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">facilitatorTake</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">amountIncrease</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">originationFeeRate</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">SCALAR</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">210</span><span class=\"mtk1\">                  </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanAssetContractAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">211</span><span class=\"mtk1\">                      </span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">borrowTicketContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">212</span><span class=\"mtk1\">:                     </span><span class=\"mtk12\">amountIncrease</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">facilitatorTake</span><span class=\"mtk1\"> </span><span class=\"mtk3\">//@audit gas: should be unchecked as facilitatorTake is &lt; amount and can&#39;t underflow L209 (originationFeeRate is upper bounded and always &lt; SCALAR)</span></span></span></code></pre>\n<h2 id=\"g-04-visibility\" style=\"position:relative;\"><a href=\"#g-04-visibility\" aria-label=\"g 04 visibility permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] Visibility</h2>\n<h3 id=\"consider-making-some-constants-as-non-public-to-save-gas\" style=\"position:relative;\"><a href=\"#consider-making-some-constants-as-non-public-to-save-gas\" aria-label=\"consider making some constants as non public to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Consider making some constants as non-public to save gas</h3>\n<p>Reducing from <code>public</code> to <code>private</code> or <code>internal</code> can save gas when a constant isn’t used outside of its contract.\nI suggest changing the visibility from <code>public</code> to <code>internal</code> or <code>private</code> here:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">21</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">INTEREST_RATE_DECIMALS</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">3</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">24</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SCALAR</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk12\">INTEREST_RATE_DECIMALS</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-05-errors\" style=\"position:relative;\"><a href=\"#g-05-errors\" aria-label=\"g 05 errors permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Errors</h2>\n<h3 id=\"reduce-the-size-of-error-messages-long-revert-strings\" style=\"position:relative;\"><a href=\"#reduce-the-size-of-error-messages-long-revert-strings\" aria-label=\"reduce the size of error messages long revert strings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reduce the size of error messages (Long revert Strings)</h3>\n<p>Shortening revert strings to fit in 32 bytes will decrease deployment time gas and will decrease runtime gas when the revert condition is met.</p>\n<p>Revert strings that are longer than 32 bytes require at least one additional mstore, along with additional overhead for computing memory offset, etc.</p>\n<p>Revert strings > 32 bytes:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">118</span><span class=\"mtk1\">:        </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: borrow ticket holder only&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">121</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastAccumulatedTimestamp</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: has lender, use repayAndCloseLoan&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">178</span><span class=\"mtk1\">:                </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: proposed terms must be better than existing terms&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">189</span><span class=\"mtk1\">:            </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: accumulated interest exceeds uint128&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">255</span><span class=\"mtk1\">:        </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: lend ticket holder only&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">259</span><span class=\"mtk1\">:        </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: payment is not late&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanTicket</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">15</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nftLoanFacilitator</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;NFTLoanTicket: only loan facilitator&quot;</span><span class=\"mtk1\">); </span></span></span></code></pre>\n<p>I suggest shortening the revert strings to fit in 32 bytes, or that using custom errors as described next.</p>\n<h3 id=\"use-custom-errors-instead-of-revert-strings-to-save-gas\" style=\"position:relative;\"><a href=\"#use-custom-errors-instead-of-revert-strings-to-save-gas\" aria-label=\"use custom errors instead of revert strings to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use Custom Errors instead of Revert Strings to save Gas</h3>\n<p>Custom errors from Solidity 0.8.4 are cheaper than revert strings (cheaper deployment cost and runtime cost when the revert condition is met)</p>\n<p>Source <a href=\"https://blog.soliditylang.org/2021/04/21/custom-errors/\">Custom Errors in Solidity</a>:</p>\n<blockquote>\n<p>Starting from <a href=\"https://github.com/ethereum/solidity/releases/tag/v0.8.4\">Solidity v0.8.4</a>, there is a convenient and gas-efficient way to explain to users why an operation failed through the use of custom errors. Until now, you could already use strings to give more information about failures (e.g., <code>revert(\"Insufficient funds.\");</code>), but they are rather expensive, especially when it comes to deploy cost, and it is difficult to use dynamic information in them.</p>\n</blockquote>\n<p>Custom errors are defined using the <code>error</code> statement, which can be used inside and outside of contracts (including interfaces and libraries).</p>\n<p>Instances include:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">LendTicket</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">32</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">ownerOf</span><span class=\"mtk1\">[</span><span class=\"mtk12\">id</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;WRONG_FROM&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">LendTicket</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">34</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;INVALID_RECIPIENT&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">53</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">loanInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">closed</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: loan closed&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">81</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">minDurationSeconds</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;NFTLoanFacilitator: 0 duration&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">82</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">minLoanAmount</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;NFTLoanFacilitator: 0 loan amount&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">83</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralContractAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">lendTicketContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">85</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralContractAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">borrowTicketContract</span><span class=\"mtk1\">, </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">117</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">borrowTicketContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">) == </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">121</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastAccumulatedTimestamp</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: has lender, use repayAndCloseLoan&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">144</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanAssetContractAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: invalid loan&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">146</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">interestRate</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">perAnumInterestRate</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;NFTLoanFacilitator: rate too high&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">147</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">durationSeconds</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">durationSeconds</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;NFTLoanFacilitator: duration too low&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">148</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">loanAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;NFTLoanFacilitator: amount too low&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">171</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">interestRate</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">previousInterestRate</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;NFTLoanFacilitator: rate too high&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">172</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">durationSeconds</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">previousDurationSeconds</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;NFTLoanFacilitator: duration too low&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">174</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">require</span><span class=\"mtk1\">((</span><span class=\"mtk12\">previousLoanAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">requiredImprovementRate</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">SCALAR</span><span class=\"mtk1\">) &lt;= </span><span class=\"mtk12\">amountIncrease</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">188</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">accumulatedInterest</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">254</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lendTicketContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">loanId</span><span class=\"mtk1\">) == </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">258</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">durationSeconds</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">loan</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lastAccumulatedTimestamp</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">280</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lendTicketContract</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;NFTLoanFacilitator: already set&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">290</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">borrowTicketContract</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;NFTLoanFacilitator: already set&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">307</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_originationFeeRate</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk7\">5</span><span class=\"mtk1\"> * (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** (</span><span class=\"mtk12\">INTEREST_RATE_DECIMALS</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">2</span><span class=\"mtk1\">)), </span><span class=\"mtk8\">&quot;NFTLoanFacilitator: max fee 5%&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanFacilitator</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">321</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_improvementRate</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;NFTLoanFacilitator: 0 improvement rate&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">NFTLoanTicket</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">15</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nftLoanFacilitator</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;NFTLoanTicket: only loan facilitator&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>I suggest replacing revert strings with custom errors.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/20#issuecomment-1090199607\">wilsoncusack (Backed Protocol) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Good stuff.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/20#issuecomment-1100240254\">wilsoncusack (Backed Protocol) resolved and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed <code>loan.loanAmount</code>.</p>\n<p>Fixed the error message size.</p>\n<p>I don’t think will change any others of these.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-04-backed-findings/issues/20#issuecomment-1105643720\">wilsoncusack (Backed Protocol) commented</a>:</strong></p>\n<blockquote>\n<p>[G-01] Resolved<br>\n[G-02] Resolved<br>\n[G-03] Won’t fix<br>\n[G-04] Won’t fix<br>\n[G-05] Resolved</p>\n</blockquote>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk5 { color: #D16969; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-3\">High Risk Findings (3)</a></p>\n<ul>\n<li><a href=\"#h-01-can-force-borrower-to-pay-huge-interest\">[H-01] Can force borrower to pay huge interest</a></li>\n<li><a href=\"#h-02-currentloanowner-can-manipulate-loaninfo-when-any-lenders-try-to-buyout\">[H-02] currentLoanOwner can manipulate loanInfo when any lenders try to buyout</a></li>\n<li><a href=\"#h-03-borrower-can-be-their-own-lender-and-steal-funds-from-buyout-due-to-reentrancy\">[H-03] Borrower can be their own lender and steal funds from buyout due to reentrancy</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-7\">Medium Risk Findings (7)</a></p>\n<ul>\n<li><a href=\"#m-01-when-an-attacker-lends-to-a-loan-the-attacker-can-trigger-dos-that-any-lenders-can-not-buyout-it\">[M-01] When an attacker lends to a loan, the attacker can trigger DoS that any lenders can not buyout it</a></li>\n<li><a href=\"#m-02-protocol-doesnt-handle-fee-on-transfer-tokens\">[M-02] Protocol doesn’t handle fee on transfer tokens</a></li>\n<li><a href=\"#m-03-sendcollateralto-is-unchecked-in-closeloan-which-can-cause-users-collateral-nft-to-be-frozen\">[M-03] <code>sendCollateralTo</code> is unchecked in <code>closeLoan()</code>, which can cause user’s collateral NFT to be frozen</a></li>\n<li><a href=\"#m-04-requiredimprovementrate-can-not-work-as-expected-when-previousinterestrate-less-than-10-due-to-precision-loss\">[M-04] <code>requiredImprovementRate</code> can not work as expected when <code>previousInterestRate</code> less than 10 due to precision loss</a></li>\n<li><a href=\"#m-05-borrowers-lose-funds-if-they-call-repayandcloseloan-instead-of-closeloan\">[M-05] Borrowers lose funds if they call <code>repayAndCloseLoan</code> instead of <code>closeLoan</code></a></li>\n<li><a href=\"#m-06-might-not-get-desired-min-loan-amount-if-_originationfeerate-changes\">[M-06] Might not get desired min loan amount if <code>_originationFeeRate</code> changes</a></li>\n<li><a href=\"#m-07-mintborrowticketto-can-be-a-contract-with-no-onerc721received-method-which-may-cause-the-borrowticket-nft-to-be-frozen-and-put-users-funds-at-risk\">[M-07] <code>mintBorrowTicketTo</code> can be a contract with no <code>onERC721Received</code> method, which may cause the BorrowTicket NFT to be frozen and put users’ funds at risk</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#l-01-loans-can-be-created-and-paid-with-non-existentdestructed-tokens\">L-01 Loans can be created and paid with non-existent/destructed tokens</a></li>\n<li><a href=\"#l-02-originationfeerates-of-less-than-1000-may-charge-no-fees-if-amounts-are-small\">L-02 <code>originationFeeRate</code>s of less than 1000 may charge no fees if amounts are small</a></li>\n<li><a href=\"#l-03-a-malicious-owner-can-keep-the-fee-rate-at-zero-but-if-a-large-value-transfer-enters-the-mempool-the-owner-can-jack-the-rate-up-to-the-maximum\">L-03 A malicious owner can keep the fee rate at zero, but if a large value transfer enters the mempool, the owner can jack the rate up to the maximum</a></li>\n<li><a href=\"#l-04-a-malicious-owner-can-set-an-effectively-infinite-improvement-rate-with-typeuint256max-after-heshe-has-entered-into-a-loan-to-prevent-others-from-buying-them-out\">L-04 A malicious owner can set an effectively infinite improvement rate with <code>type(uint256).max</code> after he/she has entered into a loan to prevent others from buying them out</a></li>\n<li><a href=\"#l-05-tokenuri-reverts-for-tokens-that-dont-implement-ierc20metadata\">L-05 <code>tokenURI()</code> reverts for tokens that don’t implement <code>IERC20Metadata</code></a></li>\n<li><a href=\"#l-06-_safemint-should-be-used-rather-than-_mint-wherever-possible\">L-06 <code>_safeMint()</code> should be used rather than <code>_mint()</code> wherever possible</a></li>\n<li><a href=\"#l-07-loanfacilitatortransfer-does-not-verify-that-the-receiver-is-capable-of-handling-an-nft\">L-07 <code>loanFacilitatorTransfer()</code> does not verify that the receiver is capable of handling an NFT</a></li>\n<li><a href=\"#l-08-missing-checks-for-address0x0-when-assigning-values-to-address-state-variables\">L-08 Missing checks for <code>address(0x0)</code> when assigning values to <code>address</code> state variables</a></li>\n<li><a href=\"#n-01-constants-should-be-defined-rather-than-using-magic-numbers\">N-01 <code>constant</code>s should be defined rather than using magic numbers</a></li>\n<li><a href=\"#n-02-typos\">N-02 Typos</a></li>\n<li><a href=\"#n-03-natspec-is-incomplete\">N-03 NatSpec is incomplete</a></li>\n<li><a href=\"#n-04-event-is-missing-indexed-fields\">N-04 Event is missing <code>indexed</code> fields</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations-23\">Gas Optimizations (23)</a></p>\n<ul>\n<li><a href=\"#foreword\">Foreword</a></li>\n<li><a href=\"#g-01-storage\">G-01 Storage</a></li>\n<li><a href=\"#g-02-comparisons\">G-02 Comparisons</a></li>\n<li><a href=\"#g-03-arithmetics\">G-03 Arithmetics</a></li>\n<li><a href=\"#g-04-visibility\">G-04 Visibility</a></li>\n<li><a href=\"#g-05-errors\">G-05 Errors</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}