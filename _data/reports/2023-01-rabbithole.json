{
  "circa": {
    "title": "RabbitHole Quest Protocol contest",
    "sponsor": "RabbitHole",
    "slug": "2023-01-rabbithole",
    "date": "2023-04-11",
    "findings": "https://github.com/code-423n4/2023-01-rabbithole-findings/issues",
    "contest": 208
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the RabbitHole Quest Protocol smart contract system written in Solidity. The audit contest took place between January 25—January 30 2023.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>185 Wardens contributed reports to the RabbitHole Quest Protocol contest:</p>\n<ol>\n<li>0x1f8b</li>\n<li>0x4non</li>\n<li>0x5rings</li>\n<li><a href=\"https://twitter.com/0xAgro\">0xAgro</a></li>\n<li>0xMAKEOUTHILL</li>\n<li>0xMirce</li>\n<li>0xRobocop</li>\n<li><a href=\"https://twitter.com/0xSmartContract\">0xSmartContract</a></li>\n<li>0xackermann</li>\n<li>0xbepresent</li>\n<li>0xhacksmithh</li>\n<li><a href=\"https://twitter.com/0xmrhoodie\">0xmrhoodie</a></li>\n<li>0xmuxyz</li>\n<li><a href=\"https://twitter.com/ngndev\">0xngndev</a></li>\n<li>7siech</li>\n<li><a href=\"https://twitter.com/akshaysrivastv\">AkshaySrivastav</a></li>\n<li>AlexCzm</li>\n<li>ArmedGoose</li>\n<li>Atarpara</li>\n<li>Awesome</li>\n<li><a href=\"https://github.com/Aymen1001\">Aymen0909</a></li>\n<li>BClabs (nalus and Reptilia)</li>\n<li>Bauer</li>\n<li>Bnke0x0</li>\n<li>Breeje</li>\n<li>CodingNameKiki</li>\n<li><a href=\"https://twitter.com/DeFiCast\">Cryptor</a></li>\n<li><a href=\"https://twitter.com/DadeKuma\">DadeKuma</a></li>\n<li><a href=\"https://twitter.com/Deivitto\">Deivitto</a></li>\n<li><a href=\"https://twitter.com/dewaxindo\">Dewaxindo</a></li>\n<li>Diana</li>\n<li>DimitarDimitrov</li>\n<li>Dug</li>\n<li><a href=\"https://twitter.com/ElKu_crypto\">ElKu</a></li>\n<li>ForkEth (<a href=\"https://twitter.com/NullbutC00L\">NullbutC00L</a> and filipaze)</li>\n<li>Garrett</li>\n<li>HollaDieWaldfee</li>\n<li>IceBear</li>\n<li>IllIllI</li>\n<li><a href=\"https://www.linkedin.com/in/aniruddha-dhumal/\">Inspectah</a></li>\n<li>Iurii3</li>\n<li>Jayus</li>\n<li>Josiah</li>\n<li>KIntern_NA (TrungOre, duc, and Trumpero)</li>\n<li><a href=\"https://twitter.com/nonfungiblenero\">Kenshin</a></li>\n<li>KmanOfficial</li>\n<li>Krayt</li>\n<li>KrisApostolov</li>\n<li>LethL</li>\n<li>Lotus</li>\n<li><a href=\"https://matzip.xyz/\">M4TZ1P</a> (<a href=\"https://twitter.com/huna38699\">DekaiHako</a>, holyhansss_kr, <a href=\"https://twitter.com/younsle1\">Zer0Luck</a>, AAIIWITF, and <a href=\"https://github.com/exd0tpy\">exd0tpy</a>)</li>\n<li><a href=\"https://twitter.com/wookiemad\">MadWookie</a></li>\n<li>MiniGlome</li>\n<li>NoamYakov</li>\n<li>PaludoX0</li>\n<li>Phenomana</li>\n<li>PrasadLak</li>\n<li>RaymondFam</li>\n<li>ReyAdmirado</li>\n<li>Rolezn</li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li>SAAJ</li>\n<li>SaeedAlipoor01988</li>\n<li>SaharDevep</li>\n<li>SleepingBugs (<a href=\"https://twitter.com/Deivitto\">Deivitto</a> and 0xLovesleep)</li>\n<li>SovaSlava</li>\n<li><a href=\"https://ericci.dev/\">StErMi</a></li>\n<li><a href=\"https://www.instagram.com/pt__42/\">Timenov</a></li>\n<li>Tointer</li>\n<li>Tricko</li>\n<li>UdarTeam (ahmedov and tourist)</li>\n<li>V_B (Barichek and vlad_bochok)</li>\n<li>__141345__</li>\n<li><a href=\"https://github.com/romeroadrian\">adriro</a></li>\n<li>ali</li>\n<li>amaechieth</li>\n<li>arialblack14</li>\n<li>atharvasama</li>\n<li>badman</li>\n<li><a href=\"https://twitter.com/eth_lines\">betweenETHlines</a></li>\n<li><a href=\"https://twitter.com/bin2chen\">bin2chen</a></li>\n<li>brevis</li>\n<li>btk</li>\n<li><a href=\"https://twitter.com/bytes032\">bytes032</a></li>\n<li><a href=\"https://twitter.com/c3ph_\">c3phas</a></li>\n<li><a href=\"https://twitter.com/carlitox477\">carlitox477</a></li>\n<li>carrotsmuggler</li>\n<li><a href=\"https://twitter.com/CatellaTech\">catellatech</a></li>\n<li>cccz</li>\n<li>chaduke</li>\n<li>chrisdior4</li>\n<li><a href=\"https://twitter.com/codeIslight\">codeislight</a></li>\n<li>critical-or-high</li>\n<li>cryptojedi88</li>\n<li>cryptonue</li>\n<li>cryptostellar5</li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li>ddimitrov22</li>\n<li><a href=\"https://twitter.com/im_Dharma09\">dharma09</a></li>\n<li>doublesharp</li>\n<li>evan</li>\n<li><a href=\"https://twitter.com/favelanky\">favelanky</a></li>\n<li>fellows</li>\n<li>frankudoags</li>\n<li>fs0c</li>\n<li><a href=\"https://twitter.com/georgitsoneff\">georgits</a></li>\n<li>glcanvas</li>\n<li><a href=\"https://twitter.com/gzeon\">gzeon</a></li>\n<li>haku</li>\n<li>halden</li>\n<li><a href=\"https://twitter.com/hansfriese\">hansfriese</a></li>\n<li>hihen</li>\n<li>hl_</li>\n<li>holme</li>\n<li>horsefacts</li>\n<li>jasonxiale</li>\n<li><a href=\"https://twitter.com/Jat9292\">jat</a></li>\n<li>jesusrod15</li>\n<li><a href=\"https://twitter.com/JoeStakey\">joestakey</a></li>\n<li>karanctf</li>\n<li>kenta</li>\n<li>ladboy233</li>\n<li>libratus</li>\n<li>lukris02</li>\n<li>luxartvinsec</li>\n<li>m9800</li>\n<li>mahdikarimi</li>\n<li>manikantanynala97</li>\n<li><a href=\"https://github.com/martin-petrov03\">martin</a></li>\n<li>matrix_0wl</li>\n<li>mert_eren</li>\n<li>millersplanet</li>\n<li><a href=\"https://www.linkedin.com/in/minhquanym/\">minhquanym</a></li>\n<li>mookimgo</li>\n<li><a href=\"https://veranos.io\">mrpathfindr</a></li>\n<li><a href=\"https://twitter.com/nadin20678790\">nadin</a></li>\n<li><a href=\"https://twitter.com/zeroxnavinavu\">navinavu</a></li>\n<li><a href=\"https://github.com/nicobevilacqua\">nicobevi</a></li>\n<li><a href=\"https://twitter.com/da5e8f4e\">oberon</a></li>\n<li>omis</li>\n<li>p4st13r4 (<a href=\"https://github.com/0x69e8\">0x69e8</a> and 0xb4bb4)</li>\n<li>paspe</li>\n<li><a href=\"https://twitter.com/@PavanKumarKv2\">pavankv</a></li>\n<li><a href=\"https://twitter.com/peak_bolt\">peakbolt</a></li>\n<li>peanuts</li>\n<li>petersspetrov</li>\n<li><a href=\"https://t.me/pfahard\">pfapostol</a></li>\n<li>prestoncodes</li>\n<li>rbserver</li>\n<li>romand</li>\n<li>rvierdiiev</li>\n<li>sakshamguruji</li>\n<li><a href=\"https://medium.com/@saneryee-studio\">saneryee</a></li>\n<li>sashik_eth</li>\n<li><a href=\"https://twitter.com/sayan_011\">sayan</a></li>\n<li><a href=\"https://github.com/seeu-inspace\">seeu</a></li>\n<li>shark</li>\n<li>simon135</li>\n<li>thekmj</li>\n<li><a href=\"https://twitter.com/timongty\">timongty</a></li>\n<li>tnevler</li>\n<li>trustindistrust</li>\n<li><a href=\"https://twitter.com/cvetanovv0\">tsvetanovv</a></li>\n<li>ubermensch</li>\n<li><a href=\"https://twitter.com/usmannk\">usmannk</a></li>\n<li>vagrant</li>\n<li>vanko1</li>\n<li>wait</li>\n<li>xAriextz</li>\n<li>yixxas</li>\n<li>yosuke</li>\n<li>zadaru13</li>\n<li>zaskoh</li>\n</ol>\n<p>This contest was judged by <a href=\"https://github.com/kirk-baird\">kirk-baird</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/liveactionllama\">liveactionllama</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 11 unique vulnerabilities. Of these vulnerabilities, 2 received a risk rating in the category of HIGH severity and 9 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 89 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 50 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2023-01-rabbithole\">C4 RabbitHole Quest Protocol contest repository</a>, and is composed of 10 smart contracts written in the Solidity programming language and includes 752 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities based on three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>For more information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>, specifically our section on <a href=\"https://docs.code4rena.com/awarding/judging-criteria/severity-categorization\">Severity Categorization</a>.</p>\n<h1 id=\"high-risk-findings-2\" style=\"position:relative;\"><a href=\"#high-risk-findings-2\" aria-label=\"high risk findings 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (2)</h1>\n<h2 id=\"h-01-bad-implementation-in-minter-access-control-for-rabbitholereceipt-and-rabbitholetickets-contracts\" style=\"position:relative;\"><a href=\"#h-01-bad-implementation-in-minter-access-control-for-rabbitholereceipt-and-rabbitholetickets-contracts\" aria-label=\"h 01 bad implementation in minter access control for rabbitholereceipt and rabbitholetickets contracts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/608\">[H-01] Bad implementation in minter access control for <code>RabbitHoleReceipt</code> and <code>RabbitHoleTickets</code> contracts</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/608\">adriro</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/706\">btk</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/697\">luxartvinsec</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/682\">KrisApostolov</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/636\">Garrett</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/627\">AlexCzm</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/626\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/624\">AlexCzm</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/617\">Deivitto</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/573\">petersspetrov</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/553\">Josiah</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/551\">c3phas</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/534\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/533\">fellows</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/481\">vagrant</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/461\">sakshamguruji</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/457\">yosuke</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/451\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/449\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/432\">tsvetanovv</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/415\">Kenshin</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/404\">pfapostol</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/395\">Awesome</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/388\">7siech</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/320\">gzeon</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/319\">gzeon</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/304\">oberon</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/295\">Jayus</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/294\">pavankv</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/274\">ElKu</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/273\">ElKu</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/262\">xAriextz</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/261\">xAriextz</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/260\">shark</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/254\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/228\">paspe</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/227\">paspe</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/225\">amaechieth</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/209\">SovaSlava</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/193\">DimitarDimitrov</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/187\">vanko1</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/170\">codeislight</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/165\">0xMirce</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/152\">trustindistrust</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/151\">navinavu</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/111\">UdarTeam</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/106\">AkshaySrivastav</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/103\">Timenov</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/97\">0xMAKEOUTHILL</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/89\">prestoncodes</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/69\">millersplanet</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/67\">millersplanet</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/57\">UdarTeam</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/52\">usmannk</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/50\">navinavu</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/48\">Cryptor</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/46\">frankudoags</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/10\">mookimgo</a>, and <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/9\">thekmj</a></em></p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L58-L61\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L58-L61</a><br>\n<a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleTickets.sol#L47-L50\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleTickets.sol#L47-L50</a></p>\n<p>Both <code>RabbitHoleReceipt</code> and <code>RabbitHoleTickets</code> contracts define a <code>mint</code> function that is protected by a <code>onlyMinter</code> modifier:</p>\n<p>RabbitHoleReceipt:</p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L98-L104\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L98-L104</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk11\">increment</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newTokenID</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_tokenIds</span><span class=\"mtk1\">.</span><span class=\"mtk11\">current</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">questIdForTokenId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">newTokenID</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">timestampForTokenId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">newTokenID</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_safeMint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">newTokenID</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>RabbitHoleTickets:</p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleTickets.sol#L83-L85\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleTickets.sol#L83-L85</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">id_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">data_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>However, in both cases the modifier implementation is flawed as there isn’t any check for a require or revert, the comparison will silently return false and let the execution continue:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">minterAddress</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Any account can mint any number of <code>RabbitHoleReceipt</code> and <code>RabbitHoleTickets</code> tokens.</p>\n<p>This represents a critical issue as receipts can be used to claim rewards in quests. An attacker can freely mint receipt tokens for any quest to steal all the rewards from it.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The following test demonstrates the issue.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">AuditTest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Test</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signerPrivateKey</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minter</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFeeRecipient</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ReceiptRenderer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiptRenderer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">TicketRenderer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ticketRenderer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RabbitHoleTickets</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tickets</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setUp</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">deployer</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;deployer&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">signerPrivateKey</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0x123</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">signer</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addr</span><span class=\"mtk1\">(</span><span class=\"mtk12\">signerPrivateKey</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">label</span><span class=\"mtk1\">(</span><span class=\"mtk12\">signer</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;signer&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;royaltyRecipient&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">minter</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;minter&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">protocolFeeRecipient</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;protocolFeeRecipient&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployer</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Receipt</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">receiptRenderer</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ReceiptRenderer</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiptImpl</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">RabbitHoleReceipt</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">receipt</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RabbitHoleReceipt</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ERC1967Proxy</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiptImpl</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiptRenderer</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minter</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// factory</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">factoryImpl</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">QuestFactory</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">factory</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">QuestFactory</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ERC1967Proxy</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factoryImpl</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">signer</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">), </span><span class=\"mtk12\">protocolFeeRecipient</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setMinterAddress</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// tickets</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ticketRenderer</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TicketRenderer</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">RabbitHoleTickets</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ticketsImpl</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">RabbitHoleTickets</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tickets</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RabbitHoleTickets</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ERC1967Proxy</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ticketsImpl</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tickets</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ticketRenderer</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minter</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ERC20 token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">token</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Mock ERC20&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;MERC20&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRewardAllowlistAddress</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">), </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_RabbitHoleReceipt_RabbitHoleTickets_AnyoneCanMint</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">attacker</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;attacker&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Anyone can freely mint RabbitHoleReceipt</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&quot;a quest&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">), </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Anyone can freely mint RabbitHoleTickets</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tickets</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tickets</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">), </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommendation\" style=\"position:relative;\"><a href=\"#recommendation\" aria-label=\"recommendation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>The modifier should require that the caller is the <code>minterAddress</code> in order to revert the call in case this condition doesn’t hold.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">minterAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/608\">waynehoover (RabbitHole) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-02-protocol-fees-can-be-withdrawn-multiple-times-in-erc20quest\" style=\"position:relative;\"><a href=\"#h-02-protocol-fees-can-be-withdrawn-multiple-times-in-erc20quest\" aria-label=\"h 02 protocol fees can be withdrawn multiple times in erc20quest permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/605\">[H-02] Protocol fees can be withdrawn multiple times in <code>Erc20Quest</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/605\">adriro</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/700\">timongty</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/684\">trustindistrust</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/674\">M4TZ1P</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/665\">Garrett</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/658\">holme</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/623\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/587\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/547\">fs0c</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/521\">tnevler</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/502\">lukris02</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/501\">fs0c</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/500\">fs0c</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/498\">horsefacts</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/494\">cryptonue</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/489\">bytes032</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/473\">sashik_eth</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/464\">cccz</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/456\">manikantanynala97</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/447\">wait</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/442\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/436\">yixxas</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/429\">Iurii3</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/426\">hl_</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/422\">zadaru13</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/421\">MiniGlome</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/407\">glcanvas</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/405\">glcanvas</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/384\">doublesharp</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/377\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/375\">Lotus</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/363\">KIntern_NA</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/360\">SovaSlava</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/359\">KmanOfficial</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/357\">martin</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/330\">peanuts</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/312\">peakbolt</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/311\">0xmrhoodie</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/308\">gzeon</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/291\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/286\">Bauer</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/277\">0xngndev</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/276\">0xngndev</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/272\">mrpathfindr</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/266\">mahdikarimi</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/250\">evan</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/247\">0xRobocop</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/222\">zaskoh</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/215\">omis</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/208\">ArmedGoose</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/204\">ElKu</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/194\">Atarpara</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/175\">codeislight</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/163\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/153\">trustindistrust</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/144\">AkshaySrivastav</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/125\">carrotsmuggler</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/92\">hihen</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/85\">prestoncodes</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/77\">ladboy233</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/65\">mert_eren</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/53\">usmannk</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/44\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/37\">HollaDieWaldfee</a>, and <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/23\">rvierdiiev</a></em></p>\n<p>The <code>withdrawFee</code> function present in the <code>Erc20Quest</code> contract can be used to withdraw protocol fees after a quest has ended, which are sent to the protocol fee recipient address:</p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L102-L104\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L102-L104</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawFee</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyAdminWithdrawAfterEnd</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">protocolFeeRecipient</span><span class=\"mtk1\">, </span><span class=\"mtk11\">protocolFee</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This function doesn’t provide any kind of protection and can be called multiple times, which will send more tokens than intended to the protocol fee recipient, stealing funds from the contract.</p>\n<h3 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The <code>withdrawFee</code> function can be called multiples after a quest has ended, potentially stealing funds from other people. The contract may have funds from unclaimed receipts (i.e. users that have completed the quest, redeemed their receipt but haven’t claimed their rewards yet) and remaining tokens from participants who didn’t complete the quest, which can be claimed back by the owner of the quest.</p>\n<p>Note also that the <code>onlyAdminWithdrawAfterEnd</code> modifier, even though it indicates that an “admin” should be allowed to call this function, only validates the quest end time and fails to provide any kind of access control:</p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L76-L79\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L76-L79</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyAdminWithdrawAfterEnd</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">endTime</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NoWithdrawDuringClaim</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This means that anyone could call this function, so even if the quest owner or the protocol fee recipient behave correctly, a griefer could potentially call this function right after the quest end time to remove all (or most) of the funds from the contract.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In the following demonstration, the <code>withdrawFee</code> function is called multiple times by a bad actor to remove all tokens from the quest contract.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">AuditTest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Test</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signerPrivateKey</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minter</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFeeRecipient</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ReceiptRenderer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiptRenderer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">TicketRenderer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ticketRenderer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RabbitHoleTickets</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tickets</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setUp</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">deployer</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;deployer&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">signerPrivateKey</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0x123</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">signer</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addr</span><span class=\"mtk1\">(</span><span class=\"mtk12\">signerPrivateKey</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">label</span><span class=\"mtk1\">(</span><span class=\"mtk12\">signer</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;signer&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;royaltyRecipient&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">minter</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;minter&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">protocolFeeRecipient</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;protocolFeeRecipient&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployer</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Receipt</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">receiptRenderer</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ReceiptRenderer</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiptImpl</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">RabbitHoleReceipt</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">receipt</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RabbitHoleReceipt</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ERC1967Proxy</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiptImpl</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiptRenderer</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minter</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// factory</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">factoryImpl</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">QuestFactory</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">factory</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">QuestFactory</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ERC1967Proxy</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factoryImpl</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">signer</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">), </span><span class=\"mtk12\">protocolFeeRecipient</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setMinterAddress</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// tickets</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ticketRenderer</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TicketRenderer</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">RabbitHoleTickets</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ticketsImpl</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">RabbitHoleTickets</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tickets</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RabbitHoleTickets</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ERC1967Proxy</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ticketsImpl</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tickets</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ticketRenderer</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minter</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ERC20 token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">token</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Mock ERC20&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;MERC20&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRewardAllowlistAddress</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">), </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">signReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signature</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">hash</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">account</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">message</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ECDSA</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toEthSignedMessageHash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hash</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">v</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">r</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sign</span><span class=\"mtk1\">(</span><span class=\"mtk12\">signerPrivateKey</span><span class=\"mtk1\">, </span><span class=\"mtk12\">message</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">signature</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">r</span><span class=\"mtk1\">, </span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">v</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claimReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signature</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">signReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">account</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">account</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mintReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">questId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">hash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">signature</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_Erc20Quest_ProtocolFeeWithdrawMultipleTimes</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">alice</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;alice&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">attacker</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;attacker&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hours</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endTime</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hours</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardAmountOrTokenId</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&quot;a quest&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// create, fund and start quest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployer</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Erc20Quest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quest</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">Erc20Quest</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">createQuest</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">endTime</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">rewardAmountOrTokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk8\">&quot;erc20&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">questId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">rewardAmountOrTokenId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fees</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">rewards</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">questFee</span><span class=\"mtk1\">()) / </span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">quest</span><span class=\"mtk1\">), </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">fees</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">quest</span><span class=\"mtk1\">.</span><span class=\"mtk11\">start</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// simulate at least one user claims a receipt</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">claimReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">alice</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// simulate time elapses until the end of the quest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">warp</span><span class=\"mtk1\">(</span><span class=\"mtk12\">endTime</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// The following can be executed by attacker (griefer) or by the fee recipient</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">attacker</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">quest</span><span class=\"mtk1\">.</span><span class=\"mtk11\">protocolFee</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawCalls</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">rewards</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">fees</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">protocolFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">withdrawCalls</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">quest</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawFee</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Fee recipient has 100% of the funds</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">protocolFeeRecipient</span><span class=\"mtk1\">), </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">fees</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">quest</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommendation-1\" style=\"position:relative;\"><a href=\"#recommendation-1\" aria-label=\"recommendation 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Add a flag to the contract to indicate if protocol fees have been already withdrawn. Add a check to prevent the function from being called again.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/605#issuecomment-1440970195\">waynehoover (RabbitHole) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>I agree that this is an issue, but not a high risk issue. I expect high risk issues to be issues that can be called by anyone, not owners.</p>\n<p>As owners there are plenty of ways we can sabotage our contracts (for example via the set* functions) it is up to the owner to be sure they are executing the function correctly and in the correct context.</p>\n<p>The owner understands how this function works, so they can be sure not to call it multiple times.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/605#issuecomment-1441228306\">gzeon (warden) commented</a>:</strong></p>\n<blockquote>\n<blockquote>\n<p>While I agree that this is an issue, but not a high risk issue. I expect high risk issues to be issues that can be called by anyone, not owners.</p>\n<p>As owners there are plenty of ways we can sabotage our contracts (for example via the set* functions) it is up to the owner to be sure they are executing the function correctly and in the correct context.</p>\n<p>The owner understands how this function works, so they can be sure not to call it multiple times.</p>\n</blockquote>\n<p><code>onlyAdminWithdrawAfterEnd</code> is not <code>onlyAdmin</code>, anyone can call <code>withdrawFee</code> after end.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/605#issuecomment-1442573720\">kirk-baird (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I agree with @gzeon. This issue is a combination of two sub issues:</p>\n<ul>\n<li>Anyone can call <code>withdrawFee()</code></li>\n<li><code>withdrawFee()</code> can be called multiple times</li>\n</ul>\n<p>Allowing it to be called by anyone is sufficient to rate it high severity.</p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-9\" style=\"position:relative;\"><a href=\"#medium-risk-findings-9\" aria-label=\"medium risk findings 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (9)</h1>\n<h2 id=\"m-01-questfactory-is-suspicious-of-the-reorg-attack\" style=\"position:relative;\"><a href=\"#m-01-questfactory-is-suspicious-of-the-reorg-attack\" aria-label=\"m 01 questfactory is suspicious of the reorg attack permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/661\">[M-01] <code>QuestFactory</code> is suspicious of the reorg attack</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/661\">V_B</a></em></p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L75\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L75</a><br>\n<a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L108\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L108</a></p>\n<p>The <code>createQuest</code> function deploys a quest contract using the <code>create</code>, where the address derivation depends only on the <code>QuestFactory</code> nonce.</p>\n<p>At the same time, some of the chains (Polygon, Optimism, Arbitrum) to which the <code>QuestFactory</code> will be deployed are suspicious of the reorg attack.</p>\n<ul>\n<li><a href=\"https://polygonscan.com/blocks_forked\">https://polygonscan.com/blocks_forked</a></li>\n</ul>\n<p><img src=\"https://i.imgur.com/N8tDUVX.png\"></p>\n<p>Here you may be convinced that the Polygon has in practice subject to reorgs. Even more, the reorg on the picture is 1.5 minutes long. So, it is quite enough to create the quest and transfer funds to that address, especially when someone uses a script, and not doing it by hand.</p>\n<p>Optimistic rollups (Optimism/Arbitrum) are also suspect to reorgs since if someone finds a fraud the blocks will be reverted, even though the user receives a confirmation and already created a quest.</p>\n<h3 id=\"attack-scenario\" style=\"position:relative;\"><a href=\"#attack-scenario\" aria-label=\"attack scenario permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Attack Scenario</h3>\n<p>Imagine that Alice deploys a quest, and then sends funds to it. Bob sees that the network block reorg happens and calls <code>createQuest</code>. Thus, it creates <code>quest</code> with an address to which Alice sends funds. Then Alices’ transactions are executed and Alice transfers funds to Bob’s controlled quest.</p>\n<h3 id=\"impact-2\" style=\"position:relative;\"><a href=\"#impact-2\" aria-label=\"impact 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>If users rely on the address derivation in advance or try to deploy the wallet with the same address on different EVM chains, any funds sent to the wallet could potentially be withdrawn by anyone else. All in all, it could lead to the theft of user funds.</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Deploy the quest contract via <code>create2</code> with <code>salt</code> that includes <code>msg.sender</code> and <code>rewardTokenAddress_</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/661#issuecomment-1504018250\">waynehoover (RabbitHole) acknowledged</a></strong></p>\n<hr>\n<h2 id=\"m-02-user-may-lose-rewards-if-the-receipt-is-minted-after-quest-end-time\" style=\"position:relative;\"><a href=\"#m-02-user-may-lose-rewards-if-the-receipt-is-minted-after-quest-end-time\" aria-label=\"m 02 user may lose rewards if the receipt is minted after quest end time permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/601\">[M-02] User may lose rewards if the receipt is minted after quest end time</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/601\">adriro</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/695\">sashik_eth</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/692\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/683\">joestakey</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/677\">M4TZ1P</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/539\">m9800</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/525\">lukris02</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/484\">Tricko</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/482\">cccz</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/455\">cccz</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/419\">glcanvas</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/412\">Kenshin</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/379\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/354\">peanuts</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/353\">Breeje</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/351\">Breeje</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/316\">peakbolt</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/307\">badman</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/249\">0xRobocop</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/156\">0xbepresent</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/132\">carrotsmuggler</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/96\">HollaDieWaldfee</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/88\">prestoncodes</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/68\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/64\">mert_eren</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/24\">rvierdiiev</a>, and <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/22\">csanuragjain</a></em></p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L219-L229\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L219-L229</a><br>\n<a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L81-L87\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L81-L87</a></p>\n<p>After completing a task in the context of a quest, a user receives a signed hash that needs to be redeemed on-chain for a receipt that can later be claimed for a reward.</p>\n<p>The receipt is minted in the <code>mintReceipt</code> function present in the <code>QuestFactory</code> contract:</p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L219-L229\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L219-L229</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mintReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signature_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">numberMinted</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OverMaxAllowedToMint</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">addressMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddressAlreadyMinted</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">)) != </span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidHash</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">recoverSigner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">signature_</span><span class=\"mtk1\">) != </span><span class=\"mtk12\">claimSignerAddress</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddressNotSigned</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">addressMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">numberMinted</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ReceiptMinted</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">rabbitholeReceiptContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This function doesn’t check if the quest has ended, and the hash doesn’t contain any kind of deadline. A user may receive a signed hash and mint the receipt at any point in time.</p>\n<p>The quest owner can withdraw remaining tokens after the quest end time using the <code>withdrawRemainingTokens</code> present in the quests contracts. This is the implementation for <code>Erc20Quest</code>:</p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L81-L87\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L81-L87</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unclaimedTokens</span><span class=\"mtk1\"> = (</span><span class=\"mtk11\">receiptRedeemers</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">redeemedTokens</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">rewardAmountInWeiOrTokenId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nonClaimableTokens</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) - </span><span class=\"mtk11\">protocolFee</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">unclaimedTokens</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">nonClaimableTokens</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">receiptRedeemers</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questFactoryContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getNumberMinted</span><span class=\"mtk1\">(</span><span class=\"mtk12\">questId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The function calculates how many receipts have been minted but are pending to be claimed, in order to leave the funds in the contract so the user can still claim those. However, this won’t take into account receipts that are still pending to be minted.</p>\n<h3 id=\"impact-3\" style=\"position:relative;\"><a href=\"#impact-3\" aria-label=\"impact 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>A user can mint the receipt for completing the task after the quest has ended, and in particular, if this is done after the owner of the quest has called <code>withdrawRemainingTokens</code>, then the user won’t be able to claim the reward associated with that receipt.</p>\n<p>This occurs because the user can mint the receipt after the quest end time, while the owner may have already withdrawn the remaining tokens, which only accounts for previously minted receipts.</p>\n<p>Given this scenario, the user won’t be able to claim the rewards, the contract won’t have the required funds.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In the following test, Alice mints her receipt after the quest owner has called <code>withdrawRemainingTokens</code>. Her call to <code>quest.claim()</code> will be reverted due to insufficient funds in the contract.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">AuditTest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Test</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signerPrivateKey</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minter</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFeeRecipient</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ReceiptRenderer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiptRenderer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">TicketRenderer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ticketRenderer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RabbitHoleTickets</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tickets</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setUp</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">deployer</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;deployer&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">signerPrivateKey</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0x123</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">signer</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addr</span><span class=\"mtk1\">(</span><span class=\"mtk12\">signerPrivateKey</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">label</span><span class=\"mtk1\">(</span><span class=\"mtk12\">signer</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;signer&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;royaltyRecipient&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">minter</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;minter&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">protocolFeeRecipient</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;protocolFeeRecipient&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployer</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Receipt</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">receiptRenderer</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ReceiptRenderer</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiptImpl</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">RabbitHoleReceipt</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">receipt</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RabbitHoleReceipt</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ERC1967Proxy</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiptImpl</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiptRenderer</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minter</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// factory</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">factoryImpl</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">QuestFactory</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">factory</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">QuestFactory</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ERC1967Proxy</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factoryImpl</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">signer</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">), </span><span class=\"mtk12\">protocolFeeRecipient</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">receipt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setMinterAddress</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factory</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// tickets</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ticketRenderer</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TicketRenderer</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">RabbitHoleTickets</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ticketsImpl</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">RabbitHoleTickets</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tickets</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RabbitHoleTickets</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ERC1967Proxy</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ticketsImpl</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tickets</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ticketRenderer</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minter</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// ERC20 token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">token</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Mock ERC20&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;MERC20&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRewardAllowlistAddress</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">), </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">signReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signature</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">hash</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">account</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">message</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ECDSA</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toEthSignedMessageHash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hash</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">v</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">r</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sign</span><span class=\"mtk1\">(</span><span class=\"mtk12\">signerPrivateKey</span><span class=\"mtk1\">, </span><span class=\"mtk12\">message</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">signature</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">r</span><span class=\"mtk1\">, </span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">v</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_Erc20Quest_UserCantClaimIfLateRedeem</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">alice</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;alice&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hours</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endTime</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hours</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardAmountOrTokenId</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&quot;a quest&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// create, fund and start quest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployer</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setQuestFee</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Erc20Quest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quest</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">Erc20Quest</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">createQuest</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">endTime</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">rewardAmountOrTokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk8\">&quot;erc20&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">questId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">rewardAmountOrTokenId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">quest</span><span class=\"mtk1\">), </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">quest</span><span class=\"mtk1\">.</span><span class=\"mtk11\">start</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Alice has the signature to mint her receipt</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signature</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">signReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">alice</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// simulate time elapses until the end of the quest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">warp</span><span class=\"mtk1\">(</span><span class=\"mtk12\">endTime</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployer</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">quest</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployer</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Now Alice claims her receipt and tries to claim her reward</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">alice</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mintReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">questId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">hash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">signature</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// The following will fail since there are no more rewards in the contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectRevert</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">quest</span><span class=\"mtk1\">.</span><span class=\"mtk11\">claim</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommendation-2\" style=\"position:relative;\"><a href=\"#recommendation-2\" aria-label=\"recommendation 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Since tasks are verified off-chain by the indexer, given the current architecture it is not possible to determine on-chain how many tasks have been completed. In this case the recommendation is to prevent the minting of the receipt after the quest end time. This can be done in the <code>mintReceipt</code> by checking the <code>endTime</code> property which would need to be added to the <code>Quest</code> struct or by including it as a deadline in the signed hash.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/601#issuecomment-1429337909\">kirk-baird (judge) decreased severity to Medium</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/601#issuecomment-1440977841\">waynehoover (RabbitHole) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>This is only an issue if the owner withdraws the remaining tokens before everyone has withdrawn their tokens. The owner will not do this.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/601#issuecomment-1442577837\">kirk-baird (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I agree that the owner should not do this.</p>\n<p>However, determining if everyone has minted their tokens yet is not straight forward, as users may not want to pay gas fees or mint / claim receipts immediately. I believe medium severity is a fair rating as there is the potential to accidentally lock funds in the contract.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-dos-risk-if-enough-tokens-are-minted-in-questclaim-can-lead-at-least-to-transaction-fee-lost\" style=\"position:relative;\"><a href=\"#m-03-dos-risk-if-enough-tokens-are-minted-in-questclaim-can-lead-at-least-to-transaction-fee-lost\" aria-label=\"m 03 dos risk if enough tokens are minted in questclaim can lead at least to transaction fee lost permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/552\">[M-03] DOS risk if enough tokens are minted in Quest.claim can lead, at least, to transaction fee lost</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/552\">carlitox477</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/705\">trustindistrust</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/704\">ArmedGoose</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/702\">libratus</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/698\">luxartvinsec</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/691\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/686\">0xRobocop</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/685\">UdarTeam</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/633\">betweenETHlines</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/602\">manikantanynala97</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/578\">minhquanym</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/564\">lukris02</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/515\">cryptojedi88</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/497\">horsefacts</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/466\">glcanvas</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/428\">glcanvas</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/403\">Atarpara</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/373\">simon135</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/371\">mookimgo</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/305\">gzeon</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/290\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/268\">p4st13r4</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/267\">thekmj</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/245\">evan</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/234\">Tointer</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/150\">0xbepresent</a>, and <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/135\">ladboy233</a></em></p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L99\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L99</a><br>\n<a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L117-L133\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L117-L133</a></p>\n<p><code>claim</code> function can be summaraized in next steps:</p>\n<ol>\n<li>Check that the quest is active</li>\n<li>Check the contract is not paused</li>\n<li>Get tokens corresponding to msg.sender for <code>questId</code> using <code>rabbitHoleReceiptContract.getOwnedTokenIdsOfQuest</code>: <strong>DOS</strong></li>\n<li>Check that msg.sender owns at least one token</li>\n<li>Count non claimed tokens</li>\n<li>Check there is at least 1 unclaimed token</li>\n<li>Calculate redeemable rewards: <code>_calculateRewards(redeemableTokenCount);</code></li>\n<li>Set all token to claimed state</li>\n<li>Update <code>redeemedTokens</code></li>\n<li>Emit claim event</li>\n</ol>\n<p>The problem with this functions relays in its dependency on <code>RabbitHoleReceipt.getOwnedTokenIdsOfQuest</code>. It’s behaviour can be summarized in next steps:</p>\n<ol>\n<li>Get queried balance (claimingAddress_)</li>\n<li>Get claimingAddress_ owned tokens</li>\n<li>Filter tokens corresponding to questId_</li>\n<li>Return token of claimingAddress_ corresponding to questId_</li>\n</ol>\n<p>If a user actively participates in multiple quests and accumulates a large number of tokens, the claim function may eventually reach the block gas limit. As a result, the user may be unable to successfully claim their earned tokens.</p>\n<h3 id=\"impact-4\" style=\"position:relative;\"><a href=\"#impact-4\" aria-label=\"impact 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>It can be argued that function <code>ERC721.burn</code> can address the potential DOS risk in the claim process. However, it is important to note the following limitations and drawbacks associated with this approach:</p>\n<ol>\n<li>Utilizing <code>ERC721.burn</code> does not prevent the user from incurring network fees if a griefer, who has already claimed their rewards, sends their tokens to the user with the intent of causing a DOS and inducing loss of gas.</li>\n<li>If the user has not claimed any rewards from their accumulated tokens, they will still be forced to burn at least some of their tokens, resulting in a loss of these assets.</li>\n</ol>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><strong>Griefing</strong></p>\n<ol>\n<li>Alice has took part in many quests, and want to recieve her rewards, so she call Quest.claim() function</li>\n<li>Bob also has already claimed many rewards from many quest, and decide to frontrun alice an send her all his tokens to DOS her</li>\n<li>Alice run out of gas, she lose transaction fees.</li>\n</ol>\n<p><strong>Lose of unclaimed rewards</strong></p>\n<ol>\n<li>Alice always takes part in many quests, but never claims her rewards. She trusts RabbitHole protocol and is waiting to have much more rewards to claim in order to save some transaction fees.</li>\n<li>When Alice decide to call claim function she realizes that she has run out of gas.</li>\n</ol>\n<p>Then, Alice can only burn some of her tokens to claim at least some rewards.</p>\n<p><strong>Code</strong></p>\n<p><a href=\"https://gist.github.com/carlitox477/85e37d26c6f810304c849c93235ee99e\">Code sample</a></p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation steps</h3>\n<p>If a user can send a token list by parameter to claim function, then this vector attack can be mitigated.</p>\n<p>To do this add next function to <code>RabbitHoleReceipt.sol</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">checkTokenCorrespondToQuest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">questIdForTokenId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">])) == </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Then modify <code>Quest.claim</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">// Quest.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-   function claim() public virtual onlyQuestActive {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   function claim(uint[] memory tokens) public virtual onlyQuestActive {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        if (isPaused) revert QuestPaused();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-       uint[] memory tokens = rabbitHoleReceiptContract.getOwnedTokenIdsOfQuest(questId, msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        // require(tokens.length &gt; 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        if (tokens.length == 0) revert NoTokensToClaim();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        uint256 redeemableTokenCount = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        for (uint i = 0; i &lt; tokens.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            // Check that the token correspond to this quest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            require(rabbitHoleReceiptContract.checkTokenCorrespondToQuest(tokens[i],questId))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-           if (!isClaimed(tokens[i])) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+           if (!isClaimed(tokens[i]) &amp;&amp; rabbitHoleReceiptContract.checkTokenCorrespondToQuest(tokens[i],questId)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                redeemableTokenCount++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        if (redeemableTokenCount == 0) revert AlreadyClaimed();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        uint256 totalRedeemableRewards = _calculateRewards(redeemableTokenCount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        _setClaimed(tokens);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        _transferRewards(totalRedeemableRewards);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        redeemedTokens += redeemableTokenCount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        emit Claimed(msg.sender, totalRedeemableRewards);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/552#issuecomment-1429385027\">kirk-baird (judge) decreased severity to Medium</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/552#issuecomment-1504020208\">waynehoover (RabbitHole) acknowledged</a></strong></p>\n<hr>\n<h2 id=\"m-04-users-may-not-claim-erc1155-rewards-when-the-quest-has-ended\" style=\"position:relative;\"><a href=\"#m-04-users-may-not-claim-erc1155-rewards-when-the-quest-has-ended\" aria-label=\"m 04 users may not claim erc1155 rewards when the quest has ended permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/528\">[M-04] Users may not claim Erc1155 rewards when the Quest has ended</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/528\">RaymondFam</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/701\">timongty</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/693\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/690\">MiniGlome</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/678\">holme</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/655\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/632\">AlexCzm</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/631\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/606\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/591\">StErMi</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/584\">Josiah</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/579\">minhquanym</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/574\">ubermensch</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/536\">peanuts</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/485\">BClabs</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/479\">wait</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/470\">cccz</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/458\">cccz</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/443\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/385\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/368\">KIntern_NA</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/322\">gzeon</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/318\">peakbolt</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/298\">0xMirce</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/285\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/275\">ElKu</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/233\">libratus</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/223\">omis</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/221\">zaskoh</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/178\">AkshaySrivastav</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/95\">hihen</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/55\">usmannk</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/47\">HollaDieWaldfee</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/42\">csanuragjain</a>, and <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/27\">rvierdiiev</a></em></p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc1155Quest.sol#L60\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc1155Quest.sol#L60</a><br>\n<a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L114\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L114</a><br>\n<a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc1155Quest.sol#L41-L43\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc1155Quest.sol#L41-L43</a></p>\n<p>Unlike Erc20Quest.sol, owner of Erc1155Quest.sol is going to withdraw the remaining tokens from the contract when <code>block.timestamp == endTime</code> without deducting the <code>unclaimedTokens</code>. As a result, users will be denied of service when attempting to call the inherited <code>claim()</code> from Quest.sol.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>As can be seen from the code block below, when the Quest time has ended, <code>withdrawRemainingTokens()</code> is going to withdraw the remaining tokens from the contract on line 60:</p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc1155Quest.sol#L52-L63\">File: Erc1155Quest.sol#L52-L63</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev Withdraws the remaining tokens from the contract. Only able to be called by owner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @param to_ The address to send the remaining tokens to</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC1155</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">rewardAmountInWeiOrTokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">IERC1155</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">rewardAmountInWeiOrTokenId</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&#39;0x00&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>When a user tries to call <code>claim()</code> below, line 114 is going to internally invoke <code>_transferRewards()</code>:</p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L94-L118\">File: Quest.sol#L94-L118</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice Allows user to claim the rewards entitled to them</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev User can claim based on the (unclaimed) number of tokens they own of the Quest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claim</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyQuestActive</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">isPaused</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">QuestPaused</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokens</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rabbitHoleReceiptContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getOwnedTokenIdsOfQuest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">questId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">tokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NoTokensToClaim</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">redeemableTokenCount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk11\">isClaimed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">])) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">redeemableTokenCount</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">redeemableTokenCount</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AlreadyClaimed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalRedeemableRewards</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_calculateRewards</span><span class=\"mtk1\">(</span><span class=\"mtk12\">redeemableTokenCount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_setClaimed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokens</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">114</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">_transferRewards</span><span class=\"mtk1\">(</span><span class=\"mtk12\">totalRedeemableRewards</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">redeemedTokens</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">redeemableTokenCount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Claimed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totalRedeemableRewards</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><code>safeTransferFrom()</code> is going to revert on line 42 because the token balance of the contract is now zero. i.e. less than <code>amount_</code>:</p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc1155Quest.sol#L39-L43\">File: Erc1155Quest.sol#L39-L43</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev Transfers the reward token `rewardAmountInWeiOrTokenId` to the msg.sender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @param amount_ The amount of reward tokens to transfer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_transferRewards</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">42</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">IERC1155</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rewardAmountInWeiOrTokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;0x00&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider refactoring <code>withdrawRemainingTokens()</code> as follows:</p>\n<p>(Note: The contract will have to separately import {QuestFactory} from ‘./QuestFactory.sol’ and initialize <code>questFactoryContract</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    function receiptRedeemers() public view returns (uint256) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        return questFactoryContract.getNumberMinted(questId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    function withdrawRemainingTokens(address to_) public override onlyOwner {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        super.withdrawRemainingTokens(to_);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint unclaimedTokens = (receiptRedeemers() - redeemedTokens)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 nonClaimableTokens = IERC1155(rewardToken).balanceOf(address(this), rewardAmountInWeiOrTokenId) - unclaimedTokens;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        IERC1155(rewardToken).safeTransferFrom(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            address(this),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            to_,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            rewardAmountInWeiOrTokenId,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            IERC1155(rewardToken).balanceOf(address(this), rewardAmountInWeiOrTokenId),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            nonClaimableTokens,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            &#39;0x00&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/528#issuecomment-1425183624\">kirk-baird (judge) increased severity to High</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/528#issuecomment-1440959685\">waynehoover (RabbitHole) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>I agree that this is an issue, but not a high risk issue. I expect high risk issues to be issues that can be called by anyone, not owners. </p>\n<p>As owners there are plenty of ways we can sabotage our contracts (for example via the set* functions) it is an issue for an owner. </p>\n<p>The owner understands how this function works, so they can be sure not to call it before all users have called claim.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/528#issuecomment-1442583850\">kirk-baird (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Similarly to <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/122\"><code>#122</code></a>, this is an <code>onlyOwner</code> function and therefore the likelihood is significantly reduce. Therefore I’m going to downgrade this issue to Medium.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-05-when-rewardtoken-is-erc1155erc777-an-attacker-can-reenter-and-cause-funds-to-be-stuck-in-the-contract-forever\" style=\"position:relative;\"><a href=\"#m-05-when-rewardtoken-is-erc1155erc777-an-attacker-can-reenter-and-cause-funds-to-be-stuck-in-the-contract-forever\" aria-label=\"m 05 when rewardtoken is erc1155erc777 an attacker can reenter and cause funds to be stuck in the contract forever permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/523\">[M-05] When <code>rewardToken</code> is erc1155/erc777, an attacker can reenter and cause funds to be stuck in the contract forever</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/523\">simon135</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/689\">0x4non</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/239\">ForkEth</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/218\">zaskoh</a>, and <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/207\">ArmedGoose</a></em></p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/068d628f019e9469aecbf676370075c1f6c980fd/contracts/Quest.sol#L113-L116\">https://github.com/rabbitholegg/quest-protocol/blob/068d628f019e9469aecbf676370075c1f6c980fd/contracts/Quest.sol#L113-L116</a></p>\n<p>If the reward token is <code>erc1155/erc777</code>, an attacker can reenter and then buy/transfer another unclaimed token to the attacker address and then the var <code>redeemTokens</code> won’t be equal to how many tokens were actually redeemed.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><strong>Example:</strong><br>\nReward token is an erc1155 that has  <code>_afterTokenTransfer</code><br>\nAlice(attacker) has 2 receipt tokens, the first one is on a smart contract that will do the reentrancy, and the second one is on Alice’s address but is approved to transfer to the smart contract(the own that holds the first receipt)</p>\n<ol>\n<li>Alice calls the sc to <code>claim</code> rewards</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk11\">IERC1155</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rewardAmountInWeiOrTokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;0x00&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"2\">\n<li><code>_afterTokenTransfer</code>  which causes the sc to call a function in its fallback function that transfers the approved token to the sc</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   </span><span class=\"mtk15\">try</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IERC1155Receiver</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to</span><span class=\"mtk1\">).</span><span class=\"mtk11\">onERC1155Received</span><span class=\"mtk1\">(</span><span class=\"mtk12\">operator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">data</span><span class=\"mtk1\">) </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\"> </span><span class=\"mtk12\">response</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<ol start=\"3\">\n<li>We then reenter with recipient, not yet claimed token and we claim it</li>\n</ol>\n<p><strong>Result:</strong><br>\nThe invariant that <code>redeemedTokens</code> = tokens that are redeemed is false because it doesn’t account for the first token that we reentered.<br>\nThe issue is worse  with <code>erc777</code> tokens because of  the fact  that accounting will be in  the <code>withdrawRemainingTokens</code> function</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unclaimedTokens</span><span class=\"mtk1\"> = (</span><span class=\"mtk11\">receiptRedeemers</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">redeemedTokens</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">rewardAmountInWeiOrTokenId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nonClaimableTokens</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) - </span><span class=\"mtk11\">protocolFee</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">unclaimedTokens</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">nonClaimableTokens</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>after the reentrancy<br>\nex: <code>redeemedTokens=9</code> but should be 10<br>\n<code>receiptRedeemers()=12</code><br>\n<code>rewardAmountInWeiOrTokenId=1e5</code><br>\n<code>unclaimedTokens=300000</code><br>\nassuming they are some tokens left<br>\n<code>balance(address(this)=201000</code> and <code>protocolFee=500</code><br>\n<code>nonClaimableTokens=201000 - 500 - 300000</code> it would revert ( negative numbers  with uint) and   funds would be stuck in the contract forever<br>\nThe real estimate for <code>nonClaimableTokens=201000-500-200000=500</code> and the owner can get funds out\nbut 500 wei will be lost in the contract<br>\nand  it can get worse with large amounts of quests and the attacker reentering multiple times to cause a bigger gap between the real <code>redeemedTokens</code></p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add nonReentrancy modifier</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/523#issuecomment-1429391850\">kirk-baird (judge) decreased severity to Medium</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/523#issuecomment-1504021713\">waynehoover (RabbitHole) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-06-rabbitholereceipts-address-might-be-changed-therefore-only-manual-mint-will-be-available\" style=\"position:relative;\"><a href=\"#m-06-rabbitholereceipts-address-might-be-changed-therefore-only-manual-mint-will-be-available\" aria-label=\"m 06 rabbitholereceipts address might be changed therefore only manual mint will be available permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/425\">[M-06] RabbitHoleReceipt’s address might be changed therefore only manual mint will be available</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/425\">glcanvas</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/703\">libratus</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/607\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/589\">hansfriese</a></em></p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L13\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L13</a><br>\n<a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L44\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L44</a><br>\n<a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L96-L118\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L96-L118</a><br>\n<a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L95-L104\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L95-L104</a><br>\n<a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L215-L229\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L215-L229</a></p>\n<p>Might be impossible to claim rewards by users. And admins must distribute tokens manually and pay fee for this. On a huge amount of participants this leads to huge amount of fees.</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Let’s consider <code>QuestFactory</code>. It has:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rabbitholeReceiptContract</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>Which responsible for mint tokens for users.</p>\n<p>Then consider <code>createQuest</code> function. Here we pass <code>rabbitholeReceiptContract</code> into <code>Quest</code>.</p>\n<p>In <code>Quest</code> this field is immutable.</p>\n<p>Now let’s consider next case:</p>\n<ol>\n<li>We initialized whole contracts.</li>\n<li>We created new Quest.</li>\n<li>Next we decided to change <code>rabbitholeReceiptContract</code> in <code>QuestFactory</code> for another. To do this we call: <code>setRabbitHoleReceiptContract</code>. And successfully changing address.</li>\n<li>Next we distribute signatures to our participants.</li>\n<li>Users starts to mint tokens. But here is a bug <code>QuestFactory</code> storages new  address of <code>rabbitholeReceiptContract</code>, but <code>Quest</code> initialized with older one. So users successfully minted their tokens, but can’t exchange them for tokens because the Quest’s receipt contract know nothing about minted tokens.</li>\n</ol>\n<p>Possible solution here is change <code>minterAddress</code> in the original <code>RabbitHoleReceipt</code> contract and manually mint tokens by admin, but it will be too expensive and the company may lost a lot of money.</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>In <code>QuestFactory</code> contract in the function <code>mintReceipt</code>  the rabbitholeReceiptContract must be fetched from the quest directly.</p>\n<p>To <code>Quest</code> Add:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getRabbitholeReceiptContract</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rabbitHoleReceiptContract</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Modify <code>mintReceipt</code> function in <code>QuestFactory</code> like:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mintReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signature_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rabbitholeReceiptContract</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">Quest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">questAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getRabbitholeReceiptContract</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">rabbitholeReceiptContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/425#issuecomment-1421392786\">waynehoover (RabbitHole) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Since our contract is upgradeable, they have to trust us that we aren’t going to do this during live quests. This was an emergency function, and likely won’t ever need to be used and only be accessible by only owner/us.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/425#issuecomment-1432077395\">kirk-baird (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>This is a valid issue as upgrading the receipt contract will break currently open quests to prevent minting of receipts. This does not result in a loss of funds as they can be recovered by the quest creator. </p>\n<p>Additionally, it is only accessible by the admin and so I’m going to downgrade this to a medium.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-07-funds-can-be-stuck-due-to-wrong-order-of-operations\" style=\"position:relative;\"><a href=\"#m-07-funds-can-be-stuck-due-to-wrong-order-of-operations\" aria-label=\"m 07 funds can be stuck due to wrong order of operations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/122\">[M-07] Funds can be stuck due to wrong order of operations</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/122\">carrotsmuggler</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/603\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/585\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/537\">hansfriese</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/427\">Iurii3</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/423\">hl_</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/380\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/361\">KmanOfficial</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/328\">peanuts</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/252\">evan</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/246\">ElKu</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/219\">omis</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/115\">AkshaySrivastav</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/66\">mert_eren</a>, and <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/61\">HollaDieWaldfee</a></em></p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L102-L104\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L102-L104</a><br>\n<a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L81-L87\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L81-L87</a></p>\n<p>The contract <code>ERC20Quest.sol</code> has two functions of interest here. The first is <code>withdrawFee()</code>, which is responsible for transferring out the fee amount from the contract once endTime has been passed, and the second is <code>withdrawRemainingTokens()</code> which recovers the remaining tokens in the contract which haven’t been claimed yet.</p>\n<p>Function <code>withdrawRemainingTokens()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unclaimedTokens</span><span class=\"mtk1\"> = (</span><span class=\"mtk11\">receiptRedeemers</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">redeemedTokens</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">rewardAmountInWeiOrTokenId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nonClaimableTokens</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) - </span><span class=\"mtk11\">protocolFee</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">unclaimedTokens</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">nonClaimableTokens</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>As evident from this excerpt, calling this recovery function subtracts the tokens which are already assigned to someone who completed the quest, and the fee, and returns the rest. However, there is no check for whether the fee has already been paid or not. The owner is expected to first call <code>withdrawRemainingTokens()</code>, and then call <code>withdrawFee()</code>.</p>\n<p>However, if the owner calls <code>withdrawFee()</code> before calling the function <code>withdrawRemainingTokens()</code>, the fee will be paid out by the first call, but the same fee amount will still be kept in the contract after the second function call, basically making it unrecoverable. Since there are no checks in place to prevent this, this is classified as a high severity since it is an easy mistake to make and leads to loss of funds of the owner.</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>This can be demonstrated with this test</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">describe</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;Funds stuck due to wrong order of function calls&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">it</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;should trap funds&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedFactoryContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">firstAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">questId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">messageHash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">signature</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedQuestContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">start</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;evm_increaseTime&#39;</span><span class=\"mtk1\">, [</span><span class=\"mtk7\">86400</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedQuestContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">firstAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">claim</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;evm_increaseTime&#39;</span><span class=\"mtk1\">, [</span><span class=\"mtk7\">100001</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedQuestContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawFee</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedQuestContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedSampleErc20Contract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployedQuestContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">200</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedSampleErc20Contract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">lessThan</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">totalRewardsPlusFee</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1000</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">200</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;evm_increaseTime&#39;</span><span class=\"mtk1\">, [-</span><span class=\"mtk7\">100001</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;evm_increaseTime&#39;</span><span class=\"mtk1\">, [-</span><span class=\"mtk7\">86400</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  })</span></span></span></code></pre>\n<p>Even though the fee is paid, the contract still retains the fee amount. The owner receives less than the expected amount. This test is a modification of the test <code>should transfer non-claimable rewards back to owner</code> already present in <code>ERC20Quest.spec.ts</code>.</p>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Hardhat</p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Only allow fee to be withdrawn after the owner has withdrawn the funds.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Declare a boolean to check if recovery happened</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recoveryDone</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unclaimedTokens</span><span class=\"mtk1\"> = (</span><span class=\"mtk11\">receiptRedeemers</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">redeemedTokens</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">rewardAmountInWeiOrTokenId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nonClaimableTokens</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) - </span><span class=\"mtk11\">protocolFee</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">unclaimedTokens</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">nonClaimableTokens</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Set recovery bool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">recoveryDone</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawFee</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyAdminWithdrawAfterEnd</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Check recovery</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">recoveryDone</span><span class=\"mtk1\">,</span><span class=\"mtk8\">&quot;Recover tokens before withdrawing Fees&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">protocolFeeRecipient</span><span class=\"mtk1\">, </span><span class=\"mtk11\">protocolFee</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/122#issuecomment-1440966653\">waynehoover (RabbitHole) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>I agree that this is an issue, but not a high risk issue. I expect high risk issues to be issues that can be called by anyone, not owners.</p>\n<p>As owners there are plenty of ways we can sabotage our contracts (for example via the set* functions) it is an issue for an owner.</p>\n<p>The owner understands how these functions work, so they can be sure to call them in the right order.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/122#issuecomment-1442582881\">kirk-baird (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>I agree with the sponsor that since this is an <code>onlyOwner</code> function that medium severity is more appropriate.</p>\n<p>The likelihood of this issue is reduced as it can only be called by the owner.</p>\n<p>Note: the ineffective <code>onlyAdminWithdrawAfterEnd</code> modifier not validating admin is raised in another issue.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-08-buyer-on-secondary-nft-market-can-lose-fund-if-they-buy-a-nft-that-is-already-used-to-claim-the-reward\" style=\"position:relative;\"><a href=\"#m-08-buyer-on-secondary-nft-market-can-lose-fund-if-they-buy-a-nft-that-is-already-used-to-claim-the-reward\" aria-label=\"m 08 buyer on secondary nft market can lose fund if they buy a nft that is already used to claim the reward permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/119\">[M-08] Buyer on secondary NFT market can lose fund if they buy a NFT that is already used to claim the reward</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/119\">ladboy233</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/694\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/611\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/562\">StErMi</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/486\">Tricko</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/445\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/315\">0xmrhoodie</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/216\">0x4non</a>, and <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/201\">ElKu</a></em></p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L113\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L113</a></p>\n<p>Let us look closely into the <code>Quest.sol#claim</code> function</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @notice Allows user to claim the rewards entitled to them</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @dev User can claim based on the (unclaimed) number of tokens they own of the Quest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claim</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyQuestActive</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">isPaused</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">QuestPaused</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokens</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rabbitHoleReceiptContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getOwnedTokenIdsOfQuest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">questId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">tokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NoTokensToClaim</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">redeemableTokenCount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk11\">isClaimed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">])) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t</span><span class=\"mtk12\">redeemableTokenCount</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">redeemableTokenCount</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AlreadyClaimed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalRedeemableRewards</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_calculateRewards</span><span class=\"mtk1\">(</span><span class=\"mtk12\">redeemableTokenCount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">_setClaimed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokens</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">_transferRewards</span><span class=\"mtk1\">(</span><span class=\"mtk12\">totalRedeemableRewards</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">redeemedTokens</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">redeemableTokenCount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Claimed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totalRedeemableRewards</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>After the NFT is used to claim, the _setClaimed(token) is called to mark the NFT as used to prevent double claiming.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @notice Marks token ids as claimed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @param tokenIds_ The token ids to mark as claimed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_setClaimed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenIds_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds_</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">claimedList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenIds_</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The NFT is also tradeable in the secondary marketplace. I would like to make a reasonable assumption that user wants to buy the NFT because they can use the NFT to claim the reward, which means after the reward is claimed, the NFT lose value.</p>\n<p>Consider the case below:</p>\n<ol>\n<li>User A has 1 NFT, has he can use the NFT to claim 1 ETH reward.</li>\n<li>User A place a sell order in opensea and sell the NFT for 0.9 ETH.</li>\n<li>User B see the sell order and find it a good trae, he wants to buy the NFT.</li>\n<li>User B submit a buy order, User A at the same time submit the claimReward transaction.</li>\n<li>User A’s transaction executed first, reward goes to User A, then User B transaction executed, NFT ownership goes to User B, but user B find out that the he cannot claim the reward becasue the reward is already claimed by User A.</li>\n</ol>\n<p>User A can intentionally front-run User B’s buy transaction by monitoring the mempool in polygon using the service</p>\n<p><a href=\"https://www.blocknative.com/blog/polygon-mempool\">https://www.blocknative.com/blog/polygon-mempool</a></p>\n<p>Or it could be just two users submit transactions at the same time and User A’s claim transaction happens to execute first.</p>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Disable NFT transfer and trade once the NFT is used to claim the reward.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/119\">waynehoover (RabbitHole) acknowledged</a></strong></p>\n<hr>\n<h2 id=\"m-09-possible-scenario-for-signature-replay-attack\" style=\"position:relative;\"><a href=\"#m-09-possible-scenario-for-signature-replay-attack\" aria-label=\"m 09 possible scenario for signature replay attack permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/107\">[M-09] Possible scenario for Signature Replay Attack</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/107\">AkshaySrivastav</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/659\">V_B</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/620\">betweenETHlines</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/613\">halden</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/577\">minhquanym</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/546\">m9800</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/480\">Tricko</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/463\">wait</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/459\">jesusrod15</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/453\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/440\">glcanvas</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/430\">cccz</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/383\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/378\">__141345__</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/365\">KIntern_NA</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/339\">Tointer</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/317\">peakbolt</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/293\">libratus</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/220\">zaskoh</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/211\">omis</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/210\">SovaSlava</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/198\">romand</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/105\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/94\">hihen</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/74\">ladboy233</a>, and <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/45\">critical-or-high</a></em></p>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L219-L229\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L219-L229</a></p>\n<p>The <code>QuestFactory.mintReceipt</code> function mints <code>RabbitHoleReceipt</code> tokens based upon signatures signed by <code>claimSignerAddress</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mintReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signature_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">numberMinted</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OverMaxAllowedToMint</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">addressMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddressAlreadyMinted</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">)) != </span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidHash</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">recoverSigner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">signature_</span><span class=\"mtk1\">) != </span><span class=\"mtk12\">claimSignerAddress</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddressNotSigned</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">addressMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">numberMinted</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ReceiptMinted</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">rabbitholeReceiptContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>In the above function only the account’s address and quest id values are used to generate and validate the signature.</p>\n<p>This causes various issues which are mentioned below:</p>\n<ol>\n<li>There is no deadline for the signatures. Once a signature is signed by <code>claimSignerAddress</code> that signature can be provided to <code>QuestFactory.mintReceipt</code> function to mint an RabbitholeReceipt token at any point in the future.</li>\n<li>The signature can be replayed on other EVM compatible chains on which RabbitHole protocol is deployed. The <a href=\"https://github.com/rabbitholegg/quest-protocol/tree/8c4c1f71221570b14a0479c216583342bd652d8d#deployments\">docs</a> mention other EVM chain addresses of the contracts which means the protocol will be deployed on multiple chains.</li>\n<li>The signature can be replayed on multiple instances of QuestFactory contract. If multiple QuestFactory contracts are deployed on a single EVM chain then signature intended for one contract can be replayed on the other ones.</li>\n</ol>\n<p>Note that all these scenarios are true when <code>questId_</code> parameter stays same.</p>\n<h3 id=\"actual-impact\" style=\"position:relative;\"><a href=\"#actual-impact\" aria-label=\"actual impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Actual Impact</h3>\n<p>Exploitation using the above mentioned scenarios will lead to unintended minting of RabbitholeReceipt token. This is a crucial token for the protocol which is also used to claim rewards from Quest contracts. Hence any unintentional minting will cause loss of funds.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The test cases were added in <code>./test/QuestFactory.spec.ts</code> file and ran using command <code>npx hardhat test ./test/QuestFactory.spec.ts</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"typescript\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">describe</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;QuestFactory: Signature Replay Bug&#39;</span><span class=\"mtk1\">, () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">it</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;Signature can be used in different QuestFactory instance or on different chain&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">randomUser</span><span class=\"mtk1\"> = (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getSigners</span><span class=\"mtk1\">())[</span><span class=\"mtk7\">10</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questA</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&quot;A&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Sign message and create new Quest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">messageHash</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">solidityKeccak256</span><span class=\"mtk1\">([</span><span class=\"mtk8\">&#39;address&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;string&#39;</span><span class=\"mtk1\">], [</span><span class=\"mtk12\">randomUser</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toLowerCase</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">questA</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signature</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wallet</span><span class=\"mtk1\">.</span><span class=\"mtk11\">signMessage</span><span class=\"mtk1\">(</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">arrayify</span><span class=\"mtk1\">(</span><span class=\"mtk12\">messageHash</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedFactoryContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRewardAllowlistAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployedSampleErc20Contract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedFactoryContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">createQuest</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">deployedSampleErc20Contract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">expiryDate</span><span class=\"mtk1\">, </span><span class=\"mtk12\">startDate</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totalRewards</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rewardAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;erc20&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questA</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Use the signature on First QuestFactory</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedFactoryContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">randomUser</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">questA</span><span class=\"mtk1\">, </span><span class=\"mtk12\">messageHash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">signature</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedRabbitHoleReceiptContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">randomUser</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">factoryPrevious</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">deployedFactoryContract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RHRPrevious</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">deployedRabbitHoleReceiptContract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Deploy a new QuestFactory (this could be on a different chain)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deployRabbitHoleReceiptContract</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deployFactoryContract</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">factoryPrevious</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">not</span><span class=\"mtk1\">.</span><span class=\"mtk11\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployedFactoryContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)            </span><span class=\"mtk3\">// Verify we have new instance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">RHRPrevious</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">not</span><span class=\"mtk1\">.</span><span class=\"mtk11\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployedRabbitHoleReceiptContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Create new Quest in new QuestFactory</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedFactoryContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRewardAllowlistAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployedSampleErc20Contract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedFactoryContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">createQuest</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">deployedSampleErc20Contract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">expiryDate</span><span class=\"mtk1\">, </span><span class=\"mtk12\">startDate</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totalRewards</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rewardAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;erc20&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questA</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Use the previously used signature again on new QuestFactory</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedFactoryContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">randomUser</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">questA</span><span class=\"mtk1\">, </span><span class=\"mtk12\">messageHash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">signature</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedRabbitHoleReceiptContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">randomUser</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RHRPrevious</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">randomUser</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">it</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;Signature can be used after 1 year&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">randomUser</span><span class=\"mtk1\"> = (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getSigners</span><span class=\"mtk1\">())[</span><span class=\"mtk7\">10</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questA</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&quot;A&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Sign message and create new Quest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">messageHash</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">solidityKeccak256</span><span class=\"mtk1\">([</span><span class=\"mtk8\">&#39;address&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;string&#39;</span><span class=\"mtk1\">], [</span><span class=\"mtk12\">randomUser</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toLowerCase</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">questA</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signature</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wallet</span><span class=\"mtk1\">.</span><span class=\"mtk11\">signMessage</span><span class=\"mtk1\">(</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">arrayify</span><span class=\"mtk1\">(</span><span class=\"mtk12\">messageHash</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedFactoryContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRewardAllowlistAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployedSampleErc20Contract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedFactoryContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">createQuest</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">deployedSampleErc20Contract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">expiryDate</span><span class=\"mtk1\">, </span><span class=\"mtk12\">startDate</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totalRewards</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rewardAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;erc20&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questA</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Move ahead 1 year</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">send</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;evm_mine&quot;</span><span class=\"mtk1\">, [</span><span class=\"mtk12\">expiryDate</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">31536000</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// Use the signature</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedFactoryContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">randomUser</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mintReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">questA</span><span class=\"mtk1\">, </span><span class=\"mtk12\">messageHash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">signature</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deployedRabbitHoleReceiptContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">randomUser</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  })</span></span></span></code></pre>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Hardhat</p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider including deadline, chainid and QuestFactory’s address in the signature message. Ideally signatures should be created according to the <a href=\"https://eips.ethereum.org/EIPS/eip-712\">EIP712</a> standard.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/107#issuecomment-1429416312\">kirk-baird (judge) decreased severity to Medium</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/45#issuecomment-1421424612\">waynehoover (RabbitHole) disagreed with severity and commented via duplicate issue <code>#45</code></a>:</strong></p>\n<blockquote>\n<p>You can’t run a Quest on multiple chains, the assumption is incorrect there.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/45#issuecomment-1429433209\">kirk-baird (judge) commented via duplicate issue <code>#45</code></a>:</strong></p>\n<blockquote>\n<p>This issue is rated medium as signatures cannot be replayed on this contract, they can only be replayed on other contracts. They may be replayed on other contracts on the same chain or different chains. If there was the possibility for signature replay on this contract then it would be rated as high.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/45#issuecomment-1441252597\">AkshaySrivastav (warden) commented via duplicate issue <code>#45</code></a>:</strong></p>\n<blockquote>\n<p>@kirk-baird - The protocol docs clearly stated the intention of deploying the contracts on multiple chains, even contract addresses were provided. Considering that, the attack is very likely to happen with clear loss of funds (high impact + high likelihood).</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/45#issuecomment-1441399684\">kirk-baird (judge) commented via duplicate issue <code>#45</code></a>:</strong></p>\n<blockquote>\n<p>@AkshaySrivastav - I do not believe high likelihood is appropriate here. I agree protocol will be deployed on multiple chains, however for the signature replay to be valid the pair <code>(questId, signer)</code>  must match on different chains.</p>\n<p>As stated by the sponsor each quest should only be run on a single chain such that this overlap is unlikely. Furthermore, even if a quest is run on multiple chains starting at the same time it will likely not have the same <code>questId</code> as this is a counter incremented for each created quest unique to each chain. Note an attacker may deliberately manipualte this by using a front-running attack in the mempool.</p>\n<p>To provide some arguements for the severity it is possible for a quest owner to use the same signer on multiple quests over multiple chains and there is a possibility two of these quests have overlapping ID on different chains. However, this is not a high likelihood situation and thus I think medium severity is most appropriate here.</p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 75 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/619\">report highlighted below</a> by <strong>CodingNameKiki</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/676\">matrix_0wl</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/675\">SleepingBugs</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/671\">sayan</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/670\">libratus</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/669\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/660\">joestakey</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/654\">lukris02</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/653\">carlitox477</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/648\">luxartvinsec</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/643\">jat</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/642\">halden</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/641\">Josiah</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/621\">sashik_eth</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/615\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/612\">ddimitrov22</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/588\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/582\">tnevler</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/580\">0xAgro</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/571\">manikantanynala97</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/559\">catellatech</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/555\">peanuts</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/535\">fellows</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/531\">PrasadLak</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/526\">nadin</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/524\">Diana</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/514\">cryptostellar5</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/508\">BClabs</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/507\">kenta</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/506\">cryptonue</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/495\">horsefacts</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/477\">nicobevi</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/452\">tsvetanovv</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/444\">0x5rings</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/439\">Dewaxindo</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/424\">sakshamguruji</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/420\">hl_</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/417\">zadaru13</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/408\">0xackermann</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/406\">Krayt</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/398\">SaharDevep</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/389\">Phenomana</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/387\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/347\">Breeje</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/345\">PaludoX0</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/341\">martin</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/338\">glcanvas</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/337\">Iurii3</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/329\">0x4non</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/325\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/299\">oberon</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/289\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/282\">thekmj</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/263\">xAriextz</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/251\">0xRobocop</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/248\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/241\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/229\">IceBear</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/217\">zaskoh</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/206\">ArmedGoose</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/185\">SaeedAlipoor01988</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/179\">AkshaySrivastav</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/166\">0xMirce</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/160\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/154\">trustindistrust</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/147\">carrotsmuggler</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/101\">brevis</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/87\">prestoncodes</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/72\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/71\">btk</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/54\">chrisdior4</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/43\">arialblack14</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/41\">csanuragjain</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/38\">HollaDieWaldfee</a>, and <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/32\">seeu</a>.</em></p>\n<h2 id=\"overview-1\" style=\"position:relative;\"><a href=\"#overview-1\" aria-label=\"overview 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h2>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Letter</th>\n<th align=\"center\">Name</th>\n<th align=\"center\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">L</td>\n<td align=\"center\">Low risk</td>\n<td align=\"center\">Potential risk</td>\n</tr>\n<tr>\n<td align=\"center\">NC</td>\n<td align=\"center\">Non-critical</td>\n<td align=\"center\">Non risky findings</td>\n</tr>\n<tr>\n<td align=\"center\">R</td>\n<td align=\"center\">Refactor</td>\n<td align=\"center\">Changing the code</td>\n</tr>\n<tr>\n<td align=\"center\">O</td>\n<td align=\"center\">Ordinary</td>\n<td align=\"center\">Often found issues</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Total Found Issues</th>\n<th align=\"center\">20</th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<h3 id=\"low-risk-issues\" style=\"position:relative;\"><a href=\"#low-risk-issues\" aria-label=\"low risk issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk Issues</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Count</th>\n<th align=\"left\">Explanation</th>\n<th align=\"center\">Instances</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">[L-01]</td>\n<td align=\"left\"><code>createQuest</code> doesn’t check if the reward token address is in the allow list on ERC-1155 quest type</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[L-02]</td>\n<td align=\"left\">The function <code>mintReceipt</code> should check if the quest has expired on-chain as well</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[L-03]</td>\n<td align=\"left\">The reverting functions <code>_calculateRewards</code> and <code>_transferRewards</code> should be removed, as they are already implemented in the child contracts</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[L-04]</td>\n<td align=\"left\">The function <code>withdrawRemainingTokens</code> can be changed in a safer way to handle the withdraw from the owner and the protocol fee as well. This prevent risks allocated with the protocol fee</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[L-05]</td>\n<td align=\"left\">The function <code>royaltyInfo</code> doesn’t check if the receipt was already claimed</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[L-06]</td>\n<td align=\"left\">In contract Quest the function <code>claim</code> shouldn’t only set the receipt as claimed, but to burn it as well. As this problem brings the risk, where users can sell already claimed receipts to other people</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[L-07]</td>\n<td align=\"left\">The function <code>mintReceipt</code> shouldn’t mint receipts to users, if the quest is paused</td>\n<td align=\"center\">1</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Total Low Risk Issues</th>\n<th align=\"center\">7</th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<h3 id=\"non-critical-issues\" style=\"position:relative;\"><a href=\"#non-critical-issues\" aria-label=\"non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Non-Critical Issues</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Count</th>\n<th align=\"left\">Explanation</th>\n<th align=\"center\">Instances</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">[N-01]</td>\n<td align=\"left\">Confusing modifier name</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[N-02]</td>\n<td align=\"left\">Deploying a storage variable with its default value</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[N-03]</td>\n<td align=\"left\">Modifiers not applied on the functions <code>start</code> and <code>withdrawRemainingTokens</code></td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td align=\"center\">[N-04]</td>\n<td align=\"left\">Mandatory checks for extra safety in the setters</td>\n<td align=\"center\">3</td>\n</tr>\n<tr>\n<td align=\"center\">[N-05]</td>\n<td align=\"left\">Lack of address(0) checks in the constructor</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[N-06]</td>\n<td align=\"left\">Upgradeable contract is missing a <code>__gap[50]</code> storage variable</td>\n<td align=\"center\">2</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Total Non-Critical Issues</th>\n<th align=\"center\">6</th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<h3 id=\"refactor-issues\" style=\"position:relative;\"><a href=\"#refactor-issues\" aria-label=\"refactor issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Refactor Issues</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Count</th>\n<th align=\"left\">Explanation</th>\n<th align=\"center\">Instances</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">[R-01]</td>\n<td align=\"left\">Shorthand way to write if / else statement</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[R-02]</td>\n<td align=\"left\">Unnecessary true statement is applied in the function <code>isClaimed</code></td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[R-03]</td>\n<td align=\"left\"><code>isPaused</code> check can be added to the modifier <code>onlyQuestActive</code>, as its used only on the claim function</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[R-04]</td>\n<td align=\"left\">Total minted check in <code>mintReceipt</code> can be refactored</td>\n<td align=\"center\">1</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Total Refactor Issues</th>\n<th align=\"center\">4</th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<h3 id=\"ordinary-issues\" style=\"position:relative;\"><a href=\"#ordinary-issues\" aria-label=\"ordinary issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ordinary Issues</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Count</th>\n<th align=\"left\">Explanation</th>\n<th align=\"center\">Instances</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">[O-01]</td>\n<td align=\"left\">Floating pragma</td>\n<td align=\"center\">8</td>\n</tr>\n<tr>\n<td align=\"center\">[O-02]</td>\n<td align=\"left\">Code contains empty blocks</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">[O-03]</td>\n<td align=\"left\">Create your own import names instead of using the regular ones</td>\n<td align=\"center\">4</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Total Ordinary Issues</th>\n<th align=\"center\">3</th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<h2 id=\"l-01-createquest-doesnt-check-if-the-reward-token-address-is-in-the-allow-list-on-erc-1155-quest-type\" style=\"position:relative;\"><a href=\"#l-01-createquest-doesnt-check-if-the-reward-token-address-is-in-the-allow-list-on-erc-1155-quest-type\" aria-label=\"l 01 createquest doesnt check if the reward token address is in the allow list on erc 1155 quest type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-01] <code>createQuest</code> doesn’t check if the reward token address is in the allow list on ERC-1155 quest type</h2>\n<p>The function <code>createQuest</code> is called by users with the quest role. The main purpose of the function is to create quests, which can be either erc20 or erc1155 type. When the type is erc20, a check is made to ensure the rewardTokenAddress_ is allowed to be used as a reward - <code>if (rewardAllowlist[rewardTokenAddress_] == false) revert RewardNotAllowed();</code>. The problem is that the same check isn’t made when the quest is erc1155, as a result when erc1155 quest is created the function createQuest doesn’t check if the rewardTokenAddress_ is in the allow list.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">61</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createQuest</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">62:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">rewardTokenAddress_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">63:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">endTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">64:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">startTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">65:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">totalParticipants_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">66:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">rewardAmountOrTokenId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">67:        </span><span class=\"mtk10\">string</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">contractType_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">68:        </span><span class=\"mtk10\">string</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">questId_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">69</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">CREATE_QUEST_ROLE</span><span class=\"mtk1\">) </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">questAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">QuestIdUsed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">71</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">72</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractType_</span><span class=\"mtk1\">)) == </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;erc20&#39;</span><span class=\"mtk1\">))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">rewardAllowlist</span><span class=\"mtk1\">[</span><span class=\"mtk12\">rewardTokenAddress_</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">false</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RewardNotAllowed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">74</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">Erc20Quest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newQuest</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Erc20Quest</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">76</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">rewardTokenAddress_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">77</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">endTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">startTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">totalParticipants_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">80</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">rewardAmountOrTokenId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">82</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rabbitholeReceiptContract</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">83</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">questFee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">84</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">protocolFeeRecipient</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">85</span><span class=\"mtk1\">:            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">86</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">87</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">QuestCreated</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">88</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">89</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newQuest</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">90</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">91</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">contractType_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">92</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">rewardTokenAddress_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">93</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">endTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">94</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">startTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">95</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">totalParticipants_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">96</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">rewardAmountOrTokenId_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">97</span><span class=\"mtk1\">:            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">98</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">questAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newQuest</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">99</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalParticipants_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">100</span><span class=\"mtk1\">:           </span><span class=\"mtk12\">newQuest</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferOwnership</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">101</span><span class=\"mtk1\">:           ++</span><span class=\"mtk12\">questIdCount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">102</span><span class=\"mtk1\">:           </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newQuest</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">103</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractType_</span><span class=\"mtk1\">)) == </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;erc1155&#39;</span><span class=\"mtk1\">))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">()) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OnlyOwnerCanCreate1155Quest</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">107</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">108</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">Erc1155Quest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newQuest</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Erc1155Quest</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">109</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">rewardTokenAddress_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">110</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">endTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">111</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">startTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">112</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">totalParticipants_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">rewardAmountOrTokenId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">114</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rabbitholeReceiptContract</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">116</span><span class=\"mtk1\">:            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">117</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">118</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">QuestCreated</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">120</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newQuest</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">121</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">contractType_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">123</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">rewardTokenAddress_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">124</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">endTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">125</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">startTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">126</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">totalParticipants_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">127</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">rewardAmountOrTokenId_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">128</span><span class=\"mtk1\">:            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">129</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">questAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newQuest</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">130</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalParticipants_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">newQuest</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferOwnership</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">132</span><span class=\"mtk1\">:            ++</span><span class=\"mtk12\">questIdCount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">133</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newQuest</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">134</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">135</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">136</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">QuestTypeInvalid</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">137</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p>Consider adding a check to ensure the contract address is allowed to be used as a reward on erc1155 quests as well:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractType_</span><span class=\"mtk1\">)) == </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;erc1155&#39;</span><span class=\"mtk1\">))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">()) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OnlyOwnerCanCreate1155Quest</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+               </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">rewardAllowlist</span><span class=\"mtk1\">[</span><span class=\"mtk12\">rewardTokenAddress_</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">false</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RewardNotAllowed</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<h2 id=\"l-02-the-function-mintreceipt-should-check-if-the-quest-has-expired-on-chain-as-well\" style=\"position:relative;\"><a href=\"#l-02-the-function-mintreceipt-should-check-if-the-quest-has-expired-on-chain-as-well\" aria-label=\"l 02 the function mintreceipt should check if the quest has expired on chain as well permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-02] The function mintReceipt should check if the quest has expired on-chain as well</h2>\n<p>The main function mintReceipt responsible for minting receipts lacks an important check to ensure the quest end time hasn’t finished yet. Considering the fact that on quest creation every quest is enforced with a startTime and endTime, which represents the quest starting time and ending time. Users should not be allowed to mint receipts after the quest is expired.</p>\n<p>By the sponsor comment, the <code>claimSignerAddress</code> takes care of that on the off-chain side and won’t issue hashes before the quest start or after the quest ends. But mistakes always can occur and it is recommended to have a check on the smart contract level as well.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">219</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mintReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signature_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">220</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">numberMinted</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OverMaxAllowedToMint</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">221</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">addressMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddressAlreadyMinted</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">222</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">)) != </span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidHash</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">223</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">recoverSigner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">signature_</span><span class=\"mtk1\">) != </span><span class=\"mtk12\">claimSignerAddress</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddressNotSigned</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">224</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">225</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">addressMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">226</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">numberMinted</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">227</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ReceiptMinted</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">228</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">rabbitholeReceiptContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">229</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p>Here is a recommended change, which takes care of this problem:</p>\n<ol>\n<li>Add a storage variable in the struct <code>Quest</code>, which will hold the end time of the quest.</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Quest</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">addressMinted</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questAddress</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numberMinted</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+       </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expires</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<ol start=\"2\">\n<li>When creating a quest with the function <code>createQuest</code> consider adding the endTime to the new stor variable <code>expires</code>.</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Add the same check if contractType is erc1155 as well.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractType_</span><span class=\"mtk1\">)) == </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;erc20&#39;</span><span class=\"mtk1\">))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">rewardAllowlist</span><span class=\"mtk1\">[</span><span class=\"mtk12\">rewardTokenAddress_</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">false</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RewardNotAllowed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">Erc20Quest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newQuest</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Erc20Quest</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">rewardTokenAddress_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">endTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">startTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">totalParticipants_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">rewardAmountOrTokenId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rabbitholeReceiptContract</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">questFee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">protocolFeeRecipient</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">QuestCreated</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newQuest</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">contractType_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">rewardTokenAddress_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">endTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">startTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">totalParticipants_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">rewardAmountOrTokenId_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">questAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newQuest</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalParticipants_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+           </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">expires</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">endTime_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">newQuest</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferOwnership</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ++</span><span class=\"mtk12\">questIdCount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newQuest</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<ol start=\"3\">\n<li>And finally add a check in the function <code>mintReceipt</code> to check if the quest expired already.</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mintReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signature_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+       </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">expires</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">QuestAlreadyExpired</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">numberMinted</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OverMaxAllowedToMint</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">addressMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddressAlreadyMinted</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">)) != </span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidHash</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">recoverSigner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">signature_</span><span class=\"mtk1\">) != </span><span class=\"mtk12\">claimSignerAddress</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddressNotSigned</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">addressMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">numberMinted</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ReceiptMinted</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">rabbitholeReceiptContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"l-03-the-reverting-functions-_calculaterewards-and-_transferrewards-should-be-removed-as-they-are-already-implemented-in-the-child-contract\" style=\"position:relative;\"><a href=\"#l-03-the-reverting-functions-_calculaterewards-and-_transferrewards-should-be-removed-as-they-are-already-implemented-in-the-child-contract\" aria-label=\"l 03 the reverting functions _calculaterewards and _transferrewards should be removed as they are already implemented in the child contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-03] The reverting functions <code>_calculateRewards</code> and <code>_transferRewards</code> should be removed, as they are already implemented in the child contract</h2>\n<p>There are two functions in Quest.sol, which reverts incase they are called. By the revert names, we can understand that these two functions need to be implemented in the child contracts - Erc20Quest.sol, Erc1155Quest.sol. Since this is already done and they are implemented in the child contracts, these two functions are unnecessary and should be removed.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_calculateRewards</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">redeemableTokenCount_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">123</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MustImplementInChild</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">124</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">129</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_transferRewards</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">130</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MustImplementInChild</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<h2 id=\"l-04-the-function-withdrawremainingtokens-can-be-changed-in-a-safer-way-to-handle-the-withdraw-from-the-owner-and-the-protocol-fee-as-well-this-prevent-risks-allocated-with-the-protocol-fees\" style=\"position:relative;\"><a href=\"#l-04-the-function-withdrawremainingtokens-can-be-changed-in-a-safer-way-to-handle-the-withdraw-from-the-owner-and-the-protocol-fee-as-well-this-prevent-risks-allocated-with-the-protocol-fees\" aria-label=\"l 04 the function withdrawremainingtokens can be changed in a safer way to handle the withdraw from the owner and the protocol fee as well this prevent risks allocated with the protocol fees permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-04] The function <code>withdrawRemainingTokens</code> can be changed in a safer way to handle the withdraw from the owner and the protocol fee as well. This prevent risks allocated with the protocol fees.</h2>\n<p>By the docs this function is called in two different scenarios, if a quest is full and receipt redeemers equals the max amount of total participants allowed in the quest - only withdrawFee is called. If a quest doesn’t hit the max total participants, first the owner calls the function <code>withdrawRemainingTokens</code> to withdraw the remaining tokens and then the fee should be paid with the function <code>withdrawFee</code>.</p>\n<p>Overall the best solution of this problem is that the function <code>withdrawRemainingTokens</code>, both does the withdrawing part to the owner and pays the fee to the protocol as well. This is considered the safest way:</p>\n<p>First, if the receipt redeemers are below the totalParticipants, can withdraw the remaining tokens and pay the fee at the same time. Second, if the quest is full and receipt redemeers hits the total amount of people allowed, only the fee will be paid to the protocol and will skip the withdraw remaining rewards part.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">receiptRedeemers</span><span class=\"mtk1\">() &lt; </span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unclaimedTokens</span><span class=\"mtk1\"> = (</span><span class=\"mtk11\">receiptRedeemers</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">redeemedTokens</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">rewardAmountInWeiOrTokenId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nonClaimableTokens</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) - </span><span class=\"mtk11\">protocolFee</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">unclaimedTokens</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">nonClaimableTokens</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">protocolFeeRecipient</span><span class=\"mtk1\">, </span><span class=\"mtk11\">protocolFee</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">protocolFeeRecipient</span><span class=\"mtk1\">, </span><span class=\"mtk11\">protocolFee</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"l-05-the-function-royaltyinfo-doesnt-check-if-the-receipt-was-already-claimed\" style=\"position:relative;\"><a href=\"#l-05-the-function-royaltyinfo-doesnt-check-if-the-receipt-was-already-claimed\" aria-label=\"l 05 the function royaltyinfo doesnt check if the receipt was already claimed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-05] The function <code>royaltyInfo</code> doesn’t check if the receipt was already claimed</h2>\n<p>The function <code>royaltyInfo</code> is used by users to check sale details regarding a particular ERC721 token.</p>\n<p>The problem here is that the function check if the token exists, but doesn’t check if the token was already claimed.</p>\n<p>Consider applying a check, which will revert if the token was already claimed.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">178</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">royaltyInfo</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">179:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">tokenId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">180:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">salePrice_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyAmount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_exists</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;Nonexistent token&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">184</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyPayment</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">salePrice_</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">royaltyFee</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">royaltyRecipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">royaltyPayment</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">186</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<h2 id=\"l-06-in-contract-quest-the-function-claim-shouldnt-only-set-the-receipt-as-claimed-but-to-burn-it-as-well-as-this-problem-brings-the-risk-where-users-can-sell-already-claimed-receipts-to-other-people\" style=\"position:relative;\"><a href=\"#l-06-in-contract-quest-the-function-claim-shouldnt-only-set-the-receipt-as-claimed-but-to-burn-it-as-well-as-this-problem-brings-the-risk-where-users-can-sell-already-claimed-receipts-to-other-people\" aria-label=\"l 06 in contract quest the function claim shouldnt only set the receipt as claimed but to burn it as well as this problem brings the risk where users can sell already claimed receipts to other people permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-06] In contract Quest the function <code>claim</code> shouldn’t only set the receipt as claimed, but to burn it as well. As this problem brings the risk, where users can sell already claimed receipts to other people</h2>\n<p>The function <code>claim</code> is used by users to claim their ERC721 receipts for rewards. By using the function the receipt is set as claimed with a simple mapping id => bool, but it isn’t burned. In the protocol docs it is clearly stated that users are free to sell or trade their receipts. Since the claimed receipts aren’t burned, this bring the risk where already claimed receipts can be sold to other people. A burn function already exists in RabbitHoleReceipt, but isn’t used.</p>\n<h2 id=\"l-07-the-function-mintreceipt-shouldnt-mint-receipts-to-users-if-the-quest-is-paused\" style=\"position:relative;\"><a href=\"#l-07-the-function-mintreceipt-shouldnt-mint-receipts-to-users-if-the-quest-is-paused\" aria-label=\"l 07 the function mintreceipt shouldnt mint receipts to users if the quest is paused permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-07] The function <code>mintReceipt</code> shouldn’t mint receipts to users, if the quest is paused</h2>\n<p>For now the function <code>mintReceipt</code> doesn’t issue hashes before the quest has started or after the quest has ended. </p>\n<p>This is done off-chain with the help of <code>claimSignerAddress</code>, but the off-chain side doesn’t check if a quest is in paused state.</p>\n<p>So even if a quest is in paused state duo to some sort of issue occurring, the function <code>mintReceipt</code> can still mint receipts for this particular quest.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">219</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mintReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signature_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">220</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">numberMinted</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OverMaxAllowedToMint</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">221</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">addressMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddressAlreadyMinted</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">222</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">)) != </span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidHash</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">223</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">recoverSigner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">signature_</span><span class=\"mtk1\">) != </span><span class=\"mtk12\">claimSignerAddress</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddressNotSigned</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">224</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">225</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">addressMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">226</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">numberMinted</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">227</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ReceiptMinted</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">228</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">rabbitholeReceiptContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">229</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p>A recommended change l thought of:</p>\n<ol>\n<li>Create a private mapping, which will check if the quest address is paused</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isPaused</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<ol start=\"2\">\n<li>Create an owner function, so the owner can change the state of the mapping. </li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setQuestState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_paused</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">isPaused</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_paused</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<ol start=\"3\">\n<li>Apply the check in <code>mintReceipt</code>, so users won’t be able claim receipts, when the quest is paused.</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mintReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signature_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+       </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">isPaused</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">QuestPaused</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">numberMinted</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OverMaxAllowedToMint</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">addressMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddressAlreadyMinted</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">)) != </span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidHash</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">recoverSigner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">signature_</span><span class=\"mtk1\">) != </span><span class=\"mtk12\">claimSignerAddress</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddressNotSigned</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">addressMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">numberMinted</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ReceiptMinted</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">rabbitholeReceiptContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2 id=\"n-01-confusing-modifier-name\" style=\"position:relative;\"><a href=\"#n-01-confusing-modifier-name\" aria-label=\"n 01 confusing modifier name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-01] Confusing modifier name</h2>\n<p>A confusing name is set on the modifier <code>onlyAdminWithdrawAfterEnd</code>. By its name it says only admin withdraw after end time, but at the same time the modifier only check if <code>block.timestamp &#x3C; endTime</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">76</span><span class=\"mtk1\">:  </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyAdminWithdrawAfterEnd</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">77</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">endTime</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NoWithdrawDuringClaim</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<h2 id=\"n-02-deploying-a-storage-variable-with-its-default-value\" style=\"position:relative;\"><a href=\"#n-02-deploying-a-storage-variable-with-its-default-value\" aria-label=\"n 02 deploying a storage variable with its default value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-02] Deploying a storage variable with its default value</h2>\n<p>At a deploying time in the contract Quest, the storage variable <code>redeemedTokens</code> is set as zero, even though its default value is already zero.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">26</span><span class=\"mtk1\">:  </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">27</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardTokenAddress_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">28</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalParticipants_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">31</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardAmountInWeiOrTokenId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiptContractAddress_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">34</span><span class=\"mtk1\">:    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">35</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">endTime_</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">EndTimeInPast</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">36</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">startTime_</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">StartTimeInPast</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">37</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">endTime_</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">startTime_</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">EndTimeLessThanOrEqualToStartTime</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">endTime</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">endTime_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">39</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">startTime_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">40</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewardTokenAddress_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">41</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalParticipants_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">42</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">rewardAmountInWeiOrTokenId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewardAmountInWeiOrTokenId_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">43</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">questId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">44</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">rabbitHoleReceiptContract</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RabbitHoleReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiptContractAddress_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">45</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">redeemedTokens</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"n-03-modifiers-not-applied-on-the-functions-start-and-withdrawremainingtokens\" style=\"position:relative;\"><a href=\"#n-03-modifiers-not-applied-on-the-functions-start-and-withdrawremainingtokens\" aria-label=\"n 03 modifiers not applied on the functions start and withdrawremainingtokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-03] Modifiers not applied on the functions <code>start</code> and <code>withdrawRemainingTokens</code></h2>\n<p>First with the function <code>start</code>, a quest should be started only by the owner, even tho the modifier is applied on the function <code>start</code> in Quest.sol. It should be added to the child contract as well.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Erc20Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">start</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">59</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) &lt; </span><span class=\"mtk11\">maxTotalRewards</span><span class=\"mtk1\">() + </span><span class=\"mtk11\">maxProtocolReward</span><span class=\"mtk1\">())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TotalAmountExceedsBalance</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">61</span><span class=\"mtk1\">:        </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">start</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">62</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p>Consider adding the onlyOwner modifier to the function above:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">start</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) &lt; </span><span class=\"mtk11\">maxTotalRewards</span><span class=\"mtk1\">() + </span><span class=\"mtk11\">maxProtocolReward</span><span class=\"mtk1\">())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TotalAmountExceedsBalance</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">start</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Same goes for the function <code>withdrawRemainingTokens</code>, an onlyOwner modifier is applied but the modifier which check if the quest ended is not. </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Erc20Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">82</span><span class=\"mtk1\">:        </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">83</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">84</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unclaimedTokens</span><span class=\"mtk1\"> = (</span><span class=\"mtk11\">receiptRedeemers</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">redeemedTokens</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">rewardAmountInWeiOrTokenId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">85</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nonClaimableTokens</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) - </span><span class=\"mtk11\">protocolFee</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">unclaimedTokens</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">86</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">nonClaimableTokens</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">87</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p>Consider adding the modifier <code>onlyAdminWithdrawAfterEnd</code> to the child contract as well:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyAdminWithdrawAfterEnd</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unclaimedTokens</span><span class=\"mtk1\"> = (</span><span class=\"mtk11\">receiptRedeemers</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">redeemedTokens</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">rewardAmountInWeiOrTokenId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nonClaimableTokens</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) - </span><span class=\"mtk11\">protocolFee</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">unclaimedTokens</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">nonClaimableTokens</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"n-04-mandatory-checks-for-extra-safety-in-the-setters\" style=\"position:relative;\"><a href=\"#n-04-mandatory-checks-for-extra-safety-in-the-setters\" aria-label=\"n 04 mandatory checks for extra safety in the setters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-04] Mandatory checks for extra safety in the setters</h2>\n<p>In the folowing functions below, there are some checks that can be made in order to achieve more safe and efficient code.</p>\n<p>Address zero check can be added in the functions <code>setClaimSignerAddress</code>, <code>setRabbitHoleReceiptContract</code> to ensure the new addresses aren’t address(0).</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">159</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setClaimSignerAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">claimSignerAddress_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">160</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">claimSignerAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">claimSignerAddress_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">161</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">172</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRabbitHoleReceiptContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rabbitholeReceiptContract_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">173</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">rabbitholeReceiptContract</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RabbitHoleReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rabbitholeReceiptContract_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">174</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p>In the function <code>setQuestFee</code> a check can be made to ensure the fee is set as non-zero.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">186</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setQuestFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questFee_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">187</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">questFee_</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">QuestFeeTooHigh</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">188</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">questFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">questFee_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">189</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<h2 id=\"n-05-lack-of-address0-checks-in-the-constructor\" style=\"position:relative;\"><a href=\"#n-05-lack-of-address0-checks-in-the-constructor\" aria-label=\"n 05 lack of address0 checks in the constructor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-05] Lack of address(0) checks in the constructor</h2>\n<p>Zero-address check should be used in the constructors, to avoid the risk of setting smth as address(0) at deploying time.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">26</span><span class=\"mtk1\">: </span><span class=\"mtk12\">constructor</span></span></span></code></pre>\n<h2 id=\"n-06-upgradeable-contract-is-missing-a-__gap50-storage-variable\" style=\"position:relative;\"><a href=\"#n-06-upgradeable-contract-is-missing-a-__gap50-storage-variable\" aria-label=\"n 06 upgradeable contract is missing a __gap50 storage variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-06] Upgradeable contract is missing a <code>__gap[50]</code> storage variable</h2>\n<p>Reference: <a href=\"https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\">Storage gaps</a></p>\n<blockquote>\n<p>You may notice that every contract includes a state variable named <code>__gap</code>. This is empty reserved space in storage that is put in place in Upgradeable contracts. It allows us to freely add new state variables in the future without compromising the storage compatibility with existing deployments.</p>\n</blockquote>\n<p>Instances:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">16</span><span class=\"mtk1\">: </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Initializable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">OwnableUpgradeable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">AccessControlUpgradeable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">IQuestFactory</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">15</span><span class=\"mtk1\">: </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span></span></span></code></pre>\n<h2 id=\"r-01-shorthand-way-to-write-if--else-statement\" style=\"position:relative;\"><a href=\"#r-01-shorthand-way-to-write-if--else-statement\" aria-label=\"r 01 shorthand way to write if  else statement permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[R-01] Shorthand way to write if / else statement</h2>\n<p>The normal if / else statement can be refactored in a shorthand way to write it:</p>\n<ol>\n<li>Increases readability</li>\n<li>Shortens the overall SLOC</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">142</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">changeCreateQuestRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">canCreateQuest_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">143</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">canCreateQuest_</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">144</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">_grantRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">CREATE_QUEST_ROLE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">account_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">145</span><span class=\"mtk1\">:        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">146</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">_revokeRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">CREATE_QUEST_ROLE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">account_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">147</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">148</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p>The above instance can be refactored in:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">changeCreateQuestRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">canCreateQuest_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">canCreateQuest_</span><span class=\"mtk1\"> ? </span><span class=\"mtk11\">_grantRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">CREATE_QUEST_ROLE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">account_</span><span class=\"mtk1\">); : </span><span class=\"mtk11\">_revokeRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">CREATE_QUEST_ROLE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">account_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"r-02-unnecessary-true-statement-is-applied-in-the-function-isclaimed\" style=\"position:relative;\"><a href=\"#r-02-unnecessary-true-statement-is-applied-in-the-function-isclaimed\" aria-label=\"r 02 unnecessary true statement is applied in the function isclaimed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[R-02] Unnecessary true statement is applied in the function <code>isClaimed</code></h2>\n<p>The function <code>isClaimed</code> checks if the given token id is claimed, for some reason there is an unnecessary true statement applied, which doesn’t do anything.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">135</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isClaimed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">136</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">claimedList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">137</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p>Consider changing the above instance to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isClaimed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">claimedList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<h2 id=\"r-03-ispaused-check-can-be-added-to-the-modifier-onlyquestactive-as-its-used-only-on-the-claim-function\" style=\"position:relative;\"><a href=\"#r-03-ispaused-check-can-be-added-to-the-modifier-onlyquestactive-as-its-used-only-on-the-claim-function\" aria-label=\"r 03 ispaused check can be added to the modifier onlyquestactive as its used only on the claim function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[R-03] <code>isPaused</code> check can be added to the modifier <code>onlyQuestActive</code>, as it’s used only on the claim function</h2>\n<p>In the <code>claim</code> function a check is made to ensure the quest isn’t paused. Considering the fact that the modifier <code>onlyQuestActive</code> is only used once and it’s on this particular function. The check can be refactored in the modifier instead of applying it in the function.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">96</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claim</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyQuestActive</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">97</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">isPaused</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">QuestPaused</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">88</span><span class=\"mtk1\">:  </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyQuestActive</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">89</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">hasStarted</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NotStarted</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">90</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ClaimWindowNotStarted</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">91</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">92</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p>Refactor the modifier <code>onlyQuestActive</code> and remove the check from the function claim:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyQuestActive</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">hasStarted</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NotStarted</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ClaimWindowNotStarted</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">isPaused</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">QuestPaused</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"r-04-total-minted-check-in-mintreceipt-can-be-refactored\" style=\"position:relative;\"><a href=\"#r-04-total-minted-check-in-mintreceipt-can-be-refactored\" aria-label=\"r 04 total minted check in mintreceipt can be refactored permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[R-04] Total minted check in <code>mintReceipt</code> can be refactored</h2>\n<p>In the function <code>mintReceipt</code> a check is made to see if the amount of already minted receipts doesn’t exceed the amount of total participants allowed and the following if statement is used below. Instead of adding 1 to the total amount of minted receipts, the if statement can just be changed to <code>>=</code>, as it does the same thing.</p>\n<p><code>if (quests[questId_].numberMinted + 1 > quests[questId_].totalParticipants)</code> </p>\n<h2 id=\"o-01-floating-pragma\" style=\"position:relative;\"><a href=\"#o-01-floating-pragma\" aria-label=\"o 01 floating pragma permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[O-01] Floating pragma</h2>\n<p>Contracts should be deployed with the same compiler version and flags that they have been tested with thoroughly. Locking the pragma helps to ensure that contracts do not accidentally get deployed using, for example, an outdated compiler version that might introduce bugs that affect the contract system negatively.</p>\n<p>Instances:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleTickets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Erc20Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Erc1155Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReceiptRenderer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TicketRenderer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span></code></pre>\n<h2 id=\"o-02-code-contains-empty-blocks\" style=\"position:relative;\"><a href=\"#o-02-code-contains-empty-blocks\" aria-label=\"o 02 code contains empty blocks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[O-02] Code contains empty blocks</h2>\n<p>There are some empty blocks, which are unused.</p>\n<p>The code should do something or at least have a description why it is structured that way.</p>\n<p>Instances:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">35</span><span class=\"mtk1\">: </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">() </span><span class=\"mtk12\">initializer</span><span class=\"mtk1\"> {}</span></span></span></code></pre>\n<h2 id=\"o-03-create-your-own-import-names-instead-of-using-the-regular-ones\" style=\"position:relative;\"><a href=\"#o-03-create-your-own-import-names-instead-of-using-the-regular-ones\" aria-label=\"o 03 create your own import names instead of using the regular ones permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[O-03] Create your own import names instead of using the regular ones</h2>\n<p>For better readability, you should name the imports instead of using the regular ones.</p>\n<p>Instances:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleTickets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReceiptRenderer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TicketRenderer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/619#issuecomment-1421584782\">waynehoover (RabbitHole) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/619#issuecomment-1438007921\">kirk-baird (judge) commented</a>:</strong></p>\n<blockquote>\n<p>This is a very high quality report listing numerous valid Low severity issues, many of which were not raised by other wardens. I do not have any concerns with the issues raised or the recommendations. Furthermore, the formatting of this report is excellent.</p>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this contest, 50 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/288\">report highlighted below</a> by <strong>IllIllI</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/650\">carlitox477</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/647\">joestakey</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/644\">halden</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/640\">ddimitrov22</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/637\">atharvasama</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/628\">matrix_0wl</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/616\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/594\">MiniGlome</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/593\">SAAJ</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/586\">lukris02</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/583\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/575\">Dug</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/568\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/565\">0xAgro</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/556\">catellatech</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/549\">c3phas</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/532\">karanctf</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/522\">nadin</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/513\">cryptostellar5</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/511\">Deivitto</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/504\">cryptonue</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/503\">Diana</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/493\">horsefacts</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/468\">favelanky</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/460\">shark</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/418\">saneryee</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/416\">ali</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/344\">Breeje</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/342\">navinavu</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/334\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/333\">doublesharp</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/331\">Iurii3</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/327\">glcanvas</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/323\">0x4non</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/313\">0xngndev</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/310\">gzeon</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/280\">thekmj</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/278\">LethL</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/253\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/240\">NoamYakov</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/205\">jasonxiale</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/199\">dharma09</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/161\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/138\">ReyAdmirado</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/99\">Bnke0x0</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/63\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/40\">arialblack14</a>, <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/25\">georgits</a>, and <a href=\"https://github.com/code-423n4/2023-01-rabbithole-findings/issues/3\">0xhacksmithh</a>.</em></p>\n<h2 id=\"summary-1\" style=\"position:relative;\"><a href=\"#summary-1\" aria-label=\"summary 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Instances</th>\n<th align=\"center\">Total Gas Saved</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[G‑01]</td>\n<td align=\"left\">Shorten the array rather than copying to a new one</td>\n<td align=\"center\">1</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑02]</td>\n<td align=\"left\">Hash shouldn’t be re-calculated on every iteration of the <code>for</code>-loop</td>\n<td align=\"center\">1</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑03]</td>\n<td align=\"left\">Using <code>calldata</code> instead of <code>memory</code> for read-only arguments in <code>external</code> functions saves gas</td>\n<td align=\"center\">12</td>\n<td align=\"center\">1440</td>\n</tr>\n<tr>\n<td>[G‑04]</td>\n<td align=\"left\">Multiple accesses of a mapping/array should use a local variable cache</td>\n<td align=\"center\">9</td>\n<td align=\"center\">378</td>\n</tr>\n<tr>\n<td>[G‑05]</td>\n<td align=\"left\">The result of function calls should be cached rather than re-calling the function</td>\n<td align=\"center\">1</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑06]</td>\n<td align=\"left\"><code>&#x3C;x> += &#x3C;y></code> costs more gas than <code>&#x3C;x> = &#x3C;x> + &#x3C;y></code> for state variables</td>\n<td align=\"center\">1</td>\n<td align=\"center\">113</td>\n</tr>\n<tr>\n<td>[G‑07]</td>\n<td align=\"left\"><code>internal</code> functions only called once can be inlined to save gas</td>\n<td align=\"center\">1</td>\n<td align=\"center\">20</td>\n</tr>\n<tr>\n<td>[G‑08]</td>\n<td align=\"left\"><code>++i</code>/<code>i++</code> should be <code>unchecked{++i}</code>/<code>unchecked{i++}</code> when it is not possible for them to overflow, as is the case when used in <code>for</code>- and <code>while</code>-loops</td>\n<td align=\"center\">4</td>\n<td align=\"center\">240</td>\n</tr>\n<tr>\n<td>[G‑09]</td>\n<td align=\"left\">Optimize names to save gas</td>\n<td align=\"center\">8</td>\n<td align=\"center\">176</td>\n</tr>\n<tr>\n<td>[G‑10]</td>\n<td align=\"left\">String literals passed to <code>abi.encode()</code>/<code>abi.encodePacked()</code> should not be split by commas</td>\n<td align=\"center\">5</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑11]</td>\n<td align=\"left\">Using <code>private</code> rather than <code>public</code> for constants, saves gas</td>\n<td align=\"center\">5</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑12]</td>\n<td align=\"left\">Don’t compare boolean expressions to boolean literals</td>\n<td align=\"center\">3</td>\n<td align=\"center\">27</td>\n</tr>\n<tr>\n<td>[G‑13]</td>\n<td align=\"left\">Use custom errors rather than <code>revert()</code>/<code>require()</code> strings to save gas</td>\n<td align=\"center\">3</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑14]</td>\n<td align=\"left\">Functions guaranteed to revert when called by normal users can be marked <code>payable</code></td>\n<td align=\"center\">2</td>\n<td align=\"center\">42</td>\n</tr>\n</tbody>\n</table>\n<p>Total: 56 instances over 14 issues with <strong>2436 gas</strong> saved</p>\n<p>Gas totals use lower bounds of ranges and count two iterations of each <code>for</code>-loop. All values above are runtime, not deployment, values; deployment values are listed in the individual issue descriptions. The table above as well as its gas numbers do not include any of the excluded findings.</p>\n<h2 id=\"g01-shorten-the-array-rather-than-copying-to-a-new-one\" style=\"position:relative;\"><a href=\"#g01-shorten-the-array-rather-than-copying-to-a-new-one\" aria-label=\"g01 shorten the array rather than copying to a new one permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑01] Shorten the array rather than copying to a new one</h2>\n<p>Inline-assembly can be used to shorten the array by changing the length slot, so that the entries don’t have to be copied to a new, shorter array</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">125</span><span class=\"mtk1\">          </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">filteredTokens</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint</span><span class=\"mtk1\">[](</span><span class=\"mtk12\">foundTokens</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">126</span><span class=\"mtk1\">          </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">filterTokensIndexTracker</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">127</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">128</span><span class=\"mtk1\">          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">msgSenderBalance</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">129</span><span class=\"mtk1\">              </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">tokenIdsForQuest</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">130</span><span class=\"mtk1\">                  </span><span class=\"mtk12\">filteredTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">filterTokensIndexTracker</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">tokenIdsForQuest</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">                  </span><span class=\"mtk12\">filterTokensIndexTracker</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">132</span><span class=\"mtk1\">              }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">133</span><span class=\"mtk1\">:         }</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L125-L133\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L125-L133</a></p>\n<h2 id=\"g02-hash-shouldnt-be-re-calculated-on-every-iteration-of-the-for-loop\" style=\"position:relative;\"><a href=\"#g02-hash-shouldnt-be-re-calculated-on-every-iteration-of-the-for-loop\" aria-label=\"g02 hash shouldnt be re calculated on every iteration of the for loop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑02] Hash shouldn’t be re-calculated on every iteration of the <code>for</code>-loop</h2>\n<p>Calculate the hash outside of the loop, and use that value within the loop</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">questIdForTokenId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">])) == </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">))) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L119\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L119</a></p>\n<h2 id=\"g03-using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas\" style=\"position:relative;\"><a href=\"#g03-using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas\" aria-label=\"g03 using calldata instead of memory for read only arguments in external functions saves gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑03] Using <code>calldata</code> instead of <code>memory</code> for read-only arguments in <code>external</code> functions saves gas</h2>\n<p>When a function with a <code>memory</code> array is called externally, the <code>abi.decode()</code> step has to use a for-loop to copy each index of the <code>calldata</code> to the <code>memory</code> index. <strong>Each iteration of this for-loop costs at least 60 gas</strong> (i.e. <code>60 * &#x3C;mem_array>.length</code>). Using <code>calldata</code> directly, obliviates the need for such a loop in the contract code and runtime execution. Note that even if an interface defines a function as having <code>memory</code> arguments, it’s still valid for implementation contracs to use <code>calldata</code> arguments instead. </p>\n<p>If the array is passed to an <code>internal</code> function which passes the array to another internal function where the array is modified and therefore <code>memory</code> is used in the <code>external</code> call, it’s still more gass-efficient to use <code>calldata</code> when the <code>external</code> function uses modifiers, since the modifiers may prevent the internal functions from being called. Structs have the same overhead as an array of length one</p>\n<p>Note that I’ve also flagged instances where the function is <code>public</code> but can be marked as <code>external</code> since it’s not called by the contract, and cases where a constructor is involved</p>\n<p><em>There are 12 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit contractType_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit questId_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">61</span><span class=\"mtk1\">        </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createQuest</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">62            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardTokenAddress_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">63            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">64            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">65            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalParticipants_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">66            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardAmountOrTokenId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">67            </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contractType_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">68            </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">69:       ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">CREATE_QUEST_ROLE</span><span class=\"mtk1\">) </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit questId_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">193</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getNumberMinted</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit questId_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">199</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">questInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit questId_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit signature_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">219</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mintReceipt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hash_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signature_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L61-L69\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L61-L69</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit questId_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">98</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit questId_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">109</span><span class=\"mtk1\">       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getOwnedTokenIdsOfQuest</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">110           </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">111           </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">claimingAddress_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">112:      ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L98\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L98</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleTickets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit data_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">83</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit ids_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit amounts_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit data_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">92</span><span class=\"mtk1\">        </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mintBatch</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">93            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">94            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ids_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">95            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amounts_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">96            </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">97:       ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleTickets.sol#L83\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleTickets.sol#L83</a></p>\n<h2 id=\"g04-multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache\" style=\"position:relative;\"><a href=\"#g04-multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache\" aria-label=\"g04 multiple accesses of a mappingarray should use a local variable cache permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑04] Multiple accesses of a mapping/array should use a local variable cache</h2>\n<p>The instances below point to the second+ access of a value inside a mapping/array, within a function. Caching a mapping’s value in a local <code>storage</code> or <code>calldata</code> variable when the value is accessed <a href=\"https://gist.github.com/IllIllI000/ec23a57daa30a8f8ca8b9681c8ccefb0\">multiple times</a>, saves <strong>~42 gas per access</strong> due to not having to recalculate the key’s keccak256 hash (Gkeccak256 - <strong>30 gas</strong>) and that calculation’s associated stack operations. Caching an array’s struct avoids recalculating the array offsets into memory/calldata.</p>\n<p><em>There are 9 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit quests[questId_] on line 70</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">98</span><span class=\"mtk1\">:               </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">questAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newQuest</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit quests[questId_] on line 98</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">99</span><span class=\"mtk1\">:               </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalParticipants_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit quests[questId_] on line 129</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">130</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalParticipants_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit quests[questId_] on line 201</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">202</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit quests[questId_] on line 202</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">203</span><span class=\"mtk1\">:              </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">numberMinted</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit quests[questId_] on line 220</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">220</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">numberMinted</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OverMaxAllowedToMint</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit quests[questId_] on line 220</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">221</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">addressMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddressAlreadyMinted</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit quests[questId_] on line 221</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">225</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">addressMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit quests[questId_] on line 225</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">226</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">numberMinted</span><span class=\"mtk1\">++;</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L98\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L98</a></p>\n<h2 id=\"g05-the-result-of-function-calls-should-be-cached-rather-than-re-calling-the-function\" style=\"position:relative;\"><a href=\"#g05-the-result-of-function-calls-should-be-cached-rather-than-re-calling-the-function\" aria-label=\"g05 the result of function calls should be cached rather than re calling the function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑05] The result of function calls should be cached rather than re-calling the function</h2>\n<p>The instances below point to the second+ call of the function within a single function.</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReceiptRenderer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit tokenId_.toString() on line 52</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">:               </span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toString</span><span class=\"mtk1\">(),</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/ReceiptRenderer.sol#L66\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/ReceiptRenderer.sol#L66</a></p>\n<h2 id=\"g06-x--y-costs-more-gas-than-x--x--y-for-state-variables\" style=\"position:relative;\"><a href=\"#g06-x--y-costs-more-gas-than-x--x--y-for-state-variables\" aria-label=\"g06 x  y costs more gas than x  x  y for state variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑06] <code>&#x3C;x> += &#x3C;y></code> costs more gas than <code>&#x3C;x> = &#x3C;x> + &#x3C;y></code> for state variables</h2>\n<p>Using the addition operator instead of plus-equals saves <strong><a href=\"https://gist.github.com/IllIllI000/cbbfb267425b898e5be734d4008d4fe8\">113 gas</a></strong></p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">redeemedTokens</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">redeemableTokenCount</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L115\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L115</a></p>\n<h2 id=\"g07-internal-functions-only-called-once-can-be-inlined-to-save-gas\" style=\"position:relative;\"><a href=\"#g07-internal-functions-only-called-once-can-be-inlined-to-save-gas\" aria-label=\"g07 internal functions only called once can be inlined to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑07] <code>internal</code> functions only called once can be inlined to save gas</h2>\n<p>Not inlining costs <strong>20 to 40 gas</strong> because of two extra <code>JUMP</code> instructions and additional stack operations needed for function calls.</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">152</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">grantDefaultAdminAndCreateQuestRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L152\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L152</a></p>\n<h2 id=\"g08-ii-should-be-uncheckediuncheckedi-when-it-is-not-possible-for-them-to-overflow-as-is-the-case-when-used-in-for--and-while-loops\" style=\"position:relative;\"><a href=\"#g08-ii-should-be-uncheckediuncheckedi-when-it-is-not-possible-for-them-to-overflow-as-is-the-case-when-used-in-for--and-while-loops\" aria-label=\"g08 ii should be uncheckediuncheckedi when it is not possible for them to overflow as is the case when used in for  and while loops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑08] <code>++i</code>/<code>i++</code> should be <code>unchecked{++i}</code>/<code>unchecked{i++}</code> when it is not possible for them to overflow, as is the case when used in <code>for</code>- and <code>while</code>-loops</h2>\n<p>The <code>unchecked</code> keyword is new in solidity version 0.8.0, so this only applies to that version or higher, which these instances are. This saves <strong>30-40 gas <a href=\"https://gist.github.com/hrkrshnn/ee8fabd532058307229d65dcd5836ddc#the-increment-in-for-loop-post-condition-can-be-made-unchecked\">per loop</a></strong></p>\n<p><em>There are 4 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span><span class=\"mtk1\">:           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds_</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L70\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L70</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">117</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">msgSenderBalance</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">128</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">msgSenderBalance</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L117\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L117</a></p>\n<h2 id=\"g09-optimize-names-to-save-gas\" style=\"position:relative;\"><a href=\"#g09-optimize-names-to-save-gas\" aria-label=\"g09 optimize names to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑09] Optimize names to save gas</h2>\n<p><code>public</code>/<code>external</code> function names and <code>public</code> member variable names can be optimized to save gas. See <a href=\"https://gist.github.com/IllIllI000/a5d8b486a8259f9f77891a919febd1a9\">this</a> link for an example of how it works. Below are the interfaces/abstract contracts that can be optimized so that the most frequently-called functions use the least amount of gas possible during method lookup. Method IDs that have two leading zero bytes can save <strong>128 gas</strong> each during deployment, and renaming functions to have lower method IDs will save <strong>22 gas</strong> per call, <a href=\"https://medium.com/joyso/solidity-how-does-function-name-affect-gas-consumption-in-smart-contract-47d270d8ac92\">per sorted position shifted</a></p>\n<p><em>There are 8 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Erc20Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit maxTotalRewards(), maxProtocolReward(), receiptRedeemers(), protocolFee(), withdrawFee()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">11</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Erc20Quest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Quest</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L11\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L11</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"74\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IQuest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit isClaimed(), getRewardAmount(), getRewardToken()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">6</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk10\">IQuest</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/interfaces/IQuest.sol#L6\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/interfaces/IQuest.sol#L6</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"75\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit initialize(), createQuest(), changeCreateQuestRole(), setClaimSignerAddress(), setProtocolFeeRecipient(), setRabbitHoleReceiptContract(), setRewardAllowlistAddress(), setQuestFee(), getNumberMinted(), questInfo(), recoverSigner(), mintReceipt()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">16</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Initializable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">OwnableUpgradeable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">AccessControlUpgradeable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">IQuestFactory</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L16\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L16</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"76\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit unPause(), claim(), isClaimed(), getRewardAmount(), getRewardToken(), withdrawRemainingTokens()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">12</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Quest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Ownable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">IQuest</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L12\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L12</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"77\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit initialize(), setReceiptRenderer(), setRoyaltyRecipient(), setQuestFactory(), setMinterAddress(), setRoyaltyFee(), mint(), getOwnedTokenIdsOfQuest()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">15</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L15\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L15</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"78\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleTickets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit initialize(), setTicketRenderer(), setRoyaltyRecipient(), setRoyaltyFee(), setMinterAddress(), mint(), mintBatch()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">11</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RabbitHoleTickets</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleTickets.sol#L11\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleTickets.sol#L11</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"79\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReceiptRenderer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit generateTokenURI(), generateDataURI(), generateAttribute(), generateSVG()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">10</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ReceiptRenderer</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/ReceiptRenderer.sol#L10\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/ReceiptRenderer.sol#L10</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"80\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TicketRenderer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit generateTokenURI(), generateSVG()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">10</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TicketRenderer</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/TicketRenderer.sol#L10\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/TicketRenderer.sol#L10</a></p>\n<h2 id=\"g10-string-literals-passed-to-abiencodeabiencodepacked-should-not-be-split-by-commas\" style=\"position:relative;\"><a href=\"#g10-string-literals-passed-to-abiencodeabiencodepacked-should-not-be-split-by-commas\" aria-label=\"g10 string literals passed to abiencodeabiencodepacked should not be split by commas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑10] String literals passed to <code>abi.encode()</code>/<code>abi.encodePacked()</code> should not be split by commas</h2>\n<p>String literals can be split into multiple parts and still be considered as a single string literal. Adding commas between each chunk makes it no longer a single string, and instead multiple strings. EACH new comma costs <a href=\"https://gist.github.com/IllIllI000/837d1b36c16c9bfe1010f9f775a09bbf\"><strong><em>21 gas</em></strong></a> due to stack operations and separate <code>MSTORE</code>s.</p>\n<p><em>There are 5 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"81\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ReceiptRenderer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit 4 commas</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">            </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dataURI</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">64</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;{&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">65</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&quot;name&quot;: &quot;RabbitHole.gg Receipt #&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">                </span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toString</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">67</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&quot;,&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">68</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&quot;description&quot;: &quot;RabbitHole.gg Receipts are used to claim rewards from completed quests.&quot;,&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">69</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&quot;image&quot;: &quot;&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span><span class=\"mtk1\">                </span><span class=\"mtk11\">generateSVG</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">71</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&quot;,&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">72</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&quot;attributes&quot;: &#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">                </span><span class=\"mtk12\">attributes</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">74</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;}&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">:           );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit 3 commas</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">83</span><span class=\"mtk1\">            </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">attribute</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">84</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;{&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">85</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&quot;trait_type&quot;: &quot;&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">86</span><span class=\"mtk1\">                </span><span class=\"mtk12\">key</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">87</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&quot;,&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">88</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&quot;value&quot;: &quot;&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">89</span><span class=\"mtk1\">                </span><span class=\"mtk12\">value</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">90</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&quot;&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">91</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;}&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">92</span><span class=\"mtk1\">:           );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit 5 commas</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">101</span><span class=\"mtk1\">           </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">svg</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">102</span><span class=\"mtk1\">               </span><span class=\"mtk8\">&#39;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; preserveAspectRatio=&quot;xMinYMin meet&quot; viewBox=&quot;0 0 350 350&quot;&gt;&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">103</span><span class=\"mtk1\">               </span><span class=\"mtk8\">&#39;&lt;style&gt;.base { fill: white; font-family: serif; font-size: 14px; }&lt;/style&gt;&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">               </span><span class=\"mtk8\">&#39;&lt;rect width=&quot;100%&quot; height=&quot;100%&quot; fill=&quot;black&quot; /&gt;&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">               </span><span class=\"mtk8\">&#39;&lt;text x=&quot;50%&quot; y=&quot;40%&quot; class=&quot;base&quot; dominant-baseline=&quot;middle&quot; text-anchor=&quot;middle&quot;&gt;RabbitHole Quest #&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">               </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">107</span><span class=\"mtk1\">               </span><span class=\"mtk8\">&#39;&lt;/text&gt;&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">108</span><span class=\"mtk1\">               </span><span class=\"mtk8\">&#39;&lt;text x=&quot;70%&quot; y=&quot;40%&quot; class=&quot;base&quot; dominant-baseline=&quot;middle&quot; text-anchor=&quot;middle&quot;&gt;RabbitHole Quest Receipt #&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">109</span><span class=\"mtk1\">               </span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">110</span><span class=\"mtk1\">               </span><span class=\"mtk8\">&#39;&lt;/text&gt;&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">111</span><span class=\"mtk1\">               </span><span class=\"mtk8\">&#39;&lt;/svg&gt;&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">112</span><span class=\"mtk1\">:          );</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/ReceiptRenderer.sol#L63-L75\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/ReceiptRenderer.sol#L63-L75</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"82\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TicketRenderer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit 4 commas</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">19</span><span class=\"mtk1\">            </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dataURI</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">20</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;{&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">21</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&quot;name&quot;: &quot;RabbitHole Tickets #&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">22</span><span class=\"mtk1\">                </span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toString</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">23</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&quot;,&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">24</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&quot;description&quot;: &quot;A reward for completing quests within RabbitHole, with unk(no)wn utility&quot;,&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">25</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&quot;image&quot;: &quot;&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">26</span><span class=\"mtk1\">                </span><span class=\"mtk11\">generateSVG</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">27</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&quot;&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">28</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;}&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">:           );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit 4 commas</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">37</span><span class=\"mtk1\">            </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">svg</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; preserveAspectRatio=&quot;xMinYMin meet&quot; viewBox=&quot;0 0 350 350&quot;&gt;&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">39</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&lt;style&gt;.base { fill: white; font-family: serif; font-size: 14px; }&lt;/style&gt;&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">40</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&lt;rect width=&quot;100%&quot; height=&quot;100%&quot; fill=&quot;black&quot; /&gt;&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">41</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&lt;text x=&quot;50%&quot; y=&quot;40%&quot; class=&quot;base&quot; dominant-baseline=&quot;middle&quot; text-anchor=&quot;middle&quot;&gt;RabbitHole Tickets #&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">42</span><span class=\"mtk1\">                </span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toString</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">43</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&lt;/text&gt;&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">44</span><span class=\"mtk1\">                </span><span class=\"mtk8\">&#39;&lt;/svg&gt;&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">45</span><span class=\"mtk1\">:           );</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/TicketRenderer.sol#L19-L29\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/TicketRenderer.sol#L19-L29</a></p>\n<h2 id=\"g11-using-private-rather-than-public-for-constants-saves-gas\" style=\"position:relative;\"><a href=\"#g11-using-private-rather-than-public-for-constants-saves-gas\" aria-label=\"g11 using private rather than public for constants saves gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑11] Using <code>private</code> rather than <code>public</code> for constants, saves gas</h2>\n<p>If needed, the values can be read from the verified contract source code, or if there are multiple values there can be a single getter function that <a href=\"https://github.com/code-423n4/2022-08-frax/blob/90f55a9ce4e25bceed3a74290b854341d8de6afa/src/contracts/FraxlendPair.sol#L156-L178\">returns a tuple</a> of the values of all currently-public constants. Saves <strong>3406-3606 gas</strong> in deployment gas due to the compiler not having to create non-payable getter functions for deployment calldata, not having to store the bytes of the value outside of where it’s used, and not adding another entry to the method ID table.</p>\n<p><em>There are 5 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"83\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Erc20Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">13</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questFee</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L13\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L13</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"84\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">15</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endTime</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">16</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startTime</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">17</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalParticipants</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">18</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardAmountInWeiOrTokenId</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L15\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L15</a></p>\n<h2 id=\"g12-dont-compare-boolean-expressions-to-boolean-literals\" style=\"position:relative;\"><a href=\"#g12-dont-compare-boolean-expressions-to-boolean-literals\" aria-label=\"g12 dont compare boolean expressions to boolean literals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑12] Don’t compare boolean expressions to boolean literals</h2>\n<p><code>if (&#x3C;x> == true)</code> => <code>if (&#x3C;x>)</code>, <code>if (&#x3C;x> == false)</code> => <code>if (!&#x3C;x>)</code></p>\n<p><em>There are 3 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"85\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">:               </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">rewardAllowlist</span><span class=\"mtk1\">[</span><span class=\"mtk12\">rewardTokenAddress_</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">false</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RewardNotAllowed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">221</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">addressMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddressAlreadyMinted</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L73\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L73</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"86\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">136</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">claimedList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">] == </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L136\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L136</a></p>\n<h2 id=\"g13-use-custom-errors-rather-than-revertrequire-strings-to-save-gas\" style=\"position:relative;\"><a href=\"#g13-use-custom-errors-rather-than-revertrequire-strings-to-save-gas\" aria-label=\"g13 use custom errors rather than revertrequire strings to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑13] Use custom errors rather than <code>revert()</code>/<code>require()</code> strings to save gas</h2>\n<p>Custom errors are available from solidity version 0.8.4. Custom errors save <a href=\"https://gist.github.com/IllIllI000/ad1bd0d29a0101b25e57c293b4b0c746\"><strong>~50 gas</strong></a> each time they’re hit by <a href=\"https://blog.soliditylang.org/2021/04/21/custom-errors/#errors-in-depth\">avoiding having to allocate and store the revert string</a>. Not defining the strings also save deployment gas.</p>\n<p><em>There are 3 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"87\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">161</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_exists</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;ERC721URIStorage: URI query for nonexistent token&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">162</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">QuestFactoryContract</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">IQuestFactory</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)), </span><span class=\"mtk8\">&#39;QuestFactory not set&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_exists</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;Nonexistent token&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L161\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L161</a></p>\n<h2 id=\"g14-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable\" style=\"position:relative;\"><a href=\"#g14-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable\" aria-label=\"g14 functions guaranteed to revert when called by normal users can be marked payable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑14] Functions guaranteed to revert when called by normal users can be marked <code>payable</code></h2>\n<p>If a function modifier such as <code>onlyOwner</code> is used, the function will revert if a normal user tries to pay the function. Marking the function as <code>payable</code> will lower the gas cost for legitimate callers because the compiler will not include checks for whether a payment was provided. The extra opcodes avoided are\n<code>CALLVALUE</code>(2),<code>DUP1</code>(3),<code>ISZERO</code>(3),<code>PUSH2</code>(3),<code>JUMPI</code>(10),<code>PUSH1</code>(3),<code>DUP1</code>(3),<code>REVERT</code>(0),<code>JUMPDEST</code>(1),<code>POP</code>(2), which costs an average of about <strong>21 gas per call</strong> to the function, in addition to the extra deployment cost</p>\n<p><em>There are 2 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"88\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">61</span><span class=\"mtk1\">        </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createQuest</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">62            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardTokenAddress_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">63            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">endTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">64            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startTime_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">65            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalParticipants_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">66            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardAmountOrTokenId_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">67            </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contractType_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">68            </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">69:       ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">CREATE_QUEST_ROLE</span><span class=\"mtk1\">) </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L61-L69\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L61-L69</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"89\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleTickets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">92</span><span class=\"mtk1\">        </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mintBatch</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">93            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">94            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ids_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">95            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amounts_</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">96            </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">97:       ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleTickets.sol#L92-L97\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleTickets.sol#L92-L97</a></p>\n<h2 id=\"excluded-findings\" style=\"position:relative;\"><a href=\"#excluded-findings\" aria-label=\"excluded findings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Excluded findings</h2>\n<p>These findings are excluded from awards calculations because there are publicly-available automated tools that find them. The valid ones appear here for completeness.</p>\n<h3 id=\"summary-2\" style=\"position:relative;\"><a href=\"#summary-2\" aria-label=\"summary 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Instances</th>\n<th align=\"center\">Total Gas Saved</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[G‑15]</td>\n<td align=\"left\"><code>&#x3C;array>.length</code> should not be looked up in every loop of a <code>for</code>-loop</td>\n<td align=\"center\">2</td>\n<td align=\"center\">6</td>\n</tr>\n<tr>\n<td>[G‑16]</td>\n<td align=\"left\"><code>require()</code>/<code>revert()</code> strings longer than 32 bytes cost extra gas</td>\n<td align=\"center\">1</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑17]</td>\n<td align=\"left\">Using <code>bool</code>s for storage incurs overhead</td>\n<td align=\"center\">4</td>\n<td align=\"center\">68400</td>\n</tr>\n<tr>\n<td>[G‑18]</td>\n<td align=\"left\"><code>++i</code> costs less gas than <code>i++</code>, especially when it’s used in <code>for</code>-loops (<code>--i</code>/<code>i--</code> too)</td>\n<td align=\"center\">8</td>\n<td align=\"center\">40</td>\n</tr>\n<tr>\n<td>[G‑19]</td>\n<td align=\"left\">Using <code>private</code> rather than <code>public</code> for constants, saves gas</td>\n<td align=\"center\">1</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑20]</td>\n<td align=\"left\">Functions guaranteed to revert when called by normal users can be marked <code>payable</code></td>\n<td align=\"center\">25</td>\n<td align=\"center\">525</td>\n</tr>\n</tbody>\n</table>\n<p>Total: 41 instances over 6 issues with <strong>68971 gas</strong> saved</p>\n<p>Gas totals use lower bounds of ranges and count two iterations of each <code>for</code>-loop. All values above are runtime, not deployment, values; deployment values are listed in the individual issue descriptions.</p>\n<h3 id=\"g15-arraylength-should-not-be-looked-up-in-every-loop-of-a-for-loop\" style=\"position:relative;\"><a href=\"#g15-arraylength-should-not-be-looked-up-in-every-loop-of-a-for-loop\" aria-label=\"g15 arraylength should not be looked up in every loop of a for loop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑15] <code>&#x3C;array>.length</code> should not be looked up in every loop of a <code>for</code>-loop</h3>\n<p>The overheads outlined below are <em>PER LOOP</em>, excluding the first loop</p>\n<ul>\n<li>storage arrays incur a Gwarmaccess (<strong>100 gas</strong>)</li>\n<li>memory arrays use <code>MLOAD</code> (<strong>3 gas</strong>)</li>\n<li>calldata arrays use <code>CALLDATALOAD</code> (<strong>3 gas</strong>)</li>\n</ul>\n<p>Caching the length changes each of these to a <code>DUP&#x3C;N></code> (<strong>3 gas</strong>), and gets rid of the extra <code>DUP&#x3C;N></code> needed to store the stack offset</p>\n<p><em>There are 2 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"90\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span><span class=\"mtk1\">:           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds_</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L70\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L70</a></p>\n<h3 id=\"g16-requirerevert-strings-longer-than-32-bytes-cost-extra-gas\" style=\"position:relative;\"><a href=\"#g16-requirerevert-strings-longer-than-32-bytes-cost-extra-gas\" aria-label=\"g16 requirerevert strings longer than 32 bytes cost extra gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑16] <code>require()</code>/<code>revert()</code> strings longer than 32 bytes cost extra gas</h3>\n<p>Each extra memory word of bytes past the original 32 <a href=\"https://gist.github.com/hrkrshnn/ee8fabd532058307229d65dcd5836ddc#consider-having-short-revert-strings\">incurs an MSTORE</a> which costs <strong>3 gas</strong>.</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"91\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">161</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_exists</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&#39;ERC721URIStorage: URI query for nonexistent token&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L161\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L161</a></p>\n<h3 id=\"g17-using-bools-for-storage-incurs-overhead\" style=\"position:relative;\"><a href=\"#g17-using-bools-for-storage-incurs-overhead\" aria-label=\"g17 using bools for storage incurs overhead permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑17] Using <code>bool</code>s for storage incurs overhead</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"92\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Booleans are more expensive than uint256 or any type that takes up a full</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// word because each write operation emits an extra SLOAD to first read the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// slot&#39;s contents, replace the bits taken up by the boolean, and then write</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// back. This is the compiler&#39;s defense against contract upgrades and</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// pointer aliasing, and it cannot be disabled.</span></span></span></code></pre>\n<p><a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/58f635312aa21f947cae5f8578638a85aa2519f5/contracts/security/ReentrancyGuard.sol#L23-L27\">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/58f635312aa21f947cae5f8578638a85aa2519f5/contracts/security/ReentrancyGuard.sol#L23-L27</a></p>\n<p>Use <code>uint256(1)</code> and <code>uint256(2)</code> for true/false to avoid a Gwarmaccess (<strong><a href=\"https://gist.github.com/IllIllI000/1b70014db712f8572a72378321250058\">100 gas</a></strong>) for the extra SLOAD, and to avoid Gsset (<strong>20000 gas</strong>) when changing from <code>false</code> to <code>true</code>, after having been <code>true</code> in the past</p>\n<p><em>There are 4 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"93\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardAllowlist</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L30\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L30</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"94\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">19</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hasStarted</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">20</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isPaused</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">24</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">private</span><span class=\"mtk1\"> </span><span class=\"mtk12\">claimedList</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L19\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L19</a></p>\n<h3 id=\"g18-i-costs-less-gas-than-i-especially-when-its-used-in-for-loops---ii---too\" style=\"position:relative;\"><a href=\"#g18-i-costs-less-gas-than-i-especially-when-its-used-in-for-loops---ii---too\" aria-label=\"g18 i costs less gas than i especially when its used in for loops   ii   too permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑18] <code>++i</code> costs less gas than <code>i++</code>, especially when it’s used in <code>for</code>-loops (<code>--i</code>/<code>i--</code> too)</h3>\n<p>Saves <strong>5 gas per loop</strong></p>\n<p><em>There are 8 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"95\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">226</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">quests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">].</span><span class=\"mtk12\">numberMinted</span><span class=\"mtk1\">++;</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L226\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L226</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"96\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span><span class=\"mtk1\">:           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenIds_</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">:                  </span><span class=\"mtk12\">redeemableTokenCount</span><span class=\"mtk1\">++;</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L70\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L70</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"97\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">117</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">msgSenderBalance</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">121</span><span class=\"mtk1\">:                  </span><span class=\"mtk12\">foundTokens</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">128</span><span class=\"mtk1\">:          </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">msgSenderBalance</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">:                  </span><span class=\"mtk12\">filterTokensIndexTracker</span><span class=\"mtk1\">++;</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L117\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L117</a></p>\n<h3 id=\"g19-using-private-rather-than-public-for-constants-saves-gas\" style=\"position:relative;\"><a href=\"#g19-using-private-rather-than-public-for-constants-saves-gas\" aria-label=\"g19 using private rather than public for constants saves gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑19] Using <code>private</code> rather than <code>public</code> for constants, saves gas</h3>\n<p>If needed, the values can be read from the verified contract source code, or if there are multiple values there can be a single getter function that <a href=\"https://github.com/code-423n4/2022-08-frax/blob/90f55a9ce4e25bceed3a74290b854341d8de6afa/src/contracts/FraxlendPair.sol#L156-L178\">returns a tuple</a> of the values of all currently-public constants. Saves <strong>3406-3606 gas</strong> in deployment gas due to the compiler not having to create non-payable getter functions for deployment calldata, not having to store the bytes of the value outside of where it’s used, and not adding another entry to the method ID table.</p>\n<p><em>There is 1 instance of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"98\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">17</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">CREATE_QUEST_ROLE</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;CREATE_QUEST_ROLE&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L17\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L17</a></p>\n<h3 id=\"g20-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable\" style=\"position:relative;\"><a href=\"#g20-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable\" aria-label=\"g20 functions guaranteed to revert when called by normal users can be marked payable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G‑20] Functions guaranteed to revert when called by normal users can be marked <code>payable</code></h3>\n<p>If a function modifier such as <code>onlyOwner</code> is used, the function will revert if a normal user tries to pay the function. Marking the function as <code>payable</code> will lower the gas cost for legitimate callers because the compiler will not include checks for whether a payment was provided. The extra opcodes avoided are\n<code>CALLVALUE</code>(2),<code>DUP1</code>(3),<code>ISZERO</code>(3),<code>PUSH2</code>(3),<code>JUMPI</code>(10),<code>PUSH1</code>(3),<code>DUP1</code>(3),<code>REVERT</code>(0),<code>JUMPDEST</code>(1),<code>POP</code>(2), which costs an average of about <strong>21 gas per call</strong> to the function, in addition to the extra deployment cost</p>\n<p><em>There are 25 instances of this issue:</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"99\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Erc1155Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">54</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc1155Quest.sol#L54\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc1155Quest.sol#L54</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"100\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Erc20Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">102</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawFee</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyAdminWithdrawAfterEnd</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L81\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Erc20Quest.sol#L81</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"101\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">QuestFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">142</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">changeCreateQuestRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">canCreateQuest_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">159</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setClaimSignerAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">claimSignerAddress_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">165</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setProtocolFeeRecipient</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">protocolFeeRecipient_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">172</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRabbitHoleReceiptContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rabbitholeReceiptContract_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRewardAllowlistAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardAddress_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">allowed_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">186</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setQuestFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questFee_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L142\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/QuestFactory.sol#L142</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"102\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Quest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">50</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">start</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">57</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pause</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyStarted</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">unPause</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyStarted</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">96</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claim</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyQuestActive</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">150</span><span class=\"mtk1\">:      </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawRemainingTokens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyAdminWithdrawAfterEnd</span><span class=\"mtk1\"> {}</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L50\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/Quest.sol#L50</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"103\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleReceipt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">65</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setReceiptRenderer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiptRenderer_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">71</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRoyaltyRecipient</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyRecipient_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">77</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setQuestFactory</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questFactory_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">83</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMinterAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minterAddress_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">90</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRoyaltyFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyFee_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">98</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">questId_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L65\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleReceipt.sol#L65</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"104\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RabbitHoleTickets</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">54</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setTicketRenderer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ticketRenderer_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRoyaltyRecipient</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyRecipient_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRoyaltyFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">royaltyFee_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMinterAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minterAddress_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit (valid but excluded finding)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">83</span><span class=\"mtk1\">:       </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data_</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyMinter</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleTickets.sol#L54\">https://github.com/rabbitholegg/quest-protocol/blob/8c4c1f71221570b14a0479c216583342bd652d8d/contracts/RabbitHoleTickets.sol#L54</a></p>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-2\">High Risk Findings (2)</a></p>\n<ul>\n<li><a href=\"#h-01-bad-implementation-in-minter-access-control-for-rabbitholereceipt-and-rabbitholetickets-contracts\">[H-01] Bad implementation in minter access control for <code>RabbitHoleReceipt</code> and <code>RabbitHoleTickets</code> contracts</a></li>\n<li><a href=\"#h-02-protocol-fees-can-be-withdrawn-multiple-times-in-erc20quest\">[H-02] Protocol fees can be withdrawn multiple times in <code>Erc20Quest</code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-9\">Medium Risk Findings (9)</a></p>\n<ul>\n<li><a href=\"#m-01-questfactory-is-suspicious-of-the-reorg-attack\">[M-01] <code>QuestFactory</code> is suspicious of the reorg attack</a></li>\n<li><a href=\"#m-02-user-may-lose-rewards-if-the-receipt-is-minted-after-quest-end-time\">[M-02] User may lose rewards if the receipt is minted after quest end time</a></li>\n<li><a href=\"#m-03-dos-risk-if-enough-tokens-are-minted-in-questclaim-can-lead-at-least-to-transaction-fee-lost\">[M-03] DOS risk if enough tokens are minted in Quest.claim can lead, at least, to transaction fee lost</a></li>\n<li><a href=\"#m-04-users-may-not-claim-erc1155-rewards-when-the-quest-has-ended\">[M-04] Users may not claim Erc1155 rewards when the Quest has ended</a></li>\n<li><a href=\"#m-05-when-rewardtoken-is-erc1155erc777-an-attacker-can-reenter-and-cause-funds-to-be-stuck-in-the-contract-forever\">[M-05] When <code>rewardToken</code> is erc1155/erc777, an attacker can reenter and cause funds to be stuck in the contract forever</a></li>\n<li><a href=\"#m-06-rabbitholereceipts-address-might-be-changed-therefore-only-manual-mint-will-be-available\">[M-06] RabbitHoleReceipt’s address might be changed therefore only manual mint will be available</a></li>\n<li><a href=\"#m-07-funds-can-be-stuck-due-to-wrong-order-of-operations\">[M-07] Funds can be stuck due to wrong order of operations</a></li>\n<li><a href=\"#m-08-buyer-on-secondary-nft-market-can-lose-fund-if-they-buy-a-nft-that-is-already-used-to-claim-the-reward\">[M-08] Buyer on secondary NFT market can lose fund if they buy a NFT that is already used to claim the reward</a></li>\n<li><a href=\"#m-09-possible-scenario-for-signature-replay-attack\">[M-09] Possible scenario for Signature Replay Attack</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#overview-1\">Overview</a></li>\n<li><a href=\"#l-01-createquest-doesnt-check-if-the-reward-token-address-is-in-the-allow-list-on-erc-1155-quest-type\">L-01 <code>createQuest</code> doesn’t check if the reward token address is in the allow list on ERC-1155 quest type</a></li>\n<li><a href=\"#l-02-the-function-mintreceipt-should-check-if-the-quest-has-expired-on-chain-as-well\">L-02 The function mintReceipt should check if the quest has expired on-chain as well</a></li>\n<li><a href=\"#l-03-the-reverting-functions-_calculaterewards-and-_transferrewards-should-be-removed-as-they-are-already-implemented-in-the-child-contract\">L-03 The reverting functions <code>_calculateRewards</code> and <code>_transferRewards</code> should be removed, as they are already implemented in the child contract</a></li>\n<li><a href=\"#l-04-the-function-withdrawremainingtokens-can-be-changed-in-a-safer-way-to-handle-the-withdraw-from-the-owner-and-the-protocol-fee-as-well-this-prevent-risks-allocated-with-the-protocol-fees\">L-04 The function <code>withdrawRemainingTokens</code> can be changed in a safer way to handle the withdraw from the owner and the protocol fee as well. This prevent risks allocated with the protocol fees.</a></li>\n<li><a href=\"#l-05-the-function-royaltyinfo-doesnt-check-if-the-receipt-was-already-claimed\">L-05 The function <code>royaltyInfo</code> doesn’t check if the receipt was already claimed</a></li>\n<li><a href=\"#l-06-in-contract-quest-the-function-claim-shouldnt-only-set-the-receipt-as-claimed-but-to-burn-it-as-well-as-this-problem-brings-the-risk-where-users-can-sell-already-claimed-receipts-to-other-people\">L-06 In contract Quest the function <code>claim</code> shouldn’t only set the receipt as claimed, but to burn it as well. As this problem brings the risk, where users can sell already claimed receipts to other people</a></li>\n<li><a href=\"#l-07-the-function-mintreceipt-shouldnt-mint-receipts-to-users-if-the-quest-is-paused\">L-07 The function <code>mintReceipt</code> shouldn’t mint receipts to users, if the quest is paused</a></li>\n<li><a href=\"#n-01-confusing-modifier-name\">N-01 Confusing modifier name</a></li>\n<li><a href=\"#n-02-deploying-a-storage-variable-with-its-default-value\">N-02 Deploying a storage variable with its default value</a></li>\n<li><a href=\"#n-03-modifiers-not-applied-on-the-functions-start-and-withdrawremainingtokens\">N-03 Modifiers not applied on the functions <code>start</code> and <code>withdrawRemainingTokens</code></a></li>\n<li><a href=\"#n-04-mandatory-checks-for-extra-safety-in-the-setters\">N-04 Mandatory checks for extra safety in the setters</a></li>\n<li><a href=\"#n-05-lack-of-address0-checks-in-the-constructor\">N-05 Lack of address(0) checks in the constructor</a></li>\n<li><a href=\"#n-06-upgradeable-contract-is-missing-a-__gap50-storage-variable\">N-06 Upgradeable contract is missing a <code>__gap[50]</code> storage variable</a></li>\n<li><a href=\"#r-01-shorthand-way-to-write-if--else-statement\">R-01 Shorthand way to write if / else statement</a></li>\n<li><a href=\"#r-02-unnecessary-true-statement-is-applied-in-the-function-isclaimed\">R-02 Unnecessary true statement is applied in the function <code>isClaimed</code></a></li>\n<li><a href=\"#r-03-ispaused-check-can-be-added-to-the-modifier-onlyquestactive-as-its-used-only-on-the-claim-function\">R-03 <code>isPaused</code> check can be added to the modifier <code>onlyQuestActive</code>, as it’s used only on the claim function</a></li>\n<li><a href=\"#r-04-total-minted-check-in-mintreceipt-can-be-refactored\">R-04 Total minted check in <code>mintReceipt</code> can be refactored</a></li>\n<li><a href=\"#o-01-floating-pragma\">O-01 Floating pragma</a></li>\n<li><a href=\"#o-02-code-contains-empty-blocks\">O-02 Code contains empty blocks</a></li>\n<li><a href=\"#o-03-create-your-own-import-names-instead-of-using-the-regular-ones\">O-03 Create your own import names instead of using the regular ones</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#summary-1\">Summary</a></li>\n<li><a href=\"#g01-shorten-the-array-rather-than-copying-to-a-new-one\">G‑01 Shorten the array rather than copying to a new one</a></li>\n<li><a href=\"#g02-hash-shouldnt-be-re-calculated-on-every-iteration-of-the-for-loop\">G‑02 Hash shouldn’t be re-calculated on every iteration of the <code>for</code>-loop</a></li>\n<li><a href=\"#g03-using-calldata-instead-of-memory-for-read-only-arguments-in-external-functions-saves-gas\">G‑03 Using <code>calldata</code> instead of <code>memory</code> for read-only arguments in <code>external</code> functions saves gas</a></li>\n<li><a href=\"#g04-multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache\">G‑04 Multiple accesses of a mapping/array should use a local variable cache</a></li>\n<li><a href=\"#g05-the-result-of-function-calls-should-be-cached-rather-than-re-calling-the-function\">G‑05 The result of function calls should be cached rather than re-calling the function</a></li>\n<li><a href=\"#g06-x--y-costs-more-gas-than-x--x--y-for-state-variables\">G‑06 <code>&#x3C;x> += &#x3C;y></code> costs more gas than <code>&#x3C;x> = &#x3C;x> + &#x3C;y></code> for state variables</a></li>\n<li><a href=\"#g07-internal-functions-only-called-once-can-be-inlined-to-save-gas\">G‑07 <code>internal</code> functions only called once can be inlined to save gas</a></li>\n<li><a href=\"#g08-ii-should-be-uncheckediuncheckedi-when-it-is-not-possible-for-them-to-overflow-as-is-the-case-when-used-in-for--and-while-loops\">G‑08 <code>++i</code>/<code>i++</code> should be <code>unchecked{++i}</code>/<code>unchecked{i++}</code> when it is not possible for them to overflow, as is the case when used in <code>for</code>- and <code>while</code>-loops</a></li>\n<li><a href=\"#g09-optimize-names-to-save-gas\">G‑09 Optimize names to save gas</a></li>\n<li><a href=\"#g10-string-literals-passed-to-abiencodeabiencodepacked-should-not-be-split-by-commas\">G‑10 String literals passed to <code>abi.encode()</code>/<code>abi.encodePacked()</code> should not be split by commas</a></li>\n<li><a href=\"#g11-using-private-rather-than-public-for-constants-saves-gas\">G‑11 Using <code>private</code> rather than <code>public</code> for constants, saves gas</a></li>\n<li><a href=\"#g12-dont-compare-boolean-expressions-to-boolean-literals\">G‑12 Don’t compare boolean expressions to boolean literals</a></li>\n<li><a href=\"#g13-use-custom-errors-rather-than-revertrequire-strings-to-save-gas\">G‑13 Use custom errors rather than <code>revert()</code>/<code>require()</code> strings to save gas</a></li>\n<li><a href=\"#g14-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable\">G‑14 Functions guaranteed to revert when called by normal users can be marked <code>payable</code></a></li>\n<li><a href=\"#excluded-findings\">Excluded findings</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}