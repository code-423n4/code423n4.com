{
  "circa": {
    "title": "Amun contest",
    "sponsor": "Amun",
    "slug": "2021-12-amun",
    "date": "2023-03-07",
    "findings": "https://github.com/code-423n4/2021-12-amun-findings/issues",
    "contest": 68
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<p><em>Please note: Code4rena is an organization that puts learning at the forefront of everything we do. <a href=\"https://github.com/code-423n4/org/issues\">Our rules and processes continue to develop over time</a>, and older reports may reflect previous iterations of these rules and processes. For a more current representation of Code4rena’s severity standardization rules and comprehensive judging criteria, we recommend browsing the reports from C4’s most recent contests.</em></p>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 code contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the code contest outlined in this document, C4 conducted an analysis of Amun smart contract system written in Solidity. The code contest took place between December 13—December 19 2021.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>30 Wardens contributed reports to the Amun contest:</p>\n<ol>\n<li>WatchPug (<a href=\"https://github.com/jack-the-pug\">jtp</a> and <a href=\"https://github.com/mingwatch\">ming</a>)</li>\n<li>Czar102</li>\n<li>certora</li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li><a href=\"https://twitter.com/cmichelio\">cmichel</a></li>\n<li><a href=\"https://twitter.com/KenzoAgada\">kenzo</a></li>\n<li>robee</li>\n<li>harleythedog</li>\n<li><a href=\"https://twitter.com/MukeshJ_eth\">JMukesh</a></li>\n<li><a href=\"https://twitter.com/gpersoon\">gpersoon</a></li>\n<li>hyh</li>\n<li><a href=\"https://twitter.com/defsec_\">defsec</a></li>\n<li><a href=\"https://twitter.com/SolidityDev\">pauliax</a></li>\n<li>pedroais</li>\n<li>jayjonah8</li>\n<li><a href=\"https://twitter.com/merkleplant_eth\">pmerkleplant</a></li>\n<li>p4st13r4 (0xb4bb4 and <a href=\"https://github.com/0x69e8\">0x69e8</a>)</li>\n<li><a href=\"https://twitter.com/gzeon\">gzeon</a></li>\n<li><a href=\"https://twitter.com/GiveMeTestEther\">GiveMeTestEther</a></li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li>Jujic</li>\n<li><a href=\"https://twitter.com/itsmeSTYJ\">itsmeSTYJ</a></li>\n<li><a href=\"https://twitter.com/_ye0lde\">ye0lde</a></li>\n<li>0x1f8b</li>\n<li><a href=\"https://twitter.com/SirH4shalot\">sirhashalot</a></li>\n<li><a href=\"https://twitter.com/DylanPokun\">Dravee</a></li>\n<li>0x0x0x</li>\n<li>saian</li>\n<li><a href=\"https://twitter.com/shenwilly_\">shenwilly</a></li>\n<li>hubble (ksk2345 and shri4net)</li>\n</ol>\n<p>This contest was judged by <a href=\"https://twitter.com/liam_eastwood13\">0xleastwood</a>.</p>\n<p>Final report assembled by burgertime and <a href=\"https://twitter.com/CloudEllie1\">CloudEllie</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 35 unique vulnerabilities and 129 total findings. All of the issues presented here are linked back to their original finding.</p>\n<p>Of these vulnerabilities, 2 received a risk rating in the category of HIGH severity, 10 received a risk rating in the category of MEDIUM severity, and 23 received a risk rating in the category of LOW severity.</p>\n<p>C4 analysis also identified 44 non-critical recommendations and 50 gas optimizations.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2021-12-amun\">C4 Amun contest repository</a>, and is composed of 45 smart contracts written in the Solidity programming language and includes 585 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code423n4.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-2\" style=\"position:relative;\"><a href=\"#high-risk-findings-2\" aria-label=\"high risk findings 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (2)</h1>\n<h2 id=\"h-01-unused-erc20-tokens-are-not-refunded-and-can-be-stolen-by-attacker\" style=\"position:relative;\"><a href=\"#h-01-unused-erc20-tokens-are-not-refunded-and-can-be-stolen-by-attacker\" aria-label=\"h 01 unused erc20 tokens are not refunded and can be stolen by attacker permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/201\">[H-01] Unused ERC20 tokens are not refunded, and can be stolen by attacker</a></h2>\n<p><em>Submitted by WatchPug</em></p>\n<p>Under certain circumstances, e.g. <code>annualizedFee</code> being minted to <code>feeBeneficiary</code> between the time user sent the transaction and the transaction being packed into the block and causing amounts of underlying tokens for each basketToken to decrease. It’s possible or even most certainly that there will be some leftover basket underlying tokens, as <code>BasketFacet.sol#joinPool()</code> will only transfer required amounts of basket tokens from Join contracts.</p>\n<p>However, in the current implementation, only the leftover inputToken is returned.</p>\n<p>As a result, the leftover underlying tokens won’t be returned to the user, which constitutes users’ fund loss.</p>\n<p><a href=\"https://github.com/code-423n4/2021-12-amun/blob/cf890dedf2e43ec787e8e5df65726316fda134a1/contracts/basket/contracts/singleJoinExit/SingleTokenJoinV2.sol#L57-L78\"><code>SingleTokenJoinV2.sol</code> L57-L78</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">joinTokenSingle</span><span class=\"mtk1\">(</span><span class=\"mtk12\">JoinTokenStructV2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_joinTokenStruct</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// ######## INIT TOKEN #########</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inputToken</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_joinTokenStruct</span><span class=\"mtk1\">.</span><span class=\"mtk12\">inputToken</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">inputToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_joinTokenStruct</span><span class=\"mtk1\">.</span><span class=\"mtk12\">inputAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_joinTokenSingle</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_joinTokenStruct</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// ######## SEND TOKEN #########</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">remainingIntermediateBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">inputToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">remainingIntermediateBalance</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">inputToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">remainingIntermediateBalance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2021-12-amun/blob/cf890dedf2e43ec787e8e5df65726316fda134a1/contracts/basket/contracts/facets/Basket/BasketFacet.sol#L143-L168\"><code>BasketFacet.sol</code> L143-L168</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">joinPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_referral</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">noReentry</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getLock</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;POOL_LOCKED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">chargeOutstandingAnnualizedFee</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">LibBasketStorage</span><span class=\"mtk1\">.</span><span class=\"mtk12\">BasketStorage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bs</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">LibBasketStorage</span><span class=\"mtk1\">.</span><span class=\"mtk11\">basketStorage</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LibERC20Storage</span><span class=\"mtk1\">.</span><span class=\"mtk11\">erc20Storage</span><span class=\"mtk1\">().</span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\">.</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) &lt;= </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCap</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;MAX_POOL_CAP_REACHED&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">entryFee</span><span class=\"mtk1\">).</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\">**</span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">bs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">bs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">tokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenAmount</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">balance</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">.</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">feeAmount</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">totalSupply</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAmount</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;AMOUNT_TOO_SMALL&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">tokenAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span></code></pre>\n<p>Furthermore, the leftover tokens in the <code>SingleTokenJoinV2</code> contract can be stolen by calling <code>joinTokenSingle()</code> with fake <code>outputBasket</code> contract and <code>swap.exchange</code> contract.</p>\n<h5 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h5>\n<p>Consider:</p>\n<ol>\n<li>Calling <code>IBasketFacet.calcTokensForAmount()</code> first and only swap for exactly the desired amounts of tokens (like <code>SingleTokenJoin.sol</code>);</li>\n<li>Or, refund leftover tokens.</li>\n</ol>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/201\">loki-sama (Amun) acknowledged</a></strong></p>\n<h2 id=\"h-02-it-might-not-be-possible-to-withdraw-tokens-from-the-basket\" style=\"position:relative;\"><a href=\"#h-02-it-might-not-be-possible-to-withdraw-tokens-from-the-basket\" aria-label=\"h 02 it might not be possible to withdraw tokens from the basket permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/287\">[H-02] It might not be possible to withdraw tokens from the basket</a></h2>\n<p><em>Submitted by Czar102, also found by csanuragjain</em></p>\n<h4 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>When enough basket token owners exit, it will be impossible to exit pool with the last <code>MIN_AMOUNT</code> tokens because of <a href=\"https://github.com/code-423n4/2021-12-amun/blob/main/contracts/basket/contracts/facets/Basket/BasketFacet.sol#L228-L231\">this</a> check. This will result in locking some tokens forever.</p>\n<h4 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Consider resigning from this check or performing it only for the owner balance, who would need to have at least <code>MIN_AMOUNT</code> tokens.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/287\">loki-sama (Amun) disagreed with severity</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/287#issuecomment-1019032628\">0xleastwood (Judge) commented</a>:</strong></p>\n<blockquote>\n<p>Nice find! I think this is valid:)</p>\n</blockquote>\n<h1 id=\"medium-risk-findings-10\" style=\"position:relative;\"><a href=\"#medium-risk-findings-10\" aria-label=\"medium risk findings 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (10)</h1>\n<h2 id=\"m-01-function-jointokensingle-in-singletokenjoinsol-and-singletokenjoinv2sol-can-be-made-to-fail\" style=\"position:relative;\"><a href=\"#m-01-function-jointokensingle-in-singletokenjoinsol-and-singletokenjoinv2sol-can-be-made-to-fail\" aria-label=\"m 01 function jointokensingle in singletokenjoinsol and singletokenjoinv2sol can be made to fail permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/81\">[M-01] Function <code>joinTokenSingle</code> in <code>SingleTokenJoin.sol</code> and <code>SingleTokenJoinV2.sol</code> can be made to fail</a></h2>\n<p><em>Submitted by pmerkleplant, also found by certora, hyh, p4st13r4, pauliax, robee, and WatchPug</em></p>\n<h4 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>There’s a griefing attack vulnerability in the function <code>joinTokenSingle</code> in\n<code>SingleTokenJoin.sol</code> as well as <code>SingleTokenJoinV2.sol</code> which makes any user\ntransaction fail with “FAILED<em>OUTPUT</em>AMOUNT”.</p>\n<h5 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h5>\n<p>The <code>JoinTokenStruct</code> argument for <code>joinTokenSingle</code> includes a field <code>outputAmount</code>\nto indicate the amount of tokens the user should receive after joining a basket\n(see line <a href=\"https://github.com/code-423n4/2021-12-amun/blob/main/contracts/basket/contracts/singleJoinExit/SingleTokenJoin.sol#L135\">135</a> and <a href=\"https://github.com/code-423n4/2021-12-amun/blob/main/contracts/basket/contracts/singleJoinExit/SingleTokenJoinV2.sol#L130\">130</a>).</p>\n<p>However, this amount is compared to the contract’s balance of the token and\nreverts if the amount is unequal.</p>\n<p>If an attacker sends some amount of a basket’s token to the contract, every call\nto this function will fail as long as the output token equals the attacker’s token send.</p>\n<h4 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Refactor the <code>require</code> statement to expect at least the <code>outputAmount</code> of tokens,\ni.e. <code>require(outputAmount >= _joinTokenStruct.outputAmount)</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/81\">loki-sama (Amun) confirmed</a></strong></p>\n<h2 id=\"m-02-unchecked-return-value-from-low-level-call\" style=\"position:relative;\"><a href=\"#m-02-unchecked-return-value-from-low-level-call\" aria-label=\"m 02 unchecked return value from low level call permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/237\">[M-02] Unchecked return value from low-level call()</a></h2>\n<p><em>Submitted by JMukesh, also found by certora</em></p>\n<h4 id=\"impact-2\" style=\"position:relative;\"><a href=\"#impact-2\" aria-label=\"impact 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>The return value of the low-level call is not checked, so if the call fails, the Ether will be locked in the contract. If the low level is used to prevent blocking operations, consider logging failed calls.</p>\n<h4 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p><a href=\"https://github.com/code-423n4/2021-12-amun/blob/98f6e2ff91f5fcebc0489f5871183566feaec307/contracts/basket/contracts/singleJoinExit/EthSingleTokenJoinV2.sol#L26\">https://github.com/code-423n4/2021-12-amun/blob/98f6e2ff91f5fcebc0489f5871183566feaec307/contracts/basket/contracts/singleJoinExit/EthSingleTokenJoinV2.sol#L26</a></p>\n<h4 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>add condition to check return value</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/237\">loki-sama (Amun) confirmed and disagreed with severity</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/237#issuecomment-1015296977\">0xleastwood (Judge) commented</a>:</strong></p>\n<blockquote>\n<p>Nice find! I think this could be marked as <code>medium</code> as it leaks value from the protocol but it doesn’t result in assets being lost directly. It requires <code>_INTERMEDIATE_TOKEN</code> to point to a contract which fails upon wrapping the ETH amount.</p>\n</blockquote>\n<blockquote>\n<p>So considering that <code>_INTERMEDIATE_TOKEN</code> must be improperly set, I will mark this as <code>medium</code>.</p>\n</blockquote>\n<h2 id=\"m-03-it-is-possible-to-uninitialize-erc20facet-contract\" style=\"position:relative;\"><a href=\"#m-03-it-is-possible-to-uninitialize-erc20facet-contract\" aria-label=\"m 03 it is possible to uninitialize erc20facet contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"View%20on%20GitHub\">[M-03] It is possible to “uninitialize” <code>ERC20Facet</code> contract</a></h2>\n<p><em>Submitted by Czar102</em></p>\n<h4 id=\"impact-3\" style=\"position:relative;\"><a href=\"#impact-3\" aria-label=\"impact 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>The initialization status is defined by the <a href=\"https://github.com/code-423n4/2021-12-amun/blob/main/contracts/basket/contracts/facets/ERC20/ERC20Facet.sol#L25-L28\">name and symbol</a>. It is possible it set them back to an empty string, uninitializing the contract and letting the <code>initialize(..)</code> function be called again. This way, the owner may, for example, hide minting additional tokens. Or, after accidentally setting name and symbol to empty strings, anyone can take control over the contract and mint any number of tokens.</p>\n<p>In general, it shouldn’t be possible to initialize more than once.</p>\n<h4 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Consider adding empty string checks in <code>setName(...)</code> and <code>setSymbol(...)</code> functions.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/276\">loki-sama (Amun) confirmed</a></strong> </p>\n<h2 id=\"m-04-annualized-fee-apy-dependence-on-the-frequency-of-executing-a-function\" style=\"position:relative;\"><a href=\"#m-04-annualized-fee-apy-dependence-on-the-frequency-of-executing-a-function\" aria-label=\"m 04 annualized fee apy dependence on the frequency of executing a function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/280\">[M-04] Annualized fee APY dependence on the frequency of executing a function</a></h2>\n<p><em>Submitted by Czar102</em></p>\n<h4 id=\"impact-4\" style=\"position:relative;\"><a href=\"#impact-4\" aria-label=\"impact 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>The APY of the annualized fee is dependent on the frequency of the execution of the <a href=\"https://github.com/code-423n4/2021-12-amun/blob/main/contracts/basket/contracts/facets/Basket/BasketFacet.sol#L265-L279\"><code>BasketFacet::chargeOutstandingAnnualizedFee()</code></a>. If it is called more frequently, the compounding is more frequent and the APY is higher. For less used baskets, the APY might be lower, because the compounding will happen at lower rate.</p>\n<h4 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Consider <a href=\"https://github.com/code-423n4/2021-12-amun/blob/main/contracts/basket/contracts/facets/Basket/BasketFacet.sol#L259-L262\">calculating the fee</a> as the compounding was continous or with a constant compounding period.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/280\">loki-sama (Amun) acknowledged</a></strong> </p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/280#issuecomment-1019036751\">0xleastwood (Judge) commented</a>:</strong></p>\n<blockquote>\n<p>Nice find!</p>\n</blockquote>\n<h2 id=\"m-05-totalsupply-may-exceed-libbasketstoragebasketstoragemaxcap\" style=\"position:relative;\"><a href=\"#m-05-totalsupply-may-exceed-libbasketstoragebasketstoragemaxcap\" aria-label=\"m 05 totalsupply may exceed libbasketstoragebasketstoragemaxcap permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/283\">[M-05] <code>totalSupply</code> may exceed <code>LibBasketStorage.basketStorage().maxCap</code></a></h2>\n<p><em>Submitted by Czar102, also found by gpersoon, gzeon, kenzo, and WatchPug</em></p>\n<h4 id=\"impact-5\" style=\"position:relative;\"><a href=\"#impact-5\" aria-label=\"impact 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>Total supply of the token may exceed the <code>maxCap</code> introduced. This can happen when a user wants to join the pool. The <a href=\"https://github.com/code-423n4/2021-12-amun/blob/main/contracts/basket/contracts/facets/Basket/BasketFacet.sol#L153-L156\">check in <code>BasketFacet::joinPool(...)</code></a> includes only the base amount, without fee. Thus, if fee is on and someone will want to create as many tokens as possible, the <code>totalSupply + _amount</code> will be set to <code>maxCap</code>. The call will succeed, but new tokens were also minted as the fee for <code>bs.feeBeneficiary</code> if <code>bs.entryFee</code> and <code>bs.entryFeeBeneficiaryShare</code> are nonzero. Thus, the number of tokens may exceed <code>maxCap</code>.</p>\n<h4 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Consider calculating <code>feeAmount</code> and <code>feeBeneficiaryShare</code> before the <code>require(...)</code> statement and check <code>totalSupply.add(_amount).add(feeBanficiaryShare) &#x3C;= this.getCap()</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/283\">loki-sama (Amun) acknowledged</a></strong></p>\n<h2 id=\"m-06-blocktimestamp-or-deadline\" style=\"position:relative;\"><a href=\"#m-06-blocktimestamp-or-deadline\" aria-label=\"m 06 blocktimestamp or deadline permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/47\">[M-06] block.timestamp or deadline</a></h2>\n<p><em>Submitted by gpersoon, also found by kenzo and robee</em></p>\n<h4 id=\"impact-6\" style=\"position:relative;\"><a href=\"#impact-6\" aria-label=\"impact 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>Some functions, like rebalance() in RebalanceManagerV3 use _deadline as a time limit for swapExactTokensForTokens()\nOther functions, like _joinTokenSingle() of SingleTokenJoinV2.sol and _exit() of SingleNativeTokenExitV2() use block.timestamp, although a deadline field is present in the struct.</p>\n<p>Possibly the deadline fields should have been used.</p>\n<h4 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p><a href=\"https://github.com/code-423n4/2021-12-amun/blob/cf890dedf2e43ec787e8e5df65726316fda134a1/contracts/basket/contracts/callManagers/RebalanceManagerV3.sol#L158-L203\"><code>RebalanceManagerV3.sol</code> L158-L203</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">rebalance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">UnderlyingTrade</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_swapsV2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_deadline</span><span class=\"mtk1\">)  </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRebalanceManager</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_swapsV2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">swaps</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                ..</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">_swapUniswapV2</span><span class=\"mtk1\">(</span><span class=\"mtk12\">swap</span><span class=\"mtk1\">.</span><span class=\"mtk12\">exchange</span><span class=\"mtk1\">,</span><span class=\"mtk12\">input</span><span class=\"mtk1\">,</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">swap</span><span class=\"mtk1\">.</span><span class=\"mtk12\">path</span><span class=\"mtk1\">,</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">basket</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_deadline</span><span class=\"mtk1\"> );</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2021-12-amun/blob/cf890dedf2e43ec787e8e5df65726316fda134a1/contracts/basket/contracts/callManagers/RebalanceManagerV3.sol#L63-L104\"><code>RebalanceManagerV3.sol</code> L63-L104</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_swapUniswapV2</span><span class=\"mtk1\">(...) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">basket</span><span class=\"mtk1\">.</span><span class=\"mtk11\">singleCall</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">exchange</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodeWithSelector</span><span class=\"mtk1\">(  </span><span class=\"mtk11\">IUniswapV2Router02</span><span class=\"mtk1\">(</span><span class=\"mtk12\">exchange</span><span class=\"mtk1\">).</span><span class=\"mtk12\">swapExactTokensForTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">,  </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">,   </span><span class=\"mtk12\">minReturn</span><span class=\"mtk1\">,  </span><span class=\"mtk12\">path</span><span class=\"mtk1\">, </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">deadline</span><span class=\"mtk1\">  ),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2021-12-amun/blob/cf890dedf2e43ec787e8e5df65726316fda134a1/contracts/basket/contracts/singleJoinExit/SingleTokenJoinV2.sol#L80-L112\"><code>SingleTokenJoinV2.sol</code> L80-L112</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">JoinTokenStructV2</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deadline</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_joinTokenSingle</span><span class=\"mtk1\">(</span><span class=\"mtk12\">JoinTokenStructV2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_joinTokenStruct</span><span class=\"mtk1\">)  </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">           </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">swaps</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">IPangolinRouter</span><span class=\"mtk1\">(</span><span class=\"mtk12\">swap</span><span class=\"mtk1\">.</span><span class=\"mtk12\">exchange</span><span class=\"mtk1\">).</span><span class=\"mtk11\">swapExactTokensForTokens</span><span class=\"mtk1\">( </span><span class=\"mtk12\">amountIn</span><span class=\"mtk1\">,  </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">swap</span><span class=\"mtk1\">.</span><span class=\"mtk12\">path</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),  </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2021-12-amun/blob/cf890dedf2e43ec787e8e5df65726316fda134a1/contracts/basket/contracts/singleJoinExit/SingleNativeTokenExitV2.sol#L59-L88\"><code>SingleNativeTokenExitV2.sol</code> L59-L88</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ExitTokenStructV2</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">deadline</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_exit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ExitTokenStructV2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_exitTokenStruct</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_exitTokenStruct</span><span class=\"mtk1\">.</span><span class=\"mtk12\">trades</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">           ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">trade</span><span class=\"mtk1\">.</span><span class=\"mtk12\">swaps</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">IPangolinRouter</span><span class=\"mtk1\">(</span><span class=\"mtk12\">swap</span><span class=\"mtk1\">.</span><span class=\"mtk12\">exchange</span><span class=\"mtk1\">).</span><span class=\"mtk11\">swapExactTokensForTokens</span><span class=\"mtk1\">( </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">swap</span><span class=\"mtk1\">.</span><span class=\"mtk12\">path</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">swap</span><span class=\"mtk1\">.</span><span class=\"mtk12\">path</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<h4 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Check whether the deadline fields should have been used. If so replace block.timestamp with the appropriate deadline</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/47\">loki-sama (Amun) confirmed</a></strong> </p>\n<h2 id=\"m-07-erc20-return-values-not-checked\" style=\"position:relative;\"><a href=\"#m-07-erc20-return-values-not-checked\" aria-label=\"m 07 erc20 return values not checked permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/192\">[M-07] ERC20 return values not checked</a></h2>\n<p><em>Submitted by cmichel, also found by defsec, JMukesh, p4st13r4, and WatchPug</em></p>\n<p>The <code>ERC20.transfer()</code> and <code>ERC20.transferFrom()</code> functions return a boolean value indicating success. This parameter needs to be checked for success.\nSome tokens do <strong>not</strong> revert if the transfer failed but return <code>false</code> instead.</p>\n<p>See:</p>\n<ul>\n<li><code>SingleNativeTokenExitV2.exit</code>’s <code>outputToken.transfer(msg.sender, outputTokenBalance);</code></li>\n<li><code>PieFactoryContract.bakePie</code>’s <code>pie.transfer(msg.sender, _initialSupply);</code></li>\n</ul>\n<h4 id=\"impact-7\" style=\"position:relative;\"><a href=\"#impact-7\" aria-label=\"impact 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>Tokens that don’t actually perform the transfer and return <code>false</code> are still counted as a correct transfer and the tokens remain in the <code>SingleNativeTokenExitV2</code> contract and could potentially be stolen by someone else.</p>\n<h4 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>We recommend using <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.1/contracts/token/ERC20/utils/SafeERC20.sol#L74\">OpenZeppelin’s <code>SafeERC20</code></a> versions with the <code>safeTransfer</code> and <code>safeTransferFrom</code> functions that handle the return value check as well as non-standard-compliant tokens.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/192#issuecomment-1019041118\">0xleastwood (Judge) commented</a>:</strong></p>\n<blockquote>\n<p>Nice find! I think this is valid considering the extent basket tokens are used. It is more than likely that non-standard tokens will be utilised.</p>\n</blockquote>\n<h2 id=\"m-08-singlenativetokenexitv2-assumes-first-exchange-holds-the-outputtoken\" style=\"position:relative;\"><a href=\"#m-08-singlenativetokenexitv2-assumes-first-exchange-holds-the-outputtoken\" aria-label=\"m 08 singlenativetokenexitv2 assumes first exchange holds the outputtoken permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/176\">[M-08] SingleNativeTokenExitV2 assumes first exchange holds the outputToken</a></h2>\n<p><em>Submitted by kenzo, also found by cmichel and hyh</em></p>\n<p>SingleNativeTokenExitV2 allows the user to exit and execute trades via multiple exchanges.\nWhen finishing the trades and sending a single output token back to the user,\nthe contract takes that token from the last swap in the first exchange’s trades.\nThere is nothing in the struct that signifies this will be the output token, and this also impairs the exit functionality.</p>\n<h4 id=\"impact-8\" style=\"position:relative;\"><a href=\"#impact-8\" aria-label=\"impact 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>Let’s say a basket only holds token TOKE, and user would like to exit to DAI.\nBut there’s no exchange with good liquidity for TOKE -> DAI.\nSo the user crafts a trade to exchange TOKE for WOKE in exchange A, and then exchange WOKE for DAI in exchange B, to finally receive back DAI. The contract will not let him do so, as the output token is taken to be the output token of the first exchange - WOKE in our example.</p>\n<h4 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p>In <code>exit</code>, the output token is taken to be the last token exchanged in the first exchange: <a href=\"https://github.com/code-423n4/2021-12-amun/blob/main/contracts/basket/contracts/singleJoinExit/SingleNativeTokenExitV2.sol#L92:#L96\">(Code ref)</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">address[] calldata path = _exitTokenStruct</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            .trades[0]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            .swaps[_exitTokenStruct.trades[0].swaps.length - 1]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            .path;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        IERC20 outputToken = IERC20(path[path.length - 1]); //this could be not the target token</span></span></code></pre>\n<p>This manifests the issue I detailed above.</p>\n<h4 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>Have the outputToken be a parameter supplied in ExitTokenStructV2.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/176\">loki-sama (Amun) acknowledged</a></strong></p>\n<h2 id=\"m-09-failed-transfer-with-low-level-call-could-be-overlooked\" style=\"position:relative;\"><a href=\"#m-09-failed-transfer-with-low-level-call-could-be-overlooked\" aria-label=\"m 09 failed transfer with low level call could be overlooked permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/78\">[M-09] Failed transfer with low level call could be overlooked</a></h2>\n<p><em>Submitted by harleythedog</em></p>\n<h4 id=\"impact-9\" style=\"position:relative;\"><a href=\"#impact-9\" aria-label=\"impact 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>The <code>CallFacet.sol</code> contract has the function <code>_call</code> :</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function  _call(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\taddress  _target,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tbytes  memory  _calldata,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tuint256  _value</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">) internal {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\trequire(address(this).balance &gt;= _value, &quot;ETH_BALANCE_TOO_LOW&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t(bool success, ) = _target.call{value: _value}(_calldata);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\trequire(success, &quot;CALL_FAILED&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\temit  Call(msg.sender, _target, _calldata, _value);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>This function is utilized in a lot of different places. According to the <a href=\"%5Bhttps://docs.soliditylang.org/en/develop/control-structures.html#error-handling-assert-require-revert-and-exceptions%5D(https://docs.soliditylang.org/en/develop/control-structures.html#error-handling-assert-require-revert-and-exceptions)\">Solidity docs</a>, “The low-level functions <code>call</code>, <code>delegatecall</code> and <code>staticcall</code> return <code>true</code> as their first return value if the account called is non-existent, as part of the design of the EVM. Account existence must be checked prior to calling if needed”.</p>\n<p>As a result, it is possible that this call will not work but <code>_call</code> will not notice anything went wrong. It could be possible that a user is interacting with an exchange or token that has been deleted, but <code>_call</code> will not notice that something has gone wrong and as a result, ether can become stuck in the contract. For this reason, it would be better to also check for the contract’s existence prior to executing <code>_target.call</code>.</p>\n<p>For reference, see a similar high severity reported in a Uniswap audit here (report # 9): <a href=\"https://github.com/Uniswap/v3-core/blob/main/audits/tob/audit.pdf\">https://github.com/Uniswap/v3-core/blob/main/audits/tob/audit.pdf</a></p>\n<h4 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p>See <code>_call</code> here: <a href=\"https://github.com/code-423n4/2021-12-amun/blob/98f6e2ff91f5fcebc0489f5871183566feaec307/contracts/basket/contracts/facets/Call/CallFacet.sol#L108\"><code>CallFacet.sol</code> L108</a>.</p>\n<h4 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h4>\n<p>To ensure tokens don’t get stuck in edge case where user is interacting with a deleted contract, make sure to check that contract actually exists before calling it.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/78\">loki-sama (Amun) confirmed</a></strong></p>\n<h2 id=\"m-10-fees-calculations-are-not-accurate\" style=\"position:relative;\"><a href=\"#m-10-fees-calculations-are-not-accurate\" aria-label=\"m 10 fees calculations are not accurate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/73\">[M-10] fees calculations are not accurate</a></h2>\n<p><em>Submitted by certora</em></p>\n<p>after that fee is calculated, it is minted to the feeBeneficiary.\nsimply minting the exact amount results lower fee than it should be.</p>\n<h4 id=\"impact-10\" style=\"position:relative;\"><a href=\"#impact-10\" aria-label=\"impact 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h4>\n<p>feeBeneficiary will get less fees than it should.</p>\n<h4 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h4>\n<p>let’s assume that the basket assets are worth 1M dollars, and totalSupply = 1M.\nthe result of <code>calcOutStandingAnnualizedFee</code> is 100,00 so the feeBeneficiary should get 100,00 dollars.\nhowever, when minting 100,00 the totalSupply will increase to 1,100,000 so they will own 100000/1100000 * (1M dollars) = 90909.09 dollars instead of 100k</p>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/73#issuecomment-1004708113\">loki-sama (Amun) acknowledged</a>:</strong></p>\n<blockquote>\n<p>This is mitigated by the feeBeneficiary diluting his own shares if he gets fees on his fees.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/73#issuecomment-1019396342\">0xleastwood (Judge) asked</a>:</strong></p>\n<blockquote>\n<p>I’m not exactly sure if I understand what the warden is stating here. Could you confirm @loki-sama ?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/73#issuecomment-1020138537\">loki-sama (Amun) confirmed</a>:</strong></p>\n<blockquote>\n<p>Ok, I myself misunderstood. He is correct that we don’t get the full value. When we take a fee of 10% like from his example. What we do is mint 10% of the basket to ourselves. That 10% after minting is not holding 10% of the underling.</p>\n</blockquote>\n<h1 id=\"low-risk-findings-23\" style=\"position:relative;\"><a href=\"#low-risk-findings-23\" aria-label=\"low risk findings 23 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk Findings (23)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/186\">[L-01] Rebalance manager can steal tokens</a> <em>Submitted by cmichel</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/43\">[L-02] Underflow possible in rebalance() of RebalanceManagerV3 </a> <em>Submitted by gpersoon, also found by certora</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/175\">[L-03] Don’t use transfer()</a> <em>Submitted by GiveMeTestEther, also found by certora, cmichel, JMukesh, kenzo, p4st13r4, pauliax, robee, Ruhum, and WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/294\">[L-04] token.approve() doesn’t check return value</a> <em>Submitted by sirhashalot, also found by defsec, GiveMeTestEther, JMukesh, robee, Ruhum, and WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/189\">[L-05] Same facet can be added several times</a> <em>Submitted by cmichel, also found by certora</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/269\">[L-06] Approve 0 first</a> <em>Submitted by pauliax, also found by GiveMeTestEther, itsmeSTYJ, and robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/28\">[L-07] Use safe math for solidity version &#x3C;8</a> <em>Submitted by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/155\">[L-08] Lost annualized fees due to early division</a> <em>Submitted by kenzo, also found by certora, cmichel, Czar102, gzeon, itsmeSTYJ, robee, and WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/159\">[L-09] Basket might be unusable after initialization due to _initialSupply = 0</a> <em>Submitted by kenzo</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/253\">[L-10] ETH that is accidentally sent to a receive() function cannot be withdrawn</a> <em>Submitted by GiveMeTestEther, also found by certora, defsec, hyh, kenzo, and pedroais</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/241\">[L-11] Lack of access modifier in Initialize() </a> <em>Submitted by JMukesh</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/220\">[L-12] Tokens with fee on transfer are not supported</a> <em>Submitted by WatchPug, also found by defsec, gzeon, and hyh</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/200\">[L-13] input amount might be wrong</a> <em>Submitted by certora</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/275\">[L-14] mint and burn of PolygonERC20Wrapper</a> <em>Submitted by pauliax, also found by certora</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/293\">[L-15] rounding error not in favor of the system</a> <em>Submitted by certora</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/5\">[L-16] minimum amount is too high</a> <em>Submitted by certora, also found by hyh</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/185\">[L-17] <code>initialize</code> functions can be frontrun</a> <em>Submitted by cmichel, also found by hyh and robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/190\">[L-18] Wrapped native token is assumed as the <code>INTERMEDIATE_TOKEN</code></a> <em>Submitted by cmichel, also found by defsec and Ruhum</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/194\">[L-19] <code>_joinTokenSingle</code> can easily fail</a> <em>Submitted by cmichel</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/37\">[L-20] Different formulas to calculate tokenAmount </a> <em>Submitted by gpersoon</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/2\">[L-21] addToken() require check is not consistent with others similar to it </a> <em>Submitted by jayjonah8</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/296\">[L-22] Users can be frontrunned with higher fees</a> <em>Submitted by pedroais</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/79\">[L-23] Incorrect comment in <code>LibBasketStorage.sol</code></a> <em>Submitted by pmerkleplant, also found by hyh</em></li>\n</ul>\n<h1 id=\"non-critical-findings-44\" style=\"position:relative;\"><a href=\"#non-critical-findings-44\" aria-label=\"non critical findings 44 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Non-Critical Findings (44)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/10\">[N-01] Two-step change of a critical parameter</a> <em>Submitted by certora</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/12\">[N-02] Two-step change of a critical parameter</a> <em>Submitted by certora</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/278\">[N-03] Owner can add more tokens than <code>MAX_TOKENS</code> in <code>BasketFacet</code></a> <em>Submitted by Czar102</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/267\">[N-04] Open TODOs</a> <em>Submitted by Dravee, also found by defsec, pauliax, and robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/295\">[N-05] Missing zero address validation on setRebalanceManager function</a> <em>Submitted by Dravee</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/116\">[N-06] Possible Re-entrancy</a> <em>Submitted by defsec, also found by jayjonah8</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/230\">[N-07] Use of floating pragma</a> <em>Submitted by saian</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/27\">[N-08] Solidity compiler versions mismatch</a> <em>Submitted by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/55\">[N-09] Two Steps Verification before Transferring Ownership</a> <em>Submitted by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/29\">[N-10] Not verified function inputs of public / external functions</a> <em>Submitted by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/273\">[N-11] Incorrect revert reason in <code>CallFacet::addCaller(...)</code></a> <em>Submitted by Czar102</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/243\">[N-12] No minimum fees is defined </a> <em>Submitted by JMukesh</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/39\">[N-13] Basketfacet#calcOutStandingAnnualizedFee() uses 365 days instead of 365.25 days</a> <em>Submitted by GiveMeTestEther</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/244\">[N-14] Due to lack of input validation , self transfer can happen</a> <em>Submitted by JMukesh</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/291\">[N-15] _swapsV3 after the _swapsV2</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/226\">[N-16] <code>RebalanceManager.sol#setRebalanceManager()</code> should implement two-step transfer pattern</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/11\">[N-17] missing zero check</a> <em>Submitted by certora</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/167\">[N-18] pointless amountOutMin</a> <em>Submitted by certora</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/74\">[N-19] no validation on max cap</a> <em>Submitted by certora</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/75\">[N-20] high centralization</a> <em>Submitted by certora</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/277\">[N-21] emit Transfer on withdraw</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/124\">[N-22] Missing checks if pairs equal tokens</a> <em>Submitted by defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/125\">[N-23] Missing validation of address argument could indefinitely lock RebalanceManager contracts</a> <em>Submitted by defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/31\">[N-24] Named return issue</a> <em>Submitted by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/50\">[N-25] wrong comment in line 228 of RebalanceManager.sol</a> <em>Submitted by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/91\">[N-26] Add zero-address check in <code>setRebalanceManager()</code></a> <em>Submitted by shenwilly</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/289\">[N-27] _maxApprove user input</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/25\">[N-28] safeApprove of openZeppelin is deprecated</a> <em>Submitted by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/136\">[N-29] Lacking zero address checks</a> <em>Submitted by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/7\">[N-30] callNoValue() function does not guard against zero address</a> <em>Submitted by jayjonah8</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/6\">[N-31] Use of floating pragmas</a> <em>Submitted by jayjonah8</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/63\">[N-32] Setting allowance to uint256(-1) is bad practice</a> <em>Submitted by itsmeSTYJ</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/240\">[N-33] Missing zero address check in setDefaultController</a> <em>Submitted by hubble</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/255\">[N-34] Missing zero address check in setRebalanceManager</a> <em>Submitted by hubble</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/90\">[N-35] In my opinion in the future, hopefully there will be improvements in ui/ux, for the features to be divided into several parts, for example home, swap, leverage and also stake/farm are separated so that it is convenient to use, and will be more detailed because of the separation. This feature is very meaningful to make it easier for users</a> <em>Submitted by 0x1f8b</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/272\">[N-36] Division by <code>10 ** 18</code></a> <em>Submitted by Czar102</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/228\">[N-37] Lack of zero-address checks</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/3\">[N-38] getTokenInPool() naming is confusing </a> <em>Submitted by jayjonah8</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/177\">[N-39] Unnecessary struct in SingleNativeTokenExitV2</a> <em>Submitted by kenzo</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/137\">[N-40] Typo in event name</a> <em>Submitted by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/138\">[N-41] Unlocked compiler version</a> <em>Submitted by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/139\">[N-42] Unused state variables in MintableERC20</a> <em>Submitted by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/292\">[N-43] Validate diamond implementation is not empty</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/262\">[N-44] 10**18 = HUNDRED_PERCENT</a> <em>Submitted by pauliax</em></li>\n</ul>\n<h1 id=\"gas-optimizations-50\" style=\"position:relative;\"><a href=\"#gas-optimizations-50\" aria-label=\"gas optimizations 50 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations (50)</h1>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/249\">[G-01] Loops can be implemented more efficiently</a> <em>Submitted by 0x0x0x, also found by defsec, Dravee, gzeon, kenzo, pmerkleplant, robee, and WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/108\">[G-02] ++i is more gas efficient than i++ in loops forwarding</a> <em>Submitted by defsec, also found by 0x1f8b, Jujic, robee, and WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/145\">[G-03] Gas saving</a> <em>Submitted by 0x1f8b</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/264\">[G-04] Assigning local variables to unchanging storage variables</a> <em>Submitted by Czar102, also found by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/266\">[G-05] Add <code>contractOwner</code> to <code>canCall</code> in <code>CallFacet</code></a> <em>Submitted by Czar102</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/268\">[G-06] Use id to manage itarable addresses</a> <em>Submitted by Czar102</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/270\">[G-07] Call function internally instead of externally</a> <em>Submitted by Czar102</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/271\">[G-08] Redundant rewriting to memory</a> <em>Submitted by Czar102</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/281\">[G-09] Assigning keccak operations to constant variables results in extra gas costs</a> <em>Submitted by Dravee, also found by gzeon, kenzo, and pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/40\">[G-10] BasketFace#calcOutStandingAnnualizedFee no need for safe subtraction</a> <em>Submitted by GiveMeTestEther</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/106\">[G-11] Upgrade pragma to at least 0.8.4</a> <em>Submitted by defsec, also found by Jujic, WatchPug, and WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/141\">[G-12] Gas can be saved in the <code>calcTokensForAmount()</code> loop</a> <em>Submitted by Jujic</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/152\">[G-13] Consider making some constants as non-public to save gas</a> <em>Submitted by Jujic</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/171\">[G-14] Only pass lockBlock as parameter instead of LibBasketStorage.basketStorage()</a> <em>Submitted by Jujic</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/174\">[G-15] Change function visibility from public to external</a> <em>Submitted by Jujic, also found by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/13\">[G-16] Unused imports</a> <em>Submitted by robee, also found by Jujic</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/184\">[G-17] Use <code>IWrappedNativeToken.deposit()</code> can save some gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/202\">[G-18] <code>ReentryProtection.sol</code> Switching between 1, 2 instead of increasing <code>lockCounter</code> is more gas efficient</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/203\">[G-19] <code>10 ** 18</code> can be changed to <code>1e18</code> and save some gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/18\">[G-20] State variables that could be set immutable</a> <em>Submitted by robee, also found by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/205\">[G-21] Avoid repeated arithmetic operations in for loop can save gas</a> <em>Submitted by WatchPug, also found by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/207\">[G-22] Avoid unnecessary storage read can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/209\">[G-23] Use short circuiting can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/213\">[G-24] Reuse operation results can save gas </a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/214\">[G-25] Remove unnecessary variables can make the code simpler and save some gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/215\">[G-26] <code>SingleTokenJoin#joinTokenSingle()</code> Change <code>inputAmount</code> to <code>maxInputAmount</code> can avoid dust INTERMEDIATE_TOKEN and save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/225\">[G-27] Avoid unnecessary external calls can save gas</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/227\">[G-28] Internal call is more efficient than external call</a> <em>Submitted by WatchPug</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/195\">[G-29] Gas: Intermediate min-return check in <code>_joinTokenSingle</code> is unnecessary</a> <em>Submitted by cmichel, also found by itsmeSTYJ</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/196\">[G-30] Intermediate max-input-amount check in <code>_joinTokenSingle</code> is unnecessary</a> <em>Submitted by cmichel</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/92\">[G-31] Gas savings</a> <em>Submitted by csanuragjain</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/105\">[G-32] Use of _msgSender()</a> <em>Submitted by defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/107\">[G-33] Delete - ABI Coder V2 For Gas Optimization</a> <em>Submitted by defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/111\">[G-34] Revert String Size Optimization</a> <em>Submitted by defsec, also found by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/117\">[G-35] Use a constant instead of block.timestamp for the deadline</a> <em>Submitted by defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/120\">[G-36] Less than 256 uints are not gas efficient</a> <em>Submitted by defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/286\">[G-37] uniSwapLikeRouter or swap.exchange</a> <em>Submitted by pauliax, also found by kenzo</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/129\">[G-38] Zero transfers</a> <em>Submitted by defsec</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/260\">[G-39] Pack structs tightly</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/21\">[G-40] uint8 index</a> <em>Submitted by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/208\">[G-41] PolygonERC20Wrapper can emit burn event instead of calling ERC20 functions</a> <em>Submitted by kenzo</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/211\">[G-42] PolygonERC20Wrapper does not need to be ERC20</a> <em>Submitted by kenzo</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/140\">[G-43] Locking logic in Rebalancers can be changed to avoid SSTOREs.</a> <em>Submitted by p4st13r4</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/257\">[G-44] Not used variables</a> <em>Submitted by pauliax</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/80\">[G-45] Subtraction in <code>ERC20Facet::decreaseApproval</code> could be “unchecked”</a> <em>Submitted by pmerkleplant</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/85\">[G-46] Don’t initialize variables with default value</a> <em>Submitted by pmerkleplant</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/19\">[G-47] Unnecessary array boundaries check when loading an array element twice</a> <em>Submitted by robee</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/87\">[G-48] Removing redundant code can save gas (RebalanceManager V2 V3, BaskerFacet)</a> <em>Submitted by ye0lde</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/88\">[G-49] Unnecessary explicit returns (BaskerFacet)</a> <em>Submitted by ye0lde</em></li>\n<li><a href=\"https://github.com/code-423n4/2021-12-amun-findings/issues/44\">[G-50] BasketFacet: no need for safe subtraction</a> <em>Submitted by GiveMeTestEther</em></li>\n</ul>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-2\">High Risk Findings (2)</a></p>\n<ul>\n<li><a href=\"#h-01-unused-erc20-tokens-are-not-refunded-and-can-be-stolen-by-attacker\">[H-01] Unused ERC20 tokens are not refunded, and can be stolen by attacker</a></li>\n<li><a href=\"#h-02-it-might-not-be-possible-to-withdraw-tokens-from-the-basket\">[H-02] It might not be possible to withdraw tokens from the basket</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-10\">Medium Risk Findings (10)</a></p>\n<ul>\n<li><a href=\"#m-01-function-jointokensingle-in-singletokenjoinsol-and-singletokenjoinv2sol-can-be-made-to-fail\">[M-01] Function <code>joinTokenSingle</code> in <code>SingleTokenJoin.sol</code> and <code>SingleTokenJoinV2.sol</code> can be made to fail</a></li>\n<li><a href=\"#m-02-unchecked-return-value-from-low-level-call\">[M-02] Unchecked return value from low-level call()</a></li>\n<li><a href=\"#m-03-it-is-possible-to-uninitialize-erc20facet-contract\">[M-03] It is possible to “uninitialize” <code>ERC20Facet</code> contract</a></li>\n<li><a href=\"#m-04-annualized-fee-apy-dependence-on-the-frequency-of-executing-a-function\">[M-04] Annualized fee APY dependence on the frequency of executing a function</a></li>\n<li><a href=\"#m-05-totalsupply-may-exceed-libbasketstoragebasketstoragemaxcap\">[M-05] <code>totalSupply</code> may exceed <code>LibBasketStorage.basketStorage().maxCap</code></a></li>\n<li><a href=\"#m-06-blocktimestamp-or-deadline\">[M-06] block.timestamp or deadline</a></li>\n<li><a href=\"#m-07-erc20-return-values-not-checked\">[M-07] ERC20 return values not checked</a></li>\n<li><a href=\"#m-08-singlenativetokenexitv2-assumes-first-exchange-holds-the-outputtoken\">[M-08] SingleNativeTokenExitV2 assumes first exchange holds the outputToken</a></li>\n<li><a href=\"#m-09-failed-transfer-with-low-level-call-could-be-overlooked\">[M-09] Failed transfer with low level call could be overlooked</a></li>\n<li><a href=\"#m-10-fees-calculations-are-not-accurate\">[M-10] fees calculations are not accurate</a></li>\n</ul>\n</li>\n<li><a href=\"#low-risk-findings-23\">Low Risk Findings (23)</a></li>\n<li><a href=\"#non-critical-findings-44\">Non-Critical Findings (44)</a></li>\n<li><a href=\"#gas-optimizations-50\">Gas Optimizations (50)</a></li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}