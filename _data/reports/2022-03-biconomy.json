{
  "circa": {
    "title": "Biconomy Hyphen 2.0 contest",
    "sponsor": "Biconomy",
    "slug": "2022-03-biconomy",
    "date": "2022-07-25",
    "findings": "https://github.com/code-423n4/2022-03-biconomy-findings/issues",
    "contest": 97
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit contest outlined in this document, C4 conducted an analysis of the Biconomy Hyphen 2.0 smart contract system written in Solidity. The audit contest took place between March 10—March 16 2022.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>61 Wardens contributed reports to the Biconomy Hyphen 2.0 contest:</p>\n<ol>\n<li><a href=\"https://twitter.com/WatchPug_\">WatchPug</a> (<a href=\"https://github.com/jack-the-pug\">jtp</a> and <a href=\"https://github.com/mingwatch\">ming</a>)</li>\n<li><a href=\"https://twitter.com/cmichelio\">cmichel</a></li>\n<li><a href=\"https://twitter.com/CertoraInc\">CertoraInc</a> (egjlmn1, <a href=\"https://twitter.com/ori_dabush\">OriDabush</a>, ItayG, and shakedwinder)</li>\n<li><a href=\"https://twitter.com/HickupH\">hickuphh3</a></li>\n<li>hyh</li>\n<li>kyliek</li>\n<li><a href=\"https://twitter.com/gzeon\">gzeon</a></li>\n<li><a href=\"https://twitter.com/SirH4shalot\">sirhashalot</a></li>\n<li>0xDjango</li>\n<li><a href=\"https://twitter.com/Pedroais2/\">pedroais</a></li>\n<li>minhquanym</li>\n<li><a href=\"https://twitter.com/Throt7le\">throttle</a></li>\n<li>Cantor<em>Dust (d4rk, thank</em>you, and <a href=\"https://github.com/technovision99\">technovision99</a>)</li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li><a href=\"https://twitter.com/danbinnun\">danb</a></li>\n<li><a href=\"https://twitter.com/JustDravee\">Dravee</a></li>\n<li><a href=\"https://teamomega.eth.link/\">benk10</a></li>\n<li>kenta</li>\n<li>IllIllI</li>\n<li><a href=\"https://twitter.com/wuwe19\">wuwe1</a></li>\n<li>cccz</li>\n<li>PPrieditis</li>\n<li>0x1f8b</li>\n<li>peritoflores</li>\n<li><a href=\"https://twitter.com/defsec_\">defsec</a></li>\n<li><a href=\"https://twitter.com/catchup22\">catchup</a></li>\n<li><a href=\"https://twitter.com/MukeshJ_eth\">JMukesh</a></li>\n<li>whilom</li>\n<li><a href=\"https://www.instagram.com/riyan_rfa/\">rfa</a></li>\n<li>TerrierLover</li>\n<li>hagrid</li>\n<li>saian</li>\n<li><a href=\"https://twitter.com/ngndev\">0xngndev</a></li>\n<li>bitbopper</li>\n<li>hubble (ksk2345 and shri4net)</li>\n<li>robee</li>\n<li><a href=\"https://twitter.com/berndartmueller\">berndartmueller</a></li>\n<li>Jujic</li>\n<li>samruna</li>\n<li><a href=\"https://github.com/z3s/\">z3s</a></li>\n<li>0xwags</li>\n<li><a href=\"https://twitter.com/0xNazgul\">0xNazgul</a></li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li><a href=\"https://twitter.com/_0v3rf10w\">0v3rf10w</a></li>\n<li>jayjonah8</li>\n<li><a href=\"https://twitter.com/_ye0lde\">ye0lde</a></li>\n<li>XDms</li>\n<li>cryptphi</li>\n<li><a href=\"https://twitter.com/shenwilly_\">shenwilly</a></li>\n<li><a href=\"https://twitter.com/meidhiwirara\">Tomio</a></li>\n<li><a href=\"https://github.com/antoncoding\">antonttc</a></li>\n<li>oyc_109</li>\n<li><a href=\"https://twitter.com/nonfungiblenero\">Kenshin</a></li>\n<li><a href=\"https://www.instagram.com/khrisna.indrawan/\">Kiep</a></li>\n</ol>\n<p>This contest was judged by <a href=\"https://twitter.com/SolidityDev\">pauliax</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/liveactionllama\">liveactionllama</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 25 unique vulnerabilities. Of these vulnerabilities, 5 received a risk rating in the category of HIGH severity and 20 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 39 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 39 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2022-03-biconomy\">C4 Biconomy Hyphen 2.0 contest repository</a>, and is composed of 7 smart contracts written in the Solidity programming language and includes 1,621 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities according to a methodology based on <a href=\"https://owasp.org/www-community/OWASP_Risk_Rating_Methodology\">OWASP standards</a>.</p>\n<p>Vulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>Further information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>.</p>\n<h1 id=\"high-risk-findings-5\" style=\"position:relative;\"><a href=\"#high-risk-findings-5\" aria-label=\"high risk findings 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (5)</h1>\n<h2 id=\"h-01-can-deposit-native-token-for-free-and-steal-funds\" style=\"position:relative;\"><a href=\"#h-01-can-deposit-native-token-for-free-and-steal-funds\" aria-label=\"h 01 can deposit native token for free and steal funds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/55\">[H-01] Can deposit native token for free and steal funds</a></h2>\n<p><em>Submitted by cmichel, also found by CertoraInc</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityPool.sol#L151\">LiquidityPool.sol#L151</a><br></p>\n<p>The <code>depositErc20</code> function allows setting <code>tokenAddress = NATIVE</code> and does not throw an error.<br>\nNo matter the <code>amount</code> chosen, the <code>SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable(tokenAddress), sender, address(this), amount);</code> call will not revert because it performs a low-level call to <code>NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE</code>, which is an EOA, and the low-level calls to EOAs always succeed.<br>\nBecause the <code>safe*</code> version is used, the EOA not returning any data does not revert either.<br></p>\n<p>This allows an attacker to deposit infinite native tokens by not paying anything.<br>\nThe contract will emit the same <code>Deposit</code> event as a real <code>depositNative</code> call and the attacker receives the native funds on the other chain.</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Check <code>tokenAddress != NATIVE</code> in <code>depositErc20</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/55\">ankurdubey521 (Biconomy) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/bcnmy/hyphen-contract/pull/42\">HP-25: C4 Audit Fixes, Dynamic Fee Changes bcnmy/hyphen-contract#42</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/55#issuecomment-1094973634\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Great find, definitely deserves a severity of high.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-02-liquidityproviderssol-the-share-price-of-the-lp-can-be-manipulated-and-making-future-liquidityproviders-unable-to-removeliquidity\" style=\"position:relative;\"><a href=\"#h-02-liquidityproviderssol-the-share-price-of-the-lp-can-be-manipulated-and-making-future-liquidityproviders-unable-to-removeliquidity\" aria-label=\"h 02 liquidityproviderssol the share price of the lp can be manipulated and making future liquidityproviders unable to removeliquidity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/139\">[H-02] <code>LiquidityProviders.sol</code> The share price of the LP can be manipulated and making future liquidityProviders unable to <code>removeLiquidity()</code></a></h2>\n<p><em>Submitted by WatchPug</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityProviders.sol#L345-L362\">LiquidityProviders.sol#L345-L362</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">removeLiquidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">nonReentrant</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">onlyValidLpToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_msgSender</span><span class=\"mtk1\">())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">whenNotPaused</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftSuppliedLiquidity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalNFTShares</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">lpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenMetadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_isSupportedToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tokenAddress</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__TOKEN_NOT_SUPPORTED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__INVALID_AMOUNT&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nftSuppliedLiquidity</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__INSUFFICIENT_LIQUIDITY&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">whiteListPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">beforeLiquidityRemoval</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">_tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Claculate how much shares represent input amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lpSharesForInputAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">getTokenPriceInLPShares</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tokenAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Calculate rewards accumulated</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">eligibleLiquidity</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">sharesToTokenAmount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">totalNFTShares</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_tokenAddress</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityProviders.sol#L192-L194\">LiquidityProviders.sol#L192-L194</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">sharesToTokenAmount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_shares</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tokenAddress</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_shares</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">totalReserve</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_tokenAddress</span><span class=\"mtk1\">]) / </span><span class=\"mtk12\">totalSharesMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_tokenAddress</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The share price of the liquidity can be manipulated to an extremely low value (1 underlying token worth a huge amount of shares), making it possible for <code>sharesToTokenAmount(totalNFTShares, _tokenAddress)</code> to overflow in <code>removeLiquidity()</code> and therefore freeze users’ funds.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li>Alice <code>addTokenLiquidity()</code> with <code>1e8 * 1e18</code> XYZ on B-Chain, totalSharesMinted == <code>1e44</code>;</li>\n<li>Alice <code>sendFundsToUser()</code> and bridge <code>1e8 * 1e18</code> XYZ from B-Chain to A-Chain;</li>\n<li>Alice <code>depositErc20()</code> and bridge <code>1e8 * 1e18</code> XYZ from A-Chain to B-Chain;</li>\n<li>Alice <code>removeLiquidity()</code> and withdraw <code>1e8 * 1e18 - 1</code> XYZ, then: <code>totalReserve</code> == <code>1 wei</code> XYZ, and <code>totalSharesMinted</code> == <code>1e26</code>;</li>\n<li>Bob <code>addTokenLiquidity()</code> with <code>3.4e7 * 1e18</code> XYZ;</li>\n<li>Bob tries to <code>removeLiquidity()</code>.</li>\n</ol>\n<p>Expected Results: Bob to get back the deposits;</p>\n<p>Actual Results: The tx reverted due to overflow at <code>sharesToTokenAmount()</code>.</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityProviders.sol#L280-L292\">LiquidityProviders.sol#L280-L292</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_increaseLiquidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyValidLpToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_msgSender</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalSuppliedLiquidity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalShares</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">lpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenMetadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__AMOUNT_IS_0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">whiteListPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">beforeLiquidityAddition</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintedSharesAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Adding liquidity in the pool for the first time</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalReserve</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mintedSharesAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">BASE_DIVISOR</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">mintedSharesAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">totalSharesMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token</span><span class=\"mtk1\">]) / </span><span class=\"mtk12\">totalReserve</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span></code></pre>\n<p>Consider locking part of the first mint’s liquidity to maintain a minimum amount of <code>totalReserve[token]</code>, so that the share price can not be easily manipulated.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/139\">ankurdubey521 (Biconomy) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/139#issuecomment-1120975961\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Great find, with a PoC, deserves a severity of high because it is a valid attack path that does not have hand-wavy hypotheticals.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-03-wrong-formula-when-add-fee-incentivepool-can-lead-to-loss-of-funds\" style=\"position:relative;\"><a href=\"#h-03-wrong-formula-when-add-fee-incentivepool-can-lead-to-loss-of-funds\" aria-label=\"h 03 wrong formula when add fee incentivepool can lead to loss of funds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/38\">[H-03] Wrong formula when add fee <code>incentivePool</code> can lead to loss of funds.</a></h2>\n<p><em>Submitted by minhquanym, also found by cmichel, hickuphh3, and WatchPug</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityPool.sol#L319-L322\">LiquidityPool.sol#L319-L322</a><br></p>\n<p>The <code>getAmountToTransfer</code> function of <code>LiquidityPool</code> updates <code>incentivePool[tokenAddress]</code> by adding some fee to it but the formula is wrong and the value of <code>incentivePool[tokenAddress]</code> will be divided by <code>BASE_DIVISOR</code> (10000000000) each time.\nAfter just a few time, the value of <code>incentivePool[tokenAddress]</code> will become zero and that amount of <code>tokenAddress</code> token will be locked in contract.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of concept</h3>\n<p>Line 319-322</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">incentivePool[tokenAddress] = (incentivePool[tokenAddress] + (amount * (transferFeePerc - tokenManager.getTokensInfo(tokenAddress).equilibriumFee))) / BASE_DIVISOR;</span></span></code></pre>\n<p>Let <code>x = incentivePool[tokenAddress]</code>, <code>y = amount</code>, <code>z = transferFeePerc</code> and <code>t = tokenManager.getTokensInfo(tokenAddress).equilibriumFee</code>. Then that be written as</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">x = (x + (y * (z - t))) / BASE_DIVISOR;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">x = x / BASE_DIVISOR + (y * (z - t)) / BASE_DIVISOR;</span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Fix the bug by changing lines 319-322 to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">incentivePool[tokenAddress] += (amount * (transferFeePerc - tokenManager.getTokensInfo(tokenAddress).equilibriumFee)) / BASE_DIVISOR;</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/38\">ankurdubey521 (Biconomy) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/38#issuecomment-1094991790\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Great find, the wrong order of arithmetic operations deserves a severity of high as it would have serious negative consequences.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-04-deleting-nft-info-can-cause-users-nftunpaidrewards-to-be-permanently-erased\" style=\"position:relative;\"><a href=\"#h-04-deleting-nft-info-can-cause-users-nftunpaidrewards-to-be-permanently-erased\" aria-label=\"h 04 deleting nft info can cause users nftunpaidrewards to be permanently erased permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/135\">[H-04] Deleting <code>nft Info</code> can cause users’ <code>nft.unpaidRewards</code> to be permanently erased</a></h2>\n<p><em>Submitted by WatchPug, also found by 0xDjango and hyh</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityFarming.sol#L229-L253\">LiquidityFarming.sol#L229-L253</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">whenNotPaused</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftsStakedLength</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">nftIdsStaked</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\">].</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">index</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">index</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">index</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">nftsStakedLength</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">index</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">nftIdsStaked</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\">][</span><span class=\"mtk12\">index</span><span class=\"mtk1\">] == </span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">index</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">nftsStakedLength</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__NFT_NOT_STAKED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">nftIdsStaked</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\">][</span><span class=\"mtk12\">index</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">nftIdsStaked</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\">][</span><span class=\"mtk12\">nftIdsStaked</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\">].</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">nftIdsStaked</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\">].</span><span class=\"mtk11\">pop</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_sendRewardsForNft</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">, , </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">lpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenMetadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> /= </span><span class=\"mtk12\">liquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk11\">BASE_DIVISOR</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">totalSharesStaked</span><span class=\"mtk1\">[</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">] -= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">lpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">LogWithdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityFarming.sol#L122-L165\">LiquidityFarming.sol#L122-L165</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_sendRewardsForNft</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">NFTInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nft</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">nftInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk12\">isStaked</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__NFT_NOT_STAKED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">, , </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">lpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenMetadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> /= </span><span class=\"mtk12\">liquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk11\">BASE_DIVISOR</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">PoolInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pool</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">updatePool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pending</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountSent</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">pending</span><span class=\"mtk1\"> = ((</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">accTokenPerShare</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">ACC_TOKEN_PRECISION</span><span class=\"mtk1\">) - </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardDebt</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk12\">unpaidRewards</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">] == </span><span class=\"mtk12\">NATIVE</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">pending</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk12\">unpaidRewards</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pending</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\">, ) = </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">}(</span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__NATIVE_TRANSFER_FAILED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">amountSent</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk12\">unpaidRewards</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\">, ) = </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">pending</span><span class=\"mtk1\">}(</span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__NATIVE_TRANSFER_FAILED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">amountSent</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pending</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">IERC20Upgradeable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20Upgradeable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">pending</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk12\">unpaidRewards</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">pending</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">amountSent</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_sendErc20AndGetSentAmount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk12\">unpaidRewards</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">amountSent</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_sendErc20AndGetSentAmount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">pending</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardDebt</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">accTokenPerShare</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">ACC_TOKEN_PRECISION</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">LogOnReward</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amountSent</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_to</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>When <code>withdraw()</code> is called, <code>_sendRewardsForNft(_nftId, _to)</code> will be called to send the rewards.</p>\n<p>In <code>_sendRewardsForNft()</code>, when <code>address(this).balance</code> is insufficient at the moment, <code>nft.unpaidRewards = pending - balance</code> will be recorded and the user can get it back at the next time.</p>\n<p>However, at L244, the whole <code>nftInfo</code> is being deleted, so that <code>nft.unpaidRewards</code> will also get erased.</p>\n<p>There is no way for the user to get back this <code>unpaidRewards</code> anymore.</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider adding a new parameter named <code>force</code> for <code>withdraw()</code>, <code>require(force || unpaidRewards == 0)</code> before deleting nftInfo.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/135#issuecomment-1082892044\">ankurdubey521 (Biconomy) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Great catch! Thanks a lot for bringing these up.</p>\n<p><a href=\"https://github.com/bcnmy/hyphen-contract/pull/42\">HP-25: C4 Audit Fixes, Dynamic Fee Changes bcnmy/hyphen-contract#42</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/135#issuecomment-1114772722\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Great find, deserves a severity of high as it may incur in funds lost for the users.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/135#issuecomment-1141043124\">KenzoAgada (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Shouldn’t this be medium severity, as only rewards are lost and not original user funds?\nAs the risk TLDR says -<br></p>\n<p><code>2 — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.</code></p>\n<p><code>3 — High: Assets can be stolen/lost/compromised directly (or indirectly if there is a valid attack path that does not have hand-wavy hypotheticals).</code><br></p>\n<p>There are other lost-rewards issues that have been classified as high, this questions pertains to them as well.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/135#issuecomment-1145280670\">0xleastwood (warden) commented</a>:</strong></p>\n<blockquote>\n<p>I would be inclined to keep this as high risk as it is less about the protocol leaking value and more about rewards being completely wiped and lost forever. I would argue, the user’s assets at this point in time DO include all unpaid rewards, so it is perfectly reasonable to treat this as high risk.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/135#issuecomment-1145289008\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Agree that the boundaries are not very clear, this issue might fall somewhere between Medium and High severities. But my initial thought was similar to that of @0xleastwood, the rewards already belong to the user, and losing them will make the user lose on time and other opportunities. Also, this is not a hypothetical attack scenario, but a very real valid execution path, thus I think a high severity is fine here.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-05-users-will-lose-a-majority-or-even-all-of-the-rewards-when-the-amount-of-total-shares-is-too-large-due-to-precision-loss\" style=\"position:relative;\"><a href=\"#h-05-users-will-lose-a-majority-or-even-all-of-the-rewards-when-the-amount-of-total-shares-is-too-large-due-to-precision-loss\" aria-label=\"h 05 users will lose a majority or even all of the rewards when the amount of total shares is too large due to precision loss permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/140\">[H-05] Users will lose a majority or even all of the rewards when the amount of total shares is too large, due to precision loss</a></h2>\n<p><em>Submitted by WatchPug, also found by hyh</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityFarming.sol#L265-L291\">LiquidityFarming.sol#L265-L291</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getUpdatedAccTokenPerShare</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accumulator</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastUpdatedTime</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">poolInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">].</span><span class=\"mtk12\">lastRewardTime</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">counter</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewardRateLog</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">].</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">true</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">lastUpdatedTime</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">counter</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">accumulator</span><span class=\"mtk1\"> +=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">rewardRateLog</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">rewardsPerSecond</span><span class=\"mtk1\"> *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                (</span><span class=\"mtk12\">counter</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">max</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lastUpdatedTime</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rewardRateLog</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">counter</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewardRateLog</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">i</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        --</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// We know that during all the periods that were included in the current iterations,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// the value of totalSharesStaked[_baseToken] would not have changed, as we only consider the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// updates to the pool that happened after the lastUpdatedTime.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">accumulator</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">accumulator</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">ACC_TOKEN_PRECISION</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">totalSharesStaked</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accumulator</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">poolInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">].</span><span class=\"mtk12\">accTokenPerShare</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityProviders.sol#L286-L292\">LiquidityProviders.sol#L286-L292</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintedSharesAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Adding liquidity in the pool for the first time</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalReserve</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">mintedSharesAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">BASE_DIVISOR</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">mintedSharesAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">totalSharesMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token</span><span class=\"mtk1\">]) / </span><span class=\"mtk12\">totalReserve</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>In <code>HyphenLiquidityFarming</code>, the <code>accTokenPerShare</code> is calculated based on the total staked shares.</p>\n<p>However, as the <code>mintedSharesAmount</code> can easily become very large on <code>LiquidityProviders.sol</code>, all the users can lose their rewards due to precision loss.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Given:</p>\n<ul>\n<li>rewardsPerSecond is <code>10e18</code>;</li>\n<li>lastRewardTime is 24 hrs ago;</li>\n</ul>\n<p>Then:</p>\n<ol>\n<li>Alice <code>addTokenLiquidity()</code> with <code>1e8 * 1e18</code> XYZ on B-Chain, totalSharesMinted == <code>1e44</code>;</li>\n<li>Alice <code>deposit()</code> to HyphenLiquidityFarming, totalSharesStaked == <code>1e44</code>;</li>\n<li>24 hrs later, Alice tries to claim the rewards.</li>\n</ol>\n<p><code>accumulator = rewardsPerSecond * 24 hours</code> == 864000e18 == 8.64e23</p>\n<p>Expected Results: As the sole staker, Alice should get all the <code>864000e18</code> rewards.</p>\n<p>Actual Results: Alice received 0 rewards.</p>\n<p>That’s because when <code>totalSharesStaked > 1e36</code>, <code>accumulator = (accumulator * ACC_TOKEN_PRECISION) / totalSharesStaked[_baseToken];</code> will be round down to <code>0</code>.</p>\n<p>When the <code>totalSharesStaked</code> is large enough, all users will lose their rewards due to precision loss.</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ol>\n<li>Consider lowering the <code>BASE_DIVISOR</code> so that the initial share price can be higher;</li>\n<li>Consider making <code>ACC_TOKEN_PRECISION</code> larger to prevent precision loss;</li>\n</ol>\n<p>See also the Recommendation on <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/139\">Issue #139</a>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/140\">ankurdubey521 (Biconomy) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/140#issuecomment-1120958989\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Great find, probably deserves a severity of high.</p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-20\" style=\"position:relative;\"><a href=\"#medium-risk-findings-20\" aria-label=\"medium risk findings 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (20)</h1>\n<h2 id=\"m-01-unsupported-tokens-cannot-be-withdrawn\" style=\"position:relative;\"><a href=\"#m-01-unsupported-tokens-cannot-be-withdrawn\" aria-label=\"m 01 unsupported tokens cannot be withdrawn permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/54\">[M-01] Unsupported tokens cannot be withdrawn</a></h2>\n<p><em>Submitted by cmichel, also found by kyliek, pedroais, and PPrieditis</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityProviders.sol#L273\">LiquidityProviders.sol#L273</a><br></p>\n<p>Supported tokens can be turned off again by calling <code>TokenManager.removeSupportedToken</code>.<br>\nUsers won’t be able to withdraw their liquidity anymore because of <a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityProviders.sol#L352\">this check</a> in <code>removeLiquidity</code>.</p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider allowing withdrawals even if the token was unsupported to allow users to reclaim their funds.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/54\">ankurdubey521 (Biconomy) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/54#issuecomment-1095026266\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>A valid concern, assets not at direct risk.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-a-pauser-can-brick-the-contracts\" style=\"position:relative;\"><a href=\"#m-02-a-pauser-can-brick-the-contracts\" aria-label=\"m 02 a pauser can brick the contracts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/137\">[M-02] A <code>pauser</code> can brick the contracts</a></h2>\n<p><em>Submitted by WatchPug, also found by JMukesh, peritoflores, and whilom</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/security/Pausable.sol#L65-L68\">Pausable.sol#L65-L68</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">renouncePauser</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyPauser</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">PauserChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_pauser</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_pauser</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>A malicious or compromised <code>pauser</code> can call <code>pause()</code> and <code>renouncePauser()</code> to brick the contract and all the funds can be frozen.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Given:</p>\n<ul>\n<li>Alice (EOA) is the <code>pauser</code> of the contract.</li>\n<li>Alice calls <code>pause()</code> ;</li>\n<li>Alice calls <code>renouncePauser()</code>;</li>\n</ul>\n<p>As a result, most of the contract’s methods are now unavailable, and this cannot be reversed even by the <code>owner</code>.</p>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider removing <code>renouncePauser()</code>, or requiring the contract not in <code>paused</code> mode when <code>renouncePauser()</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/137#issuecomment-1083350829\">ankurdubey521 (Biconomy) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Yeah, <code>changePauser</code> needs to have an <code>onlyOwner</code> modifier instead of <code>onlyPauser</code>.</p>\n<p><a href=\"https://github.com/bcnmy/hyphen-contract/pull/42\">HP-25: C4 Audit Fixes, Dynamic Fee Changes bcnmy/hyphen-contract#42</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/137#issuecomment-1095044957\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>A valid concern, however, the proposed solution has drawbacks too. If you change from onlyPauser to onlyOwner here, a compromise of the owner account will have devastating consequences while with the current implementation the pauser can still pause the contracts independently of an owner. So this is a double-edged sword, it is up to you to decide which way is more acceptable.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-incompatibility-with-rebasingdeflationaryinflationary-token\" style=\"position:relative;\"><a href=\"#m-03-incompatibility-with-rebasingdeflationaryinflationary-token\" aria-label=\"m 03 incompatibility with rebasingdeflationaryinflationary token permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/91\">[M-03] Incompatibility With Rebasing/Deflationary/Inflationary token</a></h2>\n<p><em>Submitted by Jujic, also found by cmichel, defsec, hagrid, hickuphh3, IllIllI, minhquanym, Ruhum, and shenwilly</em></p>\n<p>The scope contracts do not appear to support rebasing/deflationary/inflationary tokens whose balance changes during transfers or over time. The necessary checks include at least verifying the amount of tokens transferred to contracts before and after the actual transfer to infer any fees/interest.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/token/TokenManager.sol\">TokenManager.sol</a><br></p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Make sure token vault accounts for any rebasing/inflation/deflation.<br>\nAdd support in contracts for such tokens before accepting user-supplied tokens.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/91\">ankurdubey521 (Biconomy) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/91#issuecomment-1109645407\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Grouping all the issues related to the incompatibility with weird ERC20s together and making this a primary issue because it is the most generic.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-owners-have-absolute-control-over-protocol\" style=\"position:relative;\"><a href=\"#m-04-owners-have-absolute-control-over-protocol\" aria-label=\"m 04 owners have absolute control over protocol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/80\">[M-04] Owners have absolute control over protocol</a></h2>\n<p><em>Submitted by throttle, also found by cccz, cmichel, danb, defsec, hickuphh3, IllIllI, pedroais, and Ruhum</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L174-L192\">LiquidityFarming.sol#L174-L192</a><br></p>\n<p>Owners have full control over the protocol.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Owners have full control over:</p>\n<ul>\n<li>executors who perform token transfers on behalf of the destination chain</li>\n<li>reclaiming / withdrawing any tokens (including reward tokens) held by farming contract</li>\n<li>total upgradeability</li>\n<li>instant parameters change (no timelock)</li>\n<li>1 step owner change (gold standard is 2-step owner change)</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Make executors decentralized.<br>\nAdd TimeLock for parameter changes.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/80#issuecomment-1083012942\">ankurdubey521 (Biconomy) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>I agree this is an issue, but in the current iteration of Hyphen it is still a centralized system, therefore there is an implicit trust in the contract owners and executors. A decentralized version of the Hyphen bridge is in the works and will fix these issues.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/80#issuecomment-1109662505\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I am grouping all the issues related to centralization and owner privilege risks together and making this the primary issue because it is the most generic.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-05-frontrunning-of-setpertokenwalletcap-edge-case\" style=\"position:relative;\"><a href=\"#m-05-frontrunning-of-setpertokenwalletcap-edge-case\" aria-label=\"m 05 frontrunning of setpertokenwalletcap edge case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/158\">[M-05] Frontrunning of <code>setPerTokenWalletCap</code> edge case</a></h2>\n<p><em>Submitted by sirhashalot</em></p>\n<p>The <code>setPerTokenWalletCap()</code> function in WhitelistPeriodManager.sol <a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/WhitelistPeriodManager.sol#L196-L200\">contains a comment</a> stating:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Special care must be taken when calling this function</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">There are no checks for _perTokenWalletCap (since it&#39;s onlyOwner), but it&#39;s essential that it should be &gt;= max lp provided by an lp.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Checking this on chain will probably require implementing a bbst, which needs more bandwidth</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Call the view function getMaxCommunityLpPositon() separately before changing this value</span></span></code></pre>\n<p>Even if the manual step of calling the <code>getMaxCommunityLpPositon()</code> function is properly performed, it is possible for a user to add liquidity to increase the <code>maxLp</code> value in between when the <code>getMaxCommunityLpPositon()</code> function is called and when the <code>setPerTokenWalletCap()</code> function is called. Because this process is manual, this doesn’t need to be bot frontrunning in the same block as when the <code>setPerTokenWalletCap()</code> function is called, but can be cause by poor timing of an innocent unknowing user adding liquidity to the protocol. If this condition occurs, the liquidity provider will have provided more liquidity than the perTokenWalletCap limit, breaking the assumptions for this variable and leading to some denial of service conditions.</p>\n<p>This edge situation can impact the <code>setTotalCap()</code> function and the “perTokenTotalCap[_token]” state variable as well, but the “perTokenWalletCap[_token]” value would have to be reduced before the “perTokenTotalCap[_token]” value is reduced. The impact to <code>setTotalCap()</code> follows the same execution path but adds the additional step of calling the <code>setTotalCap()</code> function at the end of the process.</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li>Owner <a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/WhitelistPeriodManager.sol#L245-L255\">calls <code>getMaxCommunityLpPositon(_token)</code> function</a> to identify maxLp value to confirm new perTokenWalletCap value is below maxLp value</li>\n<li>An innocent user adds liquidity to their position without the knowledge that the owner is going to reduce the “perTokenWalletCap[_token]” value soon</li>\n<li>Owner <a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/WhitelistPeriodManager.sol#L202-L208\">calls <code>setPerTokenWalletCap()</code> function </a>to reduce “perTokenWalletCap[_token]” value</li>\n<li>The innocent user has more liquidity than the new “perTokenWalletCap[_token]” value. This means that the user can be in a situation where if they remove x amount of liquidity and attempt to add x liquidity back to their position, the innocent user will be unable to do so. Other functions that rely on the assumption that the largest user deposit is below the “perTokenWalletCap[_token]” value may break due to incorrect assumptions</li>\n</ol>\n<p>This edge situation can impact the <code>setTotalCap()</code> function and the “perTokenTotalCap[_token]” state variable as well, but the “perTokenWalletCap[_token]” value would have to be reduced before the “perTokenTotalCap[_token]” value is reduced. The impact to <code>setTotalCap()</code> follows the same execution path but adds the additional step of calling the <code>setTotalCap()</code> function at the end of the process.</p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>A programmatic solution is the only way to avoid these edge case scenarios, though it will increase gas consumption. To convert the manual calling of <code>getMaxCommunityLpPositon(_token)</code> to a programmatic solution, add the following require statement next to the existing require statement of the <code>setPerTokenWalletCap()</code> function:<br>\n<code>require(_perTokenWalletCap &#x3C;= getMaxCommunityLpPositon(_token), \"ERR_PWC_GT_MCLP\");</code></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/158\">ankurdubey521 (Biconomy) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/158#issuecomment-1109677518\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The concern is valid but I do not think that there is any profit for the attacker, and the impact for the regular users is minimal because this value can be updated anytime again by the owner, so I am hesitating if this should be of medium severity or lower, but because the warden provided a nice and comprehensive description, I will leave this in favor of warden.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-dos-by-gas-limit\" style=\"position:relative;\"><a href=\"#m-06-dos-by-gas-limit\" aria-label=\"m 06 dos by gas limit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/24\">[M-06] DoS by gas limit</a></h2>\n<p><em>Submitted by danb, also found by benk10 and pedroais</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L220\">LiquidityFarming.sol#L220</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L233\">LiquidityFarming.sol#L233</a><br></p>\n<p>In <code>deposit</code> function it is possible to push to <code>nftIdsStaked</code> of anyone, an attacker can deposit too many nfts to another user, and when the user will try to withdraw an nft at the end of the list, they will iterate on the list and revert because of gas limit.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/24\">ankurdubey521 (Biconomy) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/bcnmy/hyphen-contract/pull/42\">HP-25: C4 Audit Fixes, Dynamic Fee Changes bcnmy/hyphen-contract#42</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/24#issuecomment-1109684991\">pauliax (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>A valid concern, but I think it should be of medium severity because the victim can still withdraw NFTs one by one until reaching the necessary index because it breaks inside the loop: <a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L234-L235\">LiquidityFarming.sol#L234-L235</a>.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-07-sending-tokens-close-to-the-maximum-will-fail-and-user-will-lose-tokens\" style=\"position:relative;\"><a href=\"#m-07-sending-tokens-close-to-the-maximum-will-fail-and-user-will-lose-tokens\" aria-label=\"m 07 sending tokens close to the maximum will fail and user will lose tokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/181\">[M-07] Sending tokens close to the maximum will fail and user will lose tokens</a></h2>\n<p><em>Submitted by pedroais, also found by WatchPug</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityPool.sol#L171\">LiquidityPool.sol#L171</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityPool.sol#L273\">LiquidityPool.sol#L273</a><br></p>\n<p>When a user calls the deposit function the reward amount is calculated and an event is emited with amount+reward as the transfer amount. The function checks amount is smaller than the max amount.</p>\n<p>An executor then listens to this event and calls sendFundsToUser with rewards + amount as the amount parameter. This function checks amount+reward is smaller than max amount.</p>\n<p>This is a problem because the amount transferred may be in the limit but amount + reward could pass the limit and the executor won’t be able to send the transaction. The user will lose the funds. Both checks should be made with the reward or without the reward but the checks should be the same for this not to happen.</p>\n<p>Step by step :<br>\nMax transfer is set to 50 for token A<br>\nBob transfers 49 tokens, this will pass since 49&#x3C;50. The reward is calculated in 2 tokens.<br>\nThe executor then calls sendFundsToUser with 52. This transaction will revert and user will lose their tokens.<br></p>\n<p>This value of amount includes rewards but the previous check didn’t include rewards: <a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityPool.sol#L273\">LiquidityPool.sol#L273</a>.</p>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Both checks should be made over the same amount = amount + rewards</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/181#issuecomment-1082946519\">ankurdubey521 (Biconomy) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>We handle this issue by setting a slightly larger limit in the transfer config of each token on the destination chain.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/181#issuecomment-1112625440\">pauliax (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Even though the sponsor is already aware of and mitigates this issue, it could still be fixed algorithmically to prevent accidental loss of funds. I am leaving this as of medium severity.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-08-incentive-pool-can-be-drained-without-rebalancing-the-pool\" style=\"position:relative;\"><a href=\"#m-08-incentive-pool-can-be-drained-without-rebalancing-the-pool\" aria-label=\"m 08 incentive pool can be drained without rebalancing the pool permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/87\">[M-08] Incentive Pool can be drained without rebalancing the pool</a></h2>\n<p><em>Submitted by kyliek, also found by Ruhum and WatchPug</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityPool.sol#L149-L173\">LiquidityPool.sol#L149-L173</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityPool.sol#L263-L277\">LiquidityPool.sol#L263-L277</a><br></p>\n<p><code>depositErc20</code> allows an attacker to specify the destination chain to be the same as the source chain and the receiver account to be the same as the caller account. This enables an attacker to drain the incentive pool without rebalancing the pool back to the equilibrium state.</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>This requires the attacker to have some collateral, to begin with. The profit also depends on how much the attacker has. Assume the attacker has enough assets.</p>\n<p>In each chain, when the pool is very deficit (e.g. <code>currentLiquidity</code> is much less than <code>providedLiquidity</code>), which often mean there’s a good amount in the Incentive pool after some high valued transfers, then do the following.</p>\n<ul>\n<li>step 1 :  borrow the liquidityDifference amount such that one can get the whole incentivePool.</li>\n</ul>\n<!---->\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">            uint256 liquidityDifference = providedLiquidity - currentLiquidity;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (amount &gt;= liquidityDifference) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                rewardAmount = incentivePool[tokenAddress];</span></span></code></pre>\n<ul>\n<li>step 2 : call <code>depositErc20()</code> with <code>toChainId</code> being the same chain and <code>receiver</code> being <code>msg.sender</code>.</li>\n</ul>\n<p>The executor will call <code>sendFundsToUser</code> to msg.sender. Then a rewardAmount, equivalent to the entire incentive pool (up to 10% of the total pool value), will be added to <code>msg.sender</code> minus equilibrium fee (~0.01%) and gas fee.</p>\n<p>In the end, the pool is back to the deficit state as before, the incentive pool is drained and the exploiter pockets the difference of rewardAmount minus fees.</p>\n<p>This attack can be repeated on each deployed chain multiple times whenever the incentive pool is profitable (particularly right after a big transfer).</p>\n<h3 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ul>\n<li>Disallow <code>toChainId</code> to be the source chain by validating it in <code>depositErc20</code> or in <code>sendFundsToUser</code> validate that <code>fromChainId</code> is not the same as current chain.</li>\n<li>Require <code>receiver</code> is not <code>msg.sender</code> in <code>depositErc20</code>.</li>\n</ul>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/87#issuecomment-1079770492\">tomarsachin2271 (Biconomy) commented</a>:</strong></p>\n<blockquote>\n<p>If depositor keeps toChainId same as source chain Id, then executor will not pick this deposit transaction on backend as there won’t be any mapping for fromChainId => toChainId, so depositor funds will remain in the source chain if he tries to do it and try to drain the incentive pool.</p>\n<p>Although this could happen coz of any bug on the UI, so it’s better to handle these situations on contract itself. It will increase a gas though a bit while depositing. Will consider this point though.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/87\">ankurdubey521 (Biconomy) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/bcnmy/hyphen-contract/pull/42\">HP-25: C4 Audit Fixes, Dynamic Fee Changes bcnmy/hyphen-contract#42</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/87#issuecomment-1112630491\">pauliax (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>It is always good to enforce such things on the contract level itself if possible. While there are some precautions, there still exists a hypothetical attack path so I am leaving this as of medium severity.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-09-improper-upper-bound-definition-on-the-fee\" style=\"position:relative;\"><a href=\"#m-09-improper-upper-bound-definition-on-the-fee\" aria-label=\"m 09 improper upper bound definition on the fee permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/8\">[M-09] Improper Upper Bound Definition on the Fee</a></h2>\n<p><em>Submitted by defsec, also found by catchup, danb, Dravee, gzeon, hickuphh3, hubble, peritoflores, Ruhum, and throttle</em></p>\n<p>The <strong>equilibriumFee</strong> and <strong>maxFee</strong> does not have any upper or lower bounds. Values that are too large will lead to reversions in several critical functions or the LP user will lost all funds when paying the fee.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li>Navigate to the following contract.</li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/token/TokenManager.sol#L52\">TokenManager.sol#L52</a><br></p>\n<ol start=\"2\">\n<li>Owner can identify fee amount. That directly affect to LP management. <a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityPool.sol#L352\">LiquidityPool.sol#L352</a></li>\n<li>Here you can see there is no upper bound has been defined.</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function changeFee(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address tokenAddress,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 _equilibriumFee,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 _maxFee</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) external override onlyOwner whenNotPaused {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(_equilibriumFee != 0, &quot;Equilibrium Fee cannot be 0&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(_maxFee != 0, &quot;Max Fee cannot be 0&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        tokensInfo[tokenAddress].equilibriumFee = _equilibriumFee;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        tokensInfo[tokenAddress].maxFee = _maxFee;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        emit FeeChanged(tokenAddress, tokensInfo[tokenAddress].equilibriumFee, tokensInfo[tokenAddress].maxFee);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-12\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-12\" aria-label=\"recommended mitigation steps 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider defining upper and lower bounds on the <strong>equilibriumFee</strong> and <strong>maxFee</strong>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/8\">ankurdubey521 (Biconomy) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/bcnmy/hyphen-contract/pull/42\">HP-25: C4 Audit Fixes, Dynamic Fee Changes bcnmy/hyphen-contract#42</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/8#issuecomment-1114023886\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Valid concern. I am grouping all the issues related to the validation of fee variables together and making this the primary one as it contains the most comprehensive description.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-10-call-to-non-existing-contracts-returns-success\" style=\"position:relative;\"><a href=\"#m-10-call-to-non-existing-contracts-returns-success\" aria-label=\"m 10 call to non existing contracts returns success permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/104\">[M-10] Call to non-existing contracts returns success</a></h2>\n<p><em>Submitted by CertoraInc, also found by kenta and wuwe1</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityFarming.sol#L140\">LiquidityFarming.sol#L140</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityFarming.sol#L145\">LiquidityFarming.sol#L145</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityFarming.sol#L187\">LiquidityFarming.sol#L187</a><br></p>\n<p>Low level calls (call, delegate call and static call) return success if the called contract doesn’t exist (not deployed or destructed).</p>\n<p>This makes a user be able to send his funds to non-existing addresses.</p>\n<p><code>LiquidityFarming</code><br>\n<code>reclaimTokens</code> - if the owner calls by accident with a non-existing address he’ll lose the funds.<br>\n<code>_sendRewardsForNft</code> - if the <code>withdraw</code> or <code>extractRewards</code> will be called with a <code>to</code> non-existing address, the funds will be lost. That’s because of the call to <code>_sendRewardsForNft</code> which contains a low level call to the <code>to</code> address.<br></p>\n<p><code>sendFundsToUser</code> - if an executor calls by accident with a non-existing address the funds will be lost.<br>\n<code>transfer</code> - if the <code>transfer</code> function will be called (by the LiquidityProvidors contract of course) with a non existing address as a receiver, the funds will be lost.<br></p>\n<p>This can be seen here <a href=\"https://github.com/Uniswap/v3-core/blob/main/audits/tob/audit.pdf\">https://github.com/Uniswap/v3-core/blob/main/audits/tob/audit.pdf</a> (report #9) and here <a href=\"https://docs.soliditylang.org/en/develop/control-structures.html#error-handling-assert-require-revert-and-exceptions\">https://docs.soliditylang.org/en/develop/control-structures.html#error-handling-assert-require-revert-and-exceptions</a></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/104\">ankurdubey521 (Biconomy) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/bcnmy/hyphen-contract/pull/42\">HP-25: C4 Audit Fixes, Dynamic Fee Changes bcnmy/hyphen-contract#42</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/104#issuecomment-1114554603\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I am hesitating if this should be with the severity of Medium or Low but leaving in favor of wardens this time. I believe checking against empty addresses is not enough, low-level calls return true even for non-empty but not valid addresses. It would be better to use interfaces if possible.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-11-liquidityproviders-setting-new-liquidity-pool-will-break-contract\" style=\"position:relative;\"><a href=\"#m-11-liquidityproviders-setting-new-liquidity-pool-will-break-contract\" aria-label=\"m 11 liquidityproviders setting new liquidity pool will break contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/52\">[M-11] <code>LiquidityProviders</code>: Setting new liquidity pool will break contract</a></h2>\n<p><em>Submitted by cmichel, also found by gzeon</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityProviders.sol#L171\">LiquidityProviders.sol#L171</a><br></p>\n<p>Owners can change the <code>liquidityPool</code> variable any time with the <code>setLiquidityPool</code> function.<br>\nIf a liquidity pool was already set and users added liquidity with <code>addTokenLiquidity</code>, the tokens are directly transferred to the liquidity pool and not kept in the <code>LiquidityProviders</code> contract.<br>\nChanging the <code>liquidityPool</code> to a different contract will make it impossible for the users to withdraw their liquidity using <code>removeLiquidity</code> because the tokens are still in the old <code>liquidityPool</code> and cannot be retrieved.<br></p>\n<p>All users will lose their funds.</p>\n<h3 id=\"recommended-mitigation-steps-13\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-13\" aria-label=\"recommended mitigation steps 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Changing the <code>liquidityPool</code> requires a sophisticated migration mechanism.<br>\nOnly allow setting the <code>liquidityPool</code> contract once.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/52\">ankurdubey521 (Biconomy) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/52#issuecomment-1114560240\">pauliax (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>A valid concern, but I am downgrading this to Medium risk because the funds are not lost forever, the same old liquidityPool can be set again by the owner in such a case.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-12-liquidityproviders-setting-new-lp-token-will-break-contract\" style=\"position:relative;\"><a href=\"#m-12-liquidityproviders-setting-new-lp-token-will-break-contract\" aria-label=\"m 12 liquidityproviders setting new lp token will break contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/51\">[M-12] <code>LiquidityProviders</code>: Setting new LP token will break contract</a></h2>\n<p><em>Submitted by cmichel, also found by gzeon</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityProviders.sol#L116\">LiquidityProviders.sol#L116</a><br></p>\n<p>Owners can change the <code>lpToken</code> variable at any time with the <code>setLpToken</code> function.<br>\nIf an LP token was already set and users added liquidity with <code>addTokenLiquidity</code> and were minted a <code>lpToken</code> NFT, changing the <code>lpToken</code> to a different contract will make it impossible for the users to withdraw their liquidity using <code>removeLiquidity</code>.<br></p>\n<p>All users will lose their funds.</p>\n<h3 id=\"recommended-mitigation-steps-14\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-14\" aria-label=\"recommended mitigation steps 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Changing the <code>lpToken</code> requires a sophisticated migration mechanism.<br>\nOnly allow setting the <code>lpToken</code> contract once.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/51\">ankurdubey521 (Biconomy) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/51#issuecomment-1114560361\">pauliax (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>A valid concern, but I am downgrading this to Medium risk because the funds are not lost forever, the same old lpToken can be set again by the owner in such a case.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-13-improper-tokengasprice-design-can-overcharge-user-for-the-gas-cost-by-a-huge-margin\" style=\"position:relative;\"><a href=\"#m-13-improper-tokengasprice-design-can-overcharge-user-for-the-gas-cost-by-a-huge-margin\" aria-label=\"m 13 improper tokengasprice design can overcharge user for the gas cost by a huge margin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/145\">[M-13] Improper <code>tokenGasPrice</code> design can overcharge user for the gas cost by a huge margin</a></h2>\n<p><em>Submitted by WatchPug, also found by cmichel and hyh</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityPool.sol#L330-L337\">LiquidityPool.sol#L330-L337</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalGasUsed</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">initialGas</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">gasleft</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">totalGasUsed</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalGasUsed</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTokensInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk12\">transferOverhead</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">totalGasUsed</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalGasUsed</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">baseGas</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gasFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalGasUsed</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">tokenGasPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">gasFeeAccumulatedByToken</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">gasFeeAccumulatedByToken</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">] + </span><span class=\"mtk12\">gasFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">gasFeeAccumulated</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">][</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">()] = </span><span class=\"mtk12\">gasFeeAccumulated</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">][</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">()] + </span><span class=\"mtk12\">gasFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">amountToTransfer</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> - (</span><span class=\"mtk12\">transferFeeAmount</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">gasFee</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>When the <code>Executor</code> calls <code>sendFundsToUser()</code>, the <code>tokenGasPrice</code> will be used to calculate the gas fee for this transaction and it will be deducted from the transfer amount.</p>\n<p>However, since <code>tokenGasPrice</code> is <code>uint256</code>, the smallest chargeable amount is <code>1 wei</code> Token for <code>1 gas</code>. But there are tokens like <code>WBTC</code> (decimals = 8) or <code>USDC</code> (decimals = 6), for these tokens, even <code>1 wei</code> of the token can be worth a lot of gas, if the <code>tokenGasPrice</code> is set to <code>1</code>, <code>gasFee</code> will far more than the actual cost; if it’s set to <code>0</code>, <code>gasFee</code> can only be <code>0</code>.</p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Given:</p>\n<ul>\n<li><code>baseGas</code> = 21000</li>\n<li><code>tokenGasPrice</code> for WBTC = <code>1 wei</code></li>\n<li><code>transferFeeAmount</code> = 0</li>\n<li>1 WBTC = 20,000 MATIC</li>\n<li>Alice send <code>0.1 WBTC</code> to Bob’s address on Polygon</li>\n<li><code>Executor</code> calls <code>sendFundsToUser()</code> with <code>tokenGasPrice</code> = <code>1</code> on Polygon, <code>totalGasUsed</code> = <code>42000</code> and the gas price is <code>30G wei</code>, <code>Executor</code> paid <code>0.00126 MATIC</code> for gas.</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gasFee</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">42000</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">amountToTransfer</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">10000000</span><span class=\"mtk1\"> - (</span><span class=\"mtk7\">0</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">42000</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<ol start=\"3\">\n<li>Bob received 0.09958 WBTC, and paid <code>0.00042 WBTC</code> for the gas, the gas fee was overcharged by 6666 times.</li>\n</ol>\n<h3 id=\"recommended-mitigation-steps-15\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-15\" aria-label=\"recommended mitigation steps 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider changing <code>tokenGasPrice</code> to a value with decimals of <code>18</code> and it should be used like this:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gasFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalGasUsed</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">tokenGasPrice</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/145#issuecomment-1082941401\">ankurdubey521 (Biconomy) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>I’m not sure I agree with the recommendation since If a token atom’s value exceeds the gas paid for the transaction, it would still be truncated if we send a tokenGasPrice multiplied by 10e18 and divide it in the contract.</p>\n<p>But this is a great catch, I think the bigger issue here is that for certain tokens it is not feasible to charge gas fee on a per transaction basis, we’ll have to think about how to mitigate this.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/145#issuecomment-1129050076\">pauliax (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>The sponsor better knows the design and intentions of the system, and they claim to be dealing with the token atoms on a contract level. However, I would still like to emphasize possible risks with different tokens and decimals. It is a common issue, so I would like to group similar issues together and assign them a severity of Medium.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-14-liquidityfarmingsol-unbounded-for-loops-can-potentially-freeze-users-funds-in-edge-cases\" style=\"position:relative;\"><a href=\"#m-14-liquidityfarmingsol-unbounded-for-loops-can-potentially-freeze-users-funds-in-edge-cases\" aria-label=\"m 14 liquidityfarmingsol unbounded for loops can potentially freeze users funds in edge cases permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/136\">[M-14] <code>LiquidityFarming.sol</code> Unbounded for loops can potentially freeze users’ funds in edge cases</a></h2>\n<p><em>Submitted by WatchPug</em></p>\n<p>In the current implementation of <code>withdraw()</code>, it calls <code>_sendRewardsForNft()</code> at L243 which calls <code>updatePool()</code> at L129 which calls <code>getUpdatedAccTokenPerShare()</code> at L319.</p>\n<p><code>getUpdatedAccTokenPerShare()</code> will loop over <code>rewardRateLog</code> to calculate an up to date value of accTokenPerShare.</p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityFarming.sol#L270-L285\">LiquidityFarming.sol#L270-L285</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">true</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">lastUpdatedTime</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">counter</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">accumulator</span><span class=\"mtk1\"> +=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">rewardRateLog</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">rewardsPerSecond</span><span class=\"mtk1\"> *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            (</span><span class=\"mtk12\">counter</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">max</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lastUpdatedTime</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rewardRateLog</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">counter</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewardRateLog</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">i</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    --</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This won’t be a problem in the usual cases, however, if there is a baseToken that:</p>\n<ul>\n<li>the <code>rewardPerSecond</code> get updated quite frequently;</li>\n<li>the liquidityProviders are inactive (no deposits / withdrawals for a period of time)</li>\n</ul>\n<p>Then by the time one of the <code>liquidityProviders</code> come to <code>withdraw()</code>, the tx may revert due to out-of-gas.</p>\n<p>As the <code>rewardRateLog</code> is now accumulated to a large size that causes the loop costs more gas than the block gas limit.</p>\n<p>There is a really easy fix for this, it will also make the code simpler:</p>\n<h3 id=\"recommended-mitigation-steps-16\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-16\" aria-label=\"recommended mitigation steps 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider removing <code>rewardRateLog</code> and change <code>setRewardPerSecond()</code> to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRewardPerSecond</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_rewardPerSecond</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">updatePool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">rewardRate</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">RewardsPerSecondEntry</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rewardPerSecond</span><span class=\"mtk1\">, </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">LogRewardPerSecond</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_rewardPerSecond</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/136\">ankurdubey521 (Biconomy) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/136#issuecomment-1114779005\">pauliax (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>A valid concern, but I think it should be of Medium severity: <em>“Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.”</em></p>\n</blockquote>\n<hr>\n<h2 id=\"m-15-whitelistperiodmanager-improper-state-handling-of-exclusion-removals\" style=\"position:relative;\"><a href=\"#m-15-whitelistperiodmanager-improper-state-handling-of-exclusion-removals\" aria-label=\"m 15 whitelistperiodmanager improper state handling of exclusion removals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/72\">[M-15] <code>WhitelistPeriodManager</code>: Improper state handling of exclusion removals</a></h2>\n<p><em>Submitted by hickuphh3, also found by throttle</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/WhitelistPeriodManager.sol#L178-L184\">WhitelistPeriodManager.sol#L178-L184</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/WhitelistPeriodManager.sol#L115-L125\">WhitelistPeriodManager.sol#L115-L125</a><br></p>\n<p>The <code>totalLiquidity</code> and <code>totalLiquidityByLp</code> mappings are not updated when an address is removed from the <code>isExcludedAddress</code> mapping. While this affects the enforcement of the cap limits and the <code>getMaxCommunityLpPositon()</code> function, the worst impact this has is that the address cannot have liquidity removed / transferred due to subtraction overflow.</p>\n<p>In particular, users can be prevented from withdrawing their staked LP tokens from the liquidity farming contract should it become non-excluded.</p>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li>Assume liquidity farming address <code>0xA</code> is excluded</li>\n<li>Bob stakes his LP token</li>\n<li>Liquidity farming contract is no longer to be excluded: <code>setIsExcludedAddressStatus([0xA, false])</code></li>\n<li>Bob attempts to withdraw liquidity → reverts because <code>totalLiquidityByLp[USDC][0xA] = 0</code>, resulting in subtraction overflow.</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// insert test case in Withdraw test block of LiquidityFarming.tests.ts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">it</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;will brick withdrawals by no longer excluding farming contract&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">farmingContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bob</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wlpm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setIsExcludedAddressStatus</span><span class=\"mtk1\">([</span><span class=\"mtk12\">farmingContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">], [</span><span class=\"mtk4\">false</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">farmingContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bob</span><span class=\"mtk1\">).</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bob</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// results in</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Error: VM Exception while processing transaction: reverted with panic code 0x11 (Arithmetic operation underflowed or overflowed outside of an unchecked block)</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-17\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-17\" aria-label=\"recommended mitigation steps 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The simplest way is to prevent exclusion removals.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setIsExcludedAddresses</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_addresses</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_addresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">isExcludedAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_addresses</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// emit event</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AddressExcluded</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_addresses</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/72\">ankurdubey521 (Biconomy) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/72#issuecomment-1114794396\">pauliax (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Great find, but I think it should be of Medium severity because it requires an external condition, the owner should stop excluding the contract, and also in case that happens, function setIsExcludedAddresses can be used to exclude this address again so the funds are not stuck forever in this case.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-16-whitelistperiodmanager-improper-state-handling-of-exclusion-additions\" style=\"position:relative;\"><a href=\"#m-16-whitelistperiodmanager-improper-state-handling-of-exclusion-additions\" aria-label=\"m 16 whitelistperiodmanager improper state handling of exclusion additions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/75\">[M-16] <code>WhitelistPeriodManager</code>: Improper state handling of exclusion additions</a></h2>\n<p><em>Submitted by hickuphh3</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/WhitelistPeriodManager.sol#L178-L184\">WhitelistPeriodManager.sol#L178-L184</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/WhitelistPeriodManager.sol#L83-L99\">WhitelistPeriodManager.sol#L83-L99</a><br></p>\n<p>The <code>totalLiquidity</code> and <code>totalLiquidityByLp</code> mappings are not updated when an address is added to the <code>isExcludedAddress</code> mapping. This affects the enforcement of the cap limits and the <code>getMaxCommunityLpPositon()</code> function, which implicitly assumes that whitelisted addresses will have 0 liquidity, for addresses with non-zero liquidity at the time of addition to the whitelist.</p>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li>\n<p>Assume the following initial conditions:</p>\n<ul>\n<li>\n<p>Alice’s address <code>0xA</code> is the sole USDC liquidity provider</p>\n<ul>\n<li><code>totalLiquidity[USDC] = 500</code></li>\n<li><code>totalLiquidity[USDC][0xA] = 500</code></li>\n</ul>\n</li>\n<li>USDC total cap of <code>500</code>, ie. <code>perTokenTotalCap[USDC] = 500</code></li>\n</ul>\n</li>\n<li>\n<p>Exclude Alice’s address <code>0xA</code>: <code>setIsExcludedAddressStatus([0xA, true])</code></p>\n<ul>\n<li>totalLiquidity mappings are unchanged</li>\n</ul>\n</li>\n<li>\n<p>The following deviant behaviour is observed:</p>\n<ul>\n<li><code>getMaxCommunityLpPositon()</code> returns <code>500</code> when it should return <code>0</code></li>\n<li>\n<p>All non-excluded addresses are unable to provide liquidity when they should have been able to, as Alice’s liquidity should have been excluded.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// insert test case in WhitelistPeriodManager.test.ts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">describe</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Test whitelist addition&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">it</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;produces deviant behaviour if excluding address with existing liquidity&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wlpm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setCaps</span><span class=\"mtk1\">([</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">], [</span><span class=\"mtk7\">500</span><span class=\"mtk1\">], [</span><span class=\"mtk7\">500</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">addTokenLiquidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">500</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wlpm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setIsExcludedAddressStatus</span><span class=\"mtk1\">([</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">], [</span><span class=\"mtk4\">true</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 1) returns 500 instead of 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">((</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wlpm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getMaxCommunityLpPositon</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">toString</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 2) bob (or other non-excluded addresses) will be unable to add liquidity</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">liquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bob</span><span class=\"mtk1\">).</span><span class=\"mtk11\">addTokenLiquidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">)).</span><span class=\"mtk12\">to</span><span class=\"mtk1\">.</span><span class=\"mtk12\">be</span><span class=\"mtk1\">.</span><span class=\"mtk11\">revertedWith</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;ERR__LIQUIDITY_EXCEEDS_PTTC&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-18\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-18\" aria-label=\"recommended mitigation steps 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Check that the address to be excluded is not holding any LP token at the time of exclusion.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// in setIsExcludedAddressStatus()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_addresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_status</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_addresses</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]) == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;address has existing liquidity&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/75\">ankurdubey521 (Biconomy) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/75#issuecomment-1114843528\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I think it is a different issue than M-15, based on the description it deserves a severity of Medium.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-17-wrong-condition-checking-in-price-calculation\" style=\"position:relative;\"><a href=\"#m-17-wrong-condition-checking-in-price-calculation\" aria-label=\"m 17 wrong condition checking in price calculation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/105\">[M-17] wrong condition checking in price calculation</a></h2>\n<p><em>Submitted by CertoraInc</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityProviders.sol#L180-L186\">LiquidityProviders.sol#L180-L186</a><br></p>\n<p>The <code>getTokenPriceInLPShares</code> function calculates the token price in LP shares, but it checks a wrong condition - if supposed to return <code>BASE_DIVISOR</code> if the total reserve is zero, not if the total shares minted is zero. This might leads to a case where the price is calculated incorrectly, or a division by zero is happening.</p>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>This is the wrong function implementation:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sol\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getTokenPriceInLPShares</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalSharesMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalSharesMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">] / </span><span class=\"mtk12\">totalReserve</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">BASE_DIVISOR</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This function is used in this contract only in the removeLiquidity and claimFee function, so it’s called only if funds were already deposited and totalReserve is not zero, but it can be problematic when other contracts will use this function (it’s a public view function so it might get called from outside of the contract).</p>\n<h3 id=\"recommended-mitigation-steps-19\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-19\" aria-label=\"recommended mitigation steps 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The correct code should be:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"sol\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getTokenPriceInLPShares</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reserve</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalReserve</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">reserve</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalSharesMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">] / </span><span class=\"mtk12\">totalReserve</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">BASE_DIVISOR</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/105\">ankurdubey521 (Biconomy) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/bcnmy/hyphen-contract/pull/42\">HP-25: C4 Audit Fixes, Dynamic Fee Changes bcnmy/hyphen-contract#42</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/105#issuecomment-1114802864\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Great catch, even though the real impact is not that clear and severe, I will favor a warden and leave it as Medium severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/105#issuecomment-1140059559\">Pedroais (warden) commented</a>:</strong></p>\n<blockquote>\n<p>The warden didn’t show any attack path that could leak value. This is a view function that is incorrect as to spec so I think this should be a low.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/105#issuecomment-1145672408\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Yes, it is a view function but nevertheless, I think it possesses a hypothetical risk path that this function can fail at runtime if the totalSharesMinted is 0. It is somewhere between low and medium categories, I am curious what other certified wardens think about where should this belong.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-18--possible-frontrun-on-deposits-on-liquiditypool\" style=\"position:relative;\"><a href=\"#m-18--possible-frontrun-on-deposits-on-liquiditypool\" aria-label=\"m 18  possible frontrun on deposits on liquiditypool permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/180\">[M-18]  Possible frontrun on deposits on <code>LiquidityPool</code></a></h2>\n<p><em>Submitted by Cantor_Dust, also found by WatchPug</em></p>\n<p>Rewards are given to a user for depositing either ERC20 tokens or their native token into the LiquidityPool. This reward is used to incentivize users to deposit funds into the liquidity pool when the pool is not in an equilibrium state.</p>\n<p>For regular users, this liquidity pool state fluctuates based on the frequency and amount of deposits made to the liquidity pool. If a malicious user can control the state of the liquidity pool before a victim deposits tokens into the liquidity pool, they can gain double rewards.</p>\n<p>To gain these double rewards, a malicious user can watch the mempool for transactions that will receive a reward when the deposit occurs. When a malicious user sees that victim deposit, the malicious user can attach a higher fee to their transaction and initiate a deposit. This will allow the malicious user’s transaction to front-run before the victim’s transaction.</p>\n<p>Once the malicious user’s deposit is complete, the liquidity pool state will be in a near equilibrium state. Then, the victim’s deposit will occur which causes the liquidity pool state to no longer be in equilibrium.</p>\n<p>Finally, the malicious user will make a final deposit gaining yet another reward for bringing the liquidity pool state back to equilibrium.</p>\n<p>To sum up, a malicious user can create a sandwich attack where they deposit their own tokens before and after a victim’s transaction. This will allow the malicious user to double dip and gain rewards twice due to victim’s deposit.</p>\n<h3 id=\"proof-of-concept-13\" style=\"position:relative;\"><a href=\"#proof-of-concept-13\" aria-label=\"proof of concept 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Let’s look at the depositNative function which is the simpler of the two deposit functions.</p>\n<p>The key component in the depositNative function is the getRewardAmount which can be found <a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L255\">here</a>. The getRewardAmount calculates how much available vs supplied liquidity exists in the liquidity pool. <a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L175-L188\">Here</a> there are no time-weighted checks to calculate the available vs. supplied liquidity. With a lack of checks for time-weight and that there are no frontrun checks against deposits, it’s trivial to front-run deposits and control the liquidity of the liquidity such that the reward amount can be double-dipped.</p>\n<h3 id=\"recommended-mitigation-steps-20\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-20\" aria-label=\"recommended mitigation steps 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ol>\n<li>By allowing each deposit to manipulate the liquidity pool state from either a deficient or excessive state, malicious users can double dip on rewards.</li>\n<li>Alternative approaches to calculating rewards is possible, for example a dutch auction style deposit system where rewards are distributed evenly could reduce an impact of a frontrun attack.</li>\n<li>A simpler approach is to record liquidity states at specific block timestamps and check against the timestamp for the current block state.</li>\n</ol>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/180\">ankurdubey521 (Biconomy) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/180#issuecomment-1114800888\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Great find, mempool lurking monsters could definitely use this opportunity.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-19-sharestotokenamount-division-by-zero\" style=\"position:relative;\"><a href=\"#m-19-sharestotokenamount-division-by-zero\" aria-label=\"m 19 sharestotokenamount division by zero permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/53\">[M-19] <code>sharesToTokenAmount</code>: Division by zero</a></h2>\n<p><em>Submitted by cmichel, also found by cccz and CertoraInc</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityProviders.sol#L192\">LiquidityProviders.sol#L192</a><br></p>\n<p>The public <code>sharesToTokenAmount</code> function does not check if the denominator <code>totalSharesMinted[_tokenAddress]</code> is zero.<br>\nNeither do the callers of this function. The function will revert.<br>\nCalling functions like <code>getFeeAccumulatedOnNft</code> and <code>sharesToTokenAmount</code> from another contract should never revert.<br></p>\n<h3 id=\"recommended-mitigation-steps-21\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-21\" aria-label=\"recommended mitigation steps 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Return 0 in case <code>totalSharesMinted[_tokenAddress]</code> is zero.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/53\">ankurdubey521 (Biconomy) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/53#issuecomment-1120953089\">pauliax (judge) commented</a>:</strong></p>\n<blockquote>\n<p>A valid concern of runtime error.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-20-liquidity-providers-unable-to-remove-liquidity-when-the-pool-is-in-deficit-state\" style=\"position:relative;\"><a href=\"#m-20-liquidity-providers-unable-to-remove-liquidity-when-the-pool-is-in-deficit-state\" aria-label=\"m 20 liquidity providers unable to remove liquidity when the pool is in deficit state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/93\">[M-20] Liquidity providers unable to remove liquidity when the pool is in deficit state</a></h2>\n<p><em>Submitted by kyliek</em></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityProviders.sol#L388\">LiquidityProviders.sol#L388</a><br>\n<a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityProviders.sol#L392\">LiquidityProviders.sol#L392</a><br></p>\n<p>LP token holders can not redeem their tokens when the pool is in the deficit state, i.e. <code>currentLiquidity &#x3C;&#x3C; providedLiquidity</code>. This is due to that LP shares are computed based on <code>providedLiquidity</code> and the actual available pool balance is based on <code>currentLiquidity</code>.</p>\n<h3 id=\"proof-of-concept-14\" style=\"position:relative;\"><a href=\"#proof-of-concept-14\" aria-label=\"proof of concept 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>When a high valued withdrawal happens in the liquidity pool of the destination chain, the current liquidity will be reduced when the executor calls <code>sendFundsToUser</code><br>\n<a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityPool.sol#L285\">LiquidityPool.sol#L285</a><br></p>\n<p>and the pool contract balance will also be reduced by the same amount. The pool reached a deficit state with provided liquidity much bigger than current liquidity.</p>\n<p>The LP shares are computed based on the value of <code>totalReserve</code> that is roughly equivalent to <code>totalLiquidity + LpFees</code>. In a deficit state, <code>totalReserve</code> could be much bigger than the available pool balance (up to 90% since max fee is 10%).\nIf the LP token holder wants to redeem his shares,</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        _decreaseCurrentLiquidity(_tokenAddress, _amount);</span></span></code></pre>\n<p>will underflow and revert and</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        _transferFromLiquidityPool(_tokenAddress, _msgSender(), amountToWithdraw);</span></span></code></pre>\n<p>will revert because there is not enough balance.</p>\n<h3 id=\"recommended-mitigation-steps-22\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-22\" aria-label=\"recommended mitigation steps 22 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>This is a tricky problem. On one hand, separating <code>currentLiquidity</code> from <code>providedLiquidity</code> made sure that by bridging tokens over, it will not inflate or deflate the pool. On the other hand, decoupling the two made it hard to compute the actual available liquidity to redeem LP shares. One may need to think through this a bit more.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/93#issuecomment-1082888010\">ankurdubey521 (Biconomy) disagreed with High severity and commented</a>:</strong></p>\n<blockquote>\n<p>Liquidity Providers will be able to withdraw their funds as long as they’re sufficient <code>currentLiquidity</code> in the pool, as you mentioned. This will be the case when all pools are balanced, ie the current liquidity is very close to the supplied liquidity.</p>\n<p>By design, hyphen liquidity pools incentivize people to rebalance the pools by providing rewards from the incentive pool, so we believe this should not be that big of an issue in practice.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/93#issuecomment-1120988594\">pauliax (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>A valid concern, and even though per the sponsor’s comment it should not be a problem in practice, a hypothetical path of risk still exists so I would like to leave this as of Medium severity issue.</p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this contest, 39 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/78\">report highlighted below</a> by <strong>hickuphh3</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/62\">cmichel</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/31\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/187\">catchup</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/172\">rfa</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/103\">CertoraInc</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/126\">PPrieditis</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/82\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/95\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/143\">gzeon</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/65\">minhquanym</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/131\">bitbopper</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/117\">0xngndev</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/114\">benk10</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/193\">Dravee</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/189\">kenta</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/99\">kyliek</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/112\">defsec</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/108\">saian</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/5\">samruna</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/167\">berndartmueller</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/9\">robee</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/25\">danb</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/195\">jayjonah8</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/165\">hubble</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/148\">WatchPug</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/184\">0xwags</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/188\">Cantor_Dust</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/43\">TerrierLover</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/171\">0xNazgul</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/196\">csanuragjain</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/83\">throttle</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/102\">z3s</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/169\">ye0lde</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/122\">XDms</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/33\">cryptphi</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/110\">hagrid</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/151\">0v3rf10w</a>, and <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/129\">0xDjango</a>.</em></p>\n<h2 id=\"codebase-impressions--summary\" style=\"position:relative;\"><a href=\"#codebase-impressions--summary\" aria-label=\"codebase impressions  summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Codebase Impressions &#x26; Summary</h2>\n<p>Overall, code quality for the Hyphen 2.0 contracts is high. Supporting documentation was adequate in helping to understand the incentive and fee mechanisms for cross-chain transfers.</p>\n<p>The contracts in scope have 81.36% statement and 54.91% branch test coverage. Notably, the Liquidity Pool’s <code>permitAndDepositErc20()</code> and <code>permitEIP2612AndDepositErc20()</code> functions that allow users to deposit with signed messages are untested. It will be ideal to write more tests so that better coverage is achieved. Also note that some liquidity farming tests often fail because rewards are continuously accruing, so the actual amount tends to be greater than the expected amount.</p>\n<h2 id=\"l-01-conflicting-values-of-base_divisor\" style=\"position:relative;\"><a href=\"#l-01-conflicting-values-of-base_divisor\" aria-label=\"l 01 conflicting values of base_divisor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-01] Conflicting values of <code>BASE_DIVISOR</code></h2>\n<h3 id=\"line-references\" style=\"position:relative;\"><a href=\"#line-references\" aria-label=\"line references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Line References</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L20\">https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L20</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityProviders.sol#L27\">https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityProviders.sol#L27</a></p>\n<h3 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p><code>BASE_DIVISOR</code> is <code>10_000_000_000</code> in <code>LiquidityPool</code>, but <code>10**18</code> in <code>LiquidityProviders</code>. This can easily confuse 3rd parties integrating the token bridge.</p>\n<h3 id=\"recommended-mitigation-steps-23\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-23\" aria-label=\"recommended mitigation steps 23 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Rename either variable. I recommend renaming the instance in <code>LiquidityPool</code> to <code>FEE_DIVISOR</code>.</p>\n<h2 id=\"l-02-sub-optimal-calculations-in-getamounttotransfer-results-in-wei-losses\" style=\"position:relative;\"><a href=\"#l-02-sub-optimal-calculations-in-getamounttotransfer-results-in-wei-losses\" aria-label=\"l 02 sub optimal calculations in getamounttotransfer results in wei losses permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-02] Sub-optimal calculations in <code>getAmountToTransfer()</code> results in wei losses</h2>\n<h3 id=\"line-references-1\" style=\"position:relative;\"><a href=\"#line-references-1\" aria-label=\"line references 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Line References</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L317-L322\">https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L317-L322</a></p>\n<h3 id=\"description-1\" style=\"position:relative;\"><a href=\"#description-1\" aria-label=\"description 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>In the scenario where the transfer fee exceeds the equilibrium fee, the excess gets credited to the incentive pool. Disregarding from the fact that a bracket is incorrectly placed causing a massive loss in incentives (raised in separate issue), there are cases where 1 wei is unaccounted for from precision loss in the calculation.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">lpFee</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTokensInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">BASE_DIVISOR</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// altered for bracket positioning</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">incentivePool</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">] +=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * (</span><span class=\"mtk12\">transferFeePerc</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTokensInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\">)) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">BASE_DIVISOR</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h3 id=\"proof-of-concept-15\" style=\"position:relative;\"><a href=\"#proof-of-concept-15\" aria-label=\"proof of concept 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li><code>amount = 337671308498</code></li>\n<li><code>transferFeePerc = 181480242</code></li>\n<li><code>equilibriumFee = 10000000</code> (0.1%)</li>\n</ul>\n<p>Calculated amounts are</p>\n<ul>\n<li><code>lpFee = 337671308</code></li>\n<li><code>incentive = 337671308498 * (181480242 - 10000000) / BASE_DIVISOR = 5790395769</code></li>\n</ul>\n<p>Total fee calculated = <code>337671308</code> + <code>5790395769</code> = <code>6128067077</code></p>\n<ul>\n<li><code>transferFeeAmount = 337671308498 * 181480242 / BASE_DIVISOR = 6128067078</code></li>\n</ul>\n<p>We therefore see 1 wei being unaccounted for.</p>\n<h3 id=\"recommended-mitigation-steps-24\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-24\" aria-label=\"recommended mitigation steps 24 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">transferFeeAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">transferFeePerc</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">BASE_DIVISOR</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lpFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTokensInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">transferFeePerc</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">lpFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">BASE_DIVISOR</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">incentivePool</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">transferFeeAmount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">lpFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2 id=\"l-03-unbounded-iterations-for-getmaxcommunitylppositon\" style=\"position:relative;\"><a href=\"#l-03-unbounded-iterations-for-getmaxcommunitylppositon\" aria-label=\"l 03 unbounded iterations for getmaxcommunitylppositon permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-03] Unbounded iterations for <code>getMaxCommunityLpPositon()</code></h2>\n<h3 id=\"line-references-2\" style=\"position:relative;\"><a href=\"#line-references-2\" aria-label=\"line references 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Line References</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/WhitelistPeriodManager.sol#L248\">https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/WhitelistPeriodManager.sol#L248</a></p>\n<h3 id=\"description-2\" style=\"position:relative;\"><a href=\"#description-2\" aria-label=\"description 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>The <code>getMaxCommunityLpPosition()</code> iterates through the LP token supply to obtain the maximum community LP position obtained. Because the supply of NFT tokens is uncapped, there will come a point where this function runs out of gas.</p>\n<h3 id=\"proof-of-concept-16\" style=\"position:relative;\"><a href=\"#proof-of-concept-16\" aria-label=\"proof of concept 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In the worst case, the limit seems to be at about 1250 NFTs where the (N+1)th LP token has more liquidity than the Nth LP token.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">it</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Tries to get max iterations possible for getMaxCommunityLpPositon()&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">MAX_LOOPS</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1250</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// summation formula for 1 to MAX_LOOPS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxCap</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">MAX_LOOPS</span><span class=\"mtk1\"> * (</span><span class=\"mtk12\">MAX_LOOPS</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">2</span><span class=\"mtk1\">; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wlpm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setCaps</span><span class=\"mtk1\">([</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">], [</span><span class=\"mtk12\">maxCap</span><span class=\"mtk1\">], [</span><span class=\"mtk12\">maxCap</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">MAX_LOOPS</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">`adding </span><span class=\"mtk4\">${</span><span class=\"mtk12\">i</span><span class=\"mtk4\">}</span><span class=\"mtk8\">`</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// worst case: every iteration in getMaxCommunityLpPositon() enters if case</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// by giving next tokenId more liquidity</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">addTokenLiquidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">i</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;getting max lp position...&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Runs out of gas</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Error: Transaction reverted and Hardhat couldn&#39;t infer the reason. Please report this to help us improve Hardhat.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wlpm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getMaxCommunityLpPositon</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-25\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-25\" aria-label=\"recommended mitigation steps 25 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Have start and end indexes as inputs to cap the number of iterations performed.</p>\n<h2 id=\"l-04-addsupportedtoken-allows-zero-fees-to-be-set-but-changefee-doesnt\" style=\"position:relative;\"><a href=\"#l-04-addsupportedtoken-allows-zero-fees-to-be-set-but-changefee-doesnt\" aria-label=\"l 04 addsupportedtoken allows zero fees to be set but changefee doesnt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-04] <code>addSupportedToken()</code> allows zero fees to be set, but <code>changeFee()</code> doesn’t</h2>\n<h3 id=\"line-references-3\" style=\"position:relative;\"><a href=\"#line-references-3\" aria-label=\"line references 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Line References</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/token/TokenManager.sol#L49-L53\">https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/token/TokenManager.sol#L49-L53</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/token/TokenManager.sol#L91-L98\">https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/token/TokenManager.sol#L91-L98</a></p>\n<h3 id=\"description-3\" style=\"position:relative;\"><a href=\"#description-3\" aria-label=\"description 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>As per the title, the <code>addSupportedToken()</code> allows for zero <code>equilibriumFee</code> or <code>maxFee</code> to be set, but <code>changeFee()</code> doesn’t.</p>\n<h3 id=\"recommended-mitigation-steps-26\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-26\" aria-label=\"recommended mitigation steps 26 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Either include non-zero checks in <code>addSupportedToken()</code> or remove them in <code>changeFee()</code>.</p>\n<h2 id=\"l-05-_senderc20andgetsentamount-uses-recipient-instead-of-sender-balance-difference\" style=\"position:relative;\"><a href=\"#l-05-_senderc20andgetsentamount-uses-recipient-instead-of-sender-balance-difference\" aria-label=\"l 05 _senderc20andgetsentamount uses recipient instead of sender balance difference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-05] <code>_sendErc20AndGetSentAmount()</code> uses recipient instead of sender balance difference</h2>\n<h3 id=\"line-references-4\" style=\"position:relative;\"><a href=\"#line-references-4\" aria-label=\"line references 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Line References</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L109-L117\">https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L109-L117</a></p>\n<h3 id=\"description-4\" style=\"position:relative;\"><a href=\"#description-4\" aria-label=\"description 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>The function name implies that the sent amount should be returned, but it uses the amount received by the recipient instead.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recepientBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_to</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">_token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_to</span><span class=\"mtk1\">) - </span><span class=\"mtk12\">recepientBalance</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>If a fee-on-transfer token is the reward token, the amount sent vs received would differ.</p>\n<h3 id=\"recommended-mitigation-steps-27\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-27\" aria-label=\"recommended mitigation steps 27 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Decide which value is to be returned and logged. Either update the function to be <code>_sendErc20AndGetReceivedAmount()</code> or change it to use the contract’s balance difference instead.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">senderBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">_token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) - </span><span class=\"mtk12\">senderBalance</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"l-06-add-constructor-initializer-in-implementation-contracts\" style=\"position:relative;\"><a href=\"#l-06-add-constructor-initializer-in-implementation-contracts\" aria-label=\"l 06 add constructor initializer in implementation contracts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-06] Add constructor initializer in implementation contracts</h2>\n<h3 id=\"description-5\" style=\"position:relative;\"><a href=\"#description-5\" aria-label=\"description 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>As per <a href=\"https://forum.openzeppelin.com/t/uupsupgradeable-vulnerability-post-mortem/15680/6\">OpenZeppelin’s (OZ) recommendation</a>, “The guidelines are now to make it impossible for <em>anyone</em> to run <code>initialize</code> on an implementation contract, by adding an empty constructor with the <code>initializer</code> modifier. So the implementation contract gets initialized automatically upon deployment.”</p>\n<p>Note that this behaviour is also incorporated the <a href=\"https://wizard.openzeppelin.com/\">OZ Wizard</a> since the UUPS vulnerability discovery: “Additionally, we modified the code generated by the <a href=\"https://wizard.openzeppelin.com/\">Wizard</a> to include a constructor that automatically initializes the implementation when deployed.”</p>\n<h3 id=\"recommended-mitigation-steps-28\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-28\" aria-label=\"recommended mitigation steps 28 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add an empty constructor method to the relevant upgradeable contracts.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @custom:oz-upgrades-unsafe-allow constructor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">constructor</span><span class=\"mtk1\">() </span><span class=\"mtk12\">initializer</span><span class=\"mtk1\"> {}</span></span></span></code></pre>\n<h2 id=\"l-07-consider-having-limit-on-gas-fee-charged\" style=\"position:relative;\"><a href=\"#l-07-consider-having-limit-on-gas-fee-charged\" aria-label=\"l 07 consider having limit on gas fee charged permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-07] Consider having limit on gas fee charged</h2>\n<h3 id=\"line-references-5\" style=\"position:relative;\"><a href=\"#line-references-5\" aria-label=\"line references 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Line References</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L330-L336\">https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L330-L336</a></p>\n<h3 id=\"description-6\" style=\"position:relative;\"><a href=\"#description-6\" aria-label=\"description 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>There is no limit to the gas fee charged. While it is claimed that “there are no incentives for the executors”, in reality, executors can be indirectly incentivised by inflating the gas price so that they will be credited a higher fee.</p>\n<p>The fee can be as high as the bridged amount - transfer fee, leaving nothing for the user. While there is a lot of trust placed on the executor already, it would help to be able to provide a trust-less solution by enforcing a cap on the gas fee.</p>\n<h3 id=\"recommended-mitigation-steps-29\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-29\" aria-label=\"recommended mitigation steps 29 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Limit the maximum gas fee chargeable.</p>\n<h2 id=\"n-01-typo-errors\" style=\"position:relative;\"><a href=\"#n-01-typo-errors\" aria-label=\"n 01 typo errors permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-01] Typo errors</h2>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L178\"><code>reightful</code> → <code>rightful</code></a></li>\n<li><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityProviders.sol#L357\"><code>Claculate</code> → <code>Calculate</code></a></li>\n<li><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L167-L168\"><code>sushi</code> → <code>reward</code></a></li>\n</ul>\n<h2 id=\"n-02-missing-underscore-for-error\" style=\"position:relative;\"><a href=\"#n-02-missing-underscore-for-error\" aria-label=\"n 02 missing underscore for error permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-02] Missing underscore for error</h2>\n<h3 id=\"line-reference\" style=\"position:relative;\"><a href=\"#line-reference\" aria-label=\"line reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Line Reference</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L103\">https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L103</a></p>\n<h3 id=\"description-7\" style=\"position:relative;\"><a href=\"#description-7\" aria-label=\"description 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>The format seems to be 2 underscores after <code>ERR</code>, but the line reference above only has 1 underscore: <code>ERR_REWARD_TOKEN_IS_ZERO</code>.</p>\n<h3 id=\"recommended-mitigation-steps-30\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-30\" aria-label=\"recommended mitigation steps 30 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p><code>ERR_REWARD_TOKEN_IS_ZERO</code> -> <code>ERR__REWARD_TOKEN_IS_ZERO</code></p>\n<h2 id=\"n-03-swap-comment-order\" style=\"position:relative;\"><a href=\"#n-03-swap-comment-order\" aria-label=\"n 03 swap comment order permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-03] Swap comment order</h2>\n<h3 id=\"line-reference-1\" style=\"position:relative;\"><a href=\"#line-reference-1\" aria-label=\"line reference 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Line Reference</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L351\">https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L351</a></p>\n<h3 id=\"description-8\" style=\"position:relative;\"><a href=\"#description-8\" aria-label=\"description 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>The variable order in the comment do not correspond to that of the implementation. For readability, I recommend that they do.</p>\n<h3 id=\"recommended-mitigation-steps-31\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-31\" aria-label=\"recommended mitigation steps 31 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numerator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">providedLiquidity</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">maxFee</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// L(e) * F(e) * F(max)</span></span></span></code></pre>\n<h2 id=\"n-04-deep-factor-not-customisable\" style=\"position:relative;\"><a href=\"#n-04-deep-factor-not-customisable\" aria-label=\"n 04 deep factor not customisable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-04] Deep factor not customisable</h2>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h3>\n<p><a href=\"https://www.notion.so/Self-Balancing-Cross-Chain-Liquidity-Pools-c19a725673964d5aaec6b16e5c7ce9a5\">https://biconomy.notion.site/Self-Balancing-Cross-Chain-Liquidity-Pools-c19a725673964d5aaec6b16e5c7ce9a5</a></p>\n<h3 id=\"description-9\" style=\"position:relative;\"><a href=\"#description-9\" aria-label=\"description 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>The fee calculation formula mentions a deep factor <code>d</code>: <em>Value that decides how much deeper the curve looks.</em> Readers may have the impression that this may therefore be a customisable parameter in the contract, but in actual factor, is set to a constant value of <code>1</code>.</p>\n<h3 id=\"recommended-mitigation-steps-32\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-32\" aria-label=\"recommended mitigation steps 32 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Users / readers should be made aware that the deep factor has been fixed.</p>\n<h2 id=\"n-05-incorrect-comment-for-description-of-base_divisor\" style=\"position:relative;\"><a href=\"#n-05-incorrect-comment-for-description-of-base_divisor\" aria-label=\"n 05 incorrect comment for description of base_divisor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-05] Incorrect comment for description of <code>BASE_DIVISOR</code></h2>\n<h3 id=\"line-references-6\" style=\"position:relative;\"><a href=\"#line-references-6\" aria-label=\"line references 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Line References</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L20\">https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L20</a></p>\n<h3 id=\"description-10\" style=\"position:relative;\"><a href=\"#description-10\" aria-label=\"description 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p><code>BASE_DIVISOR</code> is defined as <code>10_000_000_000;</code> with accompanying description <code>// Basis Points * 100 for better accuracy</code>.</p>\n<p>This isn’t accurate as <code>100% = 10,000</code> basis points, and <code>10,000 * 100 = 1_000_000</code>, not <code>10_000_000_000</code>.</p>\n<h3 id=\"recommended-mitigation-steps-33\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-33\" aria-label=\"recommended mitigation steps 33 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Either update the comment to be</p>\n<p><code>uint256 private constant BASE_DIVISOR = 10_000_000_000; // 100 * (Basis Points ^ 2) for better accuracy</code></p>\n<p>or the <code>BASE_DIVISOR</code> itself to be a different value.</p>\n<h2 id=\"n-06-standardize-fee-denomination\" style=\"position:relative;\"><a href=\"#n-06-standardize-fee-denomination\" aria-label=\"n 06 standardize fee denomination permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-06] Standardize fee denomination</h2>\n<h3 id=\"line-references-7\" style=\"position:relative;\"><a href=\"#line-references-7\" aria-label=\"line references 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Line References</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L20\">https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L20</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L350\">https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L350</a></p>\n<h3 id=\"description-11\" style=\"position:relative;\"><a href=\"#description-11\" aria-label=\"description 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>In relation to L02, there are conflicting definitions of the fee denomination. <code>BASE_DIVISOR</code> says that fees are in <code>Basis points * 100</code>, while the comment in <code>getTransferFees()</code> says they are specified in <code>basis points * 10</code>.</p>\n<h3 id=\"recommended-mitigation-steps-34\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-34\" aria-label=\"recommended mitigation steps 34 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Standardize the fee denomination.</p>\n<h2 id=\"n-07-incorrect-comment-for-address-to-use-for-withdrawing-native-token\" style=\"position:relative;\"><a href=\"#n-07-incorrect-comment-for-address-to-use-for-withdrawing-native-token\" aria-label=\"n 07 incorrect comment for address to use for withdrawing native token permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-07] Incorrect comment for address to use for withdrawing native token</h2>\n<h3 id=\"line-references-8\" style=\"position:relative;\"><a href=\"#line-references-8\" aria-label=\"line references 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Line References</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L175\">https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L175</a></p>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L186\">https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L186</a></p>\n<h3 id=\"description-12\" style=\"position:relative;\"><a href=\"#description-12\" aria-label=\"description 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>The comment says to <code>use 0x00 for Ethereum</code>, but the implementation uses <code>NATIVE</code> instead.</p>\n<h3 id=\"recommended-mitigation-steps-35\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-35\" aria-label=\"recommended mitigation steps 35 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p><code>use 0x00 for Ethereum</code> → <code>use NATIVE for native token</code></p>\n<h2 id=\"n-08-clarify-reserve-variable-descriptions\" style=\"position:relative;\"><a href=\"#n-08-clarify-reserve-variable-descriptions\" aria-label=\"n 08 clarify reserve variable descriptions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-08] Clarify reserve variable descriptions</h2>\n<h3 id=\"line-references-9\" style=\"position:relative;\"><a href=\"#line-references-9\" aria-label=\"line references 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Line References</h3>\n<p><a href=\"https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityProviders.sol#L42-L44\">https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityProviders.sol#L42-L44</a></p>\n<h3 id=\"description-13\" style=\"position:relative;\"><a href=\"#description-13\" aria-label=\"description 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>It is unclear what each variable consists of, because there is:</p>\n<ul>\n<li>Supplied liquidity (SL) from liquidity providers</li>\n<li>Available liquidity: SL + net deposits and withdrawals from bridging activity</li>\n<li>Incentive fees</li>\n<li>Gas fees</li>\n<li>LP fees (accumulated equilibrium fees)</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-36\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-36\" aria-label=\"recommended mitigation steps 36 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>It would be best to explictly state what each variable consists of for clarity.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"jsx\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalReserve</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Supplied Liquidity (SL) + LP Fees</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalLiquidity</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Supplied Liquidity only</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Available liquidity = SL + net deposits and withdrawals from bridging activity</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentLiquidity</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Available Liquidity + All Fees (LP, Incentive, Gas), updated on every in and out transfer</span></span></span></code></pre>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this contest, 39 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/67\">report highlighted below</a> by <strong>Dravee</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/84\">IllIllI</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/101\">CertoraInc</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/42\">TerrierLover</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/107\">saian</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/128\">0xngndev</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/69\">wuwe1</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/147\">WatchPug</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/89\">Jujic</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/115\">benk10</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/11\">robee</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/77\">hickuphh3</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/190\">kenta</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/81\">throttle</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/170\">rfa</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/152\">bitbopper</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/100\">z3s</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/166\">berndartmueller</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/191\">pedroais</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/127\">PPrieditis</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/35\">defsec</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/141\">gzeon</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/176\">Cantor_Dust</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/6\">samruna</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/156\">Tomio</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/173\">sirhashalot</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/32\">antonttc</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/149\">0v3rf10w</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/30\">0x1f8b</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/116\">0xDjango</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/27\">oyc_109</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/66\">minhquanym</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/183\">peritoflores</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/41\">Kenshin</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/21\">csanuragjain</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/154\">0xwags</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/130\">Kiep</a>, <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/155\">0xNazgul</a>, and <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/111\">hagrid</a>.</em></p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<p>See <a href=\"https://github.com/code-423n4/2022-03-biconomy-findings/issues/67\">original submission</a>.</p>\n<h2 id=\"foreword\" style=\"position:relative;\"><a href=\"#foreword\" aria-label=\"foreword permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Foreword</h2>\n<ul>\n<li><strong>Storage-reading optimizations</strong></li>\n</ul>\n<blockquote>\n<p>The code can be optimized by minimising the number of SLOADs. SLOADs are expensive (100 gas) compared to MLOADs/MSTOREs (3 gas). In the paragraphs below, please see the <code>@audit-issue</code> tags in the pieces of code’s comments for more information about SLOADs that could be saved by caching the mentioned <strong>storage</strong> variables in <strong>memory</strong> variables.</p>\n</blockquote>\n<ul>\n<li><strong>Unchecking arithmetics operations that can’t underflow/overflow</strong></li>\n</ul>\n<blockquote>\n<p>Solidity version 0.8+ comes with implicit overflow and underflow checks on unsigned integers. When an overflow or an underflow isn’t possible (as an example, when a comparison is made before the arithmetic operation, or the operation doesn’t depend on user input), some gas can be saved by using an <code>unchecked</code> block: <a href=\"https://docs.soliditylang.org/en/v0.8.10/control-structures.html#checked-or-unchecked-arithmetic\">https://docs.soliditylang.org/en/v0.8.10/control-structures.html#checked-or-unchecked-arithmetic</a></p>\n</blockquote>\n<ul>\n<li><strong><code>@audit</code> tags</strong></li>\n</ul>\n<blockquote>\n<p>The code is annotated at multiple places with <code>//@audit</code> comments to pinpoint the issues. Please, pay attention to them for more details.</p>\n</blockquote>\n<h2 id=\"file-lptokensol\" style=\"position:relative;\"><a href=\"#file-lptokensol\" aria-label=\"file lptokensol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>File: LPToken.sol</h2>\n<h3 id=\"function-updatetokenmetadata\" style=\"position:relative;\"><a href=\"#function-updatetokenmetadata\" aria-label=\"function updatetokenmetadata permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function updateTokenMetadata()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">89</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateTokenMetadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">LpTokenMetadata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_lpTokenMetadata</span><span class=\"mtk1\">) </span><span class=\"mtk3\">//@audit should be calldata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">90:         </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">91:         </span><span class=\"mtk11\">onlyHyphenPools</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">92:         </span><span class=\"mtk11\">whenNotPaused</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">93:     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">94</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_exists</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tokenId</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__TOKEN_DOES_NOT_EXIST&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">95</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">tokenMetadata</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_tokenId</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_lpTokenMetadata</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">96</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h4 id=\"use-calldata-instead-of-memory-for-lptokenmetadata-memory-_lptokenmetadata\" style=\"position:relative;\"><a href=\"#use-calldata-instead-of-memory-for-lptokenmetadata-memory-_lptokenmetadata\" aria-label=\"use calldata instead of memory for lptokenmetadata memory _lptokenmetadata permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use <code>calldata</code> instead of <code>memory</code> for <code>LpTokenMetadata memory _lpTokenMetadata</code></h4>\n<p>When arguments are read-only on external functions, the data location should be <code>calldata</code>.\nHere, <code>LpTokenMetadata memory _lpTokenMetadata</code> should be <code>LpTokenMetadata calldata _lpTokenMetadata</code></p>\n<h3 id=\"function-tokenuri\" style=\"position:relative;\"><a href=\"#function-tokenuri\" aria-label=\"function tokenuri permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function tokenURI()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">112</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">tokenURI</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">124:         </span><span class=\"mtk11\">string</span><span class=\"mtk1\"> </span><span class=\"mtk11\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk11\">svgData</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">svgHelper</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTokenSvg</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">125:             </span><span class=\"mtk10\">tokenId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">126:             </span><span class=\"mtk10\">tokenMetadata</span><span class=\"mtk1\">[</span><span class=\"mtk10\">tokenId</span><span class=\"mtk1\">].</span><span class=\"mtk10\">suppliedLiquidity</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//@audit tokenMetadata[tokenId].suppliedLiquidity SLOAD 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">127:             </span><span class=\"mtk10\">ILiquidityProviders</span><span class=\"mtk1\">(</span><span class=\"mtk10\">liquidityProvidersAddress</span><span class=\"mtk1\">).</span><span class=\"mtk10\">totalReserve</span><span class=\"mtk1\">(</span><span class=\"mtk10\">tokenAddress</span><span class=\"mtk1\">) </span><span class=\"mtk3\">//@audit external call 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">128</span><span class=\"mtk1\">:         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">129</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">130</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">description</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">svgHelper</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getDescription</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">tokenMetadata</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">suppliedLiquidity</span><span class=\"mtk1\">,</span><span class=\"mtk3\">//@audit tokenMetadata[tokenId].suppliedLiquidity SLOAD 2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">132</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">ILiquidityProviders</span><span class=\"mtk1\">(</span><span class=\"mtk12\">liquidityProvidersAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">totalReserve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">) </span><span class=\"mtk3\">//@audit external call 2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">133</span><span class=\"mtk1\">:         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">134</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">135</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">attributes</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">svgHelper</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAttributes</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">136</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">tokenMetadata</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">suppliedLiquidity</span><span class=\"mtk1\">,</span><span class=\"mtk3\">//@audit tokenMetadata[tokenId].suppliedLiquidity SLOAD 3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">137</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">ILiquidityProviders</span><span class=\"mtk1\">(</span><span class=\"mtk12\">liquidityProvidersAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">totalReserve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">) </span><span class=\"mtk3\">//@audit external call 3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">138</span><span class=\"mtk1\">:         );</span></span></span></code></pre>\n<h4 id=\"cache-tokenmetadatatokenidsuppliedliquidity\" style=\"position:relative;\"><a href=\"#cache-tokenmetadatatokenidsuppliedliquidity\" aria-label=\"cache tokenmetadatatokenidsuppliedliquidity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>tokenMetadata[tokenId].suppliedLiquidity</code></h4>\n<p>Storage readings are expensive.\nCaching this in a memory variable can save around 2 SLOADs</p>\n<h4 id=\"cache-iliquidityprovidersliquidityprovidersaddresstotalreservetokenaddress\" style=\"position:relative;\"><a href=\"#cache-iliquidityprovidersliquidityprovidersaddresstotalreservetokenaddress\" aria-label=\"cache iliquidityprovidersliquidityprovidersaddresstotalreservetokenaddress permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>ILiquidityProviders(liquidityProvidersAddress).totalReserve(tokenAddress)</code></h4>\n<p>External calls are expensive.\nCaching this in a memory variable can save around 2 external calls.</p>\n<h3 id=\"function-_beforetokentransfer\" style=\"position:relative;\"><a href=\"#function-_beforetokentransfer\" aria-label=\"function _beforetokentransfer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function _beforeTokenTransfer()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_beforeTokenTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">181:         </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">182:         </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">183:         </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">tokenId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">184</span><span class=\"mtk1\">:     ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ERC721EnumerableUpgradeable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ERC721Upgradeable</span><span class=\"mtk1\">) </span><span class=\"mtk11\">whenNotPaused</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:         </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.</span><span class=\"mtk11\">_beforeTokenTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">from</span><span class=\"mtk1\">, </span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">186</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">187</span><span class=\"mtk1\">:         </span><span class=\"mtk3\">// Only call whitelist period manager for NFT Transfers, not mint and burns</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">188</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">from</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) &amp;&amp; </span><span class=\"mtk12\">to</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) { </span><span class=\"mtk3\">//@audit-issue</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">189</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">whiteListPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">beforeLiquidityTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">190</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">191</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">192</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">tokenMetadata</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">193</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">tokenMetadata</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">suppliedLiquidity</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">194</span><span class=\"mtk1\">:             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">195</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">196</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h4 id=\"short-circuiting-can-save-gas\" style=\"position:relative;\"><a href=\"#short-circuiting-can-save-gas\" aria-label=\"short circuiting can save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Short-circuiting can save gas</h4>\n<p>The condition L188 can be short-circuited to provide a happy path with the following optimization:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">from</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) || </span><span class=\"mtk12\">to</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">whiteListPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">beforeLiquidityTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">from</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">to</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenMetadata</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokenMetadata</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">suppliedLiquidity</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span></code></pre>\n<p>This way, the gas from evaluating the second condition can be saved in case of minting (in this scenario, we’re expecting more minting than burning, therefore making a happy path for it).</p>\n<h2 id=\"file-tokenmanagersol\" style=\"position:relative;\"><a href=\"#file-tokenmanagersol\" aria-label=\"file tokenmanagersol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>File: TokenManager.sol</h2>\n<h3 id=\"tight-packing-struct-tokeninfo\" style=\"position:relative;\"><a href=\"#tight-packing-struct-tokeninfo\" aria-label=\"tight packing struct tokeninfo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tight Packing <code>struct TokenInfo</code></h3>\n<p>To save 1 slot, the struct should go from:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">ITokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">06</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TokenInfo</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">07</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">transferOverhead</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit 32 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">08</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supportedToken</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit 1 byte</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">09</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit 32 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">10</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxFee</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit 32 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">11</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">TokenConfig</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenConfig</span><span class=\"mtk1\">;</span><span class=\"mtk3\">//@audit 20 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">12</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>to</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">06</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TokenInfo</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">07</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">transferOverhead</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit 32 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">08</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit 32 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">09</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxFee</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit 32 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">10</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">TokenConfig</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenConfig</span><span class=\"mtk1\">;</span><span class=\"mtk3\">//@audit 20 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">11</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supportedToken</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit 1 byte</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">12</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h3 id=\"function-changefee\" style=\"position:relative;\"><a href=\"#function-changefee\" aria-label=\"function changefee permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function changeFee()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">44</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">changeFee</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">45:         </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">tokenAddress</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">46:         </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_equilibriumFee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">47:         </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_maxFee</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">48</span><span class=\"mtk1\">:     ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">whenNotPaused</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">49</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_equilibriumFee</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Equilibrium Fee cannot be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">50</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_maxFee</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Max Fee cannot be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">51</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">tokensInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">].</span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_equilibriumFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">52</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">tokensInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">].</span><span class=\"mtk12\">maxFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_maxFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">53</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FeeChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokensInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">].</span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokensInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">].</span><span class=\"mtk12\">maxFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">54</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h4 id=\"storage-optimization\" style=\"position:relative;\"><a href=\"#storage-optimization\" aria-label=\"storage optimization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Storage optimization</h4>\n<p>Instead of fetching the storage value multiple times from the array, it’s possible to save some gas and help the optimizer by using a storage variable:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">TokenInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tokenInfo</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokensInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_tokenInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_equilibriumFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_tokenInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maxFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_maxFee</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h4 id=\"emitting-storage-value\" style=\"position:relative;\"><a href=\"#emitting-storage-value\" aria-label=\"emitting storage value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Emitting storage value</h4>\n<p>Storage values are being emitted L53.\nI suggest using:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">FeeChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_equilibriumFee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_maxFee</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h3 id=\"function-setdepositconfig\" style=\"position:relative;\"><a href=\"#function-setdepositconfig\" aria-label=\"function setdepositconfig permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function setDepositConfig()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">69</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setDepositConfig</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">70:         </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">toChainId</span><span class=\"mtk1\">,</span><span class=\"mtk3\">//@audit should be calldata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">71:         </span><span class=\"mtk10\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">tokenAddresses</span><span class=\"mtk1\">,</span><span class=\"mtk3\">//@audit should be calldata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">72:         </span><span class=\"mtk10\">TokenConfig</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">tokenConfig</span><span class=\"mtk3\">//@audit should be calldata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">:     ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">74</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">:             (</span><span class=\"mtk12\">toChainId</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">tokenAddresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">) &amp;&amp; (</span><span class=\"mtk12\">tokenAddresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">tokenConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">76</span><span class=\"mtk1\">:             </span><span class=\"mtk8\">&quot; ERR_ARRAY_LENGTH_MISMATCH&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">77</span><span class=\"mtk1\">:         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">index</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">index</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">index</span><span class=\"mtk1\">) { </span><span class=\"mtk3\">//@audit use storage var</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">depositConfig</span><span class=\"mtk1\">[</span><span class=\"mtk12\">toChainId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">index</span><span class=\"mtk1\">]][</span><span class=\"mtk12\">tokenAddresses</span><span class=\"mtk1\">[</span><span class=\"mtk12\">index</span><span class=\"mtk1\">]].</span><span class=\"mtk12\">min</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenConfig</span><span class=\"mtk1\">[</span><span class=\"mtk12\">index</span><span class=\"mtk1\">].</span><span class=\"mtk12\">min</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">80</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">depositConfig</span><span class=\"mtk1\">[</span><span class=\"mtk12\">toChainId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">index</span><span class=\"mtk1\">]][</span><span class=\"mtk12\">tokenAddresses</span><span class=\"mtk1\">[</span><span class=\"mtk12\">index</span><span class=\"mtk1\">]].</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenConfig</span><span class=\"mtk1\">[</span><span class=\"mtk12\">index</span><span class=\"mtk1\">].</span><span class=\"mtk12\">max</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">82</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h4 id=\"use-calldata-instead-of-memory-for-uint256-memory-tochainid\" style=\"position:relative;\"><a href=\"#use-calldata-instead-of-memory-for-uint256-memory-tochainid\" aria-label=\"use calldata instead of memory for uint256 memory tochainid permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use <code>calldata</code> instead of <code>memory</code> for <code>uint256[] memory toChainId</code></h4>\n<h4 id=\"use-calldata-instead-of-memory-for-address-memory-tokenaddresses\" style=\"position:relative;\"><a href=\"#use-calldata-instead-of-memory-for-address-memory-tokenaddresses\" aria-label=\"use calldata instead of memory for address memory tokenaddresses permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use <code>calldata</code> instead of <code>memory</code> for <code>address[] memory tokenAddresses</code></h4>\n<h4 id=\"use-calldata-instead-of-memory-for-tokenconfig-memory-tokenconfig\" style=\"position:relative;\"><a href=\"#use-calldata-instead-of-memory-for-tokenconfig-memory-tokenconfig\" aria-label=\"use calldata instead of memory for tokenconfig memory tokenconfig permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use <code>calldata</code> instead of <code>memory</code> for <code>TokenConfig[] memory tokenConfig</code></h4>\n<h4 id=\"storage-usage-optimization\" style=\"position:relative;\"><a href=\"#storage-usage-optimization\" aria-label=\"storage usage optimization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Storage usage optimization</h4>\n<p>I suggest going from:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">depositConfig</span><span class=\"mtk1\">[</span><span class=\"mtk12\">toChainId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">index</span><span class=\"mtk1\">]][</span><span class=\"mtk12\">tokenAddresses</span><span class=\"mtk1\">[</span><span class=\"mtk12\">index</span><span class=\"mtk1\">]].</span><span class=\"mtk12\">min</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenConfig</span><span class=\"mtk1\">[</span><span class=\"mtk12\">index</span><span class=\"mtk1\">].</span><span class=\"mtk12\">min</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">depositConfig</span><span class=\"mtk1\">[</span><span class=\"mtk12\">toChainId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">index</span><span class=\"mtk1\">]][</span><span class=\"mtk12\">tokenAddresses</span><span class=\"mtk1\">[</span><span class=\"mtk12\">index</span><span class=\"mtk1\">]].</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenConfig</span><span class=\"mtk1\">[</span><span class=\"mtk12\">index</span><span class=\"mtk1\">].</span><span class=\"mtk12\">max</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">TokenConfig</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_sTokenConfig</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">depositConfig</span><span class=\"mtk1\">[</span><span class=\"mtk12\">toChainId</span><span class=\"mtk1\">[</span><span class=\"mtk12\">index</span><span class=\"mtk1\">]][</span><span class=\"mtk12\">tokenAddresses</span><span class=\"mtk1\">[</span><span class=\"mtk12\">index</span><span class=\"mtk1\">]];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">_sTokenConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">min</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenConfig</span><span class=\"mtk1\">[</span><span class=\"mtk12\">index</span><span class=\"mtk1\">].</span><span class=\"mtk12\">min</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">_sTokenConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenConfig</span><span class=\"mtk1\">[</span><span class=\"mtk12\">index</span><span class=\"mtk1\">].</span><span class=\"mtk12\">max</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h3 id=\"function-gettokensinfo\" style=\"position:relative;\"><a href=\"#function-gettokensinfo\" aria-label=\"function gettokensinfo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function getTokensInfo()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getTokensInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">TokenInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">116</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">TokenInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenInfo</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">TokenInfo</span><span class=\"mtk1\">( </span><span class=\"mtk3\">//@audit can simply return this instead of saving in a memory var (MSTORE + MLOAD to save)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">117</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">tokensInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">].</span><span class=\"mtk12\">transferOverhead</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">118</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">tokensInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">].</span><span class=\"mtk12\">supportedToken</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">tokensInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">].</span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">120</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">tokensInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">].</span><span class=\"mtk12\">maxFee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">121</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">transferConfig</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span><span class=\"mtk1\">:         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">123</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenInfo</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">124</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h4 id=\"the-variable-tokeninfo-is-only-used-once-inline-it\" style=\"position:relative;\"><a href=\"#the-variable-tokeninfo-is-only-used-once-inline-it\" aria-label=\"the variable tokeninfo is only used once inline it permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The variable <code>tokenInfo</code> is only used once: inline it</h4>\n<p>I suggest the following optimization:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getTokensInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">TokenInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TokenInfo</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokensInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">].</span><span class=\"mtk12\">transferOverhead</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokensInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">].</span><span class=\"mtk12\">supportedToken</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokensInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">].</span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">tokensInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">].</span><span class=\"mtk12\">maxFee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">transferConfig</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>I believe we can go further here, as the copy in memory is done manually here. As <code>TokenConfig</code> is already contained inside the <code>TokenInfo</code> struct, this should be the best option:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getTokensInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">TokenInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokensInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"file-liquidityfarmingsol\" style=\"position:relative;\"><a href=\"#file-liquidityfarmingsol\" aria-label=\"file liquidityfarmingsol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>File: LiquidityFarming.sol</h2>\n<h3 id=\"tight-packing-struct-nftinfo\" style=\"position:relative;\"><a href=\"#tight-packing-struct-nftinfo\" aria-label=\"tight packing struct nftinfo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tight Packing <code>struct NFTInfo</code></h3>\n<p>To save 1 slot, I suggest going from:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">NFTInfo</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">staker</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit-info 20 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">31</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardDebt</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit-info 32 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unpaidRewards</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit-info 32 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isStaked</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit-info 1 byte</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">34</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>to</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">NFTInfo</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardDebt</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit-info 32 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">31</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unpaidRewards</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit-info 32 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">staker</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit-info 20 bytes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isStaked</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit-info 1 byte</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">34</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h3 id=\"function-_senderc20andgetsentamount\" style=\"position:relative;\"><a href=\"#function-_senderc20andgetsentamount\" aria-label=\"function _senderc20andgetsentamount permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function _sendErc20AndGetSentAmount()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">109</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_sendErc20AndGetSentAmount</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">110:         </span><span class=\"mtk10\">IERC20Upgradeable</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_token</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">111:         </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">112:         </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_to</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">:     ) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">114</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recepientBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_to</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">116</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_to</span><span class=\"mtk1\">) - </span><span class=\"mtk12\">recepientBalance</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit should be unchecked (see L114-L115)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">117</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h4 id=\"uncheck-l116\" style=\"position:relative;\"><a href=\"#uncheck-l116\" aria-label=\"uncheck l116 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uncheck L116</h4>\n<p>This line can’t underflow due to L114-L115. Therefore, it should be wrapped in an <code>unchecked</code> block.</p>\n<h3 id=\"function-deposit\" style=\"position:relative;\"><a href=\"#function-deposit\" aria-label=\"function deposit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function deposit()</h3>\n<h4 id=\"consider-adding-a-function-in-ilptoken-to-save-1-external-call\" style=\"position:relative;\"><a href=\"#consider-adding-a-function-in-ilptoken-to-save-1-external-call\" aria-label=\"consider adding a function in ilptoken to save 1 external call permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Consider adding a function in <code>ILPToken</code> to save 1 external call</h4>\n<p>Here, if a function is added in <code>ILPToken</code> to check both conditions in 1 call, it could save 1 external call:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">199</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">200</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">lpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">isApprovedForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) || </span><span class=\"mtk12\">lpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getApproved</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">) == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk3\">//@audit save 1 external call with a new method</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">201</span><span class=\"mtk1\">:             </span><span class=\"mtk8\">&quot;ERR__NOT_APPROVED&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">202</span><span class=\"mtk1\">:         );</span></span></span></code></pre>\n<h3 id=\"function-withdraw\" style=\"position:relative;\"><a href=\"#function-withdraw\" aria-label=\"function withdraw permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function withdraw()</h3>\n<h4 id=\"uncheck-l240\" style=\"position:relative;\"><a href=\"#uncheck-l240\" aria-label=\"uncheck l240 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uncheck L240</h4>\n<p>As <code>nftIdsStaked[msgSender][index] = nftIdsStaked[msgSender][nftIdsStaked[msgSender].length - 1];</code> can never underflow due to the require statement above it and the for-loop, it should be wrapped in an <code>unchecked</code> block.</p>\n<h4 id=\"use-the-existing-variable-nftsstakedlength-instead-of-nftidsstakedmsgsenderlength\" style=\"position:relative;\"><a href=\"#use-the-existing-variable-nftsstakedlength-instead-of-nftidsstakedmsgsenderlength\" aria-label=\"use the existing variable nftsstakedlength instead of nftidsstakedmsgsenderlength permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use the existing variable <code>nftsStakedLength</code> instead of <code>nftIdsStaked[msgSender].length</code></h4>\n<p>As no push or pop operations are done yet, I suggest going from:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">231</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftsStakedLength</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">nftIdsStaked</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\">].</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">240</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">nftIdsStaked</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\">][</span><span class=\"mtk12\">index</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">nftIdsStaked</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\">][</span><span class=\"mtk12\">nftIdsStaked</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\">].</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<p>to</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">231</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nftsStakedLength</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">nftIdsStaked</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\">].</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">240</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">nftIdsStaked</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\">][</span><span class=\"mtk12\">index</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">nftIdsStaked</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msgSender</span><span class=\"mtk1\">][</span><span class=\"mtk12\">nftsStakedLength</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<h3 id=\"function-getupdatedacctokenpershare\" style=\"position:relative;\"><a href=\"#function-getupdatedacctokenpershare\" aria-label=\"function getupdatedacctokenpershare permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function getUpdatedAccTokenPerShare()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">265</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getUpdatedAccTokenPerShare</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">274</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">275</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">accumulator</span><span class=\"mtk1\"> +=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">276</span><span class=\"mtk1\">:                     </span><span class=\"mtk12\">rewardRateLog</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">rewardsPerSecond</span><span class=\"mtk1\"> * </span><span class=\"mtk3\">// @audit rewardRateLog[_baseToken][i] in storage</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">277</span><span class=\"mtk1\">:                     (</span><span class=\"mtk12\">counter</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">max</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lastUpdatedTime</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rewardRateLog</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">)); </span><span class=\"mtk3\">//@audit rewardRateLog[_baseToken][i].timestamp SLOAD 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">278</span><span class=\"mtk1\">:             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">279</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">counter</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewardRateLog</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit rewardRateLog[_baseToken][i].timestamp SLOAD 2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">280</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">i</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">281</span><span class=\"mtk1\">:                 </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">282</span><span class=\"mtk1\">:             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">283</span><span class=\"mtk1\">:             --</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span><span class=\"mtk3\">//@audit should be unchecked (see L280-L281)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">284</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span></code></pre>\n<h4 id=\"storage-usage-optimization-1\" style=\"position:relative;\"><a href=\"#storage-usage-optimization-1\" aria-label=\"storage usage optimization 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Storage usage optimization</h4>\n<h4 id=\"cache-rewardratelog_basetokenitimestamp-in-memory\" style=\"position:relative;\"><a href=\"#cache-rewardratelog_basetokenitimestamp-in-memory\" aria-label=\"cache rewardratelog_basetokenitimestamp in memory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>rewardRateLog[_baseToken][i].timestamp</code> in memory</h4>\n<h4 id=\"uncheck-l283\" style=\"position:relative;\"><a href=\"#uncheck-l283\" aria-label=\"uncheck l283 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uncheck L283</h4>\n<p>Here, it’s possible to save a substantial amount of gas with the following optimization (taking into account the 3 titles above):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">true</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">lastUpdatedTime</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">counter</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">RewardsPerSecondEntry</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_reward</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewardRateLog</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">][</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]; </span><span class=\"mtk3\">//@audit added code</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_timestamp</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_reward</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit added code</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">accumulator</span><span class=\"mtk1\"> +=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">_reward</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewardsPerSecond</span><span class=\"mtk1\"> * </span><span class=\"mtk3\">// @audit storage optimization</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    (</span><span class=\"mtk12\">counter</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">max</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lastUpdatedTime</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_timestamp</span><span class=\"mtk1\">)); </span><span class=\"mtk3\">//@audit MLOAD</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">counter</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_timestamp</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit MLOAD</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">i</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                --</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span><span class=\"mtk3\">//@audit now unchecked</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<h3 id=\"function-max\" style=\"position:relative;\"><a href=\"#function-max\" aria-label=\"function max permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function max()</h3>\n<h4 id=\"a-private-function-used-only-once-should-get-inlined\" style=\"position:relative;\"><a href=\"#a-private-function-used-only-once-should-get-inlined\" aria-label=\"a private function used only once should get inlined permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A private function used only once should get inlined</h4>\n<p>As <code>function max()</code> is a private function (not inherited) that is only used once in the contract (L277), it should get inlined.</p>\n<h2 id=\"file-liquiditypoolsol\" style=\"position:relative;\"><a href=\"#file-liquiditypoolsol\" aria-label=\"file liquiditypoolsol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>File: LiquidityPool.sol</h2>\n<h3 id=\"modifier-onlyliquidityproviders\" style=\"position:relative;\"><a href=\"#modifier-onlyliquidityproviders\" aria-label=\"modifier onlyliquidityproviders permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>modifier onlyLiquidityProviders()</h3>\n<h4 id=\"modifier-onlyliquidityproviders-is-used-only-once-and-should-get-inlined\" style=\"position:relative;\"><a href=\"#modifier-onlyliquidityproviders-is-used-only-once-and-should-get-inlined\" aria-label=\"modifier onlyliquidityproviders is used only once and should get inlined permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>modifier onlyLiquidityProviders()</code> is used only once and should get inlined</h4>\n<p>As <code>modifier onlyLiquidityProviders()</code> is only used once (on <code>function transfer()</code>), it should get inlined.</p>\n<h3 id=\"function-depositerc20\" style=\"position:relative;\"><a href=\"#function-depositerc20\" aria-label=\"function depositerc20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function depositErc20()</h3>\n<h4 id=\"avoid-multiple-external-calls-on-tokenmanagergetdepositconfigtochainid-tokenaddress\" style=\"position:relative;\"><a href=\"#avoid-multiple-external-calls-on-tokenmanagergetdepositconfigtochainid-tokenaddress\" aria-label=\"avoid multiple external calls on tokenmanagergetdepositconfigtochainid tokenaddress permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Avoid multiple external calls on <code>tokenManager.getDepositConfig(toChainId, tokenAddress)</code></h4>\n<p>The code can be optimized from:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">156</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">157</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getDepositConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">toChainId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk12\">min</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk3\">//@audit external call 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">158</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getDepositConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">toChainId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//@audit external call 2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">159</span><span class=\"mtk1\">:             </span><span class=\"mtk8\">&quot;Deposit amount not in Cap limit&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">160</span><span class=\"mtk1\">:         );</span></span></span></code></pre>\n<p>to</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">156</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">ITokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TokenConfig</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_depositConfig</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getDepositConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">toChainId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit external call 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">157</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">158</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">_depositConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">min</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk3\">//@audit MLOAD</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">159</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">_depositConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//@audit MLOAD</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">160</span><span class=\"mtk1\">:             </span><span class=\"mtk8\">&quot;Deposit amount not in Cap limit&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">161</span><span class=\"mtk1\">:         );</span></span></span></code></pre>\n<h3 id=\"function-getrewardamount\" style=\"position:relative;\"><a href=\"#function-getrewardamount\" aria-label=\"function getrewardamount permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function getRewardAmount()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">175</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getRewardAmount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardAmount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">176</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentLiquidity</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getCurrentLiquidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">177</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">providedLiquidity</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">liquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getSuppliedLiquidityByToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">178</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">currentLiquidity</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">providedLiquidity</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">liquidityDifference</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">providedLiquidity</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">currentLiquidity</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit should be unchecked (see L178)</span></span></span></code></pre>\n<h4 id=\"uncheck-l179\" style=\"position:relative;\"><a href=\"#uncheck-l179\" aria-label=\"uncheck l179 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uncheck L179</h4>\n<p>As <code>providedLiquidity - currentLiquidity</code> can never underflow due to the if statement above it, it should be wrapped in an <code>unchecked</code> block.</p>\n<h3 id=\"function-depositnative\" style=\"position:relative;\"><a href=\"#function-depositnative\" aria-label=\"function depositnative permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function depositNative()</h3>\n<h4 id=\"avoid-multiple-external-calls-on-tokenmanagergetdepositconfigtochainid-native\" style=\"position:relative;\"><a href=\"#avoid-multiple-external-calls-on-tokenmanagergetdepositconfigtochainid-native\" aria-label=\"avoid multiple external calls on tokenmanagergetdepositconfigtochainid native permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Avoid multiple external calls on <code>tokenManager.getDepositConfig(toChainId, NATIVE)</code></h4>\n<p>The code can be optimized from:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">247</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">248</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getDepositConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">toChainId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">NATIVE</span><span class=\"mtk1\">).</span><span class=\"mtk12\">min</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk3\">//@audit external call 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">249</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getDepositConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">toChainId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">NATIVE</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//@audit external call 2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">250</span><span class=\"mtk1\">:             </span><span class=\"mtk8\">&quot;Deposit amount not in Cap limit&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">251</span><span class=\"mtk1\">:         );</span></span></span></code></pre>\n<p>to</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">247</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">ITokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TokenConfig</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_depositConfig</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getDepositConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">toChainId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">NATIVE</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit external call 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">248</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">249</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">_depositConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">min</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk3\">//@audit MLOAD</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">250</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">_depositConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//@audit MLOAD</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">251</span><span class=\"mtk1\">:             </span><span class=\"mtk8\">&quot;Deposit amount not in Cap limit&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">252</span><span class=\"mtk1\">:         );</span></span></span></code></pre>\n<h3 id=\"function-sendfundstouser\" style=\"position:relative;\"><a href=\"#function-sendfundstouser\" aria-label=\"function sendfundstouser permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function sendFundsToUser()</h3>\n<h4 id=\"avoid-multiple-external-calls-on-tokenmanagergettransferconfigtokenaddress\" style=\"position:relative;\"><a href=\"#avoid-multiple-external-calls-on-tokenmanagergettransferconfigtokenaddress\" aria-label=\"avoid multiple external calls on tokenmanagergettransferconfigtokenaddress permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Avoid multiple external calls on <code>tokenManager.getTransferConfig(tokenAddress)</code></h4>\n<p>The code can be optimized from:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">272</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">273</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTransferConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk12\">min</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk3\">//@audit external call 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">274</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTransferConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//@audit external call 2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">275</span><span class=\"mtk1\">:             </span><span class=\"mtk8\">&quot;Withdraw amnt not in Cap limits&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">276</span><span class=\"mtk1\">:         );</span></span></span></code></pre>\n<p>to</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">272</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">ITokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TokenConfig</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_transferConfig</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTransferConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit external call 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">273</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">274</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">_transferConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">min</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk3\">//@audit MLOAD</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">275</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">_transferConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//@audit MLOAD</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">276</span><span class=\"mtk1\">:             </span><span class=\"mtk8\">&quot;Withdraw amnt not in Cap limits&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">277</span><span class=\"mtk1\">:         );</span></span></span></code></pre>\n<h4 id=\"reorder-require-statements-to-save-gas-on-revert\" style=\"position:relative;\"><a href=\"#reorder-require-statements-to-save-gas-on-revert\" aria-label=\"reorder require statements to save gas on revert permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reorder require statements to save gas on revert</h4>\n<p>Here, there are two require statements:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">272</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">273</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTransferConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk12\">min</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">274</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTransferConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">275</span><span class=\"mtk1\">:             </span><span class=\"mtk8\">&quot;Withdraw amnt not in Cap limits&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">276</span><span class=\"mtk1\">:         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">277</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Bad receiver address&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit should be 1st require</span></span></span></code></pre>\n<p>The second require statement is a simple condition that is a lot less expensive than the first one. In case of revert on the second require statement, all the gas from the first require would be wasted (2 external calls, or 1 after the optimization).\nI suggest reordering the require statements to put this one first.</p>\n<h3 id=\"function-getamounttotransfer\" style=\"position:relative;\"><a href=\"#function-getamounttotransfer\" aria-label=\"function getamounttotransfer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function getAmountToTransfer()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">308</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getAmountToTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">316:         </span><span class=\"mtk10\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk10\">transferFeePerc</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk10\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk10\">getTokensInfo</span><span class=\"mtk1\">(</span><span class=\"mtk10\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk10\">equilibriumFee</span><span class=\"mtk1\">) { </span><span class=\"mtk3\">//@audit external call 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">317</span><span class=\"mtk1\">:             </span><span class=\"mtk3\">// Here add some fee to incentive pool also</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">318</span><span class=\"mtk1\">:             </span><span class=\"mtk10\">lpFee</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTokensInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">BASE_DIVISOR</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit external call 2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">319</span><span class=\"mtk1\">:             </span><span class=\"mtk10\">incentivePool</span><span class=\"mtk1\">[</span><span class=\"mtk10\">tokenAddress</span><span class=\"mtk1\">] =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">320</span><span class=\"mtk1\">:                 (</span><span class=\"mtk12\">incentivePool</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">] +</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">321</span><span class=\"mtk1\">:                     (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * (</span><span class=\"mtk12\">transferFeePerc</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTokensInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\">))) / </span><span class=\"mtk3\">//@audit substraction should be unchecked //@audit external call 3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">322</span><span class=\"mtk1\">:                 </span><span class=\"mtk10\">BASE_DIVISOR</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h4 id=\"avoid-multiple-external-calls-on-tokenmanagergettokensinfotokenaddressequilibriumfee\" style=\"position:relative;\"><a href=\"#avoid-multiple-external-calls-on-tokenmanagergettokensinfotokenaddressequilibriumfee\" aria-label=\"avoid multiple external calls on tokenmanagergettokensinfotokenaddressequilibriumfee permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Avoid multiple external calls on <code>tokenManager.getTokensInfo(tokenAddress).equilibriumFee</code></h4>\n<p><code>tokenManager.getTokensInfo(tokenAddress).equilibriumFee</code> should get cached to avoid 2 unnecessary external calls.</p>\n<h4 id=\"uncheck-l321\" style=\"position:relative;\"><a href=\"#uncheck-l321\" aria-label=\"uncheck l321 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uncheck L321</h4>\n<p>As <code>transferFeePerc - tokenManager.getTokensInfo(tokenAddress).equilibriumFee</code> can never underflow due to the if statement above it L316, it should be wrapped in an <code>unchecked</code> block.</p>\n<h3 id=\"function-gettransferfee\" style=\"position:relative;\"><a href=\"#function-gettransferfee\" aria-label=\"function gettransferfee permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function getTransferFee()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">342</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getTransferFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">348</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTokensInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit external call 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">349</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTokensInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk12\">maxFee</span><span class=\"mtk1\">;</span><span class=\"mtk3\">//@audit external call 2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span></code></pre>\n<h4 id=\"avoid-multiple-external-calls-on-tokenmanagergettokensinfotokenaddress\" style=\"position:relative;\"><a href=\"#avoid-multiple-external-calls-on-tokenmanagergettokensinfotokenaddress\" aria-label=\"avoid multiple external calls on tokenmanagergettokensinfotokenaddress permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Avoid multiple external calls on <code>tokenManager.getTokensInfo(tokenAddress)</code></h4>\n<p>I suggest the following optimization:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">348</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">ITokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">TokenInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tokenInfo</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTokensInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit external call 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">349</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_tokenInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">equilibriumFee</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit MLOAD</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">350</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_tokenInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">maxFee</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit MLOAD</span></span></span></code></pre>\n<h2 id=\"file-liquidityproviderssol\" style=\"position:relative;\"><a href=\"#file-liquidityproviderssol\" aria-label=\"file liquidityproviderssol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>File: LiquidityProviders.sol</h2>\n<h3 id=\"storage\" style=\"position:relative;\"><a href=\"#storage\" aria-label=\"storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Storage</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">27</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">BASE_DIVISOR</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">10</span><span class=\"mtk1\">**</span><span class=\"mtk7\">18</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit gas use 1e18</span></span></span></code></pre>\n<h4 id=\"use-1e18-instead-of-1018-for-constant-base_divisor\" style=\"position:relative;\"><a href=\"#use-1e18-instead-of-1018-for-constant-base_divisor\" aria-label=\"use 1e18 instead of 1018 for constant base_divisor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use <code>1e18</code> instead of <code>10**18</code> for constant <code>BASE_DIVISOR</code></h4>\n<p>Due to how <code>constant</code> variables are implemented (constant expressions are expressions, not constants), <code>10**18</code> will be more expensive than <code>1e18</code>.</p>\n<h3 id=\"modifier-onlyvalidlptoken\" style=\"position:relative;\"><a href=\"#modifier-onlyvalidlptoken\" aria-label=\"modifier onlyvalidlptoken permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>modifier onlyValidLpToken()</h3>\n<h4 id=\"consider-adding-a-function-in-ilptoken-to-save-1-external-call-1\" style=\"position:relative;\"><a href=\"#consider-adding-a-function-in-ilptoken-to-save-1-external-call-1\" aria-label=\"consider adding a function in ilptoken to save 1 external call 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Consider adding a function in <code>ILPToken</code> to save 1 external call</h4>\n<p>Here, the modifier is quite expensive as it makes 2 external calls:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">53</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyValidLpToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_transactor</span><span class=\"mtk1\">) { </span><span class=\"mtk3\">//@audit expensive modifier. Create 1 method that returns both parametters</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">54</span><span class=\"mtk1\">:         (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, , ) = </span><span class=\"mtk12\">lpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenMetadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tokenId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">55</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">exists</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tokenId</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__TOKEN_DOES_NOT_EXIST&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit external call 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">56</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tokenId</span><span class=\"mtk1\">) == </span><span class=\"mtk12\">_transactor</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__TRANSACTOR_DOES_NOT_OWN_NFT&quot;</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//@audit external call 2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">57</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>Consider adding a method in <code>ILPToken</code> that both checks that <code>_tokenId</code> exists and returns the token’s owner.</p>\n<h3 id=\"function-_increasecurrentliquidity\" style=\"position:relative;\"><a href=\"#function-_increasecurrentliquidity\" aria-label=\"function _increasecurrentliquidity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function _increaseCurrentLiquidity()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">135</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_increaseCurrentLiquidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">136</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">currentLiquidity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit SLOAD 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">137</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CurrentLiquidityChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">currentLiquidity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">]-</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">currentLiquidity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">]); </span><span class=\"mtk3\">//@audit SLOAD 2 &amp; 3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">138</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h4 id=\"cache-currentliquiditytokenaddress\" style=\"position:relative;\"><a href=\"#cache-currentliquiditytokenaddress\" aria-label=\"cache currentliquiditytokenaddress permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>currentLiquidity[tokenAddress]</code></h4>\n<p>Caching this in a memory variable can save around 2 SLOADs. Here’s the full optimization:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">135</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_increaseCurrentLiquidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">136</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_currentLiquidity</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">currentLiquidity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">137</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_increasedLiquidity</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_currentLiquidity</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">138</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">currentLiquidity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_increasedLiquidity</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">139</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CurrentLiquidityChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_currentLiquidity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_increasedLiquidity</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">140</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h3 id=\"function-_decreasecurrentliquidity\" style=\"position:relative;\"><a href=\"#function-_decreasecurrentliquidity\" aria-label=\"function _decreasecurrentliquidity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function _decreaseCurrentLiquidity()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">140</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_decreaseCurrentLiquidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">141</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">currentLiquidity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">] -= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit SLOAD 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">142</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CurrentLiquidityChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">currentLiquidity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">]+</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">currentLiquidity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">]); </span><span class=\"mtk3\">//@audit SLOAD 2 &amp; 3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">143</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h4 id=\"cache-currentliquiditytokenaddress-1\" style=\"position:relative;\"><a href=\"#cache-currentliquiditytokenaddress-1\" aria-label=\"cache currentliquiditytokenaddress 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>currentLiquidity[tokenAddress]</code></h4>\n<p>Caching this in a memory variable can save around 2 SLOADs. Here’s the full optimization:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"74\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">140</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_decreaseCurrentLiquidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">141</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_currentLiquidity</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">currentLiquidity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">142</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_decreasedLiquidity</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_currentLiquidity</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">143</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">currentLiquidity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_decreasedLiquidity</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">144</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CurrentLiquidityChanged</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_currentLiquidity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_decreasedLiquidity</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">145</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h3 id=\"function-gettokenpriceinlpshares\" style=\"position:relative;\"><a href=\"#function-gettokenpriceinlpshares\" aria-label=\"function gettokenpriceinlpshares permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function getTokenPriceInLPShares()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"75\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getTokenPriceInLPShares</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalSharesMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalSharesMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">] / </span><span class=\"mtk12\">totalReserve</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">]; </span><span class=\"mtk3\">//@audit SLOAD : use supply.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">184</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">BASE_DIVISOR</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">186</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h4 id=\"use-supply-instead-of-totalsharesminted_basetoken\" style=\"position:relative;\"><a href=\"#use-supply-instead-of-totalsharesminted_basetoken\" aria-label=\"use supply instead of totalsharesminted_basetoken permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use <code>supply</code> instead of <code>totalSharesMinted[_baseToken]</code></h4>\n<p>At line 183, I suggest using <code>supply</code> instead of <code>totalSharesMinted[_baseToken]</code>. Full code:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"76\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getTokenPriceInLPShares</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalSharesMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supply</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">totalReserve</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">184</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">BASE_DIVISOR</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">186</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h3 id=\"function-_increaseliquidity\" style=\"position:relative;\"><a href=\"#function-_increaseliquidity\" aria-label=\"function _increaseliquidity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function _increaseLiquidity()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"77\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">280</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_increaseLiquidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyValidLpToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_msgSender</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">281</span><span class=\"mtk1\">:         (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalSuppliedLiquidity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalShares</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">lpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">tokenMetadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">282</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">283</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__AMOUNT_IS_0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">284</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">whiteListPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">beforeLiquidityAddition</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">285</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">286</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintedSharesAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">287</span><span class=\"mtk1\">:         </span><span class=\"mtk3\">// Adding liquidity in the pool for the first time</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">288</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalReserve</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) { </span><span class=\"mtk3\">//@audit totalReserve[token] SLOAD 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">289</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">mintedSharesAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">BASE_DIVISOR</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">290</span><span class=\"mtk1\">:         } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">291</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">mintedSharesAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">totalSharesMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token</span><span class=\"mtk1\">]) / </span><span class=\"mtk12\">totalReserve</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token</span><span class=\"mtk1\">]; </span><span class=\"mtk3\">//@audit totalReserve[token] SLOAD 2 //@audit totalSharesMinted[token] SLOAD 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">292</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">293</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">294</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mintedSharesAmount</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">BASE_DIVISOR</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__AMOUNT_BELOW_MIN_LIQUIDITY&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">295</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">296</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">totalLiquidity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">297</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">totalReserve</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit totalReserve[token] SLOAD 3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">298</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">totalSharesMinted</span><span class=\"mtk1\">[</span><span class=\"mtk12\">token</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">mintedSharesAmount</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit totalSharesMinted[token] SLOAD 2 (after 1st liquidity)</span></span></span></code></pre>\n<h4 id=\"cache-totalreservetoken\" style=\"position:relative;\"><a href=\"#cache-totalreservetoken\" aria-label=\"cache totalreservetoken permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>totalReserve[token]</code></h4>\n<p>Caching this in memory can save around 2 SLOADs</p>\n<h4 id=\"cache-totalsharesmintedtoken\" style=\"position:relative;\"><a href=\"#cache-totalsharesmintedtoken\" aria-label=\"cache totalsharesmintedtoken permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>totalSharesMinted[token]</code></h4>\n<p>Caching this in memory can save around 1 SLOAD (only after 1st liquidity adding in the pool for the first time)</p>\n<h2 id=\"file-whitelistperiodmanagersol\" style=\"position:relative;\"><a href=\"#file-whitelistperiodmanagersol\" aria-label=\"file whitelistperiodmanagersol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>File: WhitelistPeriodManager.sol</h2>\n<h3 id=\"modifier-onlylpnft\" style=\"position:relative;\"><a href=\"#modifier-onlylpnft\" aria-label=\"modifier onlylpnft permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>modifier onlyLpNft()</h3>\n<h4 id=\"modifier-onlylpnft-is-used-only-once-should-get-inlined\" style=\"position:relative;\"><a href=\"#modifier-onlylpnft-is-used-only-once-should-get-inlined\" aria-label=\"modifier onlylpnft is used only once should get inlined permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>modifier onlyLpNft()</code> is used only once should get inlined</h4>\n<p>As <code>modifier onlyLpNft()</code> is only used once (on <code>function beforeLiquidityTransfer()</code>), it should get inlined.</p>\n<h3 id=\"function-setisexcludedaddressstatus\" style=\"position:relative;\"><a href=\"#function-setisexcludedaddressstatus\" aria-label=\"function setisexcludedaddressstatus permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function setIsExcludedAddressStatus()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"78\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">178</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setIsExcludedAddressStatus</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_addresses</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_status</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> { </span><span class=\"mtk3\">//@audit should be calldata *2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_addresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_status</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__LENGTH_MISMATCH&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_addresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">isExcludedAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_addresses</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]] = </span><span class=\"mtk12\">_status</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ExcludedAddressStatusUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_addresses</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_status</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">184</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h4 id=\"use-calldata-instead-of-memory-for-address-memory-_addresses\" style=\"position:relative;\"><a href=\"#use-calldata-instead-of-memory-for-address-memory-_addresses\" aria-label=\"use calldata instead of memory for address memory _addresses permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use <code>calldata</code> instead of <code>memory</code> for <code>address[] memory _addresses</code></h4>\n<h4 id=\"use-calldata-instead-of-memory-for-bool-memory-_status\" style=\"position:relative;\"><a href=\"#use-calldata-instead-of-memory-for-bool-memory-_status\" aria-label=\"use calldata instead of memory for bool memory _status permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use <code>calldata</code> instead of <code>memory</code> for <code>bool[] memory _status</code></h4>\n<h3 id=\"function-setcaps\" style=\"position:relative;\"><a href=\"#function-setcaps\" aria-label=\"function setcaps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function setCaps()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"79\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">219</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setCaps</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">220:         </span><span class=\"mtk10\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_tokens</span><span class=\"mtk1\">, </span><span class=\"mtk3\">//@audit should be calldata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">221:         </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_totalCaps</span><span class=\"mtk1\">,</span><span class=\"mtk3\">//@audit should be calldata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">222:         </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_perTokenWalletCaps</span><span class=\"mtk3\">//@audit should be calldata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">223</span><span class=\"mtk1\">:     ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">224</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">225</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">_tokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_totalCaps</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">_totalCaps</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_perTokenWalletCaps</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">226</span><span class=\"mtk1\">:             </span><span class=\"mtk8\">&quot;ERR__LENGTH_MISMACH&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">227</span><span class=\"mtk1\">:         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">228</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_tokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">229</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">setCap</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_totalCaps</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_perTokenWalletCaps</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">230</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">231</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h4 id=\"use-calldata-instead-of-memory-for-address-memory-_tokens\" style=\"position:relative;\"><a href=\"#use-calldata-instead-of-memory-for-address-memory-_tokens\" aria-label=\"use calldata instead of memory for address memory _tokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use <code>calldata</code> instead of <code>memory</code> for <code>address[] memory _tokens</code></h4>\n<h4 id=\"use-calldata-instead-of-memory-for-uint256-memory-_totalcaps\" style=\"position:relative;\"><a href=\"#use-calldata-instead-of-memory-for-uint256-memory-_totalcaps\" aria-label=\"use calldata instead of memory for uint256 memory _totalcaps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use <code>calldata</code> instead of <code>memory</code> for <code>uint256[] memory _totalCaps</code></h4>\n<h4 id=\"use-calldata-instead-of-memory-for-uint256-memory-_pertokenwalletcaps\" style=\"position:relative;\"><a href=\"#use-calldata-instead-of-memory-for-uint256-memory-_pertokenwalletcaps\" aria-label=\"use calldata instead of memory for uint256 memory _pertokenwalletcaps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use <code>calldata</code> instead of <code>memory</code> for <code>uint256[] memory _perTokenWalletCaps</code></h4>\n<h3 id=\"function-ifenabled\" style=\"position:relative;\"><a href=\"#function-ifenabled\" aria-label=\"function ifenabled permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>function ifEnabled()</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"80\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">260</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ifEnabled</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_cond</span><span class=\"mtk1\">) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">261</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> !</span><span class=\"mtk12\">areWhiteListRestrictionsEnabled</span><span class=\"mtk1\"> || (</span><span class=\"mtk12\">areWhiteListRestrictionsEnabled</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">_cond</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit can save 1 SLOAD with (!areWhiteListRestrictionsEnabled || _cond) as the 2nd condition will evaluate only if areWhiteListRestrictionsEnabled == true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">262</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<h4 id=\"the-condition-can-be-optimized-to-save-a-sload\" style=\"position:relative;\"><a href=\"#the-condition-can-be-optimized-to-save-a-sload\" aria-label=\"the condition can be optimized to save a sload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The condition can be optimized to save a SLOAD</h4>\n<p><code>!areWhiteListRestrictionsEnabled || (areWhiteListRestrictionsEnabled &#x26;&#x26; _cond)</code> should be changed to <code>!areWhiteListRestrictionsEnabled || _cond</code> as the 2nd part of this statement will only evaluate if <code>areWhiteListRestrictionsEnabled == true</code>, therefore the explicit check isn’t necessary.</p>\n<h2 id=\"general-recommendations\" style=\"position:relative;\"><a href=\"#general-recommendations\" aria-label=\"general recommendations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>General recommendations</h2>\n<h3 id=\"version\" style=\"position:relative;\"><a href=\"#version\" aria-label=\"version permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Version</h3>\n<h4 id=\"upgrade-pragma-to-at-least-084\" style=\"position:relative;\"><a href=\"#upgrade-pragma-to-at-least-084\" aria-label=\"upgrade pragma to at least 084 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Upgrade pragma to at least 0.8.4</h4>\n<p>Using newer compiler versions and the optimizer give gas optimizations. Also, additional safety checks are available for free.</p>\n<p>The advantages here are:</p>\n<ul>\n<li><strong>Low level inliner</strong> (>= 0.8.2): Cheaper runtime gas (especially relevant when the contract has small functions).</li>\n<li><strong>Optimizer improvements in packed structs</strong> (>= 0.8.3)</li>\n<li><strong>Custom errors</strong> (>= 0.8.4): cheaper deployment cost and runtime cost. <em>Note</em>: the runtime cost is only relevant when the revert condition is met. In short, replace revert strings by custom errors.</li>\n</ul>\n<p>Instances include:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"81\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">2</span><span class=\"mtk1\">:</span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">3</span><span class=\"mtk1\">:</span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ExecutorManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">3</span><span class=\"mtk1\">:</span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">2</span><span class=\"mtk1\">:</span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">3</span><span class=\"mtk1\">:</span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">2</span><span class=\"mtk1\">:</span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">2</span><span class=\"mtk1\">:</span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>Consider upgrading pragma to at least 0.8.4.</p>\n<h3 id=\"variables\" style=\"position:relative;\"><a href=\"#variables\" aria-label=\"variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Variables</h3>\n<h4 id=\"no-need-to-explicitly-initialize-variables-with-default-values\" style=\"position:relative;\"><a href=\"#no-need-to-explicitly-initialize-variables-with-default-values\" aria-label=\"no need to explicitly initialize variables with default values permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>No need to explicitly initialize variables with default values</h4>\n<p>If a variable is not set/initialized, it is assumed to have the default value (<code>0</code> for <code>uint</code>, <code>false</code> for <code>bool</code>, <code>address(0)</code> for address…). Explicitly initializing it with its default value is an anti-pattern and wastes gas.</p>\n<p>As an example: <code>for (uint256 i = 0; i &#x3C; numIterations; ++i) {</code> should be replaced with <code>for (uint256 i; i &#x3C; numIterations; ++i) {</code></p>\n<p>Instances include:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"82\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">77</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">nftIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">78</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">index</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">index</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">index</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ExecutorManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">31</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">executorArray</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ExecutorManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">47</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">executorArray</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">233</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">index</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">index</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">nftsStakedLength</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">index</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">266</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accumulator</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">180</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_addresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">228</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_tokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">247</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">maxLp</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>I suggest removing explicit initializations for default values.</p>\n<h4 id=\"pre-increments-cost-less-gas-compared-to-post-increments\" style=\"position:relative;\"><a href=\"#pre-increments-cost-less-gas-compared-to-post-increments\" aria-label=\"pre increments cost less gas compared to post increments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pre-increments cost less gas compared to post-increments</h4>\n<h3 id=\"comparisons\" style=\"position:relative;\"><a href=\"#comparisons\" aria-label=\"comparisons permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Comparisons</h3>\n<h4 id=\"-0-is-less-efficient-than--0-for-unsigned-integers-with-proof\" style=\"position:relative;\"><a href=\"#-0-is-less-efficient-than--0-for-unsigned-integers-with-proof\" aria-label=\" 0 is less efficient than  0 for unsigned integers with proof permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>> 0</code> is less efficient than <code>!= 0</code> for unsigned integers (with proof)</h4>\n<p><code>!= 0</code> costs less gas compared to <code>> 0</code> for unsigned integers in <code>require</code> statements with the optimizer enabled (6 gas)</p>\n<p>Proof: While it may seem that <code>> 0</code> is cheaper than <code>!=</code>, this is only true without the optimizer enabled and outside a require statement. If you enable the optimizer at 10k AND you’re in a <code>require</code> statement, this will save gas. You can see this tweet for more proofs: <a href=\"https://twitter.com/gzeon/status/1485428085885640706\">https://twitter.com/gzeon/status/1485428085885640706</a></p>\n<p>I suggest changing <code>> 0</code> with <code>!= 0</code> here:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"83\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">239</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__AMOUNT_IS_0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">283</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__AMOUNT_IS_0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">410</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lpFeeAccumulated</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__NO_REWARDS_TO_CLAIM&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Also, please enable the Optimizer.</p>\n<h3 id=\"for-loops\" style=\"position:relative;\"><a href=\"#for-loops\" aria-label=\"for loops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>For-Loops</h3>\n<h4 id=\"an-arrays-length-should-be-cached-to-save-gas-in-for-loops\" style=\"position:relative;\"><a href=\"#an-arrays-length-should-be-cached-to-save-gas-in-for-loops\" aria-label=\"an arrays length should be cached to save gas in for loops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>An array’s length should be cached to save gas in for-loops</h4>\n<p>Reading array length at each iteration of the loop takes 6 gas (3 for mload and 3 to place memory_offset) in the stack.</p>\n<p>Caching the array length in the stack saves around 3 gas per iteration.</p>\n<p>Here, I suggest storing the array’s length in a variable before the for-loop, and use it instead:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"84\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">77</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">nftIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">78</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">index</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">index</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">index</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ExecutorManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">31</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">executorArray</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ExecutorManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">47</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">executorArray</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">180</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_addresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">228</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_tokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<h4 id=\"increments-can-be-unchecked\" style=\"position:relative;\"><a href=\"#increments-can-be-unchecked\" aria-label=\"increments can be unchecked permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Increments can be unchecked</h4>\n<p>In Solidity 0.8+, there’s a default overflow check on unsigned integers. It’s possible to uncheck this in for-loops and save some gas at each iteration, but at the cost of some code readability, as this uncheck cannot be made inline.</p>\n<p><a href=\"https://github.com/ethereum/solidity/issues/10695\">ethereum/solidity#10695</a></p>\n<p>Instances include:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"85\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">77</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">nftIds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">78</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">index</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">index</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">tokenConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">index</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ExecutorManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">31</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">executorArray</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ExecutorManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">47</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">executorArray</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">233</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">index</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">index</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">nftsStakedLength</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">index</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">180</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_addresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">228</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">_tokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">248</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p>The code would go from:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"86\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numIterations</span><span class=\"mtk1\">; ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">) {  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk3\">// ...  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}  </span></span></span></code></pre>\n<p>to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"87\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">numIterations</span><span class=\"mtk1\">;) {  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk3\">// ...  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> { ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">; }  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}  </span></span></span></code></pre>\n<p>The risk of overflow is inexistant for a <code>uint256</code> here.</p>\n<h3 id=\"visibility\" style=\"position:relative;\"><a href=\"#visibility\" aria-label=\"visibility permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Visibility</h3>\n<h3 id=\"functions-that-should-be-external\" style=\"position:relative;\"><a href=\"#functions-that-should-be-external\" aria-label=\"functions that should be external permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Functions that should be external</h3>\n<p>According to Slither, these functions should be external to save gas:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"88\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">ExecutorManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getExecutorStatus</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ExecutorManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">21</span><span class=\"mtk1\">-</span><span class=\"mtk7\">23</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">ExecutorManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAllExecutors</span><span class=\"mtk1\">() (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ExecutorManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">25</span><span class=\"mtk1\">-</span><span class=\"mtk7\">27</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">HyphenLiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">ILiquidityProviders</span><span class=\"mtk1\">,</span><span class=\"mtk12\">ILPToken</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">78</span><span class=\"mtk1\">-</span><span class=\"mtk7\">90</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">HyphenLiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRewardPerSecond</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">169</span><span class=\"mtk1\">-</span><span class=\"mtk7\">172</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">HyphenLiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getNftIdsStaked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">329</span><span class=\"mtk1\">-</span><span class=\"mtk7\">331</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">HyphenLiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getRewardRatePerSecond</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">333</span><span class=\"mtk1\">-</span><span class=\"mtk7\">335</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">87</span><span class=\"mtk1\">-</span><span class=\"mtk7\">105</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setTrustedForwarder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">107</span><span class=\"mtk1\">-</span><span class=\"mtk7\">111</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setLiquidityProviders</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">113</span><span class=\"mtk1\">-</span><span class=\"mtk7\">117</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getExecutorManager</span><span class=\"mtk1\">() (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">123</span><span class=\"mtk1\">-</span><span class=\"mtk7\">125</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">78</span><span class=\"mtk1\">-</span><span class=\"mtk7\">90</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTotalReserveByToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">96</span><span class=\"mtk1\">-</span><span class=\"mtk7\">98</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getSuppliedLiquidityByToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">100</span><span class=\"mtk1\">-</span><span class=\"mtk7\">102</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTotalLPFeeByToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">104</span><span class=\"mtk1\">-</span><span class=\"mtk7\">106</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCurrentLiquidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">108</span><span class=\"mtk1\">-</span><span class=\"mtk7\">110</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk11\">increaseCurrentLiquidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">127</span><span class=\"mtk1\">-</span><span class=\"mtk7\">129</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk11\">decreaseCurrentLiquidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">131</span><span class=\"mtk1\">-</span><span class=\"mtk7\">133</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getFeeAccumulatedOnNft</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">201</span><span class=\"mtk1\">-</span><span class=\"mtk7\">222</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">60</span><span class=\"mtk1\">-</span><span class=\"mtk7\">74</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\">,</span><span class=\"mtk12\">string</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">36</span><span class=\"mtk1\">-</span><span class=\"mtk7\">49</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setSvgHelper</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span><span class=\"mtk12\">ISvgHelper</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">56</span><span class=\"mtk1\">-</span><span class=\"mtk7\">61</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAllNftIdsByUser</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">75</span><span class=\"mtk1\">-</span><span class=\"mtk7\">81</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">exists</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">98</span><span class=\"mtk1\">-</span><span class=\"mtk7\">100</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getEquilibriumFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">36</span><span class=\"mtk1\">-</span><span class=\"mtk7\">38</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getMaxFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">40</span><span class=\"mtk1\">-</span><span class=\"mtk7\">42</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTokensInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">115</span><span class=\"mtk1\">-</span><span class=\"mtk7\">124</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getDepositConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">,</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">126</span><span class=\"mtk1\">-</span><span class=\"mtk7\">133</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> - </span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTransferConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) (</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">#</span><span class=\"mtk7\">135</span><span class=\"mtk1\">-</span><span class=\"mtk7\">137</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<h3 id=\"errors\" style=\"position:relative;\"><a href=\"#errors\" aria-label=\"errors permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Errors</h3>\n<h4 id=\"reduce-the-size-of-error-messages-long-revert-strings\" style=\"position:relative;\"><a href=\"#reduce-the-size-of-error-messages-long-revert-strings\" aria-label=\"reduce the size of error messages long revert strings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reduce the size of error messages (Long revert Strings)</h4>\n<p>Shortening revert strings to fit in 32 bytes will decrease deployment time gas and will decrease runtime gas when the revert condition is met.</p>\n<p>Revert strings that are longer than 32 bytes require at least one additional mstore, along with additional overhead for computing memory offset, etc.</p>\n<p>Revert strings > 32 bytes:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"89\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">70</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_whiteListPeriodManager</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR_INVALID_WHITELIST_PERIOD_MANAGER&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ExecutorManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">17</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">executorStatus</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;You are not allowed to perform this operation&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">77</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">liquidityProviders</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Only liquidityProviders is allowed&quot;</span><span class=\"mtk1\">); </span></span></span></code></pre>\n<p>I suggest shortening the revert strings to fit in 32 bytes, or that using custom errors as described next.</p>\n<h4 id=\"use-custom-errors-instead-of-revert-strings-to-save-gas\" style=\"position:relative;\"><a href=\"#use-custom-errors-instead-of-revert-strings-to-save-gas\" aria-label=\"use custom errors instead of revert strings to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use Custom Errors instead of Revert Strings to save Gas</h4>\n<p>Custom errors from Solidity 0.8.4 are cheaper than revert strings (cheaper deployment cost and runtime cost when the revert condition is met)</p>\n<p>Source: <a href=\"https://blog.soliditylang.org/2021/04/21/custom-errors/\">https://blog.soliditylang.org/2021/04/21/custom-errors/</a>:</p>\n<blockquote>\n<p>Starting from <a href=\"https://github.com/ethereum/solidity/releases/tag/v0.8.4\">Solidity v0.8.4</a>, there is a convenient and gas-efficient way to explain to users why an operation failed through the use of custom errors. Until now, you could already use strings to give more information about failures (e.g., <code>revert(\"Insufficient funds.\");</code>), but they are rather expensive, especially when it comes to deploy cost, and it is difficult to use dynamic information in them.</p>\n</blockquote>\n<p>Custom errors are defined using the <code>error</code> statement, which can be used inside and outside of contracts (including interfaces and libraries).</p>\n<p>Instances include:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"90\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">52</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk12\">liquidityProvidersAddress</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR_UNAUTHORIZED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">57</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_svgHelper</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">ISvgHelper</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)), </span><span class=\"mtk8\">&quot;ERR_INVALID_SVG_HELPER&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">58</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tokenAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR_INVALID_TOKEN_ADDRESS&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">64</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_liquidityProviders</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR_INVALID_LIQUIDITY_PROVIDERS&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">70</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_whiteListPeriodManager</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR_INVALID_WHITELIST_PERIOD_MANAGER&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">94</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_exists</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tokenId</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__TOKEN_DOES_NOT_EXIST&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LPToken</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">120</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">svgHelpers</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">] != </span><span class=\"mtk11\">ISvgHelper</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)), </span><span class=\"mtk8\">&quot;ERR__SVG_HELPER_NOT_REGISTERED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">16</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Token address cannot be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">17</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokensInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">].</span><span class=\"mtk12\">supportedToken</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Token not supported&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">49</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_equilibriumFee</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Equilibrium Fee cannot be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">50</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_maxFee</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Max Fee cannot be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">74</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">91</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Token address cannot be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">92</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">maxCapLimit</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">minCapLimit</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;maxCapLimit &gt; minCapLimit&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">token</span><span class=\"mtk1\">/</span><span class=\"mtk12\">TokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">110</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">maxCapLimit</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">minCapLimit</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;maxCapLimit &gt; minCapLimit&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ExecutorManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">17</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">executorStatus</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;You are not allowed to perform this operation&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ExecutorManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">38</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">executorAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;executor address can not be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ExecutorManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">39</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">executorStatus</span><span class=\"mtk1\">[</span><span class=\"mtk12\">executorAddress</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;Executor already registered&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ExecutorManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">54</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">executorAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;executor address can not be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">101</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\">] == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__POOL_ALREADY_INITIALIZED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">102</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_baseToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__BASE_TOKEN_IS_ZERO&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">103</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rewardToken</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR_REWARD_TOKEN_IS_ZERO&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">124</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk12\">isStaked</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__NFT_NOT_STAKED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">141</span><span class=\"mtk1\">:                    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__NATIVE_TRANSFER_FAILED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">146</span><span class=\"mtk1\">:                    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__NATIVE_TRANSFER_FAILED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">185</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_to</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__TO_IS_ZERO&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">188</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__NATIVE_TRANSFER_FAILED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">199</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">207</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">] != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__POOL_NOT_INITIALIZED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">208</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardRateLog</span><span class=\"mtk1\">[</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">].</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__POOL_NOT_INITIALIZED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">211</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">nft</span><span class=\"mtk1\">.</span><span class=\"mtk12\">isStaked</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__NFT_ALREADY_STAKED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">239</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">index</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">nftsStakedLength</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__NFT_NOT_STAKED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityFarming</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">259</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nftInfo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">staker</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;ERR__NOT_OWNER&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">72</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">executorManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getExecutorStatus</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">()), </span><span class=\"mtk8\">&quot;Only executor is allowed&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">77</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">liquidityProviders</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Only liquidityProviders is allowed&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">82</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Token address cannot be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">83</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenManager</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getTokensInfo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk12\">supportedToken</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Token not supported&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">94</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_executorManagerAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ExecutorManager cannot be 0x0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">95</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_trustedForwarder</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;TrustedForwarder cannot be 0x0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">96</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_liquidityProviders</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;LiquidityProviders cannot be 0x0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">108</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">trustedForwarder</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;TrustedForwarder can&#39;t be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">114</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_liquidityProviders</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;LiquidityProviders can&#39;t be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">128</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_executorManagerAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Executor Manager cannot be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">156</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">161</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Receiver address cannot be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">162</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Amount cannot be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">247</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">252</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Receiver address cannot be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">253</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Amount cannot be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">272</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">277</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Bad receiver address&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">281</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">status</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Already Processed&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">288</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">amountToTransfer</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Not Enough Balance&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">290</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Native Transfer Failed&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">292</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">IERC20Upgradeable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) &gt;= </span><span class=\"mtk12\">amountToTransfer</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Not Enough Balance&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">373</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">NATIVE</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Can&#39;t withdraw native token fee&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">376</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_gasFeeAccumulated</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Gas Fee earned is 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">385</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_gasFeeAccumulated</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Gas Fee earned is 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">389</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Native Transfer Failed&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">399</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">receiver</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Invalid receiver&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">401</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_tokenAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__INSUFFICIENT_BALANCE&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">403</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__NATIVE_TRANSFER_FAILED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">406</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) &gt;= </span><span class=\"mtk12\">_tokenAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__INSUFFICIENT_BALANCE&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">55</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">exists</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tokenId</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__TOKEN_DOES_NOT_EXIST&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">56</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ownerOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tokenId</span><span class=\"mtk1\">) == </span><span class=\"mtk12\">_transactor</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__TRANSACTOR_DOES_NOT_OWN_NFT&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">64</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">liquidityPool</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__UNAUTHORIZED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">69</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Token address cannot be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">70</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_isSupportedToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Token not supported&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">202</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">exists</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_nftId</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__INVALID_NFT&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">239</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__AMOUNT_IS_0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">252</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__NATIVE_TRANSFER_FAILED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">268</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_token</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">NATIVE</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__WRONG_FUNCTION&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">269</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">283</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__AMOUNT_IS_0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">294</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mintedSharesAmount</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">BASE_DIVISOR</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__AMOUNT_BELOW_MIN_LIQUIDITY&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">319</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_isSupportedToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__TOKEN_NOT_SUPPORTED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">320</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">NATIVE</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__WRONG_FUNCTION&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">321</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">334</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_isSupportedToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">NATIVE</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__TOKEN_NOT_SUPPORTED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">335</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">NATIVE</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__WRONG_FUNCTION&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">337</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__NATIVE_TRANSFER_FAILED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">352</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_isSupportedToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tokenAddress</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__TOKEN_NOT_SUPPORTED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">354</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__INVALID_AMOUNT&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">355</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">nftSuppliedLiquidity</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__INSUFFICIENT_LIQUIDITY&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">403</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_isSupportedToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tokenAddress</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__TOKEN_NOT_SUPPORTED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LiquidityProviders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">410</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lpFeeAccumulated</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__NO_REWARDS_TO_CLAIM&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">41</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">liquidityProviders</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__UNAUTHORIZED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">46</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_msgSender</span><span class=\"mtk1\">() == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lpToken</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;ERR__UNAUTHORIZED&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">51</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Token address cannot be 0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">52</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_isSupportedToken</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tokenAddress</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Token not supported&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">92</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">ifEnabled</span><span class=\"mtk1\">(</span><span class=\"mtk12\">totalLiquidity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">] + </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">perTokenTotalCap</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">]), </span><span class=\"mtk8\">&quot;ERR__LIQUIDITY_EXCEEDS_PTTC&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">93</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">179</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_addresses</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_status</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__LENGTH_MISMATCH&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">187</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">totalLiquidity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">] &lt;= </span><span class=\"mtk12\">_totalCap</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ERR__TOTAL_CAP_LESS_THAN_SL&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">188</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_totalCap</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">perTokenWalletCap</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;ERR__TOTAL_CAP_LT_PTWC&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">203</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_perTokenWalletCap</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">perTokenTotalCap</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_token</span><span class=\"mtk1\">], </span><span class=\"mtk8\">&quot;ERR__PWC_GT_PTTC&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">hyphen</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WhitelistPeriodManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span><span class=\"mtk1\">:</span><span class=\"mtk7\">224</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span></code></pre>\n<p>I suggest replacing revert strings with custom errors.</p>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-5\">High Risk Findings (5)</a></p>\n<ul>\n<li><a href=\"#h-01-can-deposit-native-token-for-free-and-steal-funds\">[H-01] Can deposit native token for free and steal funds</a></li>\n<li><a href=\"#h-02-liquidityproviderssol-the-share-price-of-the-lp-can-be-manipulated-and-making-future-liquidityproviders-unable-to-removeliquidity\">[H-02] <code>LiquidityProviders.sol</code> The share price of the LP can be manipulated and making future liquidityProviders unable to <code>removeLiquidity()</code></a></li>\n<li><a href=\"#h-03-wrong-formula-when-add-fee-incentivepool-can-lead-to-loss-of-funds\">[H-03] Wrong formula when add fee <code>incentivePool</code> can lead to loss of funds.</a></li>\n<li><a href=\"#h-04-deleting-nft-info-can-cause-users-nftunpaidrewards-to-be-permanently-erased\">[H-04] Deleting <code>nft Info</code> can cause users’ <code>nft.unpaidRewards</code> to be permanently erased</a></li>\n<li><a href=\"#h-05-users-will-lose-a-majority-or-even-all-of-the-rewards-when-the-amount-of-total-shares-is-too-large-due-to-precision-loss\">[H-05] Users will lose a majority or even all of the rewards when the amount of total shares is too large, due to precision loss</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-20\">Medium Risk Findings (20)</a></p>\n<ul>\n<li><a href=\"#m-01-unsupported-tokens-cannot-be-withdrawn\">[M-01] Unsupported tokens cannot be withdrawn</a></li>\n<li><a href=\"#m-02-a-pauser-can-brick-the-contracts\">[M-02] A <code>pauser</code> can brick the contracts</a></li>\n<li><a href=\"#m-03-incompatibility-with-rebasingdeflationaryinflationary-token\">[M-03] Incompatibility With Rebasing/Deflationary/Inflationary token</a></li>\n<li><a href=\"#m-04-owners-have-absolute-control-over-protocol\">[M-04] Owners have absolute control over protocol</a></li>\n<li><a href=\"#m-05-frontrunning-of-setpertokenwalletcap-edge-case\">[M-05] Frontrunning of <code>setPerTokenWalletCap</code> edge case</a></li>\n<li><a href=\"#m-06-dos-by-gas-limit\">[M-06] DoS by gas limit</a></li>\n<li><a href=\"#m-07-sending-tokens-close-to-the-maximum-will-fail-and-user-will-lose-tokens\">[M-07] Sending tokens close to the maximum will fail and user will lose tokens</a></li>\n<li><a href=\"#m-08-incentive-pool-can-be-drained-without-rebalancing-the-pool\">[M-08] Incentive Pool can be drained without rebalancing the pool</a></li>\n<li><a href=\"#m-09-improper-upper-bound-definition-on-the-fee\">[M-09] Improper Upper Bound Definition on the Fee</a></li>\n<li><a href=\"#m-10-call-to-non-existing-contracts-returns-success\">[M-10] Call to non-existing contracts returns success</a></li>\n<li><a href=\"#m-11-liquidityproviders-setting-new-liquidity-pool-will-break-contract\">[M-11] <code>LiquidityProviders</code>: Setting new liquidity pool will break contract</a></li>\n<li><a href=\"#m-12-liquidityproviders-setting-new-lp-token-will-break-contract\">[M-12] <code>LiquidityProviders</code>: Setting new LP token will break contract</a></li>\n<li><a href=\"#m-13-improper-tokengasprice-design-can-overcharge-user-for-the-gas-cost-by-a-huge-margin\">[M-13] Improper <code>tokenGasPrice</code> design can overcharge user for the gas cost by a huge margin</a></li>\n<li><a href=\"#m-14-liquidityfarmingsol-unbounded-for-loops-can-potentially-freeze-users-funds-in-edge-cases\">[M-14] <code>LiquidityFarming.sol</code> Unbounded for loops can potentially freeze users’ funds in edge cases</a></li>\n<li><a href=\"#m-15-whitelistperiodmanager-improper-state-handling-of-exclusion-removals\">[M-15] <code>WhitelistPeriodManager</code>: Improper state handling of exclusion removals</a></li>\n<li><a href=\"#m-16-whitelistperiodmanager-improper-state-handling-of-exclusion-additions\">[M-16] <code>WhitelistPeriodManager</code>: Improper state handling of exclusion additions</a></li>\n<li><a href=\"#m-17-wrong-condition-checking-in-price-calculation\">[M-17] wrong condition checking in price calculation</a></li>\n<li><a href=\"#m-18--possible-frontrun-on-deposits-on-liquiditypool\">[M-18]  Possible frontrun on deposits on <code>LiquidityPool</code></a></li>\n<li><a href=\"#m-19-sharestotokenamount-division-by-zero\">[M-19] <code>sharesToTokenAmount</code>: Division by zero</a></li>\n<li><a href=\"#m-20-liquidity-providers-unable-to-remove-liquidity-when-the-pool-is-in-deficit-state\">[M-20] Liquidity providers unable to remove liquidity when the pool is in deficit state</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#codebase-impressions--summary\">Codebase Impressions &#x26; Summary</a></li>\n<li><a href=\"#l-01-conflicting-values-of-base_divisor\">L-01 Conflicting values of <code>BASE_DIVISOR</code></a></li>\n<li><a href=\"#l-02-sub-optimal-calculations-in-getamounttotransfer-results-in-wei-losses\">L-02 Sub-optimal calculations in <code>getAmountToTransfer()</code> results in wei losses</a></li>\n<li><a href=\"#l-03-unbounded-iterations-for-getmaxcommunitylppositon\">L-03 Unbounded iterations for <code>getMaxCommunityLpPositon()</code></a></li>\n<li><a href=\"#l-04-addsupportedtoken-allows-zero-fees-to-be-set-but-changefee-doesnt\">L-04 <code>addSupportedToken()</code> allows zero fees to be set, but <code>changeFee()</code> doesn’t</a></li>\n<li><a href=\"#l-05-_senderc20andgetsentamount-uses-recipient-instead-of-sender-balance-difference\">L-05 <code>_sendErc20AndGetSentAmount()</code> uses recipient instead of sender balance difference</a></li>\n<li><a href=\"#l-06-add-constructor-initializer-in-implementation-contracts\">L-06 Add constructor initializer in implementation contracts</a></li>\n<li><a href=\"#l-07-consider-having-limit-on-gas-fee-charged\">L-07 Consider having limit on gas fee charged</a></li>\n<li><a href=\"#n-01-typo-errors\">N-01 Typo errors</a></li>\n<li><a href=\"#n-02-missing-underscore-for-error\">N-02 Missing underscore for error</a></li>\n<li><a href=\"#n-03-swap-comment-order\">N-03 Swap comment order</a></li>\n<li><a href=\"#n-04-deep-factor-not-customisable\">N-04 Deep factor not customisable</a></li>\n<li><a href=\"#n-05-incorrect-comment-for-description-of-base_divisor\">N-05 Incorrect comment for description of <code>BASE_DIVISOR</code></a></li>\n<li><a href=\"#n-06-standardize-fee-denomination\">N-06 Standardize fee denomination</a></li>\n<li><a href=\"#n-07-incorrect-comment-for-address-to-use-for-withdrawing-native-token\">N-07 Incorrect comment for address to use for withdrawing native token</a></li>\n<li><a href=\"#n-08-clarify-reserve-variable-descriptions\">N-08 Clarify reserve variable descriptions</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#table-of-contents\">Table of Contents</a></li>\n<li><a href=\"#foreword\">Foreword</a></li>\n<li><a href=\"#file-lptokensol\">File: LPToken.sol</a></li>\n<li><a href=\"#file-tokenmanagersol\">File: TokenManager.sol</a></li>\n<li><a href=\"#file-liquidityfarmingsol\">File: LiquidityFarming.sol</a></li>\n<li><a href=\"#file-liquiditypoolsol\">File: LiquidityPool.sol</a></li>\n<li><a href=\"#file-liquidityproviderssol\">File: LiquidityProviders.sol</a></li>\n<li><a href=\"#file-whitelistperiodmanagersol\">File: WhitelistPeriodManager.sol</a></li>\n<li><a href=\"#general-recommendations\">General recommendations</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>",
  "md": "\n# Overview\n\n## About C4\n\nCode4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.\n\nA C4 audit contest is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.\n\nDuring the audit contest outlined in this document, C4 conducted an analysis of the Biconomy Hyphen 2.0 smart contract system written in Solidity. The audit contest took place between March 10—March 16 2022.\n\n## Wardens\n\n61 Wardens contributed reports to the Biconomy Hyphen 2.0 contest:\n\n  1. [WatchPug](https://twitter.com/WatchPug_) ([jtp](https://github.com/jack-the-pug) and [ming](https://github.com/mingwatch))\n  1. [cmichel](https://twitter.com/cmichelio)\n  1. [CertoraInc](https://twitter.com/CertoraInc) (egjlmn1, [OriDabush](https://twitter.com/ori_dabush), ItayG, and shakedwinder)\n  1. [hickuphh3](https://twitter.com/HickupH)\n  1. hyh\n  1. kyliek\n  1. [gzeon](https://twitter.com/gzeon)\n  1. [sirhashalot](https://twitter.com/SirH4shalot)\n  1. 0xDjango\n  1. [pedroais](https://twitter.com/Pedroais2/)\n  1. minhquanym\n  1. [throttle](https://twitter.com/Throt7le)\n  1. Cantor_Dust (d4rk, thank_you, and [technovision99](https://github.com/technovision99))\n  1. [Ruhum](https://twitter.com/0xruhum)\n  1. [danb](https://twitter.com/danbinnun)\n  1. [Dravee](https://twitter.com/JustDravee)\n  1. [benk10](https://teamomega.eth.link/)\n  1. kenta\n  1. IllIllI\n  1. [wuwe1](https://twitter.com/wuwe19)\n  1. cccz\n  1. PPrieditis\n  1. 0x1f8b\n  1. peritoflores\n  1. [defsec](https://twitter.com/defsec_)\n  1. [catchup](https://twitter.com/catchup22)\n  1. [JMukesh](https://twitter.com/MukeshJ_eth)\n  1. whilom\n  1. [rfa](https://www.instagram.com/riyan_rfa/)\n  1. TerrierLover\n  1. hagrid\n  1. saian\n  1. [0xngndev](https://twitter.com/ngndev)\n  1. bitbopper\n  1. hubble (ksk2345 and shri4net)\n  1. robee\n  1. [berndartmueller](https://twitter.com/berndartmueller)\n  1. Jujic\n  1. samruna\n  1. [z3s](https://github.com/z3s/)\n  1. 0xwags\n  1. [0xNazgul](https://twitter.com/0xNazgul)\n  1. [csanuragjain](https://twitter.com/csanuragjain)\n  1. [0v3rf10w](https://twitter.com/_0v3rf10w)\n  1. jayjonah8\n  1. [ye0lde](https://twitter.com/_ye0lde)\n  1. XDms\n  1. cryptphi\n  1. [shenwilly](https://twitter.com/shenwilly_)\n  1. [Tomio](https://twitter.com/meidhiwirara)\n  1. [antonttc](https://github.com/antoncoding)\n  1. oyc_109\n  1. [Kenshin](https://twitter.com/nonfungiblenero)\n  1. [Kiep](https://www.instagram.com/khrisna.indrawan/)\n\nThis contest was judged by [pauliax](https://twitter.com/SolidityDev).\n\nFinal report assembled by [liveactionllama](https://twitter.com/liveactionllama).\n\n# Summary\n\nThe C4 analysis yielded an aggregated total of 25 unique vulnerabilities. Of these vulnerabilities, 5 received a risk rating in the category of HIGH severity and 20 received a risk rating in the category of MEDIUM severity.\n\nAdditionally, C4 analysis included 39 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 39 reports recommending gas optimizations.\n\nAll of the issues presented here are linked back to their original finding.\n\n# Scope\n\nThe code under review can be found within the [C4 Biconomy Hyphen 2.0 contest repository](https://github.com/code-423n4/2022-03-biconomy), and is composed of 7 smart contracts written in the Solidity programming language and includes 1,621 lines of Solidity code.\n\n# Severity Criteria\n\nC4 assesses the severity of disclosed vulnerabilities according to a methodology based on [OWASP standards](https://owasp.org/www-community/OWASP_Risk_Rating_Methodology).\n\nVulnerabilities are divided into three primary risk categories: high, medium, and low/non-critical.\n\nHigh-level considerations for vulnerabilities span the following key areas when conducting assessments:\n\n- Malicious Input Handling\n- Escalation of privileges\n- Arithmetic\n- Gas use\n\nFurther information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on [the C4 website](https://code4rena.com).\n\n# High Risk Findings (5)\n## [[H-01] Can deposit native token for free and steal funds](https://github.com/code-423n4/2022-03-biconomy-findings/issues/55)\n_Submitted by cmichel, also found by CertoraInc_\n\n[LiquidityPool.sol#L151](https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityPool.sol#L151)<br>\n\nThe `depositErc20` function allows setting `tokenAddress = NATIVE` and does not throw an error.<br>\nNo matter the `amount` chosen, the `SafeERC20Upgradeable.safeTransferFrom(IERC20Upgradeable(tokenAddress), sender, address(this), amount);` call will not revert because it performs a low-level call to `NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE`, which is an EOA, and the low-level calls to EOAs always succeed.<br>\nBecause the `safe*` version is used, the EOA not returning any data does not revert either.<br>\n\nThis allows an attacker to deposit infinite native tokens by not paying anything.<br>\nThe contract will emit the same `Deposit` event as a real `depositNative` call and the attacker receives the native funds on the other chain.\n\n### Recommended Mitigation Steps\n\nCheck `tokenAddress != NATIVE` in `depositErc20`.\n\n**[ankurdubey521 (Biconomy) confirmed and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/55):**\n > [HP-25: C4 Audit Fixes, Dynamic Fee Changes bcnmy/hyphen-contract#42](https://github.com/bcnmy/hyphen-contract/pull/42)\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/55#issuecomment-1094973634):**\n > Great find, definitely deserves a severity of high.\n\n\n\n***\n\n## [[H-02] `LiquidityProviders.sol` The share price of the LP can be manipulated and making future liquidityProviders unable to `removeLiquidity()`](https://github.com/code-423n4/2022-03-biconomy-findings/issues/139)\n_Submitted by WatchPug_\n\n[LiquidityProviders.sol#L345-L362](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityProviders.sol#L345-L362)<br>\n\n```solidity\nfunction removeLiquidity(uint256 _nftId, uint256 _amount)\n    external\n    nonReentrant\n    onlyValidLpToken(_nftId, _msgSender())\n    whenNotPaused\n{\n    (address _tokenAddress, uint256 nftSuppliedLiquidity, uint256 totalNFTShares) = lpToken.tokenMetadata(_nftId);\n    require(_isSupportedToken(_tokenAddress), \"ERR__TOKEN_NOT_SUPPORTED\");\n\n    require(_amount != 0, \"ERR__INVALID_AMOUNT\");\n    require(nftSuppliedLiquidity >= _amount, \"ERR__INSUFFICIENT_LIQUIDITY\");\n    whiteListPeriodManager.beforeLiquidityRemoval(_msgSender(), _tokenAddress, _amount);\n    // Claculate how much shares represent input amount\n    uint256 lpSharesForInputAmount = _amount * getTokenPriceInLPShares(_tokenAddress);\n\n    // Calculate rewards accumulated\n    uint256 eligibleLiquidity = sharesToTokenAmount(totalNFTShares, _tokenAddress);\n```\n\n[LiquidityProviders.sol#L192-L194](https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityProviders.sol#L192-L194)<br>\n\n```solidity\nfunction sharesToTokenAmount(uint256 _shares, address _tokenAddress) public view returns (uint256) {\n    return (_shares * totalReserve[_tokenAddress]) / totalSharesMinted[_tokenAddress];\n}\n```\n\nThe share price of the liquidity can be manipulated to an extremely low value (1 underlying token worth a huge amount of shares), making it possible for `sharesToTokenAmount(totalNFTShares, _tokenAddress)` to overflow in `removeLiquidity()` and therefore freeze users' funds.\n\n### Proof of Concept\n\n1.  Alice `addTokenLiquidity()` with `1e8 * 1e18` XYZ on B-Chain, totalSharesMinted == `1e44`;\n2.  Alice `sendFundsToUser()` and bridge `1e8 * 1e18` XYZ from B-Chain to A-Chain;\n3.  Alice `depositErc20()` and bridge `1e8 * 1e18` XYZ from A-Chain to B-Chain;\n4.  Alice `removeLiquidity()` and withdraw `1e8 * 1e18 - 1` XYZ, then: `totalReserve` == `1 wei` XYZ, and `totalSharesMinted` == `1e26`;\n5.  Bob `addTokenLiquidity()` with `3.4e7 * 1e18` XYZ;\n6.  Bob tries to `removeLiquidity()`.\n\nExpected Results: Bob to get back the deposits;\n\nActual Results: The tx reverted due to overflow at `sharesToTokenAmount()`.\n\n### Recommended Mitigation Steps\n\n[LiquidityProviders.sol#L280-L292](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityProviders.sol#L280-L292)<br>\n\n```solidity\nfunction _increaseLiquidity(uint256 _nftId, uint256 _amount) internal onlyValidLpToken(_nftId, _msgSender()) {\n    (address token, uint256 totalSuppliedLiquidity, uint256 totalShares) = lpToken.tokenMetadata(_nftId);\n\n    require(_amount > 0, \"ERR__AMOUNT_IS_0\");\n    whiteListPeriodManager.beforeLiquidityAddition(_msgSender(), token, _amount);\n\n    uint256 mintedSharesAmount;\n    // Adding liquidity in the pool for the first time\n    if (totalReserve[token] == 0) {\n        mintedSharesAmount = BASE_DIVISOR * _amount;\n    } else {\n        mintedSharesAmount = (_amount * totalSharesMinted[token]) / totalReserve[token];\n    }\n    ...\n```\n\nConsider locking part of the first mint's liquidity to maintain a minimum amount of `totalReserve[token]`, so that the share price can not be easily manipulated.\n\n**[ankurdubey521 (Biconomy) confirmed](https://github.com/code-423n4/2022-03-biconomy-findings/issues/139)**\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/139#issuecomment-1120975961):**\n > Great find, with a PoC, deserves a severity of high because it is a valid attack path that does not have hand-wavy hypotheticals.\n\n\n\n***\n\n## [[H-03] Wrong formula when add fee `incentivePool` can lead to loss of funds.](https://github.com/code-423n4/2022-03-biconomy-findings/issues/38)\n_Submitted by minhquanym, also found by cmichel, hickuphh3, and WatchPug_\n\n[LiquidityPool.sol#L319-L322](https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityPool.sol#L319-L322)<br>\n\nThe `getAmountToTransfer` function of `LiquidityPool` updates `incentivePool[tokenAddress]` by adding some fee to it but the formula is wrong and the value of `incentivePool[tokenAddress]` will be divided by `BASE_DIVISOR` (10000000000) each time.\nAfter just a few time, the value of `incentivePool[tokenAddress]` will become zero and that amount of `tokenAddress` token will be locked in contract.\n\n### Proof of concept\n\nLine 319-322\n\n    incentivePool[tokenAddress] = (incentivePool[tokenAddress] + (amount * (transferFeePerc - tokenManager.getTokensInfo(tokenAddress).equilibriumFee))) / BASE_DIVISOR;\n\nLet `x = incentivePool[tokenAddress]`, `y = amount`, `z = transferFeePerc` and `t = tokenManager.getTokensInfo(tokenAddress).equilibriumFee`. Then that be written as\n\n    x = (x + (y * (z - t))) / BASE_DIVISOR;\n    x = x / BASE_DIVISOR + (y * (z - t)) / BASE_DIVISOR;\n\n### Recommended Mitigation Steps\n\nFix the bug by changing lines 319-322 to:\n\n    incentivePool[tokenAddress] += (amount * (transferFeePerc - tokenManager.getTokensInfo(tokenAddress).equilibriumFee)) / BASE_DIVISOR;\n\n**[ankurdubey521 (Biconomy) confirmed](https://github.com/code-423n4/2022-03-biconomy-findings/issues/38)**\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/38#issuecomment-1094991790):**\n > Great find, the wrong order of arithmetic operations deserves a severity of high as it would have serious negative consequences.\n\n\n\n***\n\n## [[H-04] Deleting `nft Info` can cause users' `nft.unpaidRewards` to be permanently erased](https://github.com/code-423n4/2022-03-biconomy-findings/issues/135)\n_Submitted by WatchPug, also found by 0xDjango and hyh_\n\n[LiquidityFarming.sol#L229-L253](https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityFarming.sol#L229-L253)<br>\n\n```solidity\nfunction withdraw(uint256 _nftId, address payable _to) external whenNotPaused nonReentrant {\n    address msgSender = _msgSender();\n    uint256 nftsStakedLength = nftIdsStaked[msgSender].length;\n    uint256 index;\n    for (index = 0; index < nftsStakedLength; ++index) {\n        if (nftIdsStaked[msgSender][index] == _nftId) {\n            break;\n        }\n    }\n\n    require(index != nftsStakedLength, \"ERR__NFT_NOT_STAKED\");\n    nftIdsStaked[msgSender][index] = nftIdsStaked[msgSender][nftIdsStaked[msgSender].length - 1];\n    nftIdsStaked[msgSender].pop();\n\n    _sendRewardsForNft(_nftId, _to);\n    delete nftInfo[_nftId];\n\n    (address baseToken, , uint256 amount) = lpToken.tokenMetadata(_nftId);\n    amount /= liquidityProviders.BASE_DIVISOR();\n    totalSharesStaked[baseToken] -= amount;\n\n    lpToken.safeTransferFrom(address(this), msgSender, _nftId);\n\n    emit LogWithdraw(msgSender, baseToken, _nftId, _to);\n}\n```\n\n[LiquidityFarming.sol#L122-L165](https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityFarming.sol#L122-L165)<br>\n\n```solidity\nfunction _sendRewardsForNft(uint256 _nftId, address payable _to) internal {\n    NFTInfo storage nft = nftInfo[_nftId];\n    require(nft.isStaked, \"ERR__NFT_NOT_STAKED\");\n\n    (address baseToken, , uint256 amount) = lpToken.tokenMetadata(_nftId);\n    amount /= liquidityProviders.BASE_DIVISOR();\n\n    PoolInfo memory pool = updatePool(baseToken);\n    uint256 pending;\n    uint256 amountSent;\n    if (amount > 0) {\n        pending = ((amount * pool.accTokenPerShare) / ACC_TOKEN_PRECISION) - nft.rewardDebt + nft.unpaidRewards;\n        if (rewardTokens[baseToken] == NATIVE) {\n            uint256 balance = address(this).balance;\n            if (pending > balance) {\n                unchecked {\n                    nft.unpaidRewards = pending - balance;\n                }\n                (bool success, ) = _to.call{value: balance}(\"\");\n                require(success, \"ERR__NATIVE_TRANSFER_FAILED\");\n                amountSent = balance;\n            } else {\n                nft.unpaidRewards = 0;\n                (bool success, ) = _to.call{value: pending}(\"\");\n                require(success, \"ERR__NATIVE_TRANSFER_FAILED\");\n                amountSent = pending;\n            }\n        } else {\n            IERC20Upgradeable rewardToken = IERC20Upgradeable(rewardTokens[baseToken]);\n            uint256 balance = rewardToken.balanceOf(address(this));\n            if (pending > balance) {\n                unchecked {\n                    nft.unpaidRewards = pending - balance;\n                }\n                amountSent = _sendErc20AndGetSentAmount(rewardToken, balance, _to);\n            } else {\n                nft.unpaidRewards = 0;\n                amountSent = _sendErc20AndGetSentAmount(rewardToken, pending, _to);\n            }\n        }\n    }\n    nft.rewardDebt = (amount * pool.accTokenPerShare) / ACC_TOKEN_PRECISION;\n    emit LogOnReward(_msgSender(), baseToken, amountSent, _to);\n}\n```\n\nWhen `withdraw()` is called, `_sendRewardsForNft(_nftId, _to)` will be called to send the rewards.\n\nIn `_sendRewardsForNft()`, when `address(this).balance` is insufficient at the moment, `nft.unpaidRewards = pending - balance` will be recorded and the user can get it back at the next time.\n\nHowever, at L244, the whole `nftInfo` is being deleted, so that `nft.unpaidRewards` will also get erased.\n\nThere is no way for the user to get back this `unpaidRewards` anymore.\n\n### Recommended Mitigation Steps\n\nConsider adding a new parameter named `force` for `withdraw()`, `require(force || unpaidRewards == 0)` before deleting nftInfo.\n\n**[ankurdubey521 (Biconomy) confirmed and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/135#issuecomment-1082892044):**\n > Great catch! Thanks a lot for bringing these up.\n >\n > [HP-25: C4 Audit Fixes, Dynamic Fee Changes bcnmy/hyphen-contract#42](https://github.com/bcnmy/hyphen-contract/pull/42)\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/135#issuecomment-1114772722):**\n > Great find, deserves a severity of high as it may incur in funds lost for the users.\n\n**[KenzoAgada (warden) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/135#issuecomment-1141043124):**\n > Shouldn't this be medium severity, as only rewards are lost and not original user funds?\n> As the risk TLDR says -<br>\n> \n> `2 — Med: Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.`\n>\n> `3 — High: Assets can be stolen/lost/compromised directly (or indirectly if there is a valid attack path that does not have hand-wavy hypotheticals).`<br>\n> \n> There are other lost-rewards issues that have been classified as high, this questions pertains to them as well.\n\n**[0xleastwood (warden) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/135#issuecomment-1145280670):**\n > I would be inclined to keep this as high risk as it is less about the protocol leaking value and more about rewards being completely wiped and lost forever. I would argue, the user's assets at this point in time DO include all unpaid rewards, so it is perfectly reasonable to treat this as high risk.\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/135#issuecomment-1145289008):**\n > Agree that the boundaries are not very clear, this issue might fall somewhere between Medium and High severities. But my initial thought was similar to that of @0xleastwood, the rewards already belong to the user, and losing them will make the user lose on time and other opportunities. Also, this is not a hypothetical attack scenario, but a very real valid execution path, thus I think a high severity is fine here.\n\n\n\n***\n\n## [[H-05] Users will lose a majority or even all of the rewards when the amount of total shares is too large, due to precision loss](https://github.com/code-423n4/2022-03-biconomy-findings/issues/140)\n_Submitted by WatchPug, also found by hyh_\n\n[LiquidityFarming.sol#L265-L291](https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityFarming.sol#L265-L291)<br>\n\n```solidity\nfunction getUpdatedAccTokenPerShare(address _baseToken) public view returns (uint256) {\n    uint256 accumulator = 0;\n    uint256 lastUpdatedTime = poolInfo[_baseToken].lastRewardTime;\n    uint256 counter = block.timestamp;\n    uint256 i = rewardRateLog[_baseToken].length - 1;\n    while (true) {\n        if (lastUpdatedTime >= counter) {\n            break;\n        }\n        unchecked {\n            accumulator +=\n                rewardRateLog[_baseToken][i].rewardsPerSecond *\n                (counter - max(lastUpdatedTime, rewardRateLog[_baseToken][i].timestamp));\n        }\n        counter = rewardRateLog[_baseToken][i].timestamp;\n        if (i == 0) {\n            break;\n        }\n        --i;\n    }\n\n    // We know that during all the periods that were included in the current iterations,\n    // the value of totalSharesStaked[_baseToken] would not have changed, as we only consider the\n    // updates to the pool that happened after the lastUpdatedTime.\n    accumulator = (accumulator * ACC_TOKEN_PRECISION) / totalSharesStaked[_baseToken];\n    return accumulator + poolInfo[_baseToken].accTokenPerShare;\n}\n```\n\n[LiquidityProviders.sol#L286-L292](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityProviders.sol#L286-L292)<br>\n\n```solidity\nuint256 mintedSharesAmount;\n// Adding liquidity in the pool for the first time\nif (totalReserve[token] == 0) {\n    mintedSharesAmount = BASE_DIVISOR * _amount;\n} else {\n    mintedSharesAmount = (_amount * totalSharesMinted[token]) / totalReserve[token];\n}\n```\n\nIn `HyphenLiquidityFarming`, the `accTokenPerShare` is calculated based on the total staked shares.\n\nHowever, as the `mintedSharesAmount` can easily become very large on `LiquidityProviders.sol`, all the users can lose their rewards due to precision loss.\n\n### Proof of Concept\n\nGiven:\n\n*   rewardsPerSecond is `10e18`;\n*   lastRewardTime is 24 hrs ago;\n\nThen:\n\n1.  Alice `addTokenLiquidity()` with `1e8 * 1e18` XYZ on B-Chain, totalSharesMinted == `1e44`;\n2.  Alice `deposit()` to HyphenLiquidityFarming, totalSharesStaked == `1e44`;\n3.  24 hrs later, Alice tries to claim the rewards.\n\n`accumulator = rewardsPerSecond * 24 hours` == 864000e18 == 8.64e23\n\nExpected Results: As the sole staker, Alice should get all the `864000e18` rewards.\n\nActual Results: Alice received 0 rewards.\n\nThat's because when `totalSharesStaked > 1e36`, `accumulator = (accumulator * ACC_TOKEN_PRECISION) / totalSharesStaked[_baseToken];` will be round down to `0`.\n\nWhen the `totalSharesStaked` is large enough, all users will lose their rewards due to precision loss.\n\n### Recommended Mitigation Steps\n\n1.  Consider lowering the `BASE_DIVISOR` so that the initial share price can be higher;\n2.  Consider making `ACC_TOKEN_PRECISION` larger to prevent precision loss;\n\nSee also the Recommendation on [Issue #139](https://github.com/code-423n4/2022-03-biconomy-findings/issues/139).\n\n**[ankurdubey521 (Biconomy) confirmed](https://github.com/code-423n4/2022-03-biconomy-findings/issues/140)**\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/140#issuecomment-1120958989):**\n > Great find, probably deserves a severity of high.\n\n\n\n***\n\n# Medium Risk Findings (20)\n## [[M-01] Unsupported tokens cannot be withdrawn](https://github.com/code-423n4/2022-03-biconomy-findings/issues/54)\n_Submitted by cmichel, also found by kyliek, pedroais, and PPrieditis_\n\n[LiquidityProviders.sol#L273](https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityProviders.sol#L273)<br>\n\nSupported tokens can be turned off again by calling `TokenManager.removeSupportedToken`.<br>\nUsers won't be able to withdraw their liquidity anymore because of [this check](https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityProviders.sol#L352) in `removeLiquidity`.\n\n### Recommended Mitigation Steps\n\nConsider allowing withdrawals even if the token was unsupported to allow users to reclaim their funds.\n\n**[ankurdubey521 (Biconomy) acknowledged](https://github.com/code-423n4/2022-03-biconomy-findings/issues/54)**\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/54#issuecomment-1095026266):**\n > A valid concern, assets not at direct risk.\n\n\n\n***\n\n## [[M-02] A `pauser` can brick the contracts](https://github.com/code-423n4/2022-03-biconomy-findings/issues/137)\n_Submitted by WatchPug, also found by JMukesh, peritoflores, and whilom_\n\n[Pausable.sol#L65-L68](https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/security/Pausable.sol#L65-L68)<br>\n\n```solidity\n    function renouncePauser() external virtual onlyPauser {\n        emit PauserChanged(_pauser, address(0));\n        _pauser = address(0);\n    }\n```\n\nA malicious or compromised `pauser` can call `pause()` and `renouncePauser()` to brick the contract and all the funds can be frozen.\n\n### Proof of Concept\n\nGiven:\n\n*   Alice (EOA) is the `pauser` of the contract.\n\n1.  Alice calls `pause()` ;\n2.  Alice calls `renouncePauser()`;\n\nAs a result, most of the contract's methods are now unavailable, and this cannot be reversed even by the `owner`.\n\n### Recommended Mitigation Steps\n\nConsider removing `renouncePauser()`, or requiring the contract not in `paused` mode when `renouncePauser()`.\n\n**[ankurdubey521 (Biconomy) confirmed and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/137#issuecomment-1083350829):**\n > Yeah, `changePauser` needs to have an `onlyOwner` modifier instead of `onlyPauser`.\n >\n > [HP-25: C4 Audit Fixes, Dynamic Fee Changes bcnmy/hyphen-contract#42](https://github.com/bcnmy/hyphen-contract/pull/42)\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/137#issuecomment-1095044957):**\n > A valid concern, however, the proposed solution has drawbacks too. If you change from onlyPauser to onlyOwner here, a compromise of the owner account will have devastating consequences while with the current implementation the pauser can still pause the contracts independently of an owner. So this is a double-edged sword, it is up to you to decide which way is more acceptable.\n\n\n\n***\n\n## [[M-03] Incompatibility With Rebasing/Deflationary/Inflationary token](https://github.com/code-423n4/2022-03-biconomy-findings/issues/91)\n_Submitted by Jujic, also found by cmichel, defsec, hagrid, hickuphh3, IllIllI, minhquanym, Ruhum, and shenwilly_\n\nThe scope contracts do not appear to support rebasing/deflationary/inflationary tokens whose balance changes during transfers or over time. The necessary checks include at least verifying the amount of tokens transferred to contracts before and after the actual transfer to infer any fees/interest.\n\n### Proof of Concept\n\n[TokenManager.sol](https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/token/TokenManager.sol)<br>\n\n### Recommended Mitigation Steps\n\nMake sure token vault accounts for any rebasing/inflation/deflation.<br>\nAdd support in contracts for such tokens before accepting user-supplied tokens.\n\n**[ankurdubey521 (Biconomy) confirmed](https://github.com/code-423n4/2022-03-biconomy-findings/issues/91)**\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/91#issuecomment-1109645407):**\n > Grouping all the issues related to the incompatibility with weird ERC20s together and making this a primary issue because it is the most generic.\n\n\n\n***\n\n## [[M-04] Owners have absolute control over protocol](https://github.com/code-423n4/2022-03-biconomy-findings/issues/80)\n_Submitted by throttle, also found by cccz, cmichel, danb, defsec, hickuphh3, IllIllI, pedroais, and Ruhum_\n\n[LiquidityFarming.sol#L174-L192](https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L174-L192)<br>\n\nOwners have full control over the protocol.\n\n### Proof of Concept\n\nOwners have full control over:\n\n*   executors who perform token transfers on behalf of the destination chain\n*   reclaiming / withdrawing any tokens (including reward tokens) held by farming contract\n*   total upgradeability\n*   instant parameters change (no timelock)\n*   1 step owner change (gold standard is 2-step owner change)\n\n### Recommended Mitigation Steps\n\nMake executors decentralized.<br>\nAdd TimeLock for parameter changes.\n\n**[ankurdubey521 (Biconomy) acknowledged and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/80#issuecomment-1083012942):**\n > I agree this is an issue, but in the current iteration of Hyphen it is still a centralized system, therefore there is an implicit trust in the contract owners and executors. A decentralized version of the Hyphen bridge is in the works and will fix these issues.\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/80#issuecomment-1109662505):**\n > I am grouping all the issues related to centralization and owner privilege risks together and making this the primary issue because it is the most generic.\n\n\n\n***\n\n## [[M-05] Frontrunning of `setPerTokenWalletCap` edge case](https://github.com/code-423n4/2022-03-biconomy-findings/issues/158)\n_Submitted by sirhashalot_\n\nThe `setPerTokenWalletCap()` function in WhitelistPeriodManager.sol [contains a comment](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/WhitelistPeriodManager.sol#L196-L200) stating:\n\n    Special care must be taken when calling this function\n    There are no checks for _perTokenWalletCap (since it's onlyOwner), but it's essential that it should be >= max lp provided by an lp.\n    Checking this on chain will probably require implementing a bbst, which needs more bandwidth\n    Call the view function getMaxCommunityLpPositon() separately before changing this value\n\nEven if the manual step of calling the `getMaxCommunityLpPositon()` function is properly performed, it is possible for a user to add liquidity to increase the `maxLp` value in between when the `getMaxCommunityLpPositon()` function is called and when the `setPerTokenWalletCap()` function is called. Because this process is manual, this doesn't need to be bot frontrunning in the same block as when the `setPerTokenWalletCap()` function is called, but can be cause by poor timing of an innocent unknowing user adding liquidity to the protocol. If this condition occurs, the liquidity provider will have provided more liquidity than the perTokenWalletCap limit, breaking the assumptions for this variable and leading to some denial of service conditions.\n\nThis edge situation can impact the `setTotalCap()` function and the \"perTokenTotalCap\\[\\_token]\" state variable as well, but the \"perTokenWalletCap\\[\\_token]\" value would have to be reduced before the \"perTokenTotalCap\\[\\_token]\" value is reduced. The impact to `setTotalCap()` follows the same execution path but adds the additional step of calling the `setTotalCap()` function at the end of the process.\n\n### Proof of Concept\n\n1.  Owner [calls `getMaxCommunityLpPositon(_token)` function](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/WhitelistPeriodManager.sol#L245-L255) to identify maxLp value to confirm new perTokenWalletCap value is below maxLp value\n2.  An innocent user adds liquidity to their position without the knowledge that the owner is going to reduce the \"perTokenWalletCap\\[\\_token]\" value soon\n3.  Owner [calls `setPerTokenWalletCap()` function ](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/WhitelistPeriodManager.sol#L202-L208)to reduce \"perTokenWalletCap\\[\\_token]\" value\n4.  The innocent user has more liquidity than the new \"perTokenWalletCap\\[\\_token]\" value. This means that the user can be in a situation where if they remove x amount of liquidity and attempt to add x liquidity back to their position, the innocent user will be unable to do so. Other functions that rely on the assumption that the largest user deposit is below the \"perTokenWalletCap\\[\\_token]\" value may break due to incorrect assumptions\n\nThis edge situation can impact the `setTotalCap()` function and the \"perTokenTotalCap\\[\\_token]\" state variable as well, but the \"perTokenWalletCap\\[\\_token]\" value would have to be reduced before the \"perTokenTotalCap\\[\\_token]\" value is reduced. The impact to `setTotalCap()` follows the same execution path but adds the additional step of calling the `setTotalCap()` function at the end of the process.\n\n### Recommended Mitigation Steps\n\nA programmatic solution is the only way to avoid these edge case scenarios, though it will increase gas consumption. To convert the manual calling of `getMaxCommunityLpPositon(_token)` to a programmatic solution, add the following require statement next to the existing require statement of the `setPerTokenWalletCap()` function:<br>\n`require(_perTokenWalletCap <= getMaxCommunityLpPositon(_token), \"ERR_PWC_GT_MCLP\");`\n\n**[ankurdubey521 (Biconomy) acknowledged](https://github.com/code-423n4/2022-03-biconomy-findings/issues/158)**\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/158#issuecomment-1109677518):**\n > The concern is valid but I do not think that there is any profit for the attacker, and the impact for the regular users is minimal because this value can be updated anytime again by the owner, so I am hesitating if this should be of medium severity or lower, but because the warden provided a nice and comprehensive description, I will leave this in favor of warden.\n\n\n\n***\n\n## [[M-06] DoS by gas limit](https://github.com/code-423n4/2022-03-biconomy-findings/issues/24)\n_Submitted by danb, also found by benk10 and pedroais_\n\n[LiquidityFarming.sol#L220](https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L220)<br>\n[LiquidityFarming.sol#L233](https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L233)<br>\n\nIn `deposit` function it is possible to push to `nftIdsStaked` of anyone, an attacker can deposit too many nfts to another user, and when the user will try to withdraw an nft at the end of the list, they will iterate on the list and revert because of gas limit.\n\n**[ankurdubey521 (Biconomy) confirmed and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/24):**\n > [HP-25: C4 Audit Fixes, Dynamic Fee Changes bcnmy/hyphen-contract#42](https://github.com/bcnmy/hyphen-contract/pull/42)\n\n**[pauliax (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/24#issuecomment-1109684991):**\n > A valid concern, but I think it should be of medium severity because the victim can still withdraw NFTs one by one until reaching the necessary index because it breaks inside the loop: [LiquidityFarming.sol#L234-L235](https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L234-L235).\n\n\n\n***\n\n## [[M-07] Sending tokens close to the maximum will fail and user will lose tokens](https://github.com/code-423n4/2022-03-biconomy-findings/issues/181)\n_Submitted by pedroais, also found by WatchPug_\n\n[LiquidityPool.sol#L171](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityPool.sol#L171)<br>\n[LiquidityPool.sol#L273](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityPool.sol#L273)<br>\n\nWhen a user calls the deposit function the reward amount is calculated and an event is emited with amount+reward as the transfer amount. The function checks amount is smaller than the max amount.\n\nAn executor then listens to this event and calls sendFundsToUser with rewards + amount as the amount parameter. This function checks amount+reward is smaller than max amount.\n\nThis is a problem because the amount transferred may be in the limit but amount + reward could pass the limit and the executor won't be able to send the transaction. The user will lose the funds. Both checks should be made with the reward or without the reward but the checks should be the same for this not to happen.\n\nStep by step :<br>\nMax transfer is set to 50 for token A<br>\nBob transfers 49 tokens, this will pass since 49<50. The reward is calculated in 2 tokens.<br>\nThe executor then calls sendFundsToUser with 52. This transaction will revert and user will lose their tokens.<br>\n\nThis value of amount includes rewards but the previous check didn't include rewards: [LiquidityPool.sol#L273](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityPool.sol#L273).\n\n### Recommended Mitigation Steps\n\nBoth checks should be made over the same amount = amount + rewards\n\n**[ankurdubey521 (Biconomy) disputed and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/181#issuecomment-1082946519):**\n > We handle this issue by setting a slightly larger limit in the transfer config of each token on the destination chain.\n\n**[pauliax (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/181#issuecomment-1112625440):**\n > Even though the sponsor is already aware of and mitigates this issue, it could still be fixed algorithmically to prevent accidental loss of funds. I am leaving this as of medium severity.\n\n\n\n***\n\n## [[M-08] Incentive Pool can be drained without rebalancing the pool](https://github.com/code-423n4/2022-03-biconomy-findings/issues/87)\n_Submitted by kyliek, also found by Ruhum and WatchPug_\n\n[LiquidityPool.sol#L149-L173](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityPool.sol#L149-L173)<br>\n[LiquidityPool.sol#L263-L277](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityPool.sol#L263-L277)<br>\n\n`depositErc20` allows an attacker to specify the destination chain to be the same as the source chain and the receiver account to be the same as the caller account. This enables an attacker to drain the incentive pool without rebalancing the pool back to the equilibrium state.\n\n### Proof of Concept\n\nThis requires the attacker to have some collateral, to begin with. The profit also depends on how much the attacker has. Assume the attacker has enough assets.\n\nIn each chain, when the pool is very deficit (e.g. `currentLiquidity` is much less than `providedLiquidity`), which often mean there's a good amount in the Incentive pool after some high valued transfers, then do the following.\n\n*   step 1 :  borrow the liquidityDifference amount such that one can get the whole incentivePool.\n\n<!---->\n\n                uint256 liquidityDifference = providedLiquidity - currentLiquidity;\n                if (amount >= liquidityDifference) {\n                    rewardAmount = incentivePool[tokenAddress];\n\n*   step 2 : call `depositErc20()` with `toChainId` being the same chain and `receiver` being `msg.sender`.\n\nThe executor will call `sendFundsToUser` to msg.sender. Then a rewardAmount, equivalent to the entire incentive pool (up to 10% of the total pool value), will be added to `msg.sender` minus equilibrium fee (\\~0.01%) and gas fee.\n\nIn the end, the pool is back to the deficit state as before, the incentive pool is drained and the exploiter pockets the difference of rewardAmount minus fees.\n\nThis attack can be repeated on each deployed chain multiple times whenever the incentive pool is profitable (particularly right after a big transfer).\n\n### Recommended Mitigation Steps\n\n*   Disallow `toChainId` to be the source chain by validating it in `depositErc20` or in `sendFundsToUser` validate that `fromChainId` is not the same as current chain.\n\n*   Require `receiver` is not `msg.sender` in `depositErc20`.\n\n**[tomarsachin2271 (Biconomy) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/87#issuecomment-1079770492):**\n > If depositor keeps toChainId same as source chain Id, then executor will not pick this deposit transaction on backend as there won't be any mapping for fromChainId => toChainId, so depositor funds will remain in the source chain if he tries to do it and try to drain the incentive pool.\n> \n> Although this could happen coz of any bug on the UI, so it's better to handle these situations on contract itself. It will increase a gas though a bit while depositing. Will consider this point though.\n\n**[ankurdubey521 (Biconomy) confirmed and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/87):**\n > [HP-25: C4 Audit Fixes, Dynamic Fee Changes bcnmy/hyphen-contract#42](https://github.com/bcnmy/hyphen-contract/pull/42)\n\n**[pauliax (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/87#issuecomment-1112630491):**\n > It is always good to enforce such things on the contract level itself if possible. While there are some precautions, there still exists a hypothetical attack path so I am leaving this as of medium severity.\n\n\n\n***\n\n## [[M-09] Improper Upper Bound Definition on the Fee](https://github.com/code-423n4/2022-03-biconomy-findings/issues/8)\n_Submitted by defsec, also found by catchup, danb, Dravee, gzeon, hickuphh3, hubble, peritoflores, Ruhum, and throttle_\n\nThe **equilibriumFee** and **maxFee** does not have any upper or lower bounds. Values that are too large will lead to reversions in several critical functions or the LP user will lost all funds when paying the fee.\n\n### Proof of Concept\n\n1.  Navigate to the following contract.\n\n[TokenManager.sol#L52](https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/token/TokenManager.sol#L52)<br>\n\n2.  Owner can identify fee amount. That directly affect to LP management. [LiquidityPool.sol#L352](https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityPool.sol#L352)\n\n3.  Here you can see there is no upper bound has been defined.\n\n```\n    function changeFee(\n        address tokenAddress,\n        uint256 _equilibriumFee,\n        uint256 _maxFee\n    ) external override onlyOwner whenNotPaused {\n        require(_equilibriumFee != 0, \"Equilibrium Fee cannot be 0\");\n        require(_maxFee != 0, \"Max Fee cannot be 0\");\n        tokensInfo[tokenAddress].equilibriumFee = _equilibriumFee;\n        tokensInfo[tokenAddress].maxFee = _maxFee;\n        emit FeeChanged(tokenAddress, tokensInfo[tokenAddress].equilibriumFee, tokensInfo[tokenAddress].maxFee);\n    }\n\n```\n\n### Recommended Mitigation Steps\n\nConsider defining upper and lower bounds on the **equilibriumFee** and **maxFee**.\n\n**[ankurdubey521 (Biconomy) confirmed and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/8):**\n > [HP-25: C4 Audit Fixes, Dynamic Fee Changes bcnmy/hyphen-contract#42](https://github.com/bcnmy/hyphen-contract/pull/42)\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/8#issuecomment-1114023886):**\n > Valid concern. I am grouping all the issues related to the validation of fee variables together and making this the primary one as it contains the most comprehensive description.\n\n\n\n***\n\n## [[M-10] Call to non-existing contracts returns success](https://github.com/code-423n4/2022-03-biconomy-findings/issues/104)\n_Submitted by CertoraInc, also found by kenta and wuwe1_\n\n[LiquidityFarming.sol#L140](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityFarming.sol#L140)<br>\n[LiquidityFarming.sol#L145](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityFarming.sol#L145)<br>\n[LiquidityFarming.sol#L187](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityFarming.sol#L187)<br>\n\nLow level calls (call, delegate call and static call) return success if the called contract doesn’t exist (not deployed or destructed).\n\nThis makes a user be able to send his funds to non-existing addresses.\n\n`LiquidityFarming`<br>\n`reclaimTokens` - if the owner calls by accident with a non-existing address he'll lose the funds.<br>\n`_sendRewardsForNft` - if the `withdraw` or `extractRewards` will be called with a `to` non-existing address, the funds will be lost. That's because of the call to `_sendRewardsForNft` which contains a low level call to the `to` address.<br>\n\n`sendFundsToUser` - if an executor calls by accident with a non-existing address the funds will be lost.<br>\n`transfer` - if the `transfer` function will be called (by the LiquidityProvidors contract of course) with a non existing address as a receiver, the funds will be lost.<br>\n\nThis can be seen here <https://github.com/Uniswap/v3-core/blob/main/audits/tob/audit.pdf> (report #9) and here <https://docs.soliditylang.org/en/develop/control-structures.html#error-handling-assert-require-revert-and-exceptions>\n\n**[ankurdubey521 (Biconomy) confirmed and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/104):**\n > [HP-25: C4 Audit Fixes, Dynamic Fee Changes bcnmy/hyphen-contract#42](https://github.com/bcnmy/hyphen-contract/pull/42)\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/104#issuecomment-1114554603):**\n > I am hesitating if this should be with the severity of Medium or Low but leaving in favor of wardens this time. I believe checking against empty addresses is not enough, low-level calls return true even for non-empty but not valid addresses. It would be better to use interfaces if possible.\n\n\n\n***\n\n## [[M-11] `LiquidityProviders`: Setting new liquidity pool will break contract](https://github.com/code-423n4/2022-03-biconomy-findings/issues/52)\n_Submitted by cmichel, also found by gzeon_\n\n[LiquidityProviders.sol#L171](https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityProviders.sol#L171)<br>\n\nOwners can change the `liquidityPool` variable any time with the `setLiquidityPool` function.<br>\nIf a liquidity pool was already set and users added liquidity with `addTokenLiquidity`, the tokens are directly transferred to the liquidity pool and not kept in the `LiquidityProviders` contract.<br>\nChanging the `liquidityPool` to a different contract will make it impossible for the users to withdraw their liquidity using `removeLiquidity` because the tokens are still in the old `liquidityPool` and cannot be retrieved.<br>\n\nAll users will lose their funds.\n\n### Recommended Mitigation Steps\n\nChanging the `liquidityPool` requires a sophisticated migration mechanism.<br>\nOnly allow setting the `liquidityPool` contract once.\n\n**[ankurdubey521 (Biconomy) acknowledged](https://github.com/code-423n4/2022-03-biconomy-findings/issues/52)**\n\n**[pauliax (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/52#issuecomment-1114560240):**\n > A valid concern, but I am downgrading this to Medium risk because the funds are not lost forever, the same old liquidityPool can be set again by the owner in such a case.\n\n\n\n***\n\n## [[M-12] `LiquidityProviders`: Setting new LP token will break contract](https://github.com/code-423n4/2022-03-biconomy-findings/issues/51)\n_Submitted by cmichel, also found by gzeon_\n\n[LiquidityProviders.sol#L116](https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityProviders.sol#L116)<br>\n\nOwners can change the `lpToken` variable at any time with the `setLpToken` function.<br>\nIf an LP token was already set and users added liquidity with `addTokenLiquidity` and were minted a `lpToken` NFT, changing the `lpToken` to a different contract will make it impossible for the users to withdraw their liquidity using `removeLiquidity`.<br>\n\nAll users will lose their funds.\n\n### Recommended Mitigation Steps\n\nChanging the `lpToken` requires a sophisticated migration mechanism.<br>\nOnly allow setting the `lpToken` contract once.\n\n**[ankurdubey521 (Biconomy) acknowledged](https://github.com/code-423n4/2022-03-biconomy-findings/issues/51)**\n\n**[pauliax (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/51#issuecomment-1114560361):**\n > A valid concern, but I am downgrading this to Medium risk because the funds are not lost forever, the same old lpToken can be set again by the owner in such a case.\n\n\n\n***\n\n## [[M-13] Improper `tokenGasPrice` design can overcharge user for the gas cost by a huge margin](https://github.com/code-423n4/2022-03-biconomy-findings/issues/145)\n_Submitted by WatchPug, also found by cmichel and hyh_\n\n[LiquidityPool.sol#L330-L337](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityPool.sol#L330-L337)<br>\n\n```solidity\nuint256 totalGasUsed = initialGas - gasleft();\ntotalGasUsed = totalGasUsed + tokenManager.getTokensInfo(tokenAddress).transferOverhead;\ntotalGasUsed = totalGasUsed + baseGas;\n\nuint256 gasFee = totalGasUsed * tokenGasPrice;\ngasFeeAccumulatedByToken[tokenAddress] = gasFeeAccumulatedByToken[tokenAddress] + gasFee;\ngasFeeAccumulated[tokenAddress][_msgSender()] = gasFeeAccumulated[tokenAddress][_msgSender()] + gasFee;\namountToTransfer = amount - (transferFeeAmount + gasFee);\n```\n\nWhen the `Executor` calls `sendFundsToUser()`, the `tokenGasPrice` will be used to calculate the gas fee for this transaction and it will be deducted from the transfer amount.\n\nHowever, since `tokenGasPrice` is `uint256`, the smallest chargeable amount is `1 wei` Token for `1 gas`. But there are tokens like `WBTC` (decimals = 8) or `USDC` (decimals = 6), for these tokens, even `1 wei` of the token can be worth a lot of gas, if the `tokenGasPrice` is set to `1`, `gasFee` will far more than the actual cost; if it's set to `0`, `gasFee` can only be `0`.\n\n### Proof of Concept\n\nGiven:\n\n*   `baseGas` = 21000\n*   `tokenGasPrice` for WBTC = `1 wei`\n*   `transferFeeAmount` = 0\n*   1 WBTC = 20,000 MATIC\n\n1.  Alice send `0.1 WBTC` to Bob's address on Polygon\n2.  `Executor` calls `sendFundsToUser()` with `tokenGasPrice` = `1` on Polygon, `totalGasUsed` = `42000` and the gas price is `30G wei`, `Executor` paid `0.00126 MATIC` for gas.\n\n```solidity\nuint256 gasFee = 42000 * 1;\n...\namountToTransfer = 10000000 - (0 + 42000);\n```\n\n3.  Bob received 0.09958 WBTC, and paid `0.00042 WBTC` for the gas, the gas fee was overcharged by 6666 times.\n\n### Recommended Mitigation Steps\n\nConsider changing `tokenGasPrice` to a value with decimals of `18` and it should be used like this:\n\n```solidity\nuint256 gasFee = totalGasUsed * tokenGasPrice / 1e18;\n```\n\n**[ankurdubey521 (Biconomy) acknowledged and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/145#issuecomment-1082941401):**\n > I'm not sure I agree with the recommendation since If a token atom's value exceeds the gas paid for the transaction, it would still be truncated if we send a tokenGasPrice multiplied by 10e18 and divide it in the contract.\n> \n> But this is a great catch, I think the bigger issue here is that for certain tokens it is not feasible to charge gas fee on a per transaction basis, we'll have to think about how to mitigate this.\n\n**[pauliax (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/145#issuecomment-1129050076):**\n > The sponsor better knows the design and intentions of the system, and they claim to be dealing with the token atoms on a contract level. However, I would still like to emphasize possible risks with different tokens and decimals. It is a common issue, so I would like to group similar issues together and assign them a severity of Medium.\n\n\n\n***\n\n## [[M-14] `LiquidityFarming.sol` Unbounded for loops can potentially freeze users' funds in edge cases](https://github.com/code-423n4/2022-03-biconomy-findings/issues/136)\n_Submitted by WatchPug_\n\nIn the current implementation of `withdraw()`, it calls `_sendRewardsForNft()` at L243 which calls `updatePool()` at L129 which calls `getUpdatedAccTokenPerShare()` at L319.\n\n`getUpdatedAccTokenPerShare()` will loop over `rewardRateLog` to calculate an up to date value of accTokenPerShare.\n\n[LiquidityFarming.sol#L270-L285](https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityFarming.sol#L270-L285)<br>\n\n```solidity\nwhile (true) {\n    if (lastUpdatedTime >= counter) {\n        break;\n    }\n    unchecked {\n        accumulator +=\n            rewardRateLog[_baseToken][i].rewardsPerSecond *\n            (counter - max(lastUpdatedTime, rewardRateLog[_baseToken][i].timestamp));\n    }\n    counter = rewardRateLog[_baseToken][i].timestamp;\n    if (i == 0) {\n        break;\n    }\n    --i;\n}\n```\n\nThis won't be a problem in the usual cases, however, if there is a baseToken that:\n\n*   the `rewardPerSecond` get updated quite frequently;\n*   the liquidityProviders are inactive (no deposits / withdrawals for a period of time)\n\nThen by the time one of the `liquidityProviders` come to `withdraw()`, the tx may revert due to out-of-gas.\n\nAs the `rewardRateLog` is now accumulated to a large size that causes the loop costs more gas than the block gas limit.\n\nThere is a really easy fix for this, it will also make the code simpler:\n\n### Recommended Mitigation Steps\n\nConsider removing `rewardRateLog` and change `setRewardPerSecond()` to:\n\n```solidity\nfunction setRewardPerSecond(address _baseToken, uint256 _rewardPerSecond) public onlyOwner {\n    updatePool(baseToken);\n    rewardRate[_baseToken] = RewardsPerSecondEntry(_rewardPerSecond, block.timestamp);\n    emit LogRewardPerSecond(_baseToken, _rewardPerSecond);\n}\n```\n\n**[ankurdubey521 (Biconomy) acknowledged](https://github.com/code-423n4/2022-03-biconomy-findings/issues/136)**\n\n**[pauliax (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/136#issuecomment-1114779005):**\n > A valid concern, but I think it should be of Medium severity: _\"Assets not at direct risk, but the function of the protocol or its availability could be impacted, or leak value with a hypothetical attack path with stated assumptions, but external requirements.\"_\n\n\n\n***\n\n## [[M-15] `WhitelistPeriodManager`: Improper state handling of exclusion removals](https://github.com/code-423n4/2022-03-biconomy-findings/issues/72)\n_Submitted by hickuphh3, also found by throttle_\n\n[WhitelistPeriodManager.sol#L178-L184](https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/WhitelistPeriodManager.sol#L178-L184)<br>\n[WhitelistPeriodManager.sol#L115-L125](https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/WhitelistPeriodManager.sol#L115-L125)<br>\n\nThe `totalLiquidity` and `totalLiquidityByLp` mappings are not updated when an address is removed from the `isExcludedAddress` mapping. While this affects the enforcement of the cap limits and the `getMaxCommunityLpPositon()` function, the worst impact this has is that the address cannot have liquidity removed / transferred due to subtraction overflow.\n\nIn particular, users can be prevented from withdrawing their staked LP tokens from the liquidity farming contract should it become non-excluded.\n\n### Proof of Concept\n\n*   Assume liquidity farming address `0xA` is excluded\n*   Bob stakes his LP token\n*   Liquidity farming contract is no longer to be excluded: `setIsExcludedAddressStatus([0xA, false])`\n*   Bob attempts to withdraw liquidity → reverts because `totalLiquidityByLp[USDC][0xA] = 0`, resulting in subtraction overflow.\n\n```jsx\n// insert test case in Withdraw test block of LiquidityFarming.tests.ts\nit.only('will brick withdrawals by no longer excluding farming contract', async () => {\n  await farmingContract.deposit(1, bob.address);\n  await wlpm.setIsExcludedAddressStatus([farmingContract.address], [false]);\n  await farmingContract.connect(bob).withdraw(1, bob.address);\n});\n\n// results in\n// Error: VM Exception while processing transaction: reverted with panic code 0x11 (Arithmetic operation underflowed or overflowed outside of an unchecked block)\n```\n\n### Recommended Mitigation Steps\n\nThe simplest way is to prevent exclusion removals.\n\n```jsx\nfunction setIsExcludedAddresses(address[] memory _addresses) external onlyOwner {\n  for (uint256 i = 0; i < _addresses.length; ++i) {\n    isExcludedAddress[_addresses[i]] = true;\n    // emit event\n    emit AddressExcluded(_addresses[i]);\n  }\n}\n```\n\n**[ankurdubey521 (Biconomy) confirmed](https://github.com/code-423n4/2022-03-biconomy-findings/issues/72)**\n\n**[pauliax (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/72#issuecomment-1114794396):**\n > Great find, but I think it should be of Medium severity because it requires an external condition, the owner should stop excluding the contract, and also in case that happens, function setIsExcludedAddresses can be used to exclude this address again so the funds are not stuck forever in this case.\n\n\n\n***\n\n## [[M-16] `WhitelistPeriodManager`: Improper state handling of exclusion additions](https://github.com/code-423n4/2022-03-biconomy-findings/issues/75)\n_Submitted by hickuphh3_\n\n[WhitelistPeriodManager.sol#L178-L184](https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/WhitelistPeriodManager.sol#L178-L184)<br>\n[WhitelistPeriodManager.sol#L83-L99](https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/WhitelistPeriodManager.sol#L83-L99)<br>\n\nThe `totalLiquidity` and `totalLiquidityByLp` mappings are not updated when an address is added to the `isExcludedAddress` mapping. This affects the enforcement of the cap limits and the `getMaxCommunityLpPositon()` function, which implicitly assumes that whitelisted addresses will have 0 liquidity, for addresses with non-zero liquidity at the time of addition to the whitelist.\n\n### Proof of Concept\n\n*   Assume the following initial conditions:\n    *   Alice’s address `0xA` is the sole USDC liquidity provider\n        *   `totalLiquidity[USDC] = 500`\n        *   `totalLiquidity[USDC][0xA] = 500`\n    *   USDC total cap of `500`, ie. `perTokenTotalCap[USDC] = 500`\n*   Exclude Alice’s address `0xA`: `setIsExcludedAddressStatus([0xA, true])`\n    *   totalLiquidity mappings are unchanged\n*   The following deviant behaviour is observed:\n    *   `getMaxCommunityLpPositon()` returns `500` when it should return `0`\n    *   All non-excluded addresses are unable to provide liquidity when they should have been able to, as Alice’s liquidity should have been excluded.\n    ```jsx\n    // insert test case in WhitelistPeriodManager.test.ts\n    describe.only(\"Test whitelist addition\", async () => {\n      it('produces deviant behaviour if excluding address with existing liquidity', async () => {\n        await wlpm.setCaps([token.address], [500], [500]);\n        await liquidityProviders.connect(owner).addTokenLiquidity(token.address, 500);\n        await wlpm.setIsExcludedAddressStatus([owner.address], [true]);\n        // 1) returns 500 instead of 0\n        console.log((await wlpm.getMaxCommunityLpPositon(token.address)).toString());\n        // 2) bob (or other non-excluded addresses) will be unable to add liquidity\n        await expect(liquidityProviders.connect(bob).addTokenLiquidity(token.address, 1)).to.be.revertedWith('ERR__LIQUIDITY_EXCEEDS_PTTC');\n      });\n    });\n    ```\n\n### Recommended Mitigation Steps\n\nCheck that the address to be excluded is not holding any LP token at the time of exclusion.\n\n```jsx\n// in setIsExcludedAddressStatus()\nfor (uint256 i = 0; i < _addresses.length; ++i) {\n  if (_status[i]) {\n    require(lpToken.balanceOf(_addresses[i]) == 0, 'address has existing liquidity');\n  }\n  ...\n}\n```\n\n**[ankurdubey521 (Biconomy) confirmed](https://github.com/code-423n4/2022-03-biconomy-findings/issues/75)**\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/75#issuecomment-1114843528):**\n > I think it is a different issue than M-15, based on the description it deserves a severity of Medium.\n\n\n\n***\n\n## [[M-17] wrong condition checking in price calculation](https://github.com/code-423n4/2022-03-biconomy-findings/issues/105)\n_Submitted by CertoraInc_\n\n[LiquidityProviders.sol#L180-L186](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityProviders.sol#L180-L186)<br>\n\nThe `getTokenPriceInLPShares` function calculates the token price in LP shares, but it checks a wrong condition - if supposed to return `BASE_DIVISOR` if the total reserve is zero, not if the total shares minted is zero. This might leads to a case where the price is calculated incorrectly, or a division by zero is happening.\n\n### Proof of Concept\n\nThis is the wrong function implementation:\n\n```sol\nfunction getTokenPriceInLPShares(address _baseToken) public view returns (uint256) {\n    uint256 supply = totalSharesMinted[_baseToken];\n    if (supply > 0) {\n        return totalSharesMinted[_baseToken] / totalReserve[_baseToken];\n    }\n    return BASE_DIVISOR;\n}\n```\n\nThis function is used in this contract only in the removeLiquidity and claimFee function, so it's called only if funds were already deposited and totalReserve is not zero, but it can be problematic when other contracts will use this function (it's a public view function so it might get called from outside of the contract).\n\n### Recommended Mitigation Steps\n\nThe correct code should be:\n\n```sol\nfunction getTokenPriceInLPShares(address _baseToken) public view returns (uint256) {\n    uint256 reserve = totalReserve[_baseToken];\n    if (reserve > 0) {\n        return totalSharesMinted[_baseToken] / totalReserve[_baseToken];\n    }\n    return BASE_DIVISOR;\n}\n```\n\n**[ankurdubey521 (Biconomy) confirmed and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/105):**\n > [HP-25: C4 Audit Fixes, Dynamic Fee Changes bcnmy/hyphen-contract#42](https://github.com/bcnmy/hyphen-contract/pull/42)\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/105#issuecomment-1114802864):**\n > Great catch, even though the real impact is not that clear and severe, I will favor a warden and leave it as Medium severity.\n\n**[Pedroais (warden) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/105#issuecomment-1140059559):**\n > The warden didn't show any attack path that could leak value. This is a view function that is incorrect as to spec so I think this should be a low.\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/105#issuecomment-1145672408):**\n > Yes, it is a view function but nevertheless, I think it possesses a hypothetical risk path that this function can fail at runtime if the totalSharesMinted is 0. It is somewhere between low and medium categories, I am curious what other certified wardens think about where should this belong.\n\n\n\n***\n\n## [[M-18]  Possible frontrun on deposits on `LiquidityPool`](https://github.com/code-423n4/2022-03-biconomy-findings/issues/180)\n*Submitted by Cantor_Dust, also found by WatchPug*\n\nRewards are given to a user for depositing either ERC20 tokens or their native token into the LiquidityPool. This reward is used to incentivize users to deposit funds into the liquidity pool when the pool is not in an equilibrium state.\n\nFor regular users, this liquidity pool state fluctuates based on the frequency and amount of deposits made to the liquidity pool. If a malicious user can control the state of the liquidity pool before a victim deposits tokens into the liquidity pool, they can gain double rewards.\n\nTo gain these double rewards, a malicious user can watch the mempool for transactions that will receive a reward when the deposit occurs. When a malicious user sees that victim deposit, the malicious user can attach a higher fee to their transaction and initiate a deposit. This will allow the malicious user's transaction to front-run before the victim's transaction.\n\nOnce the malicious user's deposit is complete, the liquidity pool state will be in a near equilibrium state. Then, the victim's deposit will occur which causes the liquidity pool state to no longer be in equilibrium.\n\nFinally, the malicious user will make a final deposit gaining yet another reward for bringing the liquidity pool state back to equilibrium.\n\nTo sum up, a malicious user can create a sandwich attack where they deposit their own tokens before and after a victim's transaction. This will allow the malicious user to double dip and gain rewards twice due to victim's deposit.\n\n### Proof of Concept\n\nLet's look at the depositNative function which is the simpler of the two deposit functions.\n\nThe key component in the depositNative function is the getRewardAmount which can be found [here](https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L255). The getRewardAmount calculates how much available vs supplied liquidity exists in the liquidity pool. [Here](https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L175-L188) there are no time-weighted checks to calculate the available vs. supplied liquidity. With a lack of checks for time-weight and that there are no frontrun checks against deposits, it's trivial to front-run deposits and control the liquidity of the liquidity such that the reward amount can be double-dipped.\n\n### Recommended Mitigation Steps\n\n1.  By allowing each deposit to manipulate the liquidity pool state from either a deficient or excessive state, malicious users can double dip on rewards.\n2.  Alternative approaches to calculating rewards is possible, for example a dutch auction style deposit system where rewards are distributed evenly could reduce an impact of a frontrun attack.\n3.  A simpler approach is to record liquidity states at specific block timestamps and check against the timestamp for the current block state.\n\n**[ankurdubey521 (Biconomy) acknowledged](https://github.com/code-423n4/2022-03-biconomy-findings/issues/180)**\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/180#issuecomment-1114800888):**\n > Great find, mempool lurking monsters could definitely use this opportunity.\n\n\n\n***\n\n## [[M-19] `sharesToTokenAmount`: Division by zero](https://github.com/code-423n4/2022-03-biconomy-findings/issues/53)\n_Submitted by cmichel, also found by cccz and CertoraInc_\n\n[LiquidityProviders.sol#L192](https://github.com/code-423n4/2022-03-biconomy/blob/db8a1fdddd02e8cc209a4c73ffbb3de210e4a81a/contracts/hyphen/LiquidityProviders.sol#L192)<br>\n\nThe public `sharesToTokenAmount` function does not check if the denominator `totalSharesMinted[_tokenAddress]` is zero.<br>\nNeither do the callers of this function. The function will revert.<br>\nCalling functions like `getFeeAccumulatedOnNft` and `sharesToTokenAmount` from another contract should never revert.<br>\n\n### Recommended Mitigation Steps\n\nReturn 0 in case `totalSharesMinted[_tokenAddress]` is zero.\n\n**[ankurdubey521 (Biconomy) confirmed](https://github.com/code-423n4/2022-03-biconomy-findings/issues/53)**\n\n**[pauliax (judge) commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/53#issuecomment-1120953089):**\n > A valid concern of runtime error.\n\n\n\n***\n\n## [[M-20] Liquidity providers unable to remove liquidity when the pool is in deficit state](https://github.com/code-423n4/2022-03-biconomy-findings/issues/93)\n_Submitted by kyliek_\n\n[LiquidityProviders.sol#L388](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityProviders.sol#L388)<br>\n[LiquidityProviders.sol#L392](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityProviders.sol#L392)<br>\n\nLP token holders can not redeem their tokens when the pool is in the deficit state, i.e. `currentLiquidity << providedLiquidity`. This is due to that LP shares are computed based on `providedLiquidity` and the actual available pool balance is based on `currentLiquidity`.\n\n### Proof of Concept\n\nWhen a high valued withdrawal happens in the liquidity pool of the destination chain, the current liquidity will be reduced when the executor calls `sendFundsToUser`<br>\n[LiquidityPool.sol#L285](https://github.com/code-423n4/2022-03-biconomy/blob/04751283f85c9fc94fb644ff2b489ec339cd9ffc/contracts/hyphen/LiquidityPool.sol#L285)<br>\n\nand the pool contract balance will also be reduced by the same amount. The pool reached a deficit state with provided liquidity much bigger than current liquidity.\n\nThe LP shares are computed based on the value of `totalReserve` that is roughly equivalent to `totalLiquidity + LpFees`. In a deficit state, `totalReserve` could be much bigger than the available pool balance (up to 90% since max fee is 10%).\nIf the LP token holder wants to redeem his shares,\n\n            _decreaseCurrentLiquidity(_tokenAddress, _amount);\n\nwill underflow and revert and\n\n            _transferFromLiquidityPool(_tokenAddress, _msgSender(), amountToWithdraw);\n\nwill revert because there is not enough balance.\n\n### Recommended Mitigation Steps\n\nThis is a tricky problem. On one hand, separating `currentLiquidity` from `providedLiquidity` made sure that by bridging tokens over, it will not inflate or deflate the pool. On the other hand, decoupling the two made it hard to compute the actual available liquidity to redeem LP shares. One may need to think through this a bit more.\n\n**[ankurdubey521 (Biconomy) disagreed with High severity and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/93#issuecomment-1082888010):**\n > Liquidity Providers will be able to withdraw their funds as long as they're sufficient `currentLiquidity` in the pool, as you mentioned. This will be the case when all pools are balanced, ie the current liquidity is very close to the supplied liquidity.\n> \n> By design, hyphen liquidity pools incentivize people to rebalance the pools by providing rewards from the incentive pool, so we believe this should not be that big of an issue in practice.\n\n**[pauliax (judge) decreased severity to Medium and commented](https://github.com/code-423n4/2022-03-biconomy-findings/issues/93#issuecomment-1120988594):**\n > A valid concern, and even though per the sponsor's comment it should not be a problem in practice, a hypothetical path of risk still exists so I would like to leave this as of Medium severity issue.\n\n\n\n***\n\n# Low Risk and Non-Critical Issues\n\nFor this contest, 39 reports were submitted by wardens detailing low risk and non-critical issues. The [report highlighted below](https://github.com/code-423n4/2022-03-biconomy-findings/issues/78) by **hickuphh3** received the top score from the judge.\n\n*The following wardens also submitted reports: [cmichel](https://github.com/code-423n4/2022-03-biconomy-findings/issues/62), [0x1f8b](https://github.com/code-423n4/2022-03-biconomy-findings/issues/31), [catchup](https://github.com/code-423n4/2022-03-biconomy-findings/issues/187), [rfa](https://github.com/code-423n4/2022-03-biconomy-findings/issues/172), [CertoraInc](https://github.com/code-423n4/2022-03-biconomy-findings/issues/103), [PPrieditis](https://github.com/code-423n4/2022-03-biconomy-findings/issues/126), [IllIllI](https://github.com/code-423n4/2022-03-biconomy-findings/issues/82), [Ruhum](https://github.com/code-423n4/2022-03-biconomy-findings/issues/95), [gzeon](https://github.com/code-423n4/2022-03-biconomy-findings/issues/143), [minhquanym](https://github.com/code-423n4/2022-03-biconomy-findings/issues/65), [bitbopper](https://github.com/code-423n4/2022-03-biconomy-findings/issues/131), [0xngndev](https://github.com/code-423n4/2022-03-biconomy-findings/issues/117), [benk10](https://github.com/code-423n4/2022-03-biconomy-findings/issues/114), [Dravee](https://github.com/code-423n4/2022-03-biconomy-findings/issues/193), [kenta](https://github.com/code-423n4/2022-03-biconomy-findings/issues/189), [kyliek](https://github.com/code-423n4/2022-03-biconomy-findings/issues/99), [defsec](https://github.com/code-423n4/2022-03-biconomy-findings/issues/112), [saian](https://github.com/code-423n4/2022-03-biconomy-findings/issues/108), [samruna](https://github.com/code-423n4/2022-03-biconomy-findings/issues/5), [berndartmueller](https://github.com/code-423n4/2022-03-biconomy-findings/issues/167), [robee](https://github.com/code-423n4/2022-03-biconomy-findings/issues/9), [danb](https://github.com/code-423n4/2022-03-biconomy-findings/issues/25), [jayjonah8](https://github.com/code-423n4/2022-03-biconomy-findings/issues/195), [hubble](https://github.com/code-423n4/2022-03-biconomy-findings/issues/165), [WatchPug](https://github.com/code-423n4/2022-03-biconomy-findings/issues/148), [0xwags](https://github.com/code-423n4/2022-03-biconomy-findings/issues/184), [Cantor_Dust](https://github.com/code-423n4/2022-03-biconomy-findings/issues/188), [TerrierLover](https://github.com/code-423n4/2022-03-biconomy-findings/issues/43), [0xNazgul](https://github.com/code-423n4/2022-03-biconomy-findings/issues/171), [csanuragjain](https://github.com/code-423n4/2022-03-biconomy-findings/issues/196), [throttle](https://github.com/code-423n4/2022-03-biconomy-findings/issues/83), [z3s](https://github.com/code-423n4/2022-03-biconomy-findings/issues/102), [ye0lde](https://github.com/code-423n4/2022-03-biconomy-findings/issues/169), [XDms](https://github.com/code-423n4/2022-03-biconomy-findings/issues/122), [cryptphi](https://github.com/code-423n4/2022-03-biconomy-findings/issues/33), [hagrid](https://github.com/code-423n4/2022-03-biconomy-findings/issues/110), [0v3rf10w](https://github.com/code-423n4/2022-03-biconomy-findings/issues/151), and [0xDjango](https://github.com/code-423n4/2022-03-biconomy-findings/issues/129).*\n\n## Codebase Impressions & Summary\n\nOverall, code quality for the Hyphen 2.0 contracts is high. Supporting documentation was adequate in helping to understand the incentive and fee mechanisms for cross-chain transfers.\n\nThe contracts in scope have 81.36% statement and 54.91% branch test coverage. Notably, the Liquidity Pool’s `permitAndDepositErc20()` and `permitEIP2612AndDepositErc20()` functions that allow users to deposit with signed messages are untested. It will be ideal to write more tests so that better coverage is achieved. Also note that some liquidity farming tests often fail because rewards are continuously accruing, so the actual amount tends to be greater than the expected amount.\n\n## [L-01] Conflicting values of `BASE_DIVISOR`\n\n### Line References\n\n<https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L20>\n\n<https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityProviders.sol#L27>\n\n### Description\n\n`BASE_DIVISOR` is `10_000_000_000` in `LiquidityPool`, but `10**18` in `LiquidityProviders`. This can easily confuse 3rd parties integrating the token bridge.\n\n### Recommended Mitigation Steps\n\nRename either variable. I recommend renaming the instance in `LiquidityPool` to `FEE_DIVISOR`.\n\n## [L-02] Sub-optimal calculations in `getAmountToTransfer()` results in wei losses\n\n### Line References\n\n<https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L317-L322>\n\n### Description\n\nIn the scenario where the transfer fee exceeds the equilibrium fee, the excess gets credited to the incentive pool. Disregarding from the fact that a bracket is incorrectly placed causing a massive loss in incentives (raised in separate issue), there are cases where 1 wei is unaccounted for from precision loss in the calculation.\n\n```jsx\nlpFee = (amount * tokenManager.getTokensInfo(tokenAddress).equilibriumFee) / BASE_DIVISOR;\n// altered for bracket positioning\nincentivePool[tokenAddress] +=\n  (amount * (transferFeePerc - tokenManager.getTokensInfo(tokenAddress).equilibriumFee)) /\n  BASE_DIVISOR;\n```\n\n### Proof of Concept\n\n*   `amount = 337671308498`\n*   `transferFeePerc = 181480242`\n*   `equilibriumFee = 10000000` (0.1%)\n\nCalculated amounts are\n\n*   `lpFee = 337671308`\n*   `incentive = 337671308498 * (181480242 - 10000000) / BASE_DIVISOR = 5790395769`\n\nTotal fee calculated = `337671308` + `5790395769` = `6128067077`\n\n*   `transferFeeAmount = 337671308498 * 181480242 / BASE_DIVISOR = 6128067078`\n\nWe therefore see 1 wei being unaccounted for.\n\n### Recommended Mitigation Steps\n\n```jsx\nuint256 transferFeeAmount = (amount * transferFeePerc) / BASE_DIVISOR;\nuint256 lpFee;\nuint256 equilibriumFee = tokenManager.getTokensInfo(tokenAddress).equilibriumFee;\nif (transferFeePerc > equilibriumFee) {\n  lpFee = amount * equilibriumFee / BASE_DIVISOR;\n  incentivePool[tokenAddress] += transferFeeAmount - lpFee;\n} else {\n...\n}\n```\n\n## [L-03] Unbounded iterations for `getMaxCommunityLpPositon()`\n\n### Line References\n\n<https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/WhitelistPeriodManager.sol#L248>\n\n### Description\n\nThe `getMaxCommunityLpPosition()` iterates through the LP token supply to obtain the maximum community LP position obtained. Because the supply of NFT tokens is uncapped, there will come a point where this function runs out of gas.\n\n### Proof of Concept\n\nIn the worst case, the limit seems to be at about 1250 NFTs where the (N+1)th LP token has more liquidity than the Nth LP token.\n\n```jsx\nit.only(\"Tries to get max iterations possible for getMaxCommunityLpPositon()\", async () => {\n  let MAX_LOOPS = 1250;\n  // summation formula for 1 to MAX_LOOPS\n  let maxCap = MAX_LOOPS * (MAX_LOOPS + 1) / 2; \n  await wlpm.setCaps([token.address], [maxCap], [maxCap]);\n  for (let i = 1; i <= MAX_LOOPS; i++) {\n    console.log(`adding ${i}`);\n    // worst case: every iteration in getMaxCommunityLpPositon() enters if case\n    // by giving next tokenId more liquidity\n    await liquidityProviders.connect(owner).addTokenLiquidity(token.address, i);\n  }\n  console.log('getting max lp position...');\n  // Runs out of gas\n  // Error: Transaction reverted and Hardhat couldn't infer the reason. Please report this to help us improve Hardhat.\n  await wlpm.getMaxCommunityLpPositon(token.address);\n});\n```\n\n### Recommended Mitigation Steps\n\nHave start and end indexes as inputs to cap the number of iterations performed.\n\n## [L-04] `addSupportedToken()` allows zero fees to be set, but `changeFee()` doesn’t\n\n### Line References\n\n<https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/token/TokenManager.sol#L49-L53>\n\n<https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/token/TokenManager.sol#L91-L98>\n\n### Description\n\nAs per the title, the `addSupportedToken()` allows for zero `equilibriumFee` or `maxFee` to be set, but `changeFee()` doesn’t.\n\n### Recommended Mitigation Steps\n\nEither include non-zero checks in `addSupportedToken()` or remove them in `changeFee()`.\n\n## [L-05] `_sendErc20AndGetSentAmount()` uses recipient instead of sender balance difference\n\n### Line References\n\n<https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L109-L117>\n\n### Description\n\nThe function name implies that the sent amount should be returned, but it uses the amount received by the recipient instead.\n\n```jsx\nuint256 recepientBalance = _token.balanceOf(_to);\n_token.safeTransfer(_to, _amount);\nreturn _token.balanceOf(_to) - recepientBalance;\n```\n\nIf a fee-on-transfer token is the reward token, the amount sent vs received would differ.\n\n### Recommended Mitigation Steps\n\nDecide which value is to be returned and logged. Either update the function to be `_sendErc20AndGetReceivedAmount()` or change it to use the contract’s balance difference instead.\n\n```jsx\nuint256 senderBalance = _token.balanceOf(address(this));\n_token.safeTransfer(_to, _amount);\nreturn _token.balanceOf(address(this)) - senderBalance;\n```\n\n## [L-06] Add constructor initializer in implementation contracts\n\n### Description\n\nAs per [OpenZeppelin’s (OZ) recommendation](https://forum.openzeppelin.com/t/uupsupgradeable-vulnerability-post-mortem/15680/6), “The guidelines are now to make it impossible for *anyone* to run `initialize` on an implementation contract, by adding an empty constructor with the `initializer` modifier. So the implementation contract gets initialized automatically upon deployment.”\n\nNote that this behaviour is also incorporated the [OZ Wizard](https://wizard.openzeppelin.com/) since the UUPS vulnerability discovery: “Additionally, we modified the code generated by the [Wizard](https://wizard.openzeppelin.com/) to include a constructor that automatically initializes the implementation when deployed.”\n\n### Recommended Mitigation Steps\n\nAdd an empty constructor method to the relevant upgradeable contracts.\n\n```jsx\n/// @custom:oz-upgrades-unsafe-allow constructor\nconstructor() initializer {}\n```\n\n## [L-07] Consider having limit on gas fee charged\n\n### Line References\n\n<https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L330-L336>\n\n### Description\n\nThere is no limit to the gas fee charged. While it is claimed that “there are no incentives for the executors”, in reality, executors can be indirectly incentivised by inflating the gas price so that they will be credited a higher fee.\n\nThe fee can be as high as the bridged amount - transfer fee, leaving nothing for the user. While there is a lot of trust placed on the executor already, it would help to be able to provide a trust-less solution by enforcing a cap on the gas fee.\n\n### Recommended Mitigation Steps\n\nLimit the maximum gas fee chargeable.\n\n## [N-01] Typo errors\n\n*   [`reightful` → `rightful`](https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L178)\n*   [`Claculate` → `Calculate`](https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityProviders.sol#L357)\n*   [`sushi` → `reward`](https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L167-L168)\n\n## [N-02] Missing underscore for error\n\n### Line Reference\n\n<https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L103>\n\n### Description\n\nThe format seems to be 2 underscores after `ERR`, but the line reference above only has 1 underscore: `ERR_REWARD_TOKEN_IS_ZERO`.\n\n### Recommended Mitigation Steps\n\n`ERR_REWARD_TOKEN_IS_ZERO` -> `ERR__REWARD_TOKEN_IS_ZERO`\n\n## [N-03] Swap comment order\n\n### Line Reference\n\n<https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L351>\n\n### Description\n\nThe variable order in the comment do not correspond to that of the implementation. For readability, I recommend that they do.\n\n### Recommended Mitigation Steps\n\n```jsx\nuint256 numerator = providedLiquidity * equilibriumFee * maxFee; // L(e) * F(e) * F(max)\n```\n\n## [N-04] Deep factor not customisable\n\n### Reference\n\n[https://biconomy.notion.site/Self-Balancing-Cross-Chain-Liquidity-Pools-c19a725673964d5aaec6b16e5c7ce9a5](https://www.notion.so/Self-Balancing-Cross-Chain-Liquidity-Pools-c19a725673964d5aaec6b16e5c7ce9a5)\n\n### Description\n\nThe fee calculation formula mentions a deep factor `d`: *Value that decides how much deeper the curve looks.* Readers may have the impression that this may therefore be a customisable parameter in the contract, but in actual factor, is set to a constant value of `1`.\n\n### Recommended Mitigation Steps\n\nUsers / readers should be made aware that the deep factor has been fixed.\n\n## [N-05] Incorrect comment for description of `BASE_DIVISOR`\n\n### Line References\n\n<https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L20>\n\n### Description\n\n`BASE_DIVISOR` is defined as `10_000_000_000;` with accompanying description `// Basis Points * 100 for better accuracy`.\n\nThis isn’t accurate as `100% = 10,000` basis points, and `10,000 * 100 = 1_000_000`, not `10_000_000_000`.\n\n### Recommended Mitigation Steps\n\nEither update the comment to be\n\n`uint256 private constant BASE_DIVISOR = 10_000_000_000; // 100 * (Basis Points ^ 2) for better accuracy`\n\nor the `BASE_DIVISOR` itself to be a different value.\n\n## [N-06] Standardize fee denomination\n\n### Line References\n\n<https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L20>\n\n<https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityPool.sol#L350>\n\n### Description\n\nIn relation to L02, there are conflicting definitions of the fee denomination. `BASE_DIVISOR` says that fees are in `Basis points * 100`, while the comment in `getTransferFees()` says they are specified in `basis points * 10`.\n\n### Recommended Mitigation Steps\n\nStandardize the fee denomination.\n\n## [N-07] Incorrect comment for address to use for withdrawing native token\n\n### Line References\n\n<https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L175>\n\n<https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityFarming.sol#L186>\n\n### Description\n\nThe comment says to `use 0x00 for Ethereum`, but the implementation uses `NATIVE` instead.\n\n### Recommended Mitigation Steps\n\n`use 0x00 for Ethereum` → `use NATIVE for native token`\n\n## [N-08] Clarify reserve variable descriptions\n\n### Line References\n\n<https://github.com/code-423n4/2022-03-biconomy/blob/main/contracts/hyphen/LiquidityProviders.sol#L42-L44>\n\n### Description\n\nIt is unclear what each variable consists of, because there is:\n\n*   Supplied liquidity (SL) from liquidity providers\n*   Available liquidity: SL + net deposits and withdrawals from bridging activity\n*   Incentive fees\n*   Gas fees\n*   LP fees (accumulated equilibrium fees)\n\n### Recommended Mitigation Steps\n\nIt would be best to explictly state what each variable consists of for clarity.\n\n```jsx\nmapping(address => uint256) public totalReserve; // Supplied Liquidity (SL) + LP Fees\nmapping(address => uint256) public totalLiquidity; // Supplied Liquidity only\n// Available liquidity = SL + net deposits and withdrawals from bridging activity\nmapping(address => uint256) public currentLiquidity; // Available Liquidity + All Fees (LP, Incentive, Gas), updated on every in and out transfer\n```\n\n\n\n***\n\n# Gas Optimizations\n\nFor this contest, 39 reports were submitted by wardens detailing gas optimizations. The [report highlighted below](https://github.com/code-423n4/2022-03-biconomy-findings/issues/67) by **Dravee** received the top score from the judge.\n\n*The following wardens also submitted reports: [IllIllI](https://github.com/code-423n4/2022-03-biconomy-findings/issues/84), [CertoraInc](https://github.com/code-423n4/2022-03-biconomy-findings/issues/101), [TerrierLover](https://github.com/code-423n4/2022-03-biconomy-findings/issues/42), [saian](https://github.com/code-423n4/2022-03-biconomy-findings/issues/107), [0xngndev](https://github.com/code-423n4/2022-03-biconomy-findings/issues/128), [wuwe1](https://github.com/code-423n4/2022-03-biconomy-findings/issues/69), [WatchPug](https://github.com/code-423n4/2022-03-biconomy-findings/issues/147), [Jujic](https://github.com/code-423n4/2022-03-biconomy-findings/issues/89), [benk10](https://github.com/code-423n4/2022-03-biconomy-findings/issues/115), [robee](https://github.com/code-423n4/2022-03-biconomy-findings/issues/11), [hickuphh3](https://github.com/code-423n4/2022-03-biconomy-findings/issues/77), [kenta](https://github.com/code-423n4/2022-03-biconomy-findings/issues/190), [throttle](https://github.com/code-423n4/2022-03-biconomy-findings/issues/81), [rfa](https://github.com/code-423n4/2022-03-biconomy-findings/issues/170), [bitbopper](https://github.com/code-423n4/2022-03-biconomy-findings/issues/152), [z3s](https://github.com/code-423n4/2022-03-biconomy-findings/issues/100), [berndartmueller](https://github.com/code-423n4/2022-03-biconomy-findings/issues/166), [pedroais](https://github.com/code-423n4/2022-03-biconomy-findings/issues/191), [PPrieditis](https://github.com/code-423n4/2022-03-biconomy-findings/issues/127), [defsec](https://github.com/code-423n4/2022-03-biconomy-findings/issues/35), [gzeon](https://github.com/code-423n4/2022-03-biconomy-findings/issues/141), [Cantor_Dust](https://github.com/code-423n4/2022-03-biconomy-findings/issues/176), [samruna](https://github.com/code-423n4/2022-03-biconomy-findings/issues/6), [Tomio](https://github.com/code-423n4/2022-03-biconomy-findings/issues/156), [sirhashalot](https://github.com/code-423n4/2022-03-biconomy-findings/issues/173), [antonttc](https://github.com/code-423n4/2022-03-biconomy-findings/issues/32), [0v3rf10w](https://github.com/code-423n4/2022-03-biconomy-findings/issues/149), [0x1f8b](https://github.com/code-423n4/2022-03-biconomy-findings/issues/30), [0xDjango](https://github.com/code-423n4/2022-03-biconomy-findings/issues/116), [oyc_109](https://github.com/code-423n4/2022-03-biconomy-findings/issues/27), [minhquanym](https://github.com/code-423n4/2022-03-biconomy-findings/issues/66), [peritoflores](https://github.com/code-423n4/2022-03-biconomy-findings/issues/183), [Kenshin](https://github.com/code-423n4/2022-03-biconomy-findings/issues/41), [csanuragjain](https://github.com/code-423n4/2022-03-biconomy-findings/issues/21), [0xwags](https://github.com/code-423n4/2022-03-biconomy-findings/issues/154), [Kiep](https://github.com/code-423n4/2022-03-biconomy-findings/issues/130), [0xNazgul](https://github.com/code-423n4/2022-03-biconomy-findings/issues/155), and [hagrid](https://github.com/code-423n4/2022-03-biconomy-findings/issues/111).*\n\n## Table of Contents\n\nSee [original submission](https://github.com/code-423n4/2022-03-biconomy-findings/issues/67).\n\n## Foreword\n\n*   **Storage-reading optimizations**\n\n> The code can be optimized by minimising the number of SLOADs. SLOADs are expensive (100 gas) compared to MLOADs/MSTOREs (3 gas). In the paragraphs below, please see the `@audit-issue` tags in the pieces of code's comments for more information about SLOADs that could be saved by caching the mentioned **storage** variables in **memory** variables.\n\n*   **Unchecking arithmetics operations that can't underflow/overflow**\n\n> Solidity version 0.8+ comes with implicit overflow and underflow checks on unsigned integers. When an overflow or an underflow isn't possible (as an example, when a comparison is made before the arithmetic operation, or the operation doesn't depend on user input), some gas can be saved by using an `unchecked` block: <https://docs.soliditylang.org/en/v0.8.10/control-structures.html#checked-or-unchecked-arithmetic>\n\n*   **`@audit` tags**\n\n> The code is annotated at multiple places with `//@audit` comments to pinpoint the issues. Please, pay attention to them for more details.\n\n## File: LPToken.sol\n\n### function updateTokenMetadata()\n\n```solidity\nFile: LPToken.sol\n89:     function updateTokenMetadata(uint256 _tokenId, LpTokenMetadata memory _lpTokenMetadata) //@audit should be calldata\n90:         external\n91:         onlyHyphenPools\n92:         whenNotPaused\n93:     {\n94:         require(_exists(_tokenId), \"ERR__TOKEN_DOES_NOT_EXIST\");\n95:         tokenMetadata[_tokenId] = _lpTokenMetadata;\n96:     }\n```\n\n#### Use `calldata` instead of `memory` for `LpTokenMetadata memory _lpTokenMetadata`\n\nWhen arguments are read-only on external functions, the data location should be `calldata`.\nHere, `LpTokenMetadata memory _lpTokenMetadata` should be `LpTokenMetadata calldata _lpTokenMetadata`\n\n### function tokenURI()\n\n```solidity\n112:     function tokenURI(uint256 tokenId)\n...\n124:         string memory svgData = svgHelper.getTokenSvg(\n125:             tokenId,\n126:             tokenMetadata[tokenId].suppliedLiquidity, //@audit tokenMetadata[tokenId].suppliedLiquidity SLOAD 1\n127:             ILiquidityProviders(liquidityProvidersAddress).totalReserve(tokenAddress) //@audit external call 1\n128:         );\n129: \n130:         string memory description = svgHelper.getDescription(\n131:             tokenMetadata[tokenId].suppliedLiquidity,//@audit tokenMetadata[tokenId].suppliedLiquidity SLOAD 2\n132:             ILiquidityProviders(liquidityProvidersAddress).totalReserve(tokenAddress) //@audit external call 2\n133:         );\n134: \n135:         string memory attributes = svgHelper.getAttributes(\n136:             tokenMetadata[tokenId].suppliedLiquidity,//@audit tokenMetadata[tokenId].suppliedLiquidity SLOAD 3\n137:             ILiquidityProviders(liquidityProvidersAddress).totalReserve(tokenAddress) //@audit external call 3\n138:         );\n```\n\n#### Cache `tokenMetadata[tokenId].suppliedLiquidity`\n\nStorage readings are expensive.\nCaching this in a memory variable can save around 2 SLOADs\n\n#### Cache `ILiquidityProviders(liquidityProvidersAddress).totalReserve(tokenAddress)`\n\nExternal calls are expensive.\nCaching this in a memory variable can save around 2 external calls.\n\n### function \\_beforeTokenTransfer()\n\n```solidity\n180:     function _beforeTokenTransfer(\n181:         address from,\n182:         address to,\n183:         uint256 tokenId\n184:     ) internal virtual override(ERC721EnumerableUpgradeable, ERC721Upgradeable) whenNotPaused {\n185:         super._beforeTokenTransfer(from, to, tokenId);\n186: \n187:         // Only call whitelist period manager for NFT Transfers, not mint and burns\n188:         if (from != address(0) && to != address(0)) { //@audit-issue\n189:             whiteListPeriodManager.beforeLiquidityTransfer(\n190:                 from,\n191:                 to,\n192:                 tokenMetadata[tokenId].token,\n193:                 tokenMetadata[tokenId].suppliedLiquidity\n194:             );\n195:         }\n196:     }\n```\n\n#### Short-circuiting can save gas\n\nThe condition L188 can be short-circuited to provide a happy path with the following optimization:\n\n```solidity\n        if (from == address(0) || to == address(0)) {\n          return;\n        } \n\n        whiteListPeriodManager.beforeLiquidityTransfer(\n            from,\n            to,\n            tokenMetadata[tokenId].token,\n            tokenMetadata[tokenId].suppliedLiquidity\n        );\n```\n\nThis way, the gas from evaluating the second condition can be saved in case of minting (in this scenario, we're expecting more minting than burning, therefore making a happy path for it).\n\n## File: TokenManager.sol\n\n### Tight Packing `struct TokenInfo`\n\nTo save 1 slot, the struct should go from:\n\n```solidity\nFile: ITokenManager.sol\n06:     struct TokenInfo {\n07:         uint256 transferOverhead; //@audit 32 bytes\n08:         bool supportedToken; //@audit 1 byte\n09:         uint256 equilibriumFee; //@audit 32 bytes\n10:         uint256 maxFee; //@audit 32 bytes\n11:         TokenConfig tokenConfig;//@audit 20 bytes\n12:     }\n```\n\nto\n\n```solidity\n06:     struct TokenInfo {\n07:         uint256 transferOverhead; //@audit 32 bytes\n08:         uint256 equilibriumFee; //@audit 32 bytes\n09:         uint256 maxFee; //@audit 32 bytes\n10:         TokenConfig tokenConfig;//@audit 20 bytes\n11:         bool supportedToken; //@audit 1 byte\n12:     }\n```\n\n### function changeFee()\n\n```solidity\nFile: TokenManager.sol\n44:     function changeFee(\n45:         address tokenAddress,\n46:         uint256 _equilibriumFee,\n47:         uint256 _maxFee\n48:     ) external override onlyOwner whenNotPaused {\n49:         require(_equilibriumFee != 0, \"Equilibrium Fee cannot be 0\");\n50:         require(_maxFee != 0, \"Max Fee cannot be 0\");\n51:         tokensInfo[tokenAddress].equilibriumFee = _equilibriumFee;\n52:         tokensInfo[tokenAddress].maxFee = _maxFee;\n53:         emit FeeChanged(tokenAddress, tokensInfo[tokenAddress].equilibriumFee, tokensInfo[tokenAddress].maxFee);\n54:     }\n```\n\n#### Storage optimization\n\nInstead of fetching the storage value multiple times from the array, it's possible to save some gas and help the optimizer by using a storage variable:\n\n```solidity\n        TokenInfo storage _tokenInfo = tokensInfo[tokenAddress];\n        _tokenInfo.equilibriumFee = _equilibriumFee;\n        _tokenInfo.maxFee = _maxFee;\n```\n\n#### Emitting storage value\n\nStorage values are being emitted L53.\nI suggest using:\n\n```solidity\nemit FeeChanged(tokenAddress, _equilibriumFee, _maxFee);\n```\n\n### function setDepositConfig()\n\n```solidity\nFile: TokenManager.sol\n69:     function setDepositConfig(\n70:         uint256[] memory toChainId,//@audit should be calldata\n71:         address[] memory tokenAddresses,//@audit should be calldata\n72:         TokenConfig[] memory tokenConfig//@audit should be calldata\n73:     ) external onlyOwner {\n74:         require(\n75:             (toChainId.length == tokenAddresses.length) && (tokenAddresses.length == tokenConfig.length),\n76:             \" ERR_ARRAY_LENGTH_MISMATCH\"\n77:         );\n78:         for (uint256 index = 0; index < tokenConfig.length; ++index) { //@audit use storage var\n79:             depositConfig[toChainId[index]][tokenAddresses[index]].min = tokenConfig[index].min;\n80:             depositConfig[toChainId[index]][tokenAddresses[index]].max = tokenConfig[index].max;\n81:         }\n82:     }\n```\n\n#### Use `calldata` instead of `memory` for `uint256[] memory toChainId`\n\n#### Use `calldata` instead of `memory` for `address[] memory tokenAddresses`\n\n#### Use `calldata` instead of `memory` for `TokenConfig[] memory tokenConfig`\n\n#### Storage usage optimization\n\nI suggest going from:\n\n```solidity\n    depositConfig[toChainId[index]][tokenAddresses[index]].min = tokenConfig[index].min;\n    depositConfig[toChainId[index]][tokenAddresses[index]].max = tokenConfig[index].max;\n```\n\nto:\n\n```solidity\n      TokenConfig storage _sTokenConfig = depositConfig[toChainId[index]][tokenAddresses[index]];\n      _sTokenConfig.min = tokenConfig[index].min;\n      _sTokenConfig.max = tokenConfig[index].max;\n```\n\n### function getTokensInfo()\n\n```solidity\n115:     function getTokensInfo(address tokenAddress) public view override returns (TokenInfo memory) {\n116:         TokenInfo memory tokenInfo = TokenInfo( //@audit can simply return this instead of saving in a memory var (MSTORE + MLOAD to save)\n117:             tokensInfo[tokenAddress].transferOverhead,\n118:             tokensInfo[tokenAddress].supportedToken,\n119:             tokensInfo[tokenAddress].equilibriumFee,\n120:             tokensInfo[tokenAddress].maxFee,\n121:             transferConfig[tokenAddress]\n122:         );\n123:         return tokenInfo;\n124:     }\n```\n\n#### The variable `tokenInfo` is only used once: inline it\n\nI suggest the following optimization:\n\n```solidity\nfunction getTokensInfo(address tokenAddress) public view override returns (TokenInfo memory) {\n        return TokenInfo(\n            tokensInfo[tokenAddress].transferOverhead,\n            tokensInfo[tokenAddress].supportedToken,\n            tokensInfo[tokenAddress].equilibriumFee,\n            tokensInfo[tokenAddress].maxFee,\n            transferConfig[tokenAddress]\n        );\n    }\n```\n\nI believe we can go further here, as the copy in memory is done manually here. As `TokenConfig` is already contained inside the `TokenInfo` struct, this should be the best option:\n\n```solidity\nfunction getTokensInfo(address tokenAddress) public view override returns (TokenInfo memory) {\n        return tokensInfo[tokenAddress];\n    }\n```\n\n## File: LiquidityFarming.sol\n\n### Tight Packing `struct NFTInfo`\n\nTo save 1 slot, I suggest going from:\n\n```solidity\nFile: LiquidityFarming.sol\n29:     struct NFTInfo {\n30:         address payable staker; //@audit-info 20 bytes\n31:         uint256 rewardDebt; //@audit-info 32 bytes\n32:         uint256 unpaidRewards; //@audit-info 32 bytes\n33:         bool isStaked; //@audit-info 1 byte\n34:     }\n```\n\nto\n\n```solidity\nFile: LiquidityFarming.sol\n29:     struct NFTInfo {\n30:         uint256 rewardDebt; //@audit-info 32 bytes\n31:         uint256 unpaidRewards; //@audit-info 32 bytes\n32:         address payable staker; //@audit-info 20 bytes\n33:         bool isStaked; //@audit-info 1 byte\n34:     }\n```\n\n### function \\_sendErc20AndGetSentAmount()\n\n```solidity\nFile: LiquidityFarming.sol\n109:     function _sendErc20AndGetSentAmount(\n110:         IERC20Upgradeable _token,\n111:         uint256 _amount,\n112:         address _to\n113:     ) private returns (uint256) {\n114:         uint256 recepientBalance = _token.balanceOf(_to);\n115:         _token.safeTransfer(_to, _amount);\n116:         return _token.balanceOf(_to) - recepientBalance; //@audit should be unchecked (see L114-L115)\n117:     }\n```\n\n#### Uncheck L116\n\nThis line can't underflow due to L114-L115. Therefore, it should be wrapped in an `unchecked` block.\n\n### function deposit()\n\n#### Consider adding a function in `ILPToken` to save 1 external call\n\nHere, if a function is added in `ILPToken` to check both conditions in 1 call, it could save 1 external call:\n\n```solidity\nFile: LiquidityFarming.sol\n199:         require(\n200:             lpToken.isApprovedForAll(msgSender, address(this)) || lpToken.getApproved(_nftId) == address(this), //@audit save 1 external call with a new method\n201:             \"ERR__NOT_APPROVED\"\n202:         );\n```\n\n### function withdraw()\n\n#### Uncheck L240\n\nAs `nftIdsStaked[msgSender][index] = nftIdsStaked[msgSender][nftIdsStaked[msgSender].length - 1];` can never underflow due to the require statement above it and the for-loop, it should be wrapped in an `unchecked` block.\n\n#### Use the existing variable `nftsStakedLength` instead of `nftIdsStaked[msgSender].length`\n\nAs no push or pop operations are done yet, I suggest going from:\n\n```solidity\nFile: LiquidityFarming.sol\n231:         uint256 nftsStakedLength = nftIdsStaked[msgSender].length;\n...\n240:         nftIdsStaked[msgSender][index] = nftIdsStaked[msgSender][nftIdsStaked[msgSender].length - 1];\n```\n\nto\n\n```solidity\nFile: LiquidityFarming.sol\n231:         uint256 nftsStakedLength = nftIdsStaked[msgSender].length;\n...\n240:         nftIdsStaked[msgSender][index] = nftIdsStaked[msgSender][nftsStakedLength - 1];\n```\n\n### function getUpdatedAccTokenPerShare()\n\n```solidity\nFile: LiquidityFarming.sol\n265:     function getUpdatedAccTokenPerShare(address _baseToken) public view returns (uint256) {\n...\n274:             unchecked {\n275:                 accumulator +=\n276:                     rewardRateLog[_baseToken][i].rewardsPerSecond * // @audit rewardRateLog[_baseToken][i] in storage\n277:                     (counter - max(lastUpdatedTime, rewardRateLog[_baseToken][i].timestamp)); //@audit rewardRateLog[_baseToken][i].timestamp SLOAD 1\n278:             }\n279:             counter = rewardRateLog[_baseToken][i].timestamp; //@audit rewardRateLog[_baseToken][i].timestamp SLOAD 2\n280:             if (i == 0) {\n281:                 break;\n282:             }\n283:             --i;//@audit should be unchecked (see L280-L281)\n284:         }\n...\n```\n\n#### Storage usage optimization\n\n#### Cache `rewardRateLog[_baseToken][i].timestamp` in memory\n\n#### Uncheck L283\n\nHere, it's possible to save a substantial amount of gas with the following optimization (taking into account the 3 titles above):\n\n```solidity\n        while (true) {\n            if (lastUpdatedTime >= counter) {\n                break;\n            }\n            RewardsPerSecondEntry storage _reward = rewardRateLog[_baseToken][i]; //@audit added code\n            uint256 _timestamp = _reward.timestamp; //@audit added code\n            unchecked {\n                accumulator +=\n                    _reward.rewardsPerSecond * // @audit storage optimization\n                    (counter - max(lastUpdatedTime, _timestamp)); //@audit MLOAD\n            \n                counter = _timestamp; //@audit MLOAD\n                if (i == 0) {\n                    break;\n                }\n                --i;//@audit now unchecked\n            }\n        }\n```\n\n### function max()\n\n#### A private function used only once should get inlined\n\nAs `function max()` is a private function (not inherited) that is only used once in the contract (L277), it should get inlined.\n\n## File: LiquidityPool.sol\n\n### modifier onlyLiquidityProviders()\n\n#### `modifier onlyLiquidityProviders()` is used only once and should get inlined\n\nAs `modifier onlyLiquidityProviders()` is only used once (on `function transfer()`), it should get inlined.\n\n### function depositErc20()\n\n#### Avoid multiple external calls on `tokenManager.getDepositConfig(toChainId, tokenAddress)`\n\nThe code can be optimized from:\n\n```solidity\nFile: LiquidityPool.sol\n156:         require(\n157:             tokenManager.getDepositConfig(toChainId, tokenAddress).min <= amount && //@audit external call 1\n158:                 tokenManager.getDepositConfig(toChainId, tokenAddress).max >= amount, //@audit external call 2\n159:             \"Deposit amount not in Cap limit\"\n160:         );\n```\n\nto\n\n```solidity\n156:         ITokenManager.TokenConfig memory _depositConfig = tokenManager.getDepositConfig(toChainId, tokenAddress); //@audit external call 1\n157:         require(\n158:             _depositConfig.min <= amount && //@audit MLOAD\n159:                 _depositConfig.max >= amount, //@audit MLOAD\n160:             \"Deposit amount not in Cap limit\"\n161:         );\n```\n\n### function getRewardAmount()\n\n```solidity\nFile: LiquidityPool.sol\n175:     function getRewardAmount(uint256 amount, address tokenAddress) public view returns (uint256 rewardAmount) {\n176:         uint256 currentLiquidity = getCurrentLiquidity(tokenAddress);\n177:         uint256 providedLiquidity = liquidityProviders.getSuppliedLiquidityByToken(tokenAddress);\n178:         if (currentLiquidity < providedLiquidity) {\n179:             uint256 liquidityDifference = providedLiquidity - currentLiquidity; //@audit should be unchecked (see L178)\n```\n\n#### Uncheck L179\n\nAs `providedLiquidity - currentLiquidity` can never underflow due to the if statement above it, it should be wrapped in an `unchecked` block.\n\n### function depositNative()\n\n#### Avoid multiple external calls on `tokenManager.getDepositConfig(toChainId, NATIVE)`\n\nThe code can be optimized from:\n\n```solidity\nFile: LiquidityPool.sol\n247:         require(\n248:             tokenManager.getDepositConfig(toChainId, NATIVE).min <= msg.value && //@audit external call 1\n249:                 tokenManager.getDepositConfig(toChainId, NATIVE).max >= msg.value, //@audit external call 2\n250:             \"Deposit amount not in Cap limit\"\n251:         );\n\n```\n\nto\n\n```solidity\nFile: LiquidityPool.sol\n247:         ITokenManager.TokenConfig memory _depositConfig = tokenManager.getDepositConfig(toChainId, NATIVE); //@audit external call 1\n248:         require(\n249:             _depositConfig.min <= msg.value && //@audit MLOAD\n250:                 _depositConfig.max >= msg.value, //@audit MLOAD\n251:             \"Deposit amount not in Cap limit\"\n252:         );\n```\n\n### function sendFundsToUser()\n\n#### Avoid multiple external calls on `tokenManager.getTransferConfig(tokenAddress)`\n\nThe code can be optimized from:\n\n```solidity\nFile: LiquidityPool.sol\n272:         require(\n273:             tokenManager.getTransferConfig(tokenAddress).min <= amount && //@audit external call 1\n274:                 tokenManager.getTransferConfig(tokenAddress).max >= amount, //@audit external call 2\n275:             \"Withdraw amnt not in Cap limits\"\n276:         );\n```\n\nto\n\n```solidity\nFile: LiquidityPool.sol\n272:         ITokenManager.TokenConfig memory _transferConfig = tokenManager.getTransferConfig(tokenAddress); //@audit external call 1\n273:         require(\n274:             _transferConfig.min <= amount && //@audit MLOAD\n275:                 _transferConfig.max >= amount, //@audit MLOAD\n276:             \"Withdraw amnt not in Cap limits\"\n277:         );\n```\n\n#### Reorder require statements to save gas on revert\n\nHere, there are two require statements:\n\n```solidity\nFile: LiquidityPool.sol\n272:         require(\n273:             tokenManager.getTransferConfig(tokenAddress).min <= amount &&\n274:                 tokenManager.getTransferConfig(tokenAddress).max >= amount,\n275:             \"Withdraw amnt not in Cap limits\"\n276:         );\n277:         require(receiver != address(0), \"Bad receiver address\"); //@audit should be 1st require\n```\n\nThe second require statement is a simple condition that is a lot less expensive than the first one. In case of revert on the second require statement, all the gas from the first require would be wasted (2 external calls, or 1 after the optimization).\nI suggest reordering the require statements to put this one first.\n\n### function getAmountToTransfer()\n\n```solidity\nFile: LiquidityPool.sol\n308:     function getAmountToTransfer(\n...\n316:         if (transferFeePerc > tokenManager.getTokensInfo(tokenAddress).equilibriumFee) { //@audit external call 1\n317:             // Here add some fee to incentive pool also\n318:             lpFee = (amount * tokenManager.getTokensInfo(tokenAddress).equilibriumFee) / BASE_DIVISOR; //@audit external call 2\n319:             incentivePool[tokenAddress] =\n320:                 (incentivePool[tokenAddress] +\n321:                     (amount * (transferFeePerc - tokenManager.getTokensInfo(tokenAddress).equilibriumFee))) / //@audit substraction should be unchecked //@audit external call 3\n322:                 BASE_DIVISOR;\n```\n\n#### Avoid multiple external calls on `tokenManager.getTokensInfo(tokenAddress).equilibriumFee`\n\n`tokenManager.getTokensInfo(tokenAddress).equilibriumFee` should get cached to avoid 2 unnecessary external calls.\n\n#### Uncheck L321\n\nAs `transferFeePerc - tokenManager.getTokensInfo(tokenAddress).equilibriumFee` can never underflow due to the if statement above it L316, it should be wrapped in an `unchecked` block.\n\n### function getTransferFee()\n\n```solidity\nFile: LiquidityPool.sol\n342:     function getTransferFee(address tokenAddress, uint256 amount) public view returns (uint256 fee) {\n...\n348:         uint256 equilibriumFee = tokenManager.getTokensInfo(tokenAddress).equilibriumFee; //@audit external call 1\n349:         uint256 maxFee = tokenManager.getTokensInfo(tokenAddress).maxFee;//@audit external call 2\n...\n```\n\n#### Avoid multiple external calls on `tokenManager.getTokensInfo(tokenAddress)`\n\nI suggest the following optimization:\n\n```solidity\nFile: LiquidityPool.sol\n348:         ITokenManager.TokenInfo memory _tokenInfo = tokenManager.getTokensInfo(tokenAddress); //@audit external call 1\n349:         uint256 equilibriumFee = _tokenInfo.equilibriumFee; //@audit MLOAD\n350:         uint256 maxFee = _tokenInfo.maxFee; //@audit MLOAD\n```\n\n## File: LiquidityProviders.sol\n\n### Storage\n\n```solidity\n27:     uint256 public constant BASE_DIVISOR = 10**18; //@audit gas use 1e18\n```\n\n#### Use `1e18` instead of `10**18` for constant `BASE_DIVISOR`\n\nDue to how `constant` variables are implemented (constant expressions are expressions, not constants), `10**18` will be more expensive than `1e18`.\n\n### modifier onlyValidLpToken()\n\n#### Consider adding a function in `ILPToken` to save 1 external call\n\nHere, the modifier is quite expensive as it makes 2 external calls:\n\n```solidity\nFile: LiquidityProviders.sol\n53:     modifier onlyValidLpToken(uint256 _tokenId, address _transactor) { //@audit expensive modifier. Create 1 method that returns both parametters\n54:         (address token, , ) = lpToken.tokenMetadata(_tokenId);\n55:         require(lpToken.exists(_tokenId), \"ERR__TOKEN_DOES_NOT_EXIST\"); //@audit external call 1\n56:         require(lpToken.ownerOf(_tokenId) == _transactor, \"ERR__TRANSACTOR_DOES_NOT_OWN_NFT\"); //@audit external call 2\n57:         _;\n58:     }\n```\n\nConsider adding a method in `ILPToken` that both checks that `_tokenId` exists and returns the token's owner.\n\n### function \\_increaseCurrentLiquidity()\n\n```solidity\nFile: LiquidityProviders.sol\n135:     function _increaseCurrentLiquidity(address tokenAddress, uint256 amount) private {\n136:         currentLiquidity[tokenAddress] += amount; //@audit SLOAD 1\n137:         emit CurrentLiquidityChanged(tokenAddress, currentLiquidity[tokenAddress]-amount, currentLiquidity[tokenAddress]); //@audit SLOAD 2 & 3\n138:     }\n```\n\n#### Cache `currentLiquidity[tokenAddress]`\n\nCaching this in a memory variable can save around 2 SLOADs. Here's the full optimization:\n\n```solidity\nFile: LiquidityProviders.sol\n135:     function _increaseCurrentLiquidity(address tokenAddress, uint256 amount) private {\n136:         uint256 _currentLiquidity = currentLiquidity[tokenAddress];\n137:         uint256 _increasedLiquidity = _currentLiquidity + amount;\n138:         currentLiquidity[tokenAddress] = _increasedLiquidity;\n139:         emit CurrentLiquidityChanged(tokenAddress, _currentLiquidity, _increasedLiquidity);\n140:     }\n```\n\n### function \\_decreaseCurrentLiquidity()\n\n```solidity\nFile: LiquidityProviders.sol\n140:     function _decreaseCurrentLiquidity(address tokenAddress, uint256 amount) private {\n141:         currentLiquidity[tokenAddress] -= amount; //@audit SLOAD 1\n142:         emit CurrentLiquidityChanged(tokenAddress, currentLiquidity[tokenAddress]+amount, currentLiquidity[tokenAddress]); //@audit SLOAD 2 & 3\n143:     }\n```\n\n#### Cache `currentLiquidity[tokenAddress]`\n\nCaching this in a memory variable can save around 2 SLOADs. Here's the full optimization:\n\n```solidity\nFile: LiquidityProviders.sol\n140:     function _decreaseCurrentLiquidity(address tokenAddress, uint256 amount) private {\n141:         uint256 _currentLiquidity = currentLiquidity[tokenAddress];\n142:         uint256 _decreasedLiquidity = _currentLiquidity - amount;\n143:         currentLiquidity[tokenAddress] = _decreasedLiquidity;\n144:         emit CurrentLiquidityChanged(tokenAddress, _currentLiquidity, _decreasedLiquidity);\n145:     }\n```\n\n### function getTokenPriceInLPShares()\n\n```solidity\nFile: LiquidityProviders.sol\n180:     function getTokenPriceInLPShares(address _baseToken) public view returns (uint256) {\n181:         uint256 supply = totalSharesMinted[_baseToken];\n182:         if (supply > 0) {\n183:             return totalSharesMinted[_baseToken] / totalReserve[_baseToken]; //@audit SLOAD : use supply.\n184:         }\n185:         return BASE_DIVISOR;\n186:     }\n```\n\n#### Use `supply` instead of `totalSharesMinted[_baseToken]`\n\nAt line 183, I suggest using `supply` instead of `totalSharesMinted[_baseToken]`. Full code:\n\n```solidity\nFile: LiquidityProviders.sol\n180:     function getTokenPriceInLPShares(address _baseToken) public view returns (uint256) {\n181:         uint256 supply = totalSharesMinted[_baseToken];\n182:         if (supply > 0) {\n183:             return supply / totalReserve[_baseToken];\n184:         }\n185:         return BASE_DIVISOR;\n186:     }\n```\n\n### function \\_increaseLiquidity()\n\n```solidity\nFile: LiquidityProviders.sol\n280:     function _increaseLiquidity(uint256 _nftId, uint256 _amount) internal onlyValidLpToken(_nftId, _msgSender()) {\n281:         (address token, uint256 totalSuppliedLiquidity, uint256 totalShares) = lpToken.tokenMetadata(_nftId);\n282: \n283:         require(_amount > 0, \"ERR__AMOUNT_IS_0\");\n284:         whiteListPeriodManager.beforeLiquidityAddition(_msgSender(), token, _amount);\n285: \n286:         uint256 mintedSharesAmount;\n287:         // Adding liquidity in the pool for the first time\n288:         if (totalReserve[token] == 0) { //@audit totalReserve[token] SLOAD 1\n289:             mintedSharesAmount = BASE_DIVISOR * _amount;\n290:         } else {\n291:             mintedSharesAmount = (_amount * totalSharesMinted[token]) / totalReserve[token]; //@audit totalReserve[token] SLOAD 2 //@audit totalSharesMinted[token] SLOAD 1\n292:         }\n293: \n294:         require(mintedSharesAmount >= BASE_DIVISOR, \"ERR__AMOUNT_BELOW_MIN_LIQUIDITY\");\n295: \n296:         totalLiquidity[token] += _amount;\n297:         totalReserve[token] += _amount; //@audit totalReserve[token] SLOAD 3\n298:         totalSharesMinted[token] += mintedSharesAmount; //@audit totalSharesMinted[token] SLOAD 2 (after 1st liquidity)\n```\n\n#### Cache `totalReserve[token]`\n\nCaching this in memory can save around 2 SLOADs\n\n#### Cache `totalSharesMinted[token]`\n\nCaching this in memory can save around 1 SLOAD (only after 1st liquidity adding in the pool for the first time)\n\n## File: WhitelistPeriodManager.sol\n\n### modifier onlyLpNft()\n\n#### `modifier onlyLpNft()` is used only once should get inlined\n\nAs `modifier onlyLpNft()` is only used once (on `function beforeLiquidityTransfer()`), it should get inlined.\n\n### function setIsExcludedAddressStatus()\n\n```solidity\nFile: WhitelistPeriodManager.sol\n178:     function setIsExcludedAddressStatus(address[] memory _addresses, bool[] memory _status) external onlyOwner { //@audit should be calldata *2\n179:         require(_addresses.length == _status.length, \"ERR__LENGTH_MISMATCH\");\n180:         for (uint256 i = 0; i < _addresses.length; ++i) {\n181:             isExcludedAddress[_addresses[i]] = _status[i];\n182:             emit ExcludedAddressStatusUpdated(_addresses[i], _status[i]);\n183:         }\n184:     }\n```\n\n#### Use `calldata` instead of `memory` for `address[] memory _addresses`\n\n#### Use `calldata` instead of `memory` for `bool[] memory _status`\n\n### function setCaps()\n\n```solidity\nFile: WhitelistPeriodManager.sol\n219:     function setCaps(\n220:         address[] memory _tokens, //@audit should be calldata\n221:         uint256[] memory _totalCaps,//@audit should be calldata\n222:         uint256[] memory _perTokenWalletCaps//@audit should be calldata\n223:     ) external onlyOwner {\n224:         require(\n225:             _tokens.length == _totalCaps.length && _totalCaps.length == _perTokenWalletCaps.length,\n226:             \"ERR__LENGTH_MISMACH\"\n227:         );\n228:         for (uint256 i = 0; i < _tokens.length; ++i) {\n229:             setCap(_tokens[i], _totalCaps[i], _perTokenWalletCaps[i]);\n230:         }\n231:     }\n```\n\n#### Use `calldata` instead of `memory` for `address[] memory _tokens`\n\n#### Use `calldata` instead of `memory` for `uint256[] memory _totalCaps`\n\n#### Use `calldata` instead of `memory` for `uint256[] memory _perTokenWalletCaps`\n\n### function ifEnabled()\n\n```solidity\nFile: WhitelistPeriodManager.sol\n260:     function ifEnabled(bool _cond) private view returns (bool) {\n261:         return !areWhiteListRestrictionsEnabled || (areWhiteListRestrictionsEnabled && _cond); // @audit can save 1 SLOAD with (!areWhiteListRestrictionsEnabled || _cond) as the 2nd condition will evaluate only if areWhiteListRestrictionsEnabled == true\n262:     }\n```\n\n#### The condition can be optimized to save a SLOAD\n\n`!areWhiteListRestrictionsEnabled || (areWhiteListRestrictionsEnabled && _cond)` should be changed to `!areWhiteListRestrictionsEnabled || _cond` as the 2nd part of this statement will only evaluate if `areWhiteListRestrictionsEnabled == true`, therefore the explicit check isn't necessary.\n\n## General recommendations\n\n### Version\n\n#### Upgrade pragma to at least 0.8.4\n\nUsing newer compiler versions and the optimizer give gas optimizations. Also, additional safety checks are available for free.\n\nThe advantages here are:\n\n*   **Low level inliner** (>= 0.8.2): Cheaper runtime gas (especially relevant when the contract has small functions).\n*   **Optimizer improvements in packed structs** (>= 0.8.3)\n*   **Custom errors** (>= 0.8.4): cheaper deployment cost and runtime cost. *Note*: the runtime cost is only relevant when the revert condition is met. In short, replace revert strings by custom errors.\n\nInstances include:\n\n```solidity\nhyphen/token/LPToken.sol:2:pragma solidity 0.8.0;\nhyphen/token/TokenManager.sol:3:pragma solidity 0.8.0;\nhyphen/ExecutorManager.sol:3:pragma solidity 0.8.0;\nhyphen/LiquidityFarming.sol:2:pragma solidity 0.8.0;\nhyphen/LiquidityPool.sol:3:pragma solidity 0.8.0;\nhyphen/LiquidityProviders.sol:2:pragma solidity 0.8.0;\nhyphen/WhitelistPeriodManager.sol:2:pragma solidity 0.8.0;\n```\n\nConsider upgrading pragma to at least 0.8.4.\n\n### Variables\n\n#### No need to explicitly initialize variables with default values\n\nIf a variable is not set/initialized, it is assumed to have the default value (`0` for `uint`, `false` for `bool`, `address(0)` for address...). Explicitly initializing it with its default value is an anti-pattern and wastes gas.\n\nAs an example: `for (uint256 i = 0; i < numIterations; ++i) {` should be replaced with `for (uint256 i; i < numIterations; ++i) {`\n\nInstances include:\n\n```solidity\nhyphen/token/LPToken.sol:77:        for (uint256 i = 0; i < nftIds.length; ++i) {\nhyphen/token/TokenManager.sol:78:        for (uint256 index = 0; index < tokenConfig.length; ++index) {\nhyphen/ExecutorManager.sol:31:        for (uint256 i = 0; i < executorArray.length; ++i) {\nhyphen/ExecutorManager.sol:47:        for (uint256 i = 0; i < executorArray.length; ++i) {\nhyphen/LiquidityFarming.sol:233:        for (index = 0; index < nftsStakedLength; ++index) {\nhyphen/LiquidityFarming.sol:266:        uint256 accumulator = 0;\nhyphen/WhitelistPeriodManager.sol:180:        for (uint256 i = 0; i < _addresses.length; ++i) {\nhyphen/WhitelistPeriodManager.sol:228:        for (uint256 i = 0; i < _tokens.length; ++i) {\nhyphen/WhitelistPeriodManager.sol:247:        uint256 maxLp = 0;\n```\n\nI suggest removing explicit initializations for default values.\n\n#### Pre-increments cost less gas compared to post-increments\n\n### Comparisons\n\n#### `> 0` is less efficient than `!= 0` for unsigned integers (with proof)\n\n`!= 0` costs less gas compared to `> 0` for unsigned integers in `require` statements with the optimizer enabled (6 gas)\n\nProof: While it may seem that `> 0` is cheaper than `!=`, this is only true without the optimizer enabled and outside a require statement. If you enable the optimizer at 10k AND you're in a `require` statement, this will save gas. You can see this tweet for more proofs: <https://twitter.com/gzeon/status/1485428085885640706>\n\nI suggest changing `> 0` with `!= 0` here:\n\n```solidity\nhyphen/LiquidityProviders.sol:239:        require(_amount > 0, \"ERR__AMOUNT_IS_0\");\nhyphen/LiquidityProviders.sol:283:        require(_amount > 0, \"ERR__AMOUNT_IS_0\");\nhyphen/LiquidityProviders.sol:410:        require(lpFeeAccumulated > 0, \"ERR__NO_REWARDS_TO_CLAIM\");\n```\n\nAlso, please enable the Optimizer.\n\n### For-Loops\n\n#### An array's length should be cached to save gas in for-loops\n\nReading array length at each iteration of the loop takes 6 gas (3 for mload and 3 to place memory_offset) in the stack.\n\nCaching the array length in the stack saves around 3 gas per iteration.\n\nHere, I suggest storing the array's length in a variable before the for-loop, and use it instead:\n\n```solidity\nhyphen/token/LPToken.sol:77:        for (uint256 i = 0; i < nftIds.length; ++i) {\nhyphen/token/TokenManager.sol:78:        for (uint256 index = 0; index < tokenConfig.length; ++index) {\nhyphen/ExecutorManager.sol:31:        for (uint256 i = 0; i < executorArray.length; ++i) {\nhyphen/ExecutorManager.sol:47:        for (uint256 i = 0; i < executorArray.length; ++i) {\nhyphen/WhitelistPeriodManager.sol:180:        for (uint256 i = 0; i < _addresses.length; ++i) {\nhyphen/WhitelistPeriodManager.sol:228:        for (uint256 i = 0; i < _tokens.length; ++i) {\n```\n\n#### Increments can be unchecked\n\nIn Solidity 0.8+, there's a default overflow check on unsigned integers. It's possible to uncheck this in for-loops and save some gas at each iteration, but at the cost of some code readability, as this uncheck cannot be made inline.\n\n[ethereum/solidity#10695](https://github.com/ethereum/solidity/issues/10695)\n\nInstances include:\n\n```solidity\nhyphen/token/LPToken.sol:77:        for (uint256 i = 0; i < nftIds.length; ++i) {\nhyphen/token/TokenManager.sol:78:        for (uint256 index = 0; index < tokenConfig.length; ++index) {\nhyphen/ExecutorManager.sol:31:        for (uint256 i = 0; i < executorArray.length; ++i) {\nhyphen/ExecutorManager.sol:47:        for (uint256 i = 0; i < executorArray.length; ++i) {\nhyphen/LiquidityFarming.sol:233:        for (index = 0; index < nftsStakedLength; ++index) {\nhyphen/WhitelistPeriodManager.sol:180:        for (uint256 i = 0; i < _addresses.length; ++i) {\nhyphen/WhitelistPeriodManager.sol:228:        for (uint256 i = 0; i < _tokens.length; ++i) {\nhyphen/WhitelistPeriodManager.sol:248:        for (uint256 i = 1; i <= totalSupply; ++i) {\n```\n\nThe code would go from:\n\n```solidity\nfor (uint256 i; i < numIterations; ++i) {  \n // ...  \n}  \n```\n\nto:\n\n```solidity\nfor (uint256 i; i < numIterations;) {  \n // ...  \n unchecked { ++i; }  \n}  \n```\n\nThe risk of overflow is inexistant for a `uint256` here.\n\n### Visibility\n\n### Functions that should be external\n\nAccording to Slither, these functions should be external to save gas:\n\n```solidity\n - ExecutorManager.getExecutorStatus(address) (contracts/hyphen/ExecutorManager.sol#21-23)\n - ExecutorManager.getAllExecutors() (contracts/hyphen/ExecutorManager.sol#25-27)\n - HyphenLiquidityFarming.initialize(address,address,ILiquidityProviders,ILPToken) (contracts/hyphen/LiquidityFarming.sol#78-90)\n - HyphenLiquidityFarming.setRewardPerSecond(address,uint256) (contracts/hyphen/LiquidityFarming.sol#169-172)\n - HyphenLiquidityFarming.getNftIdsStaked(address) (contracts/hyphen/LiquidityFarming.sol#329-331)\n - HyphenLiquidityFarming.getRewardRatePerSecond(address) (contracts/hyphen/LiquidityFarming.sol#333-335)\n - LiquidityPool.initialize(address,address,address,address,address) (contracts/hyphen/LiquidityPool.sol#87-105)\n - LiquidityPool.setTrustedForwarder(address) (contracts/hyphen/LiquidityPool.sol#107-111)\n - LiquidityPool.setLiquidityProviders(address) (contracts/hyphen/LiquidityPool.sol#113-117)\n - LiquidityPool.getExecutorManager() (contracts/hyphen/LiquidityPool.sol#123-125)\n - LiquidityProviders.initialize(address,address,address,address) (contracts/hyphen/LiquidityProviders.sol#78-90)\n - LiquidityProviders.getTotalReserveByToken(address) (contracts/hyphen/LiquidityProviders.sol#96-98)\n - LiquidityProviders.getSuppliedLiquidityByToken(address) (contracts/hyphen/LiquidityProviders.sol#100-102)\n - LiquidityProviders.getTotalLPFeeByToken(address) (contracts/hyphen/LiquidityProviders.sol#104-106)\n - LiquidityProviders.getCurrentLiquidity(address) (contracts/hyphen/LiquidityProviders.sol#108-110)\n - LiquidityProviders.increaseCurrentLiquidity(address,uint256) (contracts/hyphen/LiquidityProviders.sol#127-129)\n - LiquidityProviders.decreaseCurrentLiquidity(address,uint256) (contracts/hyphen/LiquidityProviders.sol#131-133)\n - LiquidityProviders.getFeeAccumulatedOnNft(uint256) (contracts/hyphen/LiquidityProviders.sol#201-222)\n - WhitelistPeriodManager.initialize(address,address,address,address,address) (contracts/hyphen/WhitelistPeriodManager.sol#60-74)\n - LPToken.initialize(string,string,address,address) (contracts/hyphen/token/LPToken.sol#36-49)\n - LPToken.setSvgHelper(address,ISvgHelper) (contracts/hyphen/token/LPToken.sol#56-61)\n - LPToken.getAllNftIdsByUser(address) (contracts/hyphen/token/LPToken.sol#75-81)\n - LPToken.exists(uint256) (contracts/hyphen/token/LPToken.sol#98-100)\n - TokenManager.getEquilibriumFee(address) (contracts/hyphen/token/TokenManager.sol#36-38)\n - TokenManager.getMaxFee(address) (contracts/hyphen/token/TokenManager.sol#40-42)\n - TokenManager.getTokensInfo(address) (contracts/hyphen/token/TokenManager.sol#115-124)\n - TokenManager.getDepositConfig(uint256,address) (contracts/hyphen/token/TokenManager.sol#126-133)\n - TokenManager.getTransferConfig(address) (contracts/hyphen/token/TokenManager.sol#135-137)\n```\n\n### Errors\n\n#### Reduce the size of error messages (Long revert Strings)\n\nShortening revert strings to fit in 32 bytes will decrease deployment time gas and will decrease runtime gas when the revert condition is met.\n\nRevert strings that are longer than 32 bytes require at least one additional mstore, along with additional overhead for computing memory offset, etc.\n\nRevert strings > 32 bytes:\n\n```solidity\nhyphen/token/LPToken.sol:70:        require(_whiteListPeriodManager != address(0), \"ERR_INVALID_WHITELIST_PERIOD_MANAGER\");\nhyphen/ExecutorManager.sol:17:        require(executorStatus[msg.sender], \"You are not allowed to perform this operation\");\nhyphen/LiquidityPool.sol:77:        require(_msgSender() == address(liquidityProviders), \"Only liquidityProviders is allowed\"); \n```\n\nI suggest shortening the revert strings to fit in 32 bytes, or that using custom errors as described next.\n\n#### Use Custom Errors instead of Revert Strings to save Gas\n\nCustom errors from Solidity 0.8.4 are cheaper than revert strings (cheaper deployment cost and runtime cost when the revert condition is met)\n\nSource: <https://blog.soliditylang.org/2021/04/21/custom-errors/>:\n\n> Starting from [Solidity v0.8.4](https://github.com/ethereum/solidity/releases/tag/v0.8.4), there is a convenient and gas-efficient way to explain to users why an operation failed through the use of custom errors. Until now, you could already use strings to give more information about failures (e.g., `revert(\"Insufficient funds.\");`), but they are rather expensive, especially when it comes to deploy cost, and it is difficult to use dynamic information in them.\n\nCustom errors are defined using the `error` statement, which can be used inside and outside of contracts (including interfaces and libraries).\n\nInstances include:\n\n```solidity\nhyphen/token/LPToken.sol:52:        require(_msgSender() == liquidityProvidersAddress, \"ERR_UNAUTHORIZED\");\nhyphen/token/LPToken.sol:57:        require(_svgHelper != ISvgHelper(address(0)), \"ERR_INVALID_SVG_HELPER\");\nhyphen/token/LPToken.sol:58:        require(_tokenAddress != address(0), \"ERR_INVALID_TOKEN_ADDRESS\");\nhyphen/token/LPToken.sol:64:        require(_liquidityProviders != address(0), \"ERR_INVALID_LIQUIDITY_PROVIDERS\");\nhyphen/token/LPToken.sol:70:        require(_whiteListPeriodManager != address(0), \"ERR_INVALID_WHITELIST_PERIOD_MANAGER\");\nhyphen/token/LPToken.sol:94:        require(_exists(_tokenId), \"ERR__TOKEN_DOES_NOT_EXIST\");\nhyphen/token/LPToken.sol:120:        require(svgHelpers[tokenAddress] != ISvgHelper(address(0)), \"ERR__SVG_HELPER_NOT_REGISTERED\");\nhyphen/token/TokenManager.sol:16:        require(tokenAddress != address(0), \"Token address cannot be 0\");\nhyphen/token/TokenManager.sol:17:        require(tokensInfo[tokenAddress].supportedToken, \"Token not supported\");\nhyphen/token/TokenManager.sol:49:        require(_equilibriumFee != 0, \"Equilibrium Fee cannot be 0\");\nhyphen/token/TokenManager.sol:50:        require(_maxFee != 0, \"Max Fee cannot be 0\");\nhyphen/token/TokenManager.sol:74:        require(\nhyphen/token/TokenManager.sol:91:        require(tokenAddress != address(0), \"Token address cannot be 0\");\nhyphen/token/TokenManager.sol:92:        require(maxCapLimit > minCapLimit, \"maxCapLimit > minCapLimit\");\nhyphen/token/TokenManager.sol:110:        require(maxCapLimit > minCapLimit, \"maxCapLimit > minCapLimit\");\nhyphen/ExecutorManager.sol:17:        require(executorStatus[msg.sender], \"You are not allowed to perform this operation\");\nhyphen/ExecutorManager.sol:38:        require(executorAddress != address(0), \"executor address can not be 0\");\nhyphen/ExecutorManager.sol:39:        require(!executorStatus[executorAddress], \"Executor already registered\");\nhyphen/ExecutorManager.sol:54:        require(executorAddress != address(0), \"executor address can not be 0\");\nhyphen/LiquidityFarming.sol:101:        require(rewardTokens[_baseToken] == address(0), \"ERR__POOL_ALREADY_INITIALIZED\");\nhyphen/LiquidityFarming.sol:102:        require(_baseToken != address(0), \"ERR__BASE_TOKEN_IS_ZERO\");\nhyphen/LiquidityFarming.sol:103:        require(_rewardToken != address(0), \"ERR_REWARD_TOKEN_IS_ZERO\");\nhyphen/LiquidityFarming.sol:124:        require(nft.isStaked, \"ERR__NFT_NOT_STAKED\");\nhyphen/LiquidityFarming.sol:141:                    require(success, \"ERR__NATIVE_TRANSFER_FAILED\");\nhyphen/LiquidityFarming.sol:146:                    require(success, \"ERR__NATIVE_TRANSFER_FAILED\");\nhyphen/LiquidityFarming.sol:185:        require(_to != address(0), \"ERR__TO_IS_ZERO\");\nhyphen/LiquidityFarming.sol:188:            require(success, \"ERR__NATIVE_TRANSFER_FAILED\");\nhyphen/LiquidityFarming.sol:199:        require(\nhyphen/LiquidityFarming.sol:207:        require(rewardTokens[baseToken] != address(0), \"ERR__POOL_NOT_INITIALIZED\");\nhyphen/LiquidityFarming.sol:208:        require(rewardRateLog[baseToken].length != 0, \"ERR__POOL_NOT_INITIALIZED\");\nhyphen/LiquidityFarming.sol:211:        require(!nft.isStaked, \"ERR__NFT_ALREADY_STAKED\");\nhyphen/LiquidityFarming.sol:239:        require(index != nftsStakedLength, \"ERR__NFT_NOT_STAKED\");\nhyphen/LiquidityFarming.sol:259:        require(nftInfo[_nftId].staker == _msgSender(), \"ERR__NOT_OWNER\");\nhyphen/LiquidityPool.sol:72:        require(executorManager.getExecutorStatus(_msgSender()), \"Only executor is allowed\");\nhyphen/LiquidityPool.sol:77:        require(_msgSender() == address(liquidityProviders), \"Only liquidityProviders is allowed\");\nhyphen/LiquidityPool.sol:82:        require(tokenAddress != address(0), \"Token address cannot be 0\");\nhyphen/LiquidityPool.sol:83:        require(tokenManager.getTokensInfo(tokenAddress).supportedToken, \"Token not supported\");\nhyphen/LiquidityPool.sol:94:        require(_executorManagerAddress != address(0), \"ExecutorManager cannot be 0x0\");\nhyphen/LiquidityPool.sol:95:        require(_trustedForwarder != address(0), \"TrustedForwarder cannot be 0x0\");\nhyphen/LiquidityPool.sol:96:        require(_liquidityProviders != address(0), \"LiquidityProviders cannot be 0x0\");\nhyphen/LiquidityPool.sol:108:        require(trustedForwarder != address(0), \"TrustedForwarder can't be 0\");\nhyphen/LiquidityPool.sol:114:        require(_liquidityProviders != address(0), \"LiquidityProviders can't be 0\");\nhyphen/LiquidityPool.sol:128:        require(_executorManagerAddress != address(0), \"Executor Manager cannot be 0\");\nhyphen/LiquidityPool.sol:156:        require(\nhyphen/LiquidityPool.sol:161:        require(receiver != address(0), \"Receiver address cannot be 0\");\nhyphen/LiquidityPool.sol:162:        require(amount != 0, \"Amount cannot be 0\");\nhyphen/LiquidityPool.sol:247:        require(\nhyphen/LiquidityPool.sol:252:        require(receiver != address(0), \"Receiver address cannot be 0\");\nhyphen/LiquidityPool.sol:253:        require(msg.value != 0, \"Amount cannot be 0\");\nhyphen/LiquidityPool.sol:272:        require(\nhyphen/LiquidityPool.sol:277:        require(receiver != address(0), \"Bad receiver address\");\nhyphen/LiquidityPool.sol:281:        require(!status, \"Already Processed\");\nhyphen/LiquidityPool.sol:288:            require(address(this).balance >= amountToTransfer, \"Not Enough Balance\");\nhyphen/LiquidityPool.sol:290:            require(success, \"Native Transfer Failed\");\nhyphen/LiquidityPool.sol:292:            require(IERC20Upgradeable(tokenAddress).balanceOf(address(this)) >= amountToTransfer, \"Not Enough Balance\");\nhyphen/LiquidityPool.sol:373:        require(tokenAddress != NATIVE, \"Can't withdraw native token fee\");\nhyphen/LiquidityPool.sol:376:        require(_gasFeeAccumulated != 0, \"Gas Fee earned is 0\");\nhyphen/LiquidityPool.sol:385:        require(_gasFeeAccumulated != 0, \"Gas Fee earned is 0\");\nhyphen/LiquidityPool.sol:389:        require(success, \"Native Transfer Failed\");\nhyphen/LiquidityPool.sol:399:        require(receiver != address(0), \"Invalid receiver\");\nhyphen/LiquidityPool.sol:401:            require(address(this).balance >= _tokenAmount, \"ERR__INSUFFICIENT_BALANCE\");\nhyphen/LiquidityPool.sol:403:            require(success, \"ERR__NATIVE_TRANSFER_FAILED\");\nhyphen/LiquidityPool.sol:406:            require(baseToken.balanceOf(address(this)) >= _tokenAmount, \"ERR__INSUFFICIENT_BALANCE\");\nhyphen/LiquidityProviders.sol:55:        require(lpToken.exists(_tokenId), \"ERR__TOKEN_DOES_NOT_EXIST\");\nhyphen/LiquidityProviders.sol:56:        require(lpToken.ownerOf(_tokenId) == _transactor, \"ERR__TRANSACTOR_DOES_NOT_OWN_NFT\");\nhyphen/LiquidityProviders.sol:64:        require(_msgSender() == address(liquidityPool), \"ERR__UNAUTHORIZED\");\nhyphen/LiquidityProviders.sol:69:        require(tokenAddress != address(0), \"Token address cannot be 0\");\nhyphen/LiquidityProviders.sol:70:        require(_isSupportedToken(tokenAddress), \"Token not supported\");\nhyphen/LiquidityProviders.sol:202:        require(lpToken.exists(_nftId), \"ERR__INVALID_NFT\");\nhyphen/LiquidityProviders.sol:239:        require(_amount > 0, \"ERR__AMOUNT_IS_0\");\nhyphen/LiquidityProviders.sol:252:        require(success, \"ERR__NATIVE_TRANSFER_FAILED\");\nhyphen/LiquidityProviders.sol:268:        require(_token != NATIVE, \"ERR__WRONG_FUNCTION\");\nhyphen/LiquidityProviders.sol:269:        require(\nhyphen/LiquidityProviders.sol:283:        require(_amount > 0, \"ERR__AMOUNT_IS_0\");\nhyphen/LiquidityProviders.sol:294:        require(mintedSharesAmount >= BASE_DIVISOR, \"ERR__AMOUNT_BELOW_MIN_LIQUIDITY\");\nhyphen/LiquidityProviders.sol:319:        require(_isSupportedToken(token), \"ERR__TOKEN_NOT_SUPPORTED\");\nhyphen/LiquidityProviders.sol:320:        require(token != NATIVE, \"ERR__WRONG_FUNCTION\");\nhyphen/LiquidityProviders.sol:321:        require(\nhyphen/LiquidityProviders.sol:334:        require(_isSupportedToken(NATIVE), \"ERR__TOKEN_NOT_SUPPORTED\");\nhyphen/LiquidityProviders.sol:335:        require(token == NATIVE, \"ERR__WRONG_FUNCTION\");\nhyphen/LiquidityProviders.sol:337:        require(success, \"ERR__NATIVE_TRANSFER_FAILED\");\nhyphen/LiquidityProviders.sol:352:        require(_isSupportedToken(_tokenAddress), \"ERR__TOKEN_NOT_SUPPORTED\");\nhyphen/LiquidityProviders.sol:354:        require(_amount != 0, \"ERR__INVALID_AMOUNT\");\nhyphen/LiquidityProviders.sol:355:        require(nftSuppliedLiquidity >= _amount, \"ERR__INSUFFICIENT_LIQUIDITY\");\nhyphen/LiquidityProviders.sol:403:        require(_isSupportedToken(_tokenAddress), \"ERR__TOKEN_NOT_SUPPORTED\");\nhyphen/LiquidityProviders.sol:410:        require(lpFeeAccumulated > 0, \"ERR__NO_REWARDS_TO_CLAIM\");\nhyphen/WhitelistPeriodManager.sol:41:        require(_msgSender() == address(liquidityProviders), \"ERR__UNAUTHORIZED\");\nhyphen/WhitelistPeriodManager.sol:46:        require(_msgSender() == address(lpToken), \"ERR__UNAUTHORIZED\");\nhyphen/WhitelistPeriodManager.sol:51:        require(tokenAddress != address(0), \"Token address cannot be 0\");\nhyphen/WhitelistPeriodManager.sol:52:        require(_isSupportedToken(tokenAddress), \"Token not supported\");\nhyphen/WhitelistPeriodManager.sol:92:        require(ifEnabled(totalLiquidity[_token] + _amount <= perTokenTotalCap[_token]), \"ERR__LIQUIDITY_EXCEEDS_PTTC\");\nhyphen/WhitelistPeriodManager.sol:93:        require(\nhyphen/WhitelistPeriodManager.sol:179:        require(_addresses.length == _status.length, \"ERR__LENGTH_MISMATCH\");\nhyphen/WhitelistPeriodManager.sol:187:        require(totalLiquidity[_token] <= _totalCap, \"ERR__TOTAL_CAP_LESS_THAN_SL\");\nhyphen/WhitelistPeriodManager.sol:188:        require(_totalCap >= perTokenWalletCap[_token], \"ERR__TOTAL_CAP_LT_PTWC\");\nhyphen/WhitelistPeriodManager.sol:203:        require(_perTokenWalletCap <= perTokenTotalCap[_token], \"ERR__PWC_GT_PTTC\");\nhyphen/WhitelistPeriodManager.sol:224:        require(\n```\n\nI suggest replacing revert strings with custom errors.\n\n\n\n***\n\n# Disclosures\n\nC4 is an open organization governed by participants in the community.\n\nC4 Contests incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Contest submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.\n\nC4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.\n"
}