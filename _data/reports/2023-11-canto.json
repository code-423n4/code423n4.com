{
  "circa": {
    "title": "Canto Application Specific Dollars and Bonding Curves for 1155s",
    "sponsor": "Canto",
    "slug": "2023-11-canto",
    "date": "2023-12-15",
    "findings": "https://github.com/code-423n4/2023-11-canto-findings/issues",
    "contest": 306
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit outlined in this document, C4 conducted an analysis of the Canto Application Specific Dollars and Bonding Curves for 1155s smart contract system written in Solidity. The audit took place between November 13 - November 17, 2023.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>125 Wardens contributed reports to Canto Application Specific Dollars and Bonding Curves for 1155s:</p>\n<ol>\n<li><a href=\"https://code4rena.com/@100su\">100su</a></li>\n<li><a href=\"https://code4rena.com/@bin2chen\">bin2chen</a></li>\n<li><a href=\"https://code4rena.com/@0xpiken\">0xpiken</a></li>\n<li><a href=\"https://code4rena.com/@SpicyMeatball\">SpicyMeatball</a></li>\n<li><a href=\"https://code4rena.com/@immeas\">immeas</a></li>\n<li><a href=\"https://code4rena.com/@ether_sky\">ether_sky</a></li>\n<li><a href=\"https://code4rena.com/@pontifex\">pontifex</a></li>\n<li><a href=\"https://code4rena.com/@adriro\">adriro</a></li>\n<li><a href=\"https://code4rena.com/@bart1e\">bart1e</a></li>\n<li><a href=\"https://code4rena.com/@osmanozdemir1\">osmanozdemir1</a></li>\n<li><a href=\"https://code4rena.com/@T1MOH\">T1MOH</a></li>\n<li><a href=\"https://code4rena.com/@ast3ros\">ast3ros</a></li>\n<li><a href=\"https://code4rena.com/@ustas\">ustas</a></li>\n<li><a href=\"https://code4rena.com/@nazirite\">nazirite</a></li>\n<li><a href=\"https://code4rena.com/@Soul22\">Soul22</a></li>\n<li><a href=\"https://code4rena.com/@Oxsadeeq\">Oxsadeeq</a></li>\n<li><a href=\"https://code4rena.com/@wangxx2026\">wangxx2026</a></li>\n<li><a href=\"https://code4rena.com/@0xluckhu\">0xluckhu</a></li>\n<li><a href=\"https://code4rena.com/@0xSmartContract\">0xSmartContract</a></li>\n<li><a href=\"https://code4rena.com/@MrPotatoMagic\">MrPotatoMagic</a></li>\n<li><a href=\"https://code4rena.com/@Bauchibred\">Bauchibred</a></li>\n<li><a href=\"https://code4rena.com/@Krace\">Krace</a></li>\n<li><a href=\"https://code4rena.com/@d3e4\">d3e4</a></li>\n<li><a href=\"https://code4rena.com/@mojito_auditor\">mojito_auditor</a></li>\n<li><a href=\"https://code4rena.com/@rvierdiiev\">rvierdiiev</a></li>\n<li><a href=\"https://code4rena.com/@Yanchuan\">Yanchuan</a></li>\n<li><a href=\"https://code4rena.com/@PENGUN\">PENGUN</a></li>\n<li><a href=\"https://code4rena.com/@tnquanghuy0512\">tnquanghuy0512</a></li>\n<li><a href=\"https://code4rena.com/@glcanvas\">glcanvas</a></li>\n<li><a href=\"https://code4rena.com/@0xAadi\">0xAadi</a></li>\n<li><a href=\"https://code4rena.com/@D1r3Wolf\">D1r3Wolf</a></li>\n<li><a href=\"https://code4rena.com/@AS\">AS</a></li>\n<li><a href=\"https://code4rena.com/@leegh\">leegh</a></li>\n<li><a href=\"https://code4rena.com/@lanrebayode77\">lanrebayode77</a></li>\n<li><a href=\"https://code4rena.com/@0xVolcano\">0xVolcano</a></li>\n<li><a href=\"https://code4rena.com/@hunter_w3b\">hunter_w3b</a></li>\n<li><a href=\"https://code4rena.com/@sivanesh_808\">sivanesh_808</a></li>\n<li><a href=\"https://code4rena.com/@mgf15\">mgf15</a></li>\n<li><a href=\"https://code4rena.com/@chaduke\">chaduke</a></li>\n<li><a href=\"https://code4rena.com/@lsaudit\">lsaudit</a></li>\n<li><a href=\"https://code4rena.com/@kaveyjoe\">kaveyjoe</a></li>\n<li><a href=\"https://code4rena.com/@K42\">K42</a></li>\n<li><a href=\"https://code4rena.com/@Kose\">Kose</a></li>\n<li><a href=\"https://code4rena.com/@clara\">clara</a></li>\n<li><a href=\"https://code4rena.com/@aariiif\">aariiif</a></li>\n<li><a href=\"https://code4rena.com/@Sathish9098\">Sathish9098</a></li>\n<li><a href=\"https://code4rena.com/@0xepley\">0xepley</a></li>\n<li><a href=\"https://code4rena.com/@unique\">unique</a></li>\n<li><a href=\"https://code4rena.com/@emerald7017\">emerald7017</a></li>\n<li><a href=\"https://code4rena.com/@cats\">cats</a></li>\n<li><a href=\"https://code4rena.com/@fouzantanveer\">fouzantanveer</a></li>\n<li><a href=\"https://code4rena.com/@0xbrett8571\">0xbrett8571</a></li>\n<li><a href=\"https://code4rena.com/@invitedtea\">invitedtea</a></li>\n<li><a href=\"https://code4rena.com/@Myd\">Myd</a></li>\n<li><a href=\"https://code4rena.com/@cheatc0d3\">cheatc0d3</a></li>\n<li><a href=\"https://code4rena.com/@tala7985\">tala7985</a></li>\n<li><a href=\"https://code4rena.com/@JCK\">JCK</a></li>\n<li><a href=\"https://code4rena.com/@0xAnah\">0xAnah</a></li>\n<li><a href=\"https://code4rena.com/@0xhex\">0xhex</a></li>\n<li><a href=\"https://code4rena.com/@0xta\">0xta</a></li>\n<li><a href=\"https://code4rena.com/@tabriz\">tabriz</a></li>\n<li><a href=\"https://code4rena.com/@parlayan_yildizlar_takimi\">parlayan_yildizlar_takimi</a> (<a href=\"https://code4rena.com/@ata\">ata</a>, <a href=\"https://code4rena.com/@caglankaan\">caglankaan</a> and <a href=\"https://code4rena.com/@ulas\">ulas</a>)</li>\n<li><a href=\"https://code4rena.com/@peanuts\">peanuts</a></li>\n<li><a href=\"https://code4rena.com/@pep7siup\">pep7siup</a></li>\n<li><a href=\"https://code4rena.com/@aslanbek\">aslanbek</a></li>\n<li><a href=\"https://code4rena.com/@jasonxiale\">jasonxiale</a></li>\n<li><a href=\"https://code4rena.com/@Pheonix\">Pheonix</a></li>\n<li><a href=\"https://code4rena.com/@zhaojie\">zhaojie</a></li>\n<li><a href=\"https://code4rena.com/@max10afternoon\">max10afternoon</a></li>\n<li><a href=\"https://code4rena.com/@t0x1c\">t0x1c</a></li>\n<li><a href=\"https://code4rena.com/@OMEN\">OMEN</a></li>\n<li><a href=\"https://code4rena.com/@erebus\">erebus</a></li>\n<li><a href=\"https://code4rena.com/@ksk2345\">ksk2345</a></li>\n<li><a href=\"https://code4rena.com/@ZanyBonzy\">ZanyBonzy</a></li>\n<li><a href=\"https://code4rena.com/@tourist\">tourist</a></li>\n<li><a href=\"https://code4rena.com/@young\">young</a></li>\n<li><a href=\"https://code4rena.com/@btk\">btk</a></li>\n<li><a href=\"https://code4rena.com/@bareli\">bareli</a></li>\n<li><a href=\"https://code4rena.com/@Topmark\">Topmark</a></li>\n<li><a href=\"https://code4rena.com/@sl1\">sl1</a></li>\n<li><a href=\"https://code4rena.com/@SandNallani\">SandNallani</a></li>\n<li><a href=\"https://code4rena.com/@MohammedRizwan\">MohammedRizwan</a></li>\n<li><a href=\"https://code4rena.com/@wisdomn_\">wisdomn_</a></li>\n<li><a href=\"https://code4rena.com/@Matin\">Matin</a></li>\n<li><a href=\"https://code4rena.com/@ayden\">ayden</a></li>\n<li><a href=\"https://code4rena.com/@shenwilly\">shenwilly</a></li>\n<li><a href=\"https://code4rena.com/@codynhat\">codynhat</a></li>\n<li><a href=\"https://code4rena.com/@critical-or-high\">critical-or-high</a></li>\n<li><a href=\"https://code4rena.com/@sbaudh6\">sbaudh6</a></li>\n<li><a href=\"https://code4rena.com/@nailkhalimov\">nailkhalimov</a></li>\n<li><a href=\"https://code4rena.com/@merlinboii\">merlinboii</a></li>\n<li><a href=\"https://code4rena.com/@firmanregar\">firmanregar</a></li>\n<li><a href=\"https://code4rena.com/@0xMango\">0xMango</a></li>\n<li><a href=\"https://code4rena.com/@turvy_fuzz\">turvy_fuzz</a></li>\n<li><a href=\"https://code4rena.com/@Udsen\">Udsen</a></li>\n<li><a href=\"https://code4rena.com/@jnforja\">jnforja</a></li>\n<li><a href=\"https://code4rena.com/@Madalad\">Madalad</a></li>\n<li><a href=\"https://code4rena.com/@peritoflores\">peritoflores</a></li>\n<li><a href=\"https://code4rena.com/@inzinko\">inzinko</a></li>\n<li><a href=\"https://code4rena.com/@deepkin\">deepkin</a></li>\n<li><a href=\"https://code4rena.com/@DarkTower\">DarkTower</a> (<a href=\"https://code4rena.com/@Gelato_ST\">Gelato_ST</a>, <a href=\"https://code4rena.com/@Maroutis\">Maroutis</a>, <a href=\"https://code4rena.com/@OxTenma\">OxTenma</a> and <a href=\"https://code4rena.com/@0xrex\">0xrex</a>)</li>\n<li><a href=\"https://code4rena.com/@0xarno\">0xarno</a></li>\n<li><a href=\"https://code4rena.com/@vangrim\">vangrim</a></li>\n<li><a href=\"https://code4rena.com/@mahyar\">mahyar</a></li>\n<li><a href=\"https://code4rena.com/@nmirchev8\">nmirchev8</a></li>\n<li><a href=\"https://code4rena.com/@0x175\">0x175</a></li>\n<li><a href=\"https://code4rena.com/@KupiaSec\">KupiaSec</a></li>\n<li><a href=\"https://code4rena.com/@rice_cooker\">rice_cooker</a></li>\n<li><a href=\"https://code4rena.com/@neocrao\">neocrao</a></li>\n<li><a href=\"https://code4rena.com/@twcctop\">twcctop</a></li>\n<li><a href=\"https://code4rena.com/@openwide\">openwide</a></li>\n<li><a href=\"https://code4rena.com/@Tricko\">Tricko</a></li>\n<li><a href=\"https://code4rena.com/@0x3b\">0x3b</a></li>\n<li><a href=\"https://code4rena.com/@HChang26\">HChang26</a></li>\n<li><a href=\"https://code4rena.com/@RaoulSchaffranek\">RaoulSchaffranek</a></li>\n<li><a href=\"https://code4rena.com/@developerjordy\">developerjordy</a></li>\n<li><a href=\"https://code4rena.com/@Giorgio\">Giorgio</a></li>\n<li><a href=\"https://code4rena.com/@ElCid\">ElCid</a></li>\n<li><a href=\"https://code4rena.com/@rouhsamad\">rouhsamad</a></li>\n<li><a href=\"https://code4rena.com/@zhaojohnson\">zhaojohnson</a></li>\n</ol>\n<p>This audit was judged by <a href=\"https://code4rena.com/@0xTheC0der\">0xTheC0der</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/brittfactorC4\">thebrittfactor</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 3 unique vulnerabilities. Of these vulnerabilities, 1 received a risk rating in the category of HIGH severity and 2 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 44 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 17 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2023-11-canto\">C4 Canto Application Specific Dollars and Bonding Curves for 1155s repository</a>, and is composed of 4 smart contracts written in the Solidity programming language and includes 316 lines of Solidity code.</p>\n<p>In addition to the known issues identified by the project team, a Code4rena bot race was conducted at the start of the audit. The winning bot, <strong>henry</strong> from warden hihen, generated the <a href=\"https://gist.github.com/code423n4/8152d0e300fc048c8aac9da328fa8475\">Automated Findings report</a> and all findings therein were classified as out of scope.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities based on three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>For more information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>, specifically our section on <a href=\"https://docs.code4rena.com/awarding/judging-criteria/severity-categorization\">Severity Categorization</a>.</p>\n<h1 id=\"high-risk-findings-1\" style=\"position:relative;\"><a href=\"#high-risk-findings-1\" aria-label=\"high risk findings 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (1)</h1>\n<h2 id=\"h-01-owner-cannot-withdraw-all-interest-due-to-wrong-calculation-of-accrued-interest-in-withdrawcarry\" style=\"position:relative;\"><a href=\"#h-01-owner-cannot-withdraw-all-interest-due-to-wrong-calculation-of-accrued-interest-in-withdrawcarry\" aria-label=\"h 01 owner cannot withdraw all interest due to wrong calculation of accrued interest in withdrawcarry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/181\">[H-01] Owner cannot withdraw all interest due to wrong calculation of accrued interest in <code>WithdrawCarry</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/181\">100su</a>, also found by <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/448\">pontifex</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/392\">immeas</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/391\">nazirite</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/381\">Soul22</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/369\">bart1e</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/360\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/345\">Oxsadeeq</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/264\">ast3ros</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/259\">osmanozdemir1</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/256\">ether_sky</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/227\">T1MOH</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/126\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/113\">0xpiken</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/74\">ustas</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/57\">SpicyMeatball</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/50\">wangxx2026</a>, and <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/11\">0xluckhu</a></em></p>\n<p>The current <code>withdrawCarry</code> function in the contract underestimates the accrued interest due to a miscalculation. This error prevents the rightful owner from withdrawing their accrued interest, effectively locking the assets. The primary issue lies in the calculation of <code>maximumWithdrawable</code> within <code>withdrawCarry</code>.</p>\n<h3 id=\"flawed-calculation\" style=\"position:relative;\"><a href=\"#flawed-calculation\" aria-label=\"flawed calculation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Flawed Calculation</h3>\n<p>The following code segment is used to determine <code>maximumWithdrawable</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 exchangeRate = CTokenInterface(cNote).exchangeRateCurrent(); // Scaled by 1 * 10^(18 - 8 + Underlying Token Decimals), i.e. 10^(28) in our case</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">// The amount of cNOTE the contract has to hold (based on the current exchange rate which is always increasing) such that it is always possible to receive 1 NOTE when burning 1 asD</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 maximumWithdrawable = (CTokenInterface(cNote).balanceOf(address(this)) * exchangeRate) / 1e28 - totalSupply();</span></span></code></pre>\n<p>The problem arises with the scaling of <code>exchangeRate</code>, which is assumed to be scaled by <code>10^28</code>. However, for <code>CNOTE</code> in the Canto network, the <code>exchangeRate</code> is actually scaled by <code>10^18</code>. This discrepancy causes the owner to withdraw only <code>10^(-10)</code> times the actual interest amount. </p>\n<p>Consequently, when a non-zero <code>_amount</code> is specified, <code>withdrawCarry</code> often fails due to the <code>require(_amount &#x3C;= maximumWithdrawable, \"Too many tokens requested\");</code> condition.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><strong>CNOTE Scaling Verification</strong></p>\n<p>An essential aspect of this audit involves verifying the scaling factor of the <code>CNOTE</code> exchange rate. The <code>exchangeRate</code> scale for <code>CNOTE</code> can be verified in the <a href=\"https://github.com/Canto-Network/clm/blob/298377c8711a067a2a49d75a8bf2f90bbbe3de9e/src/CErc20.sol#L15\">Canto Network’s GitHub repository</a>.  Evidence confirming that the exponent of the <code>CNOTE</code> exchange rate is indeed <code>18</code> can be found through <a href=\"https://tuber.build/token/0xEe602429Ef7eCe0a13e4FfE8dBC16e101049504C?tab=read_proxy\">this link to the token tracker</a>. The data provided there shows the current value of the stored exchange rate (<code>exchangeRateStored</code>) as approximately <code>1004161485744613000</code>. This value corresponds to <code>1.00416 * 1e18</code>, reaffirming the <code>10^18</code> scaling factor.</p>\n<p>This information is critical for accurately understanding the mechanics of CNOTE and ensuring the smart contract’s calculations align with the actual scaling used in the token’s implementation. The verification of this scaling factor supports the recommendations for adjusting the main contract’s calculations and the associated test cases, as previously outlined.</p>\n<p><strong>Testing with Solidity Codes</strong></p>\n<p>Testing with the following Solidity code illustrates the actual <code>CNOTE</code> values:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateBalance</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">updatedUnderlyingBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ICNoteSimple</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cnote</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOfUnderlying</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">updatedExchangeRate</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ICNoteSimple</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cnote</span><span class=\"mtk1\">).</span><span class=\"mtk11\">exchangeRateCurrent</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cnote</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">calculatedUnderlying</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">updatedExchangeRate</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">1e28</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The corresponding TypeScript logs show a clear discrepancy between the expected and calculated underlying balances:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">console.log(&quot;balanceCnote: &quot;, (Number(balanceCnote) / 1e18).toString());</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">console.log(&quot;exchangeRate: &quot;, Number(exchangeRate).toString());</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">console.log(&quot;underlyingBalance: &quot;, Number(underlyingBalance).toString());</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">console.log(&quot;calculatedUnderlying: &quot;, Number(calculatedUnderlying).toString());</span></span></code></pre>\n<p>With the logs:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">balanceCnote:  400100.9100006097</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">exchangeRate:  1004122567006264000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">underlyingBalance:  4.017503528113544e+23</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">calculatedUnderlying:  40175035281135</span></span></code></pre>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<ul>\n<li>Solidity for interacting with the Canto mainnet.</li>\n<li>TypeScript for testing and validation.</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p><strong>Using <code>balanceOfUnderlying</code> Function</strong> - Replace the flawed calculation with the <code>balanceOfUnderlying</code> function. This function accurately calculates the underlying <code>NOTE</code> balance and is defined in <code>CToken.sol</code> (<a href=\"https://github.com/Canto-Network/clm/blob/298377c8711a067a2a49d75a8bf2f90bbbe3de9e/src/CToken.sol#L175\">source</a>).</p>\n<p><strong>Proposed Code Modifications</strong> - Two alternative implementations are suggested:</p>\n<ol>\n<li>Without <code>balanceOfUnderlying</code>: Modify the scaling factor in the existing calculation from <code>1e28</code> to <code>1e18</code>.</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function withdrawCarry(uint256 _amount) external onlyOwner {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 exchangeRate = CTokenInterface(cNote).exchangeRateCurrent(); // Scaled by 10^18</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // The amount of cNOTE the contract has to hold (based on the current exchange rate which is always increasing) such that it is always possible to receive 1 NOTE when burning 1 asD</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 maximumWithdrawable = (CTokenInterface(cNote).balanceOf(address(this)) * exchangeRate) /</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            1e18 -</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            totalSupply();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (_amount == 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            _amount = maximumWithdrawable;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            require(_amount &lt;= maximumWithdrawable, &quot;Too many tokens requested&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Technically, _amount can still be 0 at this point, which would make the following two calls unnecessary.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // But we do not handle this case specifically, as the only consequence is that the owner wastes a bit of gas when there is nothing to withdraw</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 returnCode = CErc20Interface(cNote).redeemUnderlying(_amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(returnCode == 0, &quot;Error when redeeming&quot;); // 0 on success: https://docs.compound.finance/v2/ctokens/#redeem</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        IERC20 note = IERC20(CErc20Interface(cNote).underlying());</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        SafeERC20.safeTransfer(note, msg.sender, _amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        emit CarryWithdrawal(_amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<ol start=\"2\">\n<li>With <code>balanceOfUnderlying</code> (Recommended): Utilize the <code>balanceOfUnderlying</code> function for a simpler calculation of <code>maximumWithdrawable</code>.</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function withdrawCarry(uint256 _amount) external onlyOwner {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // The amount of cNOTE the contract has to hold (based on the current exchange rate which is always increasing) such that it is always possible to receive 1 NOTE when burning 1 asD</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 maximumWithdrawable = CTokenInterface(cNote).balanceOfUnderlying(address(this)) - totalSupply();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (_amount == 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            _amount = maximumWithdrawable;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            require(_amount &lt;= maximumWithdrawable, &quot;Too many tokens requested&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Technically, _amount can still be 0 at this point, which would make the following two calls unnecessary.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // But we do not handle this case specifically, as the only consequence is that the owner wastes a bit of gas when there is nothing to withdraw</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 returnCode = CErc20Interface(cNote).redeemUnderlying(_amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(returnCode == 0, &quot;Error when redeeming&quot;); // 0 on success: https://docs.compound.finance/v2/ctokens/#redeem</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        IERC20 note = IERC20(CErc20Interface(cNote).underlying());</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        SafeERC20.safeTransfer(note, msg.sender, _amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        emit CarryWithdrawal(_amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>The second option is highly recommended for its accuracy and simplicity.</p>\n<h3 id=\"modification-of-related-test-codes\" style=\"position:relative;\"><a href=\"#modification-of-related-test-codes\" aria-label=\"modification of related test codes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Modification of Related Test Codes</h3>\n<p>For post-modifications to the main contract code, it’s essential to update the associated test cases. In the <a href=\"https://github.com/code-423n4/2023-11-canto/blob/main/asD/src/test/asD.t.sol#L16-L49\"><code>MockCNOTE</code></a> test contract, all scaling is currently set to <code>10^28</code>. To align with the main contract changes, the following modifications are recommended for <code>MockCNOTE</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">contract MockCNOTE is MockERC20 {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address public underlying;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 public constant SCALE = 1e18;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 public exchangeRateCurrent = SCALE;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    constructor(string memory symbol, string memory name, address _underlying) MockERC20(symbol, name) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        underlying = _underlying;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    function mint(uint256 amount) public returns (uint256 statusCode) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        SafeERC20.safeTransferFrom(IERC20(underlying), msg.sender, address(this), amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _mint(msg.sender, (amount * SCALE) / exchangeRateCurrent);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        statusCode = 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    function redeemUnderlying(uint256 amount) public returns (uint256 statusCode) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        SafeERC20.safeTransfer(IERC20(underlying), msg.sender, amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _burn(msg.sender, (amount * exchangeRateCurrent) / SCALE);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        statusCode = 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    function redeem(uint256 amount) public returns (uint256 statusCode) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        SafeERC20.safeTransfer(IERC20(underlying), msg.sender, (amount * exchangeRateCurrent) / SCALE);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        _burn(msg.sender, amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        statusCode = 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    function setExchangeRate(uint256 _exchangeRate) public {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        exchangeRateCurrent = _exchangeRate;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>This revised <code>MockCNOTE</code> contract reflects the updated scale factor and aligns with the main contract’s logic.</p>\n<h3 id=\"scenario-testing-with-mainnet-forking\" style=\"position:relative;\"><a href=\"#scenario-testing-with-mainnet-forking\" aria-label=\"scenario testing with mainnet forking permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scenario Testing with Mainnet Forking</h3>\n<p>For comprehensive validation, scenario testing using a fork of the mainnet is highly recommended. This approach allows for real-world testing conditions by simulating interactions with existing contracts on the mainnet. It provides a robust environment to verify the correctness and reliability of the contract modifications in real-world scenarios, ensuring that the contract behaves as expected when interfacing with other mainnet contracts.</p>\n<p>This step is crucial to identify potential issues that might not be apparent in isolated or simulated environments, enhancing the overall reliability of the contract before deployment.</p>\n<h3 id=\"assessed-type\" style=\"position:relative;\"><a href=\"#assessed-type\" aria-label=\"assessed type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Math</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/227#issuecomment-1827562804\">OpenCoreCH (Canto) confirmed and commented via duplicate issue #227</a>:</strong></p>\n<blockquote>\n<p>True, <code>cNOTE</code> only has 8 decimals unlike all other cTokens that have 18 decimals, causing this discrepancy. Will be fixed.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/181#issuecomment-1838419120\">OpenCoreCH (Canto) commented</a>:</strong></p>\n<blockquote>\n<p>Fixed.</p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-2\" style=\"position:relative;\"><a href=\"#medium-risk-findings-2\" aria-label=\"medium risk findings 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (2)</h1>\n<h2 id=\"m-01-no-slippage-protection-for-market-functions\" style=\"position:relative;\"><a href=\"#m-01-no-slippage-protection-for-market-functions\" aria-label=\"m 01 no slippage protection for market functions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/12\">[M-01] No slippage protection for Market functions</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/12\">rvierdiiev</a>, also found by <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/505\">0xMango</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/496\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/494\">turvy_fuzz</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/460\">Udsen</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/456\">pontifex</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/452\">jnforja</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/446\">Madalad</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/441\">peritoflores</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/440\">inzinko</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/438\">deepkin</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/425\">DarkTower</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/416\">peanuts</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/411\">pep7siup</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/395\">0xarno</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/379\">vangrim</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/340\">aslanbek</a>, mojito_auditor (<a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/339\">1</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/338\">2</a>), <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/330\">mahyar</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/326\">nmirchev8</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/318\">Yanchuan</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/316\">PENGUN</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/308\">0x175</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/304\">KupiaSec</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/301\">jasonxiale</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/296\">Pheonix</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/284\">rice_cooker</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/283\">osmanozdemir1</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/281\">neocrao</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/275\">twcctop</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/269\">T1MOH</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/265\">ast3ros</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/260\">Kose</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/242\">bart1e</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/226\">tnquanghuy0512</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/225\">openwide</a>, t0x1c (<a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/218\">1</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/176\">2</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/150\">3</a>), <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/210\">zhaojie</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/200\">Tricko</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/188\">0x3b</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/183\">Bauchibred</a>, chaduke (<a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/174\">1</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/170\">2</a>), <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/165\">HChang26</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/162\">RaoulSchaffranek</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/157\">max10afternoon</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/148\">ustas</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/144\">developerjordy</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/128\">Giorgio</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/123\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/114\">SpicyMeatball</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/112\">0xpiken</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/77\">glcanvas</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/73\">ElCid</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/70\">rouhsamad</a>, and <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/65\">zhaojohnson</a></em></p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Price for shares inside <code>Market</code> is calculated using bonding curve. Currently, <code>LinearBondingCurve</code> is supported. This bonging curve <a href=\"https://github.com/code-423n4/2023-11-canto/blob/main/1155tech-contracts/src/bonding_curve/LinearBondingCurve.sol#L21\">increases each next shares with fixed amount</a> and also <a href=\"https://github.com/code-423n4/2023-11-canto/blob/main/1155tech-contracts/src/bonding_curve/LinearBondingCurve.sol#L35\">uses <code>10% / log2(shareIndex)</code> to calculate fee</a> for the share.</p>\n<p>In order to calculate price to <a href=\"https://github.com/code-423n4/2023-11-canto/blob/main/1155tech-contracts/src/Market.sol#L152\">buy shares <code>getBuyPrice</code> is used</a> and to calculate price to <a href=\"https://github.com/code-423n4/2023-11-canto/blob/main/1155tech-contracts/src/Market.sol#L175\"><code>sell</code> shares <code>getSellPrice</code> is used</a>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-11-canto/blob/main/1155tech-contracts/src/Market.sol#L132-L145\">https://github.com/code-423n4/2023-11-canto/blob/main/1155tech-contracts/src/Market.sol#L132-L145</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getBuyPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">price</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// If id does not exist, this will return address(0), causing a revert in the next line</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bondingCurve</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">bondingCurve</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">price</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">IBondingCurve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bondingCurve</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getPriceAndFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenCount</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getSellPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">price</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// If id does not exist, this will return address(0), causing a revert in the next line</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bondingCurve</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">bondingCurve</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">price</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">IBondingCurve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bondingCurve</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getPriceAndFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenCount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Both functions use <code>IBondingCurve(bondingCurve).getPriceAndFee</code>, but <code>getBuyPrice</code> provides <code>current token index</code> as start index for curve, while <code>getSellPrice</code> provides <code>current token index - amount to sell</code> as start index for curve.</p>\n<p>In the case when someone wants to buy shares, the price depends on current circulation supply. If this supply is increased right after a user’s <code>buy</code> tx, then they will pay more for the shares. If someone sells shares right before the <code>buy</code> tx, then a user will pay a lesser amount (which is good of course).</p>\n<p>The same we can say about <code>sell</code> function. If someone sells shares right before a user’s <code>sell</code> execution, then the user receives a smaller amount. If someone buys shares, then the user gets a bigger amount.</p>\n<p>As the price at the moment when user initiates <code>buy</code> or <code>sell</code> function can be changed before execution (with frontrunning or just innocent), this means that slippage protection should be introduced, so a user can be sure that they will not pay more than expected or receive less than expected.</p>\n<p>When a user expects to <code>buy</code> shares for 5 USD, then the attacker can sandwich a user’s tx shares in order to make profit.</p>\n<ul>\n<li>Attacker first frontruns and <code>buy</code>s shares that cost 5 USD.</li>\n<li>Then, let a user’s <code>buy</code> tx to be executed so a user buys shares more expensive (10 USD). </li>\n<li>Then the attacker backruns with <code>sell</code> shares that cost now 10 USD and earn on this (5 USD).</li>\n</ul>\n<p>The same thing can be done with <code>sell</code> sandwiching. When a user expects to <code>sell</code> their share for 20 USD:</p>\n<ul>\n<li>Attacker can <code>sell</code> own share (and get 20 USD).</li>\n<li>Then, let a user <code>sell</code> their share cheaper (and get 15 USD).</li>\n<li>Then the attacker buys share cheaper (for 10 USD) and earn on this (10 USD).</li>\n</ul>\n<p>While <code>buy</code> sandwiching needs a user to give the full approval to <code>Market</code> as this price is then sent from user, <code>sell</code> sandwiching doesn’t need that because it only sends tokens to the victim.</p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>User can lose funds.</p>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VsCode</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Make a user provide slippage to <code>buy</code>, <code>sell</code>, <code>burnNFT</code> and <code>mintNFT</code> functions.</p>\n<h3 id=\"assessed-type-1\" style=\"position:relative;\"><a href=\"#assessed-type-1\" aria-label=\"assessed type 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Error</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/12#issuecomment-1827462251\">OpenCoreCH (Canto) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/12#issuecomment-1830907592\">0xTheC0der (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>On the one hand, according to our <a href=\"https://docs.code4rena.com/roles/judges/how-to-judge-a-contest\">guidelines</a>:</p>\n<blockquote>\n<p>Unless there is something uniquely novel created by combining vectors, most submissions regarding vulnerabilities that are inherent to a particular system or the Ethereum network as a whole <strong>should be considered QA</strong>. Examples of such vulnerabilities include front running, <strong>sandwich attacks</strong>, and MEV.</p>\n</blockquote>\n<p>But on the other hand, a slippage percentage parameter or expected amount has become state-of-the-art which also makes this a shortcoming of the protocol. </p>\n<p>Consequently, it seems appropriate to move forward with <code>Medium</code> severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/12#issuecomment-1833719090\">OpenCoreCH (Canto) commented</a>:</strong></p>\n<blockquote>\n<p>Introduced params.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-users-will-lose-rewards-when-buying-new-tokens-if-they-already-own-some-tokens\" style=\"position:relative;\"><a href=\"#m-02-users-will-lose-rewards-when-buying-new-tokens-if-they-already-own-some-tokens\" aria-label=\"m 02 users will lose rewards when buying new tokens if they already own some tokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/9\">[M-02] Users will lose rewards when buying new tokens if they already own some tokens</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/9\">Krace</a>, also found by <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/500\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/394\">immeas</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/373\">0xAadi</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/337\">mojito_auditor</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/306\">PENGUN</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/302\">Yanchuan</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/244\">D1r3Wolf</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/223\">ether_sky</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/221\">tnquanghuy0512</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/168\">AS</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/138\">leegh</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/130\">lanrebayode77</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/125\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/110\">0xpiken</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/71\">glcanvas</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/66\">SpicyMeatball</a>, and <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/10\">rvierdiiev</a></em></p>\n<p>When users purchase new tokens, the old tokens they already own do not receive the fees from this purchase, resulting in a loss of funds for the users.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>According to the explanation by the sponsor (Roman), when users buy new tokens, the recently purchased token is not eligible for a fee. However, the “old shares” that users already own should be eligible.</p>\n<p>Roman:</p>\n<blockquote>\n<p>Hey, just a design decision, the idea behind it is that the user does not own the new shares yet when he buys, so he should not get any fees for it. Whereas he still owns it when he sells (it is basically the last sale).</p>\n</blockquote>\n<p>Krace:</p>\n<blockquote>\n<p>So the new shares should not get fee. If the user owns some “old shares”, is it eligible for a fee when the user buying?</p>\n</blockquote>\n<p>Roman:</p>\n<blockquote>\n<p>Yes, in that case, these shares are in the “owner pool” at the time of purchase and should be eligible</p>\n</blockquote>\n<p>However, the <a href=\"https://github.com/code-423n4/2023-11-canto/blob/b78bfdbf329ba9055ba24bd710c7e1c60251039a/1155tech-contracts/src/Market.sol#L150\"><code>buy</code></a> function will completely disregard the rewards associated with the buyer’s “old shares” for these fees.</p>\n<p>Let’s analyze the <code>buy</code> function:</p>\n<ul>\n<li><strong>Step 1:</strong> It retrieves the rewards for the buyer before the purchase. These rewards are not linked to the purchase because they use the old token amounts, and the fees from this purchase are not factored in.</li>\n<li><strong>Step 2:</strong> It splits the fees for this purchase. <code>_splitFees</code> increases the value of <code>shareHolderRewardsPerTokenScaled</code> based on the fees from this purchase.</li>\n<li><strong>Step 3:</strong> It updates the <code>rewardsLastClaimedValue</code> of the buyer to the latest <code>shareHolderRewardsPerTokenScaled</code>, which was increased in <code>_splitFees</code> just now.</li>\n</ul>\n<p>The question arises: the fees from this purchase are not rewarded to the buyer’s old tokens between Step 2 and Step 3, yet the buyer’s <code>rewardsLastClaimedValue</code> is updated to the newest value. This results in the permanent loss of these rewards for the buyer.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">buy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">creator</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Creator cannot buy&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">price</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">getBuyPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// Reverts for non-existing ID</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">SafeERC20</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">price</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// The reward calculation has to use the old rewards value (pre fee-split) to not include the fees of this buy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// The rewardsLastClaimedValue then needs to be updated with the new value such that the user cannot claim fees of this buy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit it will get the rewards first        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardsSinceLastClaim</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getRewardsSinceLastClaim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Split the fee among holder, creator and platform</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit then split the fees of this buying        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_splitFees</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokensInCirculation</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit and update sender&#39;s rewardsLastClaimedValue to the newest one, which is updated by `splitFees`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">rewardsLastClaimedValue</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">shareHolderRewardsPerTokenScaled</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenCount</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokensInCirculation</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">tokensByAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">rewardsSinceLastClaim</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">SafeERC20</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rewardsSinceLastClaim</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SharesBought</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">price</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_splitFees</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_fee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_tokenCount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shareHolderFee</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_fee</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">HOLDER_CUT_BPS</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shareCreatorFee</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">_fee</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">CREATOR_CUT_BPS</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10_000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">platformFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_fee</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">shareHolderFee</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">shareCreatorFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">shareCreatorPool</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">shareCreatorFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_tokenCount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//@audit shareHolderRewardsPerTokenScaled will be increased if tokenCount&gt;0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">shareHolderRewardsPerTokenScaled</span><span class=\"mtk1\"> += (</span><span class=\"mtk12\">shareHolderFee</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">_tokenCount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// If there are no tokens in circulation, the fee goes to the platform</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">platformFee</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">shareHolderFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">platformPool</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">platformFee</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"test\" style=\"position:relative;\"><a href=\"#test\" aria-label=\"test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test</h3>\n<p>The following POC shows the case mentioned. Add it to <code>1155tech-contracts/src/Market.t.sol</code> and run it with <code>forge test --match-test testBuyNoReward -vv</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function testBuyNoReward() public {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Bob create share with id 1</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        market.changeBondingCurveAllowed(address(bondingCurve), true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        market.restrictShareCreation(false);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        vm.prank(bob);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        market.createNewShare(&quot;Test Share&quot;, address(bondingCurve), &quot;metadataURI&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        assertEq(market.shareIDs(&quot;Test Share&quot;), 1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        token.transfer(alice, 1e17);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // alice buy 1 token in share1 ==&gt; token1</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        vm.startPrank(alice);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 aliceBalanceBefore = token.balanceOf(alice);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        token.approve(address(market), 1e18);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        console.log(&quot; alice balance &quot;, aliceBalanceBefore);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        market.buy(1, 1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 aliceBalanceAfter = token.balanceOf(alice);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        console.log(&quot; alice balance after buy &quot;,  aliceBalanceAfter);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        console.log(&quot; alice cost after buy &quot;,  aliceBalanceBefore - aliceBalanceAfter);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // alice buy another 1 token in share1 ==&gt; token2</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        market.buy(1,1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 aliceBalanceAfterSecondBuy = token.balanceOf(alice);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        console.log(&quot; alice balance after second buy &quot;,  aliceBalanceAfterSecondBuy);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // alice get no reward for her token1</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        console.log(&quot; alice cost after second buy &quot;,  aliceBalanceAfter - aliceBalanceAfterSecondBuy);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        vm.stopPrank();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>The result is shown below; Alice gets no rewards for <code>token1</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">[PASS] testBuyNoReward() (gas: 443199)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Logs:</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   alice balance  100000000000000000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   alice balance after buy  98900000000000000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   alice cost after buy  1100000000000000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   alice balance after second buy  96700000000000000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   alice cost after second buy  2200000000000000</span></span></code></pre>\n<p>After my suggested patch, Alice can get the rewards for <code>token1</code>: <code>2200000000000000</code> - <code>2134000000000000</code> = <code>66000000000000</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">[PASS] testBuyNoReward() (gas: 447144)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Logs:</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   alice balance  100000000000000000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   alice balance after buy  98900000000000000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   alice cost after buy  1100000000000000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   alice balance after second buy  96766000000000000</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   alice cost after second buy  2134000000000000</span></span></code></pre>\n<h3 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Foundry</p>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Split the fees before getting the rewards in <code>buy</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/1155tech-contracts/src/Market.sol b/1155tech-contracts/src/Market.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 59c5c96..85d91a5 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/1155tech-contracts/src/Market.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/1155tech-contracts/src/Market.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -151,11 +151,11 @@ contract Market is ERC1155, Ownable2Step {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(shareData[_id].creator != msg.sender, &quot;Creator cannot buy&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         (uint256 price, uint256 fee) = getBuyPrice(_id, _amount); // Reverts for non-existing ID</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         SafeERC20.safeTransferFrom(token, msg.sender, address(this), price + fee);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        // Split the fee among holder, creator and platform</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        _splitFees(_id, fee, shareData[_id].tokensInCirculation);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // The reward calculation has to use the old rewards value (pre fee-split) to not include the fees of this buy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // The rewardsLastClaimedValue then needs to be updated with the new value such that the user cannot claim fees of this buy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 rewardsSinceLastClaim = _getRewardsSinceLastClaim(_id);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // Split the fee among holder, creator and platform</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        _splitFees(_id, fee, shareData[_id].tokensInCirculation);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         rewardsLastClaimedValue[_id][msg.sender] = shareData[_id].shareHolderRewardsPerTokenScaled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         shareData[_id].tokenCount += _amount;</span></span></span></code></pre>\n<h3 id=\"assessed-type-2\" style=\"position:relative;\"><a href=\"#assessed-type-2\" aria-label=\"assessed type 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Context</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/9#issuecomment-1828482474\">OpenCoreCH (Canto) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>These fees are not lost, the impact is just that for this particular <code>buys</code>; the other users get more rewards and the user that buys less (but the same also applies for other users, so it might even cancel out for long-term holders). So I think high is definitely over-inflated for that.</p>\n<p>However, I agree that the current logic is a bit weird, but changing it such that they just receive rewards for the other shares would also be a bit weird (would incentivize to split up a buy into multiple ones). We discussed this internally and will change the logic such that users always receive fees for their <code>buys</code>, no matter if it is the first or subsequent ones.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/9#issuecomment-1830951178\">0xTheC0der (judge) decreased severity to Medium</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/9#issuecomment-1833716107\">OpenCoreCH (Canto) commented</a>:</strong></p>\n<blockquote>\n<p>Fixed.</p>\n</blockquote>\n<p><em>Note: For full discussion, see <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/9\">here</a>.</em></p>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this audit, 44 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/106\">report highlighted below</a> by <strong>chaduke</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/451\">pontifex</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/383\">MrPotatoMagic</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/362\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/356\">Bauchibred</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/333\">kaveyjoe</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/175\">lsaudit</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/498\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/493\">OMEN</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/470\">hunter_w3b</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/466\">erebus</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/435\">peanuts</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/429\">cheatc0d3</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/423\">ksk2345</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/405\">pep7siup</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/375\">ZanyBonzy</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/347\">jasonxiale</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/335\">tourist</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/327\">osmanozdemir1</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/315\">young</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/313\">aslanbek</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/303\">Pheonix</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/293\">btk</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/289\">bareli</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/274\">Topmark</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/270\">bart1e</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/261\">sl1</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/243\">T1MOH</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/220\">SandNallani</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/217\">zhaojie</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/216\">MohammedRizwan</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/196\">wisdomn_</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/191\">0xpiken</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/160\">Matin</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/153\">max10afternoon</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/132\">ayden</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/124\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/111\">shenwilly</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/103\">codynhat</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/60\">critical-or-high</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/56\">sbaudh6</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/45\">nailkhalimov</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/22\">merlinboii</a>, and <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/19\">firmanregar</a>.</em></p>\n<h2 id=\"01-check-whether-rewardssincelastclaim--price---fee--0-in-function-sell\" style=\"position:relative;\"><a href=\"#01-check-whether-rewardssincelastclaim--price---fee--0-in-function-sell\" aria-label=\"01 check whether rewardssincelastclaim  price   fee  0 in function sell permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[01] Check whether <code>rewardsSinceLastClaim + price - fee == 0</code> in function <code>sell()</code></h2>\n<p>The function should fail when <code>rewardsSinceLastClaim + price - fee == 0</code> to avoid not worthy sell.</p>\n<p><a href=\"https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L187\">Market.sol#L187</a></p>\n<p>Mitigation:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">function sell(uint256 _id, uint256 _amount) external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (uint256 price, uint256 fee) = getSellPrice(_id, _amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        // Split the fee among holder, creator and platform</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        _splitFees(_id, fee, shareData[_id].tokensInCirculation);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        // The user also gets the rewards of his own sale (which is not the case for buys)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        uint256 rewardsSinceLastClaim = _getRewardsSinceLastClaim(_id);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        rewardsLastClaimedValue[_id][msg.sender] = shareData[_id].shareHolderRewardsPerTokenScaled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        shareData[_id].tokenCount -= _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        shareData[_id].tokensInCirculation -= _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        tokensByAddress[_id][msg.sender] -= _amount; // Would underflow if user did not have enough tokens</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        // Send the funds to the user</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       uint amt = rewardsSinceLastClaim + price - fee;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        SafeERC20.safeTransfer(token, msg.sender, rewardsSinceLastClaim + price - fee);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (amt &gt; 0) SafeERC20.safeTransfer(token, msg.sender, amt);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        else revert(&quot;no zero sell.&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        emit SharesSold(_id, msg.sender, _amount, price, fee);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"02-asdfactorycreate-does-not-prevent-that-two-asd-contracts-might-have-the-same-name-and-symbol\" style=\"position:relative;\"><a href=\"#02-asdfactorycreate-does-not-prevent-that-two-asd-contracts-might-have-the-same-name-and-symbol\" aria-label=\"02 asdfactorycreate does not prevent that two asd contracts might have the same name and symbol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[02] <code>asDFactory.create()</code> does not prevent that two <code>asD</code> contracts might have the same name and symbol.</h2>\n<p><a href=\"https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/asD/src/asDFactory.sol#L33-L38\">asDFactory.sol#L33-L38</a></p>\n<h2 id=\"03-getpriceandfee-has-the-issue-of-division-precision-loss-issue\" style=\"position:relative;\"><a href=\"#03-getpriceandfee-has-the-issue-of-division-precision-loss-issue\" aria-label=\"03 getpriceandfee has the issue of division precision loss issue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[03] <code>getPriceAndFee()</code> has the issue of division precision loss issue</h2>\n<p><a href=\"https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/bonding_curve/LinearBondingCurve.sol#L14-L25\">LinearBondingCurve.sol#L14-L25</a></p>\n<p>The problem is in the following line: </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascipt\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">fee += (getFee(i) * tokenPrice) / 1e18;</span></span></code></pre>\n<p>The division of <code>1e18</code> should be performed after the loop is completed to avoid early division rounding error. </p>\n<p>Mitigation: The division of <code>1e19</code> is performed outside:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> function getPriceAndFee(uint256 shareCount, uint256 amount)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        returns (uint256 price, uint256 fee)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        for (uint256 i = shareCount; i &lt; shareCount + amount; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            uint256 tokenPrice = priceIncrease * i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            price += tokenPrice;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            fee += (getFee(i) * tokenPrice) / 1e18;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            fee += (getFee(i) * tokenPrice);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            fee = fee / 1e18;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"04-it-is-better-to-check-amount--0-to-avoid-false-event-emit\" style=\"position:relative;\"><a href=\"#04-it-is-better-to-check-amount--0-to-avoid-false-event-emit\" aria-label=\"04 it is better to check amount  0 to avoid false event emit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[04] It is better to check <code>amount > 0</code> to avoid false event emit</h2>\n<p><a href=\"https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L244-L249\">Market.sol#L244-L249</a></p>\n<h2 id=\"05-the-event-emitting-should-be-inside-the-if-statement-to-avoid-false-event-emitting\" style=\"position:relative;\"><a href=\"#05-the-event-emitting-should-be-inside-the-if-statement-to-avoid-false-event-emitting\" aria-label=\"05 the event emitting should be inside the if statement to avoid false event emitting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[05] The event emitting should be inside the if statement to avoid false event emitting</h2>\n<p><a href=\"https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L263-L270\">Market.sol#L263-L270</a></p>\n<h2 id=\"06-we-need-to-emit-an-event-for-this-function\" style=\"position:relative;\"><a href=\"#06-we-need-to-emit-an-event-for-this-function\" aria-label=\"06 we need to emit an event for this function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[06] We need to emit an event for this function</h2>\n<p><a href=\"https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L309-L312\">Market.sol#L309-L312</a></p>\n<h2 id=\"07-both-mintnft-and-burnnft-lacks-slippage-control-for-the-fee\" style=\"position:relative;\"><a href=\"#07-both-mintnft-and-burnnft-lacks-slippage-control-for-the-fee\" aria-label=\"07 both mintnft and burnnft lacks slippage control for the fee permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[07] Both <code>mintNFT()</code> and <code>burnNFT()</code> lacks slippage control for the fee</h2>\n<p>Note that the fee is not a fixed value, its value depends on <code>shareData[_id].tokenCount</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L194-L198\">Market.sol#L194-L198</a></p>\n<p>Therefore, if the function is front-run by another <code>buy()</code> and <code>mintNFT()</code> function, then <code>shareData[_id].tokenCount</code> will increase, and as a result, the fee will increase. A user might pay more fee than they expected due to such front-runs. </p>\n<p>Mitigation: Add a slippage control so that the user can control the maximum amount of fee they are willing to pay. </p>\n<h2 id=\"08-the-function-changebondingcurveallowed-will-not-be-able-to-disable-previously-boundcurves-that-have-been-used-in-some-share-creation\" style=\"position:relative;\"><a href=\"#08-the-function-changebondingcurveallowed-will-not-be-able-to-disable-previously-boundcurves-that-have-been-used-in-some-share-creation\" aria-label=\"08 the function changebondingcurveallowed will not be able to disable previously boundcurves that have been used in some share creation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[08] The function <code>changeBondingCurveAllowed()</code> will not be able to disable previously boundcurves that have been used in some share creation</h2>\n<p>It can only used to prevent future share creation to use the curve again. </p>\n<p><a href=\"https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L104-L108\">Market.sol#L104-L108</a></p>\n<h2 id=\"09-changesharecreatorwhitelist-cannot-disable-existing-creators-for-their-already-created-shares\" style=\"position:relative;\"><a href=\"#09-changesharecreatorwhitelist-cannot-disable-existing-creators-for-their-already-created-shares\" aria-label=\"09 changesharecreatorwhitelist cannot disable existing creators for their already created shares permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[09] <code>changeShareCreatorWhitelist()</code> cannot disable existing creators for their already created shares</h2>\n<p>It can only prevent the creator to create more shares in the future. </p>\n<p><a href=\"https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L309-L312\">Market.sol#L309-L312</a></p>\n<h2 id=\"10-all-the-four-functions-buy-sell-mintnft-and-burnnft-call-_splitfees-to-split-the-fees-but-when-sharedata_idtokensincirculation-0-shareholderfee-will-be-added-to-plantformfee\" style=\"position:relative;\"><a href=\"#10-all-the-four-functions-buy-sell-mintnft-and-burnnft-call-_splitfees-to-split-the-fees-but-when-sharedata_idtokensincirculation-0-shareholderfee-will-be-added-to-plantformfee\" aria-label=\"10 all the four functions buy sell mintnft and burnnft call _splitfees to split the fees but when sharedata_idtokensincirculation 0 shareholderfee will be added to plantformfee permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[10] All the four functions <code>buy()</code>, <code>sell()</code>, <code>mintNFT()</code> and <code>burnNFT()</code> call <code>_splitFees()</code> to split the fees, but when <code>shareData[_id].tokensInCirculation ==0</code>, <code>shareHolderFee</code> will be added to <code>plantformFee</code>.</h2>\n<p><a href=\"https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L280-L296\">Market.sol#L280-L296</a></p>\n<p>In this case, a user can front-run these transactions with a <code>buy()</code> to buy a share so that <code>shareData[_id].tokensInCirculation > 0</code> and therefore, effectively be able to steal all such <code>shareHolderFee</code> in these situations.</p>\n<p>Mitigation: Implement a snapshot mechanism for market so that a user can not just suddenly buy shares and enjoy rewards immediately. See ERC20Snapshot for an example:</p>\n<p><a href=\"https://docs.openzeppelin.com/contracts/3.x/api/token/erc20#ERC20Snapshot\">ERC20Snapshot</a></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/106#issuecomment-1832881518\">0xTheC0der (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Although this report lacks formatting and therefore probably didn’t get a high quality tag, its QA findings provide great value. Therefore, it’s selected for report.  </p>\n<p>01: Low. <br>\n02: Non-Critical.<br>\n03: Low.<br>\n04: Non-Critical.<br>\n05: Non-Critical.<br>\n06: Low.<br>\n07: Low.<br>\n08: Non-Critical (possibly undesired, but valid to mention).<br>\n09: Non-Critical (possibly undesired, but valid to mention).<br>\n10: Low.</p>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this audit, 17 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/224\">report highlighted below</a> by <strong>0xVolcano</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/413\">sivanesh_808</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/314\">hunter_w3b</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/202\">mgf15</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/512\">tala7985</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/424\">cheatc0d3</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/418\">JCK</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/409\">0xAnah</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/403\">lsaudit</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/402\">MrPotatoMagic</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/372\">K42</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/358\">0xhex</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/355\">0xta</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/299\">tabriz</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/146\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/20\">100su</a>, and <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/6\">parlayan_yildizlar_takimi</a>.</em></p>\n<h1 id=\"gas-report\" style=\"position:relative;\"><a href=\"#gas-report\" aria-label=\"gas report permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Report</h1>\n<p><strong>Note: The following findings were not found by the bot. For max savings, please implement the changes found by bot.</strong></p>\n<h2 id=\"01-we-can-optimize-the-function-buy-saves-287-gas-from-tests-included\" style=\"position:relative;\"><a href=\"#01-we-can-optimize-the-function-buy-saves-287-gas-from-tests-included\" aria-label=\"01 we can optimize the function buy saves 287 gas from tests included permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[01] We can optimize the function <code>buy()</code>: Saves 287 Gas from tests included</h2>\n<p><a href=\"https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L150-L169\">https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L150-L169</a>\n|        | Min    | Average | Median   | Max   |\n| ------ | --- | ------- | ----- | ----- |\n| Before | 157773 | 157773 | 157773 | 157773 |\n| After  | 157486 | 157486 | 157486 | 157486 |</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Market</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">150</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">buy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">151</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">creator</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Creator cannot buy&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">152</span><span class=\"mtk1\">:        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">price</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">getBuyPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// Reverts for non-existing ID</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">153</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">SafeERC20</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">price</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">156</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardsSinceLastClaim</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getRewardsSinceLastClaim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">157</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Split the fee among holder, creator and platform</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">158</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">_splitFees</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokensInCirculation</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">159</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">rewardsLastClaimedValue</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">shareHolderRewardsPerTokenScaled</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">161</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenCount</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">162</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokensInCirculation</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">163</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">tokensByAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>To get the <code>rewardsSinceLastClaim</code> we call an internal function <code>_getRewardsSinceLastClaim()</code> which has the following implementation:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getRewardsSinceLastClaim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastClaimedValue</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewardsLastClaimedValue</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ((</span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">shareHolderRewardsPerTokenScaled</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">lastClaimedValue</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">tokensByAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">]) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>The internal function reads <code>shareData[_id].shareHolderRewardsPerTokenScaled</code>  and <code>tokensByAddress[_id][msg.sender]</code> which are state variablea and are also being read in the main function. We can avoid making this state read twice by inlining the internal function and caching one call:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/1155tech-contracts/src/Market.sol b/1155tech-contracts/src/Market.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 59c5c96..233d0ce 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/1155tech-contracts/src/Market.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/1155tech-contracts/src/Market.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -153,14 +153,19 @@ contract Market is ERC1155, Ownable2Step {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         SafeERC20.safeTransferFrom(token, msg.sender, address(this), price + fee);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // The reward calculation has to use the old rewards value (pre fee-split) to not include the fees of this buy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // The rewardsLastClaimedValue then needs to be updated with the new value such that the user cannot claim fees of this buy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 rewardsSinceLastClaim = _getRewardsSinceLastClaim(_id);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 lastClaimedValue = rewardsLastClaimedValue[_id][msg.sender];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 _tokensByAddress =  tokensByAddress[_id][msg.sender];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 _shareHolderRewardsPerTokenScaled = shareData[_id].shareHolderRewardsPerTokenScaled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 rewardsSinceLastClaim = ((_shareHolderRewardsPerTokenScaled - lastClaimedValue) * _tokensByAddress) / 1e18;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Split the fee among holder, creator and platform</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        _splitFees(_id, fee, shareData[_id].tokensInCirculation);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        rewardsLastClaimedValue[_id][msg.sender] = shareData[_id].shareHolderRewardsPerTokenScaled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 _tokensInCirculation = shareData[_id].tokensInCirculation;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        _splitFees(_id, fee, _tokensInCirculation);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        rewardsLastClaimedValue[_id][msg.sender] = _shareHolderRewardsPerTokenScaled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         shareData[_id].tokenCount += _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        shareData[_id].tokensInCirculation += _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        tokensByAddress[_id][msg.sender] += _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        shareData[_id].tokensInCirculation = _tokensInCirculation + _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        tokensByAddress[_id][msg.sender] = _tokensByAddress + _amount;</span></span></span></code></pre>\n<h2 id=\"02-we-can-optimize-the-function-sell-saves-234-gas-from-tests-included\" style=\"position:relative;\"><a href=\"#02-we-can-optimize-the-function-sell-saves-234-gas-from-tests-included\" aria-label=\"02 we can optimize the function sell saves 234 gas from tests included permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[02] We can optimize the function <code>sell()</code>: Saves 234 Gas from tests included</h2>\n<p><a href=\"https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L174-L189\">https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L174-L189</a></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Average</th>\n<th>Median</th>\n<th>Max</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>42142</td>\n<td>42142</td>\n<td>42142</td>\n<td>42142</td>\n</tr>\n<tr>\n<td>After</td>\n<td>41908</td>\n<td>41908</td>\n<td>41908</td>\n<td>41908</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Market</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">174</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">sell</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">175</span><span class=\"mtk1\">:        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">price</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">getSellPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">176</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Split the fee among holder, creator and platform</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">177</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">_splitFees</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokensInCirculation</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardsSinceLastClaim</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getRewardsSinceLastClaim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">rewardsLastClaimedValue</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">shareHolderRewardsPerTokenScaled</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokenCount</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokensInCirculation</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">184</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">tokensByAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] -= </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Would underflow if user did not have enough tokens</span></span></span></code></pre>\n<p>To get the <code>rewardsSinceLastClaim</code> we call an internal function <code>_getRewardsSinceLastClaim()</code> which has the following implementation:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getRewardsSinceLastClaim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastClaimedValue</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewardsLastClaimedValue</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ((</span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">shareHolderRewardsPerTokenScaled</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">lastClaimedValue</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">tokensByAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">]) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>The internal function reads <code>shareData[_id].shareHolderRewardsPerTokenScaled</code>  and <code>tokensByAddress[_id][msg.sender]</code> which are state variables and are also being read in the main function. We can avoid making this state read twice by inlining the internal function and caching one call:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/1155tech-contracts/src/Market.sol b/1155tech-contracts/src/Market.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 59c5c96..a73f406 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/1155tech-contracts/src/Market.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/1155tech-contracts/src/Market.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -176,12 +176,17 @@ contract Market is ERC1155, Ownable2Step {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Split the fee among holder, creator and platform</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _splitFees(_id, fee, shareData[_id].tokensInCirculation);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // The user also gets the rewards of his own sale (which is not the case for buys)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 rewardsSinceLastClaim = _getRewardsSinceLastClaim(_id);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        rewardsLastClaimedValue[_id][msg.sender] = shareData[_id].shareHolderRewardsPerTokenScaled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 lastClaimedValue = rewardsLastClaimedValue[_id][msg.sender];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 _tokensByAddress = tokensByAddress[_id][msg.sender];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 _shareHolderRewardsPerTokenScaled = shareData[_id].shareHolderRewardsPerTokenScaled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 rewardsSinceLastClaim = ((_shareHolderRewardsPerTokenScaled - lastClaimedValue) * _tokensByAddress) / 1e18;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        rewardsLastClaimedValue[_id][msg.sender] = _shareHolderRewardsPerTokenScaled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         shareData[_id].tokenCount -= _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         shareData[_id].tokensInCirculation -= _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        tokensByAddress[_id][msg.sender] -= _amount; // Would underflow if user did not have enough tokens</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        tokensByAddress[_id][msg.sender] = _tokensByAddress - _amount; // Would underflow if user did not have enough tokens</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Send the funds to the user</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         SafeERC20.safeTransfer(token, msg.sender, rewardsSinceLastClaim + price - fee);</span></span></span></code></pre>\n<h2 id=\"03-we-can-optimize-the-function-mintnft-saves-215-gas-from-tests-included\" style=\"position:relative;\"><a href=\"#03-we-can-optimize-the-function-mintnft-saves-215-gas-from-tests-included\" aria-label=\"03 we can optimize the function mintnft saves 215 gas from tests included permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[03] We can optimize the function <code>mintNFT()</code>: Saves 215 Gas from tests included</h2>\n<p><a href=\"https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L203-L221\">https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L203-L221</a></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Average</th>\n<th>Median</th>\n<th>Max</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>68280</td>\n<td>68280</td>\n<td>68280</td>\n<td>68280</td>\n</tr>\n<tr>\n<td>After</td>\n<td>68065</td>\n<td>68065</td>\n<td>68065</td>\n<td>68065</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Market</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">203</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">mintNFT</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">204</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getNFTMintingPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">206</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">SafeERC20</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">207</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">_splitFees</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokensInCirculation</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">208</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// The user also gets the proportional rewards for the minting</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">209</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardsSinceLastClaim</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getRewardsSinceLastClaim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">210</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">rewardsLastClaimedValue</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">shareHolderRewardsPerTokenScaled</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">211</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">tokensByAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] -= </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">212</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokensInCirculation</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>To get the <code>rewardsSinceLastClaim</code> we call an internal function <code>_getRewardsSinceLastClaim()</code> which has the following implementation:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getRewardsSinceLastClaim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastClaimedValue</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewardsLastClaimedValue</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ((</span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">shareHolderRewardsPerTokenScaled</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">lastClaimedValue</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">tokensByAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">]) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>The internal function reads <code>shareData[_id].shareHolderRewardsPerTokenScaled</code> and <code>tokensByAddress[_id][msg.sender])</code> which are state variables which are also being read in the main function. We can avoid making this state reads twice by inlining the internal function and caching one call:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/1155tech-contracts/src/Market.sol b/1155tech-contracts/src/Market.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 59c5c96..fc85039 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/1155tech-contracts/src/Market.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/1155tech-contracts/src/Market.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -206,9 +206,14 @@ contract Market is ERC1155, Ownable2Step {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         SafeERC20.safeTransferFrom(token, msg.sender, address(this), fee);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _splitFees(_id, fee, shareData[_id].tokensInCirculation);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // The user also gets the proportional rewards for the minting</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 rewardsSinceLastClaim = _getRewardsSinceLastClaim(_id);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        rewardsLastClaimedValue[_id][msg.sender] = shareData[_id].shareHolderRewardsPerTokenScaled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        tokensByAddress[_id][msg.sender] -= _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 lastClaimedValue = rewardsLastClaimedValue[_id][msg.sender];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 _tokensByAddress = tokensByAddress[_id][msg.sender];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 _shareHolderRewardsPerTokenScaled = shareData[_id].shareHolderRewardsPerTokenScaled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 rewardsSinceLastClaim =((_shareHolderRewardsPerTokenScaled - lastClaimedValue) * _tokensByAddress) /1e18;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        rewardsLastClaimedValue[_id][msg.sender] = _shareHolderRewardsPerTokenScaled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        tokensByAddress[_id][msg.sender] = _tokensByAddress - _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         shareData[_id].tokensInCirculation -= _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _mint(msg.sender, _id, _amount, &quot;&quot;);</span></span></span></code></pre>\n<h2 id=\"04-we-can-optimize-the-function-burnnft-saves-230-gas-from-tests-included\" style=\"position:relative;\"><a href=\"#04-we-can-optimize-the-function-burnnft-saves-230-gas-from-tests-included\" aria-label=\"04 we can optimize the function burnnft saves 230 gas from tests included permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[04] We can optimize the function <code>burnNFT()</code>: Saves 230 Gas from tests included</h2>\n<p><a href=\"https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L226-L241\">https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L226-L241</a></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Average</th>\n<th>Median</th>\n<th>Max</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>49135</td>\n<td>49135</td>\n<td>49135</td>\n<td>49135</td>\n</tr>\n<tr>\n<td>After</td>\n<td>48905</td>\n<td>48905</td>\n<td>48905</td>\n<td>48905</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Market</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">226</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">burnNFT</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">227</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getNFTMintingPrice</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">229</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">SafeERC20</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">230</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">_splitFees</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">, </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokensInCirculation</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">232</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardsSinceLastClaim</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getRewardsSinceLastClaim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">233</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">rewardsLastClaimedValue</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">shareHolderRewardsPerTokenScaled</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">234</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">tokensByAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] += </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">235</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">tokensInCirculation</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">236</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">238</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">SafeERC20</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rewardsSinceLastClaim</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">239</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// ERC1155 already logs, but we add this to have the price information</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">240</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NFTsBurned</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">fee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">241</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p>We can call the internal function  <code>_getRewardsSinceLastClaim()</code> which has the following implementation:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getRewardsSinceLastClaim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastClaimedValue</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewardsLastClaimedValue</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ((</span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">shareHolderRewardsPerTokenScaled</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">lastClaimedValue</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">tokensByAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">]) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>The internal function reads <code>shareData[_id].shareHolderRewardsPerTokenScaled</code>, which is a state variable which is also being read in the main function. We also read <code>tokensByAddress[_id][msg.sender]</code> in the main function as well as in the internal function:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/1155tech-contracts/src/Market.sol b/1155tech-contracts/src/Market.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 59c5c96..7f3c5e1 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/1155tech-contracts/src/Market.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/1155tech-contracts/src/Market.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -229,10 +229,18 @@ contract Market is ERC1155, Ownable2Step {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         SafeERC20.safeTransferFrom(token, msg.sender, address(this), fee);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _splitFees(_id, fee, shareData[_id].tokensInCirculation);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // The user does not get the proportional rewards for the burning (unless they have additional tokens that are not in the NFT)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 rewardsSinceLastClaim = _getRewardsSinceLastClaim(_id);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        rewardsLastClaimedValue[_id][msg.sender] = shareData[_id].shareHolderRewardsPerTokenScaled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        tokensByAddress[_id][msg.sender] += _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        shareData[_id].tokensInCirculation += _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 lastClaimedValue = rewardsLastClaimedValue[_id][msg.sender];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 _tokensByAddress = tokensByAddress[_id][msg.sender];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 _shareHolderRewardsPerTokenScaled = shareData[_id].shareHolderRewardsPerTokenScaled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 rewardsSinceLastClaim =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            ((_shareHolderRewardsPerTokenScaled - lastClaimedValue) * _tokensByAddress) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            1e18;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        rewardsLastClaimedValue[_id][msg.sender] = _shareHolderRewardsPerTokenScaled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        tokensByAddress[_id][msg.sender] = _tokensByAddress + _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        shareData[_id].tokensInCirculation +=  _amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _burn(msg.sender, _id, _amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         SafeERC20.safeTransfer(token, msg.sender, rewardsSinceLastClaim);</span></span></span></code></pre>\n<h2 id=\"05-we-can-optimize-the-function-claimholderfee\" style=\"position:relative;\"><a href=\"#05-we-can-optimize-the-function-claimholderfee\" aria-label=\"05 we can optimize the function claimholderfee permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[05] We can optimize the function <code>claimHolderFee()</code></h2>\n<p><strong>This is not covered by tests, so no gas benchmarks.</strong></p>\n<p><a href=\"https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L263-L270\">https://github.com/code-423n4/2023-11-canto/blob/335930cd53cf9a137504a57f1215be52c6d67cb3/1155tech-contracts/src/Market.sol#L263-L270</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: /</span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Market</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">263</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claimHolderFee</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">264</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getRewardsSinceLastClaim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">265</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">rewardsLastClaimedValue</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">shareHolderRewardsPerTokenScaled</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">266</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">267</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">SafeERC20</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">268</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">269</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">HolderFeeClaimed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">270</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<p>To get the <code>amount</code> we call an internal function <code>_getRewardsSinceLastClaim()</code> which has the following implementation:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getRewardsSinceLastClaim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastClaimedValue</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewardsLastClaimedValue</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ((</span><span class=\"mtk12\">shareData</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">].</span><span class=\"mtk12\">shareHolderRewardsPerTokenScaled</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">lastClaimedValue</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">tokensByAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_id</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">]) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>The internal function reads <code>shareData[_id].shareHolderRewardsPerTokenScaled</code>, which is a state variable which is also being read in the main function. We can avoid making this state read twice by inlining the internal function and caching one call:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function claimHolderFee(uint256 _id) external {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 amount = _getRewardsSinceLastClaim(_id);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        rewardsLastClaimedValue[_id][msg.sender] = shareData[_id].shareHolderRewardsPerTokenScaled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 lastClaimedValue = rewardsLastClaimedValue[_id][msg.sender];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 _shareHolderRewardsPerTokenScaled = shareData[_id].shareHolderRewardsPerTokenScaled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 amount = ((_shareHolderRewardsPerTokenScaled - lastClaimedValue) * tokensByAddress[_id][msg.sender]) /1e18;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        rewardsLastClaimedValue[_id][msg.sender] = _shareHolderRewardsPerTokenS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">caled;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (amount &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             SafeERC20.safeTransfer(token, msg.sender, amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/224#issuecomment-1827454889\">OpenCoreCH (Canto) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/224#issuecomment-1832601386\">0xTheC0der (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Chosen for report due to extensive and well-presented optimization on a per-method level, while providing valuable before/after comparisons.</p>\n</blockquote>\n<hr>\n<h1 id=\"audit-analysis\" style=\"position:relative;\"><a href=\"#audit-analysis\" aria-label=\"audit analysis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Audit Analysis</h1>\n<p>For this audit, 17 analysis reports were submitted by wardens. An analysis report examines the codebase as a whole, providing observations and advice on such topics as architecture, mechanism, or approach. The <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/514\">report highlighted below</a> by <strong>0xSmartContract</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/461\">MrPotatoMagic</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/357\">Bauchibred</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/502\">clara</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/476\">aariiif</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/463\">hunter_w3b</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/439\">Sathish9098</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/437\">0xepley</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/415\">Kose</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/404\">unique</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/393\">K42</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/364\">emerald7017</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/359\">cats</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/346\">fouzantanveer</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/291\">0xbrett8571</a>, <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/81\">invitedtea</a>, and <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/63\">Myd</a>.</em></p>\n<h2 id=\"analysis---canto-protocol\" style=\"position:relative;\"><a href=\"#analysis---canto-protocol\" aria-label=\"analysis   canto protocol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Analysis - Canto Protocol</h2>\n<h2 id=\"summary-1\" style=\"position:relative;\"><a href=\"#summary-1\" aria-label=\"summary 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Title</th>\n<th align=\"left\">Details</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">The approach I followed when reviewing the code</td>\n<td align=\"left\">Stages in my code review and analysis.</td>\n</tr>\n<tr>\n<td align=\"left\">Analysis of the code base</td>\n<td align=\"left\">What is unique? How are the existing patterns used? “Solidity-metrics” were used.</td>\n</tr>\n<tr>\n<td align=\"left\">Test analysis</td>\n<td align=\"left\">Test scope of the project and quality of tests.</td>\n</tr>\n<tr>\n<td align=\"left\">Security Approach of the Project</td>\n<td align=\"left\">Audit approach of the Project.</td>\n</tr>\n<tr>\n<td align=\"left\">Other Audit Reports and Automated Findings</td>\n<td align=\"left\">What are the previous Audit reports and their analysis.</td>\n</tr>\n<tr>\n<td align=\"left\">Packages and Dependencies Analysis</td>\n<td align=\"left\">Details about the project Packages.</td>\n</tr>\n<tr>\n<td align=\"left\">Gas Optimization</td>\n<td align=\"left\">Gas usage approach of the project and alternative solutions to it.</td>\n</tr>\n<tr>\n<td align=\"left\">Other recommendations</td>\n<td align=\"left\">What is unique? How are the existing patterns used?</td>\n</tr>\n<tr>\n<td align=\"left\">New insights and learning from this audit</td>\n<td align=\"left\">Things learned from the project.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"the-approach-i-followed-when-reviewing-the-code\" style=\"position:relative;\"><a href=\"#the-approach-i-followed-when-reviewing-the-code\" aria-label=\"the approach i followed when reviewing the code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The approach I followed when reviewing the code</h2>\n<p>First, by examining the scope of the code, I determined my code review and analysis strategy. Accordingly, I analyzed and audited the subject in the following steps:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Stage</th>\n<th align=\"left\">Details</th>\n<th align=\"left\">Information</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Compile and Run Test</td>\n<td align=\"left\"><a href=\"https://github.com/code-423n4/2023-11-canto#tests\">Installation</a></td>\n<td align=\"left\">Test and installation structure is simple, cleanly designed.</td>\n</tr>\n<tr>\n<td align=\"left\">Architecture Review</td>\n<td align=\"left\"><a href=\"https://docs.canto.io/free-public-infrastructure-fpi/note\">Canto</a></td>\n<td align=\"left\">Provides a basic architectural teaching for General Architecture.</td>\n</tr>\n<tr>\n<td align=\"left\">Graphical Analysis</td>\n<td align=\"left\">Graphical Analysis with <a href=\"https://github.com/ConsenSys/solidity-metrics\">Solidity-metrics</a></td>\n<td align=\"left\">A visual view has been made to dominate the general structure of the codes of the project.</td>\n</tr>\n<tr>\n<td align=\"left\">Slither Analysis</td>\n<td align=\"left\"><a href=\"https://github.com/crytic/slither\">Slither Report</a></td>\n<td align=\"left\">The project does not currently have a slither result, a slither control was created from scratch.</td>\n</tr>\n<tr>\n<td align=\"left\">Test Suits</td>\n<td align=\"left\"><a href=\"https://github.com/code-423n4/2023-11-canto#tests\">Tests</a></td>\n<td align=\"left\">In this section, the scope and content of the tests of the project are analyzed.</td>\n</tr>\n<tr>\n<td align=\"left\">Manual Code Review</td>\n<td align=\"left\"><a href=\"https://github.com/code-423n4/2023-11-canto#scoping-details\">Scope</a></td>\n<td align=\"left\">N/A</td>\n</tr>\n<tr>\n<td align=\"left\">Infographic</td>\n<td align=\"left\"><a href=\"https://www.figma.com/\">Figma</a></td>\n<td align=\"left\">I made Visual drawings to understand the hard-to-understand mechanisms.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"analysis-of-the-code-base\" style=\"position:relative;\"><a href=\"#analysis-of-the-code-base\" aria-label=\"analysis of the code base permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Analysis of the code base</h2>\n<p>The most important summary in analyzing the code base is the stacking of codes to be analyzed.</p>\n<p>In this way, many predictions can be made; including the difficulty levels of the contracts, which one is more important for the auditor, the features they contain that are important for security (payable functions, uses assembly, etc.), the audit cost of the project, and the time to be allocated to the audit.</p>\n<p>Uses Consensys Solidity Metrics:</p>\n<ul>\n<li><strong>Lines:</strong> total lines of the source unit.</li>\n<li><strong>nLines:</strong> normalized lines of the source unit (e.g. normalizes functions spanning multiple lines).</li>\n<li><strong>nSLOC:</strong> normalized source lines of code (only source-code lines; no comments, no blank lines).</li>\n<li><strong>Comment Lines:</strong> lines containing single or block comments.</li>\n<li><strong>Complexity Score:</strong> a custom complexity score derived from code statements that are known to introduce code complexity (branches, loops, calls, external interfaces, …).</li>\n</ul>\n<p><em>For the image provided, please refer to the <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/514\">original submission</a>.</em></p>\n<h3 id=\"marketsol\" style=\"position:relative;\"><a href=\"#marketsol\" aria-label=\"marketsol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Market.sol:</h3>\n<ul>\n<li>Function <code>createNewShare()</code> - Creates a new share.<br></li>\n<li>Function <code>buy()</code> - Buy amount of tokens for a given share ID.<br></li>\n<li>Function <code>sell()</code> - Sell amount of tokens for a given share ID.<br></li>\n<li>Function <code>mint()</code> / function <code>burn()</code></li>\n</ul>\n<p><em>For images provided, please refer to the <a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/514\">original submission</a>.</em></p>\n<h2 id=\"test-analysis\" style=\"position:relative;\"><a href=\"#test-analysis\" aria-label=\"test analysis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test analysis</h2>\n<p>What did the project do differently? It can be said that the developers of the project did a quality job, there is a test structure consisting of tests with quality content. Especially the test coverage of Market.sol is very successful.</p>\n<p>Market.sol smart contract test file:</p>\n<ol>\n<li>\n<p>Bonding Curve Operations:</p>\n<ul>\n<li><code>testChangeBondingCurveAllowed</code>: This test checks if a bonding curve can be whitelisted or removed correctly. It verifies the correct listing and delisting using <code>assertTrue</code> and <code>assertFalse</code>.</li>\n<li><code>testFailChangeBondingCurveAllowedNonOwner</code>: This test confirms that only the contract owner can change the bonding curve. A non-owner account is used with <code>vm.prank</code>, and the expected revert is checked.</li>\n<li><code>testFailCreateNewShareWhenBondingCurveNotWhitelisted</code>: It verifies that a new share cannot be created when a bonding curve is not whitelisted.</li>\n</ul>\n</li>\n<li>\n<p>Share Creation and Pricing:</p>\n<ul>\n<li><code>testCreateNewShare</code>: Tests whether a new share can be created with a whitelisted bonding curve.</li>\n<li><code>testGetBuyPrice</code>: Checks if the buy price and fee for the created share are calculated correctly.</li>\n</ul>\n</li>\n<li>\n<p>Buying and Selling Operations:</p>\n<ul>\n<li><code>testBuy</code>: Tests the purchase of a share and verifies the related processes (token approval, balance updates).</li>\n<li><code>testSell</code>: Tests the sale of a purchased share and its related transactions.</li>\n</ul>\n</li>\n<li>\n<p>NFT Minting and Burning:</p>\n<ul>\n<li><code>testMint</code>: Tests the minting of an NFT and subsequent balance updates.</li>\n<li><code>testBurn</code>: Verifies the burning of the minted NFT and associated balance updates.</li>\n</ul>\n</li>\n<li>\n<p>Fee Claims:</p>\n<ul>\n<li><code>claimCreatorFeeNonCreator</code>: Tests the rejection of a fee claim attempt by a non-creator account.</li>\n<li><code>claimCreator</code>: Confirms that the creator can claim their deserved fee.</li>\n<li><code>claimPlatform</code>: Tests the accurate calculation and claiming of platform fees.</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"security-approach-of-the-project\" style=\"position:relative;\"><a href=\"#security-approach-of-the-project\" aria-label=\"security approach of the project permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Security Approach of the Project</h2>\n<h3 id=\"successful-current-security-understanding-of-the-project\" style=\"position:relative;\"><a href=\"#successful-current-security-understanding-of-the-project\" aria-label=\"successful current security understanding of the project permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Successful current security understanding of the project</h3>\n<p>First they managed the 1st audit process with Code4rena. In addition, the Canto platform has had continuous audits at every stage by an auditing company such as Code4rena, which shows how much importance they attach to auditing.</p>\n<h3 id=\"what-the-project-should-add-in-the-understanding-of-security\" style=\"position:relative;\"><a href=\"#what-the-project-should-add-in-the-understanding-of-security\" aria-label=\"what the project should add in the understanding of security permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What the project should add in the understanding of Security?</h3>\n<ol>\n<li>By distributing the project to testnets, this ensures that the audits are carried out in onchain audit (this will increase coverage).</li>\n<li>After the project is published on the mainnet, there should be emergency action plans (not found in the documents).</li>\n<li>\n<p>Add On-Chain Monitoring System; If On-Chain Monitoring systems, such as Forta, are added to the project, security will increase.</p>\n<p>For example, this <a href=\"https://app.forta.network/bot/0x7f9afc392329ed5a473bcf304565adf9c2588ba4bc060f7d215519005b8303e3\">bot</a> tracks any DEFI transactions in which wrapping, unwrapping, swapping, depositing, or withdrawals occur over a threshold amount. If transactions occur with unusually high token amounts, the bot sends out an alert. </p>\n</li>\n<li>After the Code4rena audit is completed and the project is live, I recommend the audit process to continue. </li>\n</ol>\n<h2 id=\"packages-and-dependencies-analysis\" style=\"position:relative;\"><a href=\"#packages-and-dependencies-analysis\" aria-label=\"packages and dependencies analysis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Packages and Dependencies Analysis</h2>\n<table>\n<thead>\n<tr>\n<th>Package</th>\n<th>Version</th>\n<th>Usage in the project</th>\n<th>Audit Recommendation</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.npmjs.com/package/@openzeppelin/contracts\"><code>openzeppelin</code></a></td>\n<td><a href=\"https://www.npmjs.com/package/@openzeppelin/contracts\">npm v5.0.1</a></td>\n<td>Ownable2Step.sol, SafeERC20.sol, ERC1155.sol</td>\n<td>Version <code>4.9.0</code> is used by the project. It is recommended to use the newest version <code>5.0.0</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"other-recommendations\" style=\"position:relative;\"><a href=\"#other-recommendations\" aria-label=\"other recommendations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Other recommendations</h2>\n<ol>\n<li>The use of assembly in project codes is very low. I especially recommend using such useful and gas-optimized <a href=\"https://github.com/dragonfly-xyz/useful-solidity-patterns/tree/main/patterns/assembly-tricks-1\">code patterns</a>.</li>\n<li>It is seen that the latest versions of imported important libraries, such as Openzeppelin, are not used in the project codes, it should be noted. See <a href=\"https://security.snyk.io/package/npm/@openzeppelin%2Fcontracts/\">here</a>.</li>\n<li>A good model can be used to systematically assess the risk of the project, for example <a href=\"https://www.notion.so/Smart-Contract-Risk-Assessment-3b067bc099ce4c31a35ef28b011b92ff#7770b3b385444779bf11e677f16e101e\">this modeling</a> is recommended.</li>\n</ol>\n<h2 id=\"new-insights-and-learning-from-this-audit\" style=\"position:relative;\"><a href=\"#new-insights-and-learning-from-this-audit\" aria-label=\"new insights and learning from this audit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>New insights and learning from this audit</h2>\n<ol>\n<li><strong>Overview of Application Specific Dollar (asD)</strong>: asD is an innovative protocol allowing anyone to create stablecoins pegged to 1 NOTE. The unique aspect is that all yield generated goes to the creator of the stablecoin. This feature distinguishes asD from other stablecoin protocols, offering a novel way for creators to benefit from their creations.</li>\n<li><strong><code>asDFactory</code></strong>: The <code>asDFactory</code> is a specialized tool for creating new asD tokens. It uniquely allows the creation of tokens with non-unique names and symbols, broadening accessibility. The <code>isAsD</code> mapping is a critical feature for integrating contracts to recognize legitimate asD tokens. This inclusivity in token creation and verification is a distinct learning point.</li>\n<li><strong>Minting and Burning in asD</strong>: Minting in asD requires an equivalent amount of NOTE, which is then deposited into the Canto Lending Market (CLM). This process of converting to cNOTE is a crucial learning aspect. Burning asD tokens allows users to retrieve the corresponding NOTE, providing a clear 1:1 exchange mechanism. The withdrawal of accrued interest by the creator without affecting the exchange rate presents a unique financial model.</li>\n<li><strong>1155tech Protocol</strong>: 1155tech introduces a flexible system for creating shares with various bonding curves, currently supporting a linear model. The division of sale fees among creators, platform, and holders introduces a balanced economic model. The ability to mint and burn ERC1155 tokens for a fee based on current prices adds a layer of complexity and opportunity for users, distinguishing it from other token models.</li>\n<li><strong>Creating, Buying, Selling, and Claiming in 1155tech</strong>: Share creation in 1155tech can be either permissionless or restricted, offering a versatile approach to share management. The automatic claiming of token holder rewards during buy/sell actions ensures fair distribution and incentivization. The selling process includes fee deduction, highlighting the need for sustainable fee structures. The specific functions for claiming various fees (platform, holder, creator) demonstrate a detailed and equitable fee distribution system.</li>\n</ol>\n<h3 id=\"time-spent\" style=\"position:relative;\"><a href=\"#time-spent\" aria-label=\"time spent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Time spent</h3>\n<p>14 hours</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/514#issuecomment-1827459939\">OpenCoreCH (Canto) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-11-canto-findings/issues/514#issuecomment-1832690599\">0xTheC0der (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Selected for report due to graphs showing the underlying calls of the protocol’s main entry points.</p>\n</blockquote>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Audits incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Audit submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-1\">High Risk Findings (1)</a></p>\n<ul>\n<li><a href=\"#h-01-owner-cannot-withdraw-all-interest-due-to-wrong-calculation-of-accrued-interest-in-withdrawcarry\">[H-01] Owner cannot withdraw all interest due to wrong calculation of accrued interest in <code>WithdrawCarry</code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-2\">Medium Risk Findings (2)</a></p>\n<ul>\n<li><a href=\"#m-01-no-slippage-protection-for-market-functions\">[M-01] No slippage protection for Market functions</a></li>\n<li><a href=\"#m-02-users-will-lose-rewards-when-buying-new-tokens-if-they-already-own-some-tokens\">[M-02] Users will lose rewards when buying new tokens if they already own some tokens</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#01-check-whether-rewardssincelastclaim--price---fee--0-in-function-sell\">01 Check whether <code>rewardsSinceLastClaim + price - fee == 0</code> in function <code>sell()</code></a></li>\n<li><a href=\"#02-asdfactorycreate-does-not-prevent-that-two-asd-contracts-might-have-the-same-name-and-symbol\">02 <code>asDFactory.create()</code> does not prevent that two <code>asD</code> contracts might have the same name and symbol.</a></li>\n<li><a href=\"#03-getpriceandfee-has-the-issue-of-division-precision-loss-issue\">03 <code>getPriceAndFee()</code> has the issue of division precision loss issue</a></li>\n<li><a href=\"#04-it-is-better-to-check-amount--0-to-avoid-false-event-emit\">04 It is better to check <code>amount > 0</code> to avoid false event emit</a></li>\n<li><a href=\"#05-the-event-emitting-should-be-inside-the-if-statement-to-avoid-false-event-emitting\">05 The event emitting should be inside the if statement to avoid false event emitting</a></li>\n<li><a href=\"#06-we-need-to-emit-an-event-for-this-function\">06 We need to emit an event for this function</a></li>\n<li><a href=\"#07-both-mintnft-and-burnnft-lacks-slippage-control-for-the-fee\">07 Both <code>mintNFT()</code> and <code>burnNFT()</code> lacks slippage control for the fee</a></li>\n<li><a href=\"#08-the-function-changebondingcurveallowed-will-not-be-able-to-disable-previously-boundcurves-that-have-been-used-in-some-share-creation\">08 The function <code>changeBondingCurveAllowed()</code> will not be able to disable previously boundcurves that have been used in some share creation</a></li>\n<li><a href=\"#09-changesharecreatorwhitelist-cannot-disable-existing-creators-for-their-already-created-shares\">09 <code>changeShareCreatorWhitelist()</code> cannot disable existing creators for their already created shares</a></li>\n<li><a href=\"#10-all-the-four-functions-buy-sell-mintnft-and-burnnft-call-_splitfees-to-split-the-fees-but-when-sharedata_idtokensincirculation-0-shareholderfee-will-be-added-to-plantformfee\">10 All the four functions <code>buy()</code>, <code>sell()</code>, <code>mintNFT()</code> and <code>burnNFT()</code> call <code>_splitFees()</code> to split the fees, but when <code>shareData[_id].tokensInCirculation ==0</code>, <code>shareHolderFee</code> will be added to <code>plantformFee</code>.</a></li>\n</ul>\n</li>\n<li><a href=\"#gas-optimizations\">Gas Optimizations</a></li>\n<li>\n<p><a href=\"#gas-report\">Gas Report</a></p>\n<ul>\n<li><a href=\"#01-we-can-optimize-the-function-buy-saves-287-gas-from-tests-included\">01 We can optimize the function <code>buy()</code>: Saves 287 Gas from tests included</a></li>\n<li><a href=\"#02-we-can-optimize-the-function-sell-saves-234-gas-from-tests-included\">02 We can optimize the function <code>sell()</code>: Saves 234 Gas from tests included</a></li>\n<li><a href=\"#03-we-can-optimize-the-function-mintnft-saves-215-gas-from-tests-included\">03 We can optimize the function <code>mintNFT()</code>: Saves 215 Gas from tests included</a></li>\n<li><a href=\"#04-we-can-optimize-the-function-burnnft-saves-230-gas-from-tests-included\">04 We can optimize the function <code>burnNFT()</code>: Saves 230 Gas from tests included</a></li>\n<li><a href=\"#05-we-can-optimize-the-function-claimholderfee\">05 We can optimize the function <code>claimHolderFee()</code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#audit-analysis\">Audit Analysis</a></p>\n<ul>\n<li><a href=\"#analysis---canto-protocol\">Analysis - Canto Protocol</a></li>\n<li><a href=\"#summary-1\">Summary</a></li>\n<li><a href=\"#the-approach-i-followed-when-reviewing-the-code\">The approach I followed when reviewing the code</a></li>\n<li><a href=\"#analysis-of-the-code-base\">Analysis of the code base</a></li>\n<li><a href=\"#test-analysis\">Test analysis</a></li>\n<li><a href=\"#security-approach-of-the-project\">Security Approach of the Project</a></li>\n<li><a href=\"#packages-and-dependencies-analysis\">Packages and Dependencies Analysis</a></li>\n<li><a href=\"#other-recommendations\">Other recommendations</a></li>\n<li><a href=\"#new-insights-and-learning-from-this-audit\">New insights and learning from this audit</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}